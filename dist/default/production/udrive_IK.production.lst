

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Apr 15 22:43:45 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK4,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	stringtext11,global,class=STRCODE,delta=2
    20                           	psect	stringtext12,global,class=STRCODE,delta=2
    21                           	psect	stringtext13,global,class=STRCODE,delta=2
    22                           	psect	stringtext14,global,class=STRCODE,delta=2
    23                           	psect	stringtext15,global,class=STRCODE,delta=2
    24                           	psect	stringtext16,global,class=STRCODE,delta=2
    25                           	psect	stringtext17,global,class=STRCODE,delta=2
    26                           	psect	stringtext18,global,class=STRCODE,delta=2
    27                           	psect	stringtext19,global,class=STRCODE,delta=2
    28                           	psect	stringtext20,global,class=STRCODE,delta=2
    29                           	psect	stringtext21,global,class=STRCODE,delta=2
    30                           	psect	stringtext22,global,class=STRCODE,delta=2
    31                           	psect	stringtext23,global,class=STRCODE,delta=2
    32                           	psect	stringtext24,global,class=STRCODE,delta=2
    33                           	psect	stringtext25,global,class=STRCODE,delta=2
    34                           	psect	stringtext26,global,class=STRCODE,delta=2
    35                           	psect	stringtext27,global,class=STRCODE,delta=2
    36                           	psect	stringtext28,global,class=STRCODE,delta=2
    37                           	psect	stringtext29,global,class=STRCODE,delta=2
    38                           	psect	stringtext30,global,class=STRCODE,delta=2
    39                           	psect	stringtext31,global,class=STRCODE,delta=2
    40                           	psect	stringtext32,global,class=STRCODE,delta=2
    41                           	psect	stringtext33,global,class=STRCODE,delta=2
    42                           	psect	stringtext34,global,class=STRCODE,delta=2
    43                           	psect	stringtext35,global,class=STRCODE,delta=2
    44                           	psect	stringtext36,global,class=STRCODE,delta=2
    45                           	psect	stringtext37,global,class=STRCODE,delta=2
    46                           	psect	stringtext38,global,class=STRCODE,delta=2
    47                           	psect	stringtext39,global,class=STRCODE,delta=2
    48                           	psect	stringtext40,global,class=STRCODE,delta=2
    49                           	psect	stringtext41,global,class=STRCODE,delta=2
    50                           	psect	stringtext42,global,class=STRCODE,delta=2
    51                           	psect	stringtext43,global,class=STRCODE,delta=2
    52                           	psect	stringtext44,global,class=STRCODE,delta=2
    53                           	psect	stringtext45,global,class=STRCODE,delta=2
    54                           	psect	stringtext46,global,class=STRCODE,delta=2
    55                           	psect	stringtext47,global,class=STRCODE,delta=2
    56                           	psect	stringtext48,global,class=STRCODE,delta=2
    57                           	psect	stringtext49,global,class=STRCODE,delta=2
    58                           	psect	stringtext50,global,class=STRCODE,delta=2
    59                           	psect	stringtext51,global,class=STRCODE,delta=2
    60                           	psect	stringtext52,global,class=STRCODE,delta=2
    61                           	psect	stringtext53,global,class=STRCODE,delta=2
    62                           	psect	stringtext54,global,class=STRCODE,delta=2
    63                           	psect	stringtext55,global,class=STRCODE,delta=2
    64                           	psect	stringtext56,global,class=STRCODE,delta=2
    65                           	psect	stringtext57,global,class=STRCODE,delta=2
    66                           	psect	stringtext58,global,class=STRCODE,delta=2
    67                           	psect	cinit,global,class=CODE,merge=1,delta=2
    68                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    69                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    70                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    71                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    72                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    73                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    74                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    75                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    76                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    77                           	psect	inittext,global,class=CODE,delta=2
    78                           	psect	clrtext,global,class=CODE,delta=2
    79                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    80                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    81                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    82                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    83                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    84                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    85                           	psect	text1,local,class=CODE,merge=1,delta=2
    86                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text11,local,class=CODE,merge=1,delta=2
    96                           	psect	text12,local,class=CODE,merge=1,delta=2
    97                           	psect	swtext1,local,class=CONST,delta=2
    98                           	psect	text13,local,class=CODE,merge=1,delta=2
    99                           	psect	text14,local,class=CODE,merge=1,delta=2
   100                           	psect	text15,local,class=CODE,merge=1,delta=2
   101                           	psect	text16,local,class=CODE,merge=1,delta=2
   102                           	psect	text17,local,class=CODE,merge=1,delta=2
   103                           	psect	text18,local,class=CODE,merge=1,delta=2
   104                           	psect	text19,local,class=CODE,merge=1,delta=2
   105                           	psect	text20,local,class=CODE,merge=1,delta=2
   106                           	psect	text21,local,class=CODE,merge=1,delta=2
   107                           	psect	text22,local,class=CODE,merge=1,delta=2
   108                           	psect	text23,local,class=CODE,merge=1,delta=2
   109                           	psect	text24,local,class=CODE,merge=1,delta=2
   110                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text26,local,class=CODE,merge=1,delta=2
   112                           	psect	text27,local,class=CODE,merge=1,delta=2
   113                           	psect	text28,local,class=CODE,merge=1,delta=2
   114                           	psect	text29,local,class=CODE,merge=1,delta=2
   115                           	psect	text30,local,class=CODE,merge=1,delta=2
   116                           	psect	text31,local,class=CODE,merge=1,delta=2
   117                           	psect	text32,local,class=CODE,merge=1,delta=2
   118                           	psect	text33,local,class=CODE,merge=1,delta=2
   119                           	psect	text34,local,class=CODE,merge=1,delta=2
   120                           	psect	text35,local,class=CODE,merge=1,delta=2
   121                           	psect	text36,local,class=CODE,merge=1,delta=2
   122                           	psect	text37,local,class=CODE,merge=1,delta=2
   123                           	psect	text38,local,class=CODE,merge=1,delta=2
   124                           	psect	text39,local,class=CODE,merge=1,delta=2
   125                           	psect	text40,local,class=CODE,merge=1,delta=2
   126                           	psect	text41,local,class=CODE,merge=1,delta=2
   127                           	psect	text42,local,class=CODE,merge=1,delta=2
   128                           	psect	text43,local,class=CODE,merge=1,delta=2
   129                           	psect	text44,local,class=CODE,merge=1,delta=2
   130                           	psect	text45,local,class=CODE,merge=1,delta=2
   131                           	psect	text46,local,class=CODE,merge=1,delta=2
   132                           	psect	text47,local,class=CODE,merge=1,delta=2
   133                           	psect	text48,local,class=CODE,merge=1,delta=2
   134                           	psect	text49,local,class=CODE,merge=1,delta=2
   135                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   136                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
   137                           	psect	text52,local,class=CODE,merge=1,delta=2
   138                           	psect	text53,local,class=CODE,merge=1,delta=2
   139                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
   140                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
   141                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
   142                           	psect	text57,local,class=CODE,merge=1,delta=2
   143                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
   144                           	psect	text59,local,class=CODE,merge=1,delta=2
   145                           	psect	text60,local,class=CODE,merge=1,delta=2
   146                           	psect	text61,local,class=CODE,merge=1,delta=2
   147                           	psect	text62,local,class=CODE,merge=1,delta=2
   148                           	psect	text63,local,class=CODE,merge=1,delta=2
   149                           	psect	text64,local,class=CODE,merge=1,delta=2
   150                           	psect	text65,local,class=CODE,merge=1,delta=2
   151                           	psect	text66,local,class=CODE,merge=1,delta=2
   152                           	psect	text67,local,class=CODE,merge=1,delta=2
   153                           	psect	text68,local,class=CODE,merge=1,delta=2
   154                           	psect	text69,local,class=CODE,merge=1,delta=2
   155                           	psect	text70,local,class=CODE,merge=1,delta=2
   156                           	psect	text71,local,class=CODE,merge=1,delta=2
   157                           	psect	text72,local,class=CODE,merge=1,delta=2
   158                           	psect	text73,local,class=CODE,merge=1,delta=2
   159                           	psect	text74,local,class=CODE,merge=1,delta=2
   160                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
   161                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
   162                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
   163                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
   164                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   165                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   166                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   167                           	psect	text82,local,class=CODE,merge=1,delta=2
   168                           	psect	text83,local,class=CODE,merge=1,delta=2
   169                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   170                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   171                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   172                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	text88,local,class=CODE,merge=1,delta=2,group=2
   174                           	psect	text89,local,class=CODE,merge=1,delta=2
   175                           	psect	text90,local,class=CODE,merge=1,delta=2,group=2
   176                           	psect	text91,local,class=CODE,merge=1,delta=2,group=2
   177                           	psect	text92,local,class=CODE,merge=1,delta=2,group=2
   178                           	psect	text93,local,class=CODE,merge=1,delta=2,group=2
   179                           	psect	text94,local,class=CODE,merge=1,delta=2
   180                           	psect	text95,local,class=CODE,merge=1,delta=2
   181                           	psect	text96,local,class=CODE,merge=1,delta=2
   182                           	psect	text97,local,class=CODE,merge=1,delta=2
   183                           	psect	text98,local,class=CODE,merge=1,delta=2
   184                           	psect	text99,local,class=CODE,merge=1,delta=2
   185                           	psect	text100,local,class=CODE,merge=1,delta=2
   186                           	psect	text101,local,class=CODE,merge=1,delta=2
   187                           	psect	text102,local,class=CODE,merge=1,delta=2
   188                           	psect	text103,local,class=CODE,merge=1,delta=2
   189                           	psect	text104,local,class=CODE,merge=1,delta=2
   190                           	psect	text105,local,class=CODE,merge=1,delta=2
   191                           	psect	text106,local,class=CODE,merge=1,delta=2
   192                           	psect	text107,local,class=CODE,merge=1,delta=2
   193                           	psect	text108,local,class=CODE,merge=1,delta=2
   194                           	psect	text109,local,class=CODE,merge=1,delta=2
   195                           	psect	text110,local,class=CODE,merge=1,delta=2
   196                           	psect	intentry,global,class=CODE,delta=2
   197                           	psect	text112,local,class=CODE,merge=1,delta=2
   198                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
   199                           	psect	text114,local,class=CODE,merge=1,delta=2
   200                           	psect	text115,local,class=CODE,merge=1,delta=2
   201                           	psect	text116,local,class=CODE,merge=1,delta=2
   202                           	psect	text117,local,class=CODE,merge=1,delta=2
   203                           	psect	text118,local,class=CODE,merge=1,delta=2
   204                           	psect	text119,local,class=CODE,merge=1,delta=2
   205                           	psect	text120,local,class=CODE,merge=1,delta=2
   206                           	psect	text121,local,class=CODE,merge=1,delta=2
   207                           	psect	text122,local,class=CODE,merge=1,delta=2
   208                           	psect	text123,local,class=CODE,merge=1,delta=2
   209                           	psect	text124,local,class=CODE,merge=1,delta=2
   210                           	psect	text125,local,class=CODE,merge=1,delta=2
   211                           	psect	text126,local,class=CODE,merge=1,delta=2
   212                           	psect	text127,local,class=CODE,merge=1,delta=2
   213                           	psect	text128,local,class=CODE,merge=1,delta=2
   214                           	psect	text129,local,class=CODE,merge=1,delta=2
   215                           	psect	text130,local,class=CODE,merge=1,inline,delta=2
   216                           	psect	text131,local,class=CODE,merge=1,inline,delta=2
   217                           	psect	text132,local,class=CODE,merge=1,inline,delta=2
   218                           	psect	text133,local,class=CODE,merge=1,inline,delta=2
   219                           	psect	text134,local,class=CODE,merge=1,inline,delta=2
   220                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   221                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   222                           	psect	text137,local,class=CODE,merge=1,delta=2
   223                           	psect	text138,local,class=CODE,merge=1,delta=2
   224                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   225                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   226                           	psect	text141,local,class=CODE,merge=1,inline,delta=2
   227                           	psect	text142,local,class=CODE,merge=1,delta=2
   228                           	psect	text143,local,class=CODE,merge=1,inline,delta=2
   229                           	psect	text144,local,class=CODE,merge=1,delta=2
   230                           	psect	text145,local,class=CODE,merge=1,delta=2
   231                           	psect	text146,local,class=CODE,merge=1,delta=2
   232                           	psect	text147,local,class=CODE,merge=1,delta=2
   233                           	psect	text148,local,class=CODE,merge=1,delta=2
   234                           	psect	text149,local,class=CODE,merge=1,delta=2
   235                           	psect	text150,local,class=CODE,merge=1,delta=2
   236                           	psect	text151,local,class=CODE,merge=1,delta=2
   237                           	psect	text152,local,class=CODE,merge=1,delta=2
   238                           	psect	text153,local,class=CODE,merge=1,delta=2
   239                           	psect	text154,local,class=CODE,merge=1,delta=2
   240                           	psect	text155,local,class=CODE,merge=1,delta=2
   241                           	psect	text156,local,class=CODE,merge=1,delta=2
   242                           	psect	text157,local,class=CODE,merge=1,delta=2
   243                           	dabs	1,0x7E,2
   244  0000                     
   245                           ; Version 1.45
   246                           ; Generated 16/11/2017 GMT
   247                           ; 
   248                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   249                           ; All rights reserved.
   250                           ; 
   251                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   252                           ; 
   253                           ; Redistribution and use in source and binary forms, with or without modification, are
   254                           ; permitted provided that the following conditions are met:
   255                           ; 
   256                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   257                           ;        conditions and the following disclaimer.
   258                           ; 
   259                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   260                           ;        of conditions and the following disclaimer in the documentation and/or other
   261                           ;        materials provided with the distribution.
   262                           ; 
   263                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   264                           ;        software without specific prior written permission.
   265                           ; 
   266                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   267                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   268                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   269                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   270                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   271                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   272                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   273                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   274                           ; 
   275                           ; 
   276                           ; Code-generator required, PIC16F18346 Definitions
   277                           ; 
   278                           ; SFR Addresses
   279  0000                     	;# 
   280  0001                     	;# 
   281  0002                     	;# 
   282  0003                     	;# 
   283  0004                     	;# 
   284  0005                     	;# 
   285  0006                     	;# 
   286  0007                     	;# 
   287  0008                     	;# 
   288  0009                     	;# 
   289  000A                     	;# 
   290  000B                     	;# 
   291  000C                     	;# 
   292  000D                     	;# 
   293  000E                     	;# 
   294  0010                     	;# 
   295  0011                     	;# 
   296  0012                     	;# 
   297  0013                     	;# 
   298  0014                     	;# 
   299  0015                     	;# 
   300  0015                     	;# 
   301  0016                     	;# 
   302  0016                     	;# 
   303  0017                     	;# 
   304  0018                     	;# 
   305  0019                     	;# 
   306  0019                     	;# 
   307  001A                     	;# 
   308  001B                     	;# 
   309  001C                     	;# 
   310  001D                     	;# 
   311  001E                     	;# 
   312  001F                     	;# 
   313  008C                     	;# 
   314  008D                     	;# 
   315  008E                     	;# 
   316  0090                     	;# 
   317  0091                     	;# 
   318  0092                     	;# 
   319  0093                     	;# 
   320  0094                     	;# 
   321  0097                     	;# 
   322  009B                     	;# 
   323  009B                     	;# 
   324  009C                     	;# 
   325  009D                     	;# 
   326  009E                     	;# 
   327  009F                     	;# 
   328  010C                     	;# 
   329  010D                     	;# 
   330  010E                     	;# 
   331  0111                     	;# 
   332  0112                     	;# 
   333  0113                     	;# 
   334  0114                     	;# 
   335  0115                     	;# 
   336  0116                     	;# 
   337  0117                     	;# 
   338  0118                     	;# 
   339  0119                     	;# 
   340  018C                     	;# 
   341  018D                     	;# 
   342  018E                     	;# 
   343  0197                     	;# 
   344  0199                     	;# 
   345  0199                     	;# 
   346  0199                     	;# 
   347  019A                     	;# 
   348  019A                     	;# 
   349  019A                     	;# 
   350  019B                     	;# 
   351  019B                     	;# 
   352  019B                     	;# 
   353  019B                     	;# 
   354  019B                     	;# 
   355  019C                     	;# 
   356  019C                     	;# 
   357  019C                     	;# 
   358  019D                     	;# 
   359  019D                     	;# 
   360  019D                     	;# 
   361  019E                     	;# 
   362  019E                     	;# 
   363  019E                     	;# 
   364  019F                     	;# 
   365  019F                     	;# 
   366  019F                     	;# 
   367  019F                     	;# 
   368  019F                     	;# 
   369  020C                     	;# 
   370  020D                     	;# 
   371  020E                     	;# 
   372  0211                     	;# 
   373  0211                     	;# 
   374  0212                     	;# 
   375  0212                     	;# 
   376  0213                     	;# 
   377  0213                     	;# 
   378  0214                     	;# 
   379  0214                     	;# 
   380  0215                     	;# 
   381  0215                     	;# 
   382  0215                     	;# 
   383  0215                     	;# 
   384  0216                     	;# 
   385  0216                     	;# 
   386  0217                     	;# 
   387  0217                     	;# 
   388  0219                     	;# 
   389  021A                     	;# 
   390  021B                     	;# 
   391  021C                     	;# 
   392  021D                     	;# 
   393  021D                     	;# 
   394  021E                     	;# 
   395  021F                     	;# 
   396  028C                     	;# 
   397  028D                     	;# 
   398  028E                     	;# 
   399  0291                     	;# 
   400  0291                     	;# 
   401  0292                     	;# 
   402  0293                     	;# 
   403  0294                     	;# 
   404  0295                     	;# 
   405  0295                     	;# 
   406  0296                     	;# 
   407  0297                     	;# 
   408  0298                     	;# 
   409  029F                     	;# 
   410  030C                     	;# 
   411  030D                     	;# 
   412  030E                     	;# 
   413  0311                     	;# 
   414  0311                     	;# 
   415  0312                     	;# 
   416  0313                     	;# 
   417  0314                     	;# 
   418  0315                     	;# 
   419  0315                     	;# 
   420  0316                     	;# 
   421  0317                     	;# 
   422  0318                     	;# 
   423  038C                     	;# 
   424  038D                     	;# 
   425  038E                     	;# 
   426  0391                     	;# 
   427  0392                     	;# 
   428  0393                     	;# 
   429  0394                     	;# 
   430  0395                     	;# 
   431  0396                     	;# 
   432  0397                     	;# 
   433  0398                     	;# 
   434  0399                     	;# 
   435  039A                     	;# 
   436  039C                     	;# 
   437  039D                     	;# 
   438  039E                     	;# 
   439  039F                     	;# 
   440  0411                     	;# 
   441  0411                     	;# 
   442  0412                     	;# 
   443  0413                     	;# 
   444  0414                     	;# 
   445  0415                     	;# 
   446  0416                     	;# 
   447  0417                     	;# 
   448  0418                     	;# 
   449  0418                     	;# 
   450  0419                     	;# 
   451  041A                     	;# 
   452  041B                     	;# 
   453  041C                     	;# 
   454  041D                     	;# 
   455  041E                     	;# 
   456  041F                     	;# 
   457  0498                     	;# 
   458  0498                     	;# 
   459  0499                     	;# 
   460  049A                     	;# 
   461  049B                     	;# 
   462  049B                     	;# 
   463  049C                     	;# 
   464  049D                     	;# 
   465  049E                     	;# 
   466  049F                     	;# 
   467  0617                     	;# 
   468  0618                     	;# 
   469  0619                     	;# 
   470  0619                     	;# 
   471  061A                     	;# 
   472  061B                     	;# 
   473  061C                     	;# 
   474  061C                     	;# 
   475  061F                     	;# 
   476  0691                     	;# 
   477  0692                     	;# 
   478  0693                     	;# 
   479  0694                     	;# 
   480  0695                     	;# 
   481  0696                     	;# 
   482  0697                     	;# 
   483  0698                     	;# 
   484  0699                     	;# 
   485  0711                     	;# 
   486  0712                     	;# 
   487  0713                     	;# 
   488  0714                     	;# 
   489  0715                     	;# 
   490  0716                     	;# 
   491  0717                     	;# 
   492  0718                     	;# 
   493  0719                     	;# 
   494  0891                     	;# 
   495  0891                     	;# 
   496  0891                     	;# 
   497  0891                     	;# 
   498  0891                     	;# 
   499  0891                     	;# 
   500  0892                     	;# 
   501  0892                     	;# 
   502  0892                     	;# 
   503  0893                     	;# 
   504  0893                     	;# 
   505  0893                     	;# 
   506  0893                     	;# 
   507  0893                     	;# 
   508  0893                     	;# 
   509  0894                     	;# 
   510  0894                     	;# 
   511  0894                     	;# 
   512  0895                     	;# 
   513  0895                     	;# 
   514  0895                     	;# 
   515  0896                     	;# 
   516  0896                     	;# 
   517  0896                     	;# 
   518  089B                     	;# 
   519  0911                     	;# 
   520  0912                     	;# 
   521  0913                     	;# 
   522  0914                     	;# 
   523  0915                     	;# 
   524  0916                     	;# 
   525  0918                     	;# 
   526  0919                     	;# 
   527  091A                     	;# 
   528  091B                     	;# 
   529  091C                     	;# 
   530  091D                     	;# 
   531  091E                     	;# 
   532  091F                     	;# 
   533  0E0F                     	;# 
   534  0E10                     	;# 
   535  0E11                     	;# 
   536  0E12                     	;# 
   537  0E13                     	;# 
   538  0E14                     	;# 
   539  0E15                     	;# 
   540  0E16                     	;# 
   541  0E17                     	;# 
   542  0E18                     	;# 
   543  0E19                     	;# 
   544  0E1A                     	;# 
   545  0E1B                     	;# 
   546  0E1C                     	;# 
   547  0E1D                     	;# 
   548  0E1E                     	;# 
   549  0E1F                     	;# 
   550  0E20                     	;# 
   551  0E21                     	;# 
   552  0E22                     	;# 
   553  0E24                     	;# 
   554  0E25                     	;# 
   555  0E28                     	;# 
   556  0E29                     	;# 
   557  0E2A                     	;# 
   558  0E2B                     	;# 
   559  0E2C                     	;# 
   560  0E2D                     	;# 
   561  0E2E                     	;# 
   562  0E2F                     	;# 
   563  0E90                     	;# 
   564  0E91                     	;# 
   565  0E92                     	;# 
   566  0E94                     	;# 
   567  0E95                     	;# 
   568  0E9C                     	;# 
   569  0E9D                     	;# 
   570  0E9E                     	;# 
   571  0E9F                     	;# 
   572  0EA0                     	;# 
   573  0EA1                     	;# 
   574  0EA2                     	;# 
   575  0EA3                     	;# 
   576  0EA4                     	;# 
   577  0EA5                     	;# 
   578  0EA6                     	;# 
   579  0EA7                     	;# 
   580  0F0F                     	;# 
   581  0F10                     	;# 
   582  0F11                     	;# 
   583  0F12                     	;# 
   584  0F13                     	;# 
   585  0F14                     	;# 
   586  0F15                     	;# 
   587  0F16                     	;# 
   588  0F17                     	;# 
   589  0F18                     	;# 
   590  0F19                     	;# 
   591  0F1A                     	;# 
   592  0F1B                     	;# 
   593  0F1C                     	;# 
   594  0F1D                     	;# 
   595  0F1E                     	;# 
   596  0F1F                     	;# 
   597  0F20                     	;# 
   598  0F21                     	;# 
   599  0F22                     	;# 
   600  0F23                     	;# 
   601  0F24                     	;# 
   602  0F25                     	;# 
   603  0F26                     	;# 
   604  0F27                     	;# 
   605  0F28                     	;# 
   606  0F29                     	;# 
   607  0F2A                     	;# 
   608  0F2B                     	;# 
   609  0F2C                     	;# 
   610  0F2D                     	;# 
   611  0F2E                     	;# 
   612  0F2F                     	;# 
   613  0F30                     	;# 
   614  0F31                     	;# 
   615  0F32                     	;# 
   616  0F33                     	;# 
   617  0F34                     	;# 
   618  0F35                     	;# 
   619  0F36                     	;# 
   620  0F37                     	;# 
   621  0FE4                     	;# 
   622  0FE5                     	;# 
   623  0FE6                     	;# 
   624  0FE7                     	;# 
   625  0FE8                     	;# 
   626  0FE9                     	;# 
   627  0FEA                     	;# 
   628  0FEB                     	;# 
   629  0FED                     	;# 
   630  0FEE                     	;# 
   631  0FEF                     	;# 
   632  0000                     	;# 
   633  0001                     	;# 
   634  0002                     	;# 
   635  0003                     	;# 
   636  0004                     	;# 
   637  0005                     	;# 
   638  0006                     	;# 
   639  0007                     	;# 
   640  0008                     	;# 
   641  0009                     	;# 
   642  000A                     	;# 
   643  000B                     	;# 
   644  000C                     	;# 
   645  000D                     	;# 
   646  000E                     	;# 
   647  0010                     	;# 
   648  0011                     	;# 
   649  0012                     	;# 
   650  0013                     	;# 
   651  0014                     	;# 
   652  0015                     	;# 
   653  0015                     	;# 
   654  0016                     	;# 
   655  0016                     	;# 
   656  0017                     	;# 
   657  0018                     	;# 
   658  0019                     	;# 
   659  0019                     	;# 
   660  001A                     	;# 
   661  001B                     	;# 
   662  001C                     	;# 
   663  001D                     	;# 
   664  001E                     	;# 
   665  001F                     	;# 
   666  008C                     	;# 
   667  008D                     	;# 
   668  008E                     	;# 
   669  0090                     	;# 
   670  0091                     	;# 
   671  0092                     	;# 
   672  0093                     	;# 
   673  0094                     	;# 
   674  0097                     	;# 
   675  009B                     	;# 
   676  009B                     	;# 
   677  009C                     	;# 
   678  009D                     	;# 
   679  009E                     	;# 
   680  009F                     	;# 
   681  010C                     	;# 
   682  010D                     	;# 
   683  010E                     	;# 
   684  0111                     	;# 
   685  0112                     	;# 
   686  0113                     	;# 
   687  0114                     	;# 
   688  0115                     	;# 
   689  0116                     	;# 
   690  0117                     	;# 
   691  0118                     	;# 
   692  0119                     	;# 
   693  018C                     	;# 
   694  018D                     	;# 
   695  018E                     	;# 
   696  0197                     	;# 
   697  0199                     	;# 
   698  0199                     	;# 
   699  0199                     	;# 
   700  019A                     	;# 
   701  019A                     	;# 
   702  019A                     	;# 
   703  019B                     	;# 
   704  019B                     	;# 
   705  019B                     	;# 
   706  019B                     	;# 
   707  019B                     	;# 
   708  019C                     	;# 
   709  019C                     	;# 
   710  019C                     	;# 
   711  019D                     	;# 
   712  019D                     	;# 
   713  019D                     	;# 
   714  019E                     	;# 
   715  019E                     	;# 
   716  019E                     	;# 
   717  019F                     	;# 
   718  019F                     	;# 
   719  019F                     	;# 
   720  019F                     	;# 
   721  019F                     	;# 
   722  020C                     	;# 
   723  020D                     	;# 
   724  020E                     	;# 
   725  0211                     	;# 
   726  0211                     	;# 
   727  0212                     	;# 
   728  0212                     	;# 
   729  0213                     	;# 
   730  0213                     	;# 
   731  0214                     	;# 
   732  0214                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0216                     	;# 
   738  0216                     	;# 
   739  0217                     	;# 
   740  0217                     	;# 
   741  0219                     	;# 
   742  021A                     	;# 
   743  021B                     	;# 
   744  021C                     	;# 
   745  021D                     	;# 
   746  021D                     	;# 
   747  021E                     	;# 
   748  021F                     	;# 
   749  028C                     	;# 
   750  028D                     	;# 
   751  028E                     	;# 
   752  0291                     	;# 
   753  0291                     	;# 
   754  0292                     	;# 
   755  0293                     	;# 
   756  0294                     	;# 
   757  0295                     	;# 
   758  0295                     	;# 
   759  0296                     	;# 
   760  0297                     	;# 
   761  0298                     	;# 
   762  029F                     	;# 
   763  030C                     	;# 
   764  030D                     	;# 
   765  030E                     	;# 
   766  0311                     	;# 
   767  0311                     	;# 
   768  0312                     	;# 
   769  0313                     	;# 
   770  0314                     	;# 
   771  0315                     	;# 
   772  0315                     	;# 
   773  0316                     	;# 
   774  0317                     	;# 
   775  0318                     	;# 
   776  038C                     	;# 
   777  038D                     	;# 
   778  038E                     	;# 
   779  0391                     	;# 
   780  0392                     	;# 
   781  0393                     	;# 
   782  0394                     	;# 
   783  0395                     	;# 
   784  0396                     	;# 
   785  0397                     	;# 
   786  0398                     	;# 
   787  0399                     	;# 
   788  039A                     	;# 
   789  039C                     	;# 
   790  039D                     	;# 
   791  039E                     	;# 
   792  039F                     	;# 
   793  0411                     	;# 
   794  0411                     	;# 
   795  0412                     	;# 
   796  0413                     	;# 
   797  0414                     	;# 
   798  0415                     	;# 
   799  0416                     	;# 
   800  0417                     	;# 
   801  0418                     	;# 
   802  0418                     	;# 
   803  0419                     	;# 
   804  041A                     	;# 
   805  041B                     	;# 
   806  041C                     	;# 
   807  041D                     	;# 
   808  041E                     	;# 
   809  041F                     	;# 
   810  0498                     	;# 
   811  0498                     	;# 
   812  0499                     	;# 
   813  049A                     	;# 
   814  049B                     	;# 
   815  049B                     	;# 
   816  049C                     	;# 
   817  049D                     	;# 
   818  049E                     	;# 
   819  049F                     	;# 
   820  0617                     	;# 
   821  0618                     	;# 
   822  0619                     	;# 
   823  0619                     	;# 
   824  061A                     	;# 
   825  061B                     	;# 
   826  061C                     	;# 
   827  061C                     	;# 
   828  061F                     	;# 
   829  0691                     	;# 
   830  0692                     	;# 
   831  0693                     	;# 
   832  0694                     	;# 
   833  0695                     	;# 
   834  0696                     	;# 
   835  0697                     	;# 
   836  0698                     	;# 
   837  0699                     	;# 
   838  0711                     	;# 
   839  0712                     	;# 
   840  0713                     	;# 
   841  0714                     	;# 
   842  0715                     	;# 
   843  0716                     	;# 
   844  0717                     	;# 
   845  0718                     	;# 
   846  0719                     	;# 
   847  0891                     	;# 
   848  0891                     	;# 
   849  0891                     	;# 
   850  0891                     	;# 
   851  0891                     	;# 
   852  0891                     	;# 
   853  0892                     	;# 
   854  0892                     	;# 
   855  0892                     	;# 
   856  0893                     	;# 
   857  0893                     	;# 
   858  0893                     	;# 
   859  0893                     	;# 
   860  0893                     	;# 
   861  0893                     	;# 
   862  0894                     	;# 
   863  0894                     	;# 
   864  0894                     	;# 
   865  0895                     	;# 
   866  0895                     	;# 
   867  0895                     	;# 
   868  0896                     	;# 
   869  0896                     	;# 
   870  0896                     	;# 
   871  089B                     	;# 
   872  0911                     	;# 
   873  0912                     	;# 
   874  0913                     	;# 
   875  0914                     	;# 
   876  0915                     	;# 
   877  0916                     	;# 
   878  0918                     	;# 
   879  0919                     	;# 
   880  091A                     	;# 
   881  091B                     	;# 
   882  091C                     	;# 
   883  091D                     	;# 
   884  091E                     	;# 
   885  091F                     	;# 
   886  0E0F                     	;# 
   887  0E10                     	;# 
   888  0E11                     	;# 
   889  0E12                     	;# 
   890  0E13                     	;# 
   891  0E14                     	;# 
   892  0E15                     	;# 
   893  0E16                     	;# 
   894  0E17                     	;# 
   895  0E18                     	;# 
   896  0E19                     	;# 
   897  0E1A                     	;# 
   898  0E1B                     	;# 
   899  0E1C                     	;# 
   900  0E1D                     	;# 
   901  0E1E                     	;# 
   902  0E1F                     	;# 
   903  0E20                     	;# 
   904  0E21                     	;# 
   905  0E22                     	;# 
   906  0E24                     	;# 
   907  0E25                     	;# 
   908  0E28                     	;# 
   909  0E29                     	;# 
   910  0E2A                     	;# 
   911  0E2B                     	;# 
   912  0E2C                     	;# 
   913  0E2D                     	;# 
   914  0E2E                     	;# 
   915  0E2F                     	;# 
   916  0E90                     	;# 
   917  0E91                     	;# 
   918  0E92                     	;# 
   919  0E94                     	;# 
   920  0E95                     	;# 
   921  0E9C                     	;# 
   922  0E9D                     	;# 
   923  0E9E                     	;# 
   924  0E9F                     	;# 
   925  0EA0                     	;# 
   926  0EA1                     	;# 
   927  0EA2                     	;# 
   928  0EA3                     	;# 
   929  0EA4                     	;# 
   930  0EA5                     	;# 
   931  0EA6                     	;# 
   932  0EA7                     	;# 
   933  0F0F                     	;# 
   934  0F10                     	;# 
   935  0F11                     	;# 
   936  0F12                     	;# 
   937  0F13                     	;# 
   938  0F14                     	;# 
   939  0F15                     	;# 
   940  0F16                     	;# 
   941  0F17                     	;# 
   942  0F18                     	;# 
   943  0F19                     	;# 
   944  0F1A                     	;# 
   945  0F1B                     	;# 
   946  0F1C                     	;# 
   947  0F1D                     	;# 
   948  0F1E                     	;# 
   949  0F1F                     	;# 
   950  0F20                     	;# 
   951  0F21                     	;# 
   952  0F22                     	;# 
   953  0F23                     	;# 
   954  0F24                     	;# 
   955  0F25                     	;# 
   956  0F26                     	;# 
   957  0F27                     	;# 
   958  0F28                     	;# 
   959  0F29                     	;# 
   960  0F2A                     	;# 
   961  0F2B                     	;# 
   962  0F2C                     	;# 
   963  0F2D                     	;# 
   964  0F2E                     	;# 
   965  0F2F                     	;# 
   966  0F30                     	;# 
   967  0F31                     	;# 
   968  0F32                     	;# 
   969  0F33                     	;# 
   970  0F34                     	;# 
   971  0F35                     	;# 
   972  0F36                     	;# 
   973  0F37                     	;# 
   974  0FE4                     	;# 
   975  0FE5                     	;# 
   976  0FE6                     	;# 
   977  0FE7                     	;# 
   978  0FE8                     	;# 
   979  0FE9                     	;# 
   980  0FEA                     	;# 
   981  0FEB                     	;# 
   982  0FED                     	;# 
   983  0FEE                     	;# 
   984  0FEF                     	;# 
   985  0000                     	;# 
   986  0001                     	;# 
   987  0002                     	;# 
   988  0003                     	;# 
   989  0004                     	;# 
   990  0005                     	;# 
   991  0006                     	;# 
   992  0007                     	;# 
   993  0008                     	;# 
   994  0009                     	;# 
   995  000A                     	;# 
   996  000B                     	;# 
   997  000C                     	;# 
   998  000D                     	;# 
   999  000E                     	;# 
  1000  0010                     	;# 
  1001  0011                     	;# 
  1002  0012                     	;# 
  1003  0013                     	;# 
  1004  0014                     	;# 
  1005  0015                     	;# 
  1006  0015                     	;# 
  1007  0016                     	;# 
  1008  0016                     	;# 
  1009  0017                     	;# 
  1010  0018                     	;# 
  1011  0019                     	;# 
  1012  0019                     	;# 
  1013  001A                     	;# 
  1014  001B                     	;# 
  1015  001C                     	;# 
  1016  001D                     	;# 
  1017  001E                     	;# 
  1018  001F                     	;# 
  1019  008C                     	;# 
  1020  008D                     	;# 
  1021  008E                     	;# 
  1022  0090                     	;# 
  1023  0091                     	;# 
  1024  0092                     	;# 
  1025  0093                     	;# 
  1026  0094                     	;# 
  1027  0097                     	;# 
  1028  009B                     	;# 
  1029  009B                     	;# 
  1030  009C                     	;# 
  1031  009D                     	;# 
  1032  009E                     	;# 
  1033  009F                     	;# 
  1034  010C                     	;# 
  1035  010D                     	;# 
  1036  010E                     	;# 
  1037  0111                     	;# 
  1038  0112                     	;# 
  1039  0113                     	;# 
  1040  0114                     	;# 
  1041  0115                     	;# 
  1042  0116                     	;# 
  1043  0117                     	;# 
  1044  0118                     	;# 
  1045  0119                     	;# 
  1046  018C                     	;# 
  1047  018D                     	;# 
  1048  018E                     	;# 
  1049  0197                     	;# 
  1050  0199                     	;# 
  1051  0199                     	;# 
  1052  0199                     	;# 
  1053  019A                     	;# 
  1054  019A                     	;# 
  1055  019A                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019B                     	;# 
  1059  019B                     	;# 
  1060  019B                     	;# 
  1061  019C                     	;# 
  1062  019C                     	;# 
  1063  019C                     	;# 
  1064  019D                     	;# 
  1065  019D                     	;# 
  1066  019D                     	;# 
  1067  019E                     	;# 
  1068  019E                     	;# 
  1069  019E                     	;# 
  1070  019F                     	;# 
  1071  019F                     	;# 
  1072  019F                     	;# 
  1073  019F                     	;# 
  1074  019F                     	;# 
  1075  020C                     	;# 
  1076  020D                     	;# 
  1077  020E                     	;# 
  1078  0211                     	;# 
  1079  0211                     	;# 
  1080  0212                     	;# 
  1081  0212                     	;# 
  1082  0213                     	;# 
  1083  0213                     	;# 
  1084  0214                     	;# 
  1085  0214                     	;# 
  1086  0215                     	;# 
  1087  0215                     	;# 
  1088  0215                     	;# 
  1089  0215                     	;# 
  1090  0216                     	;# 
  1091  0216                     	;# 
  1092  0217                     	;# 
  1093  0217                     	;# 
  1094  0219                     	;# 
  1095  021A                     	;# 
  1096  021B                     	;# 
  1097  021C                     	;# 
  1098  021D                     	;# 
  1099  021D                     	;# 
  1100  021E                     	;# 
  1101  021F                     	;# 
  1102  028C                     	;# 
  1103  028D                     	;# 
  1104  028E                     	;# 
  1105  0291                     	;# 
  1106  0291                     	;# 
  1107  0292                     	;# 
  1108  0293                     	;# 
  1109  0294                     	;# 
  1110  0295                     	;# 
  1111  0295                     	;# 
  1112  0296                     	;# 
  1113  0297                     	;# 
  1114  0298                     	;# 
  1115  029F                     	;# 
  1116  030C                     	;# 
  1117  030D                     	;# 
  1118  030E                     	;# 
  1119  0311                     	;# 
  1120  0311                     	;# 
  1121  0312                     	;# 
  1122  0313                     	;# 
  1123  0314                     	;# 
  1124  0315                     	;# 
  1125  0315                     	;# 
  1126  0316                     	;# 
  1127  0317                     	;# 
  1128  0318                     	;# 
  1129  038C                     	;# 
  1130  038D                     	;# 
  1131  038E                     	;# 
  1132  0391                     	;# 
  1133  0392                     	;# 
  1134  0393                     	;# 
  1135  0394                     	;# 
  1136  0395                     	;# 
  1137  0396                     	;# 
  1138  0397                     	;# 
  1139  0398                     	;# 
  1140  0399                     	;# 
  1141  039A                     	;# 
  1142  039C                     	;# 
  1143  039D                     	;# 
  1144  039E                     	;# 
  1145  039F                     	;# 
  1146  0411                     	;# 
  1147  0411                     	;# 
  1148  0412                     	;# 
  1149  0413                     	;# 
  1150  0414                     	;# 
  1151  0415                     	;# 
  1152  0416                     	;# 
  1153  0417                     	;# 
  1154  0418                     	;# 
  1155  0418                     	;# 
  1156  0419                     	;# 
  1157  041A                     	;# 
  1158  041B                     	;# 
  1159  041C                     	;# 
  1160  041D                     	;# 
  1161  041E                     	;# 
  1162  041F                     	;# 
  1163  0498                     	;# 
  1164  0498                     	;# 
  1165  0499                     	;# 
  1166  049A                     	;# 
  1167  049B                     	;# 
  1168  049B                     	;# 
  1169  049C                     	;# 
  1170  049D                     	;# 
  1171  049E                     	;# 
  1172  049F                     	;# 
  1173  0617                     	;# 
  1174  0618                     	;# 
  1175  0619                     	;# 
  1176  0619                     	;# 
  1177  061A                     	;# 
  1178  061B                     	;# 
  1179  061C                     	;# 
  1180  061C                     	;# 
  1181  061F                     	;# 
  1182  0691                     	;# 
  1183  0692                     	;# 
  1184  0693                     	;# 
  1185  0694                     	;# 
  1186  0695                     	;# 
  1187  0696                     	;# 
  1188  0697                     	;# 
  1189  0698                     	;# 
  1190  0699                     	;# 
  1191  0711                     	;# 
  1192  0712                     	;# 
  1193  0713                     	;# 
  1194  0714                     	;# 
  1195  0715                     	;# 
  1196  0716                     	;# 
  1197  0717                     	;# 
  1198  0718                     	;# 
  1199  0719                     	;# 
  1200  0891                     	;# 
  1201  0891                     	;# 
  1202  0891                     	;# 
  1203  0891                     	;# 
  1204  0891                     	;# 
  1205  0891                     	;# 
  1206  0892                     	;# 
  1207  0892                     	;# 
  1208  0892                     	;# 
  1209  0893                     	;# 
  1210  0893                     	;# 
  1211  0893                     	;# 
  1212  0893                     	;# 
  1213  0893                     	;# 
  1214  0893                     	;# 
  1215  0894                     	;# 
  1216  0894                     	;# 
  1217  0894                     	;# 
  1218  0895                     	;# 
  1219  0895                     	;# 
  1220  0895                     	;# 
  1221  0896                     	;# 
  1222  0896                     	;# 
  1223  0896                     	;# 
  1224  089B                     	;# 
  1225  0911                     	;# 
  1226  0912                     	;# 
  1227  0913                     	;# 
  1228  0914                     	;# 
  1229  0915                     	;# 
  1230  0916                     	;# 
  1231  0918                     	;# 
  1232  0919                     	;# 
  1233  091A                     	;# 
  1234  091B                     	;# 
  1235  091C                     	;# 
  1236  091D                     	;# 
  1237  091E                     	;# 
  1238  091F                     	;# 
  1239  0E0F                     	;# 
  1240  0E10                     	;# 
  1241  0E11                     	;# 
  1242  0E12                     	;# 
  1243  0E13                     	;# 
  1244  0E14                     	;# 
  1245  0E15                     	;# 
  1246  0E16                     	;# 
  1247  0E17                     	;# 
  1248  0E18                     	;# 
  1249  0E19                     	;# 
  1250  0E1A                     	;# 
  1251  0E1B                     	;# 
  1252  0E1C                     	;# 
  1253  0E1D                     	;# 
  1254  0E1E                     	;# 
  1255  0E1F                     	;# 
  1256  0E20                     	;# 
  1257  0E21                     	;# 
  1258  0E22                     	;# 
  1259  0E24                     	;# 
  1260  0E25                     	;# 
  1261  0E28                     	;# 
  1262  0E29                     	;# 
  1263  0E2A                     	;# 
  1264  0E2B                     	;# 
  1265  0E2C                     	;# 
  1266  0E2D                     	;# 
  1267  0E2E                     	;# 
  1268  0E2F                     	;# 
  1269  0E90                     	;# 
  1270  0E91                     	;# 
  1271  0E92                     	;# 
  1272  0E94                     	;# 
  1273  0E95                     	;# 
  1274  0E9C                     	;# 
  1275  0E9D                     	;# 
  1276  0E9E                     	;# 
  1277  0E9F                     	;# 
  1278  0EA0                     	;# 
  1279  0EA1                     	;# 
  1280  0EA2                     	;# 
  1281  0EA3                     	;# 
  1282  0EA4                     	;# 
  1283  0EA5                     	;# 
  1284  0EA6                     	;# 
  1285  0EA7                     	;# 
  1286  0F0F                     	;# 
  1287  0F10                     	;# 
  1288  0F11                     	;# 
  1289  0F12                     	;# 
  1290  0F13                     	;# 
  1291  0F14                     	;# 
  1292  0F15                     	;# 
  1293  0F16                     	;# 
  1294  0F17                     	;# 
  1295  0F18                     	;# 
  1296  0F19                     	;# 
  1297  0F1A                     	;# 
  1298  0F1B                     	;# 
  1299  0F1C                     	;# 
  1300  0F1D                     	;# 
  1301  0F1E                     	;# 
  1302  0F1F                     	;# 
  1303  0F20                     	;# 
  1304  0F21                     	;# 
  1305  0F22                     	;# 
  1306  0F23                     	;# 
  1307  0F24                     	;# 
  1308  0F25                     	;# 
  1309  0F26                     	;# 
  1310  0F27                     	;# 
  1311  0F28                     	;# 
  1312  0F29                     	;# 
  1313  0F2A                     	;# 
  1314  0F2B                     	;# 
  1315  0F2C                     	;# 
  1316  0F2D                     	;# 
  1317  0F2E                     	;# 
  1318  0F2F                     	;# 
  1319  0F30                     	;# 
  1320  0F31                     	;# 
  1321  0F32                     	;# 
  1322  0F33                     	;# 
  1323  0F34                     	;# 
  1324  0F35                     	;# 
  1325  0F36                     	;# 
  1326  0F37                     	;# 
  1327  0FE4                     	;# 
  1328  0FE5                     	;# 
  1329  0FE6                     	;# 
  1330  0FE7                     	;# 
  1331  0FE8                     	;# 
  1332  0FE9                     	;# 
  1333  0FEA                     	;# 
  1334  0FEB                     	;# 
  1335  0FED                     	;# 
  1336  0FEE                     	;# 
  1337  0FEF                     	;# 
  1338  0000                     	;# 
  1339  0001                     	;# 
  1340  0002                     	;# 
  1341  0003                     	;# 
  1342  0004                     	;# 
  1343  0005                     	;# 
  1344  0006                     	;# 
  1345  0007                     	;# 
  1346  0008                     	;# 
  1347  0009                     	;# 
  1348  000A                     	;# 
  1349  000B                     	;# 
  1350  000C                     	;# 
  1351  000D                     	;# 
  1352  000E                     	;# 
  1353  0010                     	;# 
  1354  0011                     	;# 
  1355  0012                     	;# 
  1356  0013                     	;# 
  1357  0014                     	;# 
  1358  0015                     	;# 
  1359  0015                     	;# 
  1360  0016                     	;# 
  1361  0016                     	;# 
  1362  0017                     	;# 
  1363  0018                     	;# 
  1364  0019                     	;# 
  1365  0019                     	;# 
  1366  001A                     	;# 
  1367  001B                     	;# 
  1368  001C                     	;# 
  1369  001D                     	;# 
  1370  001E                     	;# 
  1371  001F                     	;# 
  1372  008C                     	;# 
  1373  008D                     	;# 
  1374  008E                     	;# 
  1375  0090                     	;# 
  1376  0091                     	;# 
  1377  0092                     	;# 
  1378  0093                     	;# 
  1379  0094                     	;# 
  1380  0097                     	;# 
  1381  009B                     	;# 
  1382  009B                     	;# 
  1383  009C                     	;# 
  1384  009D                     	;# 
  1385  009E                     	;# 
  1386  009F                     	;# 
  1387  010C                     	;# 
  1388  010D                     	;# 
  1389  010E                     	;# 
  1390  0111                     	;# 
  1391  0112                     	;# 
  1392  0113                     	;# 
  1393  0114                     	;# 
  1394  0115                     	;# 
  1395  0116                     	;# 
  1396  0117                     	;# 
  1397  0118                     	;# 
  1398  0119                     	;# 
  1399  018C                     	;# 
  1400  018D                     	;# 
  1401  018E                     	;# 
  1402  0197                     	;# 
  1403  0199                     	;# 
  1404  0199                     	;# 
  1405  0199                     	;# 
  1406  019A                     	;# 
  1407  019A                     	;# 
  1408  019A                     	;# 
  1409  019B                     	;# 
  1410  019B                     	;# 
  1411  019B                     	;# 
  1412  019B                     	;# 
  1413  019B                     	;# 
  1414  019C                     	;# 
  1415  019C                     	;# 
  1416  019C                     	;# 
  1417  019D                     	;# 
  1418  019D                     	;# 
  1419  019D                     	;# 
  1420  019E                     	;# 
  1421  019E                     	;# 
  1422  019E                     	;# 
  1423  019F                     	;# 
  1424  019F                     	;# 
  1425  019F                     	;# 
  1426  019F                     	;# 
  1427  019F                     	;# 
  1428  020C                     	;# 
  1429  020D                     	;# 
  1430  020E                     	;# 
  1431  0211                     	;# 
  1432  0211                     	;# 
  1433  0212                     	;# 
  1434  0212                     	;# 
  1435  0213                     	;# 
  1436  0213                     	;# 
  1437  0214                     	;# 
  1438  0214                     	;# 
  1439  0215                     	;# 
  1440  0215                     	;# 
  1441  0215                     	;# 
  1442  0215                     	;# 
  1443  0216                     	;# 
  1444  0216                     	;# 
  1445  0217                     	;# 
  1446  0217                     	;# 
  1447  0219                     	;# 
  1448  021A                     	;# 
  1449  021B                     	;# 
  1450  021C                     	;# 
  1451  021D                     	;# 
  1452  021D                     	;# 
  1453  021E                     	;# 
  1454  021F                     	;# 
  1455  028C                     	;# 
  1456  028D                     	;# 
  1457  028E                     	;# 
  1458  0291                     	;# 
  1459  0291                     	;# 
  1460  0292                     	;# 
  1461  0293                     	;# 
  1462  0294                     	;# 
  1463  0295                     	;# 
  1464  0295                     	;# 
  1465  0296                     	;# 
  1466  0297                     	;# 
  1467  0298                     	;# 
  1468  029F                     	;# 
  1469  030C                     	;# 
  1470  030D                     	;# 
  1471  030E                     	;# 
  1472  0311                     	;# 
  1473  0311                     	;# 
  1474  0312                     	;# 
  1475  0313                     	;# 
  1476  0314                     	;# 
  1477  0315                     	;# 
  1478  0315                     	;# 
  1479  0316                     	;# 
  1480  0317                     	;# 
  1481  0318                     	;# 
  1482  038C                     	;# 
  1483  038D                     	;# 
  1484  038E                     	;# 
  1485  0391                     	;# 
  1486  0392                     	;# 
  1487  0393                     	;# 
  1488  0394                     	;# 
  1489  0395                     	;# 
  1490  0396                     	;# 
  1491  0397                     	;# 
  1492  0398                     	;# 
  1493  0399                     	;# 
  1494  039A                     	;# 
  1495  039C                     	;# 
  1496  039D                     	;# 
  1497  039E                     	;# 
  1498  039F                     	;# 
  1499  0411                     	;# 
  1500  0411                     	;# 
  1501  0412                     	;# 
  1502  0413                     	;# 
  1503  0414                     	;# 
  1504  0415                     	;# 
  1505  0416                     	;# 
  1506  0417                     	;# 
  1507  0418                     	;# 
  1508  0418                     	;# 
  1509  0419                     	;# 
  1510  041A                     	;# 
  1511  041B                     	;# 
  1512  041C                     	;# 
  1513  041D                     	;# 
  1514  041E                     	;# 
  1515  041F                     	;# 
  1516  0498                     	;# 
  1517  0498                     	;# 
  1518  0499                     	;# 
  1519  049A                     	;# 
  1520  049B                     	;# 
  1521  049B                     	;# 
  1522  049C                     	;# 
  1523  049D                     	;# 
  1524  049E                     	;# 
  1525  049F                     	;# 
  1526  0617                     	;# 
  1527  0618                     	;# 
  1528  0619                     	;# 
  1529  0619                     	;# 
  1530  061A                     	;# 
  1531  061B                     	;# 
  1532  061C                     	;# 
  1533  061C                     	;# 
  1534  061F                     	;# 
  1535  0691                     	;# 
  1536  0692                     	;# 
  1537  0693                     	;# 
  1538  0694                     	;# 
  1539  0695                     	;# 
  1540  0696                     	;# 
  1541  0697                     	;# 
  1542  0698                     	;# 
  1543  0699                     	;# 
  1544  0711                     	;# 
  1545  0712                     	;# 
  1546  0713                     	;# 
  1547  0714                     	;# 
  1548  0715                     	;# 
  1549  0716                     	;# 
  1550  0717                     	;# 
  1551  0718                     	;# 
  1552  0719                     	;# 
  1553  0891                     	;# 
  1554  0891                     	;# 
  1555  0891                     	;# 
  1556  0891                     	;# 
  1557  0891                     	;# 
  1558  0891                     	;# 
  1559  0892                     	;# 
  1560  0892                     	;# 
  1561  0892                     	;# 
  1562  0893                     	;# 
  1563  0893                     	;# 
  1564  0893                     	;# 
  1565  0893                     	;# 
  1566  0893                     	;# 
  1567  0893                     	;# 
  1568  0894                     	;# 
  1569  0894                     	;# 
  1570  0894                     	;# 
  1571  0895                     	;# 
  1572  0895                     	;# 
  1573  0895                     	;# 
  1574  0896                     	;# 
  1575  0896                     	;# 
  1576  0896                     	;# 
  1577  089B                     	;# 
  1578  0911                     	;# 
  1579  0912                     	;# 
  1580  0913                     	;# 
  1581  0914                     	;# 
  1582  0915                     	;# 
  1583  0916                     	;# 
  1584  0918                     	;# 
  1585  0919                     	;# 
  1586  091A                     	;# 
  1587  091B                     	;# 
  1588  091C                     	;# 
  1589  091D                     	;# 
  1590  091E                     	;# 
  1591  091F                     	;# 
  1592  0E0F                     	;# 
  1593  0E10                     	;# 
  1594  0E11                     	;# 
  1595  0E12                     	;# 
  1596  0E13                     	;# 
  1597  0E14                     	;# 
  1598  0E15                     	;# 
  1599  0E16                     	;# 
  1600  0E17                     	;# 
  1601  0E18                     	;# 
  1602  0E19                     	;# 
  1603  0E1A                     	;# 
  1604  0E1B                     	;# 
  1605  0E1C                     	;# 
  1606  0E1D                     	;# 
  1607  0E1E                     	;# 
  1608  0E1F                     	;# 
  1609  0E20                     	;# 
  1610  0E21                     	;# 
  1611  0E22                     	;# 
  1612  0E24                     	;# 
  1613  0E25                     	;# 
  1614  0E28                     	;# 
  1615  0E29                     	;# 
  1616  0E2A                     	;# 
  1617  0E2B                     	;# 
  1618  0E2C                     	;# 
  1619  0E2D                     	;# 
  1620  0E2E                     	;# 
  1621  0E2F                     	;# 
  1622  0E90                     	;# 
  1623  0E91                     	;# 
  1624  0E92                     	;# 
  1625  0E94                     	;# 
  1626  0E95                     	;# 
  1627  0E9C                     	;# 
  1628  0E9D                     	;# 
  1629  0E9E                     	;# 
  1630  0E9F                     	;# 
  1631  0EA0                     	;# 
  1632  0EA1                     	;# 
  1633  0EA2                     	;# 
  1634  0EA3                     	;# 
  1635  0EA4                     	;# 
  1636  0EA5                     	;# 
  1637  0EA6                     	;# 
  1638  0EA7                     	;# 
  1639  0F0F                     	;# 
  1640  0F10                     	;# 
  1641  0F11                     	;# 
  1642  0F12                     	;# 
  1643  0F13                     	;# 
  1644  0F14                     	;# 
  1645  0F15                     	;# 
  1646  0F16                     	;# 
  1647  0F17                     	;# 
  1648  0F18                     	;# 
  1649  0F19                     	;# 
  1650  0F1A                     	;# 
  1651  0F1B                     	;# 
  1652  0F1C                     	;# 
  1653  0F1D                     	;# 
  1654  0F1E                     	;# 
  1655  0F1F                     	;# 
  1656  0F20                     	;# 
  1657  0F21                     	;# 
  1658  0F22                     	;# 
  1659  0F23                     	;# 
  1660  0F24                     	;# 
  1661  0F25                     	;# 
  1662  0F26                     	;# 
  1663  0F27                     	;# 
  1664  0F28                     	;# 
  1665  0F29                     	;# 
  1666  0F2A                     	;# 
  1667  0F2B                     	;# 
  1668  0F2C                     	;# 
  1669  0F2D                     	;# 
  1670  0F2E                     	;# 
  1671  0F2F                     	;# 
  1672  0F30                     	;# 
  1673  0F31                     	;# 
  1674  0F32                     	;# 
  1675  0F33                     	;# 
  1676  0F34                     	;# 
  1677  0F35                     	;# 
  1678  0F36                     	;# 
  1679  0F37                     	;# 
  1680  0FE4                     	;# 
  1681  0FE5                     	;# 
  1682  0FE6                     	;# 
  1683  0FE7                     	;# 
  1684  0FE8                     	;# 
  1685  0FE9                     	;# 
  1686  0FEA                     	;# 
  1687  0FEB                     	;# 
  1688  0FED                     	;# 
  1689  0FEE                     	;# 
  1690  0FEF                     	;# 
  1691  0000                     	;# 
  1692  0001                     	;# 
  1693  0002                     	;# 
  1694  0003                     	;# 
  1695  0004                     	;# 
  1696  0005                     	;# 
  1697  0006                     	;# 
  1698  0007                     	;# 
  1699  0008                     	;# 
  1700  0009                     	;# 
  1701  000A                     	;# 
  1702  000B                     	;# 
  1703  000C                     	;# 
  1704  000D                     	;# 
  1705  000E                     	;# 
  1706  0010                     	;# 
  1707  0011                     	;# 
  1708  0012                     	;# 
  1709  0013                     	;# 
  1710  0014                     	;# 
  1711  0015                     	;# 
  1712  0015                     	;# 
  1713  0016                     	;# 
  1714  0016                     	;# 
  1715  0017                     	;# 
  1716  0018                     	;# 
  1717  0019                     	;# 
  1718  0019                     	;# 
  1719  001A                     	;# 
  1720  001B                     	;# 
  1721  001C                     	;# 
  1722  001D                     	;# 
  1723  001E                     	;# 
  1724  001F                     	;# 
  1725  008C                     	;# 
  1726  008D                     	;# 
  1727  008E                     	;# 
  1728  0090                     	;# 
  1729  0091                     	;# 
  1730  0092                     	;# 
  1731  0093                     	;# 
  1732  0094                     	;# 
  1733  0097                     	;# 
  1734  009B                     	;# 
  1735  009B                     	;# 
  1736  009C                     	;# 
  1737  009D                     	;# 
  1738  009E                     	;# 
  1739  009F                     	;# 
  1740  010C                     	;# 
  1741  010D                     	;# 
  1742  010E                     	;# 
  1743  0111                     	;# 
  1744  0112                     	;# 
  1745  0113                     	;# 
  1746  0114                     	;# 
  1747  0115                     	;# 
  1748  0116                     	;# 
  1749  0117                     	;# 
  1750  0118                     	;# 
  1751  0119                     	;# 
  1752  018C                     	;# 
  1753  018D                     	;# 
  1754  018E                     	;# 
  1755  0197                     	;# 
  1756  0199                     	;# 
  1757  0199                     	;# 
  1758  0199                     	;# 
  1759  019A                     	;# 
  1760  019A                     	;# 
  1761  019A                     	;# 
  1762  019B                     	;# 
  1763  019B                     	;# 
  1764  019B                     	;# 
  1765  019B                     	;# 
  1766  019B                     	;# 
  1767  019C                     	;# 
  1768  019C                     	;# 
  1769  019C                     	;# 
  1770  019D                     	;# 
  1771  019D                     	;# 
  1772  019D                     	;# 
  1773  019E                     	;# 
  1774  019E                     	;# 
  1775  019E                     	;# 
  1776  019F                     	;# 
  1777  019F                     	;# 
  1778  019F                     	;# 
  1779  019F                     	;# 
  1780  019F                     	;# 
  1781  020C                     	;# 
  1782  020D                     	;# 
  1783  020E                     	;# 
  1784  0211                     	;# 
  1785  0211                     	;# 
  1786  0212                     	;# 
  1787  0212                     	;# 
  1788  0213                     	;# 
  1789  0213                     	;# 
  1790  0214                     	;# 
  1791  0214                     	;# 
  1792  0215                     	;# 
  1793  0215                     	;# 
  1794  0215                     	;# 
  1795  0215                     	;# 
  1796  0216                     	;# 
  1797  0216                     	;# 
  1798  0217                     	;# 
  1799  0217                     	;# 
  1800  0219                     	;# 
  1801  021A                     	;# 
  1802  021B                     	;# 
  1803  021C                     	;# 
  1804  021D                     	;# 
  1805  021D                     	;# 
  1806  021E                     	;# 
  1807  021F                     	;# 
  1808  028C                     	;# 
  1809  028D                     	;# 
  1810  028E                     	;# 
  1811  0291                     	;# 
  1812  0291                     	;# 
  1813  0292                     	;# 
  1814  0293                     	;# 
  1815  0294                     	;# 
  1816  0295                     	;# 
  1817  0295                     	;# 
  1818  0296                     	;# 
  1819  0297                     	;# 
  1820  0298                     	;# 
  1821  029F                     	;# 
  1822  030C                     	;# 
  1823  030D                     	;# 
  1824  030E                     	;# 
  1825  0311                     	;# 
  1826  0311                     	;# 
  1827  0312                     	;# 
  1828  0313                     	;# 
  1829  0314                     	;# 
  1830  0315                     	;# 
  1831  0315                     	;# 
  1832  0316                     	;# 
  1833  0317                     	;# 
  1834  0318                     	;# 
  1835  038C                     	;# 
  1836  038D                     	;# 
  1837  038E                     	;# 
  1838  0391                     	;# 
  1839  0392                     	;# 
  1840  0393                     	;# 
  1841  0394                     	;# 
  1842  0395                     	;# 
  1843  0396                     	;# 
  1844  0397                     	;# 
  1845  0398                     	;# 
  1846  0399                     	;# 
  1847  039A                     	;# 
  1848  039C                     	;# 
  1849  039D                     	;# 
  1850  039E                     	;# 
  1851  039F                     	;# 
  1852  0411                     	;# 
  1853  0411                     	;# 
  1854  0412                     	;# 
  1855  0413                     	;# 
  1856  0414                     	;# 
  1857  0415                     	;# 
  1858  0416                     	;# 
  1859  0417                     	;# 
  1860  0418                     	;# 
  1861  0418                     	;# 
  1862  0419                     	;# 
  1863  041A                     	;# 
  1864  041B                     	;# 
  1865  041C                     	;# 
  1866  041D                     	;# 
  1867  041E                     	;# 
  1868  041F                     	;# 
  1869  0498                     	;# 
  1870  0498                     	;# 
  1871  0499                     	;# 
  1872  049A                     	;# 
  1873  049B                     	;# 
  1874  049B                     	;# 
  1875  049C                     	;# 
  1876  049D                     	;# 
  1877  049E                     	;# 
  1878  049F                     	;# 
  1879  0617                     	;# 
  1880  0618                     	;# 
  1881  0619                     	;# 
  1882  0619                     	;# 
  1883  061A                     	;# 
  1884  061B                     	;# 
  1885  061C                     	;# 
  1886  061C                     	;# 
  1887  061F                     	;# 
  1888  0691                     	;# 
  1889  0692                     	;# 
  1890  0693                     	;# 
  1891  0694                     	;# 
  1892  0695                     	;# 
  1893  0696                     	;# 
  1894  0697                     	;# 
  1895  0698                     	;# 
  1896  0699                     	;# 
  1897  0711                     	;# 
  1898  0712                     	;# 
  1899  0713                     	;# 
  1900  0714                     	;# 
  1901  0715                     	;# 
  1902  0716                     	;# 
  1903  0717                     	;# 
  1904  0718                     	;# 
  1905  0719                     	;# 
  1906  0891                     	;# 
  1907  0891                     	;# 
  1908  0891                     	;# 
  1909  0891                     	;# 
  1910  0891                     	;# 
  1911  0891                     	;# 
  1912  0892                     	;# 
  1913  0892                     	;# 
  1914  0892                     	;# 
  1915  0893                     	;# 
  1916  0893                     	;# 
  1917  0893                     	;# 
  1918  0893                     	;# 
  1919  0893                     	;# 
  1920  0893                     	;# 
  1921  0894                     	;# 
  1922  0894                     	;# 
  1923  0894                     	;# 
  1924  0895                     	;# 
  1925  0895                     	;# 
  1926  0895                     	;# 
  1927  0896                     	;# 
  1928  0896                     	;# 
  1929  0896                     	;# 
  1930  089B                     	;# 
  1931  0911                     	;# 
  1932  0912                     	;# 
  1933  0913                     	;# 
  1934  0914                     	;# 
  1935  0915                     	;# 
  1936  0916                     	;# 
  1937  0918                     	;# 
  1938  0919                     	;# 
  1939  091A                     	;# 
  1940  091B                     	;# 
  1941  091C                     	;# 
  1942  091D                     	;# 
  1943  091E                     	;# 
  1944  091F                     	;# 
  1945  0E0F                     	;# 
  1946  0E10                     	;# 
  1947  0E11                     	;# 
  1948  0E12                     	;# 
  1949  0E13                     	;# 
  1950  0E14                     	;# 
  1951  0E15                     	;# 
  1952  0E16                     	;# 
  1953  0E17                     	;# 
  1954  0E18                     	;# 
  1955  0E19                     	;# 
  1956  0E1A                     	;# 
  1957  0E1B                     	;# 
  1958  0E1C                     	;# 
  1959  0E1D                     	;# 
  1960  0E1E                     	;# 
  1961  0E1F                     	;# 
  1962  0E20                     	;# 
  1963  0E21                     	;# 
  1964  0E22                     	;# 
  1965  0E24                     	;# 
  1966  0E25                     	;# 
  1967  0E28                     	;# 
  1968  0E29                     	;# 
  1969  0E2A                     	;# 
  1970  0E2B                     	;# 
  1971  0E2C                     	;# 
  1972  0E2D                     	;# 
  1973  0E2E                     	;# 
  1974  0E2F                     	;# 
  1975  0E90                     	;# 
  1976  0E91                     	;# 
  1977  0E92                     	;# 
  1978  0E94                     	;# 
  1979  0E95                     	;# 
  1980  0E9C                     	;# 
  1981  0E9D                     	;# 
  1982  0E9E                     	;# 
  1983  0E9F                     	;# 
  1984  0EA0                     	;# 
  1985  0EA1                     	;# 
  1986  0EA2                     	;# 
  1987  0EA3                     	;# 
  1988  0EA4                     	;# 
  1989  0EA5                     	;# 
  1990  0EA6                     	;# 
  1991  0EA7                     	;# 
  1992  0F0F                     	;# 
  1993  0F10                     	;# 
  1994  0F11                     	;# 
  1995  0F12                     	;# 
  1996  0F13                     	;# 
  1997  0F14                     	;# 
  1998  0F15                     	;# 
  1999  0F16                     	;# 
  2000  0F17                     	;# 
  2001  0F18                     	;# 
  2002  0F19                     	;# 
  2003  0F1A                     	;# 
  2004  0F1B                     	;# 
  2005  0F1C                     	;# 
  2006  0F1D                     	;# 
  2007  0F1E                     	;# 
  2008  0F1F                     	;# 
  2009  0F20                     	;# 
  2010  0F21                     	;# 
  2011  0F22                     	;# 
  2012  0F23                     	;# 
  2013  0F24                     	;# 
  2014  0F25                     	;# 
  2015  0F26                     	;# 
  2016  0F27                     	;# 
  2017  0F28                     	;# 
  2018  0F29                     	;# 
  2019  0F2A                     	;# 
  2020  0F2B                     	;# 
  2021  0F2C                     	;# 
  2022  0F2D                     	;# 
  2023  0F2E                     	;# 
  2024  0F2F                     	;# 
  2025  0F30                     	;# 
  2026  0F31                     	;# 
  2027  0F32                     	;# 
  2028  0F33                     	;# 
  2029  0F34                     	;# 
  2030  0F35                     	;# 
  2031  0F36                     	;# 
  2032  0F37                     	;# 
  2033  0FE4                     	;# 
  2034  0FE5                     	;# 
  2035  0FE6                     	;# 
  2036  0FE7                     	;# 
  2037  0FE8                     	;# 
  2038  0FE9                     	;# 
  2039  0FEA                     	;# 
  2040  0FEB                     	;# 
  2041  0FED                     	;# 
  2042  0FEE                     	;# 
  2043  0FEF                     	;# 
  2044  0000                     	;# 
  2045  0001                     	;# 
  2046  0002                     	;# 
  2047  0003                     	;# 
  2048  0004                     	;# 
  2049  0005                     	;# 
  2050  0006                     	;# 
  2051  0007                     	;# 
  2052  0008                     	;# 
  2053  0009                     	;# 
  2054  000A                     	;# 
  2055  000B                     	;# 
  2056  000C                     	;# 
  2057  000D                     	;# 
  2058  000E                     	;# 
  2059  0010                     	;# 
  2060  0011                     	;# 
  2061  0012                     	;# 
  2062  0013                     	;# 
  2063  0014                     	;# 
  2064  0015                     	;# 
  2065  0015                     	;# 
  2066  0016                     	;# 
  2067  0016                     	;# 
  2068  0017                     	;# 
  2069  0018                     	;# 
  2070  0019                     	;# 
  2071  0019                     	;# 
  2072  001A                     	;# 
  2073  001B                     	;# 
  2074  001C                     	;# 
  2075  001D                     	;# 
  2076  001E                     	;# 
  2077  001F                     	;# 
  2078  008C                     	;# 
  2079  008D                     	;# 
  2080  008E                     	;# 
  2081  0090                     	;# 
  2082  0091                     	;# 
  2083  0092                     	;# 
  2084  0093                     	;# 
  2085  0094                     	;# 
  2086  0097                     	;# 
  2087  009B                     	;# 
  2088  009B                     	;# 
  2089  009C                     	;# 
  2090  009D                     	;# 
  2091  009E                     	;# 
  2092  009F                     	;# 
  2093  010C                     	;# 
  2094  010D                     	;# 
  2095  010E                     	;# 
  2096  0111                     	;# 
  2097  0112                     	;# 
  2098  0113                     	;# 
  2099  0114                     	;# 
  2100  0115                     	;# 
  2101  0116                     	;# 
  2102  0117                     	;# 
  2103  0118                     	;# 
  2104  0119                     	;# 
  2105  018C                     	;# 
  2106  018D                     	;# 
  2107  018E                     	;# 
  2108  0197                     	;# 
  2109  0199                     	;# 
  2110  0199                     	;# 
  2111  0199                     	;# 
  2112  019A                     	;# 
  2113  019A                     	;# 
  2114  019A                     	;# 
  2115  019B                     	;# 
  2116  019B                     	;# 
  2117  019B                     	;# 
  2118  019B                     	;# 
  2119  019B                     	;# 
  2120  019C                     	;# 
  2121  019C                     	;# 
  2122  019C                     	;# 
  2123  019D                     	;# 
  2124  019D                     	;# 
  2125  019D                     	;# 
  2126  019E                     	;# 
  2127  019E                     	;# 
  2128  019E                     	;# 
  2129  019F                     	;# 
  2130  019F                     	;# 
  2131  019F                     	;# 
  2132  019F                     	;# 
  2133  019F                     	;# 
  2134  020C                     	;# 
  2135  020D                     	;# 
  2136  020E                     	;# 
  2137  0211                     	;# 
  2138  0211                     	;# 
  2139  0212                     	;# 
  2140  0212                     	;# 
  2141  0213                     	;# 
  2142  0213                     	;# 
  2143  0214                     	;# 
  2144  0214                     	;# 
  2145  0215                     	;# 
  2146  0215                     	;# 
  2147  0215                     	;# 
  2148  0215                     	;# 
  2149  0216                     	;# 
  2150  0216                     	;# 
  2151  0217                     	;# 
  2152  0217                     	;# 
  2153  0219                     	;# 
  2154  021A                     	;# 
  2155  021B                     	;# 
  2156  021C                     	;# 
  2157  021D                     	;# 
  2158  021D                     	;# 
  2159  021E                     	;# 
  2160  021F                     	;# 
  2161  028C                     	;# 
  2162  028D                     	;# 
  2163  028E                     	;# 
  2164  0291                     	;# 
  2165  0291                     	;# 
  2166  0292                     	;# 
  2167  0293                     	;# 
  2168  0294                     	;# 
  2169  0295                     	;# 
  2170  0295                     	;# 
  2171  0296                     	;# 
  2172  0297                     	;# 
  2173  0298                     	;# 
  2174  029F                     	;# 
  2175  030C                     	;# 
  2176  030D                     	;# 
  2177  030E                     	;# 
  2178  0311                     	;# 
  2179  0311                     	;# 
  2180  0312                     	;# 
  2181  0313                     	;# 
  2182  0314                     	;# 
  2183  0315                     	;# 
  2184  0315                     	;# 
  2185  0316                     	;# 
  2186  0317                     	;# 
  2187  0318                     	;# 
  2188  038C                     	;# 
  2189  038D                     	;# 
  2190  038E                     	;# 
  2191  0391                     	;# 
  2192  0392                     	;# 
  2193  0393                     	;# 
  2194  0394                     	;# 
  2195  0395                     	;# 
  2196  0396                     	;# 
  2197  0397                     	;# 
  2198  0398                     	;# 
  2199  0399                     	;# 
  2200  039A                     	;# 
  2201  039C                     	;# 
  2202  039D                     	;# 
  2203  039E                     	;# 
  2204  039F                     	;# 
  2205  0411                     	;# 
  2206  0411                     	;# 
  2207  0412                     	;# 
  2208  0413                     	;# 
  2209  0414                     	;# 
  2210  0415                     	;# 
  2211  0416                     	;# 
  2212  0417                     	;# 
  2213  0418                     	;# 
  2214  0418                     	;# 
  2215  0419                     	;# 
  2216  041A                     	;# 
  2217  041B                     	;# 
  2218  041C                     	;# 
  2219  041D                     	;# 
  2220  041E                     	;# 
  2221  041F                     	;# 
  2222  0498                     	;# 
  2223  0498                     	;# 
  2224  0499                     	;# 
  2225  049A                     	;# 
  2226  049B                     	;# 
  2227  049B                     	;# 
  2228  049C                     	;# 
  2229  049D                     	;# 
  2230  049E                     	;# 
  2231  049F                     	;# 
  2232  0617                     	;# 
  2233  0618                     	;# 
  2234  0619                     	;# 
  2235  0619                     	;# 
  2236  061A                     	;# 
  2237  061B                     	;# 
  2238  061C                     	;# 
  2239  061C                     	;# 
  2240  061F                     	;# 
  2241  0691                     	;# 
  2242  0692                     	;# 
  2243  0693                     	;# 
  2244  0694                     	;# 
  2245  0695                     	;# 
  2246  0696                     	;# 
  2247  0697                     	;# 
  2248  0698                     	;# 
  2249  0699                     	;# 
  2250  0711                     	;# 
  2251  0712                     	;# 
  2252  0713                     	;# 
  2253  0714                     	;# 
  2254  0715                     	;# 
  2255  0716                     	;# 
  2256  0717                     	;# 
  2257  0718                     	;# 
  2258  0719                     	;# 
  2259  0891                     	;# 
  2260  0891                     	;# 
  2261  0891                     	;# 
  2262  0891                     	;# 
  2263  0891                     	;# 
  2264  0891                     	;# 
  2265  0892                     	;# 
  2266  0892                     	;# 
  2267  0892                     	;# 
  2268  0893                     	;# 
  2269  0893                     	;# 
  2270  0893                     	;# 
  2271  0893                     	;# 
  2272  0893                     	;# 
  2273  0893                     	;# 
  2274  0894                     	;# 
  2275  0894                     	;# 
  2276  0894                     	;# 
  2277  0895                     	;# 
  2278  0895                     	;# 
  2279  0895                     	;# 
  2280  0896                     	;# 
  2281  0896                     	;# 
  2282  0896                     	;# 
  2283  089B                     	;# 
  2284  0911                     	;# 
  2285  0912                     	;# 
  2286  0913                     	;# 
  2287  0914                     	;# 
  2288  0915                     	;# 
  2289  0916                     	;# 
  2290  0918                     	;# 
  2291  0919                     	;# 
  2292  091A                     	;# 
  2293  091B                     	;# 
  2294  091C                     	;# 
  2295  091D                     	;# 
  2296  091E                     	;# 
  2297  091F                     	;# 
  2298  0E0F                     	;# 
  2299  0E10                     	;# 
  2300  0E11                     	;# 
  2301  0E12                     	;# 
  2302  0E13                     	;# 
  2303  0E14                     	;# 
  2304  0E15                     	;# 
  2305  0E16                     	;# 
  2306  0E17                     	;# 
  2307  0E18                     	;# 
  2308  0E19                     	;# 
  2309  0E1A                     	;# 
  2310  0E1B                     	;# 
  2311  0E1C                     	;# 
  2312  0E1D                     	;# 
  2313  0E1E                     	;# 
  2314  0E1F                     	;# 
  2315  0E20                     	;# 
  2316  0E21                     	;# 
  2317  0E22                     	;# 
  2318  0E24                     	;# 
  2319  0E25                     	;# 
  2320  0E28                     	;# 
  2321  0E29                     	;# 
  2322  0E2A                     	;# 
  2323  0E2B                     	;# 
  2324  0E2C                     	;# 
  2325  0E2D                     	;# 
  2326  0E2E                     	;# 
  2327  0E2F                     	;# 
  2328  0E90                     	;# 
  2329  0E91                     	;# 
  2330  0E92                     	;# 
  2331  0E94                     	;# 
  2332  0E95                     	;# 
  2333  0E9C                     	;# 
  2334  0E9D                     	;# 
  2335  0E9E                     	;# 
  2336  0E9F                     	;# 
  2337  0EA0                     	;# 
  2338  0EA1                     	;# 
  2339  0EA2                     	;# 
  2340  0EA3                     	;# 
  2341  0EA4                     	;# 
  2342  0EA5                     	;# 
  2343  0EA6                     	;# 
  2344  0EA7                     	;# 
  2345  0F0F                     	;# 
  2346  0F10                     	;# 
  2347  0F11                     	;# 
  2348  0F12                     	;# 
  2349  0F13                     	;# 
  2350  0F14                     	;# 
  2351  0F15                     	;# 
  2352  0F16                     	;# 
  2353  0F17                     	;# 
  2354  0F18                     	;# 
  2355  0F19                     	;# 
  2356  0F1A                     	;# 
  2357  0F1B                     	;# 
  2358  0F1C                     	;# 
  2359  0F1D                     	;# 
  2360  0F1E                     	;# 
  2361  0F1F                     	;# 
  2362  0F20                     	;# 
  2363  0F21                     	;# 
  2364  0F22                     	;# 
  2365  0F23                     	;# 
  2366  0F24                     	;# 
  2367  0F25                     	;# 
  2368  0F26                     	;# 
  2369  0F27                     	;# 
  2370  0F28                     	;# 
  2371  0F29                     	;# 
  2372  0F2A                     	;# 
  2373  0F2B                     	;# 
  2374  0F2C                     	;# 
  2375  0F2D                     	;# 
  2376  0F2E                     	;# 
  2377  0F2F                     	;# 
  2378  0F30                     	;# 
  2379  0F31                     	;# 
  2380  0F32                     	;# 
  2381  0F33                     	;# 
  2382  0F34                     	;# 
  2383  0F35                     	;# 
  2384  0F36                     	;# 
  2385  0F37                     	;# 
  2386  0FE4                     	;# 
  2387  0FE5                     	;# 
  2388  0FE6                     	;# 
  2389  0FE7                     	;# 
  2390  0FE8                     	;# 
  2391  0FE9                     	;# 
  2392  0FEA                     	;# 
  2393  0FEB                     	;# 
  2394  0FED                     	;# 
  2395  0FEE                     	;# 
  2396  0FEF                     	;# 
  2397  0000                     	;# 
  2398  0001                     	;# 
  2399  0002                     	;# 
  2400  0003                     	;# 
  2401  0004                     	;# 
  2402  0005                     	;# 
  2403  0006                     	;# 
  2404  0007                     	;# 
  2405  0008                     	;# 
  2406  0009                     	;# 
  2407  000A                     	;# 
  2408  000B                     	;# 
  2409  000C                     	;# 
  2410  000D                     	;# 
  2411  000E                     	;# 
  2412  0010                     	;# 
  2413  0011                     	;# 
  2414  0012                     	;# 
  2415  0013                     	;# 
  2416  0014                     	;# 
  2417  0015                     	;# 
  2418  0015                     	;# 
  2419  0016                     	;# 
  2420  0016                     	;# 
  2421  0017                     	;# 
  2422  0018                     	;# 
  2423  0019                     	;# 
  2424  0019                     	;# 
  2425  001A                     	;# 
  2426  001B                     	;# 
  2427  001C                     	;# 
  2428  001D                     	;# 
  2429  001E                     	;# 
  2430  001F                     	;# 
  2431  008C                     	;# 
  2432  008D                     	;# 
  2433  008E                     	;# 
  2434  0090                     	;# 
  2435  0091                     	;# 
  2436  0092                     	;# 
  2437  0093                     	;# 
  2438  0094                     	;# 
  2439  0097                     	;# 
  2440  009B                     	;# 
  2441  009B                     	;# 
  2442  009C                     	;# 
  2443  009D                     	;# 
  2444  009E                     	;# 
  2445  009F                     	;# 
  2446  010C                     	;# 
  2447  010D                     	;# 
  2448  010E                     	;# 
  2449  0111                     	;# 
  2450  0112                     	;# 
  2451  0113                     	;# 
  2452  0114                     	;# 
  2453  0115                     	;# 
  2454  0116                     	;# 
  2455  0117                     	;# 
  2456  0118                     	;# 
  2457  0119                     	;# 
  2458  018C                     	;# 
  2459  018D                     	;# 
  2460  018E                     	;# 
  2461  0197                     	;# 
  2462  0199                     	;# 
  2463  0199                     	;# 
  2464  0199                     	;# 
  2465  019A                     	;# 
  2466  019A                     	;# 
  2467  019A                     	;# 
  2468  019B                     	;# 
  2469  019B                     	;# 
  2470  019B                     	;# 
  2471  019B                     	;# 
  2472  019B                     	;# 
  2473  019C                     	;# 
  2474  019C                     	;# 
  2475  019C                     	;# 
  2476  019D                     	;# 
  2477  019D                     	;# 
  2478  019D                     	;# 
  2479  019E                     	;# 
  2480  019E                     	;# 
  2481  019E                     	;# 
  2482  019F                     	;# 
  2483  019F                     	;# 
  2484  019F                     	;# 
  2485  019F                     	;# 
  2486  019F                     	;# 
  2487  020C                     	;# 
  2488  020D                     	;# 
  2489  020E                     	;# 
  2490  0211                     	;# 
  2491  0211                     	;# 
  2492  0212                     	;# 
  2493  0212                     	;# 
  2494  0213                     	;# 
  2495  0213                     	;# 
  2496  0214                     	;# 
  2497  0214                     	;# 
  2498  0215                     	;# 
  2499  0215                     	;# 
  2500  0215                     	;# 
  2501  0215                     	;# 
  2502  0216                     	;# 
  2503  0216                     	;# 
  2504  0217                     	;# 
  2505  0217                     	;# 
  2506  0219                     	;# 
  2507  021A                     	;# 
  2508  021B                     	;# 
  2509  021C                     	;# 
  2510  021D                     	;# 
  2511  021D                     	;# 
  2512  021E                     	;# 
  2513  021F                     	;# 
  2514  028C                     	;# 
  2515  028D                     	;# 
  2516  028E                     	;# 
  2517  0291                     	;# 
  2518  0291                     	;# 
  2519  0292                     	;# 
  2520  0293                     	;# 
  2521  0294                     	;# 
  2522  0295                     	;# 
  2523  0295                     	;# 
  2524  0296                     	;# 
  2525  0297                     	;# 
  2526  0298                     	;# 
  2527  029F                     	;# 
  2528  030C                     	;# 
  2529  030D                     	;# 
  2530  030E                     	;# 
  2531  0311                     	;# 
  2532  0311                     	;# 
  2533  0312                     	;# 
  2534  0313                     	;# 
  2535  0314                     	;# 
  2536  0315                     	;# 
  2537  0315                     	;# 
  2538  0316                     	;# 
  2539  0317                     	;# 
  2540  0318                     	;# 
  2541  038C                     	;# 
  2542  038D                     	;# 
  2543  038E                     	;# 
  2544  0391                     	;# 
  2545  0392                     	;# 
  2546  0393                     	;# 
  2547  0394                     	;# 
  2548  0395                     	;# 
  2549  0396                     	;# 
  2550  0397                     	;# 
  2551  0398                     	;# 
  2552  0399                     	;# 
  2553  039A                     	;# 
  2554  039C                     	;# 
  2555  039D                     	;# 
  2556  039E                     	;# 
  2557  039F                     	;# 
  2558  0411                     	;# 
  2559  0411                     	;# 
  2560  0412                     	;# 
  2561  0413                     	;# 
  2562  0414                     	;# 
  2563  0415                     	;# 
  2564  0416                     	;# 
  2565  0417                     	;# 
  2566  0418                     	;# 
  2567  0418                     	;# 
  2568  0419                     	;# 
  2569  041A                     	;# 
  2570  041B                     	;# 
  2571  041C                     	;# 
  2572  041D                     	;# 
  2573  041E                     	;# 
  2574  041F                     	;# 
  2575  0498                     	;# 
  2576  0498                     	;# 
  2577  0499                     	;# 
  2578  049A                     	;# 
  2579  049B                     	;# 
  2580  049B                     	;# 
  2581  049C                     	;# 
  2582  049D                     	;# 
  2583  049E                     	;# 
  2584  049F                     	;# 
  2585  0617                     	;# 
  2586  0618                     	;# 
  2587  0619                     	;# 
  2588  0619                     	;# 
  2589  061A                     	;# 
  2590  061B                     	;# 
  2591  061C                     	;# 
  2592  061C                     	;# 
  2593  061F                     	;# 
  2594  0691                     	;# 
  2595  0692                     	;# 
  2596  0693                     	;# 
  2597  0694                     	;# 
  2598  0695                     	;# 
  2599  0696                     	;# 
  2600  0697                     	;# 
  2601  0698                     	;# 
  2602  0699                     	;# 
  2603  0711                     	;# 
  2604  0712                     	;# 
  2605  0713                     	;# 
  2606  0714                     	;# 
  2607  0715                     	;# 
  2608  0716                     	;# 
  2609  0717                     	;# 
  2610  0718                     	;# 
  2611  0719                     	;# 
  2612  0891                     	;# 
  2613  0891                     	;# 
  2614  0891                     	;# 
  2615  0891                     	;# 
  2616  0891                     	;# 
  2617  0891                     	;# 
  2618  0892                     	;# 
  2619  0892                     	;# 
  2620  0892                     	;# 
  2621  0893                     	;# 
  2622  0893                     	;# 
  2623  0893                     	;# 
  2624  0893                     	;# 
  2625  0893                     	;# 
  2626  0893                     	;# 
  2627  0894                     	;# 
  2628  0894                     	;# 
  2629  0894                     	;# 
  2630  0895                     	;# 
  2631  0895                     	;# 
  2632  0895                     	;# 
  2633  0896                     	;# 
  2634  0896                     	;# 
  2635  0896                     	;# 
  2636  089B                     	;# 
  2637  0911                     	;# 
  2638  0912                     	;# 
  2639  0913                     	;# 
  2640  0914                     	;# 
  2641  0915                     	;# 
  2642  0916                     	;# 
  2643  0918                     	;# 
  2644  0919                     	;# 
  2645  091A                     	;# 
  2646  091B                     	;# 
  2647  091C                     	;# 
  2648  091D                     	;# 
  2649  091E                     	;# 
  2650  091F                     	;# 
  2651  0E0F                     	;# 
  2652  0E10                     	;# 
  2653  0E11                     	;# 
  2654  0E12                     	;# 
  2655  0E13                     	;# 
  2656  0E14                     	;# 
  2657  0E15                     	;# 
  2658  0E16                     	;# 
  2659  0E17                     	;# 
  2660  0E18                     	;# 
  2661  0E19                     	;# 
  2662  0E1A                     	;# 
  2663  0E1B                     	;# 
  2664  0E1C                     	;# 
  2665  0E1D                     	;# 
  2666  0E1E                     	;# 
  2667  0E1F                     	;# 
  2668  0E20                     	;# 
  2669  0E21                     	;# 
  2670  0E22                     	;# 
  2671  0E24                     	;# 
  2672  0E25                     	;# 
  2673  0E28                     	;# 
  2674  0E29                     	;# 
  2675  0E2A                     	;# 
  2676  0E2B                     	;# 
  2677  0E2C                     	;# 
  2678  0E2D                     	;# 
  2679  0E2E                     	;# 
  2680  0E2F                     	;# 
  2681  0E90                     	;# 
  2682  0E91                     	;# 
  2683  0E92                     	;# 
  2684  0E94                     	;# 
  2685  0E95                     	;# 
  2686  0E9C                     	;# 
  2687  0E9D                     	;# 
  2688  0E9E                     	;# 
  2689  0E9F                     	;# 
  2690  0EA0                     	;# 
  2691  0EA1                     	;# 
  2692  0EA2                     	;# 
  2693  0EA3                     	;# 
  2694  0EA4                     	;# 
  2695  0EA5                     	;# 
  2696  0EA6                     	;# 
  2697  0EA7                     	;# 
  2698  0F0F                     	;# 
  2699  0F10                     	;# 
  2700  0F11                     	;# 
  2701  0F12                     	;# 
  2702  0F13                     	;# 
  2703  0F14                     	;# 
  2704  0F15                     	;# 
  2705  0F16                     	;# 
  2706  0F17                     	;# 
  2707  0F18                     	;# 
  2708  0F19                     	;# 
  2709  0F1A                     	;# 
  2710  0F1B                     	;# 
  2711  0F1C                     	;# 
  2712  0F1D                     	;# 
  2713  0F1E                     	;# 
  2714  0F1F                     	;# 
  2715  0F20                     	;# 
  2716  0F21                     	;# 
  2717  0F22                     	;# 
  2718  0F23                     	;# 
  2719  0F24                     	;# 
  2720  0F25                     	;# 
  2721  0F26                     	;# 
  2722  0F27                     	;# 
  2723  0F28                     	;# 
  2724  0F29                     	;# 
  2725  0F2A                     	;# 
  2726  0F2B                     	;# 
  2727  0F2C                     	;# 
  2728  0F2D                     	;# 
  2729  0F2E                     	;# 
  2730  0F2F                     	;# 
  2731  0F30                     	;# 
  2732  0F31                     	;# 
  2733  0F32                     	;# 
  2734  0F33                     	;# 
  2735  0F34                     	;# 
  2736  0F35                     	;# 
  2737  0F36                     	;# 
  2738  0F37                     	;# 
  2739  0FE4                     	;# 
  2740  0FE5                     	;# 
  2741  0FE6                     	;# 
  2742  0FE7                     	;# 
  2743  0FE8                     	;# 
  2744  0FE9                     	;# 
  2745  0FEA                     	;# 
  2746  0FEB                     	;# 
  2747  0FED                     	;# 
  2748  0FEE                     	;# 
  2749  0FEF                     	;# 
  2750  0000                     	;# 
  2751  0001                     	;# 
  2752  0002                     	;# 
  2753  0003                     	;# 
  2754  0004                     	;# 
  2755  0005                     	;# 
  2756  0006                     	;# 
  2757  0007                     	;# 
  2758  0008                     	;# 
  2759  0009                     	;# 
  2760  000A                     	;# 
  2761  000B                     	;# 
  2762  000C                     	;# 
  2763  000D                     	;# 
  2764  000E                     	;# 
  2765  0010                     	;# 
  2766  0011                     	;# 
  2767  0012                     	;# 
  2768  0013                     	;# 
  2769  0014                     	;# 
  2770  0015                     	;# 
  2771  0015                     	;# 
  2772  0016                     	;# 
  2773  0016                     	;# 
  2774  0017                     	;# 
  2775  0018                     	;# 
  2776  0019                     	;# 
  2777  0019                     	;# 
  2778  001A                     	;# 
  2779  001B                     	;# 
  2780  001C                     	;# 
  2781  001D                     	;# 
  2782  001E                     	;# 
  2783  001F                     	;# 
  2784  008C                     	;# 
  2785  008D                     	;# 
  2786  008E                     	;# 
  2787  0090                     	;# 
  2788  0091                     	;# 
  2789  0092                     	;# 
  2790  0093                     	;# 
  2791  0094                     	;# 
  2792  0097                     	;# 
  2793  009B                     	;# 
  2794  009B                     	;# 
  2795  009C                     	;# 
  2796  009D                     	;# 
  2797  009E                     	;# 
  2798  009F                     	;# 
  2799  010C                     	;# 
  2800  010D                     	;# 
  2801  010E                     	;# 
  2802  0111                     	;# 
  2803  0112                     	;# 
  2804  0113                     	;# 
  2805  0114                     	;# 
  2806  0115                     	;# 
  2807  0116                     	;# 
  2808  0117                     	;# 
  2809  0118                     	;# 
  2810  0119                     	;# 
  2811  018C                     	;# 
  2812  018D                     	;# 
  2813  018E                     	;# 
  2814  0197                     	;# 
  2815  0199                     	;# 
  2816  0199                     	;# 
  2817  0199                     	;# 
  2818  019A                     	;# 
  2819  019A                     	;# 
  2820  019A                     	;# 
  2821  019B                     	;# 
  2822  019B                     	;# 
  2823  019B                     	;# 
  2824  019B                     	;# 
  2825  019B                     	;# 
  2826  019C                     	;# 
  2827  019C                     	;# 
  2828  019C                     	;# 
  2829  019D                     	;# 
  2830  019D                     	;# 
  2831  019D                     	;# 
  2832  019E                     	;# 
  2833  019E                     	;# 
  2834  019E                     	;# 
  2835  019F                     	;# 
  2836  019F                     	;# 
  2837  019F                     	;# 
  2838  019F                     	;# 
  2839  019F                     	;# 
  2840  020C                     	;# 
  2841  020D                     	;# 
  2842  020E                     	;# 
  2843  0211                     	;# 
  2844  0211                     	;# 
  2845  0212                     	;# 
  2846  0212                     	;# 
  2847  0213                     	;# 
  2848  0213                     	;# 
  2849  0214                     	;# 
  2850  0214                     	;# 
  2851  0215                     	;# 
  2852  0215                     	;# 
  2853  0215                     	;# 
  2854  0215                     	;# 
  2855  0216                     	;# 
  2856  0216                     	;# 
  2857  0217                     	;# 
  2858  0217                     	;# 
  2859  0219                     	;# 
  2860  021A                     	;# 
  2861  021B                     	;# 
  2862  021C                     	;# 
  2863  021D                     	;# 
  2864  021D                     	;# 
  2865  021E                     	;# 
  2866  021F                     	;# 
  2867  028C                     	;# 
  2868  028D                     	;# 
  2869  028E                     	;# 
  2870  0291                     	;# 
  2871  0291                     	;# 
  2872  0292                     	;# 
  2873  0293                     	;# 
  2874  0294                     	;# 
  2875  0295                     	;# 
  2876  0295                     	;# 
  2877  0296                     	;# 
  2878  0297                     	;# 
  2879  0298                     	;# 
  2880  029F                     	;# 
  2881  030C                     	;# 
  2882  030D                     	;# 
  2883  030E                     	;# 
  2884  0311                     	;# 
  2885  0311                     	;# 
  2886  0312                     	;# 
  2887  0313                     	;# 
  2888  0314                     	;# 
  2889  0315                     	;# 
  2890  0315                     	;# 
  2891  0316                     	;# 
  2892  0317                     	;# 
  2893  0318                     	;# 
  2894  038C                     	;# 
  2895  038D                     	;# 
  2896  038E                     	;# 
  2897  0391                     	;# 
  2898  0392                     	;# 
  2899  0393                     	;# 
  2900  0394                     	;# 
  2901  0395                     	;# 
  2902  0396                     	;# 
  2903  0397                     	;# 
  2904  0398                     	;# 
  2905  0399                     	;# 
  2906  039A                     	;# 
  2907  039C                     	;# 
  2908  039D                     	;# 
  2909  039E                     	;# 
  2910  039F                     	;# 
  2911  0411                     	;# 
  2912  0411                     	;# 
  2913  0412                     	;# 
  2914  0413                     	;# 
  2915  0414                     	;# 
  2916  0415                     	;# 
  2917  0416                     	;# 
  2918  0417                     	;# 
  2919  0418                     	;# 
  2920  0418                     	;# 
  2921  0419                     	;# 
  2922  041A                     	;# 
  2923  041B                     	;# 
  2924  041C                     	;# 
  2925  041D                     	;# 
  2926  041E                     	;# 
  2927  041F                     	;# 
  2928  0498                     	;# 
  2929  0498                     	;# 
  2930  0499                     	;# 
  2931  049A                     	;# 
  2932  049B                     	;# 
  2933  049B                     	;# 
  2934  049C                     	;# 
  2935  049D                     	;# 
  2936  049E                     	;# 
  2937  049F                     	;# 
  2938  0617                     	;# 
  2939  0618                     	;# 
  2940  0619                     	;# 
  2941  0619                     	;# 
  2942  061A                     	;# 
  2943  061B                     	;# 
  2944  061C                     	;# 
  2945  061C                     	;# 
  2946  061F                     	;# 
  2947  0691                     	;# 
  2948  0692                     	;# 
  2949  0693                     	;# 
  2950  0694                     	;# 
  2951  0695                     	;# 
  2952  0696                     	;# 
  2953  0697                     	;# 
  2954  0698                     	;# 
  2955  0699                     	;# 
  2956  0711                     	;# 
  2957  0712                     	;# 
  2958  0713                     	;# 
  2959  0714                     	;# 
  2960  0715                     	;# 
  2961  0716                     	;# 
  2962  0717                     	;# 
  2963  0718                     	;# 
  2964  0719                     	;# 
  2965  0891                     	;# 
  2966  0891                     	;# 
  2967  0891                     	;# 
  2968  0891                     	;# 
  2969  0891                     	;# 
  2970  0891                     	;# 
  2971  0892                     	;# 
  2972  0892                     	;# 
  2973  0892                     	;# 
  2974  0893                     	;# 
  2975  0893                     	;# 
  2976  0893                     	;# 
  2977  0893                     	;# 
  2978  0893                     	;# 
  2979  0893                     	;# 
  2980  0894                     	;# 
  2981  0894                     	;# 
  2982  0894                     	;# 
  2983  0895                     	;# 
  2984  0895                     	;# 
  2985  0895                     	;# 
  2986  0896                     	;# 
  2987  0896                     	;# 
  2988  0896                     	;# 
  2989  089B                     	;# 
  2990  0911                     	;# 
  2991  0912                     	;# 
  2992  0913                     	;# 
  2993  0914                     	;# 
  2994  0915                     	;# 
  2995  0916                     	;# 
  2996  0918                     	;# 
  2997  0919                     	;# 
  2998  091A                     	;# 
  2999  091B                     	;# 
  3000  091C                     	;# 
  3001  091D                     	;# 
  3002  091E                     	;# 
  3003  091F                     	;# 
  3004  0E0F                     	;# 
  3005  0E10                     	;# 
  3006  0E11                     	;# 
  3007  0E12                     	;# 
  3008  0E13                     	;# 
  3009  0E14                     	;# 
  3010  0E15                     	;# 
  3011  0E16                     	;# 
  3012  0E17                     	;# 
  3013  0E18                     	;# 
  3014  0E19                     	;# 
  3015  0E1A                     	;# 
  3016  0E1B                     	;# 
  3017  0E1C                     	;# 
  3018  0E1D                     	;# 
  3019  0E1E                     	;# 
  3020  0E1F                     	;# 
  3021  0E20                     	;# 
  3022  0E21                     	;# 
  3023  0E22                     	;# 
  3024  0E24                     	;# 
  3025  0E25                     	;# 
  3026  0E28                     	;# 
  3027  0E29                     	;# 
  3028  0E2A                     	;# 
  3029  0E2B                     	;# 
  3030  0E2C                     	;# 
  3031  0E2D                     	;# 
  3032  0E2E                     	;# 
  3033  0E2F                     	;# 
  3034  0E90                     	;# 
  3035  0E91                     	;# 
  3036  0E92                     	;# 
  3037  0E94                     	;# 
  3038  0E95                     	;# 
  3039  0E9C                     	;# 
  3040  0E9D                     	;# 
  3041  0E9E                     	;# 
  3042  0E9F                     	;# 
  3043  0EA0                     	;# 
  3044  0EA1                     	;# 
  3045  0EA2                     	;# 
  3046  0EA3                     	;# 
  3047  0EA4                     	;# 
  3048  0EA5                     	;# 
  3049  0EA6                     	;# 
  3050  0EA7                     	;# 
  3051  0F0F                     	;# 
  3052  0F10                     	;# 
  3053  0F11                     	;# 
  3054  0F12                     	;# 
  3055  0F13                     	;# 
  3056  0F14                     	;# 
  3057  0F15                     	;# 
  3058  0F16                     	;# 
  3059  0F17                     	;# 
  3060  0F18                     	;# 
  3061  0F19                     	;# 
  3062  0F1A                     	;# 
  3063  0F1B                     	;# 
  3064  0F1C                     	;# 
  3065  0F1D                     	;# 
  3066  0F1E                     	;# 
  3067  0F1F                     	;# 
  3068  0F20                     	;# 
  3069  0F21                     	;# 
  3070  0F22                     	;# 
  3071  0F23                     	;# 
  3072  0F24                     	;# 
  3073  0F25                     	;# 
  3074  0F26                     	;# 
  3075  0F27                     	;# 
  3076  0F28                     	;# 
  3077  0F29                     	;# 
  3078  0F2A                     	;# 
  3079  0F2B                     	;# 
  3080  0F2C                     	;# 
  3081  0F2D                     	;# 
  3082  0F2E                     	;# 
  3083  0F2F                     	;# 
  3084  0F30                     	;# 
  3085  0F31                     	;# 
  3086  0F32                     	;# 
  3087  0F33                     	;# 
  3088  0F34                     	;# 
  3089  0F35                     	;# 
  3090  0F36                     	;# 
  3091  0F37                     	;# 
  3092  0FE4                     	;# 
  3093  0FE5                     	;# 
  3094  0FE6                     	;# 
  3095  0FE7                     	;# 
  3096  0FE8                     	;# 
  3097  0FE9                     	;# 
  3098  0FEA                     	;# 
  3099  0FEB                     	;# 
  3100  0FED                     	;# 
  3101  0FEE                     	;# 
  3102  0FEF                     	;# 
  3103  0000                     	;# 
  3104  0001                     	;# 
  3105  0002                     	;# 
  3106  0003                     	;# 
  3107  0004                     	;# 
  3108  0005                     	;# 
  3109  0006                     	;# 
  3110  0007                     	;# 
  3111  0008                     	;# 
  3112  0009                     	;# 
  3113  000A                     	;# 
  3114  000B                     	;# 
  3115  000C                     	;# 
  3116  000D                     	;# 
  3117  000E                     	;# 
  3118  0010                     	;# 
  3119  0011                     	;# 
  3120  0012                     	;# 
  3121  0013                     	;# 
  3122  0014                     	;# 
  3123  0015                     	;# 
  3124  0015                     	;# 
  3125  0016                     	;# 
  3126  0016                     	;# 
  3127  0017                     	;# 
  3128  0018                     	;# 
  3129  0019                     	;# 
  3130  0019                     	;# 
  3131  001A                     	;# 
  3132  001B                     	;# 
  3133  001C                     	;# 
  3134  001D                     	;# 
  3135  001E                     	;# 
  3136  001F                     	;# 
  3137  008C                     	;# 
  3138  008D                     	;# 
  3139  008E                     	;# 
  3140  0090                     	;# 
  3141  0091                     	;# 
  3142  0092                     	;# 
  3143  0093                     	;# 
  3144  0094                     	;# 
  3145  0097                     	;# 
  3146  009B                     	;# 
  3147  009B                     	;# 
  3148  009C                     	;# 
  3149  009D                     	;# 
  3150  009E                     	;# 
  3151  009F                     	;# 
  3152  010C                     	;# 
  3153  010D                     	;# 
  3154  010E                     	;# 
  3155  0111                     	;# 
  3156  0112                     	;# 
  3157  0113                     	;# 
  3158  0114                     	;# 
  3159  0115                     	;# 
  3160  0116                     	;# 
  3161  0117                     	;# 
  3162  0118                     	;# 
  3163  0119                     	;# 
  3164  018C                     	;# 
  3165  018D                     	;# 
  3166  018E                     	;# 
  3167  0197                     	;# 
  3168  0199                     	;# 
  3169  0199                     	;# 
  3170  0199                     	;# 
  3171  019A                     	;# 
  3172  019A                     	;# 
  3173  019A                     	;# 
  3174  019B                     	;# 
  3175  019B                     	;# 
  3176  019B                     	;# 
  3177  019B                     	;# 
  3178  019B                     	;# 
  3179  019C                     	;# 
  3180  019C                     	;# 
  3181  019C                     	;# 
  3182  019D                     	;# 
  3183  019D                     	;# 
  3184  019D                     	;# 
  3185  019E                     	;# 
  3186  019E                     	;# 
  3187  019E                     	;# 
  3188  019F                     	;# 
  3189  019F                     	;# 
  3190  019F                     	;# 
  3191  019F                     	;# 
  3192  019F                     	;# 
  3193  020C                     	;# 
  3194  020D                     	;# 
  3195  020E                     	;# 
  3196  0211                     	;# 
  3197  0211                     	;# 
  3198  0212                     	;# 
  3199  0212                     	;# 
  3200  0213                     	;# 
  3201  0213                     	;# 
  3202  0214                     	;# 
  3203  0214                     	;# 
  3204  0215                     	;# 
  3205  0215                     	;# 
  3206  0215                     	;# 
  3207  0215                     	;# 
  3208  0216                     	;# 
  3209  0216                     	;# 
  3210  0217                     	;# 
  3211  0217                     	;# 
  3212  0219                     	;# 
  3213  021A                     	;# 
  3214  021B                     	;# 
  3215  021C                     	;# 
  3216  021D                     	;# 
  3217  021D                     	;# 
  3218  021E                     	;# 
  3219  021F                     	;# 
  3220  028C                     	;# 
  3221  028D                     	;# 
  3222  028E                     	;# 
  3223  0291                     	;# 
  3224  0291                     	;# 
  3225  0292                     	;# 
  3226  0293                     	;# 
  3227  0294                     	;# 
  3228  0295                     	;# 
  3229  0295                     	;# 
  3230  0296                     	;# 
  3231  0297                     	;# 
  3232  0298                     	;# 
  3233  029F                     	;# 
  3234  030C                     	;# 
  3235  030D                     	;# 
  3236  030E                     	;# 
  3237  0311                     	;# 
  3238  0311                     	;# 
  3239  0312                     	;# 
  3240  0313                     	;# 
  3241  0314                     	;# 
  3242  0315                     	;# 
  3243  0315                     	;# 
  3244  0316                     	;# 
  3245  0317                     	;# 
  3246  0318                     	;# 
  3247  038C                     	;# 
  3248  038D                     	;# 
  3249  038E                     	;# 
  3250  0391                     	;# 
  3251  0392                     	;# 
  3252  0393                     	;# 
  3253  0394                     	;# 
  3254  0395                     	;# 
  3255  0396                     	;# 
  3256  0397                     	;# 
  3257  0398                     	;# 
  3258  0399                     	;# 
  3259  039A                     	;# 
  3260  039C                     	;# 
  3261  039D                     	;# 
  3262  039E                     	;# 
  3263  039F                     	;# 
  3264  0411                     	;# 
  3265  0411                     	;# 
  3266  0412                     	;# 
  3267  0413                     	;# 
  3268  0414                     	;# 
  3269  0415                     	;# 
  3270  0416                     	;# 
  3271  0417                     	;# 
  3272  0418                     	;# 
  3273  0418                     	;# 
  3274  0419                     	;# 
  3275  041A                     	;# 
  3276  041B                     	;# 
  3277  041C                     	;# 
  3278  041D                     	;# 
  3279  041E                     	;# 
  3280  041F                     	;# 
  3281  0498                     	;# 
  3282  0498                     	;# 
  3283  0499                     	;# 
  3284  049A                     	;# 
  3285  049B                     	;# 
  3286  049B                     	;# 
  3287  049C                     	;# 
  3288  049D                     	;# 
  3289  049E                     	;# 
  3290  049F                     	;# 
  3291  0617                     	;# 
  3292  0618                     	;# 
  3293  0619                     	;# 
  3294  0619                     	;# 
  3295  061A                     	;# 
  3296  061B                     	;# 
  3297  061C                     	;# 
  3298  061C                     	;# 
  3299  061F                     	;# 
  3300  0691                     	;# 
  3301  0692                     	;# 
  3302  0693                     	;# 
  3303  0694                     	;# 
  3304  0695                     	;# 
  3305  0696                     	;# 
  3306  0697                     	;# 
  3307  0698                     	;# 
  3308  0699                     	;# 
  3309  0711                     	;# 
  3310  0712                     	;# 
  3311  0713                     	;# 
  3312  0714                     	;# 
  3313  0715                     	;# 
  3314  0716                     	;# 
  3315  0717                     	;# 
  3316  0718                     	;# 
  3317  0719                     	;# 
  3318  0891                     	;# 
  3319  0891                     	;# 
  3320  0891                     	;# 
  3321  0891                     	;# 
  3322  0891                     	;# 
  3323  0891                     	;# 
  3324  0892                     	;# 
  3325  0892                     	;# 
  3326  0892                     	;# 
  3327  0893                     	;# 
  3328  0893                     	;# 
  3329  0893                     	;# 
  3330  0893                     	;# 
  3331  0893                     	;# 
  3332  0893                     	;# 
  3333  0894                     	;# 
  3334  0894                     	;# 
  3335  0894                     	;# 
  3336  0895                     	;# 
  3337  0895                     	;# 
  3338  0895                     	;# 
  3339  0896                     	;# 
  3340  0896                     	;# 
  3341  0896                     	;# 
  3342  089B                     	;# 
  3343  0911                     	;# 
  3344  0912                     	;# 
  3345  0913                     	;# 
  3346  0914                     	;# 
  3347  0915                     	;# 
  3348  0916                     	;# 
  3349  0918                     	;# 
  3350  0919                     	;# 
  3351  091A                     	;# 
  3352  091B                     	;# 
  3353  091C                     	;# 
  3354  091D                     	;# 
  3355  091E                     	;# 
  3356  091F                     	;# 
  3357  0E0F                     	;# 
  3358  0E10                     	;# 
  3359  0E11                     	;# 
  3360  0E12                     	;# 
  3361  0E13                     	;# 
  3362  0E14                     	;# 
  3363  0E15                     	;# 
  3364  0E16                     	;# 
  3365  0E17                     	;# 
  3366  0E18                     	;# 
  3367  0E19                     	;# 
  3368  0E1A                     	;# 
  3369  0E1B                     	;# 
  3370  0E1C                     	;# 
  3371  0E1D                     	;# 
  3372  0E1E                     	;# 
  3373  0E1F                     	;# 
  3374  0E20                     	;# 
  3375  0E21                     	;# 
  3376  0E22                     	;# 
  3377  0E24                     	;# 
  3378  0E25                     	;# 
  3379  0E28                     	;# 
  3380  0E29                     	;# 
  3381  0E2A                     	;# 
  3382  0E2B                     	;# 
  3383  0E2C                     	;# 
  3384  0E2D                     	;# 
  3385  0E2E                     	;# 
  3386  0E2F                     	;# 
  3387  0E90                     	;# 
  3388  0E91                     	;# 
  3389  0E92                     	;# 
  3390  0E94                     	;# 
  3391  0E95                     	;# 
  3392  0E9C                     	;# 
  3393  0E9D                     	;# 
  3394  0E9E                     	;# 
  3395  0E9F                     	;# 
  3396  0EA0                     	;# 
  3397  0EA1                     	;# 
  3398  0EA2                     	;# 
  3399  0EA3                     	;# 
  3400  0EA4                     	;# 
  3401  0EA5                     	;# 
  3402  0EA6                     	;# 
  3403  0EA7                     	;# 
  3404  0F0F                     	;# 
  3405  0F10                     	;# 
  3406  0F11                     	;# 
  3407  0F12                     	;# 
  3408  0F13                     	;# 
  3409  0F14                     	;# 
  3410  0F15                     	;# 
  3411  0F16                     	;# 
  3412  0F17                     	;# 
  3413  0F18                     	;# 
  3414  0F19                     	;# 
  3415  0F1A                     	;# 
  3416  0F1B                     	;# 
  3417  0F1C                     	;# 
  3418  0F1D                     	;# 
  3419  0F1E                     	;# 
  3420  0F1F                     	;# 
  3421  0F20                     	;# 
  3422  0F21                     	;# 
  3423  0F22                     	;# 
  3424  0F23                     	;# 
  3425  0F24                     	;# 
  3426  0F25                     	;# 
  3427  0F26                     	;# 
  3428  0F27                     	;# 
  3429  0F28                     	;# 
  3430  0F29                     	;# 
  3431  0F2A                     	;# 
  3432  0F2B                     	;# 
  3433  0F2C                     	;# 
  3434  0F2D                     	;# 
  3435  0F2E                     	;# 
  3436  0F2F                     	;# 
  3437  0F30                     	;# 
  3438  0F31                     	;# 
  3439  0F32                     	;# 
  3440  0F33                     	;# 
  3441  0F34                     	;# 
  3442  0F35                     	;# 
  3443  0F36                     	;# 
  3444  0F37                     	;# 
  3445  0FE4                     	;# 
  3446  0FE5                     	;# 
  3447  0FE6                     	;# 
  3448  0FE7                     	;# 
  3449  0FE8                     	;# 
  3450  0FE9                     	;# 
  3451  0FEA                     	;# 
  3452  0FEB                     	;# 
  3453  0FED                     	;# 
  3454  0FEE                     	;# 
  3455  0FEF                     	;# 
  3456  0000                     	;# 
  3457  0001                     	;# 
  3458  0002                     	;# 
  3459  0003                     	;# 
  3460  0004                     	;# 
  3461  0005                     	;# 
  3462  0006                     	;# 
  3463  0007                     	;# 
  3464  0008                     	;# 
  3465  0009                     	;# 
  3466  000A                     	;# 
  3467  000B                     	;# 
  3468  000C                     	;# 
  3469  000D                     	;# 
  3470  000E                     	;# 
  3471  0010                     	;# 
  3472  0011                     	;# 
  3473  0012                     	;# 
  3474  0013                     	;# 
  3475  0014                     	;# 
  3476  0015                     	;# 
  3477  0015                     	;# 
  3478  0016                     	;# 
  3479  0016                     	;# 
  3480  0017                     	;# 
  3481  0018                     	;# 
  3482  0019                     	;# 
  3483  0019                     	;# 
  3484  001A                     	;# 
  3485  001B                     	;# 
  3486  001C                     	;# 
  3487  001D                     	;# 
  3488  001E                     	;# 
  3489  001F                     	;# 
  3490  008C                     	;# 
  3491  008D                     	;# 
  3492  008E                     	;# 
  3493  0090                     	;# 
  3494  0091                     	;# 
  3495  0092                     	;# 
  3496  0093                     	;# 
  3497  0094                     	;# 
  3498  0097                     	;# 
  3499  009B                     	;# 
  3500  009B                     	;# 
  3501  009C                     	;# 
  3502  009D                     	;# 
  3503  009E                     	;# 
  3504  009F                     	;# 
  3505  010C                     	;# 
  3506  010D                     	;# 
  3507  010E                     	;# 
  3508  0111                     	;# 
  3509  0112                     	;# 
  3510  0113                     	;# 
  3511  0114                     	;# 
  3512  0115                     	;# 
  3513  0116                     	;# 
  3514  0117                     	;# 
  3515  0118                     	;# 
  3516  0119                     	;# 
  3517  018C                     	;# 
  3518  018D                     	;# 
  3519  018E                     	;# 
  3520  0197                     	;# 
  3521  0199                     	;# 
  3522  0199                     	;# 
  3523  0199                     	;# 
  3524  019A                     	;# 
  3525  019A                     	;# 
  3526  019A                     	;# 
  3527  019B                     	;# 
  3528  019B                     	;# 
  3529  019B                     	;# 
  3530  019B                     	;# 
  3531  019B                     	;# 
  3532  019C                     	;# 
  3533  019C                     	;# 
  3534  019C                     	;# 
  3535  019D                     	;# 
  3536  019D                     	;# 
  3537  019D                     	;# 
  3538  019E                     	;# 
  3539  019E                     	;# 
  3540  019E                     	;# 
  3541  019F                     	;# 
  3542  019F                     	;# 
  3543  019F                     	;# 
  3544  019F                     	;# 
  3545  019F                     	;# 
  3546  020C                     	;# 
  3547  020D                     	;# 
  3548  020E                     	;# 
  3549  0211                     	;# 
  3550  0211                     	;# 
  3551  0212                     	;# 
  3552  0212                     	;# 
  3553  0213                     	;# 
  3554  0213                     	;# 
  3555  0214                     	;# 
  3556  0214                     	;# 
  3557  0215                     	;# 
  3558  0215                     	;# 
  3559  0215                     	;# 
  3560  0215                     	;# 
  3561  0216                     	;# 
  3562  0216                     	;# 
  3563  0217                     	;# 
  3564  0217                     	;# 
  3565  0219                     	;# 
  3566  021A                     	;# 
  3567  021B                     	;# 
  3568  021C                     	;# 
  3569  021D                     	;# 
  3570  021D                     	;# 
  3571  021E                     	;# 
  3572  021F                     	;# 
  3573  028C                     	;# 
  3574  028D                     	;# 
  3575  028E                     	;# 
  3576  0291                     	;# 
  3577  0291                     	;# 
  3578  0292                     	;# 
  3579  0293                     	;# 
  3580  0294                     	;# 
  3581  0295                     	;# 
  3582  0295                     	;# 
  3583  0296                     	;# 
  3584  0297                     	;# 
  3585  0298                     	;# 
  3586  029F                     	;# 
  3587  030C                     	;# 
  3588  030D                     	;# 
  3589  030E                     	;# 
  3590  0311                     	;# 
  3591  0311                     	;# 
  3592  0312                     	;# 
  3593  0313                     	;# 
  3594  0314                     	;# 
  3595  0315                     	;# 
  3596  0315                     	;# 
  3597  0316                     	;# 
  3598  0317                     	;# 
  3599  0318                     	;# 
  3600  038C                     	;# 
  3601  038D                     	;# 
  3602  038E                     	;# 
  3603  0391                     	;# 
  3604  0392                     	;# 
  3605  0393                     	;# 
  3606  0394                     	;# 
  3607  0395                     	;# 
  3608  0396                     	;# 
  3609  0397                     	;# 
  3610  0398                     	;# 
  3611  0399                     	;# 
  3612  039A                     	;# 
  3613  039C                     	;# 
  3614  039D                     	;# 
  3615  039E                     	;# 
  3616  039F                     	;# 
  3617  0411                     	;# 
  3618  0411                     	;# 
  3619  0412                     	;# 
  3620  0413                     	;# 
  3621  0414                     	;# 
  3622  0415                     	;# 
  3623  0416                     	;# 
  3624  0417                     	;# 
  3625  0418                     	;# 
  3626  0418                     	;# 
  3627  0419                     	;# 
  3628  041A                     	;# 
  3629  041B                     	;# 
  3630  041C                     	;# 
  3631  041D                     	;# 
  3632  041E                     	;# 
  3633  041F                     	;# 
  3634  0498                     	;# 
  3635  0498                     	;# 
  3636  0499                     	;# 
  3637  049A                     	;# 
  3638  049B                     	;# 
  3639  049B                     	;# 
  3640  049C                     	;# 
  3641  049D                     	;# 
  3642  049E                     	;# 
  3643  049F                     	;# 
  3644  0617                     	;# 
  3645  0618                     	;# 
  3646  0619                     	;# 
  3647  0619                     	;# 
  3648  061A                     	;# 
  3649  061B                     	;# 
  3650  061C                     	;# 
  3651  061C                     	;# 
  3652  061F                     	;# 
  3653  0691                     	;# 
  3654  0692                     	;# 
  3655  0693                     	;# 
  3656  0694                     	;# 
  3657  0695                     	;# 
  3658  0696                     	;# 
  3659  0697                     	;# 
  3660  0698                     	;# 
  3661  0699                     	;# 
  3662  0711                     	;# 
  3663  0712                     	;# 
  3664  0713                     	;# 
  3665  0714                     	;# 
  3666  0715                     	;# 
  3667  0716                     	;# 
  3668  0717                     	;# 
  3669  0718                     	;# 
  3670  0719                     	;# 
  3671  0891                     	;# 
  3672  0891                     	;# 
  3673  0891                     	;# 
  3674  0891                     	;# 
  3675  0891                     	;# 
  3676  0891                     	;# 
  3677  0892                     	;# 
  3678  0892                     	;# 
  3679  0892                     	;# 
  3680  0893                     	;# 
  3681  0893                     	;# 
  3682  0893                     	;# 
  3683  0893                     	;# 
  3684  0893                     	;# 
  3685  0893                     	;# 
  3686  0894                     	;# 
  3687  0894                     	;# 
  3688  0894                     	;# 
  3689  0895                     	;# 
  3690  0895                     	;# 
  3691  0895                     	;# 
  3692  0896                     	;# 
  3693  0896                     	;# 
  3694  0896                     	;# 
  3695  089B                     	;# 
  3696  0911                     	;# 
  3697  0912                     	;# 
  3698  0913                     	;# 
  3699  0914                     	;# 
  3700  0915                     	;# 
  3701  0916                     	;# 
  3702  0918                     	;# 
  3703  0919                     	;# 
  3704  091A                     	;# 
  3705  091B                     	;# 
  3706  091C                     	;# 
  3707  091D                     	;# 
  3708  091E                     	;# 
  3709  091F                     	;# 
  3710  0E0F                     	;# 
  3711  0E10                     	;# 
  3712  0E11                     	;# 
  3713  0E12                     	;# 
  3714  0E13                     	;# 
  3715  0E14                     	;# 
  3716  0E15                     	;# 
  3717  0E16                     	;# 
  3718  0E17                     	;# 
  3719  0E18                     	;# 
  3720  0E19                     	;# 
  3721  0E1A                     	;# 
  3722  0E1B                     	;# 
  3723  0E1C                     	;# 
  3724  0E1D                     	;# 
  3725  0E1E                     	;# 
  3726  0E1F                     	;# 
  3727  0E20                     	;# 
  3728  0E21                     	;# 
  3729  0E22                     	;# 
  3730  0E24                     	;# 
  3731  0E25                     	;# 
  3732  0E28                     	;# 
  3733  0E29                     	;# 
  3734  0E2A                     	;# 
  3735  0E2B                     	;# 
  3736  0E2C                     	;# 
  3737  0E2D                     	;# 
  3738  0E2E                     	;# 
  3739  0E2F                     	;# 
  3740  0E90                     	;# 
  3741  0E91                     	;# 
  3742  0E92                     	;# 
  3743  0E94                     	;# 
  3744  0E95                     	;# 
  3745  0E9C                     	;# 
  3746  0E9D                     	;# 
  3747  0E9E                     	;# 
  3748  0E9F                     	;# 
  3749  0EA0                     	;# 
  3750  0EA1                     	;# 
  3751  0EA2                     	;# 
  3752  0EA3                     	;# 
  3753  0EA4                     	;# 
  3754  0EA5                     	;# 
  3755  0EA6                     	;# 
  3756  0EA7                     	;# 
  3757  0F0F                     	;# 
  3758  0F10                     	;# 
  3759  0F11                     	;# 
  3760  0F12                     	;# 
  3761  0F13                     	;# 
  3762  0F14                     	;# 
  3763  0F15                     	;# 
  3764  0F16                     	;# 
  3765  0F17                     	;# 
  3766  0F18                     	;# 
  3767  0F19                     	;# 
  3768  0F1A                     	;# 
  3769  0F1B                     	;# 
  3770  0F1C                     	;# 
  3771  0F1D                     	;# 
  3772  0F1E                     	;# 
  3773  0F1F                     	;# 
  3774  0F20                     	;# 
  3775  0F21                     	;# 
  3776  0F22                     	;# 
  3777  0F23                     	;# 
  3778  0F24                     	;# 
  3779  0F25                     	;# 
  3780  0F26                     	;# 
  3781  0F27                     	;# 
  3782  0F28                     	;# 
  3783  0F29                     	;# 
  3784  0F2A                     	;# 
  3785  0F2B                     	;# 
  3786  0F2C                     	;# 
  3787  0F2D                     	;# 
  3788  0F2E                     	;# 
  3789  0F2F                     	;# 
  3790  0F30                     	;# 
  3791  0F31                     	;# 
  3792  0F32                     	;# 
  3793  0F33                     	;# 
  3794  0F34                     	;# 
  3795  0F35                     	;# 
  3796  0F36                     	;# 
  3797  0F37                     	;# 
  3798  0FE4                     	;# 
  3799  0FE5                     	;# 
  3800  0FE6                     	;# 
  3801  0FE7                     	;# 
  3802  0FE8                     	;# 
  3803  0FE9                     	;# 
  3804  0FEA                     	;# 
  3805  0FEB                     	;# 
  3806  0FED                     	;# 
  3807  0FEE                     	;# 
  3808  0FEF                     	;# 
  3809  0000                     	;# 
  3810  0001                     	;# 
  3811  0002                     	;# 
  3812  0003                     	;# 
  3813  0004                     	;# 
  3814  0005                     	;# 
  3815  0006                     	;# 
  3816  0007                     	;# 
  3817  0008                     	;# 
  3818  0009                     	;# 
  3819  000A                     	;# 
  3820  000B                     	;# 
  3821  000C                     	;# 
  3822  000D                     	;# 
  3823  000E                     	;# 
  3824  0010                     	;# 
  3825  0011                     	;# 
  3826  0012                     	;# 
  3827  0013                     	;# 
  3828  0014                     	;# 
  3829  0015                     	;# 
  3830  0015                     	;# 
  3831  0016                     	;# 
  3832  0016                     	;# 
  3833  0017                     	;# 
  3834  0018                     	;# 
  3835  0019                     	;# 
  3836  0019                     	;# 
  3837  001A                     	;# 
  3838  001B                     	;# 
  3839  001C                     	;# 
  3840  001D                     	;# 
  3841  001E                     	;# 
  3842  001F                     	;# 
  3843  008C                     	;# 
  3844  008D                     	;# 
  3845  008E                     	;# 
  3846  0090                     	;# 
  3847  0091                     	;# 
  3848  0092                     	;# 
  3849  0093                     	;# 
  3850  0094                     	;# 
  3851  0097                     	;# 
  3852  009B                     	;# 
  3853  009B                     	;# 
  3854  009C                     	;# 
  3855  009D                     	;# 
  3856  009E                     	;# 
  3857  009F                     	;# 
  3858  010C                     	;# 
  3859  010D                     	;# 
  3860  010E                     	;# 
  3861  0111                     	;# 
  3862  0112                     	;# 
  3863  0113                     	;# 
  3864  0114                     	;# 
  3865  0115                     	;# 
  3866  0116                     	;# 
  3867  0117                     	;# 
  3868  0118                     	;# 
  3869  0119                     	;# 
  3870  018C                     	;# 
  3871  018D                     	;# 
  3872  018E                     	;# 
  3873  0197                     	;# 
  3874  0199                     	;# 
  3875  0199                     	;# 
  3876  0199                     	;# 
  3877  019A                     	;# 
  3878  019A                     	;# 
  3879  019A                     	;# 
  3880  019B                     	;# 
  3881  019B                     	;# 
  3882  019B                     	;# 
  3883  019B                     	;# 
  3884  019B                     	;# 
  3885  019C                     	;# 
  3886  019C                     	;# 
  3887  019C                     	;# 
  3888  019D                     	;# 
  3889  019D                     	;# 
  3890  019D                     	;# 
  3891  019E                     	;# 
  3892  019E                     	;# 
  3893  019E                     	;# 
  3894  019F                     	;# 
  3895  019F                     	;# 
  3896  019F                     	;# 
  3897  019F                     	;# 
  3898  019F                     	;# 
  3899  020C                     	;# 
  3900  020D                     	;# 
  3901  020E                     	;# 
  3902  0211                     	;# 
  3903  0211                     	;# 
  3904  0212                     	;# 
  3905  0212                     	;# 
  3906  0213                     	;# 
  3907  0213                     	;# 
  3908  0214                     	;# 
  3909  0214                     	;# 
  3910  0215                     	;# 
  3911  0215                     	;# 
  3912  0215                     	;# 
  3913  0215                     	;# 
  3914  0216                     	;# 
  3915  0216                     	;# 
  3916  0217                     	;# 
  3917  0217                     	;# 
  3918  0219                     	;# 
  3919  021A                     	;# 
  3920  021B                     	;# 
  3921  021C                     	;# 
  3922  021D                     	;# 
  3923  021D                     	;# 
  3924  021E                     	;# 
  3925  021F                     	;# 
  3926  028C                     	;# 
  3927  028D                     	;# 
  3928  028E                     	;# 
  3929  0291                     	;# 
  3930  0291                     	;# 
  3931  0292                     	;# 
  3932  0293                     	;# 
  3933  0294                     	;# 
  3934  0295                     	;# 
  3935  0295                     	;# 
  3936  0296                     	;# 
  3937  0297                     	;# 
  3938  0298                     	;# 
  3939  029F                     	;# 
  3940  030C                     	;# 
  3941  030D                     	;# 
  3942  030E                     	;# 
  3943  0311                     	;# 
  3944  0311                     	;# 
  3945  0312                     	;# 
  3946  0313                     	;# 
  3947  0314                     	;# 
  3948  0315                     	;# 
  3949  0315                     	;# 
  3950  0316                     	;# 
  3951  0317                     	;# 
  3952  0318                     	;# 
  3953  038C                     	;# 
  3954  038D                     	;# 
  3955  038E                     	;# 
  3956  0391                     	;# 
  3957  0392                     	;# 
  3958  0393                     	;# 
  3959  0394                     	;# 
  3960  0395                     	;# 
  3961  0396                     	;# 
  3962  0397                     	;# 
  3963  0398                     	;# 
  3964  0399                     	;# 
  3965  039A                     	;# 
  3966  039C                     	;# 
  3967  039D                     	;# 
  3968  039E                     	;# 
  3969  039F                     	;# 
  3970  0411                     	;# 
  3971  0411                     	;# 
  3972  0412                     	;# 
  3973  0413                     	;# 
  3974  0414                     	;# 
  3975  0415                     	;# 
  3976  0416                     	;# 
  3977  0417                     	;# 
  3978  0418                     	;# 
  3979  0418                     	;# 
  3980  0419                     	;# 
  3981  041A                     	;# 
  3982  041B                     	;# 
  3983  041C                     	;# 
  3984  041D                     	;# 
  3985  041E                     	;# 
  3986  041F                     	;# 
  3987  0498                     	;# 
  3988  0498                     	;# 
  3989  0499                     	;# 
  3990  049A                     	;# 
  3991  049B                     	;# 
  3992  049B                     	;# 
  3993  049C                     	;# 
  3994  049D                     	;# 
  3995  049E                     	;# 
  3996  049F                     	;# 
  3997  0617                     	;# 
  3998  0618                     	;# 
  3999  0619                     	;# 
  4000  0619                     	;# 
  4001  061A                     	;# 
  4002  061B                     	;# 
  4003  061C                     	;# 
  4004  061C                     	;# 
  4005  061F                     	;# 
  4006  0691                     	;# 
  4007  0692                     	;# 
  4008  0693                     	;# 
  4009  0694                     	;# 
  4010  0695                     	;# 
  4011  0696                     	;# 
  4012  0697                     	;# 
  4013  0698                     	;# 
  4014  0699                     	;# 
  4015  0711                     	;# 
  4016  0712                     	;# 
  4017  0713                     	;# 
  4018  0714                     	;# 
  4019  0715                     	;# 
  4020  0716                     	;# 
  4021  0717                     	;# 
  4022  0718                     	;# 
  4023  0719                     	;# 
  4024  0891                     	;# 
  4025  0891                     	;# 
  4026  0891                     	;# 
  4027  0891                     	;# 
  4028  0891                     	;# 
  4029  0891                     	;# 
  4030  0892                     	;# 
  4031  0892                     	;# 
  4032  0892                     	;# 
  4033  0893                     	;# 
  4034  0893                     	;# 
  4035  0893                     	;# 
  4036  0893                     	;# 
  4037  0893                     	;# 
  4038  0893                     	;# 
  4039  0894                     	;# 
  4040  0894                     	;# 
  4041  0894                     	;# 
  4042  0895                     	;# 
  4043  0895                     	;# 
  4044  0895                     	;# 
  4045  0896                     	;# 
  4046  0896                     	;# 
  4047  0896                     	;# 
  4048  089B                     	;# 
  4049  0911                     	;# 
  4050  0912                     	;# 
  4051  0913                     	;# 
  4052  0914                     	;# 
  4053  0915                     	;# 
  4054  0916                     	;# 
  4055  0918                     	;# 
  4056  0919                     	;# 
  4057  091A                     	;# 
  4058  091B                     	;# 
  4059  091C                     	;# 
  4060  091D                     	;# 
  4061  091E                     	;# 
  4062  091F                     	;# 
  4063  0E0F                     	;# 
  4064  0E10                     	;# 
  4065  0E11                     	;# 
  4066  0E12                     	;# 
  4067  0E13                     	;# 
  4068  0E14                     	;# 
  4069  0E15                     	;# 
  4070  0E16                     	;# 
  4071  0E17                     	;# 
  4072  0E18                     	;# 
  4073  0E19                     	;# 
  4074  0E1A                     	;# 
  4075  0E1B                     	;# 
  4076  0E1C                     	;# 
  4077  0E1D                     	;# 
  4078  0E1E                     	;# 
  4079  0E1F                     	;# 
  4080  0E20                     	;# 
  4081  0E21                     	;# 
  4082  0E22                     	;# 
  4083  0E24                     	;# 
  4084  0E25                     	;# 
  4085  0E28                     	;# 
  4086  0E29                     	;# 
  4087  0E2A                     	;# 
  4088  0E2B                     	;# 
  4089  0E2C                     	;# 
  4090  0E2D                     	;# 
  4091  0E2E                     	;# 
  4092  0E2F                     	;# 
  4093  0E90                     	;# 
  4094  0E91                     	;# 
  4095  0E92                     	;# 
  4096  0E94                     	;# 
  4097  0E95                     	;# 
  4098  0E9C                     	;# 
  4099  0E9D                     	;# 
  4100  0E9E                     	;# 
  4101  0E9F                     	;# 
  4102  0EA0                     	;# 
  4103  0EA1                     	;# 
  4104  0EA2                     	;# 
  4105  0EA3                     	;# 
  4106  0EA4                     	;# 
  4107  0EA5                     	;# 
  4108  0EA6                     	;# 
  4109  0EA7                     	;# 
  4110  0F0F                     	;# 
  4111  0F10                     	;# 
  4112  0F11                     	;# 
  4113  0F12                     	;# 
  4114  0F13                     	;# 
  4115  0F14                     	;# 
  4116  0F15                     	;# 
  4117  0F16                     	;# 
  4118  0F17                     	;# 
  4119  0F18                     	;# 
  4120  0F19                     	;# 
  4121  0F1A                     	;# 
  4122  0F1B                     	;# 
  4123  0F1C                     	;# 
  4124  0F1D                     	;# 
  4125  0F1E                     	;# 
  4126  0F1F                     	;# 
  4127  0F20                     	;# 
  4128  0F21                     	;# 
  4129  0F22                     	;# 
  4130  0F23                     	;# 
  4131  0F24                     	;# 
  4132  0F25                     	;# 
  4133  0F26                     	;# 
  4134  0F27                     	;# 
  4135  0F28                     	;# 
  4136  0F29                     	;# 
  4137  0F2A                     	;# 
  4138  0F2B                     	;# 
  4139  0F2C                     	;# 
  4140  0F2D                     	;# 
  4141  0F2E                     	;# 
  4142  0F2F                     	;# 
  4143  0F30                     	;# 
  4144  0F31                     	;# 
  4145  0F32                     	;# 
  4146  0F33                     	;# 
  4147  0F34                     	;# 
  4148  0F35                     	;# 
  4149  0F36                     	;# 
  4150  0F37                     	;# 
  4151  0FE4                     	;# 
  4152  0FE5                     	;# 
  4153  0FE6                     	;# 
  4154  0FE7                     	;# 
  4155  0FE8                     	;# 
  4156  0FE9                     	;# 
  4157  0FEA                     	;# 
  4158  0FEB                     	;# 
  4159  0FED                     	;# 
  4160  0FEE                     	;# 
  4161  0FEF                     	;# 
  4162  0000                     	;# 
  4163  0001                     	;# 
  4164  0002                     	;# 
  4165  0003                     	;# 
  4166  0004                     	;# 
  4167  0005                     	;# 
  4168  0006                     	;# 
  4169  0007                     	;# 
  4170  0008                     	;# 
  4171  0009                     	;# 
  4172  000A                     	;# 
  4173  000B                     	;# 
  4174  000C                     	;# 
  4175  000D                     	;# 
  4176  000E                     	;# 
  4177  0010                     	;# 
  4178  0011                     	;# 
  4179  0012                     	;# 
  4180  0013                     	;# 
  4181  0014                     	;# 
  4182  0015                     	;# 
  4183  0015                     	;# 
  4184  0016                     	;# 
  4185  0016                     	;# 
  4186  0017                     	;# 
  4187  0018                     	;# 
  4188  0019                     	;# 
  4189  0019                     	;# 
  4190  001A                     	;# 
  4191  001B                     	;# 
  4192  001C                     	;# 
  4193  001D                     	;# 
  4194  001E                     	;# 
  4195  001F                     	;# 
  4196  008C                     	;# 
  4197  008D                     	;# 
  4198  008E                     	;# 
  4199  0090                     	;# 
  4200  0091                     	;# 
  4201  0092                     	;# 
  4202  0093                     	;# 
  4203  0094                     	;# 
  4204  0097                     	;# 
  4205  009B                     	;# 
  4206  009B                     	;# 
  4207  009C                     	;# 
  4208  009D                     	;# 
  4209  009E                     	;# 
  4210  009F                     	;# 
  4211  010C                     	;# 
  4212  010D                     	;# 
  4213  010E                     	;# 
  4214  0111                     	;# 
  4215  0112                     	;# 
  4216  0113                     	;# 
  4217  0114                     	;# 
  4218  0115                     	;# 
  4219  0116                     	;# 
  4220  0117                     	;# 
  4221  0118                     	;# 
  4222  0119                     	;# 
  4223  018C                     	;# 
  4224  018D                     	;# 
  4225  018E                     	;# 
  4226  0197                     	;# 
  4227  0199                     	;# 
  4228  0199                     	;# 
  4229  0199                     	;# 
  4230  019A                     	;# 
  4231  019A                     	;# 
  4232  019A                     	;# 
  4233  019B                     	;# 
  4234  019B                     	;# 
  4235  019B                     	;# 
  4236  019B                     	;# 
  4237  019B                     	;# 
  4238  019C                     	;# 
  4239  019C                     	;# 
  4240  019C                     	;# 
  4241  019D                     	;# 
  4242  019D                     	;# 
  4243  019D                     	;# 
  4244  019E                     	;# 
  4245  019E                     	;# 
  4246  019E                     	;# 
  4247  019F                     	;# 
  4248  019F                     	;# 
  4249  019F                     	;# 
  4250  019F                     	;# 
  4251  019F                     	;# 
  4252  020C                     	;# 
  4253  020D                     	;# 
  4254  020E                     	;# 
  4255  0211                     	;# 
  4256  0211                     	;# 
  4257  0212                     	;# 
  4258  0212                     	;# 
  4259  0213                     	;# 
  4260  0213                     	;# 
  4261  0214                     	;# 
  4262  0214                     	;# 
  4263  0215                     	;# 
  4264  0215                     	;# 
  4265  0215                     	;# 
  4266  0215                     	;# 
  4267  0216                     	;# 
  4268  0216                     	;# 
  4269  0217                     	;# 
  4270  0217                     	;# 
  4271  0219                     	;# 
  4272  021A                     	;# 
  4273  021B                     	;# 
  4274  021C                     	;# 
  4275  021D                     	;# 
  4276  021D                     	;# 
  4277  021E                     	;# 
  4278  021F                     	;# 
  4279  028C                     	;# 
  4280  028D                     	;# 
  4281  028E                     	;# 
  4282  0291                     	;# 
  4283  0291                     	;# 
  4284  0292                     	;# 
  4285  0293                     	;# 
  4286  0294                     	;# 
  4287  0295                     	;# 
  4288  0295                     	;# 
  4289  0296                     	;# 
  4290  0297                     	;# 
  4291  0298                     	;# 
  4292  029F                     	;# 
  4293  030C                     	;# 
  4294  030D                     	;# 
  4295  030E                     	;# 
  4296  0311                     	;# 
  4297  0311                     	;# 
  4298  0312                     	;# 
  4299  0313                     	;# 
  4300  0314                     	;# 
  4301  0315                     	;# 
  4302  0315                     	;# 
  4303  0316                     	;# 
  4304  0317                     	;# 
  4305  0318                     	;# 
  4306  038C                     	;# 
  4307  038D                     	;# 
  4308  038E                     	;# 
  4309  0391                     	;# 
  4310  0392                     	;# 
  4311  0393                     	;# 
  4312  0394                     	;# 
  4313  0395                     	;# 
  4314  0396                     	;# 
  4315  0397                     	;# 
  4316  0398                     	;# 
  4317  0399                     	;# 
  4318  039A                     	;# 
  4319  039C                     	;# 
  4320  039D                     	;# 
  4321  039E                     	;# 
  4322  039F                     	;# 
  4323  0411                     	;# 
  4324  0411                     	;# 
  4325  0412                     	;# 
  4326  0413                     	;# 
  4327  0414                     	;# 
  4328  0415                     	;# 
  4329  0416                     	;# 
  4330  0417                     	;# 
  4331  0418                     	;# 
  4332  0418                     	;# 
  4333  0419                     	;# 
  4334  041A                     	;# 
  4335  041B                     	;# 
  4336  041C                     	;# 
  4337  041D                     	;# 
  4338  041E                     	;# 
  4339  041F                     	;# 
  4340  0498                     	;# 
  4341  0498                     	;# 
  4342  0499                     	;# 
  4343  049A                     	;# 
  4344  049B                     	;# 
  4345  049B                     	;# 
  4346  049C                     	;# 
  4347  049D                     	;# 
  4348  049E                     	;# 
  4349  049F                     	;# 
  4350  0617                     	;# 
  4351  0618                     	;# 
  4352  0619                     	;# 
  4353  0619                     	;# 
  4354  061A                     	;# 
  4355  061B                     	;# 
  4356  061C                     	;# 
  4357  061C                     	;# 
  4358  061F                     	;# 
  4359  0691                     	;# 
  4360  0692                     	;# 
  4361  0693                     	;# 
  4362  0694                     	;# 
  4363  0695                     	;# 
  4364  0696                     	;# 
  4365  0697                     	;# 
  4366  0698                     	;# 
  4367  0699                     	;# 
  4368  0711                     	;# 
  4369  0712                     	;# 
  4370  0713                     	;# 
  4371  0714                     	;# 
  4372  0715                     	;# 
  4373  0716                     	;# 
  4374  0717                     	;# 
  4375  0718                     	;# 
  4376  0719                     	;# 
  4377  0891                     	;# 
  4378  0891                     	;# 
  4379  0891                     	;# 
  4380  0891                     	;# 
  4381  0891                     	;# 
  4382  0891                     	;# 
  4383  0892                     	;# 
  4384  0892                     	;# 
  4385  0892                     	;# 
  4386  0893                     	;# 
  4387  0893                     	;# 
  4388  0893                     	;# 
  4389  0893                     	;# 
  4390  0893                     	;# 
  4391  0893                     	;# 
  4392  0894                     	;# 
  4393  0894                     	;# 
  4394  0894                     	;# 
  4395  0895                     	;# 
  4396  0895                     	;# 
  4397  0895                     	;# 
  4398  0896                     	;# 
  4399  0896                     	;# 
  4400  0896                     	;# 
  4401  089B                     	;# 
  4402  0911                     	;# 
  4403  0912                     	;# 
  4404  0913                     	;# 
  4405  0914                     	;# 
  4406  0915                     	;# 
  4407  0916                     	;# 
  4408  0918                     	;# 
  4409  0919                     	;# 
  4410  091A                     	;# 
  4411  091B                     	;# 
  4412  091C                     	;# 
  4413  091D                     	;# 
  4414  091E                     	;# 
  4415  091F                     	;# 
  4416  0E0F                     	;# 
  4417  0E10                     	;# 
  4418  0E11                     	;# 
  4419  0E12                     	;# 
  4420  0E13                     	;# 
  4421  0E14                     	;# 
  4422  0E15                     	;# 
  4423  0E16                     	;# 
  4424  0E17                     	;# 
  4425  0E18                     	;# 
  4426  0E19                     	;# 
  4427  0E1A                     	;# 
  4428  0E1B                     	;# 
  4429  0E1C                     	;# 
  4430  0E1D                     	;# 
  4431  0E1E                     	;# 
  4432  0E1F                     	;# 
  4433  0E20                     	;# 
  4434  0E21                     	;# 
  4435  0E22                     	;# 
  4436  0E24                     	;# 
  4437  0E25                     	;# 
  4438  0E28                     	;# 
  4439  0E29                     	;# 
  4440  0E2A                     	;# 
  4441  0E2B                     	;# 
  4442  0E2C                     	;# 
  4443  0E2D                     	;# 
  4444  0E2E                     	;# 
  4445  0E2F                     	;# 
  4446  0E90                     	;# 
  4447  0E91                     	;# 
  4448  0E92                     	;# 
  4449  0E94                     	;# 
  4450  0E95                     	;# 
  4451  0E9C                     	;# 
  4452  0E9D                     	;# 
  4453  0E9E                     	;# 
  4454  0E9F                     	;# 
  4455  0EA0                     	;# 
  4456  0EA1                     	;# 
  4457  0EA2                     	;# 
  4458  0EA3                     	;# 
  4459  0EA4                     	;# 
  4460  0EA5                     	;# 
  4461  0EA6                     	;# 
  4462  0EA7                     	;# 
  4463  0F0F                     	;# 
  4464  0F10                     	;# 
  4465  0F11                     	;# 
  4466  0F12                     	;# 
  4467  0F13                     	;# 
  4468  0F14                     	;# 
  4469  0F15                     	;# 
  4470  0F16                     	;# 
  4471  0F17                     	;# 
  4472  0F18                     	;# 
  4473  0F19                     	;# 
  4474  0F1A                     	;# 
  4475  0F1B                     	;# 
  4476  0F1C                     	;# 
  4477  0F1D                     	;# 
  4478  0F1E                     	;# 
  4479  0F1F                     	;# 
  4480  0F20                     	;# 
  4481  0F21                     	;# 
  4482  0F22                     	;# 
  4483  0F23                     	;# 
  4484  0F24                     	;# 
  4485  0F25                     	;# 
  4486  0F26                     	;# 
  4487  0F27                     	;# 
  4488  0F28                     	;# 
  4489  0F29                     	;# 
  4490  0F2A                     	;# 
  4491  0F2B                     	;# 
  4492  0F2C                     	;# 
  4493  0F2D                     	;# 
  4494  0F2E                     	;# 
  4495  0F2F                     	;# 
  4496  0F30                     	;# 
  4497  0F31                     	;# 
  4498  0F32                     	;# 
  4499  0F33                     	;# 
  4500  0F34                     	;# 
  4501  0F35                     	;# 
  4502  0F36                     	;# 
  4503  0F37                     	;# 
  4504  0FE4                     	;# 
  4505  0FE5                     	;# 
  4506  0FE6                     	;# 
  4507  0FE7                     	;# 
  4508  0FE8                     	;# 
  4509  0FE9                     	;# 
  4510  0FEA                     	;# 
  4511  0FEB                     	;# 
  4512  0FED                     	;# 
  4513  0FEE                     	;# 
  4514  0FEF                     	;# 
  4515                           
  4516                           	psect	idataBANK0
  4517  2521                     __pidataBANK0:	
  4518                           
  4519                           ;initializer for _piezo_on_time_ms
  4520  2521  34E8               	retlw	232
  4521  2522  3403               	retlw	3
  4522                           
  4523                           ;initializer for _heater_post_time_ms
  4524  2523  340A               	retlw	10
  4525  2524  3400               	retlw	0
  4526                           
  4527                           ;initializer for _heater_pre_time_ms
  4528  2525  340A               	retlw	10
  4529  2526  3400               	retlw	0
  4530                           
  4531                           	psect	idataBANK1
  4532  251B                     __pidataBANK1:	
  4533                           
  4534                           ;initializer for _demoLong
  4535  251B  3401               	retlw	1
  4536  251C  3400               	retlw	0
  4537  251D  3400               	retlw	0
  4538  251E  3400               	retlw	0
  4539                           
  4540                           ;initializer for _drv_peak_val
  4541  251F  347F               	retlw	127
  4542  2520  3400               	retlw	0
  4543                           
  4544                           	psect	idataBANK4
  4545  183F                     __pidataBANK4:	
  4546                           
  4547                           ;initializer for _fsmStateTable
  4548  183F  3498               	retlw	low _do_I2C_IDLE
  4549  1840  3425               	retlw	high _do_I2C_IDLE
  4550  1841  34F7               	retlw	low _do_I2C_SEND_ADR_READ
  4551  1842  3425               	retlw	high _do_I2C_SEND_ADR_READ
  4552  1843  34CA               	retlw	low _do_I2C_SEND_ADR_WRITE
  4553  1844  3425               	retlw	high _do_I2C_SEND_ADR_WRITE
  4554  1845  34A7               	retlw	low _do_I2C_TX
  4555  1846  341F               	retlw	high _do_I2C_TX
  4556  1847  3458               	retlw	low _do_I2C_RX
  4557  1848  341C               	retlw	high _do_I2C_RX
  4558  1849  34AB               	retlw	low _do_I2C_RCEN
  4559  184A  3425               	retlw	high _do_I2C_RCEN
  4560  184B  3469               	retlw	low _do_I2C_TX_EMPTY
  4561  184C  341A               	retlw	high _do_I2C_TX_EMPTY
  4562  184D  3445               	retlw	low _do_I2C_SEND_RESTART_READ
  4563  184E  3425               	retlw	high _do_I2C_SEND_RESTART_READ
  4564  184F  344D               	retlw	low _do_I2C_SEND_RESTART_WRITE
  4565  1850  3425               	retlw	high _do_I2C_SEND_RESTART_WRITE
  4566  1851  3455               	retlw	low _do_I2C_SEND_RESTART
  4567  1852  3425               	retlw	high _do_I2C_SEND_RESTART
  4568  1853  345D               	retlw	low _do_I2C_SEND_STOP
  4569  1854  3425               	retlw	high _do_I2C_SEND_STOP
  4570  1855  3465               	retlw	low _do_I2C_DO_ACK
  4571  1856  3425               	retlw	high _do_I2C_DO_ACK
  4572  1857  346D               	retlw	low _do_I2C_DO_NACK_STOP
  4573  1858  3425               	retlw	high _do_I2C_DO_NACK_STOP
  4574  1859  3475               	retlw	low _do_I2C_DO_NACK_RESTART
  4575  185A  3425               	retlw	high _do_I2C_DO_NACK_RESTART
  4576  185B  34BF               	retlw	low _do_I2C_RESET
  4577  185C  3425               	retlw	high _do_I2C_RESET
  4578  185D  343E               	retlw	low _do_I2C_DO_ADDRESS_NACK
  4579  185E  341A               	retlw	high _do_I2C_DO_ADDRESS_NACK
  4580                           
  4581                           	psect	stringtext1
  4582  1000                     __pstringtext1:	
  4583  1000                     _drv_fifo_sine:	
  4584  1000  340B               	retlw	11
  4585  1001  3400               	retlw	0
  4586  1002  3400               	retlw	0
  4587  1003  3400               	retlw	0
  4588  1004  3410               	retlw	16
  4589  1005  3400               	retlw	0
  4590  1006  3420               	retlw	32
  4591  1007  3400               	retlw	0
  4592  1008  342E               	retlw	46
  4593  1009  3400               	retlw	0
  4594  100A  343C               	retlw	60
  4595  100B  3400               	retlw	0
  4596  100C  3448               	retlw	72
  4597  100D  3400               	retlw	0
  4598  100E  3453               	retlw	83
  4599  100F  3400               	retlw	0
  4600  1010  345B               	retlw	91
  4601  1011  3400               	retlw	0
  4602  1012  3461               	retlw	97
  4603  1013  3400               	retlw	0
  4604  1014  3465               	retlw	101
  4605  1015  3400               	retlw	0
  4606  1016  3466               	retlw	102
  4607  1017  3400               	retlw	0
  4608  1018  3465               	retlw	101
  4609  1019  3400               	retlw	0
  4610  101A  3461               	retlw	97
  4611  101B  3400               	retlw	0
  4612  101C  345B               	retlw	91
  4613  101D  3400               	retlw	0
  4614  101E  3453               	retlw	83
  4615  101F  3400               	retlw	0
  4616  1020  3448               	retlw	72
  4617  1021  3400               	retlw	0
  4618  1022  343C               	retlw	60
  4619  1023  3400               	retlw	0
  4620  1024  342E               	retlw	46
  4621  1025  3400               	retlw	0
  4622  1026  3420               	retlw	32
  4623  1027  3400               	retlw	0
  4624  1028  3410               	retlw	16
  4625  1029  3400               	retlw	0
  4626  102A  3400               	retlw	0
  4627  102B  3400               	retlw	0
  4628  102C  34F0               	retlw	240
  4629  102D  3400               	retlw	0
  4630  102E  34E0               	retlw	224
  4631  102F  3400               	retlw	0
  4632  1030  34D2               	retlw	210
  4633  1031  3400               	retlw	0
  4634  1032  34C4               	retlw	196
  4635  1033  3400               	retlw	0
  4636  1034  34B8               	retlw	184
  4637  1035  3400               	retlw	0
  4638  1036  34AD               	retlw	173
  4639  1037  3400               	retlw	0
  4640  1038  34A5               	retlw	165
  4641  1039  3400               	retlw	0
  4642  103A  349F               	retlw	159
  4643  103B  3400               	retlw	0
  4644  103C  349B               	retlw	155
  4645  103D  3400               	retlw	0
  4646  103E  349A               	retlw	154
  4647  103F  3400               	retlw	0
  4648  1040  349B               	retlw	155
  4649  1041  3400               	retlw	0
  4650  1042  349F               	retlw	159
  4651  1043  3400               	retlw	0
  4652  1044  34A5               	retlw	165
  4653  1045  3400               	retlw	0
  4654  1046  34AD               	retlw	173
  4655  1047  3400               	retlw	0
  4656  1048  34B8               	retlw	184
  4657  1049  3400               	retlw	0
  4658  104A  34C4               	retlw	196
  4659  104B  3400               	retlw	0
  4660  104C  34D2               	retlw	210
  4661  104D  3400               	retlw	0
  4662  104E  34E0               	retlw	224
  4663  104F  3400               	retlw	0
  4664  1050  34F0               	retlw	240
  4665  1051  3400               	retlw	0
  4666  1052  3400               	retlw	0
  4667  1053  3400               	retlw	0
  4668  1054  3410               	retlw	16
  4669  1055  3400               	retlw	0
  4670  1056  3420               	retlw	32
  4671  1057  3400               	retlw	0
  4672  1058  342E               	retlw	46
  4673  1059  3400               	retlw	0
  4674  105A  343C               	retlw	60
  4675  105B  3400               	retlw	0
  4676  105C  3448               	retlw	72
  4677  105D  3400               	retlw	0
  4678  105E  3453               	retlw	83
  4679  105F  3400               	retlw	0
  4680  1060  345B               	retlw	91
  4681  1061  3400               	retlw	0
  4682  1062  3461               	retlw	97
  4683  1063  3400               	retlw	0
  4684  1064  3465               	retlw	101
  4685  1065  3400               	retlw	0
  4686  1066  3466               	retlw	102
  4687  1067  3400               	retlw	0
  4688  1068  3465               	retlw	101
  4689  1069  3400               	retlw	0
  4690  106A  3461               	retlw	97
  4691  106B  3400               	retlw	0
  4692  106C  345B               	retlw	91
  4693  106D  3400               	retlw	0
  4694  106E  3453               	retlw	83
  4695  106F  3400               	retlw	0
  4696  1070  3448               	retlw	72
  4697  1071  3400               	retlw	0
  4698  1072  343C               	retlw	60
  4699  1073  3400               	retlw	0
  4700  1074  342E               	retlw	46
  4701  1075  3400               	retlw	0
  4702  1076  3420               	retlw	32
  4703  1077  3400               	retlw	0
  4704  1078  3410               	retlw	16
  4705  1079  3400               	retlw	0
  4706  107A  3400               	retlw	0
  4707  107B  3400               	retlw	0
  4708  107C  34F0               	retlw	240
  4709  107D  3400               	retlw	0
  4710  107E  34E0               	retlw	224
  4711  107F  3400               	retlw	0
  4712  1080  34D2               	retlw	210
  4713  1081  3400               	retlw	0
  4714  1082  34C4               	retlw	196
  4715  1083  3400               	retlw	0
  4716  1084  34B8               	retlw	184
  4717  1085  3400               	retlw	0
  4718  1086  34AD               	retlw	173
  4719  1087  3400               	retlw	0
  4720  1088  34A5               	retlw	165
  4721  1089  3400               	retlw	0
  4722  108A  349F               	retlw	159
  4723  108B  3400               	retlw	0
  4724  108C  349B               	retlw	155
  4725  108D  3400               	retlw	0
  4726  108E  349A               	retlw	154
  4727  108F  3400               	retlw	0
  4728  1090  349B               	retlw	155
  4729  1091  3400               	retlw	0
  4730  1092  349F               	retlw	159
  4731  1093  3400               	retlw	0
  4732  1094  34A5               	retlw	165
  4733  1095  3400               	retlw	0
  4734  1096  34AD               	retlw	173
  4735  1097  3400               	retlw	0
  4736  1098  34B8               	retlw	184
  4737  1099  3400               	retlw	0
  4738  109A  34C4               	retlw	196
  4739  109B  3400               	retlw	0
  4740  109C  34D2               	retlw	210
  4741  109D  3400               	retlw	0
  4742  109E  34E0               	retlw	224
  4743  109F  3400               	retlw	0
  4744  10A0  34F0               	retlw	240
  4745  10A1  3400               	retlw	0
  4746  10A2  3400               	retlw	0
  4747  10A3  3400               	retlw	0
  4748  10A4  3410               	retlw	16
  4749  10A5  3400               	retlw	0
  4750  10A6  3420               	retlw	32
  4751  10A7  3400               	retlw	0
  4752  10A8  342E               	retlw	46
  4753  10A9  3400               	retlw	0
  4754  10AA  343C               	retlw	60
  4755  10AB  3400               	retlw	0
  4756  10AC  3448               	retlw	72
  4757  10AD  3400               	retlw	0
  4758  10AE  3453               	retlw	83
  4759  10AF  3400               	retlw	0
  4760  10B0  345B               	retlw	91
  4761  10B1  3400               	retlw	0
  4762  10B2  3461               	retlw	97
  4763  10B3  3400               	retlw	0
  4764  10B4  3465               	retlw	101
  4765  10B5  3400               	retlw	0
  4766  10B6  3466               	retlw	102
  4767  10B7  3400               	retlw	0
  4768  10B8  3465               	retlw	101
  4769  10B9  3400               	retlw	0
  4770  10BA  3461               	retlw	97
  4771  10BB  3400               	retlw	0
  4772  10BC  345B               	retlw	91
  4773  10BD  3400               	retlw	0
  4774  10BE  3453               	retlw	83
  4775  10BF  3400               	retlw	0
  4776  10C0  3448               	retlw	72
  4777  10C1  3400               	retlw	0
  4778  10C2  343C               	retlw	60
  4779  10C3  3400               	retlw	0
  4780  10C4  342E               	retlw	46
  4781  10C5  3400               	retlw	0
  4782  10C6  3420               	retlw	32
  4783  10C7  3400               	retlw	0
  4784  10C8  3410               	retlw	16
  4785  10C9  3400               	retlw	0
  4786  10CA  3400               	retlw	0
  4787  10CB  3400               	retlw	0
  4788  10CC  34F0               	retlw	240
  4789  10CD  3400               	retlw	0
  4790  10CE  34E0               	retlw	224
  4791  10CF  3400               	retlw	0
  4792  10D0  34D2               	retlw	210
  4793  10D1  3400               	retlw	0
  4794  10D2  34C4               	retlw	196
  4795  10D3  3400               	retlw	0
  4796  10D4  34B8               	retlw	184
  4797  10D5  3400               	retlw	0
  4798  10D6  34AD               	retlw	173
  4799  10D7  3400               	retlw	0
  4800  10D8  34A5               	retlw	165
  4801  10D9  3400               	retlw	0
  4802  10DA  349F               	retlw	159
  4803  10DB  3400               	retlw	0
  4804  10DC  349B               	retlw	155
  4805  10DD  3400               	retlw	0
  4806  10DE  349A               	retlw	154
  4807  10DF  3400               	retlw	0
  4808  10E0  349B               	retlw	155
  4809  10E1  3400               	retlw	0
  4810  10E2  349F               	retlw	159
  4811  10E3  3400               	retlw	0
  4812  10E4  34A5               	retlw	165
  4813  10E5  3400               	retlw	0
  4814  10E6  34AD               	retlw	173
  4815  10E7  3400               	retlw	0
  4816  10E8  34B8               	retlw	184
  4817  10E9  3400               	retlw	0
  4818  10EA  34C4               	retlw	196
  4819  10EB  3400               	retlw	0
  4820  10EC  34D2               	retlw	210
  4821  10ED  3400               	retlw	0
  4822  10EE  34E0               	retlw	224
  4823  10EF  3400               	retlw	0
  4824  10F0  34F0               	retlw	240
  4825  10F1  3400               	retlw	0
  4826  10F2  3400               	retlw	0
  4827  10F3  3400               	retlw	0
  4828  10F4                     __end_of_drv_fifo_sine:	
  4829                           
  4830                           	psect	stringtext2
  4831  11E8                     __pstringtext2:	
  4832  11E8                     drv2665@drv_sine:	
  4833  11E8  3400               	retlw	0
  4834  11E9  3400               	retlw	0
  4835  11EA  3410               	retlw	16
  4836  11EB  3400               	retlw	0
  4837  11EC  3420               	retlw	32
  4838  11ED  3400               	retlw	0
  4839  11EE  342E               	retlw	46
  4840  11EF  3400               	retlw	0
  4841  11F0  343C               	retlw	60
  4842  11F1  3400               	retlw	0
  4843  11F2  3448               	retlw	72
  4844  11F3  3400               	retlw	0
  4845  11F4  3453               	retlw	83
  4846  11F5  3400               	retlw	0
  4847  11F6  345B               	retlw	91
  4848  11F7  3400               	retlw	0
  4849  11F8  3461               	retlw	97
  4850  11F9  3400               	retlw	0
  4851  11FA  3465               	retlw	101
  4852  11FB  3400               	retlw	0
  4853  11FC  3466               	retlw	102
  4854  11FD  3400               	retlw	0
  4855  11FE  3465               	retlw	101
  4856  11FF  3400               	retlw	0
  4857  1200  3461               	retlw	97
  4858  1201  3400               	retlw	0
  4859  1202  345B               	retlw	91
  4860  1203  3400               	retlw	0
  4861  1204  3453               	retlw	83
  4862  1205  3400               	retlw	0
  4863  1206  3448               	retlw	72
  4864  1207  3400               	retlw	0
  4865  1208  343C               	retlw	60
  4866  1209  3400               	retlw	0
  4867  120A  342E               	retlw	46
  4868  120B  3400               	retlw	0
  4869  120C  3420               	retlw	32
  4870  120D  3400               	retlw	0
  4871  120E  3410               	retlw	16
  4872  120F  3400               	retlw	0
  4873  1210  3400               	retlw	0
  4874  1211  3400               	retlw	0
  4875  1212  34F0               	retlw	240
  4876  1213  3400               	retlw	0
  4877  1214  34E0               	retlw	224
  4878  1215  3400               	retlw	0
  4879  1216  34D2               	retlw	210
  4880  1217  3400               	retlw	0
  4881  1218  34C4               	retlw	196
  4882  1219  3400               	retlw	0
  4883  121A  34B8               	retlw	184
  4884  121B  3400               	retlw	0
  4885  121C  34AD               	retlw	173
  4886  121D  3400               	retlw	0
  4887  121E  34A5               	retlw	165
  4888  121F  3400               	retlw	0
  4889  1220  349F               	retlw	159
  4890  1221  3400               	retlw	0
  4891  1222  349B               	retlw	155
  4892  1223  3400               	retlw	0
  4893  1224  349A               	retlw	154
  4894  1225  3400               	retlw	0
  4895  1226  349B               	retlw	155
  4896  1227  3400               	retlw	0
  4897  1228  349F               	retlw	159
  4898  1229  3400               	retlw	0
  4899  122A  34A5               	retlw	165
  4900  122B  3400               	retlw	0
  4901  122C  34AD               	retlw	173
  4902  122D  3400               	retlw	0
  4903  122E  34B8               	retlw	184
  4904  122F  3400               	retlw	0
  4905  1230  34C4               	retlw	196
  4906  1231  3400               	retlw	0
  4907  1232  34D2               	retlw	210
  4908  1233  3400               	retlw	0
  4909  1234  34E0               	retlw	224
  4910  1235  3400               	retlw	0
  4911  1236  34F0               	retlw	240
  4912  1237  3400               	retlw	0
  4913  1238  3400               	retlw	0
  4914  1239  3400               	retlw	0
  4915  123A  3410               	retlw	16
  4916  123B  3400               	retlw	0
  4917  123C  3420               	retlw	32
  4918  123D  3400               	retlw	0
  4919  123E  342E               	retlw	46
  4920  123F  3400               	retlw	0
  4921  1240  343C               	retlw	60
  4922  1241  3400               	retlw	0
  4923  1242  3448               	retlw	72
  4924  1243  3400               	retlw	0
  4925  1244  3453               	retlw	83
  4926  1245  3400               	retlw	0
  4927  1246  345B               	retlw	91
  4928  1247  3400               	retlw	0
  4929  1248  3461               	retlw	97
  4930  1249  3400               	retlw	0
  4931  124A  3465               	retlw	101
  4932  124B  3400               	retlw	0
  4933  124C  3466               	retlw	102
  4934  124D  3400               	retlw	0
  4935  124E  3465               	retlw	101
  4936  124F  3400               	retlw	0
  4937  1250  3461               	retlw	97
  4938  1251  3400               	retlw	0
  4939  1252  345B               	retlw	91
  4940  1253  3400               	retlw	0
  4941  1254  3453               	retlw	83
  4942  1255  3400               	retlw	0
  4943  1256  3448               	retlw	72
  4944  1257  3400               	retlw	0
  4945  1258  343C               	retlw	60
  4946  1259  3400               	retlw	0
  4947  125A  342E               	retlw	46
  4948  125B  3400               	retlw	0
  4949  125C  3420               	retlw	32
  4950  125D  3400               	retlw	0
  4951  125E  3410               	retlw	16
  4952  125F  3400               	retlw	0
  4953  1260  3400               	retlw	0
  4954  1261  3400               	retlw	0
  4955  1262  34F0               	retlw	240
  4956  1263  3400               	retlw	0
  4957  1264  34E0               	retlw	224
  4958  1265  3400               	retlw	0
  4959  1266  34D2               	retlw	210
  4960  1267  3400               	retlw	0
  4961  1268  34C4               	retlw	196
  4962  1269  3400               	retlw	0
  4963  126A  34B8               	retlw	184
  4964  126B  3400               	retlw	0
  4965  126C  34AD               	retlw	173
  4966  126D  3400               	retlw	0
  4967  126E  34A5               	retlw	165
  4968  126F  3400               	retlw	0
  4969  1270  349F               	retlw	159
  4970  1271  3400               	retlw	0
  4971  1272  349B               	retlw	155
  4972  1273  3400               	retlw	0
  4973  1274  349A               	retlw	154
  4974  1275  3400               	retlw	0
  4975  1276  349B               	retlw	155
  4976  1277  3400               	retlw	0
  4977  1278  349F               	retlw	159
  4978  1279  3400               	retlw	0
  4979  127A  34A5               	retlw	165
  4980  127B  3400               	retlw	0
  4981  127C  34AD               	retlw	173
  4982  127D  3400               	retlw	0
  4983  127E  34B8               	retlw	184
  4984  127F  3400               	retlw	0
  4985  1280  34C4               	retlw	196
  4986  1281  3400               	retlw	0
  4987  1282  34D2               	retlw	210
  4988  1283  3400               	retlw	0
  4989  1284  34E0               	retlw	224
  4990  1285  3400               	retlw	0
  4991  1286  34F0               	retlw	240
  4992  1287  3400               	retlw	0
  4993  1288  3400               	retlw	0
  4994  1289  3400               	retlw	0
  4995  128A  3410               	retlw	16
  4996  128B  3400               	retlw	0
  4997  128C  3420               	retlw	32
  4998  128D  3400               	retlw	0
  4999  128E  342E               	retlw	46
  5000  128F  3400               	retlw	0
  5001  1290  343C               	retlw	60
  5002  1291  3400               	retlw	0
  5003  1292  3448               	retlw	72
  5004  1293  3400               	retlw	0
  5005  1294  3453               	retlw	83
  5006  1295  3400               	retlw	0
  5007  1296  345B               	retlw	91
  5008  1297  3400               	retlw	0
  5009  1298  3461               	retlw	97
  5010  1299  3400               	retlw	0
  5011  129A  3465               	retlw	101
  5012  129B  3400               	retlw	0
  5013  129C  3466               	retlw	102
  5014  129D  3400               	retlw	0
  5015  129E  3465               	retlw	101
  5016  129F  3400               	retlw	0
  5017  12A0  3461               	retlw	97
  5018  12A1  3400               	retlw	0
  5019  12A2  345B               	retlw	91
  5020  12A3  3400               	retlw	0
  5021  12A4  3453               	retlw	83
  5022  12A5  3400               	retlw	0
  5023  12A6  3448               	retlw	72
  5024  12A7  3400               	retlw	0
  5025  12A8  343C               	retlw	60
  5026  12A9  3400               	retlw	0
  5027  12AA  342E               	retlw	46
  5028  12AB  3400               	retlw	0
  5029  12AC  3420               	retlw	32
  5030  12AD  3400               	retlw	0
  5031  12AE  3410               	retlw	16
  5032  12AF  3400               	retlw	0
  5033  12B0  3400               	retlw	0
  5034  12B1  3400               	retlw	0
  5035  12B2  34F0               	retlw	240
  5036  12B3  3400               	retlw	0
  5037  12B4  34E0               	retlw	224
  5038  12B5  3400               	retlw	0
  5039  12B6  34D2               	retlw	210
  5040  12B7  3400               	retlw	0
  5041  12B8  34C4               	retlw	196
  5042  12B9  3400               	retlw	0
  5043  12BA  34B8               	retlw	184
  5044  12BB  3400               	retlw	0
  5045  12BC  34AD               	retlw	173
  5046  12BD  3400               	retlw	0
  5047  12BE  34A5               	retlw	165
  5048  12BF  3400               	retlw	0
  5049  12C0  349F               	retlw	159
  5050  12C1  3400               	retlw	0
  5051  12C2  349B               	retlw	155
  5052  12C3  3400               	retlw	0
  5053  12C4  349A               	retlw	154
  5054  12C5  3400               	retlw	0
  5055  12C6  349B               	retlw	155
  5056  12C7  3400               	retlw	0
  5057  12C8  349F               	retlw	159
  5058  12C9  3400               	retlw	0
  5059  12CA  34A5               	retlw	165
  5060  12CB  3400               	retlw	0
  5061  12CC  34AD               	retlw	173
  5062  12CD  3400               	retlw	0
  5063  12CE  34B8               	retlw	184
  5064  12CF  3400               	retlw	0
  5065  12D0  34C4               	retlw	196
  5066  12D1  3400               	retlw	0
  5067  12D2  34D2               	retlw	210
  5068  12D3  3400               	retlw	0
  5069  12D4  34E0               	retlw	224
  5070  12D5  3400               	retlw	0
  5071  12D6  34F0               	retlw	240
  5072  12D7  3400               	retlw	0
  5073  12D8  3400               	retlw	0
  5074  12D9  3400               	retlw	0
  5075  12DA                     __end_ofdrv2665@drv_sine:	
  5076                           
  5077                           	psect	stringtext3
  5078  12DA                     __pstringtext3:	
  5079  12DA                     _drv_sine:	
  5080  12DA  3400               	retlw	0
  5081  12DB  3400               	retlw	0
  5082  12DC  3410               	retlw	16
  5083  12DD  3400               	retlw	0
  5084  12DE  3420               	retlw	32
  5085  12DF  3400               	retlw	0
  5086  12E0  342E               	retlw	46
  5087  12E1  3400               	retlw	0
  5088  12E2  343C               	retlw	60
  5089  12E3  3400               	retlw	0
  5090  12E4  3448               	retlw	72
  5091  12E5  3400               	retlw	0
  5092  12E6  3453               	retlw	83
  5093  12E7  3400               	retlw	0
  5094  12E8  345B               	retlw	91
  5095  12E9  3400               	retlw	0
  5096  12EA  3461               	retlw	97
  5097  12EB  3400               	retlw	0
  5098  12EC  3465               	retlw	101
  5099  12ED  3400               	retlw	0
  5100  12EE  3466               	retlw	102
  5101  12EF  3400               	retlw	0
  5102  12F0  3465               	retlw	101
  5103  12F1  3400               	retlw	0
  5104  12F2  3461               	retlw	97
  5105  12F3  3400               	retlw	0
  5106  12F4  345B               	retlw	91
  5107  12F5  3400               	retlw	0
  5108  12F6  3453               	retlw	83
  5109  12F7  3400               	retlw	0
  5110  12F8  3448               	retlw	72
  5111  12F9  3400               	retlw	0
  5112  12FA  343C               	retlw	60
  5113  12FB  3400               	retlw	0
  5114  12FC  342E               	retlw	46
  5115  12FD  3400               	retlw	0
  5116  12FE  3420               	retlw	32
  5117  12FF  3400               	retlw	0
  5118  1300  3410               	retlw	16
  5119  1301  3400               	retlw	0
  5120  1302  3400               	retlw	0
  5121  1303  3400               	retlw	0
  5122  1304  34F0               	retlw	240
  5123  1305  3400               	retlw	0
  5124  1306  34E0               	retlw	224
  5125  1307  3400               	retlw	0
  5126  1308  34D2               	retlw	210
  5127  1309  3400               	retlw	0
  5128  130A  34C4               	retlw	196
  5129  130B  3400               	retlw	0
  5130  130C  34B8               	retlw	184
  5131  130D  3400               	retlw	0
  5132  130E  34AD               	retlw	173
  5133  130F  3400               	retlw	0
  5134  1310  34A5               	retlw	165
  5135  1311  3400               	retlw	0
  5136  1312  349F               	retlw	159
  5137  1313  3400               	retlw	0
  5138  1314  349B               	retlw	155
  5139  1315  3400               	retlw	0
  5140  1316  349A               	retlw	154
  5141  1317  3400               	retlw	0
  5142  1318  349B               	retlw	155
  5143  1319  3400               	retlw	0
  5144  131A  349F               	retlw	159
  5145  131B  3400               	retlw	0
  5146  131C  34A5               	retlw	165
  5147  131D  3400               	retlw	0
  5148  131E  34AD               	retlw	173
  5149  131F  3400               	retlw	0
  5150  1320  34B8               	retlw	184
  5151  1321  3400               	retlw	0
  5152  1322  34C4               	retlw	196
  5153  1323  3400               	retlw	0
  5154  1324  34D2               	retlw	210
  5155  1325  3400               	retlw	0
  5156  1326  34E0               	retlw	224
  5157  1327  3400               	retlw	0
  5158  1328  34F0               	retlw	240
  5159  1329  3400               	retlw	0
  5160  132A  3400               	retlw	0
  5161  132B  3400               	retlw	0
  5162  132C  3410               	retlw	16
  5163  132D  3400               	retlw	0
  5164  132E  3420               	retlw	32
  5165  132F  3400               	retlw	0
  5166  1330  342E               	retlw	46
  5167  1331  3400               	retlw	0
  5168  1332  343C               	retlw	60
  5169  1333  3400               	retlw	0
  5170  1334  3448               	retlw	72
  5171  1335  3400               	retlw	0
  5172  1336  3453               	retlw	83
  5173  1337  3400               	retlw	0
  5174  1338  345B               	retlw	91
  5175  1339  3400               	retlw	0
  5176  133A  3461               	retlw	97
  5177  133B  3400               	retlw	0
  5178  133C  3465               	retlw	101
  5179  133D  3400               	retlw	0
  5180  133E  3466               	retlw	102
  5181  133F  3400               	retlw	0
  5182  1340  3465               	retlw	101
  5183  1341  3400               	retlw	0
  5184  1342  3461               	retlw	97
  5185  1343  3400               	retlw	0
  5186  1344  345B               	retlw	91
  5187  1345  3400               	retlw	0
  5188  1346  3453               	retlw	83
  5189  1347  3400               	retlw	0
  5190  1348  3448               	retlw	72
  5191  1349  3400               	retlw	0
  5192  134A  343C               	retlw	60
  5193  134B  3400               	retlw	0
  5194  134C  342E               	retlw	46
  5195  134D  3400               	retlw	0
  5196  134E  3420               	retlw	32
  5197  134F  3400               	retlw	0
  5198  1350  3410               	retlw	16
  5199  1351  3400               	retlw	0
  5200  1352  3400               	retlw	0
  5201  1353  3400               	retlw	0
  5202  1354  34F0               	retlw	240
  5203  1355  3400               	retlw	0
  5204  1356  34E0               	retlw	224
  5205  1357  3400               	retlw	0
  5206  1358  34D2               	retlw	210
  5207  1359  3400               	retlw	0
  5208  135A  34C4               	retlw	196
  5209  135B  3400               	retlw	0
  5210  135C  34B8               	retlw	184
  5211  135D  3400               	retlw	0
  5212  135E  34AD               	retlw	173
  5213  135F  3400               	retlw	0
  5214  1360  34A5               	retlw	165
  5215  1361  3400               	retlw	0
  5216  1362  349F               	retlw	159
  5217  1363  3400               	retlw	0
  5218  1364  349B               	retlw	155
  5219  1365  3400               	retlw	0
  5220  1366  349A               	retlw	154
  5221  1367  3400               	retlw	0
  5222  1368  349B               	retlw	155
  5223  1369  3400               	retlw	0
  5224  136A  349F               	retlw	159
  5225  136B  3400               	retlw	0
  5226  136C  34A5               	retlw	165
  5227  136D  3400               	retlw	0
  5228  136E  34AD               	retlw	173
  5229  136F  3400               	retlw	0
  5230  1370  34B8               	retlw	184
  5231  1371  3400               	retlw	0
  5232  1372  34C4               	retlw	196
  5233  1373  3400               	retlw	0
  5234  1374  34D2               	retlw	210
  5235  1375  3400               	retlw	0
  5236  1376  34E0               	retlw	224
  5237  1377  3400               	retlw	0
  5238  1378  34F0               	retlw	240
  5239  1379  3400               	retlw	0
  5240  137A  3400               	retlw	0
  5241  137B  3400               	retlw	0
  5242  137C  3410               	retlw	16
  5243  137D  3400               	retlw	0
  5244  137E  3420               	retlw	32
  5245  137F  3400               	retlw	0
  5246  1380  342E               	retlw	46
  5247  1381  3400               	retlw	0
  5248  1382  343C               	retlw	60
  5249  1383  3400               	retlw	0
  5250  1384  3448               	retlw	72
  5251  1385  3400               	retlw	0
  5252  1386  3453               	retlw	83
  5253  1387  3400               	retlw	0
  5254  1388  345B               	retlw	91
  5255  1389  3400               	retlw	0
  5256  138A  3461               	retlw	97
  5257  138B  3400               	retlw	0
  5258  138C  3465               	retlw	101
  5259  138D  3400               	retlw	0
  5260  138E  3466               	retlw	102
  5261  138F  3400               	retlw	0
  5262  1390  3465               	retlw	101
  5263  1391  3400               	retlw	0
  5264  1392  3461               	retlw	97
  5265  1393  3400               	retlw	0
  5266  1394  345B               	retlw	91
  5267  1395  3400               	retlw	0
  5268  1396  3453               	retlw	83
  5269  1397  3400               	retlw	0
  5270  1398  3448               	retlw	72
  5271  1399  3400               	retlw	0
  5272  139A  343C               	retlw	60
  5273  139B  3400               	retlw	0
  5274  139C  342E               	retlw	46
  5275  139D  3400               	retlw	0
  5276  139E  3420               	retlw	32
  5277  139F  3400               	retlw	0
  5278  13A0  3410               	retlw	16
  5279  13A1  3400               	retlw	0
  5280  13A2  3400               	retlw	0
  5281  13A3  3400               	retlw	0
  5282  13A4  34F0               	retlw	240
  5283  13A5  3400               	retlw	0
  5284  13A6  34E0               	retlw	224
  5285  13A7  3400               	retlw	0
  5286  13A8  34D2               	retlw	210
  5287  13A9  3400               	retlw	0
  5288  13AA  34C4               	retlw	196
  5289  13AB  3400               	retlw	0
  5290  13AC  34B8               	retlw	184
  5291  13AD  3400               	retlw	0
  5292  13AE  34AD               	retlw	173
  5293  13AF  3400               	retlw	0
  5294  13B0  34A5               	retlw	165
  5295  13B1  3400               	retlw	0
  5296  13B2  349F               	retlw	159
  5297  13B3  3400               	retlw	0
  5298  13B4  349B               	retlw	155
  5299  13B5  3400               	retlw	0
  5300  13B6  349A               	retlw	154
  5301  13B7  3400               	retlw	0
  5302  13B8  349B               	retlw	155
  5303  13B9  3400               	retlw	0
  5304  13BA  349F               	retlw	159
  5305  13BB  3400               	retlw	0
  5306  13BC  34A5               	retlw	165
  5307  13BD  3400               	retlw	0
  5308  13BE  34AD               	retlw	173
  5309  13BF  3400               	retlw	0
  5310  13C0  34B8               	retlw	184
  5311  13C1  3400               	retlw	0
  5312  13C2  34C4               	retlw	196
  5313  13C3  3400               	retlw	0
  5314  13C4  34D2               	retlw	210
  5315  13C5  3400               	retlw	0
  5316  13C6  34E0               	retlw	224
  5317  13C7  3400               	retlw	0
  5318  13C8  34F0               	retlw	240
  5319  13C9  3400               	retlw	0
  5320  13CA  3400               	retlw	0
  5321  13CB  3400               	retlw	0
  5322  13CC                     __end_of_drv_sine:	
  5323                           
  5324                           	psect	stringtext4
  5325  2000                     __pstringtext4:	
  5326  2000                     _dpowers:	
  5327  2000  3401               	retlw	1
  5328  2001  3400               	retlw	0
  5329  2002  3400               	retlw	0
  5330  2003  3400               	retlw	0
  5331  2004  340A               	retlw	10
  5332  2005  3400               	retlw	0
  5333  2006  3400               	retlw	0
  5334  2007  3400               	retlw	0
  5335  2008  3464               	retlw	100
  5336  2009  3400               	retlw	0
  5337  200A  3400               	retlw	0
  5338  200B  3400               	retlw	0
  5339  200C  34E8               	retlw	232
  5340  200D  3403               	retlw	3
  5341  200E  3400               	retlw	0
  5342  200F  3400               	retlw	0
  5343  2010  3410               	retlw	16
  5344  2011  3427               	retlw	39
  5345  2012  3400               	retlw	0
  5346  2013  3400               	retlw	0
  5347  2014  34A0               	retlw	160
  5348  2015  3486               	retlw	134
  5349  2016  3401               	retlw	1
  5350  2017  3400               	retlw	0
  5351  2018  3440               	retlw	64
  5352  2019  3442               	retlw	66
  5353  201A  340F               	retlw	15
  5354  201B  3400               	retlw	0
  5355  201C  3480               	retlw	128
  5356  201D  3496               	retlw	150
  5357  201E  3498               	retlw	152
  5358  201F  3400               	retlw	0
  5359  2020  3400               	retlw	0
  5360  2021  34E1               	retlw	225
  5361  2022  34F5               	retlw	245
  5362  2023  3405               	retlw	5
  5363  2024  3400               	retlw	0
  5364  2025  34CA               	retlw	202
  5365  2026  349A               	retlw	154
  5366  2027  343B               	retlw	59
  5367  2028                     __end_of_dpowers:	
  5368                           
  5369                           	psect	stringtext5
  5370  2A1F                     __pstringtext5:	
  5371  2A1F                     _TMR2_RANGE:	
  5372  2A1F  3400               	retlw	0
  5373  2A20  34C8               	retlw	200
  5374  2A21  343F               	retlw	63
  5375  2A22                     __end_of_TMR2_RANGE:	
  5376                           
  5377                           	psect	stringtext6
  5378  2A22                     __pstringtext6:	
  5379  2A22                     _TMR0_RANGE:	
  5380  2A22  3400               	retlw	0
  5381  2A23  34C8               	retlw	200
  5382  2A24  343D               	retlw	61
  5383  2A25                     __end_of_TMR0_RANGE:	
  5384                           
  5385                           	psect	stringtext7
  5386  2A2B                     __pstringtext7:	
  5387  2A2B                     _LEDpower:	
  5388  2A2B  343F               	retlw	63
  5389  2A2C  3400               	retlw	0
  5390  2A2D                     __end_of_LEDpower:	
  5391                           
  5392                           	psect	stringtext8
  5393  10F4                     __pstringtext8:	
  5394  10F4                     drv2665@drv_fifo_sine:	
  5395  10F4  340B               	retlw	11
  5396  10F5  3400               	retlw	0
  5397  10F6  3400               	retlw	0
  5398  10F7  3400               	retlw	0
  5399  10F8  3410               	retlw	16
  5400  10F9  3400               	retlw	0
  5401  10FA  3420               	retlw	32
  5402  10FB  3400               	retlw	0
  5403  10FC  342E               	retlw	46
  5404  10FD  3400               	retlw	0
  5405  10FE  343C               	retlw	60
  5406  10FF  3400               	retlw	0
  5407  1100  3448               	retlw	72
  5408  1101  3400               	retlw	0
  5409  1102  3453               	retlw	83
  5410  1103  3400               	retlw	0
  5411  1104  345B               	retlw	91
  5412  1105  3400               	retlw	0
  5413  1106  3461               	retlw	97
  5414  1107  3400               	retlw	0
  5415  1108  3465               	retlw	101
  5416  1109  3400               	retlw	0
  5417  110A  3466               	retlw	102
  5418  110B  3400               	retlw	0
  5419  110C  3465               	retlw	101
  5420  110D  3400               	retlw	0
  5421  110E  3461               	retlw	97
  5422  110F  3400               	retlw	0
  5423  1110  345B               	retlw	91
  5424  1111  3400               	retlw	0
  5425  1112  3453               	retlw	83
  5426  1113  3400               	retlw	0
  5427  1114  3448               	retlw	72
  5428  1115  3400               	retlw	0
  5429  1116  343C               	retlw	60
  5430  1117  3400               	retlw	0
  5431  1118  342E               	retlw	46
  5432  1119  3400               	retlw	0
  5433  111A  3420               	retlw	32
  5434  111B  3400               	retlw	0
  5435  111C  3410               	retlw	16
  5436  111D  3400               	retlw	0
  5437  111E  3400               	retlw	0
  5438  111F  3400               	retlw	0
  5439  1120  34F0               	retlw	240
  5440  1121  3400               	retlw	0
  5441  1122  34E0               	retlw	224
  5442  1123  3400               	retlw	0
  5443  1124  34D2               	retlw	210
  5444  1125  3400               	retlw	0
  5445  1126  34C4               	retlw	196
  5446  1127  3400               	retlw	0
  5447  1128  34B8               	retlw	184
  5448  1129  3400               	retlw	0
  5449  112A  34AD               	retlw	173
  5450  112B  3400               	retlw	0
  5451  112C  34A5               	retlw	165
  5452  112D  3400               	retlw	0
  5453  112E  349F               	retlw	159
  5454  112F  3400               	retlw	0
  5455  1130  349B               	retlw	155
  5456  1131  3400               	retlw	0
  5457  1132  349A               	retlw	154
  5458  1133  3400               	retlw	0
  5459  1134  349B               	retlw	155
  5460  1135  3400               	retlw	0
  5461  1136  349F               	retlw	159
  5462  1137  3400               	retlw	0
  5463  1138  34A5               	retlw	165
  5464  1139  3400               	retlw	0
  5465  113A  34AD               	retlw	173
  5466  113B  3400               	retlw	0
  5467  113C  34B8               	retlw	184
  5468  113D  3400               	retlw	0
  5469  113E  34C4               	retlw	196
  5470  113F  3400               	retlw	0
  5471  1140  34D2               	retlw	210
  5472  1141  3400               	retlw	0
  5473  1142  34E0               	retlw	224
  5474  1143  3400               	retlw	0
  5475  1144  34F0               	retlw	240
  5476  1145  3400               	retlw	0
  5477  1146  3400               	retlw	0
  5478  1147  3400               	retlw	0
  5479  1148  3410               	retlw	16
  5480  1149  3400               	retlw	0
  5481  114A  3420               	retlw	32
  5482  114B  3400               	retlw	0
  5483  114C  342E               	retlw	46
  5484  114D  3400               	retlw	0
  5485  114E  343C               	retlw	60
  5486  114F  3400               	retlw	0
  5487  1150  3448               	retlw	72
  5488  1151  3400               	retlw	0
  5489  1152  3453               	retlw	83
  5490  1153  3400               	retlw	0
  5491  1154  345B               	retlw	91
  5492  1155  3400               	retlw	0
  5493  1156  3461               	retlw	97
  5494  1157  3400               	retlw	0
  5495  1158  3465               	retlw	101
  5496  1159  3400               	retlw	0
  5497  115A  3466               	retlw	102
  5498  115B  3400               	retlw	0
  5499  115C  3465               	retlw	101
  5500  115D  3400               	retlw	0
  5501  115E  3461               	retlw	97
  5502  115F  3400               	retlw	0
  5503  1160  345B               	retlw	91
  5504  1161  3400               	retlw	0
  5505  1162  3453               	retlw	83
  5506  1163  3400               	retlw	0
  5507  1164  3448               	retlw	72
  5508  1165  3400               	retlw	0
  5509  1166  343C               	retlw	60
  5510  1167  3400               	retlw	0
  5511  1168  342E               	retlw	46
  5512  1169  3400               	retlw	0
  5513  116A  3420               	retlw	32
  5514  116B  3400               	retlw	0
  5515  116C  3410               	retlw	16
  5516  116D  3400               	retlw	0
  5517  116E  3400               	retlw	0
  5518  116F  3400               	retlw	0
  5519  1170  34F0               	retlw	240
  5520  1171  3400               	retlw	0
  5521  1172  34E0               	retlw	224
  5522  1173  3400               	retlw	0
  5523  1174  34D2               	retlw	210
  5524  1175  3400               	retlw	0
  5525  1176  34C4               	retlw	196
  5526  1177  3400               	retlw	0
  5527  1178  34B8               	retlw	184
  5528  1179  3400               	retlw	0
  5529  117A  34AD               	retlw	173
  5530  117B  3400               	retlw	0
  5531  117C  34A5               	retlw	165
  5532  117D  3400               	retlw	0
  5533  117E  349F               	retlw	159
  5534  117F  3400               	retlw	0
  5535  1180  349B               	retlw	155
  5536  1181  3400               	retlw	0
  5537  1182  349A               	retlw	154
  5538  1183  3400               	retlw	0
  5539  1184  349B               	retlw	155
  5540  1185  3400               	retlw	0
  5541  1186  349F               	retlw	159
  5542  1187  3400               	retlw	0
  5543  1188  34A5               	retlw	165
  5544  1189  3400               	retlw	0
  5545  118A  34AD               	retlw	173
  5546  118B  3400               	retlw	0
  5547  118C  34B8               	retlw	184
  5548  118D  3400               	retlw	0
  5549  118E  34C4               	retlw	196
  5550  118F  3400               	retlw	0
  5551  1190  34D2               	retlw	210
  5552  1191  3400               	retlw	0
  5553  1192  34E0               	retlw	224
  5554  1193  3400               	retlw	0
  5555  1194  34F0               	retlw	240
  5556  1195  3400               	retlw	0
  5557  1196  3400               	retlw	0
  5558  1197  3400               	retlw	0
  5559  1198  3410               	retlw	16
  5560  1199  3400               	retlw	0
  5561  119A  3420               	retlw	32
  5562  119B  3400               	retlw	0
  5563  119C  342E               	retlw	46
  5564  119D  3400               	retlw	0
  5565  119E  343C               	retlw	60
  5566  119F  3400               	retlw	0
  5567  11A0  3448               	retlw	72
  5568  11A1  3400               	retlw	0
  5569  11A2  3453               	retlw	83
  5570  11A3  3400               	retlw	0
  5571  11A4  345B               	retlw	91
  5572  11A5  3400               	retlw	0
  5573  11A6  3461               	retlw	97
  5574  11A7  3400               	retlw	0
  5575  11A8  3465               	retlw	101
  5576  11A9  3400               	retlw	0
  5577  11AA  3466               	retlw	102
  5578  11AB  3400               	retlw	0
  5579  11AC  3465               	retlw	101
  5580  11AD  3400               	retlw	0
  5581  11AE  3461               	retlw	97
  5582  11AF  3400               	retlw	0
  5583  11B0  345B               	retlw	91
  5584  11B1  3400               	retlw	0
  5585  11B2  3453               	retlw	83
  5586  11B3  3400               	retlw	0
  5587  11B4  3448               	retlw	72
  5588  11B5  3400               	retlw	0
  5589  11B6  343C               	retlw	60
  5590  11B7  3400               	retlw	0
  5591  11B8  342E               	retlw	46
  5592  11B9  3400               	retlw	0
  5593  11BA  3420               	retlw	32
  5594  11BB  3400               	retlw	0
  5595  11BC  3410               	retlw	16
  5596  11BD  3400               	retlw	0
  5597  11BE  3400               	retlw	0
  5598  11BF  3400               	retlw	0
  5599  11C0  34F0               	retlw	240
  5600  11C1  3400               	retlw	0
  5601  11C2  34E0               	retlw	224
  5602  11C3  3400               	retlw	0
  5603  11C4  34D2               	retlw	210
  5604  11C5  3400               	retlw	0
  5605  11C6  34C4               	retlw	196
  5606  11C7  3400               	retlw	0
  5607  11C8  34B8               	retlw	184
  5608  11C9  3400               	retlw	0
  5609  11CA  34AD               	retlw	173
  5610  11CB  3400               	retlw	0
  5611  11CC  34A5               	retlw	165
  5612  11CD  3400               	retlw	0
  5613  11CE  349F               	retlw	159
  5614  11CF  3400               	retlw	0
  5615  11D0  349B               	retlw	155
  5616  11D1  3400               	retlw	0
  5617  11D2  349A               	retlw	154
  5618  11D3  3400               	retlw	0
  5619  11D4  349B               	retlw	155
  5620  11D5  3400               	retlw	0
  5621  11D6  349F               	retlw	159
  5622  11D7  3400               	retlw	0
  5623  11D8  34A5               	retlw	165
  5624  11D9  3400               	retlw	0
  5625  11DA  34AD               	retlw	173
  5626  11DB  3400               	retlw	0
  5627  11DC  34B8               	retlw	184
  5628  11DD  3400               	retlw	0
  5629  11DE  34C4               	retlw	196
  5630  11DF  3400               	retlw	0
  5631  11E0  34D2               	retlw	210
  5632  11E1  3400               	retlw	0
  5633  11E2  34E0               	retlw	224
  5634  11E3  3400               	retlw	0
  5635  11E4  34F0               	retlw	240
  5636  11E5  3400               	retlw	0
  5637  11E6  3400               	retlw	0
  5638  11E7  3400               	retlw	0
  5639  11E8                     __end_ofdrv2665@drv_fifo_sine:	
  5640                           
  5641                           	psect	stringtext9
  5642  2907                     __pstringtext9:	
  5643  2907                     sin@coeff_a:	
  5644  2907  34F4               	retlw	244
  5645  2908  344A               	retlw	74
  5646  2909  3448               	retlw	72
  5647  290A  3495               	retlw	149
  5648  290B  3495               	retlw	149
  5649  290C  34C7               	retlw	199
  5650  290D  34C1               	retlw	193
  5651  290E  34DC               	retlw	220
  5652  290F  3445               	retlw	69
  5653  2910  34DC               	retlw	220
  5654  2911  346D               	retlw	109
  5655  2912  34C3               	retlw	195
  5656  2913  34B3               	retlw	179
  5657  2914  3433               	retlw	51
  5658  2915  3440               	retlw	64
  5659  2916                     __end_ofsin@coeff_a:	
  5660                           
  5661                           	psect	stringtext10
  5662  296A                     __pstringtext10:	
  5663  296A                     sin@coeff_b:	
  5664  296A  3434               	retlw	52
  5665  296B  3401               	retlw	1
  5666  296C  3448               	retlw	72
  5667  296D  349D               	retlw	157
  5668  296E  34B0               	retlw	176
  5669  296F  3445               	retlw	69
  5670  2970  3400               	retlw	0
  5671  2971  34DA               	retlw	218
  5672  2972  3442               	retlw	66
  5673  2973  3400               	retlw	0
  5674  2974  3480               	retlw	128
  5675  2975  343F               	retlw	63
  5676  2976                     __end_ofsin@coeff_b:	
  5677                           
  5678                           	psect	nvBANK0
  5679  005E                     __pnvBANK0:	
  5680  005E                     _eusartTxBufferRemaining:	
  5681  005E                     	ds	1
  5682                           
  5683                           	psect	nvBANK2
  5684  016C                     __pnvBANK2:	
  5685  016C                     _TMR2_InterruptHandler:	
  5686  016C                     	ds	2
  5687  016E                     _TMR0_InterruptHandler:	
  5688  016E                     	ds	2
  5689  001F                     _T2CONbits	set	31
  5690  001F                     _T2CON	set	31
  5691  001D                     _TMR2	set	29
  5692  001E                     _PR2	set	30
  5693  0017                     _T0CON0bits	set	23
  5694  0017                     _T0CON0	set	23
  5695  0015                     _TMR0L	set	21
  5696  0016                     _TMR0H	set	22
  5697  0018                     _T0CON1	set	24
  5698  0011                     _PIR1bits	set	17
  5699  0010                     _PIR0bits	set	16
  5700  000E                     _PORTCbits	set	14
  5701  000B                     _INTCONbits	set	11
  5702  0091                     _PIE1bits	set	145
  5703  0090                     _PIE0bits	set	144
  5704  008E                     _TRISC	set	142
  5705  008D                     _TRISB	set	141
  5706  008C                     _TRISA	set	140
  5707  0097                     _WDTCON	set	151
  5708  010C                     _LATAbits	set	268
  5709  010E                     _LATCbits	set	270
  5710  010D                     _LATBbits	set	269
  5711  010E                     _LATC	set	270
  5712  010D                     _LATB	set	269
  5713  010C                     _LATA	set	268
  5714  0199                     _RC1REG	set	409
  5715  019D                     _RC1STAbits	set	413
  5716  019A                     _TX1REG	set	410
  5717  019C                     _SP1BRGH	set	412
  5718  019B                     _SP1BRGL	set	411
  5719  019E                     _TX1STA	set	414
  5720  019D                     _RC1STA	set	413
  5721  019F                     _BAUD1CON	set	415
  5722  018C                     _ANSELA	set	396
  5723  018D                     _ANSELB	set	397
  5724  018E                     _ANSELC	set	398
  5725  0214                     _SSP1STATbits	set	532
  5726  0213                     _SSP1MSK	set	531
  5727  0211                     _SSP1BUF	set	529
  5728  0216                     _SSP1CON2bits	set	534
  5729  0212                     _SSP1ADD	set	530
  5730  0216                     _SSP1CON2	set	534
  5731  0215                     _SSP1CON1	set	533
  5732  0214                     _SSP1STAT	set	532
  5733  0215                     _SSP1CON1bits	set	533
  5734  020E                     _WPUC	set	526
  5735  020C                     _WPUA	set	524
  5736  020D                     _WPUB	set	525
  5737  028E                     _ODCONC	set	654
  5738  028D                     _ODCONB	set	653
  5739  028C                     _ODCONA	set	652
  5740  0896                     _NVMCON2	set	2198
  5741  0893                     _NVMDATL	set	2195
  5742  0894                     _NVMDATH	set	2196
  5743  0895                     _NVMCON1bits	set	2197
  5744  0892                     _NVMADRH	set	2194
  5745  0891                     _NVMADRL	set	2193
  5746  0916                     _PMD5	set	2326
  5747  0915                     _PMD4	set	2325
  5748  0914                     _PMD3	set	2324
  5749  0913                     _PMD2	set	2323
  5750  0912                     _PMD1	set	2322
  5751  0911                     _PMD0	set	2321
  5752  091E                     _OSCTUNE	set	2334
  5753  091F                     _OSCFRQ	set	2335
  5754  091D                     _OSCEN	set	2333
  5755  091B                     _OSCCON3	set	2331
  5756  0919                     _OSCCON1	set	2329
  5757  0E24                     _RXPPSbits	set	3620
  5758  0E20                     _SSP1CLKPPSbits	set	3616
  5759  0E21                     _SSP1DATPPSbits	set	3617
  5760  0E9D                     _RB5PPSbits	set	3741
  5761  0E9E                     _RB6PPSbits	set	3742
  5762  0EA7                     _RC7PPSbits	set	3751
  5763                           
  5764                           	psect	stringtext11
  5765  2800                     __pstringtext11:	
  5766  2800                     STR_41:	
  5767  2800  340A               	retlw	10
  5768  2801  3474               	retlw	116	;'t'
  5769  2802  3465               	retlw	101	;'e'
  5770  2803  3473               	retlw	115	;'s'
  5771  2804  3474               	retlw	116	;'t'
  5772  2805  3469               	retlw	105	;'i'
  5773  2806  346E               	retlw	110	;'n'
  5774  2807  3467               	retlw	103	;'g'
  5775  2808  3420               	retlw	32	;' '
  5776  2809  3462               	retlw	98	;'b'
  5777  280A  346F               	retlw	111	;'o'
  5778  280B  3474               	retlw	116	;'t'
  5779  280C  3474               	retlw	116	;'t'
  5780  280D  346F               	retlw	111	;'o'
  5781  280E  346D               	retlw	109	;'m'
  5782  280F  3420               	retlw	32	;' '
  5783  2810  344C               	retlw	76	;'L'
  5784  2811  3445               	retlw	69	;'E'
  5785  2812  3444               	retlw	68	;'D'
  5786  2813  3420               	retlw	32	;' '
  5787  2814  3464               	retlw	100	;'d'
  5788  2815  3472               	retlw	114	;'r'
  5789  2816  3469               	retlw	105	;'i'
  5790  2817  3476               	retlw	118	;'v'
  5791  2818  3465               	retlw	101	;'e'
  5792  2819  3472               	retlw	114	;'r'
  5793  281A  342E               	retlw	46	;'.'
  5794  281B  342E               	retlw	46	;'.'
  5795  281C  342E               	retlw	46	;'.'
  5796  281D  340A               	retlw	10
  5797  281E  3400               	retlw	0
  5798                           
  5799                           	psect	stringtext12
  5800  281F                     __pstringtext12:	
  5801  281F                     STR_35:	
  5802  281F  340A               	retlw	10
  5803  2820  342D               	retlw	45	;'-'
  5804  2821  342D               	retlw	45	;'-'
  5805  2822  342D               	retlw	45	;'-'
  5806  2823  342D               	retlw	45	;'-'
  5807  2824  3473               	retlw	115	;'s'
  5808  2825  3474               	retlw	116	;'t'
  5809  2826  3461               	retlw	97	;'a'
  5810  2827  3472               	retlw	114	;'r'
  5811  2828  3474               	retlw	116	;'t'
  5812  2829  3469               	retlw	105	;'i'
  5813  282A  346E               	retlw	110	;'n'
  5814  282B  3467               	retlw	103	;'g'
  5815  282C  3420               	retlw	32	;' '
  5816  282D  3463               	retlw	99	;'c'
  5817  282E  346F               	retlw	111	;'o'
  5818  282F  346D               	retlw	109	;'m'
  5819  2830  346D               	retlw	109	;'m'
  5820  2831  3420               	retlw	32	;' '
  5821  2832  3474               	retlw	116	;'t'
  5822  2833  3465               	retlw	101	;'e'
  5823  2834  3473               	retlw	115	;'s'
  5824  2835  3474               	retlw	116	;'t'
  5825  2836  342D               	retlw	45	;'-'
  5826  2837  342D               	retlw	45	;'-'
  5827  2838  342D               	retlw	45	;'-'
  5828  2839  342D               	retlw	45	;'-'
  5829  283A  340A               	retlw	10
  5830  283B  340A               	retlw	10
  5831  283C  3400               	retlw	0
  5832                           
  5833                           	psect	stringtext13
  5834  283D                     __pstringtext13:	
  5835  283D                     STR_49:	
  5836  283D  342D               	retlw	45	;'-'
  5837  283E  342D               	retlw	45	;'-'
  5838  283F  342D               	retlw	45	;'-'
  5839  2840  342D               	retlw	45	;'-'
  5840  2841  3466               	retlw	102	;'f'
  5841  2842  3469               	retlw	105	;'i'
  5842  2843  346E               	retlw	110	;'n'
  5843  2844  3469               	retlw	105	;'i'
  5844  2845  3473               	retlw	115	;'s'
  5845  2846  3468               	retlw	104	;'h'
  5846  2847  3465               	retlw	101	;'e'
  5847  2848  3464               	retlw	100	;'d'
  5848  2849  3420               	retlw	32	;' '
  5849  284A  3463               	retlw	99	;'c'
  5850  284B  346F               	retlw	111	;'o'
  5851  284C  346D               	retlw	109	;'m'
  5852  284D  346D               	retlw	109	;'m'
  5853  284E  3420               	retlw	32	;' '
  5854  284F  3474               	retlw	116	;'t'
  5855  2850  3465               	retlw	101	;'e'
  5856  2851  3473               	retlw	115	;'s'
  5857  2852  3474               	retlw	116	;'t'
  5858  2853  342D               	retlw	45	;'-'
  5859  2854  342D               	retlw	45	;'-'
  5860  2855  342D               	retlw	45	;'-'
  5861  2856  342D               	retlw	45	;'-'
  5862  2857  340A               	retlw	10
  5863  2858  3400               	retlw	0
  5864                           
  5865                           	psect	stringtext14
  5866  2859                     __pstringtext14:	
  5867  2859                     STR_36:	
  5868  2859  3474               	retlw	116	;'t'
  5869  285A  3465               	retlw	101	;'e'
  5870  285B  3473               	retlw	115	;'s'
  5871  285C  3474               	retlw	116	;'t'
  5872  285D  3469               	retlw	105	;'i'
  5873  285E  346E               	retlw	110	;'n'
  5874  285F  3467               	retlw	103	;'g'
  5875  2860  3420               	retlw	32	;' '
  5876  2861  3474               	retlw	116	;'t'
  5877  2862  346F               	retlw	111	;'o'
  5878  2863  3470               	retlw	112	;'p'
  5879  2864  3420               	retlw	32	;' '
  5880  2865  344C               	retlw	76	;'L'
  5881  2866  3445               	retlw	69	;'E'
  5882  2867  3444               	retlw	68	;'D'
  5883  2868  3420               	retlw	32	;' '
  5884  2869  3464               	retlw	100	;'d'
  5885  286A  3472               	retlw	114	;'r'
  5886  286B  3469               	retlw	105	;'i'
  5887  286C  3476               	retlw	118	;'v'
  5888  286D  3465               	retlw	101	;'e'
  5889  286E  3472               	retlw	114	;'r'
  5890  286F  342E               	retlw	46	;'.'
  5891  2870  342E               	retlw	46	;'.'
  5892  2871  342E               	retlw	46	;'.'
  5893  2872  3400               	retlw	0
  5894                           
  5895                           	psect	stringtext15
  5896  2873                     __pstringtext15:	
  5897  2873                     STR_46:	
  5898  2873  340A               	retlw	10
  5899  2874  3474               	retlw	116	;'t'
  5900  2875  3465               	retlw	101	;'e'
  5901  2876  3473               	retlw	115	;'s'
  5902  2877  3474               	retlw	116	;'t'
  5903  2878  3469               	retlw	105	;'i'
  5904  2879  346E               	retlw	110	;'n'
  5905  287A  3467               	retlw	103	;'g'
  5906  287B  3420               	retlw	32	;' '
  5907  287C  3470               	retlw	112	;'p'
  5908  287D  3469               	retlw	105	;'i'
  5909  287E  3465               	retlw	101	;'e'
  5910  287F  347A               	retlw	122	;'z'
  5911  2880  346F               	retlw	111	;'o'
  5912  2881  3420               	retlw	32	;' '
  5913  2882  3464               	retlw	100	;'d'
  5914  2883  3472               	retlw	114	;'r'
  5915  2884  3469               	retlw	105	;'i'
  5916  2885  3476               	retlw	118	;'v'
  5917  2886  3465               	retlw	101	;'e'
  5918  2887  3472               	retlw	114	;'r'
  5919  2888  342E               	retlw	46	;'.'
  5920  2889  342E               	retlw	46	;'.'
  5921  288A  342E               	retlw	46	;'.'
  5922  288B  3400               	retlw	0
  5923                           
  5924                           	psect	stringtext16
  5925  288C                     __pstringtext16:	
  5926  288C                     STR_78:	
  5927  288C  3455               	retlw	85	;'U'
  5928  288D  344E               	retlw	78	;'N'
  5929  288E  3452               	retlw	82	;'R'
  5930  288F  3445               	retlw	69	;'E'
  5931  2890  3443               	retlw	67	;'C'
  5932  2891  344F               	retlw	79	;'O'
  5933  2892  3447               	retlw	71	;'G'
  5934  2893  344E               	retlw	78	;'N'
  5935  2894  3449               	retlw	73	;'I'
  5936  2895  345A               	retlw	90	;'Z'
  5937  2896  3445               	retlw	69	;'E'
  5938  2897  3444               	retlw	68	;'D'
  5939  2898  3420               	retlw	32	;' '
  5940  2899  3443               	retlw	67	;'C'
  5941  289A  344F               	retlw	79	;'O'
  5942  289B  344D               	retlw	77	;'M'
  5943  289C  344D               	retlw	77	;'M'
  5944  289D  3441               	retlw	65	;'A'
  5945  289E  344E               	retlw	78	;'N'
  5946  289F  3444               	retlw	68	;'D'
  5947  28A0  3421               	retlw	33	;'!'
  5948  28A1  340A               	retlw	10
  5949  28A2  3400               	retlw	0
  5950                           
  5951                           	psect	stringtext17
  5952  28A3                     __pstringtext17:	
  5953  28A3                     STR_51:	
  5954  28A3  3464               	retlw	100	;'d'
  5955  28A4  3472               	retlw	114	;'r'
  5956  28A5  3476               	retlw	118	;'v'
  5957  28A6  345F               	retlw	95	;'_'
  5958  28A7  3477               	retlw	119	;'w'
  5959  28A8  3472               	retlw	114	;'r'
  5960  28A9  3469               	retlw	105	;'i'
  5961  28AA  3474               	retlw	116	;'t'
  5962  28AB  3465               	retlw	101	;'e'
  5963  28AC  3420               	retlw	32	;' '
  5964  28AD  3465               	retlw	101	;'e'
  5965  28AE  3472               	retlw	114	;'r'
  5966  28AF  3472               	retlw	114	;'r'
  5967  28B0  346F               	retlw	111	;'o'
  5968  28B1  3472               	retlw	114	;'r'
  5969  28B2  3421               	retlw	33	;'!'
  5970  28B3  340A               	retlw	10
  5971  28B4  3400               	retlw	0
  5972                           
  5973                           	psect	stringtext18
  5974  28B5                     __pstringtext18:	
  5975  28B5                     STR_53:	
  5976  28B5  3464               	retlw	100	;'d'
  5977  28B6  3472               	retlw	114	;'r'
  5978  28B7  3476               	retlw	118	;'v'
  5979  28B8  345F               	retlw	95	;'_'
  5980  28B9  3472               	retlw	114	;'r'
  5981  28BA  3465               	retlw	101	;'e'
  5982  28BB  3461               	retlw	97	;'a'
  5983  28BC  3464               	retlw	100	;'d'
  5984  28BD  3420               	retlw	32	;' '
  5985  28BE  3465               	retlw	101	;'e'
  5986  28BF  3472               	retlw	114	;'r'
  5987  28C0  3472               	retlw	114	;'r'
  5988  28C1  346F               	retlw	111	;'o'
  5989  28C2  3472               	retlw	114	;'r'
  5990  28C3  3421               	retlw	33	;'!'
  5991  28C4  340A               	retlw	10
  5992  28C5  3400               	retlw	0
  5993                           
  5994                           	psect	stringtext19
  5995  28C6                     __pstringtext19:	
  5996  28C6                     STR_54:	
  5997  28C6  3466               	retlw	102	;'f'
  5998  28C7  3469               	retlw	105	;'i'
  5999  28C8  3466               	retlw	102	;'f'
  6000  28C9  346F               	retlw	111	;'o'
  6001  28CA  3420               	retlw	32	;' '
  6002  28CB  346E               	retlw	110	;'n'
  6003  28CC  346F               	retlw	111	;'o'
  6004  28CD  3474               	retlw	116	;'t'
  6005  28CE  3420               	retlw	32	;' '
  6006  28CF  3472               	retlw	114	;'r'
  6007  28D0  3465               	retlw	101	;'e'
  6008  28D1  3461               	retlw	97	;'a'
  6009  28D2  3464               	retlw	100	;'d'
  6010  28D3  3479               	retlw	121	;'y'
  6011  28D4  3421               	retlw	33	;'!'
  6012  28D5  340A               	retlw	10
  6013  28D6  3400               	retlw	0
  6014                           
  6015                           	psect	stringtext20
  6016  28D7                     __pstringtext20:	
  6017  28D7                     STR_12:	
  6018  28D7  3472               	retlw	114	;'r'
  6019  28D8  3465               	retlw	101	;'e'
  6020  28D9  346C               	retlw	108	;'l'
  6021  28DA  343A               	retlw	58	;':'
  6022  28DB  3420               	retlw	32	;' '
  6023  28DC  3461               	retlw	97	;'a'
  6024  28DD  346C               	retlw	108	;'l'
  6025  28DE  346C               	retlw	108	;'l'
  6026  28DF  3420               	retlw	32	;' '
  6027  28E0  3474               	retlw	116	;'t'
  6028  28E1  3468               	retlw	104	;'h'
  6029  28E2  3465               	retlw	101	;'e'
  6030  28E3  3472               	retlw	114	;'r'
  6031  28E4  3465               	retlw	101	;'e'
  6032  28E5  340A               	retlw	10
  6033  28E6  3400               	retlw	0
  6034                           
  6035                           	psect	stringtext21
  6036  28E7                     __pstringtext21:	
  6037  28E7                     STR_10:	
  6038  28E7  3461               	retlw	97	;'a'
  6039  28E8  3462               	retlw	98	;'b'
  6040  28E9  3473               	retlw	115	;'s'
  6041  28EA  343A               	retlw	58	;':'
  6042  28EB  3420               	retlw	32	;' '
  6043  28EC  3461               	retlw	97	;'a'
  6044  28ED  346C               	retlw	108	;'l'
  6045  28EE  346C               	retlw	108	;'l'
  6046  28EF  3420               	retlw	32	;' '
  6047  28F0  3474               	retlw	116	;'t'
  6048  28F1  3468               	retlw	104	;'h'
  6049  28F2  3465               	retlw	101	;'e'
  6050  28F3  3472               	retlw	114	;'r'
  6051  28F4  3465               	retlw	101	;'e'
  6052  28F5  340A               	retlw	10
  6053  28F6  3400               	retlw	0
  6054                           
  6055                           	psect	stringtext22
  6056  28F7                     __pstringtext22:	
  6057  28F7                     STR_3:	
  6058  28F7  3472               	retlw	114	;'r'
  6059  28F8  3465               	retlw	101	;'e'
  6060  28F9  3461               	retlw	97	;'a'
  6061  28FA  3464               	retlw	100	;'d'
  6062  28FB  3420               	retlw	32	;' '
  6063  28FC  3464               	retlw	100	;'d'
  6064  28FD  3461               	retlw	97	;'a'
  6065  28FE  3474               	retlw	116	;'t'
  6066  28FF  3461               	retlw	97	;'a'
  6067  2900  343A               	retlw	58	;':'
  6068  2901  3420               	retlw	32	;' '
  6069  2902  3425               	retlw	37	;'%'
  6070  2903  346C               	retlw	108	;'l'
  6071  2904  3475               	retlw	117	;'u'
  6072  2905  340A               	retlw	10
  6073  2906  3400               	retlw	0
  6074                           
  6075                           	psect	stringtext23
  6076  2916                     __pstringtext23:	
  6077  2916                     STR_68:	
  6078  2916  3468               	retlw	104	;'h'
  6079  2917  3465               	retlw	101	;'e'
  6080  2918  3461               	retlw	97	;'a'
  6081  2919  3474               	retlw	116	;'t'
  6082  291A  3465               	retlw	101	;'e'
  6083  291B  3472               	retlw	114	;'r'
  6084  291C  3470               	retlw	112	;'p'
  6085  291D  346F               	retlw	111	;'o'
  6086  291E  3473               	retlw	115	;'s'
  6087  291F  3474               	retlw	116	;'t'
  6088  2920  3474               	retlw	116	;'t'
  6089  2921  3469               	retlw	105	;'i'
  6090  2922  346D               	retlw	109	;'m'
  6091  2923  3465               	retlw	101	;'e'
  6092  2924  3400               	retlw	0
  6093                           
  6094                           	psect	stringtext24
  6095  2925                     __pstringtext24:	
  6096  2925                     STR_4:	
  6097  2925  340A               	retlw	10
  6098  2926  340A               	retlw	10
  6099  2927  3473               	retlw	115	;'s'
  6100  2928  3479               	retlw	121	;'y'
  6101  2929  3473               	retlw	115	;'s'
  6102  292A  3474               	retlw	116	;'t'
  6103  292B  3465               	retlw	101	;'e'
  6104  292C  346D               	retlw	109	;'m'
  6105  292D  3420               	retlw	32	;' '
  6106  292E  3464               	retlw	100	;'d'
  6107  292F  346F               	retlw	111	;'o'
  6108  2930  346E               	retlw	110	;'n'
  6109  2931  3465               	retlw	101	;'e'
  6110  2932  340A               	retlw	10
  6111  2933  3400               	retlw	0
  6112                           
  6113                           	psect	stringtext25
  6114  2934                     __pstringtext25:	
  6115  2934                     STR_67:	
  6116  2934  3468               	retlw	104	;'h'
  6117  2935  3465               	retlw	101	;'e'
  6118  2936  3461               	retlw	97	;'a'
  6119  2937  3474               	retlw	116	;'t'
  6120  2938  3465               	retlw	101	;'e'
  6121  2939  3472               	retlw	114	;'r'
  6122  293A  3470               	retlw	112	;'p'
  6123  293B  3472               	retlw	114	;'r'
  6124  293C  3465               	retlw	101	;'e'
  6125  293D  3474               	retlw	116	;'t'
  6126  293E  3469               	retlw	105	;'i'
  6127  293F  346D               	retlw	109	;'m'
  6128  2940  3465               	retlw	101	;'e'
  6129  2941  3400               	retlw	0
  6130                           
  6131                           	psect	stringtext26
  6132  2942                     __pstringtext26:	
  6133  2942                     STR_50:	
  6134  2942  3464               	retlw	100	;'d'
  6135  2943  3472               	retlw	114	;'r'
  6136  2944  3476               	retlw	118	;'v'
  6137  2945  345F               	retlw	95	;'_'
  6138  2946  3472               	retlw	114	;'r'
  6139  2947  3465               	retlw	101	;'e'
  6140  2948  3461               	retlw	97	;'a'
  6141  2949  3464               	retlw	100	;'d'
  6142  294A  343A               	retlw	58	;':'
  6143  294B  3420               	retlw	32	;' '
  6144  294C  3425               	retlw	37	;'%'
  6145  294D  3464               	retlw	100	;'d'
  6146  294E  340A               	retlw	10
  6147  294F  3400               	retlw	0
  6148                           
  6149                           	psect	stringtext27
  6150  2950                     __pstringtext27:	
  6151  2950                     STR_71:	
  6152  2950  3474               	retlw	116	;'t'
  6153  2951  346F               	retlw	111	;'o'
  6154  2952  3467               	retlw	103	;'g'
  6155  2953  3467               	retlw	103	;'g'
  6156  2954  346C               	retlw	108	;'l'
  6157  2955  3465               	retlw	101	;'e'
  6158  2956  3468               	retlw	104	;'h'
  6159  2957  3465               	retlw	101	;'e'
  6160  2958  3461               	retlw	97	;'a'
  6161  2959  3474               	retlw	116	;'t'
  6162  295A  3465               	retlw	101	;'e'
  6163  295B  3472               	retlw	114	;'r'
  6164  295C  3400               	retlw	0
  6165                           
  6166                           	psect	stringtext28
  6167  295D                     __pstringtext28:	
  6168  295D                     STR_5:	
  6169  295D  3469               	retlw	105	;'i'
  6170  295E  346E               	retlw	110	;'n'
  6171  295F  3469               	retlw	105	;'i'
  6172  2960  3474               	retlw	116	;'t'
  6173  2961  3469               	retlw	105	;'i'
  6174  2962  3461               	retlw	97	;'a'
  6175  2963  346C               	retlw	108	;'l'
  6176  2964  3469               	retlw	105	;'i'
  6177  2965  347A               	retlw	122	;'z'
  6178  2966  3465               	retlw	101	;'e'
  6179  2967  3464               	retlw	100	;'d'
  6180  2968  340A               	retlw	10
  6181  2969  3400               	retlw	0
  6182                           
  6183                           	psect	stringtext29
  6184  2976                     __pstringtext29:	
  6185  2976                     STR_66:	
  6186  2976  3470               	retlw	112	;'p'
  6187  2977  3469               	retlw	105	;'i'
  6188  2978  3465               	retlw	101	;'e'
  6189  2979  347A               	retlw	122	;'z'
  6190  297A  346F               	retlw	111	;'o'
  6191  297B  346F               	retlw	111	;'o'
  6192  297C  346E               	retlw	110	;'n'
  6193  297D  3474               	retlw	116	;'t'
  6194  297E  3469               	retlw	105	;'i'
  6195  297F  346D               	retlw	109	;'m'
  6196  2980  3465               	retlw	101	;'e'
  6197  2981  3400               	retlw	0
  6198                           
  6199                           	psect	stringtext30
  6200  2982                     __pstringtext30:	
  6201  2982                     STR_11:	
  6202  2982  3464               	retlw	100	;'d'
  6203  2983  346F               	retlw	111	;'o'
  6204  2984  3452               	retlw	82	;'R'
  6205  2985  3465               	retlw	101	;'e'
  6206  2986  346C               	retlw	108	;'l'
  6207  2987  344D               	retlw	77	;'M'
  6208  2988  346F               	retlw	111	;'o'
  6209  2989  3476               	retlw	118	;'v'
  6210  298A  3465               	retlw	101	;'e'
  6211  298B  340A               	retlw	10
  6212  298C  3400               	retlw	0
  6213                           
  6214                           	psect	stringtext31
  6215  298D                     __pstringtext31:	
  6216  298D                     STR_40:	
  6217  298D  340A               	retlw	10
  6218  298E  340A               	retlw	10
  6219  298F  3473               	retlw	115	;'s'
  6220  2990  3468               	retlw	104	;'h'
  6221  2991  346F               	retlw	111	;'o'
  6222  2992  3472               	retlw	114	;'r'
  6223  2993  3474               	retlw	116	;'t'
  6224  2994  3473               	retlw	115	;'s'
  6225  2995  343A               	retlw	58	;':'
  6226  2996  3420               	retlw	32	;' '
  6227  2997  3400               	retlw	0
  6228                           
  6229                           	psect	stringtext32
  6230  2998                     __pstringtext32:	
  6231  2998                     STR_48:	
  6232  2998  3446               	retlw	70	;'F'
  6233  2999  3441               	retlw	65	;'A'
  6234  299A  3449               	retlw	73	;'I'
  6235  299B  344C               	retlw	76	;'L'
  6236  299C  3445               	retlw	69	;'E'
  6237  299D  3444               	retlw	68	;'D'
  6238  299E  340A               	retlw	10
  6239  299F  340A               	retlw	10
  6240  29A0  3400               	retlw	0
  6241                           
  6242                           	psect	stringtext33
  6243  29A1                     __pstringtext33:	
  6244  29A1                     STR_47:	
  6245  29A1  3470               	retlw	112	;'p'
  6246  29A2  3461               	retlw	97	;'a'
  6247  29A3  3473               	retlw	115	;'s'
  6248  29A4  3473               	retlw	115	;'s'
  6249  29A5  3465               	retlw	101	;'e'
  6250  29A6  3464               	retlw	100	;'d'
  6251  29A7  340A               	retlw	10
  6252  29A8  340A               	retlw	10
  6253  29A9  3400               	retlw	0
  6254                           
  6255                           	psect	stringtext34
  6256  29AA                     __pstringtext34:	
  6257  29AA                     STR_64:	
  6258  29AA  3464               	retlw	100	;'d'
  6259  29AB  3472               	retlw	114	;'r'
  6260  29AC  3476               	retlw	118	;'v'
  6261  29AD  3450               	retlw	80	;'P'
  6262  29AE  3465               	retlw	101	;'e'
  6263  29AF  3461               	retlw	97	;'a'
  6264  29B0  346B               	retlw	107	;'k'
  6265  29B1  3400               	retlw	0
  6266                           
  6267                           	psect	stringtext35
  6268  29B2                     __pstringtext35:	
  6269  29B2                     STR_65:	
  6270  29B2  3464               	retlw	100	;'d'
  6271  29B3  3472               	retlw	114	;'r'
  6272  29B4  3476               	retlw	118	;'v'
  6273  29B5  3447               	retlw	71	;'G'
  6274  29B6  3461               	retlw	97	;'a'
  6275  29B7  3469               	retlw	105	;'i'
  6276  29B8  346E               	retlw	110	;'n'
  6277  29B9  3400               	retlw	0
  6278                           
  6279                           	psect	stringtext36
  6280  29BA                     __pstringtext36:	
  6281  29BA                     STR_69:	
  6282  29BA  346C               	retlw	108	;'l'
  6283  29BB  3465               	retlw	101	;'e'
  6284  29BC  3464               	retlw	100	;'d'
  6285  29BD  3467               	retlw	103	;'g'
  6286  29BE  3461               	retlw	97	;'a'
  6287  29BF  3469               	retlw	105	;'i'
  6288  29C0  346E               	retlw	110	;'n'
  6289  29C1  3400               	retlw	0
  6290                           
  6291                           	psect	stringtext37
  6292  29C2                     __pstringtext37:	
  6293  29C2                     STR_74:	
  6294  29C2  346D               	retlw	109	;'m'
  6295  29C3  3473               	retlw	115	;'s'
  6296  29C4  3474               	retlw	116	;'t'
  6297  29C5  3461               	retlw	97	;'a'
  6298  29C6  3474               	retlw	116	;'t'
  6299  29C7  3475               	retlw	117	;'u'
  6300  29C8  3473               	retlw	115	;'s'
  6301  29C9  3400               	retlw	0
  6302                           
  6303                           	psect	stringtext38
  6304  29CA                     __pstringtext38:	
  6305  29CA                     STR_38:	
  6306  29CA  3446               	retlw	70	;'F'
  6307  29CB  3441               	retlw	65	;'A'
  6308  29CC  3449               	retlw	73	;'I'
  6309  29CD  344C               	retlw	76	;'L'
  6310  29CE  3445               	retlw	69	;'E'
  6311  29CF  3444               	retlw	68	;'D'
  6312  29D0  340A               	retlw	10
  6313  29D1  3400               	retlw	0
  6314                           
  6315                           	psect	stringtext39
  6316  29D2                     __pstringtext39:	
  6317  29D2                     STR_37:	
  6318  29D2  3470               	retlw	112	;'p'
  6319  29D3  3461               	retlw	97	;'a'
  6320  29D4  3473               	retlw	115	;'s'
  6321  29D5  3473               	retlw	115	;'s'
  6322  29D6  3465               	retlw	101	;'e'
  6323  29D7  3464               	retlw	100	;'d'
  6324  29D8  340A               	retlw	10
  6325  29D9  3400               	retlw	0
  6326                           
  6327                           	psect	stringtext40
  6328  29DA                     __pstringtext40:	
  6329  29DA                     STR_6:	
  6330  29DA  3464               	retlw	100	;'d'
  6331  29DB  346F               	retlw	111	;'o'
  6332  29DC  344D               	retlw	77	;'M'
  6333  29DD  346F               	retlw	111	;'o'
  6334  29DE  3476               	retlw	118	;'v'
  6335  29DF  3465               	retlw	101	;'e'
  6336  29E0  340A               	retlw	10
  6337  29E1  3400               	retlw	0
  6338                           
  6339                           	psect	stringtext41
  6340  29E2                     __pstringtext41:	
  6341  29E2                     STR_39:	
  6342  29E2  346F               	retlw	111	;'o'
  6343  29E3  3470               	retlw	112	;'p'
  6344  29E4  3465               	retlw	101	;'e'
  6345  29E5  346E               	retlw	110	;'n'
  6346  29E6  3473               	retlw	115	;'s'
  6347  29E7  343A               	retlw	58	;':'
  6348  29E8  3420               	retlw	32	;' '
  6349  29E9  3400               	retlw	0
  6350                           
  6351                           	psect	stringtext42
  6352  29EA                     __pstringtext42:	
  6353  29EA                     STR_70:	
  6354  29EA  346C               	retlw	108	;'l'
  6355  29EB  3465               	retlw	101	;'e'
  6356  29EC  3464               	retlw	100	;'d'
  6357  29ED  3470               	retlw	112	;'p'
  6358  29EE  3477               	retlw	119	;'w'
  6359  29EF  3472               	retlw	114	;'r'
  6360  29F0  3400               	retlw	0
  6361                           
  6362                           	psect	stringtext43
  6363  29F1                     __pstringtext43:	
  6364  29F1                     STR_72:	
  6365  29F1  3467               	retlw	103	;'g'
  6366  29F2  3465               	retlw	101	;'e'
  6367  29F3  3474               	retlw	116	;'t'
  6368  29F4  3441               	retlw	65	;'A'
  6369  29F5  3400               	retlw	0
  6370                           
  6371                           	psect	stringtext44
  6372  29F6                     __pstringtext44:	
  6373  29F6                     STR_61:	
  6374  29F6  3473               	retlw	115	;'s'
  6375  29F7  3465               	retlw	101	;'e'
  6376  29F8  3474               	retlw	116	;'t'
  6377  29F9  3441               	retlw	65	;'A'
  6378  29FA  3400               	retlw	0
  6379                           
  6380                           	psect	stringtext45
  6381  29FB                     __pstringtext45:	
  6382  29FB                     STR_73:	
  6383  29FB  3467               	retlw	103	;'g'
  6384  29FC  3465               	retlw	101	;'e'
  6385  29FD  3474               	retlw	116	;'t'
  6386  29FE  344D               	retlw	77	;'M'
  6387  29FF  3400               	retlw	0
  6388                           
  6389                           	psect	stringtext46
  6390  2A00                     __pstringtext46:	
  6391  2A00                     STR_62:	
  6392  2A00  3473               	retlw	115	;'s'
  6393  2A01  3465               	retlw	101	;'e'
  6394  2A02  3474               	retlw	116	;'t'
  6395  2A03  344D               	retlw	77	;'M'
  6396  2A04  3400               	retlw	0
  6397                           
  6398                           	psect	stringtext47
  6399  2A05                     __pstringtext47:	
  6400  2A05                     STR_76:	
  6401  2A05  3470               	retlw	112	;'p'
  6402  2A06  3469               	retlw	105	;'i'
  6403  2A07  346E               	retlw	110	;'n'
  6404  2A08  3467               	retlw	103	;'g'
  6405  2A09  3400               	retlw	0
  6406                           
  6407                           	psect	stringtext48
  6408  2A0A                     __pstringtext48:	
  6409  2A0A                     STR_75:	
  6410  2A0A  3463               	retlw	99	;'c'
  6411  2A0B  346F               	retlw	111	;'o'
  6412  2A0C  346D               	retlw	109	;'m'
  6413  2A0D  346D               	retlw	109	;'m'
  6414  2A0E  3400               	retlw	0
  6415                           
  6416                           	psect	stringtext49
  6417  2A0F                     __pstringtext49:	
  6418  2A0F                     STR_57:	
  6419  2A0F  3472               	retlw	114	;'r'
  6420  2A10  3465               	retlw	101	;'e'
  6421  2A11  346C               	retlw	108	;'l'
  6422  2A12  3400               	retlw	0
  6423                           
  6424                           	psect	stringtext50
  6425  2A13                     __pstringtext50:	
  6426  2A13                     STR_58:	
  6427  2A13  3461               	retlw	97	;'a'
  6428  2A14  3462               	retlw	98	;'b'
  6429  2A15  3473               	retlw	115	;'s'
  6430  2A16  3400               	retlw	0
  6431                           
  6432                           	psect	stringtext51
  6433  2A17                     __pstringtext51:	
  6434  2A17                     STR_59:	
  6435  2A17  3470               	retlw	112	;'p'
  6436  2A18  346F               	retlw	111	;'o'
  6437  2A19  3473               	retlw	115	;'s'
  6438  2A1A  3400               	retlw	0
  6439                           
  6440                           	psect	stringtext52
  6441  2A1B                     __pstringtext52:	
  6442  2A1B                     STR_1:	
  6443  2A1B  3425               	retlw	37	;'%'
  6444  2A1C  3464               	retlw	100	;'d'
  6445  2A1D  3420               	retlw	32	;' '
  6446  2A1E  3400               	retlw	0
  6447                           
  6448                           	psect	stringtext53
  6449  2A25                     __pstringtext53:	
  6450  2A25                     STR_7:	
  6451  2A25  3441               	retlw	65	;'A'
  6452  2A26  340A               	retlw	10
  6453  2A27  3400               	retlw	0
  6454                           
  6455                           	psect	stringtext54
  6456  2A28                     __pstringtext54:	
  6457  2A28                     STR_16:	
  6458  2A28  3445               	retlw	69	;'E'
  6459  2A29  340A               	retlw	10
  6460  2A2A  3400               	retlw	0
  6461                           
  6462                           	psect	stringtext55
  6463  2A2D                     __pstringtext55:	
  6464  2A2D                     STR_63:	
  6465  2A2D  347A               	retlw	122	;'z'
  6466  2A2E  3400               	retlw	0
  6467                           
  6468                           	psect	stringtext56
  6469  2A2F                     __pstringtext56:	
  6470  2A2F                     STR_34:	
  6471  2A2F  344E               	retlw	78	;'N'
  6472  2A30  3400               	retlw	0
  6473                           
  6474                           	psect	stringtext57
  6475  2A31                     __pstringtext57:	
  6476  2A31                     STR_32:	
  6477  2A31  3452               	retlw	82	;'R'
  6478  2A32  3400               	retlw	0
  6479                           
  6480                           	psect	stringtext58
  6481  0000                     __pstringtext58:	
  6482  283B                     
  6483                           ; #config settings
  6484  0000                     
  6485                           	psect	cinit
  6486  0051                     start_initialization:	
  6487  0051                     __initialization:	
  6488                           
  6489                           ; Initialize objects allocated to BANK0
  6490  0051  3021               	movlw	low __pidataBANK0
  6491  0052  0084               	movwf	4
  6492  0053  30A5               	movlw	(high __pidataBANK0)| (0+128)
  6493  0054  0085               	movwf	5
  6494  0055  3058               	movlw	low __pdataBANK0
  6495  0056  0086               	movwf	6
  6496  0057  3000               	movlw	high __pdataBANK0
  6497  0058  0087               	movwf	7
  6498  0059  3006               	movlw	6
  6499  005A  31A5  2515  3180   	fcall	init_ram
  6500                           
  6501                           ; Initialize objects allocated to BANK1
  6502  005D  301B               	movlw	low __pidataBANK1
  6503  005E  0084               	movwf	4
  6504  005F  30A5               	movlw	(high __pidataBANK1)| (0+128)
  6505  0060  0085               	movwf	5
  6506  0061  30EA               	movlw	low __pdataBANK1
  6507  0062  0086               	movwf	6
  6508  0063  3000               	movlw	high __pdataBANK1
  6509  0064  0087               	movwf	7
  6510  0065  3006               	movlw	6
  6511  0066  31A5  2515  3180   	fcall	init_ram
  6512                           
  6513                           ; Initialize objects allocated to BANK4
  6514  0069  303F               	movlw	low __pidataBANK4
  6515  006A  0084               	movwf	4
  6516  006B  3098               	movlw	(high __pidataBANK4)| (0+128)
  6517  006C  0085               	movwf	5
  6518  006D  3020               	movlw	low __pdataBANK4
  6519  006E  0086               	movwf	6
  6520  006F  3002               	movlw	high __pdataBANK4
  6521  0070  0087               	movwf	7
  6522  0071  3020               	movlw	32
  6523  0072  31A5  2515  3180   	fcall	init_ram
  6524                           
  6525                           ; Clear objects allocated to COMMON
  6526  0075  01FD               	clrf	__pbssCOMMON& (0+127)
  6527                           
  6528                           ; Clear objects allocated to BANK0
  6529  0076  304E               	movlw	low __pbssBANK0
  6530  0077  0084               	movwf	4
  6531  0078  3000               	movlw	high __pbssBANK0
  6532  0079  0085               	movwf	5
  6533  007A  300A               	movlw	10
  6534  007B  31A5  250F  3180   	fcall	clear_ram0
  6535                           
  6536                           ; Clear objects allocated to BANK1
  6537  007E  30D4               	movlw	low __pbssBANK1
  6538  007F  0084               	movwf	4
  6539  0080  3000               	movlw	high __pbssBANK1
  6540  0081  0085               	movwf	5
  6541  0082  3016               	movlw	22
  6542  0083  31A5  250F  3180   	fcall	clear_ram0
  6543                           
  6544                           ; Clear objects allocated to BANK2
  6545  0086  3020               	movlw	low __pbssBANK2
  6546  0087  0084               	movwf	4
  6547  0088  3001               	movlw	high __pbssBANK2
  6548  0089  0085               	movwf	5
  6549  008A  304C               	movlw	76
  6550  008B  31A5  250F  3180   	fcall	clear_ram0
  6551                           
  6552                           ; Clear objects allocated to BANK3
  6553  008E  30A0               	movlw	low __pbssBANK3
  6554  008F  0084               	movwf	4
  6555  0090  3001               	movlw	high __pbssBANK3
  6556  0091  0085               	movwf	5
  6557  0092  304C               	movlw	76
  6558  0093  31A5  250F  3180   	fcall	clear_ram0
  6559                           
  6560                           ; Clear objects allocated to BANK4
  6561  0096  3058               	movlw	low __pbssBANK4
  6562  0097  0084               	movwf	4
  6563  0098  3002               	movlw	high __pbssBANK4
  6564  0099  0085               	movwf	5
  6565  009A  3015               	movlw	21
  6566  009B  31A5  250F         	fcall	clear_ram0
  6567  009D                     end_of_initialization:	
  6568                           ;End of C runtime variable initialization code
  6569                           
  6570  009D                     __end_of__initialization:	
  6571  009D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6572  009E  0020               	movlb	0
  6573  009F  3197  2F20         	ljmp	_main	;jump to C main() function
  6574                           
  6575                           	psect	bssCOMMON
  6576  007D                     __pbssCOMMON:	
  6577  007D                     _eusartTxHead:	
  6578  007D                     	ds	1
  6579                           
  6580                           	psect	bssBANK0
  6581  004E                     __pbssBANK0:	
  6582  004E                     _readIdx:	
  6583  004E                     	ds	2
  6584  0050                     _i2c1_driver_busCollisionISR:	
  6585  0050                     	ds	2
  6586  0052                     strtok@sp:	
  6587  0052                     	ds	1
  6588  0053                     _motionType:	
  6589  0053                     	ds	1
  6590  0054                     _eusartRxCount:	
  6591  0054                     	ds	1
  6592  0055                     _eusartRxTail:	
  6593  0055                     	ds	1
  6594  0056                     _eusartRxHead:	
  6595  0056                     	ds	1
  6596  0057                     _eusartTxTail:	
  6597  0057                     	ds	1
  6598                           
  6599                           	psect	dataBANK0
  6600  0058                     __pdataBANK0:	
  6601  0058                     _piezo_on_time_ms:	
  6602  0058                     	ds	2
  6603  005A                     _heater_post_time_ms:	
  6604  005A                     	ds	2
  6605  005C                     _heater_pre_time_ms:	
  6606  005C                     	ds	2
  6607                           
  6608                           	psect	bssBANK1
  6609  00D4                     __pbssBANK1:	
  6610  00D4                     _moveMask:	
  6611  00D4                     	ds	4
  6612  00D8                     _activeMask:	
  6613  00D8                     	ds	4
  6614  00DC                     _moveVector_downs:	
  6615  00DC                     	ds	4
  6616  00E0                     _moveVector_ups:	
  6617  00E0                     	ds	4
  6618  00E4                     _absCommand:	
  6619  00E4                     	ds	2
  6620  00E6                     _remainingSteps:	
  6621  00E6                     	ds	2
  6622  00E8                     _i2c1_driver_i2cISR:	
  6623  00E8                     	ds	2
  6624                           
  6625                           	psect	dataBANK1
  6626  00EA                     __pdataBANK1:	
  6627  00EA                     _demoLong:	
  6628  00EA                     	ds	4
  6629  00EE                     _drv_peak_val:	
  6630  00EE                     	ds	2
  6631                           
  6632                           	psect	bssBANK2
  6633  0120                     __pbssBANK2:	
  6634  0120                     _i2c_status:	
  6635  0120                     	ds	30
  6636  013E                     _eusartTxBuffer:	
  6637  013E                     	ds	8
  6638  0146                     _demoHeaterToggle_bot:	
  6639  0146                     	ds	4
  6640  014A                     _demoHeaterToggle_top:	
  6641  014A                     	ds	4
  6642  014E                     _LED_configReg_bot:	
  6643  014E                     	ds	4
  6644  0152                     _LED_configReg_top:	
  6645  0152                     	ds	4
  6646  0156                     _second_bottom:	
  6647  0156                     	ds	4
  6648  015A                     _first_top:	
  6649  015A                     	ds	4
  6650  015E                     _first_bottom:	
  6651  015E                     	ds	4
  6652  0162                     _second_top:	
  6653  0162                     	ds	4
  6654  0166                     _errno:	
  6655  0166                     	ds	2
  6656  0168                     _cmdRead:	
  6657  0168                     	ds	2
  6658  016A                     _errorOut:	
  6659  016A                     	ds	2
  6660                           
  6661                           	psect	bssBANK3
  6662  01A0                     __pbssBANK3:	
  6663  01A0                     _currentPositions_steps:	
  6664  01A0                     	ds	48
  6665  01D0                     _eusartRxBuffer:	
  6666  01D0                     	ds	8
  6667  01D8                     _readdata:	
  6668  01D8                     	ds	20
  6669                           
  6670                           	psect	bssBANK4
  6671  0258                     __pbssBANK4:	
  6672  0258                     _cmd_struct:	
  6673  0258                     	ds	21
  6674                           
  6675                           	psect	dataBANK4
  6676  0220                     __pdataBANK4:	
  6677  0220                     _fsmStateTable:	
  6678  0220                     	ds	32
  6679                           
  6680                           	psect	inittext
  6681  2515                     init_ram:	
  6682  2515  00FE               	movwf	126
  6683  2516                     initloop:	
  6684  2516  0012               	moviw fsr0++
  6685  2517  001E               	movwi fsr1++
  6686  2518  0BFE               	decfsz	126,f
  6687  2519  2D16               	goto	initloop
  6688  251A  3400               	retlw	0
  6689                           
  6690                           	psect	clrtext
  6691  250F                     clear_ram0:	
  6692                           ;	Called with FSR0 containing the base address, and
  6693                           ;	WREG with the size to clear
  6694                           
  6695  250F  0064               	clrwdt	;clear the watchdog before getting into this loop
  6696  2510                     clrloop0:	
  6697  2510  0180               	clrf	0	;clear RAM location pointed to by FSR
  6698  2511  3101               	addfsr 0,1
  6699  2512  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6700  2513  2D10               	goto	clrloop0	;have we reached the end yet?
  6701  2514  3400               	retlw	0	;all done for this memory range, return
  6702                           
  6703                           	psect	cstackBANK4
  6704  0240                     __pcstackBANK4:	
  6705  0240                     ??_doAbsMove:	
  6706                           
  6707                           ; 1 bytes @ 0x0
  6708  0240                     	ds	24
  6709                           
  6710                           	psect	cstackBANK3
  6711  01EC                     __pcstackBANK3:	
  6712  01EC                     ??_commCheck:	
  6713                           
  6714                           ; 1 bytes @ 0x0
  6715  01EC                     	ds	1
  6716  01ED                     execCmd@s:	
  6717                           
  6718                           ; 1 bytes @ 0x1
  6719  01ED                     	ds	1
  6720  01EE                     ??_main:	
  6721                           
  6722                           ; 1 bytes @ 0x2
  6723  01EE                     	ds	1
  6724                           
  6725                           	psect	cstackBANK1
  6726  00A0                     __pcstackBANK1:	
  6727  00A0                     ??_LED_setBrightnessRange:	
  6728  00A0                     ?_printf:	
  6729                           ; 1 bytes @ 0x0
  6730                           
  6731  00A0                     ___ftmul@exp:	
  6732                           ; 2 bytes @ 0x0
  6733                           
  6734  00A0                     printf@f:	
  6735                           ; 1 bytes @ 0x0
  6736                           
  6737  00A0                     LEDsPwr@pwrAll:	
  6738                           ; 2 bytes @ 0x0
  6739                           
  6740                           
  6741                           ; 4 bytes @ 0x0
  6742  00A0                     	ds	1
  6743  00A1                     ___ftmul@f3_as_product:	
  6744                           
  6745                           ; 3 bytes @ 0x1
  6746  00A1                     	ds	3
  6747  00A4                     ___ftmul@cntr:	
  6748                           
  6749                           ; 1 bytes @ 0x4
  6750  00A4                     	ds	1
  6751  00A5                     ___ftmul@sign:	
  6752                           
  6753                           ; 1 bytes @ 0x5
  6754  00A5                     	ds	1
  6755  00A6                     ??_printf:	
  6756  00A6                     ?___ftadd:	
  6757                           ; 1 bytes @ 0x6
  6758                           
  6759  00A6                     ___ftadd@f1:	
  6760                           ; 3 bytes @ 0x6
  6761                           
  6762                           
  6763                           ; 3 bytes @ 0x6
  6764  00A6                     	ds	3
  6765  00A9                     ___ftadd@f2:	
  6766                           
  6767                           ; 3 bytes @ 0x9
  6768  00A9                     	ds	3
  6769  00AC                     ___ftadd@sign:	
  6770  00AC                     printf@prec:	
  6771                           ; 1 bytes @ 0xC
  6772                           
  6773                           
  6774                           ; 2 bytes @ 0xC
  6775  00AC                     	ds	1
  6776  00AD                     ___ftadd@exp2:	
  6777                           
  6778                           ; 1 bytes @ 0xD
  6779  00AD                     	ds	1
  6780  00AE                     ___ftadd@exp1:	
  6781  00AE                     printf@val:	
  6782                           ; 1 bytes @ 0xE
  6783                           
  6784                           
  6785                           ; 4 bytes @ 0xE
  6786  00AE                     	ds	1
  6787  00AF                     ?___fttol:	
  6788  00AF                     ___fttol@f1:	
  6789                           ; 4 bytes @ 0xF
  6790                           
  6791                           
  6792                           ; 3 bytes @ 0xF
  6793  00AF                     	ds	3
  6794  00B2                     printf@flag:	
  6795                           
  6796                           ; 1 bytes @ 0x12
  6797  00B2                     	ds	1
  6798  00B3                     ??___fttol:	
  6799  00B3                     printf@ap:	
  6800                           ; 1 bytes @ 0x13
  6801                           
  6802                           
  6803                           ; 1 bytes @ 0x13
  6804  00B3                     	ds	1
  6805  00B4                     printf@c:	
  6806                           
  6807                           ; 1 bytes @ 0x14
  6808  00B4                     	ds	1
  6809  00B5                     ?_LED_test_openshort:	
  6810  00B5                     ?_drv_read:	
  6811                           ; 1 bytes @ 0x15
  6812                           
  6813  00B5                     ?_startRelMove:	
  6814                           ; 2 bytes @ 0x15
  6815                           
  6816  00B5                     ?_startAbsMove:	
  6817                           ; 2 bytes @ 0x15
  6818                           
  6819  00B5                     ?_zeroPosition:	
  6820                           ; 2 bytes @ 0x15
  6821                           
  6822  00B5                     ?_getPosition:	
  6823                           ; 2 bytes @ 0x15
  6824                           
  6825  00B5                     ?_setDrvPeak:	
  6826                           ; 2 bytes @ 0x15
  6827                           
  6828  00B5                     ?_setDrvGain:	
  6829                           ; 2 bytes @ 0x15
  6830                           
  6831  00B5                     ?_setLEDBrightnessRange:	
  6832                           ; 2 bytes @ 0x15
  6833                           
  6834  00B5                     ?_setLEDPwr:	
  6835                           ; 2 bytes @ 0x15
  6836                           
  6837  00B5                     ?_setHeaterToggle:	
  6838                           ; 2 bytes @ 0x15
  6839                           
  6840  00B5                     ?_setActive:	
  6841                           ; 2 bytes @ 0x15
  6842                           
  6843  00B5                     ?_setMoveMask:	
  6844                           ; 2 bytes @ 0x15
  6845                           
  6846  00B5                     ?_getActive:	
  6847                           ; 2 bytes @ 0x15
  6848                           
  6849  00B5                     ?_getMoveMask:	
  6850                           ; 2 bytes @ 0x15
  6851                           
  6852  00B5                     ?_getMotionStatus:	
  6853                           ; 2 bytes @ 0x15
  6854                           
  6855  00B5                     ?_LED_getData:	
  6856                           ; 2 bytes @ 0x15
  6857                           
  6858  00B5                     LED_test_openshort@type:	
  6859                           ; 4 bytes @ 0x15
  6860                           
  6861  00B5                     startRelMove@steps:	
  6862                           ; 2 bytes @ 0x15
  6863                           
  6864  00B5                     startAbsMove@steps:	
  6865                           ; 2 bytes @ 0x15
  6866                           
  6867  00B5                     getPosition@a:	
  6868                           ; 2 bytes @ 0x15
  6869                           
  6870  00B5                     setDrvPeak@pk:	
  6871                           ; 2 bytes @ 0x15
  6872                           
  6873  00B5                     setDrvGain@gain:	
  6874                           ; 2 bytes @ 0x15
  6875                           
  6876  00B5                     setLEDBrightnessRange@r:	
  6877                           ; 2 bytes @ 0x15
  6878                           
  6879  00B5                     setLEDPwr@pwr:	
  6880                           ; 2 bytes @ 0x15
  6881                           
  6882  00B5                     setHeaterToggle@num:	
  6883                           ; 2 bytes @ 0x15
  6884                           
  6885  00B5                     setActive@probeNum:	
  6886                           ; 2 bytes @ 0x15
  6887                           
  6888  00B5                     setMoveMask@probeNum:	
  6889                           ; 2 bytes @ 0x15
  6890                           
  6891                           
  6892                           ; 2 bytes @ 0x15
  6893  00B5                     	ds	2
  6894  00B7                     ??_zeroPosition:	
  6895  00B7                     ??_setDrvGain:	
  6896                           ; 1 bytes @ 0x17
  6897                           
  6898  00B7                     fifo_check@reply:	
  6899                           ; 1 bytes @ 0x17
  6900                           
  6901  00B7                     ___fttol@sign1:	
  6902                           ; 1 bytes @ 0x17
  6903                           
  6904  00B7                     LED_test_openshort@topOrBottom:	
  6905                           ; 1 bytes @ 0x17
  6906                           
  6907  00B7                     setLEDBrightnessRange@tOB:	
  6908                           ; 2 bytes @ 0x17
  6909                           
  6910  00B7                     setLEDPwr@topOrBottom:	
  6911                           ; 2 bytes @ 0x17
  6912                           
  6913  00B7                     setHeaterToggle@topOrB:	
  6914                           ; 2 bytes @ 0x17
  6915                           
  6916  00B7                     setActive@onOff:	
  6917                           ; 2 bytes @ 0x17
  6918                           
  6919  00B7                     setMoveMask@onOff:	
  6920                           ; 2 bytes @ 0x17
  6921                           
  6922  00B7                     getActive@i:	
  6923                           ; 2 bytes @ 0x17
  6924                           
  6925  00B7                     getMoveMask@i:	
  6926                           ; 2 bytes @ 0x17
  6927                           
  6928                           
  6929                           ; 2 bytes @ 0x17
  6930  00B7                     	ds	1
  6931  00B8                     ?_drv_write_DC:	
  6932  00B8                     setDrvGain@setGain:	
  6933                           ; 1 bytes @ 0x18
  6934                           
  6935  00B8                     drv_write_DC@val:	
  6936                           ; 2 bytes @ 0x18
  6937                           
  6938  00B8                     ___fttol@lval:	
  6939                           ; 2 bytes @ 0x18
  6940                           
  6941                           
  6942                           ; 4 bytes @ 0x18
  6943  00B8                     	ds	1
  6944  00B9                     ??_LED_getData:	
  6945  00B9                     ??_LED_test_openshort:	
  6946                           ; 1 bytes @ 0x19
  6947                           
  6948  00B9                     ??_setHeaterToggle:	
  6949                           ; 1 bytes @ 0x19
  6950                           
  6951  00B9                     ??_setActive:	
  6952                           ; 1 bytes @ 0x19
  6953                           
  6954  00B9                     ??_setMoveMask:	
  6955                           ; 1 bytes @ 0x19
  6956                           
  6957                           
  6958                           ; 1 bytes @ 0x19
  6959  00B9                     	ds	1
  6960  00BA                     drv_write_DC@duration_ms:	
  6961  00BA                     LED_test_openshort@readData:	
  6962                           ; 2 bytes @ 0x1A
  6963                           
  6964                           
  6965                           ; 4 bytes @ 0x1A
  6966  00BA                     	ds	2
  6967  00BC                     ??_drv_write_DC:	
  6968  00BC                     ___fttol@exp1:	
  6969                           ; 1 bytes @ 0x1C
  6970                           
  6971                           
  6972                           ; 1 bytes @ 0x1C
  6973  00BC                     	ds	1
  6974  00BD                     ??_initialize:	
  6975  00BD                     ?_setDrvPiezoOnTime:	
  6976                           ; 1 bytes @ 0x1D
  6977                           
  6978  00BD                     ?_setHeaterPreTime:	
  6979                           ; 2 bytes @ 0x1D
  6980                           
  6981  00BD                     ?_setHeaterPostTime:	
  6982                           ; 2 bytes @ 0x1D
  6983                           
  6984  00BD                     setDrvPiezoOnTime@t:	
  6985                           ; 2 bytes @ 0x1D
  6986                           
  6987  00BD                     setHeaterPreTime@t:	
  6988                           ; 2 bytes @ 0x1D
  6989                           
  6990  00BD                     setHeaterPostTime@t:	
  6991                           ; 2 bytes @ 0x1D
  6992                           
  6993  00BD                     drv_write_DC@i:	
  6994                           ; 2 bytes @ 0x1D
  6995                           
  6996                           
  6997                           ; 2 bytes @ 0x1D
  6998  00BD                     	ds	1
  6999  00BE                     LED_test_openshort@j:	
  7000                           
  7001                           ; 2 bytes @ 0x1E
  7002  00BE                     	ds	1
  7003  00BF                     ??_doMove:	
  7004  00BF                     ??_setDrvPiezoOnTime:	
  7005                           ; 1 bytes @ 0x1F
  7006                           
  7007  00BF                     ??_setHeaterPreTime:	
  7008                           ; 1 bytes @ 0x1F
  7009                           
  7010                           
  7011                           ; 1 bytes @ 0x1F
  7012  00BF                     	ds	1
  7013  00C0                     LED_getData@readData:	
  7014                           
  7015                           ; 4 bytes @ 0x20
  7016  00C0                     	ds	3
  7017  00C3                     ??_doRelMove:	
  7018  00C3                     doAbsMove@allThere:	
  7019                           ; 1 bytes @ 0x23
  7020                           
  7021                           
  7022                           ; 2 bytes @ 0x23
  7023  00C3                     	ds	1
  7024  00C4                     LED_getData@j:	
  7025                           
  7026                           ; 2 bytes @ 0x24
  7027  00C4                     	ds	1
  7028  00C5                     doAbsMove@i:	
  7029                           
  7030                           ; 2 bytes @ 0x25
  7031  00C5                     	ds	1
  7032  00C6                     ?_LED_readConfig:	
  7033  00C6                     LED_readConfig@topOrBottom:	
  7034                           ; 4 bytes @ 0x26
  7035                           
  7036                           
  7037                           ; 2 bytes @ 0x26
  7038  00C6                     	ds	1
  7039  00C7                     doAbsMove@i_1548:	
  7040                           
  7041                           ; 2 bytes @ 0x27
  7042  00C7                     	ds	2
  7043  00C9                     doAbsMove@i_1546:	
  7044                           
  7045                           ; 2 bytes @ 0x29
  7046  00C9                     	ds	1
  7047  00CA                     ?_LED_testComm:	
  7048  00CA                     LED_testComm@topOrBottom:	
  7049                           ; 2 bytes @ 0x2A
  7050                           
  7051  00CA                     doRelMove@j:	
  7052                           ; 2 bytes @ 0x2A
  7053                           
  7054                           
  7055                           ; 2 bytes @ 0x2A
  7056  00CA                     	ds	2
  7057  00CC                     LED_testComm@readResult:	
  7058                           
  7059                           ; 2 bytes @ 0x2C
  7060  00CC                     	ds	2
  7061  00CE                     LED_testComm@oldConfigReg:	
  7062                           
  7063                           ; 4 bytes @ 0x2E
  7064  00CE                     	ds	4
  7065  00D2                     ?_commCheck:	
  7066                           
  7067                           ; 2 bytes @ 0x32
  7068  00D2                     	ds	2
  7069                           
  7070                           	psect	cstackCOMMON
  7071  0070                     __pcstackCOMMON:	
  7072  0070                     ?_fifo_check:	
  7073  0070                     ?_isdigit:	
  7074                           ; 1 bit 
  7075                           
  7076  0070                     ?_mssp1_IRQisEnabled:	
  7077                           ; 1 bit 
  7078                           
  7079  0070                     ?_i2c1_driver_isNACK:	
  7080                           ; 1 bit 
  7081                           
  7082  0070                     ?i1_i2c1_driver_isNACK:	
  7083                           ; 1 bit 
  7084                           
  7085  0070                     ?_PMD_Initialize:	
  7086                           ; 1 bit 
  7087                           
  7088  0070                     ?_PIN_MANAGER_Initialize:	
  7089                           ; 1 bytes @ 0x0
  7090                           
  7091  0070                     ?_OSCILLATOR_Initialize:	
  7092                           ; 1 bytes @ 0x0
  7093                           
  7094  0070                     ?_WDT_Initialize:	
  7095                           ; 1 bytes @ 0x0
  7096                           
  7097  0070                     ?_TMR2_Initialize:	
  7098                           ; 1 bytes @ 0x0
  7099                           
  7100  0070                     ?_TMR0_Initialize:	
  7101                           ; 1 bytes @ 0x0
  7102                           
  7103  0070                     ?_EUSART_Initialize:	
  7104                           ; 1 bytes @ 0x0
  7105                           
  7106  0070                     ?_TMR0_ISR:	
  7107                           ; 1 bytes @ 0x0
  7108                           
  7109  0070                     ?_TMR2_ISR:	
  7110                           ; 1 bytes @ 0x0
  7111                           
  7112  0070                     ?_EUSART_Receive_ISR:	
  7113                           ; 1 bytes @ 0x0
  7114                           
  7115  0070                     ??_EUSART_Receive_ISR:	
  7116                           ; 1 bytes @ 0x0
  7117                           
  7118  0070                     ?_EUSART_Transmit_ISR:	
  7119                           ; 1 bytes @ 0x0
  7120                           
  7121  0070                     ??_EUSART_Transmit_ISR:	
  7122                           ; 1 bytes @ 0x0
  7123                           
  7124  0070                     ?_i2c_busCollisionISR:	
  7125                           ; 1 bytes @ 0x0
  7126                           
  7127  0070                     ??_i2c_busCollisionISR:	
  7128                           ; 1 bytes @ 0x0
  7129                           
  7130  0070                     ?_i2c_ISR:	
  7131                           ; 1 bytes @ 0x0
  7132                           
  7133  0070                     ?_i2c_poller:	
  7134                           ; 1 bytes @ 0x0
  7135                           
  7136  0070                     ?_TMR0_DefaultInterruptHandler:	
  7137                           ; 1 bytes @ 0x0
  7138                           
  7139  0070                     ?_TMR2_DefaultInterruptHandler:	
  7140                           ; 1 bytes @ 0x0
  7141                           
  7142  0070                     ?_initialize:	
  7143                           ; 1 bytes @ 0x0
  7144                           
  7145  0070                     ?_doRelMove:	
  7146                           ; 1 bytes @ 0x0
  7147                           
  7148  0070                     ?_doAbsMove:	
  7149                           ; 1 bytes @ 0x0
  7150                           
  7151  0070                     ?_calcHeaterPins:	
  7152                           ; 1 bytes @ 0x0
  7153                           
  7154  0070                     ?_toupper:	
  7155                           ; 1 bytes @ 0x0
  7156                           
  7157  0070                     ?_SYSTEM_Initialize:	
  7158                           ; 1 bytes @ 0x0
  7159                           
  7160  0070                     ?_INTERRUPT_InterruptManager:	
  7161                           ; 1 bytes @ 0x0
  7162                           
  7163  0070                     ?_EUSART_Read:	
  7164                           ; 1 bytes @ 0x0
  7165                           
  7166  0070                     ?_EUSART_Write:	
  7167                           ; 1 bytes @ 0x0
  7168                           
  7169  0070                     ?_putch:	
  7170                           ; 1 bytes @ 0x0
  7171                           
  7172  0070                     ?_mssp1_clearIRQ:	
  7173                           ; 1 bytes @ 0x0
  7174                           
  7175  0070                     ?_mssp1_setIRQ:	
  7176                           ; 1 bytes @ 0x0
  7177                           
  7178  0070                     ?_mssp1_waitForEvent:	
  7179                           ; 1 bytes @ 0x0
  7180                           
  7181  0070                     ?_i2c1_driver_resetBus:	
  7182                           ; 1 bytes @ 0x0
  7183                           
  7184  0070                     ?_i2c1_driver_start:	
  7185                           ; 1 bytes @ 0x0
  7186                           
  7187  0070                     ?_i2c1_driver_restart:	
  7188                           ; 1 bytes @ 0x0
  7189                           
  7190  0070                     ?_i2c1_driver_stop:	
  7191                           ; 1 bytes @ 0x0
  7192                           
  7193  0070                     ?_i2c1_driver_startRX:	
  7194                           ; 1 bytes @ 0x0
  7195                           
  7196  0070                     ?_i2c1_driver_getRXData:	
  7197                           ; 1 bytes @ 0x0
  7198                           
  7199  0070                     ?_i2c1_driver_TXData:	
  7200                           ; 1 bytes @ 0x0
  7201                           
  7202  0070                     ?_i2c1_driver_sendACK:	
  7203                           ; 1 bytes @ 0x0
  7204                           
  7205  0070                     ?_i2c1_driver_sendNACK:	
  7206                           ; 1 bytes @ 0x0
  7207                           
  7208  0070                     ?_i2c1_driver_clearBusCollision:	
  7209                           ; 1 bytes @ 0x0
  7210                           
  7211  0070                     ??_i2c1_driver_clearBusCollision:	
  7212                           ; 1 bytes @ 0x0
  7213                           
  7214  0070                     ?_i2c_masterOperation:	
  7215                           ; 1 bytes @ 0x0
  7216                           
  7217  0070                     ?_do_I2C_RESET:	
  7218                           ; 1 bytes @ 0x0
  7219                           
  7220  0070                     ?_do_I2C_IDLE:	
  7221                           ; 1 bytes @ 0x0
  7222                           
  7223  0070                     ?_do_I2C_SEND_RESTART_READ:	
  7224                           ; 1 bytes @ 0x0
  7225                           
  7226  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  7227                           ; 1 bytes @ 0x0
  7228                           
  7229  0070                     ?_do_I2C_SEND_RESTART:	
  7230                           ; 1 bytes @ 0x0
  7231                           
  7232  0070                     ?_do_I2C_SEND_STOP:	
  7233                           ; 1 bytes @ 0x0
  7234                           
  7235  0070                     ?_do_I2C_SEND_ADR_READ:	
  7236                           ; 1 bytes @ 0x0
  7237                           
  7238  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  7239                           ; 1 bytes @ 0x0
  7240                           
  7241  0070                     ?_do_I2C_RCEN:	
  7242                           ; 1 bytes @ 0x0
  7243                           
  7244  0070                     ?_do_I2C_DO_ACK:	
  7245                           ; 1 bytes @ 0x0
  7246                           
  7247  0070                     ?_do_I2C_DO_NACK_STOP:	
  7248                           ; 1 bytes @ 0x0
  7249                           
  7250  0070                     ?_do_I2C_DO_NACK_RESTART:	
  7251                           ; 1 bytes @ 0x0
  7252                           
  7253  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  7254                           ; 1 bytes @ 0x0
  7255                           
  7256  0070                     ?_do_I2C_TX:	
  7257                           ; 1 bytes @ 0x0
  7258                           
  7259  0070                     ?_do_I2C_RX:	
  7260                           ; 1 bytes @ 0x0
  7261                           
  7262  0070                     ?_do_I2C_TX_EMPTY:	
  7263                           ; 1 bytes @ 0x0
  7264                           
  7265  0070                     ?_TMR0_StartTimer:	
  7266                           ; 1 bytes @ 0x0
  7267                           
  7268  0070                     ?_TMR0_StopTimer:	
  7269                           ; 1 bytes @ 0x0
  7270                           
  7271  0070                     ??_TMR0_StopTimer:	
  7272                           ; 1 bytes @ 0x0
  7273                           
  7274  0070                     ?_TMR0_Write8bitTimer:	
  7275                           ; 1 bytes @ 0x0
  7276                           
  7277  0070                     ??_TMR0_Write8bitTimer:	
  7278                           ; 1 bytes @ 0x0
  7279                           
  7280  0070                     ?_TMR0_Load8bitPeriod:	
  7281                           ; 1 bytes @ 0x0
  7282                           
  7283  0070                     ?_TMR2_StartTimer:	
  7284                           ; 1 bytes @ 0x0
  7285                           
  7286  0070                     ?_TMR2_StopTimer:	
  7287                           ; 1 bytes @ 0x0
  7288                           
  7289  0070                     ??_TMR2_StopTimer:	
  7290                           ; 1 bytes @ 0x0
  7291                           
  7292  0070                     ?_TMR2_WriteTimer:	
  7293                           ; 1 bytes @ 0x0
  7294                           
  7295  0070                     ??_TMR2_WriteTimer:	
  7296                           ; 1 bytes @ 0x0
  7297                           
  7298  0070                     ?_TMR2_LoadPeriodRegister:	
  7299                           ; 1 bytes @ 0x0
  7300                           
  7301  0070                     ?_main:	
  7302                           ; 1 bytes @ 0x0
  7303                           
  7304  0070                     ?_doMove:	
  7305                           ; 1 bytes @ 0x0
  7306                           
  7307  0070                     ?i1_send_last_2bytes_IK:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310  0070                     ?i1_send_2bytes_latchless_IK:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313  0070                     ?i1_mssp1_clearIRQ:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316  0070                     ??i1_mssp1_clearIRQ:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319  0070                     ?i1_mssp1_setIRQ:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322  0070                     ??i1_mssp1_setIRQ:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325  0070                     ?i1_i2c1_driver_resetBus:	
  7326                           ; 1 bytes @ 0x0
  7327                           
  7328  0070                     ??i1_i2c1_driver_resetBus:	
  7329                           ; 1 bytes @ 0x0
  7330                           
  7331  0070                     ?i1_i2c1_driver_restart:	
  7332                           ; 1 bytes @ 0x0
  7333                           
  7334  0070                     ??i1_i2c1_driver_restart:	
  7335                           ; 1 bytes @ 0x0
  7336                           
  7337  0070                     ?i1_i2c1_driver_stop:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340  0070                     ??i1_i2c1_driver_stop:	
  7341                           ; 1 bytes @ 0x0
  7342                           
  7343  0070                     ??i1_i2c1_driver_isNACK:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346  0070                     ?i1_i2c1_driver_startRX:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349  0070                     ??i1_i2c1_driver_startRX:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352  0070                     ?i1_i2c1_driver_getRXData:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355  0070                     ??i1_i2c1_driver_getRXData:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358  0070                     ?i1_i2c1_driver_TXData:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361  0070                     ??i1_i2c1_driver_TXData:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364  0070                     ?i1_i2c1_driver_sendACK:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367  0070                     ??i1_i2c1_driver_sendACK:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370  0070                     ?i1_i2c1_driver_sendNACK:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373  0070                     ??i1_i2c1_driver_sendNACK:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376  0070                     ?i1_do_I2C_RESET:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379  0070                     ??i1_do_I2C_RESET:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382  0070                     ?i1_do_I2C_IDLE:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385  0070                     ??i1_do_I2C_IDLE:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400  0070                     ?i1_do_I2C_SEND_RESTART:	
  7401                           ; 1 bytes @ 0x0
  7402                           
  7403  0070                     ??i1_do_I2C_SEND_RESTART:	
  7404                           ; 1 bytes @ 0x0
  7405                           
  7406  0070                     ?i1_do_I2C_SEND_STOP:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409  0070                     ??i1_do_I2C_SEND_STOP:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418  0070                     ?i1_do_I2C_RCEN:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421  0070                     ??i1_do_I2C_RCEN:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424  0070                     ?i1_do_I2C_DO_ACK:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427  0070                     ??i1_do_I2C_DO_ACK:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448  0070                     ?i1_do_I2C_TX:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451  0070                     ?i1_do_I2C_RX:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454  0070                     ??i1_do_I2C_RX:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457  0070                     ?i1_do_I2C_TX_EMPTY:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460  0070                     ??i1_do_I2C_TX_EMPTY:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463  0070                     ?i1_i2c_ISR:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466  0070                     ?i1_returnStop:	
  7467                           ; 1 bytes @ 0x0
  7468                           
  7469  0070                     ?i1_returnReset:	
  7470                           ; 1 bytes @ 0x0
  7471                           
  7472  0070                     ?_execCmd:	
  7473                           ; 1 bytes @ 0x0
  7474                           
  7475  0070                     TMR0_Write8bitTimer@timerVal:	
  7476                           ; 2 bytes @ 0x0
  7477                           
  7478  0070                     TMR2_WriteTimer@timerVal:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481  0070                     i1i2c1_driver_TXData@d:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484  0070                     i1returnStop@p:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487  0070                     i1returnReset@p:	
  7488                           ; 1 bytes @ 0x0
  7489                           
  7490  0070                     i1send_last_2bytes_IK@data:	
  7491                           ; 1 bytes @ 0x0
  7492                           
  7493  0070                     i1send_2bytes_latchless_IK@data:	
  7494                           ; 2 bytes @ 0x0
  7495                           
  7496                           
  7497                           ; 2 bytes @ 0x0
  7498  0070                     	ds	1
  7499  0071                     ??_TMR2_ISR:	
  7500  0071                     ??_TMR2_DefaultInterruptHandler:	
  7501                           ; 1 bytes @ 0x1
  7502                           
  7503  0071                     ??i1_do_I2C_SEND_ADR_READ:	
  7504                           ; 1 bytes @ 0x1
  7505                           
  7506  0071                     ??i1_do_I2C_SEND_ADR_WRITE:	
  7507                           ; 1 bytes @ 0x1
  7508                           
  7509  0071                     ??i1_do_I2C_TX:	
  7510                           ; 1 bytes @ 0x1
  7511                           
  7512  0071                     ??i1_returnStop:	
  7513                           ; 1 bytes @ 0x1
  7514                           
  7515  0071                     ??i1_returnReset:	
  7516                           ; 1 bytes @ 0x1
  7517                           
  7518                           
  7519                           ; 1 bytes @ 0x1
  7520  0071                     	ds	1
  7521  0072                     ??i1_send_2bytes_latchless_IK:	
  7522  0072                     i1send_last_2bytes_IK@latch_start:	
  7523                           ; 1 bytes @ 0x2
  7524                           
  7525                           
  7526                           ; 1 bytes @ 0x2
  7527  0072                     	ds	1
  7528  0073                     i1send_last_2bytes_IK@topOrBottom:	
  7529  0073                     i1_do_I2C_TX$1114:	
  7530                           ; 2 bytes @ 0x3
  7531                           
  7532                           
  7533                           ; 2 bytes @ 0x3
  7534  0073                     	ds	2
  7535  0075                     ??i1_send_last_2bytes_IK:	
  7536  0075                     ??i1_i2c_ISR:	
  7537                           ; 1 bytes @ 0x5
  7538                           
  7539                           
  7540                           ; 1 bytes @ 0x5
  7541  0075                     	ds	1
  7542  0076                     i1send_2bytes_latchless_IK@j:	
  7543                           
  7544                           ; 2 bytes @ 0x6
  7545  0076                     	ds	3
  7546  0079                     i1send_last_2bytes_IK@j:	
  7547                           
  7548                           ; 2 bytes @ 0x9
  7549  0079                     	ds	2
  7550  007B                     ??i1_send_2length_2bytes_IK:	
  7551                           
  7552                           ; 1 bytes @ 0xB
  7553  007B                     	ds	1
  7554  007C                     ??_TMR0_ISR:	
  7555  007C                     ??_TMR0_DefaultInterruptHandler:	
  7556                           ; 1 bytes @ 0xC
  7557                           
  7558  007C                     ??_INTERRUPT_InterruptManager:	
  7559                           ; 1 bytes @ 0xC
  7560                           
  7561                           
  7562                           ; 1 bytes @ 0xC
  7563  007C                     	ds	1
  7564                           
  7565                           	psect	cstackBANK0
  7566  0020                     __pcstackBANK0:	
  7567  0020                     ?i1_send_2length_2bytes_IK:	
  7568  0020                     i1send_2length_2bytes_IK@data1:	
  7569                           ; 1 bytes @ 0x0
  7570                           
  7571                           
  7572                           ; 2 bytes @ 0x0
  7573  0020                     	ds	2
  7574  0022                     i1send_2length_2bytes_IK@data2:	
  7575                           
  7576                           ; 2 bytes @ 0x2
  7577  0022                     	ds	2
  7578  0024                     i1send_2length_2bytes_IK@latch_start:	
  7579                           
  7580                           ; 1 bytes @ 0x4
  7581  0024                     	ds	1
  7582  0025                     i1send_2length_2bytes_IK@topOrBottom:	
  7583                           
  7584                           ; 2 bytes @ 0x5
  7585  0025                     	ds	2
  7586  0027                     ?i1_LEDsOn:	
  7587  0027                     i1LEDsOn@LEDpins:	
  7588                           ; 1 bytes @ 0x7
  7589                           
  7590                           
  7591                           ; 4 bytes @ 0x7
  7592  0027                     	ds	4
  7593  002B                     i1LEDsOn@topOrBottom:	
  7594                           
  7595                           ; 2 bytes @ 0xB
  7596  002B                     	ds	2
  7597  002D                     ??i1_LEDsOn:	
  7598                           
  7599                           ; 1 bytes @ 0xD
  7600  002D                     	ds	4
  7601  0031                     ??_PMD_Initialize:	
  7602  0031                     ??_PIN_MANAGER_Initialize:	
  7603                           ; 1 bytes @ 0x11
  7604                           
  7605  0031                     ??_OSCILLATOR_Initialize:	
  7606                           ; 1 bytes @ 0x11
  7607                           
  7608  0031                     ??_WDT_Initialize:	
  7609                           ; 1 bytes @ 0x11
  7610                           
  7611  0031                     ??_EUSART_Initialize:	
  7612                           ; 1 bytes @ 0x11
  7613                           
  7614  0031                     ?_returnStop:	
  7615                           ; 1 bytes @ 0x11
  7616                           
  7617  0031                     ?_returnReset:	
  7618                           ; 1 bytes @ 0x11
  7619                           
  7620  0031                     ?_TMR0_SetInterruptHandler:	
  7621                           ; 1 bytes @ 0x11
  7622                           
  7623  0031                     ?_TMR2_SetInterruptHandler:	
  7624                           ; 1 bytes @ 0x11
  7625                           
  7626  0031                     ??_calcHeaterPins:	
  7627                           ; 1 bytes @ 0x11
  7628                           
  7629  0031                     ??_isdigit:	
  7630                           ; 1 bytes @ 0x11
  7631                           
  7632  0031                     ??_toupper:	
  7633                           ; 1 bytes @ 0x11
  7634                           
  7635  0031                     ?_send_last_2bytes_IK:	
  7636                           ; 1 bytes @ 0x11
  7637                           
  7638  0031                     ?_send_2bytes_latchless_IK:	
  7639                           ; 1 bytes @ 0x11
  7640                           
  7641  0031                     ??_EUSART_Read:	
  7642                           ; 1 bytes @ 0x11
  7643                           
  7644  0031                     ??_EUSART_Write:	
  7645                           ; 1 bytes @ 0x11
  7646                           
  7647  0031                     ??_mssp1_IRQisEnabled:	
  7648                           ; 1 bytes @ 0x11
  7649                           
  7650  0031                     ??_mssp1_clearIRQ:	
  7651                           ; 1 bytes @ 0x11
  7652                           
  7653  0031                     ??_mssp1_setIRQ:	
  7654                           ; 1 bytes @ 0x11
  7655                           
  7656  0031                     ??_mssp1_waitForEvent:	
  7657                           ; 1 bytes @ 0x11
  7658                           
  7659  0031                     ??_i2c1_driver_resetBus:	
  7660                           ; 1 bytes @ 0x11
  7661                           
  7662  0031                     ??_i2c1_driver_start:	
  7663                           ; 1 bytes @ 0x11
  7664                           
  7665  0031                     ??_i2c1_driver_restart:	
  7666                           ; 1 bytes @ 0x11
  7667                           
  7668  0031                     ??_i2c1_driver_stop:	
  7669                           ; 1 bytes @ 0x11
  7670                           
  7671  0031                     ??_i2c1_driver_isNACK:	
  7672                           ; 1 bytes @ 0x11
  7673                           
  7674  0031                     ??_i2c1_driver_startRX:	
  7675                           ; 1 bytes @ 0x11
  7676                           
  7677  0031                     ??_i2c1_driver_getRXData:	
  7678                           ; 1 bytes @ 0x11
  7679                           
  7680  0031                     ??_i2c1_driver_TXData:	
  7681                           ; 1 bytes @ 0x11
  7682                           
  7683  0031                     ??_i2c1_driver_sendACK:	
  7684                           ; 1 bytes @ 0x11
  7685                           
  7686  0031                     ??_i2c1_driver_sendNACK:	
  7687                           ; 1 bytes @ 0x11
  7688                           
  7689  0031                     ?_i2c_setBuffer:	
  7690                           ; 1 bytes @ 0x11
  7691                           
  7692  0031                     ??_do_I2C_RESET:	
  7693                           ; 1 bytes @ 0x11
  7694                           
  7695  0031                     ??_do_I2C_IDLE:	
  7696                           ; 1 bytes @ 0x11
  7697                           
  7698  0031                     ??_do_I2C_SEND_RESTART_READ:	
  7699                           ; 1 bytes @ 0x11
  7700                           
  7701  0031                     ??_do_I2C_SEND_RESTART_WRITE:	
  7702                           ; 1 bytes @ 0x11
  7703                           
  7704  0031                     ??_do_I2C_SEND_RESTART:	
  7705                           ; 1 bytes @ 0x11
  7706                           
  7707  0031                     ??_do_I2C_SEND_STOP:	
  7708                           ; 1 bytes @ 0x11
  7709                           
  7710  0031                     ??_do_I2C_RCEN:	
  7711                           ; 1 bytes @ 0x11
  7712                           
  7713  0031                     ??_do_I2C_DO_ACK:	
  7714                           ; 1 bytes @ 0x11
  7715                           
  7716  0031                     ??_do_I2C_DO_NACK_STOP:	
  7717                           ; 1 bytes @ 0x11
  7718                           
  7719  0031                     ??_do_I2C_DO_NACK_RESTART:	
  7720                           ; 1 bytes @ 0x11
  7721                           
  7722  0031                     ??_do_I2C_DO_ADDRESS_NACK:	
  7723                           ; 1 bytes @ 0x11
  7724                           
  7725  0031                     ??_do_I2C_RX:	
  7726                           ; 1 bytes @ 0x11
  7727                           
  7728  0031                     ??_do_I2C_TX_EMPTY:	
  7729                           ; 1 bytes @ 0x11
  7730                           
  7731  0031                     ??_TMR0_StartTimer:	
  7732                           ; 1 bytes @ 0x11
  7733                           
  7734  0031                     ??_TMR0_Load8bitPeriod:	
  7735                           ; 1 bytes @ 0x11
  7736                           
  7737  0031                     ??_TMR2_StartTimer:	
  7738                           ; 1 bytes @ 0x11
  7739                           
  7740  0031                     ??_TMR2_LoadPeriodRegister:	
  7741                           ; 1 bytes @ 0x11
  7742                           
  7743  0031                     ?_strchr:	
  7744                           ; 1 bytes @ 0x11
  7745                           
  7746  0031                     ?___wmul:	
  7747                           ; 2 bytes @ 0x11
  7748                           
  7749  0031                     ?___awdiv:	
  7750                           ; 2 bytes @ 0x11
  7751                           
  7752  0031                     ?___ftpack:	
  7753                           ; 2 bytes @ 0x11
  7754                           
  7755  0031                     ?___lldiv:	
  7756                           ; 3 bytes @ 0x11
  7757                           
  7758  0031                     mssp1_waitForEvent@timeout:	
  7759                           ; 4 bytes @ 0x11
  7760                           
  7761  0031                     i2c1_driver_TXData@d:	
  7762                           ; 1 bytes @ 0x11
  7763                           
  7764  0031                     returnStop@p:	
  7765                           ; 1 bytes @ 0x11
  7766                           
  7767  0031                     returnReset@p:	
  7768                           ; 1 bytes @ 0x11
  7769                           
  7770  0031                     TMR0_Load8bitPeriod@periodVal:	
  7771                           ; 1 bytes @ 0x11
  7772                           
  7773  0031                     TMR2_LoadPeriodRegister@periodVal:	
  7774                           ; 1 bytes @ 0x11
  7775                           
  7776  0031                     _isdigit$2092:	
  7777                           ; 1 bytes @ 0x11
  7778                           
  7779  0031                     send_last_2bytes_IK@data:	
  7780                           ; 1 bytes @ 0x11
  7781                           
  7782  0031                     send_2bytes_latchless_IK@data:	
  7783                           ; 2 bytes @ 0x11
  7784                           
  7785  0031                     i2c_setBuffer@buffer:	
  7786                           ; 2 bytes @ 0x11
  7787                           
  7788  0031                     TMR0_SetInterruptHandler@InterruptHandler:	
  7789                           ; 2 bytes @ 0x11
  7790                           
  7791  0031                     TMR2_SetInterruptHandler@InterruptHandler:	
  7792                           ; 2 bytes @ 0x11
  7793                           
  7794  0031                     ___wmul@multiplier:	
  7795                           ; 2 bytes @ 0x11
  7796                           
  7797  0031                     ___awdiv@divisor:	
  7798                           ; 2 bytes @ 0x11
  7799                           
  7800  0031                     strchr@ptr:	
  7801                           ; 2 bytes @ 0x11
  7802                           
  7803  0031                     ___ftpack@arg:	
  7804                           ; 2 bytes @ 0x11
  7805                           
  7806  0031                     ___lldiv@divisor:	
  7807                           ; 3 bytes @ 0x11
  7808                           
  7809                           
  7810                           ; 4 bytes @ 0x11
  7811  0031                     	ds	1
  7812  0032                     ??_returnStop:	
  7813  0032                     ??_returnReset:	
  7814                           ; 1 bytes @ 0x12
  7815                           
  7816  0032                     ??_do_I2C_SEND_ADR_READ:	
  7817                           ; 1 bytes @ 0x12
  7818                           
  7819  0032                     ??_do_I2C_SEND_ADR_WRITE:	
  7820                           ; 1 bytes @ 0x12
  7821                           
  7822  0032                     ??_do_I2C_TX:	
  7823                           ; 1 bytes @ 0x12
  7824                           
  7825  0032                     EUSART_Read@readValue:	
  7826                           ; 1 bytes @ 0x12
  7827                           
  7828  0032                     EUSART_Write@txData:	
  7829                           ; 1 bytes @ 0x12
  7830                           
  7831  0032                     isdigit@c:	
  7832                           ; 1 bytes @ 0x12
  7833                           
  7834  0032                     toupper@c:	
  7835                           ; 1 bytes @ 0x12
  7836                           
  7837                           
  7838                           ; 1 bytes @ 0x12
  7839  0032                     	ds	1
  7840  0033                     ??_TMR2_Initialize:	
  7841  0033                     ??_TMR0_Initialize:	
  7842                           ; 1 bytes @ 0x13
  7843                           
  7844  0033                     ??_TMR0_SetInterruptHandler:	
  7845                           ; 1 bytes @ 0x13
  7846                           
  7847  0033                     ??_TMR2_SetInterruptHandler:	
  7848                           ; 1 bytes @ 0x13
  7849                           
  7850  0033                     ??_SYSTEM_Initialize:	
  7851                           ; 1 bytes @ 0x13
  7852                           
  7853  0033                     ??_send_2bytes_latchless_IK:	
  7854                           ; 1 bytes @ 0x13
  7855                           
  7856  0033                     ??_putch:	
  7857                           ; 1 bytes @ 0x13
  7858                           
  7859  0033                     ?_stricmp:	
  7860                           ; 1 bytes @ 0x13
  7861                           
  7862  0033                     send_last_2bytes_IK@latch_start:	
  7863                           ; 2 bytes @ 0x13
  7864                           
  7865  0033                     putch@txData:	
  7866                           ; 1 bytes @ 0x13
  7867                           
  7868  0033                     i2c_setBuffer@bufferSize:	
  7869                           ; 1 bytes @ 0x13
  7870                           
  7871  0033                     ___wmul@multiplicand:	
  7872                           ; 2 bytes @ 0x13
  7873                           
  7874  0033                     ___awdiv@dividend:	
  7875                           ; 2 bytes @ 0x13
  7876                           
  7877  0033                     stricmp@s2:	
  7878                           ; 2 bytes @ 0x13
  7879                           
  7880  0033                     strchr@chr:	
  7881                           ; 2 bytes @ 0x13
  7882                           
  7883                           
  7884                           ; 2 bytes @ 0x13
  7885  0033                     	ds	1
  7886  0034                     ___ftpack@exp:	
  7887  0034                     send_last_2bytes_IK@topOrBottom:	
  7888                           ; 1 bytes @ 0x14
  7889                           
  7890  0034                     _do_I2C_TX$1114:	
  7891                           ; 2 bytes @ 0x14
  7892                           
  7893                           
  7894                           ; 2 bytes @ 0x14
  7895  0034                     	ds	1
  7896  0035                     ??_stricmp:	
  7897  0035                     ??_strchr:	
  7898                           ; 1 bytes @ 0x15
  7899                           
  7900  0035                     ??_i2c_setBuffer:	
  7901                           ; 1 bytes @ 0x15
  7902                           
  7903  0035                     ??___wmul:	
  7904                           ; 1 bytes @ 0x15
  7905                           
  7906  0035                     ??___awdiv:	
  7907                           ; 1 bytes @ 0x15
  7908                           
  7909  0035                     ___ftpack@sign:	
  7910                           ; 1 bytes @ 0x15
  7911                           
  7912  0035                     ___wmul@product:	
  7913                           ; 1 bytes @ 0x15
  7914                           
  7915  0035                     ___lldiv@dividend:	
  7916                           ; 2 bytes @ 0x15
  7917                           
  7918                           
  7919                           ; 4 bytes @ 0x15
  7920  0035                     	ds	1
  7921  0036                     ??_i2c_ISR:	
  7922  0036                     ??___ftpack:	
  7923                           ; 1 bytes @ 0x16
  7924                           
  7925  0036                     ??_send_last_2bytes_IK:	
  7926                           ; 1 bytes @ 0x16
  7927                           
  7928  0036                     ___awdiv@counter:	
  7929                           ; 1 bytes @ 0x16
  7930                           
  7931                           
  7932                           ; 1 bytes @ 0x16
  7933  0036                     	ds	1
  7934  0037                     ??_i2c_poller:	
  7935  0037                     ??_i2c_masterOperation:	
  7936                           ; 1 bytes @ 0x17
  7937                           
  7938  0037                     ?_atoi:	
  7939                           ; 1 bytes @ 0x17
  7940                           
  7941  0037                     ___awdiv@sign:	
  7942                           ; 2 bytes @ 0x17
  7943                           
  7944  0037                     stricmp@r:	
  7945                           ; 1 bytes @ 0x17
  7946                           
  7947  0037                     send_2bytes_latchless_IK@j:	
  7948                           ; 1 bytes @ 0x17
  7949                           
  7950                           
  7951                           ; 2 bytes @ 0x17
  7952  0037                     	ds	1
  7953  0038                     ?_strspn:	
  7954  0038                     ?_strcspn:	
  7955                           ; 2 bytes @ 0x18
  7956                           
  7957  0038                     i2c_masterOperation@read:	
  7958                           ; 2 bytes @ 0x18
  7959                           
  7960  0038                     stricmp@s1:	
  7961                           ; 1 bytes @ 0x18
  7962                           
  7963  0038                     ___awdiv@quotient:	
  7964                           ; 1 bytes @ 0x18
  7965                           
  7966  0038                     strcspn@s2:	
  7967                           ; 2 bytes @ 0x18
  7968                           
  7969  0038                     strspn@s2:	
  7970                           ; 2 bytes @ 0x18
  7971                           
  7972                           
  7973                           ; 2 bytes @ 0x18
  7974  0038                     	ds	1
  7975  0039                     ??_atoi:	
  7976  0039                     ??___lldiv:	
  7977                           ; 1 bytes @ 0x19
  7978                           
  7979  0039                     ?___awtoft:	
  7980                           ; 1 bytes @ 0x19
  7981                           
  7982  0039                     i2c_masterOperation@ret:	
  7983                           ; 3 bytes @ 0x19
  7984                           
  7985  0039                     ___awtoft@c:	
  7986                           ; 1 bytes @ 0x19
  7987                           
  7988                           
  7989                           ; 2 bytes @ 0x19
  7990  0039                     	ds	1
  7991  003A                     ??_strspn:	
  7992  003A                     ??_strcspn:	
  7993                           ; 1 bytes @ 0x1A
  7994                           
  7995  003A                     send_last_2bytes_IK@j:	
  7996                           ; 1 bytes @ 0x1A
  7997                           
  7998  003A                     ___lldiv@quotient:	
  7999                           ; 2 bytes @ 0x1A
  8000                           
  8001                           
  8002                           ; 4 bytes @ 0x1A
  8003  003A                     	ds	1
  8004  003B                     atoi@sign:	
  8005                           
  8006                           ; 1 bytes @ 0x1B
  8007  003B                     	ds	1
  8008  003C                     ?_send_2length_2bytes_IK:	
  8009  003C                     ??___awtoft:	
  8010                           ; 1 bytes @ 0x1C
  8011                           
  8012  003C                     send_2length_2bytes_IK@data1:	
  8013                           ; 1 bytes @ 0x1C
  8014                           
  8015  003C                     atoi@a:	
  8016                           ; 2 bytes @ 0x1C
  8017                           
  8018  003C                     strcspn@i:	
  8019                           ; 2 bytes @ 0x1C
  8020                           
  8021  003C                     strspn@i:	
  8022                           ; 2 bytes @ 0x1C
  8023                           
  8024                           
  8025                           ; 2 bytes @ 0x1C
  8026  003C                     	ds	2
  8027  003E                     atoi@s:	
  8028  003E                     ___awtoft@sign:	
  8029                           ; 1 bytes @ 0x1E
  8030                           
  8031  003E                     ___lldiv@counter:	
  8032                           ; 1 bytes @ 0x1E
  8033                           
  8034  003E                     strcspn@s1:	
  8035                           ; 1 bytes @ 0x1E
  8036                           
  8037  003E                     strspn@s1:	
  8038                           ; 1 bytes @ 0x1E
  8039                           
  8040  003E                     send_2length_2bytes_IK@data2:	
  8041                           ; 1 bytes @ 0x1E
  8042                           
  8043                           
  8044                           ; 2 bytes @ 0x1E
  8045  003E                     	ds	1
  8046  003F                     ?_strtok:	
  8047  003F                     ?___ftmul:	
  8048                           ; 1 bytes @ 0x1F
  8049                           
  8050  003F                     ?___llmod:	
  8051                           ; 3 bytes @ 0x1F
  8052                           
  8053  003F                     strtok@s2:	
  8054                           ; 4 bytes @ 0x1F
  8055                           
  8056  003F                     ___ftmul@f1:	
  8057                           ; 2 bytes @ 0x1F
  8058                           
  8059  003F                     ___llmod@divisor:	
  8060                           ; 3 bytes @ 0x1F
  8061                           
  8062                           
  8063                           ; 4 bytes @ 0x1F
  8064  003F                     	ds	1
  8065  0040                     send_2length_2bytes_IK@latch_start:	
  8066                           
  8067                           ; 1 bytes @ 0x20
  8068  0040                     	ds	1
  8069  0041                     ??_strtok:	
  8070  0041                     send_2length_2bytes_IK@topOrBottom:	
  8071                           ; 1 bytes @ 0x21
  8072                           
  8073                           
  8074                           ; 2 bytes @ 0x21
  8075  0041                     	ds	1
  8076  0042                     ___ftmul@f2:	
  8077                           
  8078                           ; 3 bytes @ 0x22
  8079  0042                     	ds	1
  8080  0043                     ??_send_2length_2bytes_IK:	
  8081  0043                     ___llmod@dividend:	
  8082                           ; 1 bytes @ 0x23
  8083                           
  8084                           
  8085                           ; 4 bytes @ 0x23
  8086  0043                     	ds	1
  8087  0044                     ?_LEDsOn:	
  8088  0044                     ?_LEDsPwr:	
  8089                           ; 1 bytes @ 0x24
  8090                           
  8091  0044                     ?_LED_setBrightnessRange:	
  8092                           ; 1 bytes @ 0x24
  8093                           
  8094  0044                     strtok@s1:	
  8095                           ; 1 bytes @ 0x24
  8096                           
  8097  0044                     LEDsPwr@pwr:	
  8098                           ; 1 bytes @ 0x24
  8099                           
  8100  0044                     LED_setBrightnessRange@range:	
  8101                           ; 2 bytes @ 0x24
  8102                           
  8103  0044                     LEDsOn@LEDpins:	
  8104                           ; 2 bytes @ 0x24
  8105                           
  8106                           
  8107                           ; 4 bytes @ 0x24
  8108  0044                     	ds	1
  8109  0045                     ?_parseCmd:	
  8110  0045                     ??___ftmul:	
  8111                           ; 1 bytes @ 0x25
  8112                           
  8113  0045                     parseCmd@s:	
  8114                           ; 1 bytes @ 0x25
  8115                           
  8116                           
  8117                           ; 1 bytes @ 0x25
  8118  0045                     	ds	1
  8119  0046                     ??_parseCmd:	
  8120  0046                     LEDsPwr@topOrBottom:	
  8121                           ; 1 bytes @ 0x26
  8122                           
  8123  0046                     LED_setBrightnessRange@topOrBottom:	
  8124                           ; 2 bytes @ 0x26
  8125                           
  8126                           
  8127                           ; 2 bytes @ 0x26
  8128  0046                     	ds	1
  8129  0047                     ??___llmod:	
  8130  0047                     parseCmd@cmdString:	
  8131                           ; 1 bytes @ 0x27
  8132                           
  8133                           
  8134                           ; 1 bytes @ 0x27
  8135  0047                     	ds	1
  8136  0048                     ??_LEDsPwr:	
  8137  0048                     ___llmod@counter:	
  8138                           ; 1 bytes @ 0x28
  8139                           
  8140  0048                     LEDsOn@topOrBottom:	
  8141                           ; 1 bytes @ 0x28
  8142                           
  8143  0048                     parseCmd@paramIter:	
  8144                           ; 2 bytes @ 0x28
  8145                           
  8146  0048                     LED_setBrightnessRange@LED_configReg:	
  8147                           ; 2 bytes @ 0x28
  8148                           
  8149                           
  8150                           ; 4 bytes @ 0x28
  8151  0048                     	ds	1
  8152  0049                     ?_drv_write:	
  8153  0049                     ??_drv_read:	
  8154                           ; 1 bytes @ 0x29
  8155                           
  8156  0049                     ??_LED_readConfig:	
  8157                           ; 1 bytes @ 0x29
  8158                           
  8159  0049                     ??_startRelMove:	
  8160                           ; 1 bytes @ 0x29
  8161                           
  8162  0049                     ??_startAbsMove:	
  8163                           ; 1 bytes @ 0x29
  8164                           
  8165  0049                     ??_getPosition:	
  8166                           ; 1 bytes @ 0x29
  8167                           
  8168  0049                     ??_setDrvPeak:	
  8169                           ; 1 bytes @ 0x29
  8170                           
  8171  0049                     ??_getActive:	
  8172                           ; 1 bytes @ 0x29
  8173                           
  8174  0049                     ??_getMoveMask:	
  8175                           ; 1 bytes @ 0x29
  8176                           
  8177  0049                     ??_getMotionStatus:	
  8178                           ; 1 bytes @ 0x29
  8179                           
  8180  0049                     ??___ftadd:	
  8181                           ; 1 bytes @ 0x29
  8182                           
  8183  0049                     drv_write@data:	
  8184                           ; 1 bytes @ 0x29
  8185                           
  8186  0049                     zeroPosition@i:	
  8187                           ; 1 bytes @ 0x29
  8188                           
  8189                           
  8190                           ; 2 bytes @ 0x29
  8191  0049                     	ds	1
  8192  004A                     ??_drv_write:	
  8193  004A                     ??_LEDsOn:	
  8194                           ; 1 bytes @ 0x2A
  8195                           
  8196  004A                     parseCmd@p:	
  8197                           ; 1 bytes @ 0x2A
  8198                           
  8199                           
  8200                           ; 1 bytes @ 0x2A
  8201  004A                     	ds	1
  8202  004B                     drv_write@reg:	
  8203  004B                     drv_read@reg:	
  8204                           ; 1 bytes @ 0x2B
  8205                           
  8206                           
  8207                           ; 1 bytes @ 0x2B
  8208  004B                     	ds	1
  8209  004C                     ??_LED_testComm:	
  8210  004C                     ??_setLEDBrightnessRange:	
  8211                           ; 1 bytes @ 0x2C
  8212                           
  8213  004C                     drv_read@buff:	
  8214                           ; 1 bytes @ 0x2C
  8215                           
  8216  004C                     drv_write@buff:	
  8217                           ; 1 bytes @ 0x2C
  8218                           
  8219                           
  8220                           ; 2 bytes @ 0x2C
  8221  004C                     	ds	1
  8222  004D                     ??_fifo_check:	
  8223  004D                     ??_setHeaterPostTime:	
  8224                           ; 1 bytes @ 0x2D
  8225                           
  8226                           
  8227                           ; 1 bytes @ 0x2D
  8228  004D                     	ds	1
  8229  004E                     ??_execCmd:	
  8230  004E                     ??_setLEDPwr:	
  8231                           ; 1 bytes @ 0x2E
  8232                           
  8233                           
  8234                           	psect	maintext
  8235  1720                     __pmaintext:	
  8236                           ; 1 bytes @ 0x2E
  8237 ;;
  8238 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8239 ;;
  8240 ;; *************** function _main *****************
  8241 ;; Defined at:
  8242 ;;		line 129 in file "main.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;		None
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;		None
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  1    wreg      void 
  8249 ;; Registers used:
  8250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8251 ;; Tracked objects:
  8252 ;;		On entry : B1F/0
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8258 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8259 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8260 ;;Total ram usage:        1 bytes
  8261 ;; Hardware stack levels required when called:   17
  8262 ;; This function calls:
  8263 ;;		_EUSART_Read
  8264 ;;		_SYSTEM_Initialize
  8265 ;;		_doAbsMove
  8266 ;;		_doRelMove
  8267 ;;		_execCmd
  8268 ;;		_initialize
  8269 ;;		_parseCmd
  8270 ;;		_printf
  8271 ;; This function is called by:
  8272 ;;		Startup code after reset
  8273 ;; This function uses a non-reentrant model
  8274 ;;
  8275                           
  8276                           
  8277                           ;psect for function _main
  8278  1720                     _main:	
  8279                           
  8280                           ;main.c: 132: SYSTEM_Initialize();
  8281                           
  8282                           ;incstack = 0
  8283 ;; hardware stack exceeded
  8284                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8285  1720  31A6  26B5  3197   	fcall	_SYSTEM_Initialize
  8286                           
  8287                           ;main.c: 133: _delay((unsigned long)((500)*(1000000/4000.0)));
  8288  1723  30A3               	movlw	163
  8289  1724  0023               	movlb	3	; select bank3
  8290  1725  00EE               	movwf	??_main^(0+384)
  8291  1726  3055               	movlw	85
  8292  1727                     u8777:	
  8293  1727  0B89               	decfsz	9,f
  8294  1728  2F27               	goto	u8777
  8295  1729  0BEE               	decfsz	??_main^(0+384),f
  8296  172A  2F27               	goto	u8777
  8297                           
  8298                           ;main.c: 139: (INTCONbits.GIE = 1);
  8299  172B  178B               	bsf	11,7	;volatile
  8300                           
  8301                           ;main.c: 142: (INTCONbits.PEIE = 1);
  8302  172C  170B               	bsf	11,6	;volatile
  8303                           
  8304                           ;main.c: 143: printf("\n\nsystem done\n");
  8305  172D  3025               	movlw	low (STR_4| (0+32768))
  8306  172E  0021               	movlb	1	; select bank1
  8307  172F  00A0               	movwf	printf@f^(0+128)
  8308  1730  30A9               	movlw	high (STR_4| (0+32768))
  8309  1731  00A1               	movwf	(printf@f^(0+128)+1)
  8310  1732  3186  2618  3197   	fcall	_printf
  8311                           
  8312                           ;main.c: 149: initialize();
  8313  1735  318A  22C3  3197   	fcall	_initialize
  8314                           
  8315                           ;main.c: 176: }
  8316                           ;main.c: 179: switch(motionType){
  8317  1738  2F40               	goto	l8342
  8318  1739                     l8362:	
  8319                           ;main.c: 180: case REL_MOVE: doRelMove(); break;
  8320                           
  8321  1739  318E  2604  3197   	fcall	_doRelMove
  8322  173C  2F40               	goto	l8342
  8323  173D                     l8364:	
  8324                           ;main.c: 181: case ABS_MOVE: doAbsMove(); break;
  8325                           
  8326  173D  3180  20A1  3197   	fcall	_doAbsMove
  8327  1740                     l8342:	
  8328                           ;main.c: 151: while (1)
  8329                           
  8330                           ;main.c: 183: }
  8331                           
  8332                           ;main.c: 182: default: break;
  8333                           
  8334                           
  8335                           ;main.c: 152: {
  8336                           ;main.c: 158: if (eusartRxCount!=0) {
  8337  1740  0020               	movlb	0	; select bank0
  8338  1741  0854               	movf	_eusartRxCount,w	;volatile
  8339  1742  1903               	btfsc	3,2
  8340  1743  2F6C               	goto	l8354
  8341                           
  8342                           ;main.c: 159: readdata[readIdx] = EUSART_Read();
  8343  1744  31A7  27E0  3197   	fcall	_EUSART_Read
  8344  1747  0023               	movlb	3	; select bank3
  8345  1748  00EE               	movwf	??_main^(0+384)
  8346  1749  0020               	movlb	0	; select bank0
  8347  174A  084E               	movf	_readIdx,w
  8348  174B  3ED8               	addlw	(low (_readdata| (0+256)))& (0+255)
  8349  174C  0086               	movwf	6
  8350  174D  3001               	movlw	1	; select bank3/4
  8351  174E  0087               	movwf	7
  8352  174F  0023               	movlb	3	; select bank3
  8353  1750  086E               	movf	??_main^(0+384),w
  8354  1751  0081               	movwf	1
  8355                           
  8356                           ;main.c: 160: if(readdata[readIdx] == '\n'){
  8357  1752  0020               	movlb	0	; select bank0
  8358  1753  084E               	movf	_readIdx,w
  8359  1754  3ED8               	addlw	(low (_readdata| (0+256)))& (0+255)
  8360  1755  0086               	movwf	6
  8361  1756  3001               	movlw	1	; select bank3/4
  8362  1757  0087               	movwf	7
  8363  1758  300A               	movlw	10
  8364  1759  0601               	xorwf	1,w
  8365  175A  1D03               	btfss	3,2
  8366  175B  2F67               	goto	l8352
  8367                           
  8368                           ;main.c: 161: readdata[readIdx] = 0;
  8369  175C  084E               	movf	_readIdx,w
  8370  175D  3ED8               	addlw	(low (_readdata| (0+256)))& (0+255)
  8371  175E  0086               	movwf	6
  8372  175F  3001               	movlw	1	; select bank3/4
  8373  1760  0087               	movwf	7
  8374  1761  0181               	clrf	1
  8375                           
  8376                           ;main.c: 162: cmdRead = 1;
  8377  1762  3001               	movlw	1
  8378  1763  0022               	movlb	2	; select bank2
  8379  1764  00E8               	movwf	_cmdRead^(0+256)
  8380  1765  3000               	movlw	0
  8381  1766  00E9               	movwf	(_cmdRead^(0+256)+1)
  8382  1767                     l8352:	
  8383                           
  8384                           ;main.c: 163: }
  8385                           ;main.c: 164: readIdx++;
  8386  1767  3001               	movlw	1
  8387  1768  0020               	movlb	0	; select bank0
  8388  1769  07CE               	addwf	_readIdx,f
  8389  176A  3000               	movlw	0
  8390  176B  3DCF               	addwfc	_readIdx+1,f
  8391  176C                     l8354:	
  8392                           
  8393                           ;main.c: 165: }
  8394                           ;main.c: 168: if(cmdRead){
  8395  176C  0022               	movlb	2	; select bank2
  8396  176D  0868               	movf	_cmdRead^(0+256),w
  8397  176E  0469               	iorwf	(_cmdRead+1)^(0+256),w
  8398  176F  1903               	btfsc	3,2
  8399  1770  2F85               	goto	l8368
  8400                           
  8401                           ;main.c: 170: parseCmd(readdata, &cmd_struct);
  8402  1771  3058               	movlw	(low (_cmd_struct| (0+512)))& (0+255)
  8403  1772  0023               	movlb	3	; select bank3
  8404  1773  00EE               	movwf	??_main^(0+384)
  8405  1774  086E               	movf	??_main^(0+384),w
  8406  1775  0020               	movlb	0	; select bank0
  8407  1776  00C5               	movwf	parseCmd@s
  8408  1777  30D8               	movlw	(low (_readdata| (0+256)))& (0+255)
  8409  1778  3184  2494  3197   	fcall	_parseCmd
  8410                           
  8411                           ;main.c: 172: cmdRead = 0;
  8412  177B  0022               	movlb	2	; select bank2
  8413  177C  01E8               	clrf	_cmdRead^(0+256)
  8414  177D  01E9               	clrf	(_cmdRead+1)^(0+256)
  8415                           
  8416                           ;main.c: 173: readIdx=0;
  8417  177E  0020               	movlb	0	; select bank0
  8418  177F  01CE               	clrf	_readIdx
  8419  1780  01CF               	clrf	_readIdx+1
  8420                           
  8421                           ;main.c: 174: execCmd(&cmd_struct);
  8422  1781  3058               	movlw	(low (_cmd_struct| (0+512)))& (0+255)
  8423  1782  3182  22EA  3197   	fcall	_execCmd
  8424  1785                     l8368:	
  8425  1785  0020               	movlb	0	; select bank0
  8426  1786  0853               	movf	_motionType,w
  8427                           
  8428                           ; Switch size 1, requested type "space"
  8429                           ; Number of cases is 2, Range of values is 1 to 2
  8430                           ; switch strategies available:
  8431                           ; Name         Instructions Cycles
  8432                           ; simple_byte            7     4 (average)
  8433                           ; direct_byte           13     9 (fixed)
  8434                           ; jumptable            263     9 (fixed)
  8435                           ;	Chosen strategy is simple_byte
  8436  1787  3A01               	xorlw	1	; case 1
  8437  1788  1903               	skipnz
  8438  1789  2F39               	goto	l8362
  8439  178A  3A03               	xorlw	3	; case 2
  8440  178B  1903               	skipnz
  8441  178C  2F3D               	goto	l8364
  8442  178D  2F40               	goto	l8342
  8443  178E  2F40               	goto	l8342
  8444  178F                     __end_of_main:	
  8445                           
  8446                           	psect	text1
  8447  0494                     __ptext1:	
  8448 ;; *************** function _parseCmd *****************
  8449 ;; Defined at:
  8450 ;;		line 5 in file "cmd_parser.c"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;  cmdString       1    wreg     PTR unsigned char 
  8453 ;;		 -> readdata(20), 
  8454 ;;  s               1   37[BANK0 ] PTR struct CMD_STRUCT
  8455 ;;		 -> cmd_struct(21), 
  8456 ;; Auto vars:     Size  Location     Type
  8457 ;;  cmdString       1   39[BANK0 ] PTR unsigned char 
  8458 ;;		 -> readdata(20), 
  8459 ;;  p               1   42[BANK0 ] PTR unsigned char 
  8460 ;;		 -> readdata(20), NULL(0), 
  8461 ;;  paramIter       2   40[BANK0 ] int 
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  1    wreg      void 
  8464 ;; Registers used:
  8465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8471 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8472 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8473 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8474 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8475 ;;Total ram usage:        6 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; Hardware stack levels required when called:    9
  8478 ;; This function calls:
  8479 ;;		_atoi
  8480 ;;		_stricmp
  8481 ;;		_strtok
  8482 ;; This function is called by:
  8483 ;;		_main
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487                           
  8488                           ;psect for function _parseCmd
  8489  0494                     _parseCmd:	
  8490                           
  8491                           ;incstack = 0
  8492                           ; Regs used in _parseCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8493                           ;parseCmd@cmdString stored from wreg
  8494  0494  0020               	movlb	0	; select bank0
  8495  0495  00C7               	movwf	parseCmd@cmdString
  8496                           
  8497                           ;cmd_parser.c: 6: int paramIter = 0;
  8498  0496  01C8               	clrf	parseCmd@paramIter
  8499  0497  01C9               	clrf	parseCmd@paramIter+1
  8500                           
  8501                           ;cmd_parser.c: 7: for (char *p = strtok(cmdString," "); p != (0); p = strtok((0), " ")){
  8502  0498  30E8               	movlw	low ((STR_39+6)| (0+32768))
  8503  0499  00BF               	movwf	strtok@s2
  8504  049A  30A9               	movlw	high ((STR_39+6)| (0+32768))
  8505  049B  00C0               	movwf	strtok@s2+1
  8506  049C  0847               	movf	parseCmd@cmdString,w
  8507  049D                     L19:	
  8508  049D  319D  25C2  3184   	fcall	_strtok
  8509  04A0  0020               	movlb	0	; select bank0
  8510  04A1  00C6               	movwf	??_parseCmd
  8511  04A2  0846               	movf	??_parseCmd,w
  8512  04A3  00CA               	movwf	parseCmd@p
  8513  04A4  084A               	movf	parseCmd@p,w
  8514  04A5  1903               	btfsc	3,2
  8515  04A6  0008               	return
  8516                           
  8517                           ;cmd_parser.c: 9: if (paramIter == 0){
  8518  04A7  0848               	movf	parseCmd@paramIter,w
  8519  04A8  0449               	iorwf	parseCmd@paramIter+1,w
  8520  04A9  1D03               	btfss	3,2
  8521  04AA  2DE9               	goto	l6358
  8522                           
  8523                           ;cmd_parser.c: 10: if(stricmp(p, "rel") == 0)
  8524  04AB  300F               	movlw	low (STR_57| (0+32768))
  8525  04AC  00B3               	movwf	stricmp@s2
  8526  04AD  30AA               	movlw	high (STR_57| (0+32768))
  8527  04AE  00B4               	movwf	stricmp@s2+1
  8528  04AF  084A               	movf	parseCmd@p,w
  8529  04B0  3193  23CC  3184   	fcall	_stricmp
  8530  04B3  0020               	movlb	0	; select bank0
  8531  04B4  0833               	movf	?_stricmp,w
  8532  04B5  0434               	iorwf	?_stricmp+1,w
  8533  04B6  1D03               	btfss	3,2
  8534  04B7  2CBA               	goto	l6280
  8535                           
  8536                           ;cmd_parser.c: 11: s->c = CMD_REL;
  8537  04B8  3002               	movlw	2
  8538  04B9  2DDB               	goto	L18
  8539  04BA                     l6280:	
  8540                           
  8541                           ;cmd_parser.c: 12: else if(stricmp(p, "abs") == 0)
  8542  04BA  3013               	movlw	low (STR_58| (0+32768))
  8543  04BB  00B3               	movwf	stricmp@s2
  8544  04BC  30AA               	movlw	high (STR_58| (0+32768))
  8545  04BD  00B4               	movwf	stricmp@s2+1
  8546  04BE  084A               	movf	parseCmd@p,w
  8547  04BF  3193  23CC  3184   	fcall	_stricmp
  8548  04C2  0020               	movlb	0	; select bank0
  8549  04C3  0833               	movf	?_stricmp,w
  8550  04C4  0434               	iorwf	?_stricmp+1,w
  8551  04C5  1D03               	btfss	3,2
  8552  04C6  2CCE               	goto	l6284
  8553                           
  8554                           ;cmd_parser.c: 13: s->c = CMD_ABS;
  8555  04C7  0845               	movf	parseCmd@s,w
  8556  04C8  0086               	movwf	6
  8557  04C9  3002               	movlw	2	; select bank4/5
  8558  04CA  0087               	movwf	7
  8559  04CB  0181               	clrf	1
  8560  04CC  0A81               	incf	1,f
  8561  04CD  2E0E               	goto	l6366
  8562  04CE                     l6284:	
  8563                           
  8564                           ;cmd_parser.c: 14: else if(stricmp(p, "pos") == 0)
  8565  04CE  3017               	movlw	low (STR_59| (0+32768))
  8566  04CF  00B3               	movwf	stricmp@s2
  8567  04D0  30AA               	movlw	high (STR_59| (0+32768))
  8568  04D1  00B4               	movwf	stricmp@s2+1
  8569  04D2  084A               	movf	parseCmd@p,w
  8570  04D3  3193  23CC  3184   	fcall	_stricmp
  8571  04D6  0020               	movlb	0	; select bank0
  8572  04D7  0833               	movf	?_stricmp,w
  8573  04D8  0434               	iorwf	?_stricmp+1,w
  8574  04D9  1D03               	btfss	3,2
  8575  04DA  2CDD               	goto	l6288
  8576                           
  8577                           ;cmd_parser.c: 15: s->c = CMD_P;
  8578  04DB  3003               	movlw	3
  8579  04DC  2DDB               	goto	L18
  8580  04DD                     l6288:	
  8581                           
  8582                           ;cmd_parser.c: 16: else if(stricmp(p,"s") == 0)
  8583  04DD  3015               	movlw	low ((STR_58+2)| (0+32768))
  8584  04DE  00B3               	movwf	stricmp@s2
  8585  04DF  30AA               	movlw	high ((STR_58+2)| (0+32768))
  8586  04E0  00B4               	movwf	stricmp@s2+1
  8587  04E1  084A               	movf	parseCmd@p,w
  8588  04E2  3193  23CC  3184   	fcall	_stricmp
  8589  04E5  0020               	movlb	0	; select bank0
  8590  04E6  0833               	movf	?_stricmp,w
  8591  04E7  0434               	iorwf	?_stricmp+1,w
  8592  04E8  1D03               	btfss	3,2
  8593  04E9  2CEC               	goto	l6292
  8594                           
  8595                           ;cmd_parser.c: 17: s->c = CMD_S;
  8596  04EA  3004               	movlw	4
  8597  04EB  2DDB               	goto	L18
  8598  04EC                     l6292:	
  8599                           
  8600                           ;cmd_parser.c: 18: else if(stricmp(p,"setA") == 0)
  8601  04EC  30F6               	movlw	low (STR_61| (0+32768))
  8602  04ED  00B3               	movwf	stricmp@s2
  8603  04EE  30A9               	movlw	high (STR_61| (0+32768))
  8604  04EF  00B4               	movwf	stricmp@s2+1
  8605  04F0  084A               	movf	parseCmd@p,w
  8606  04F1  3193  23CC  3184   	fcall	_stricmp
  8607  04F4  0020               	movlb	0	; select bank0
  8608  04F5  0833               	movf	?_stricmp,w
  8609  04F6  0434               	iorwf	?_stricmp+1,w
  8610  04F7  1D03               	btfss	3,2
  8611  04F8  2CFB               	goto	l6296
  8612                           
  8613                           ;cmd_parser.c: 19: s->c = CMD_SETA;
  8614  04F9  3005               	movlw	5
  8615  04FA  2DDB               	goto	L18
  8616  04FB                     l6296:	
  8617                           
  8618                           ;cmd_parser.c: 20: else if(stricmp(p,"setM") == 0)
  8619  04FB  3000               	movlw	low (STR_62| (0+32768))
  8620  04FC  00B3               	movwf	stricmp@s2
  8621  04FD  30AA               	movlw	high (STR_62| (0+32768))
  8622  04FE  00B4               	movwf	stricmp@s2+1
  8623  04FF  084A               	movf	parseCmd@p,w
  8624  0500  3193  23CC  3184   	fcall	_stricmp
  8625  0503  0020               	movlb	0	; select bank0
  8626  0504  0833               	movf	?_stricmp,w
  8627  0505  0434               	iorwf	?_stricmp+1,w
  8628  0506  1D03               	btfss	3,2
  8629  0507  2D0A               	goto	l6300
  8630                           
  8631                           ;cmd_parser.c: 21: s->c = CMD_SETM;
  8632  0508  3006               	movlw	6
  8633  0509  2DDB               	goto	L18
  8634  050A                     l6300:	
  8635                           
  8636                           ;cmd_parser.c: 22: else if(stricmp(p,"z") == 0)
  8637  050A  302D               	movlw	low (STR_63| (0+32768))
  8638  050B  00B3               	movwf	stricmp@s2
  8639  050C  30AA               	movlw	high (STR_63| (0+32768))
  8640  050D  00B4               	movwf	stricmp@s2+1
  8641  050E  084A               	movf	parseCmd@p,w
  8642  050F  3193  23CC  3184   	fcall	_stricmp
  8643  0512  0020               	movlb	0	; select bank0
  8644  0513  0833               	movf	?_stricmp,w
  8645  0514  0434               	iorwf	?_stricmp+1,w
  8646  0515  1D03               	btfss	3,2
  8647  0516  2D19               	goto	l6304
  8648                           
  8649                           ;cmd_parser.c: 23: s->c = CMD_ZERO;
  8650  0517  3007               	movlw	7
  8651  0518  2DDB               	goto	L18
  8652  0519                     l6304:	
  8653                           
  8654                           ;cmd_parser.c: 24: else if(stricmp(p,"drvPeak") == 0)
  8655  0519  30AA               	movlw	low (STR_64| (0+32768))
  8656  051A  00B3               	movwf	stricmp@s2
  8657  051B  30A9               	movlw	high (STR_64| (0+32768))
  8658  051C  00B4               	movwf	stricmp@s2+1
  8659  051D  084A               	movf	parseCmd@p,w
  8660  051E  3193  23CC  3184   	fcall	_stricmp
  8661  0521  0020               	movlb	0	; select bank0
  8662  0522  0833               	movf	?_stricmp,w
  8663  0523  0434               	iorwf	?_stricmp+1,w
  8664  0524  1D03               	btfss	3,2
  8665  0525  2D28               	goto	l6308
  8666                           
  8667                           ;cmd_parser.c: 25: s->c = CMD_DRV_PEAK;
  8668  0526  3008               	movlw	8
  8669  0527  2DDB               	goto	L18
  8670  0528                     l6308:	
  8671                           
  8672                           ;cmd_parser.c: 26: else if(stricmp(p,"drvGain") == 0)
  8673  0528  30B2               	movlw	low (STR_65| (0+32768))
  8674  0529  00B3               	movwf	stricmp@s2
  8675  052A  30A9               	movlw	high (STR_65| (0+32768))
  8676  052B  00B4               	movwf	stricmp@s2+1
  8677  052C  084A               	movf	parseCmd@p,w
  8678  052D  3193  23CC  3184   	fcall	_stricmp
  8679  0530  0020               	movlb	0	; select bank0
  8680  0531  0833               	movf	?_stricmp,w
  8681  0532  0434               	iorwf	?_stricmp+1,w
  8682  0533  1D03               	btfss	3,2
  8683  0534  2D37               	goto	l6312
  8684                           
  8685                           ;cmd_parser.c: 27: s->c = CMD_DRV_GAIN;
  8686  0535  3009               	movlw	9
  8687  0536  2DDB               	goto	L18
  8688  0537                     l6312:	
  8689                           
  8690                           ;cmd_parser.c: 28: else if(stricmp(p,"piezoontime") == 0)
  8691  0537  3076               	movlw	low (STR_66| (0+32768))
  8692  0538  00B3               	movwf	stricmp@s2
  8693  0539  30A9               	movlw	high (STR_66| (0+32768))
  8694  053A  00B4               	movwf	stricmp@s2+1
  8695  053B  084A               	movf	parseCmd@p,w
  8696  053C  3193  23CC  3184   	fcall	_stricmp
  8697  053F  0020               	movlb	0	; select bank0
  8698  0540  0833               	movf	?_stricmp,w
  8699  0541  0434               	iorwf	?_stricmp+1,w
  8700  0542  1D03               	btfss	3,2
  8701  0543  2D46               	goto	l6316
  8702                           
  8703                           ;cmd_parser.c: 29: s->c = CMD_DRV_PIEZOONTIME;
  8704  0544  300A               	movlw	10
  8705  0545  2DDB               	goto	L18
  8706  0546                     l6316:	
  8707                           
  8708                           ;cmd_parser.c: 30: else if(stricmp(p,"heaterpretime") == 0)
  8709  0546  3034               	movlw	low (STR_67| (0+32768))
  8710  0547  00B3               	movwf	stricmp@s2
  8711  0548  30A9               	movlw	high (STR_67| (0+32768))
  8712  0549  00B4               	movwf	stricmp@s2+1
  8713  054A  084A               	movf	parseCmd@p,w
  8714  054B  3193  23CC  3184   	fcall	_stricmp
  8715  054E  0020               	movlb	0	; select bank0
  8716  054F  0833               	movf	?_stricmp,w
  8717  0550  0434               	iorwf	?_stricmp+1,w
  8718  0551  1D03               	btfss	3,2
  8719  0552  2D55               	goto	l6320
  8720                           
  8721                           ;cmd_parser.c: 31: s->c = CMD_HEATER_PRETIME;
  8722  0553  300B               	movlw	11
  8723  0554  2DDB               	goto	L18
  8724  0555                     l6320:	
  8725                           
  8726                           ;cmd_parser.c: 32: else if(stricmp(p,"heaterposttime") == 0)
  8727  0555  3016               	movlw	low (STR_68| (0+32768))
  8728  0556  00B3               	movwf	stricmp@s2
  8729  0557  30A9               	movlw	high (STR_68| (0+32768))
  8730  0558  00B4               	movwf	stricmp@s2+1
  8731  0559  084A               	movf	parseCmd@p,w
  8732  055A  3193  23CC  3184   	fcall	_stricmp
  8733  055D  0020               	movlb	0	; select bank0
  8734  055E  0833               	movf	?_stricmp,w
  8735  055F  0434               	iorwf	?_stricmp+1,w
  8736  0560  1D03               	btfss	3,2
  8737  0561  2D64               	goto	l6324
  8738                           
  8739                           ;cmd_parser.c: 33: s->c = CMD_HEATER_POSTTIME;
  8740  0562  300C               	movlw	12
  8741  0563  2DDB               	goto	L18
  8742  0564                     l6324:	
  8743                           
  8744                           ;cmd_parser.c: 34: else if(stricmp(p,"ledgain") == 0)
  8745  0564  30BA               	movlw	low (STR_69| (0+32768))
  8746  0565  00B3               	movwf	stricmp@s2
  8747  0566  30A9               	movlw	high (STR_69| (0+32768))
  8748  0567  00B4               	movwf	stricmp@s2+1
  8749  0568  084A               	movf	parseCmd@p,w
  8750  0569  3193  23CC  3184   	fcall	_stricmp
  8751  056C  0020               	movlb	0	; select bank0
  8752  056D  0833               	movf	?_stricmp,w
  8753  056E  0434               	iorwf	?_stricmp+1,w
  8754  056F  1D03               	btfss	3,2
  8755  0570  2D73               	goto	l6328
  8756                           
  8757                           ;cmd_parser.c: 35: s->c = CMD_HEATER_GAIN;
  8758  0571  300D               	movlw	13
  8759  0572  2DDB               	goto	L18
  8760  0573                     l6328:	
  8761                           
  8762                           ;cmd_parser.c: 36: else if(stricmp(p,"ledpwr") == 0)
  8763  0573  30EA               	movlw	low (STR_70| (0+32768))
  8764  0574  00B3               	movwf	stricmp@s2
  8765  0575  30A9               	movlw	high (STR_70| (0+32768))
  8766  0576  00B4               	movwf	stricmp@s2+1
  8767  0577  084A               	movf	parseCmd@p,w
  8768  0578  3193  23CC  3184   	fcall	_stricmp
  8769  057B  0020               	movlb	0	; select bank0
  8770  057C  0833               	movf	?_stricmp,w
  8771  057D  0434               	iorwf	?_stricmp+1,w
  8772  057E  1D03               	btfss	3,2
  8773  057F  2D82               	goto	l6332
  8774                           
  8775                           ;cmd_parser.c: 37: s->c = CMD_HEATER_PWR;
  8776  0580  300E               	movlw	14
  8777  0581  2DDB               	goto	L18
  8778  0582                     l6332:	
  8779                           
  8780                           ;cmd_parser.c: 38: else if(stricmp(p,"toggleheater") == 0)
  8781  0582  3050               	movlw	low (STR_71| (0+32768))
  8782  0583  00B3               	movwf	stricmp@s2
  8783  0584  30A9               	movlw	high (STR_71| (0+32768))
  8784  0585  00B4               	movwf	stricmp@s2+1
  8785  0586  084A               	movf	parseCmd@p,w
  8786  0587  3193  23CC  3184   	fcall	_stricmp
  8787  058A  0020               	movlb	0	; select bank0
  8788  058B  0833               	movf	?_stricmp,w
  8789  058C  0434               	iorwf	?_stricmp+1,w
  8790  058D  1D03               	btfss	3,2
  8791  058E  2D91               	goto	l6336
  8792                           
  8793                           ;cmd_parser.c: 39: s->c = CMD_HEATER_TOGGLE;
  8794  058F  300F               	movlw	15
  8795  0590  2DDB               	goto	L18
  8796  0591                     l6336:	
  8797                           
  8798                           ;cmd_parser.c: 40: else if(stricmp(p,"getA") == 0)
  8799  0591  30F1               	movlw	low (STR_72| (0+32768))
  8800  0592  00B3               	movwf	stricmp@s2
  8801  0593  30A9               	movlw	high (STR_72| (0+32768))
  8802  0594  00B4               	movwf	stricmp@s2+1
  8803  0595  084A               	movf	parseCmd@p,w
  8804  0596  3193  23CC  3184   	fcall	_stricmp
  8805  0599  0020               	movlb	0	; select bank0
  8806  059A  0833               	movf	?_stricmp,w
  8807  059B  0434               	iorwf	?_stricmp+1,w
  8808  059C  1D03               	btfss	3,2
  8809  059D  2DA0               	goto	l6340
  8810                           
  8811                           ;cmd_parser.c: 41: s->c = CMD_GET_ACTIVE;
  8812  059E  3010               	movlw	16
  8813  059F  2DDB               	goto	L18
  8814  05A0                     l6340:	
  8815                           
  8816                           ;cmd_parser.c: 42: else if(stricmp(p,"getM") == 0)
  8817  05A0  30FB               	movlw	low (STR_73| (0+32768))
  8818  05A1  00B3               	movwf	stricmp@s2
  8819  05A2  30A9               	movlw	high (STR_73| (0+32768))
  8820  05A3  00B4               	movwf	stricmp@s2+1
  8821  05A4  084A               	movf	parseCmd@p,w
  8822  05A5  3193  23CC  3184   	fcall	_stricmp
  8823  05A8  0020               	movlb	0	; select bank0
  8824  05A9  0833               	movf	?_stricmp,w
  8825  05AA  0434               	iorwf	?_stricmp+1,w
  8826  05AB  1D03               	btfss	3,2
  8827  05AC  2DAF               	goto	l6344
  8828                           
  8829                           ;cmd_parser.c: 43: s->c = CMD_GET_MOVABLE;
  8830  05AD  3011               	movlw	17
  8831  05AE  2DDB               	goto	L18
  8832  05AF                     l6344:	
  8833                           
  8834                           ;cmd_parser.c: 44: else if(stricmp(p,"mstatus") == 0)
  8835  05AF  30C2               	movlw	low (STR_74| (0+32768))
  8836  05B0  00B3               	movwf	stricmp@s2
  8837  05B1  30A9               	movlw	high (STR_74| (0+32768))
  8838  05B2  00B4               	movwf	stricmp@s2+1
  8839  05B3  084A               	movf	parseCmd@p,w
  8840  05B4  3193  23CC  3184   	fcall	_stricmp
  8841  05B7  0020               	movlb	0	; select bank0
  8842  05B8  0833               	movf	?_stricmp,w
  8843  05B9  0434               	iorwf	?_stricmp+1,w
  8844  05BA  1D03               	btfss	3,2
  8845  05BB  2DBE               	goto	l6348
  8846                           
  8847                           ;cmd_parser.c: 45: s->c = CMD_MOTION_STATUS;
  8848  05BC  3012               	movlw	18
  8849  05BD  2DDB               	goto	L18
  8850  05BE                     l6348:	
  8851                           
  8852                           ;cmd_parser.c: 46: else if(stricmp(p,"comm") == 0)
  8853  05BE  300A               	movlw	low (STR_75| (0+32768))
  8854  05BF  00B3               	movwf	stricmp@s2
  8855  05C0  30AA               	movlw	high (STR_75| (0+32768))
  8856  05C1  00B4               	movwf	stricmp@s2+1
  8857  05C2  084A               	movf	parseCmd@p,w
  8858  05C3  3193  23CC  3184   	fcall	_stricmp
  8859  05C6  0020               	movlb	0	; select bank0
  8860  05C7  0833               	movf	?_stricmp,w
  8861  05C8  0434               	iorwf	?_stricmp+1,w
  8862  05C9  1D03               	btfss	3,2
  8863  05CA  2DCD               	goto	l6352
  8864                           
  8865                           ;cmd_parser.c: 47: s->c = CMD_COMM_CHECK;
  8866  05CB  3013               	movlw	19
  8867  05CC  2DDB               	goto	L18
  8868  05CD                     l6352:	
  8869                           
  8870                           ;cmd_parser.c: 48: else if(stricmp(p,"ping") == 0)
  8871  05CD  3005               	movlw	low (STR_76| (0+32768))
  8872  05CE  00B3               	movwf	stricmp@s2
  8873  05CF  30AA               	movlw	high (STR_76| (0+32768))
  8874  05D0  00B4               	movwf	stricmp@s2+1
  8875  05D1  084A               	movf	parseCmd@p,w
  8876  05D2  3193  23CC  3184   	fcall	_stricmp
  8877  05D5  0020               	movlb	0	; select bank0
  8878  05D6  0833               	movf	?_stricmp,w
  8879  05D7  0434               	iorwf	?_stricmp+1,w
  8880  05D8  1D03               	btfss	3,2
  8881  05D9  2DE3               	goto	l6356
  8882                           
  8883                           ;cmd_parser.c: 49: s->c = CMD_PING;
  8884  05DA  3014               	movlw	20
  8885  05DB                     L18:	
  8886  05DB  00C6               	movwf	??_parseCmd
  8887  05DC  0845               	movf	parseCmd@s,w
  8888  05DD  0086               	movwf	6
  8889  05DE  3002               	movlw	2	; select bank4/5
  8890  05DF  0087               	movwf	7
  8891  05E0  0846               	movf	??_parseCmd,w
  8892  05E1  0081               	movwf	1
  8893  05E2  2E0E               	goto	l6366
  8894  05E3                     l6356:	
  8895                           
  8896                           ;cmd_parser.c: 52: else
  8897                           ;cmd_parser.c: 53: s->c = CMD_NONE;
  8898  05E3  0845               	movf	parseCmd@s,w
  8899  05E4  0086               	movwf	6
  8900  05E5  3002               	movlw	2	; select bank4/5
  8901  05E6  0087               	movwf	7
  8902  05E7  0181               	clrf	1
  8903                           
  8904                           ;cmd_parser.c: 54: }
  8905  05E8  2E0E               	goto	l6366
  8906  05E9                     l6358:	
  8907                           
  8908                           ;cmd_parser.c: 55: else if(paramIter == 1){
  8909  05E9  0348               	decf	parseCmd@paramIter,w
  8910  05EA  0449               	iorwf	parseCmd@paramIter+1,w
  8911  05EB  1D03               	btfss	3,2
  8912  05EC  2DFB               	goto	l6362
  8913                           
  8914                           ;cmd_parser.c: 56: s->p1.paramI = atoi(p);
  8915  05ED  084A               	movf	parseCmd@p,w
  8916  05EE  3197  278F  3184   	fcall	_atoi
  8917  05F1  0020               	movlb	0	; select bank0
  8918  05F2  0A45               	incf	parseCmd@s,w
  8919  05F3  0086               	movwf	6
  8920  05F4  3002               	movlw	2	; select bank4/5
  8921  05F5  0087               	movwf	7
  8922  05F6  0837               	movf	?_atoi,w
  8923  05F7  3FC0               	movwi [0]fsr1
  8924  05F8  0838               	movf	?_atoi+1,w
  8925  05F9  3FC1               	movwi [1]fsr1
  8926                           
  8927                           ;cmd_parser.c: 57: }
  8928  05FA  2E0E               	goto	l6366
  8929  05FB                     l6362:	
  8930                           
  8931                           ;cmd_parser.c: 58: else if(paramIter == 2){
  8932  05FB  3002               	movlw	2
  8933  05FC  0648               	xorwf	parseCmd@paramIter,w
  8934  05FD  0449               	iorwf	parseCmd@paramIter+1,w
  8935  05FE  1D03               	btfss	3,2
  8936  05FF  2E0E               	goto	l6366
  8937                           
  8938                           ;cmd_parser.c: 60: s->p2.paramI = atoi(p);
  8939  0600  084A               	movf	parseCmd@p,w
  8940  0601  3197  278F  3184   	fcall	_atoi
  8941  0604  0020               	movlb	0	; select bank0
  8942  0605  0845               	movf	parseCmd@s,w
  8943  0606  3E0B               	addlw	11
  8944  0607  0086               	movwf	6
  8945  0608  3002               	movlw	2	; select bank4/5
  8946  0609  0087               	movwf	7
  8947  060A  0837               	movf	?_atoi,w
  8948  060B  3FC0               	movwi [0]fsr1
  8949  060C  0838               	movf	?_atoi+1,w
  8950  060D  3FC1               	movwi [1]fsr1
  8951  060E                     l6366:	
  8952                           
  8953                           ;cmd_parser.c: 61: }
  8954                           ;cmd_parser.c: 63: paramIter++;
  8955  060E  3001               	movlw	1
  8956  060F  07C8               	addwf	parseCmd@paramIter,f
  8957  0610  3000               	movlw	0
  8958  0611  3DC9               	addwfc	parseCmd@paramIter+1,f
  8959  0612  30E8               	movlw	low ((STR_39+6)| (0+32768))
  8960  0613  00BF               	movwf	strtok@s2
  8961  0614  30A9               	movlw	high ((STR_39+6)| (0+32768))
  8962  0615  00C0               	movwf	strtok@s2+1
  8963  0616  3000               	movlw	0
  8964  0617  2C9D               	goto	L19
  8965  0618                     __end_of_parseCmd:	
  8966                           
  8967                           	psect	text2
  8968  1DC2                     __ptext2:	
  8969 ;; *************** function _strtok *****************
  8970 ;; Defined at:
  8971 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtok.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;  s1              1    wreg     PTR unsigned char 
  8974 ;;		 -> readdata(20), NULL(0), 
  8975 ;;  s2              2   31[BANK0 ] PTR const unsigned char 
  8976 ;;		 -> STR_56(2), STR_55(2), 
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;  s1              1   36[BANK0 ] PTR unsigned char 
  8979 ;;		 -> readdata(20), NULL(0), 
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  1    wreg      PTR unsigned char 
  8982 ;; Registers used:
  8983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8990 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8991 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8992 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8993 ;;Total ram usage:        6 bytes
  8994 ;; Hardware stack levels used:    1
  8995 ;; Hardware stack levels required when called:    8
  8996 ;; This function calls:
  8997 ;;		_strcspn
  8998 ;;		_strspn
  8999 ;; This function is called by:
  9000 ;;		_parseCmd
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           
  9005                           ;psect for function _strtok
  9006  1DC2                     _strtok:	
  9007                           
  9008                           ;incstack = 0
  9009                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9010                           ;strtok@s1 stored from wreg
  9011  1DC2  0020               	movlb	0	; select bank0
  9012  1DC3  00C4               	movwf	strtok@s1
  9013  1DC4  0844               	movf	strtok@s1,w
  9014  1DC5  1D03               	btfss	3,2
  9015  1DC6  2DCB               	goto	l5950
  9016  1DC7  0852               	movf	strtok@sp,w
  9017  1DC8  00C1               	movwf	??_strtok
  9018  1DC9  0841               	movf	??_strtok,w
  9019  1DCA  00C4               	movwf	strtok@s1
  9020  1DCB                     l5950:	
  9021  1DCB  0844               	movf	strtok@s1,w
  9022  1DCC  1D03               	btfss	3,2
  9023  1DCD  2DD0               	goto	l5956
  9024  1DCE  3000               	movlw	0
  9025  1DCF  0008               	return
  9026  1DD0                     l5956:	
  9027  1DD0  0840               	movf	strtok@s2+1,w
  9028  1DD1  00B9               	movwf	strspn@s2+1
  9029  1DD2  083F               	movf	strtok@s2,w
  9030  1DD3  00B8               	movwf	strspn@s2
  9031  1DD4  0844               	movf	strtok@s1,w
  9032  1DD5  319A  22F8  319D   	fcall	_strspn
  9033  1DD8  0020               	movlb	0	; select bank0
  9034  1DD9  0838               	movf	?_strspn,w
  9035  1DDA  00C1               	movwf	??_strtok
  9036  1DDB  0841               	movf	??_strtok,w
  9037  1DDC  07C4               	addwf	strtok@s1,f
  9038  1DDD  0844               	movf	strtok@s1,w
  9039  1DDE  0086               	movwf	6
  9040  1DDF  3001               	movlw	1	; select bank2/3
  9041  1DE0  0087               	movwf	7
  9042  1DE1  0801               	movf	1,w
  9043  1DE2  1D03               	btfss	3,2
  9044  1DE3  2DE7               	goto	l5964
  9045  1DE4  01D2               	clrf	strtok@sp
  9046  1DE5  3000               	movlw	0
  9047  1DE6  0008               	return
  9048  1DE7                     l5964:	
  9049  1DE7  0840               	movf	strtok@s2+1,w
  9050  1DE8  00B9               	movwf	strcspn@s2+1
  9051  1DE9  083F               	movf	strtok@s2,w
  9052  1DEA  00B8               	movwf	strcspn@s2
  9053  1DEB  0844               	movf	strtok@s1,w
  9054  1DEC  319A  22C8  319D   	fcall	_strcspn
  9055  1DEF  0020               	movlb	0	; select bank0
  9056  1DF0  0838               	movf	?_strcspn,w
  9057  1DF1  00C1               	movwf	??_strtok
  9058  1DF2  0839               	movf	?_strcspn+1,w
  9059  1DF3  00C2               	movwf	??_strtok+1
  9060  1DF4  0844               	movf	strtok@s1,w
  9061  1DF5  0741               	addwf	??_strtok,w
  9062  1DF6  00C3               	movwf	??_strtok+2
  9063  1DF7  0843               	movf	??_strtok+2,w
  9064  1DF8  00D2               	movwf	strtok@sp
  9065  1DF9  0852               	movf	strtok@sp,w
  9066  1DFA  0086               	movwf	6
  9067  1DFB  3001               	movlw	1	; select bank2/3
  9068  1DFC  0087               	movwf	7
  9069  1DFD  0801               	movf	1,w
  9070  1DFE  1903               	btfsc	3,2
  9071  1DFF  2E0A               	goto	l5972
  9072  1E00  0852               	movf	strtok@sp,w
  9073  1E01  0086               	movwf	6
  9074  1E02  3001               	movlw	1	; select bank2/3
  9075  1E03  0087               	movwf	7
  9076  1E04  0181               	clrf	1
  9077  1E05  3001               	movlw	1
  9078  1E06  00C1               	movwf	??_strtok
  9079  1E07  0841               	movf	??_strtok,w
  9080  1E08  07D2               	addwf	strtok@sp,f
  9081  1E09  2E0B               	goto	l5974
  9082  1E0A                     l5972:	
  9083  1E0A  01D2               	clrf	strtok@sp
  9084  1E0B                     l5974:	
  9085  1E0B  0844               	movf	strtok@s1,w
  9086  1E0C  0008               	return
  9087  1E0D                     __end_of_strtok:	
  9088                           
  9089                           	psect	text3
  9090  1AF8                     __ptext3:	
  9091 ;; *************** function _strspn *****************
  9092 ;; Defined at:
  9093 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strspn.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;  s1              1    wreg     PTR const unsigned char 
  9096 ;;		 -> readdata(20), NULL(0), 
  9097 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9098 ;;		 -> STR_56(2), STR_55(2), 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9101 ;;		 -> readdata(20), NULL(0), 
  9102 ;;  i               2   28[BANK0 ] unsigned int 
  9103 ;; Return value:  Size  Location     Type
  9104 ;;                  2   24[BANK0 ] unsigned int 
  9105 ;; Registers used:
  9106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9112 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9113 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9114 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9115 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9116 ;;Total ram usage:        7 bytes
  9117 ;; Hardware stack levels used:    1
  9118 ;; Hardware stack levels required when called:    7
  9119 ;; This function calls:
  9120 ;;		_strchr
  9121 ;; This function is called by:
  9122 ;;		_strtok
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           
  9127                           ;psect for function _strspn
  9128  1AF8                     _strspn:	
  9129                           
  9130                           ;incstack = 0
  9131                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9132                           ;strspn@s1 stored from wreg
  9133  1AF8  0020               	movlb	0	; select bank0
  9134  1AF9  00BE               	movwf	strspn@s1
  9135  1AFA  01BC               	clrf	strspn@i
  9136  1AFB  01BD               	clrf	strspn@i+1
  9137  1AFC  2B05               	goto	l5496
  9138  1AFD                     l5494:	
  9139  1AFD  3001               	movlw	1
  9140  1AFE  00BA               	movwf	??_strspn
  9141  1AFF  083A               	movf	??_strspn,w
  9142  1B00  07BE               	addwf	strspn@s1,f
  9143  1B01  3001               	movlw	1
  9144  1B02  07BC               	addwf	strspn@i,f
  9145  1B03  3000               	movlw	0
  9146  1B04  3DBD               	addwfc	strspn@i+1,f
  9147  1B05                     l5496:	
  9148  1B05  083E               	movf	strspn@s1,w
  9149  1B06  0086               	movwf	6
  9150  1B07  3001               	movlw	1	; select bank2/3
  9151  1B08  0087               	movwf	7
  9152  1B09  0801               	movf	1,w
  9153  1B0A  1903               	btfsc	3,2
  9154  1B0B  2B23               	goto	l5500
  9155  1B0C  0839               	movf	strspn@s2+1,w
  9156  1B0D  00B2               	movwf	strchr@ptr+1
  9157  1B0E  0838               	movf	strspn@s2,w
  9158  1B0F  00B1               	movwf	strchr@ptr
  9159  1B10  083E               	movf	strspn@s1,w
  9160  1B11  0086               	movwf	6
  9161  1B12  3001               	movlw	1	; select bank2/3
  9162  1B13  0087               	movwf	7
  9163  1B14  0801               	movf	1,w
  9164  1B15  00BA               	movwf	??_strspn
  9165  1B16  01BB               	clrf	??_strspn+1
  9166  1B17  083A               	movf	??_strspn,w
  9167  1B18  00B3               	movwf	strchr@chr
  9168  1B19  083B               	movf	??_strspn+1,w
  9169  1B1A  00B4               	movwf	strchr@chr+1
  9170  1B1B  31A7  2714  319A   	fcall	_strchr
  9171  1B1E  0020               	movlb	0	; select bank0
  9172  1B1F  0831               	movf	?_strchr,w
  9173  1B20  0432               	iorwf	?_strchr+1,w
  9174  1B21  1D03               	btfss	3,2
  9175  1B22  2AFD               	goto	l5494
  9176  1B23                     l5500:	
  9177  1B23  083D               	movf	strspn@i+1,w
  9178  1B24  00B9               	movwf	?_strspn+1
  9179  1B25  083C               	movf	strspn@i,w
  9180  1B26  00B8               	movwf	?_strspn
  9181  1B27  0008               	return
  9182  1B28                     __end_of_strspn:	
  9183                           
  9184                           	psect	text4
  9185  1AC8                     __ptext4:	
  9186 ;; *************** function _strcspn *****************
  9187 ;; Defined at:
  9188 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcspn.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  s1              1    wreg     PTR const unsigned char 
  9191 ;;		 -> readdata(20), NULL(0), 
  9192 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9193 ;;		 -> STR_56(2), STR_55(2), 
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9196 ;;		 -> readdata(20), NULL(0), 
  9197 ;;  i               2   28[BANK0 ] unsigned int 
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  2   24[BANK0 ] unsigned int 
  9200 ;; Registers used:
  9201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9202 ;; Tracked objects:
  9203 ;;		On entry : 0/0
  9204 ;;		On exit  : 0/0
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9207 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9208 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9209 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9210 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9211 ;;Total ram usage:        7 bytes
  9212 ;; Hardware stack levels used:    1
  9213 ;; Hardware stack levels required when called:    7
  9214 ;; This function calls:
  9215 ;;		_strchr
  9216 ;; This function is called by:
  9217 ;;		_strtok
  9218 ;; This function uses a non-reentrant model
  9219 ;;
  9220                           
  9221                           
  9222                           ;psect for function _strcspn
  9223  1AC8                     _strcspn:	
  9224                           
  9225                           ;incstack = 0
  9226                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9227                           ;strcspn@s1 stored from wreg
  9228  1AC8  0020               	movlb	0	; select bank0
  9229  1AC9  00BE               	movwf	strcspn@s1
  9230  1ACA  01BC               	clrf	strcspn@i
  9231  1ACB  01BD               	clrf	strcspn@i+1
  9232  1ACC  2AD5               	goto	l5508
  9233  1ACD                     l5506:	
  9234  1ACD  3001               	movlw	1
  9235  1ACE  00BA               	movwf	??_strcspn
  9236  1ACF  083A               	movf	??_strcspn,w
  9237  1AD0  07BE               	addwf	strcspn@s1,f
  9238  1AD1  3001               	movlw	1
  9239  1AD2  07BC               	addwf	strcspn@i,f
  9240  1AD3  3000               	movlw	0
  9241  1AD4  3DBD               	addwfc	strcspn@i+1,f
  9242  1AD5                     l5508:	
  9243  1AD5  083E               	movf	strcspn@s1,w
  9244  1AD6  0086               	movwf	6
  9245  1AD7  3001               	movlw	1	; select bank2/3
  9246  1AD8  0087               	movwf	7
  9247  1AD9  0801               	movf	1,w
  9248  1ADA  1903               	btfsc	3,2
  9249  1ADB  2AF3               	goto	l5512
  9250  1ADC  0839               	movf	strcspn@s2+1,w
  9251  1ADD  00B2               	movwf	strchr@ptr+1
  9252  1ADE  0838               	movf	strcspn@s2,w
  9253  1ADF  00B1               	movwf	strchr@ptr
  9254  1AE0  083E               	movf	strcspn@s1,w
  9255  1AE1  0086               	movwf	6
  9256  1AE2  3001               	movlw	1	; select bank2/3
  9257  1AE3  0087               	movwf	7
  9258  1AE4  0801               	movf	1,w
  9259  1AE5  00BA               	movwf	??_strcspn
  9260  1AE6  01BB               	clrf	??_strcspn+1
  9261  1AE7  083A               	movf	??_strcspn,w
  9262  1AE8  00B3               	movwf	strchr@chr
  9263  1AE9  083B               	movf	??_strcspn+1,w
  9264  1AEA  00B4               	movwf	strchr@chr+1
  9265  1AEB  31A7  2714  319A   	fcall	_strchr
  9266  1AEE  0020               	movlb	0	; select bank0
  9267  1AEF  0831               	movf	?_strchr,w
  9268  1AF0  0432               	iorwf	?_strchr+1,w
  9269  1AF1  1903               	btfsc	3,2
  9270  1AF2  2ACD               	goto	l5506
  9271  1AF3                     l5512:	
  9272  1AF3  083D               	movf	strcspn@i+1,w
  9273  1AF4  00B9               	movwf	?_strcspn+1
  9274  1AF5  083C               	movf	strcspn@i,w
  9275  1AF6  00B8               	movwf	?_strcspn
  9276  1AF7  0008               	return
  9277  1AF8                     __end_of_strcspn:	
  9278                           
  9279                           	psect	text5
  9280  2714                     __ptext5:	
  9281 ;; *************** function _strchr *****************
  9282 ;; Defined at:
  9283 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;  ptr             2   17[BANK0 ] PTR const unsigned char 
  9286 ;;		 -> STR_56(2), STR_55(2), 
  9287 ;;  chr             2   19[BANK0 ] int 
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;		None
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  2   17[BANK0 ] PTR unsigned char 
  9292 ;; Registers used:
  9293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9294 ;; Tracked objects:
  9295 ;;		On entry : 0/0
  9296 ;;		On exit  : 0/0
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9299 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9301 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9302 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9303 ;;Total ram usage:        7 bytes
  9304 ;; Hardware stack levels used:    1
  9305 ;; Hardware stack levels required when called:    6
  9306 ;; This function calls:
  9307 ;;		Nothing
  9308 ;; This function is called by:
  9309 ;;		_strcspn
  9310 ;;		_strspn
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           
  9315                           ;psect for function _strchr
  9316  2714                     _strchr:	
  9317  2714                     l1963:	
  9318                           ;incstack = 0
  9319                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  9320                           
  9321  2714  0020               	movlb	0	; select bank0
  9322  2715  0831               	movf	strchr@ptr,w
  9323  2716  0084               	movwf	4
  9324  2717  0832               	movf	strchr@ptr+1,w
  9325  2718  0085               	movwf	5
  9326  2719  0800               	movf	0,w	;code access
  9327  271A  0633               	xorwf	strchr@chr,w
  9328  271B  1903               	btfsc	3,2
  9329  271C  0008               	return
  9330  271D  0832               	movf	strchr@ptr+1,w
  9331  271E  00B6               	movwf	??_strchr+1
  9332  271F  0831               	movf	strchr@ptr,w
  9333  2720  00B5               	movwf	??_strchr
  9334  2721  0AB1               	incf	strchr@ptr,f
  9335  2722  1903               	skipnz
  9336  2723  0AB2               	incf	strchr@ptr+1,f
  9337  2724  0835               	movf	??_strchr,w
  9338  2725  0084               	movwf	4
  9339  2726  0836               	movf	??_strchr+1,w
  9340  2727  0085               	movwf	5
  9341  2728  0012               	moviw fsr0++
  9342  2729  1D03               	btfss	3,2
  9343  272A  2F14               	goto	l1963
  9344  272B  01B1               	clrf	?_strchr
  9345  272C  01B2               	clrf	?_strchr+1
  9346  272D  0008               	return
  9347  272E                     __end_of_strchr:	
  9348                           
  9349                           	psect	text6
  9350  13CC                     __ptext6:	
  9351 ;; *************** function _stricmp *****************
  9352 ;; Defined at:
  9353 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\stricmp.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;  s1              1    wreg     PTR const unsigned char 
  9356 ;;		 -> readdata(20), NULL(0), 
  9357 ;;  s2              2   19[BANK0 ] PTR const unsigned char 
  9358 ;;		 -> STR_76(5), STR_75(5), STR_74(8), STR_73(5), 
  9359 ;;		 -> STR_72(5), STR_71(13), STR_70(7), STR_69(8), 
  9360 ;;		 -> STR_68(15), STR_67(14), STR_66(12), STR_65(8), 
  9361 ;;		 -> STR_64(8), STR_63(2), STR_62(5), STR_61(5), 
  9362 ;;		 -> STR_60(2), STR_59(4), STR_58(4), STR_57(4), 
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;  s1              1   24[BANK0 ] PTR const unsigned char 
  9365 ;;		 -> readdata(20), NULL(0), 
  9366 ;;  r               1   23[BANK0 ] char 
  9367 ;; Return value:  Size  Location     Type
  9368 ;;                  2   19[BANK0 ] int 
  9369 ;; Registers used:
  9370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9371 ;; Tracked objects:
  9372 ;;		On entry : 0/0
  9373 ;;		On exit  : 0/0
  9374 ;;		Unchanged: 0/0
  9375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9377 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9378 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9379 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9380 ;;Total ram usage:        6 bytes
  9381 ;; Hardware stack levels used:    1
  9382 ;; Hardware stack levels required when called:    7
  9383 ;; This function calls:
  9384 ;;		_toupper
  9385 ;; This function is called by:
  9386 ;;		_parseCmd
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           
  9391                           ;psect for function _stricmp
  9392  13CC                     _stricmp:	
  9393                           
  9394                           ;incstack = 0
  9395                           ; Regs used in _stricmp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9396                           ;stricmp@s1 stored from wreg
  9397  13CC  0020               	movlb	0	; select bank0
  9398  13CD  00B8               	movwf	stricmp@s1
  9399  13CE  2BD7               	goto	l5982
  9400  13CF                     l5980:	
  9401  13CF  3001               	movlw	1
  9402  13D0  00B5               	movwf	??_stricmp
  9403  13D1  0835               	movf	??_stricmp,w
  9404  13D2  07B8               	addwf	stricmp@s1,f
  9405  13D3  3001               	movlw	1
  9406  13D4  07B3               	addwf	stricmp@s2,f
  9407  13D5  3000               	movlw	0
  9408  13D6  3DB4               	addwfc	stricmp@s2+1,f
  9409  13D7                     l5982:	
  9410  13D7  0833               	movf	stricmp@s2,w
  9411  13D8  0084               	movwf	4
  9412  13D9  0834               	movf	stricmp@s2+1,w
  9413  13DA  0085               	movwf	5
  9414  13DB  0800               	movf	0,w	;code access
  9415  13DC  31A6  2648  3193   	fcall	_toupper
  9416  13DF  3AFF               	xorlw	255
  9417  13E0  3E01               	addlw	1
  9418  13E1  0020               	movlb	0	; select bank0
  9419  13E2  00B5               	movwf	??_stricmp
  9420  13E3  0838               	movf	stricmp@s1,w
  9421  13E4  0086               	movwf	6
  9422  13E5  3001               	movlw	1	; select bank2/3
  9423  13E6  0087               	movwf	7
  9424  13E7  0801               	movf	1,w
  9425  13E8  31A6  2648  3193   	fcall	_toupper
  9426  13EB  0020               	movlb	0	; select bank0
  9427  13EC  0735               	addwf	??_stricmp,w
  9428  13ED  00B6               	movwf	??_stricmp+1
  9429  13EE  0836               	movf	??_stricmp+1,w
  9430  13EF  00B7               	movwf	stricmp@r
  9431  13F0  0837               	movf	stricmp@r,w
  9432  13F1  1D03               	btfss	3,2
  9433  13F2  2BFA               	goto	l5986
  9434  13F3  0838               	movf	stricmp@s1,w
  9435  13F4  0086               	movwf	6
  9436  13F5  3001               	movlw	1	; select bank2/3
  9437  13F6  0087               	movwf	7
  9438  13F7  0801               	movf	1,w
  9439  13F8  1D03               	btfss	3,2
  9440  13F9  2BCF               	goto	l5980
  9441  13FA                     l5986:	
  9442  13FA  0837               	movf	stricmp@r,w
  9443  13FB  00B3               	movwf	?_stricmp
  9444  13FC  01B4               	clrf	?_stricmp+1
  9445  13FD  1BB3               	btfsc	?_stricmp,7
  9446  13FE  03B4               	decf	?_stricmp+1,f
  9447  13FF  0008               	return
  9448  1400                     __end_of_stricmp:	
  9449                           
  9450                           	psect	text7
  9451  2648                     __ptext7:	
  9452 ;; *************** function _toupper *****************
  9453 ;; Defined at:
  9454 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;  c               1    wreg     unsigned char 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  c               1   18[BANK0 ] unsigned char 
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  1    wreg      unsigned char 
  9461 ;; Registers used:
  9462 ;;		wreg, status,2, status,0
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9470 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9471 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9472 ;;Total ram usage:        2 bytes
  9473 ;; Hardware stack levels used:    1
  9474 ;; Hardware stack levels required when called:    6
  9475 ;; This function calls:
  9476 ;;		Nothing
  9477 ;; This function is called by:
  9478 ;;		_stricmp
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           
  9483                           ;psect for function _toupper
  9484  2648                     _toupper:	
  9485                           
  9486                           ;incstack = 0
  9487                           ; Regs used in _toupper: [wreg+status,2+status,0]
  9488                           ;toupper@c stored from wreg
  9489  2648  0020               	movlb	0	; select bank0
  9490  2649  00B2               	movwf	toupper@c
  9491  264A  307B               	movlw	123
  9492  264B  0232               	subwf	toupper@c,w
  9493  264C  1803               	skipnc
  9494  264D  2E56               	goto	l5488
  9495  264E  3061               	movlw	97
  9496  264F  0232               	subwf	toupper@c,w
  9497  2650  1C03               	skipc
  9498  2651  2E56               	goto	l5488
  9499  2652  30DF               	movlw	223
  9500  2653  00B1               	movwf	??_toupper
  9501  2654  0831               	movf	??_toupper,w
  9502  2655  05B2               	andwf	toupper@c,f
  9503  2656                     l5488:	
  9504  2656  0832               	movf	toupper@c,w
  9505  2657  0008               	return
  9506  2658                     __end_of_toupper:	
  9507                           
  9508                           	psect	text8
  9509  178F                     __ptext8:	
  9510 ;; *************** function _atoi *****************
  9511 ;; Defined at:
  9512 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;  s               1    wreg     PTR const unsigned char 
  9515 ;;		 -> readdata(20), NULL(0), 
  9516 ;; Auto vars:     Size  Location     Type
  9517 ;;  s               1   30[BANK0 ] PTR const unsigned char 
  9518 ;;		 -> readdata(20), NULL(0), 
  9519 ;;  a               2   28[BANK0 ] int 
  9520 ;;  sign            1   27[BANK0 ] unsigned char 
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  2   23[BANK0 ] int 
  9523 ;; Registers used:
  9524 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9531 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9532 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9533 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9534 ;;Total ram usage:        8 bytes
  9535 ;; Hardware stack levels used:    1
  9536 ;; Hardware stack levels required when called:    7
  9537 ;; This function calls:
  9538 ;;		___wmul
  9539 ;;		_isdigit
  9540 ;; This function is called by:
  9541 ;;		_parseCmd
  9542 ;; This function uses a non-reentrant model
  9543 ;;
  9544                           
  9545                           
  9546                           ;psect for function _atoi
  9547  178F                     _atoi:	
  9548                           
  9549                           ;incstack = 0
  9550                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9551                           ;atoi@s stored from wreg
  9552  178F  0020               	movlb	0	; select bank0
  9553  1790  00BE               	movwf	atoi@s
  9554  1791                     l5994:	
  9555  1791  083E               	movf	atoi@s,w
  9556  1792  0086               	movwf	6
  9557  1793  3001               	movlw	1	; select bank2/3
  9558  1794  0087               	movwf	7
  9559  1795  3020               	movlw	32
  9560  1796  0601               	xorwf	1,w
  9561  1797  1D03               	btfss	3,2
  9562  1798  2F9E               	goto	l5996
  9563  1799                     l5992:	
  9564  1799  3001               	movlw	1
  9565  179A  00B9               	movwf	??_atoi
  9566  179B  0839               	movf	??_atoi,w
  9567  179C  07BE               	addwf	atoi@s,f
  9568  179D  2F91               	goto	l5994
  9569  179E                     l5996:	
  9570  179E  083E               	movf	atoi@s,w
  9571  179F  0086               	movwf	6
  9572  17A0  3001               	movlw	1	; select bank2/3
  9573  17A1  0087               	movwf	7
  9574  17A2  3009               	movlw	9
  9575  17A3  0601               	xorwf	1,w
  9576  17A4  1903               	btfsc	3,2
  9577  17A5  2F99               	goto	l5992
  9578  17A6  01BC               	clrf	atoi@a
  9579  17A7  01BD               	clrf	atoi@a+1
  9580  17A8  01BB               	clrf	atoi@sign
  9581  17A9  083E               	movf	atoi@s,w
  9582  17AA  0086               	movwf	6
  9583  17AB  3001               	movlw	1	; select bank2/3
  9584  17AC  0087               	movwf	7
  9585  17AD  302D               	movlw	45
  9586  17AE  0601               	xorwf	1,w
  9587  17AF  1D03               	btfss	3,2
  9588  17B0  2FB6               	goto	l6004
  9589  17B1  3001               	movlw	1
  9590  17B2  00B9               	movwf	??_atoi
  9591  17B3  0839               	movf	??_atoi,w
  9592  17B4  07BB               	addwf	atoi@sign,f
  9593  17B5  2FBE               	goto	l6010
  9594  17B6                     l6004:	
  9595  17B6  083E               	movf	atoi@s,w
  9596  17B7  0086               	movwf	6
  9597  17B8  3001               	movlw	1	; select bank2/3
  9598  17B9  0087               	movwf	7
  9599  17BA  302B               	movlw	43
  9600  17BB  0601               	xorwf	1,w
  9601  17BC  1D03               	btfss	3,2
  9602  17BD  2FC2               	goto	l6012
  9603  17BE                     l6010:	
  9604  17BE  3001               	movlw	1
  9605  17BF  00B9               	movwf	??_atoi
  9606  17C0  0839               	movf	??_atoi,w
  9607  17C1  07BE               	addwf	atoi@s,f
  9608  17C2                     l6012:	
  9609  17C2  083E               	movf	atoi@s,w
  9610  17C3  0086               	movwf	6
  9611  17C4  3001               	movlw	1	; select bank2/3
  9612  17C5  0087               	movwf	7
  9613  17C6  0801               	movf	1,w
  9614  17C7  31A6  2639  3197   	fcall	_isdigit
  9615  17CA  1C03               	btfss	3,0
  9616  17CB  2FEB               	goto	l6014
  9617  17CC  0020               	movlb	0	; select bank0
  9618  17CD  083D               	movf	atoi@a+1,w
  9619  17CE  00B2               	movwf	___wmul@multiplier+1
  9620  17CF  083C               	movf	atoi@a,w
  9621  17D0  00B1               	movwf	___wmul@multiplier
  9622  17D1  300A               	movlw	10
  9623  17D2  00B3               	movwf	___wmul@multiplicand
  9624  17D3  3000               	movlw	0
  9625  17D4  00B4               	movwf	___wmul@multiplicand+1
  9626  17D5  31A7  274A  3197   	fcall	___wmul
  9627  17D8  0020               	movlb	0	; select bank0
  9628  17D9  083E               	movf	atoi@s,w
  9629  17DA  0086               	movwf	6
  9630  17DB  3001               	movlw	1	; select bank2/3
  9631  17DC  0087               	movwf	7
  9632  17DD  0801               	movf	1,w
  9633  17DE  0731               	addwf	?___wmul,w
  9634  17DF  00B9               	movwf	??_atoi
  9635  17E0  0832               	movf	?___wmul+1,w
  9636  17E1  1803               	skipnc
  9637  17E2  0A32               	incf	?___wmul+1,w
  9638  17E3  00BA               	movwf	??_atoi+1
  9639  17E4  0839               	movf	??_atoi,w
  9640  17E5  3ED0               	addlw	208
  9641  17E6  00BC               	movwf	atoi@a
  9642  17E7  30FF               	movlw	255
  9643  17E8  3D3A               	addwfc	??_atoi+1,w
  9644  17E9  00BD               	movwf	atoi@a+1
  9645  17EA  2FBE               	goto	l6010
  9646  17EB                     l6014:	
  9647  17EB  0020               	movlb	0	; select bank0
  9648  17EC  083B               	movf	atoi@sign,w
  9649  17ED  1903               	btfsc	3,2
  9650  17EE  2FFB               	goto	l6020
  9651  17EF  093C               	comf	atoi@a,w
  9652  17F0  00B9               	movwf	??_atoi
  9653  17F1  093D               	comf	atoi@a+1,w
  9654  17F2  00BA               	movwf	??_atoi+1
  9655  17F3  0AB9               	incf	??_atoi,f
  9656  17F4  1903               	skipnz
  9657  17F5  0ABA               	incf	??_atoi+1,f
  9658  17F6  0839               	movf	??_atoi,w
  9659  17F7  00B7               	movwf	?_atoi
  9660  17F8  083A               	movf	??_atoi+1,w
  9661  17F9  00B8               	movwf	?_atoi+1
  9662  17FA  0008               	return
  9663  17FB                     l6020:	
  9664  17FB  083D               	movf	atoi@a+1,w
  9665  17FC  00B8               	movwf	?_atoi+1
  9666  17FD  083C               	movf	atoi@a,w
  9667  17FE  00B7               	movwf	?_atoi
  9668  17FF  0008               	return
  9669  1800                     __end_of_atoi:	
  9670                           
  9671                           	psect	text9
  9672  2639                     __ptext9:	
  9673 ;; *************** function _isdigit *****************
  9674 ;; Defined at:
  9675 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;  c               1    wreg     unsigned char 
  9678 ;; Auto vars:     Size  Location     Type
  9679 ;;  c               1   18[BANK0 ] unsigned char 
  9680 ;; Return value:  Size  Location     Type
  9681 ;;		None               void
  9682 ;; Registers used:
  9683 ;;		wreg, status,2, status,0
  9684 ;; Tracked objects:
  9685 ;;		On entry : 0/0
  9686 ;;		On exit  : 0/0
  9687 ;;		Unchanged: 0/0
  9688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9690 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9692 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9693 ;;Total ram usage:        2 bytes
  9694 ;; Hardware stack levels used:    1
  9695 ;; Hardware stack levels required when called:    6
  9696 ;; This function calls:
  9697 ;;		Nothing
  9698 ;; This function is called by:
  9699 ;;		_atoi
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703                           
  9704                           ;psect for function _isdigit
  9705  2639                     _isdigit:	
  9706                           
  9707                           ;incstack = 0
  9708                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9709                           ;isdigit@c stored from wreg
  9710  2639  0020               	movlb	0	; select bank0
  9711  263A  00B2               	movwf	isdigit@c
  9712  263B  01B1               	clrf	_isdigit$2092
  9713  263C  303A               	movlw	58
  9714  263D  0232               	subwf	isdigit@c,w
  9715  263E  1803               	skipnc
  9716  263F  2E46               	goto	l5304
  9717  2640  3030               	movlw	48
  9718  2641  0232               	subwf	isdigit@c,w
  9719  2642  1C03               	skipc
  9720  2643  2E46               	goto	l5304
  9721  2644  01B1               	clrf	_isdigit$2092
  9722  2645  0AB1               	incf	_isdigit$2092,f
  9723  2646                     l5304:	
  9724  2646  0C31               	rrf	_isdigit$2092,w
  9725  2647  0008               	return
  9726  2648                     __end_of_isdigit:	
  9727                           
  9728                           	psect	text10
  9729  274A                     __ptext10:	
  9730 ;; *************** function ___wmul *****************
  9731 ;; Defined at:
  9732 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;  multiplier      2   17[BANK0 ] unsigned int 
  9735 ;;  multiplicand    2   19[BANK0 ] unsigned int 
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;  product         2   21[BANK0 ] unsigned int 
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  2   17[BANK0 ] unsigned int 
  9740 ;; Registers used:
  9741 ;;		wreg, status,2, status,0
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9747 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9748 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9750 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9751 ;;Total ram usage:        6 bytes
  9752 ;; Hardware stack levels used:    1
  9753 ;; Hardware stack levels required when called:    6
  9754 ;; This function calls:
  9755 ;;		Nothing
  9756 ;; This function is called by:
  9757 ;;		_atoi
  9758 ;; This function uses a non-reentrant model
  9759 ;;
  9760                           
  9761                           
  9762                           ;psect for function ___wmul
  9763  274A                     ___wmul:	
  9764                           
  9765                           ;incstack = 0
  9766                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9767  274A  0020               	movlb	0	; select bank0
  9768  274B  01B5               	clrf	___wmul@product
  9769  274C  01B6               	clrf	___wmul@product+1
  9770  274D                     l5284:	
  9771  274D  1C31               	btfss	___wmul@multiplier,0
  9772  274E  2F53               	goto	l1490
  9773  274F  0833               	movf	___wmul@multiplicand,w
  9774  2750  07B5               	addwf	___wmul@product,f
  9775  2751  0834               	movf	___wmul@multiplicand+1,w
  9776  2752  3DB6               	addwfc	___wmul@product+1,f
  9777  2753                     l1490:	
  9778  2753  3001               	movlw	1
  9779  2754                     u4455:	
  9780  2754  35B3               	lslf	___wmul@multiplicand,f
  9781  2755  0DB4               	rlf	___wmul@multiplicand+1,f
  9782  2756  0B89               	decfsz	9,f
  9783  2757  2F54               	goto	u4455
  9784  2758  3001               	movlw	1
  9785  2759                     u4465:	
  9786  2759  36B2               	lsrf	___wmul@multiplier+1,f
  9787  275A  0CB1               	rrf	___wmul@multiplier,f
  9788  275B  0B89               	decfsz	9,f
  9789  275C  2F59               	goto	u4465
  9790  275D  0831               	movf	___wmul@multiplier,w
  9791  275E  0432               	iorwf	___wmul@multiplier+1,w
  9792  275F  1D03               	btfss	3,2
  9793  2760  2F4D               	goto	l5284
  9794  2761  0836               	movf	___wmul@product+1,w
  9795  2762  00B2               	movwf	?___wmul+1
  9796  2763  0835               	movf	___wmul@product,w
  9797  2764  00B1               	movwf	?___wmul
  9798  2765  0008               	return
  9799  2766                     __end_of___wmul:	
  9800                           
  9801                           	psect	text11
  9802  0AC3                     __ptext11:	
  9803 ;; *************** function _initialize *****************
  9804 ;; Defined at:
  9805 ;;		line 188 in file "main.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;		None
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      void 
  9812 ;; Registers used:
  9813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9821 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9822 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9823 ;;Total ram usage:        2 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; Hardware stack levels required when called:    9
  9826 ;; This function calls:
  9827 ;;		_LEDsPwr
  9828 ;;		_TMR0_Load8bitPeriod
  9829 ;;		_TMR2_LoadPeriodRegister
  9830 ;;		___awtoft
  9831 ;;		___ftadd
  9832 ;;		___ftmul
  9833 ;;		___fttol
  9834 ;;		_printf
  9835 ;; This function is called by:
  9836 ;;		_main
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           
  9841                           ;psect for function _initialize
  9842  0AC3                     _initialize:	
  9843                           
  9844                           ;main.c: 190: LEDsPwr(LEDpower, 1);
  9845                           
  9846                           ;incstack = 0
  9847                           ; Regs used in _initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9848  0AC3  302B               	movlw	low (_LEDpower| (0+32768))
  9849  0AC4  0084               	movwf	4
  9850  0AC5  30AA               	movlw	high (_LEDpower| (0+32768))
  9851  0AC6  0085               	movwf	5
  9852  0AC7  3F00               	moviw [0]fsr0
  9853  0AC8  0020               	movlb	0	; select bank0
  9854  0AC9  00C4               	movwf	LEDsPwr@pwr
  9855  0ACA  3F01               	moviw [1]fsr0
  9856  0ACB  00C5               	movwf	LEDsPwr@pwr+1
  9857  0ACC  3001               	movlw	1
  9858  0ACD  00C6               	movwf	LEDsPwr@topOrBottom
  9859  0ACE  3000               	movlw	0
  9860  0ACF  00C7               	movwf	LEDsPwr@topOrBottom+1
  9861  0AD0  3195  2583  318A   	fcall	_LEDsPwr
  9862                           
  9863                           ;main.c: 191: LEDsPwr(LEDpower, 2);
  9864  0AD3  302B               	movlw	low (_LEDpower| (0+32768))
  9865  0AD4  0084               	movwf	4
  9866  0AD5  30AA               	movlw	high (_LEDpower| (0+32768))
  9867  0AD6  0085               	movwf	5
  9868  0AD7  3F00               	moviw [0]fsr0
  9869  0AD8  0020               	movlb	0	; select bank0
  9870  0AD9  00C4               	movwf	LEDsPwr@pwr
  9871  0ADA  3F01               	moviw [1]fsr0
  9872  0ADB  00C5               	movwf	LEDsPwr@pwr+1
  9873  0ADC  3002               	movlw	2
  9874  0ADD  00C6               	movwf	LEDsPwr@topOrBottom
  9875  0ADE  3000               	movlw	0
  9876  0ADF  00C7               	movwf	LEDsPwr@topOrBottom+1
  9877  0AE0  3195  2583  318A   	fcall	_LEDsPwr
  9878                           
  9879                           ;main.c: 194: TMR2_LoadPeriodRegister((heater_post_time_ms*TMR2_RANGE)-1);
  9880  0AE3  0020               	movlb	0	; select bank0
  9881  0AE4  085B               	movf	_heater_post_time_ms+1,w
  9882  0AE5  00BA               	movwf	___awtoft@c+1
  9883  0AE6  085A               	movf	_heater_post_time_ms,w
  9884  0AE7  00B9               	movwf	___awtoft@c
  9885  0AE8  3198  20A1  318A   	fcall	___awtoft
  9886  0AEB  0020               	movlb	0	; select bank0
  9887  0AEC  0839               	movf	?___awtoft,w
  9888  0AED  00C2               	movwf	___ftmul@f2
  9889  0AEE  083A               	movf	?___awtoft+1,w
  9890  0AEF  00C3               	movwf	___ftmul@f2+1
  9891  0AF0  083B               	movf	?___awtoft+2,w
  9892  0AF1  00C4               	movwf	___ftmul@f2+2
  9893  0AF2  301F               	movlw	low (_TMR2_RANGE| (0+32768))
  9894  0AF3  0084               	movwf	4
  9895  0AF4  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
  9896  0AF5  0085               	movwf	5
  9897  0AF6  3F00               	moviw [0]fsr0
  9898  0AF7  00BF               	movwf	___ftmul@f1
  9899  0AF8  3F01               	moviw [1]fsr0
  9900  0AF9  00C0               	movwf	___ftmul@f1+1
  9901  0AFA  3F02               	moviw [2]fsr0
  9902  0AFB  00C1               	movwf	___ftmul@f1+2
  9903  0AFC  318D  2523  318A   	fcall	___ftmul
  9904  0AFF  0020               	movlb	0	; select bank0
  9905  0B00  083F               	movf	?___ftmul,w
  9906  0B01  0021               	movlb	1	; select bank1
  9907  0B02  00A9               	movwf	___ftadd@f2^(0+128)
  9908  0B03  0020               	movlb	0	; select bank0
  9909  0B04  0840               	movf	?___ftmul+1,w
  9910  0B05  0021               	movlb	1	; select bank1
  9911  0B06  00AA               	movwf	(___ftadd@f2+1)^(0+128)
  9912  0B07  0020               	movlb	0	; select bank0
  9913  0B08  0841               	movf	?___ftmul+2,w
  9914  0B09  0021               	movlb	1	; select bank1
  9915  0B0A  00AB               	movwf	(___ftadd@f2+2)^(0+128)
  9916  0B0B  3000               	movlw	0
  9917  0B0C  00A6               	movwf	___ftadd@f1^(0+128)
  9918  0B0D  3080               	movlw	128
  9919  0B0E  00A7               	movwf	(___ftadd@f1+1)^(0+128)
  9920  0B0F  30BF               	movlw	191
  9921  0B10  00A8               	movwf	(___ftadd@f1+2)^(0+128)
  9922  0B11  318E  26E6  318A   	fcall	___ftadd
  9923  0B14  0021               	movlb	1	; select bank1
  9924  0B15  0826               	movf	?___ftadd^(0+128),w
  9925  0B16  00AF               	movwf	___fttol@f1^(0+128)
  9926  0B17  0827               	movf	(?___ftadd+1)^(0+128),w
  9927  0B18  00B0               	movwf	(___fttol@f1+1)^(0+128)
  9928  0B19  0828               	movf	(?___ftadd+2)^(0+128),w
  9929  0B1A  00B1               	movwf	(___fttol@f1+2)^(0+128)
  9930  0B1B  318A  223C  318A   	fcall	___fttol
  9931  0B1E  0021               	movlb	1	; select bank1
  9932  0B1F  082F               	movf	?___fttol^(0+128),w
  9933  0B20  31A4  24EC  318A   	fcall	_TMR2_LoadPeriodRegister
  9934                           
  9935                           ;main.c: 195: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
  9936  0B23  0020               	movlb	0	; select bank0
  9937  0B24  095C               	comf	_heater_pre_time_ms,w
  9938  0B25  0021               	movlb	1	; select bank1
  9939  0B26  00BD               	movwf	??_initialize^(0+128)
  9940  0B27  0020               	movlb	0	; select bank0
  9941  0B28  095D               	comf	_heater_pre_time_ms+1,w
  9942  0B29  0021               	movlb	1	; select bank1
  9943  0B2A  00BE               	movwf	(??_initialize^(0+128)+1)
  9944  0B2B  0ABD               	incf	??_initialize^(0+128),f
  9945  0B2C  1903               	skipnz
  9946  0B2D  0ABE               	incf	(??_initialize^(0+128)+1),f
  9947  0B2E  0020               	movlb	0	; select bank0
  9948  0B2F  0858               	movf	_piezo_on_time_ms,w
  9949  0B30  0021               	movlb	1	; select bank1
  9950  0B31  073D               	addwf	??_initialize^(0+128),w
  9951  0B32  0020               	movlb	0	; select bank0
  9952  0B33  00B9               	movwf	___awtoft@c
  9953  0B34  0859               	movf	_piezo_on_time_ms+1,w
  9954  0B35  0021               	movlb	1	; select bank1
  9955  0B36  3D3E               	addwfc	(??_initialize+1)^(0+128),w
  9956  0B37  0020               	movlb	0	; select bank0
  9957  0B38  00BA               	movwf	___awtoft@c+1
  9958  0B39  3198  20A1  318A   	fcall	___awtoft
  9959  0B3C  0020               	movlb	0	; select bank0
  9960  0B3D  0839               	movf	?___awtoft,w
  9961  0B3E  00C2               	movwf	___ftmul@f2
  9962  0B3F  083A               	movf	?___awtoft+1,w
  9963  0B40  00C3               	movwf	___ftmul@f2+1
  9964  0B41  083B               	movf	?___awtoft+2,w
  9965  0B42  00C4               	movwf	___ftmul@f2+2
  9966  0B43  3022               	movlw	low (_TMR0_RANGE| (0+32768))
  9967  0B44  0084               	movwf	4
  9968  0B45  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
  9969  0B46  0085               	movwf	5
  9970  0B47  3F00               	moviw [0]fsr0
  9971  0B48  00BF               	movwf	___ftmul@f1
  9972  0B49  3F01               	moviw [1]fsr0
  9973  0B4A  00C0               	movwf	___ftmul@f1+1
  9974  0B4B  3F02               	moviw [2]fsr0
  9975  0B4C  00C1               	movwf	___ftmul@f1+2
  9976  0B4D  318D  2523  318A   	fcall	___ftmul
  9977  0B50  0020               	movlb	0	; select bank0
  9978  0B51  083F               	movf	?___ftmul,w
  9979  0B52  0021               	movlb	1	; select bank1
  9980  0B53  00A9               	movwf	___ftadd@f2^(0+128)
  9981  0B54  0020               	movlb	0	; select bank0
  9982  0B55  0840               	movf	?___ftmul+1,w
  9983  0B56  0021               	movlb	1	; select bank1
  9984  0B57  00AA               	movwf	(___ftadd@f2+1)^(0+128)
  9985  0B58  0020               	movlb	0	; select bank0
  9986  0B59  0841               	movf	?___ftmul+2,w
  9987  0B5A  0021               	movlb	1	; select bank1
  9988  0B5B  00AB               	movwf	(___ftadd@f2+2)^(0+128)
  9989  0B5C  3000               	movlw	0
  9990  0B5D  00A6               	movwf	___ftadd@f1^(0+128)
  9991  0B5E  3080               	movlw	128
  9992  0B5F  00A7               	movwf	(___ftadd@f1+1)^(0+128)
  9993  0B60  30BF               	movlw	191
  9994  0B61  00A8               	movwf	(___ftadd@f1+2)^(0+128)
  9995  0B62  318E  26E6  318A   	fcall	___ftadd
  9996  0B65  0021               	movlb	1	; select bank1
  9997  0B66  0826               	movf	?___ftadd^(0+128),w
  9998  0B67  00AF               	movwf	___fttol@f1^(0+128)
  9999  0B68  0827               	movf	(?___ftadd+1)^(0+128),w
 10000  0B69  00B0               	movwf	(___fttol@f1+1)^(0+128)
 10001  0B6A  0828               	movf	(?___ftadd+2)^(0+128),w
 10002  0B6B  00B1               	movwf	(___fttol@f1+2)^(0+128)
 10003  0B6C  318A  223C  318A   	fcall	___fttol
 10004  0B6F  0021               	movlb	1	; select bank1
 10005  0B70  082F               	movf	?___fttol^(0+128),w
 10006  0B71  31A4  24E7  318A   	fcall	_TMR0_Load8bitPeriod
 10007                           
 10008                           ;main.c: 199: printf("initialized\n");
 10009  0B74  305D               	movlw	low (STR_5| (0+32768))
 10010  0B75  0021               	movlb	1	; select bank1
 10011  0B76  00A0               	movwf	printf@f^(0+128)
 10012  0B77  30A9               	movlw	high (STR_5| (0+32768))
 10013  0B78  00A1               	movwf	(printf@f^(0+128)+1)
 10014  0B79  3186  2618         	fcall	_printf
 10015  0B7B  0008               	return
 10016  0B7C                     __end_of_initialize:	
 10017                           
 10018                           	psect	text12
 10019  02EA                     __ptext12:	
 10020 ;; *************** function _execCmd *****************
 10021 ;; Defined at:
 10022 ;;		line 68 in file "cmd_parser.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;  s               1    wreg     PTR struct CMD_STRUCT
 10025 ;;		 -> cmd_struct(21), 
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;  s               1    1[BANK3 ] PTR struct CMD_STRUCT
 10028 ;;		 -> cmd_struct(21), 
 10029 ;; Return value:  Size  Location     Type
 10030 ;;                  2  922[None  ] int 
 10031 ;; Registers used:
 10032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10033 ;; Tracked objects:
 10034 ;;		On entry : 0/0
 10035 ;;		On exit  : 0/0
 10036 ;;		Unchanged: 0/0
 10037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10039 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10041 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10042 ;;Total ram usage:        1 bytes
 10043 ;; Hardware stack levels used:    1
 10044 ;; Hardware stack levels required when called:   14
 10045 ;; This function calls:
 10046 ;;		_commCheck
 10047 ;;		_getActive
 10048 ;;		_getMotionStatus
 10049 ;;		_getMoveMask
 10050 ;;		_getPosition
 10051 ;;		_printf
 10052 ;;		_setActive
 10053 ;;		_setDrvGain
 10054 ;;		_setDrvPeak
 10055 ;;		_setDrvPiezoOnTime
 10056 ;;		_setHeaterPostTime
 10057 ;;		_setHeaterPreTime
 10058 ;;		_setHeaterToggle
 10059 ;;		_setLEDBrightnessRange
 10060 ;;		_setLEDPwr
 10061 ;;		_setMoveMask
 10062 ;;		_startAbsMove
 10063 ;;		_startRelMove
 10064 ;;		_zeroPosition
 10065 ;; This function is called by:
 10066 ;;		_main
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           
 10070                           
 10071                           ;psect for function _execCmd
 10072  02EA                     _execCmd:	
 10073                           
 10074                           ;incstack = 0
 10075                           ; Regs used in _execCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10076                           ;execCmd@s stored from wreg
 10077  02EA  0023               	movlb	3	; select bank3
 10078  02EB  00ED               	movwf	execCmd@s^(0+384)
 10079                           
 10080                           ;cmd_parser.c: 69: errorOut = 1;
 10081  02EC  3001               	movlw	1
 10082  02ED  0022               	movlb	2	; select bank2
 10083  02EE  00EA               	movwf	_errorOut^(0+256)
 10084  02EF  3000               	movlw	0
 10085  02F0  00EB               	movwf	(_errorOut^(0+256)+1)
 10086                           
 10087                           ;cmd_parser.c: 70: switch(s->c){
 10088  02F1  2C81               	goto	l8104
 10089  02F2                     l8064:	
 10090                           ;cmd_parser.c: 71: case CMD_REL: errorOut = startRelMove(s->p1.paramI); break;
 10091                           
 10092  02F2  0023               	movlb	3	; select bank3
 10093  02F3  0A6D               	incf	execCmd@s^(0+384),w
 10094  02F4  0086               	movwf	6
 10095  02F5  3002               	movlw	2	; select bank4/5
 10096  02F6  0087               	movwf	7
 10097  02F7  3F40               	moviw [0]fsr1
 10098  02F8  0021               	movlb	1	; select bank1
 10099  02F9  00B5               	movwf	startRelMove@steps^(0+128)
 10100  02FA  3F41               	moviw [1]fsr1
 10101  02FB  00B6               	movwf	(startRelMove@steps+1)^(0+128)
 10102  02FC  31A6  267B         	fcall	_startRelMove
 10103  02FE  0021               	movlb	1	; select bank1
 10104  02FF  0836               	movf	(?_startRelMove+1)^(0+128),w
 10105  0300  0022               	movlb	2	; select bank2
 10106  0301  00EB               	movwf	(_errorOut+1)^(0+256)
 10107  0302  0021               	movlb	1	; select bank1
 10108  0303  0835               	movf	?_startRelMove^(0+128),w
 10109  0304  0022               	movlb	2	; select bank2
 10110  0305  00EA               	movwf	_errorOut^(0+256)
 10111  0306  0008               	return
 10112  0307                     l8066:	
 10113                           ;cmd_parser.c: 72: case CMD_ABS: errorOut = startAbsMove(s->p1.paramI); break;
 10114                           
 10115  0307  0023               	movlb	3	; select bank3
 10116  0308  0A6D               	incf	execCmd@s^(0+384),w
 10117  0309  0086               	movwf	6
 10118  030A  3002               	movlw	2	; select bank4/5
 10119  030B  0087               	movwf	7
 10120  030C  3F40               	moviw [0]fsr1
 10121  030D  0021               	movlb	1	; select bank1
 10122  030E  00B5               	movwf	startAbsMove@steps^(0+128)
 10123  030F  3F41               	moviw [1]fsr1
 10124  0310  00B6               	movwf	(startAbsMove@steps+1)^(0+128)
 10125  0311  31A6  26A1         	fcall	_startAbsMove
 10126  0313  0021               	movlb	1	; select bank1
 10127  0314  0836               	movf	(?_startAbsMove+1)^(0+128),w
 10128  0315  0022               	movlb	2	; select bank2
 10129  0316  00EB               	movwf	(_errorOut+1)^(0+256)
 10130  0317  0021               	movlb	1	; select bank1
 10131  0318  0835               	movf	?_startAbsMove^(0+128),w
 10132  0319  0022               	movlb	2	; select bank2
 10133  031A  00EA               	movwf	_errorOut^(0+256)
 10134  031B  0008               	return
 10135  031C                     l8068:	
 10136                           ;cmd_parser.c: 73: case CMD_P: errorOut = getPosition(s->p1.paramI); break;
 10137                           
 10138  031C  0023               	movlb	3	; select bank3
 10139  031D  0A6D               	incf	execCmd@s^(0+384),w
 10140  031E  0086               	movwf	6
 10141  031F  3002               	movlw	2	; select bank4/5
 10142  0320  0087               	movwf	7
 10143  0321  3F40               	moviw [0]fsr1
 10144  0322  0021               	movlb	1	; select bank1
 10145  0323  00B5               	movwf	getPosition@a^(0+128)
 10146  0324  3F41               	moviw [1]fsr1
 10147  0325  00B6               	movwf	(getPosition@a+1)^(0+128)
 10148  0326  319A  2214         	fcall	_getPosition
 10149  0328  0021               	movlb	1	; select bank1
 10150  0329  0836               	movf	(?_getPosition+1)^(0+128),w
 10151  032A  0022               	movlb	2	; select bank2
 10152  032B  00EB               	movwf	(_errorOut+1)^(0+256)
 10153  032C  0021               	movlb	1	; select bank1
 10154  032D  0835               	movf	?_getPosition^(0+128),w
 10155  032E  0022               	movlb	2	; select bank2
 10156  032F  00EA               	movwf	_errorOut^(0+256)
 10157  0330  0008               	return
 10158  0331                     l8070:	
 10159                           ;cmd_parser.c: 74: case CMD_ZERO: errorOut = zeroPosition(); break;
 10160                           
 10161  0331  3196  26B5         	fcall	_zeroPosition
 10162  0333  0021               	movlb	1	; select bank1
 10163  0334  0836               	movf	(?_zeroPosition+1)^(0+128),w
 10164  0335  0022               	movlb	2	; select bank2
 10165  0336  00EB               	movwf	(_errorOut+1)^(0+256)
 10166  0337  0021               	movlb	1	; select bank1
 10167  0338  0835               	movf	?_zeroPosition^(0+128),w
 10168  0339  0022               	movlb	2	; select bank2
 10169  033A  00EA               	movwf	_errorOut^(0+256)
 10170  033B  0008               	return
 10171  033C                     l8072:	
 10172                           ;cmd_parser.c: 77: case CMD_DRV_PEAK: errorOut = setDrvPeak(s->p1.paramI); break;
 10173                           
 10174  033C  0023               	movlb	3	; select bank3
 10175  033D  0A6D               	incf	execCmd@s^(0+384),w
 10176  033E  0086               	movwf	6
 10177  033F  3002               	movlw	2	; select bank4/5
 10178  0340  0087               	movwf	7
 10179  0341  3F40               	moviw [0]fsr1
 10180  0342  0021               	movlb	1	; select bank1
 10181  0343  00B5               	movwf	setDrvPeak@pk^(0+128)
 10182  0344  3F41               	moviw [1]fsr1
 10183  0345  00B6               	movwf	(setDrvPeak@pk+1)^(0+128)
 10184  0346  31A6  262A         	fcall	_setDrvPeak
 10185  0348  0021               	movlb	1	; select bank1
 10186  0349  0836               	movf	(?_setDrvPeak+1)^(0+128),w
 10187  034A  0022               	movlb	2	; select bank2
 10188  034B  00EB               	movwf	(_errorOut+1)^(0+256)
 10189  034C  0021               	movlb	1	; select bank1
 10190  034D  0835               	movf	?_setDrvPeak^(0+128),w
 10191  034E  0022               	movlb	2	; select bank2
 10192  034F  00EA               	movwf	_errorOut^(0+256)
 10193  0350  0008               	return
 10194  0351                     l8074:	
 10195                           ;cmd_parser.c: 78: case CMD_DRV_GAIN: errorOut = setDrvGain(s->p1.paramI); break;
 10196                           
 10197  0351  0023               	movlb	3	; select bank3
 10198  0352  0A6D               	incf	execCmd@s^(0+384),w
 10199  0353  0086               	movwf	6
 10200  0354  3002               	movlw	2	; select bank4/5
 10201  0355  0087               	movwf	7
 10202  0356  3F40               	moviw [0]fsr1
 10203  0357  0021               	movlb	1	; select bank1
 10204  0358  00B5               	movwf	setDrvGain@gain^(0+128)
 10205  0359  3F41               	moviw [1]fsr1
 10206  035A  00B6               	movwf	(setDrvGain@gain+1)^(0+128)
 10207  035B  319C  2415         	fcall	_setDrvGain
 10208  035D  0021               	movlb	1	; select bank1
 10209  035E  0836               	movf	(?_setDrvGain+1)^(0+128),w
 10210  035F  0022               	movlb	2	; select bank2
 10211  0360  00EB               	movwf	(_errorOut+1)^(0+256)
 10212  0361  0021               	movlb	1	; select bank1
 10213  0362  0835               	movf	?_setDrvGain^(0+128),w
 10214  0363  0022               	movlb	2	; select bank2
 10215  0364  00EA               	movwf	_errorOut^(0+256)
 10216  0365  0008               	return
 10217  0366                     l8076:	
 10218                           ;cmd_parser.c: 79: case CMD_DRV_PIEZOONTIME: errorOut = setDrvPiezoOnTime(s->p1.paramI);
      +                           break;
 10219                           
 10220  0366  0023               	movlb	3	; select bank3
 10221  0367  0A6D               	incf	execCmd@s^(0+384),w
 10222  0368  0086               	movwf	6
 10223  0369  3002               	movlw	2	; select bank4/5
 10224  036A  0087               	movwf	7
 10225  036B  3F40               	moviw [0]fsr1
 10226  036C  0021               	movlb	1	; select bank1
 10227  036D  00BD               	movwf	setDrvPiezoOnTime@t^(0+128)
 10228  036E  3F41               	moviw [1]fsr1
 10229  036F  00BE               	movwf	(setDrvPiezoOnTime@t+1)^(0+128)
 10230  0370  3194  24BD         	fcall	_setDrvPiezoOnTime
 10231  0372  0021               	movlb	1	; select bank1
 10232  0373  083E               	movf	(?_setDrvPiezoOnTime+1)^(0+128),w
 10233  0374  0022               	movlb	2	; select bank2
 10234  0375  00EB               	movwf	(_errorOut+1)^(0+256)
 10235  0376  0021               	movlb	1	; select bank1
 10236  0377  083D               	movf	?_setDrvPiezoOnTime^(0+128),w
 10237  0378  0022               	movlb	2	; select bank2
 10238  0379  00EA               	movwf	_errorOut^(0+256)
 10239  037A  0008               	return
 10240  037B                     l8078:	
 10241                           ;cmd_parser.c: 82: case CMD_HEATER_PRETIME: errorOut = setHeaterPreTime(s->p1.paramI); b
      +                          reak;
 10242                           
 10243  037B  0023               	movlb	3	; select bank3
 10244  037C  0A6D               	incf	execCmd@s^(0+384),w
 10245  037D  0086               	movwf	6
 10246  037E  3002               	movlw	2	; select bank4/5
 10247  037F  0087               	movwf	7
 10248  0380  3F40               	moviw [0]fsr1
 10249  0381  0021               	movlb	1	; select bank1
 10250  0382  00BD               	movwf	setHeaterPreTime@t^(0+128)
 10251  0383  3F41               	moviw [1]fsr1
 10252  0384  00BE               	movwf	(setHeaterPreTime@t+1)^(0+128)
 10253  0385  3195  2520         	fcall	_setHeaterPreTime
 10254  0387  0021               	movlb	1	; select bank1
 10255  0388  083E               	movf	(?_setHeaterPreTime+1)^(0+128),w
 10256  0389  0022               	movlb	2	; select bank2
 10257  038A  00EB               	movwf	(_errorOut+1)^(0+256)
 10258  038B  0021               	movlb	1	; select bank1
 10259  038C  083D               	movf	?_setHeaterPreTime^(0+128),w
 10260  038D  0022               	movlb	2	; select bank2
 10261  038E  00EA               	movwf	_errorOut^(0+256)
 10262  038F  0008               	return
 10263  0390                     l8080:	
 10264                           ;cmd_parser.c: 83: case CMD_HEATER_POSTTIME: errorOut = setHeaterPostTime(s->p1.paramI);
      +                           break;
 10265                           
 10266  0390  0023               	movlb	3	; select bank3
 10267  0391  0A6D               	incf	execCmd@s^(0+384),w
 10268  0392  0086               	movwf	6
 10269  0393  3002               	movlw	2	; select bank4/5
 10270  0394  0087               	movwf	7
 10271  0395  3F40               	moviw [0]fsr1
 10272  0396  0021               	movlb	1	; select bank1
 10273  0397  00BD               	movwf	setHeaterPostTime@t^(0+128)
 10274  0398  3F41               	moviw [1]fsr1
 10275  0399  00BE               	movwf	(setHeaterPostTime@t+1)^(0+128)
 10276  039A  319E  26FD         	fcall	_setHeaterPostTime
 10277  039C  0021               	movlb	1	; select bank1
 10278  039D  083E               	movf	(?_setHeaterPostTime+1)^(0+128),w
 10279  039E  0022               	movlb	2	; select bank2
 10280  039F  00EB               	movwf	(_errorOut+1)^(0+256)
 10281  03A0  0021               	movlb	1	; select bank1
 10282  03A1  083D               	movf	?_setHeaterPostTime^(0+128),w
 10283  03A2  0022               	movlb	2	; select bank2
 10284  03A3  00EA               	movwf	_errorOut^(0+256)
 10285  03A4  0008               	return
 10286  03A5                     l8082:	
 10287                           ;cmd_parser.c: 84: case CMD_HEATER_GAIN: errorOut = setLEDBrightnessRange(s->p1.paramI, 
      +                          s->p2.paramI); break;
 10288                           
 10289  03A5  0023               	movlb	3	; select bank3
 10290  03A6  0A6D               	incf	execCmd@s^(0+384),w
 10291  03A7  0086               	movwf	6
 10292  03A8  3002               	movlw	2	; select bank4/5
 10293  03A9  0087               	movwf	7
 10294  03AA  3F40               	moviw [0]fsr1
 10295  03AB  0021               	movlb	1	; select bank1
 10296  03AC  00B5               	movwf	setLEDBrightnessRange@r^(0+128)
 10297  03AD  3F41               	moviw [1]fsr1
 10298  03AE  00B6               	movwf	(setLEDBrightnessRange@r+1)^(0+128)
 10299  03AF  0023               	movlb	3	; select bank3
 10300  03B0  086D               	movf	execCmd@s^(0+384),w
 10301  03B1  3E0B               	addlw	11
 10302  03B2  0086               	movwf	6
 10303  03B3  3002               	movlw	2	; select bank4/5
 10304  03B4  0087               	movwf	7
 10305  03B5  3F40               	moviw [0]fsr1
 10306  03B6  0021               	movlb	1	; select bank1
 10307  03B7  00B7               	movwf	setLEDBrightnessRange@tOB^(0+128)
 10308  03B8  3F41               	moviw [1]fsr1
 10309  03B9  00B8               	movwf	(setLEDBrightnessRange@tOB+1)^(0+128)
 10310  03BA  31A7  2784         	fcall	_setLEDBrightnessRange
 10311  03BC  0021               	movlb	1	; select bank1
 10312  03BD  0836               	movf	(?_setLEDBrightnessRange+1)^(0+128),w
 10313  03BE  0022               	movlb	2	; select bank2
 10314  03BF  00EB               	movwf	(_errorOut+1)^(0+256)
 10315  03C0  0021               	movlb	1	; select bank1
 10316  03C1  0835               	movf	?_setLEDBrightnessRange^(0+128),w
 10317  03C2  0022               	movlb	2	; select bank2
 10318  03C3  00EA               	movwf	_errorOut^(0+256)
 10319  03C4  0008               	return
 10320  03C5                     l8084:	
 10321                           ;cmd_parser.c: 85: case CMD_HEATER_PWR: errorOut = setLEDPwr(s->p1.paramI, s->p2.paramI)
      +                          ; break;
 10322                           
 10323  03C5  0023               	movlb	3	; select bank3
 10324  03C6  0A6D               	incf	execCmd@s^(0+384),w
 10325  03C7  0086               	movwf	6
 10326  03C8  3002               	movlw	2	; select bank4/5
 10327  03C9  0087               	movwf	7
 10328  03CA  3F40               	moviw [0]fsr1
 10329  03CB  0021               	movlb	1	; select bank1
 10330  03CC  00B5               	movwf	setLEDPwr@pwr^(0+128)
 10331  03CD  3F41               	moviw [1]fsr1
 10332  03CE  00B6               	movwf	(setLEDPwr@pwr+1)^(0+128)
 10333  03CF  0023               	movlb	3	; select bank3
 10334  03D0  086D               	movf	execCmd@s^(0+384),w
 10335  03D1  3E0B               	addlw	11
 10336  03D2  0086               	movwf	6
 10337  03D3  3002               	movlw	2	; select bank4/5
 10338  03D4  0087               	movwf	7
 10339  03D5  3F40               	moviw [0]fsr1
 10340  03D6  0021               	movlb	1	; select bank1
 10341  03D7  00B7               	movwf	setLEDPwr@topOrBottom^(0+128)
 10342  03D8  3F41               	moviw [1]fsr1
 10343  03D9  00B8               	movwf	(setLEDPwr@topOrBottom+1)^(0+128)
 10344  03DA  31A7  27A2         	fcall	_setLEDPwr
 10345  03DC  0021               	movlb	1	; select bank1
 10346  03DD  0836               	movf	(?_setLEDPwr+1)^(0+128),w
 10347  03DE  0022               	movlb	2	; select bank2
 10348  03DF  00EB               	movwf	(_errorOut+1)^(0+256)
 10349  03E0  0021               	movlb	1	; select bank1
 10350  03E1  0835               	movf	?_setLEDPwr^(0+128),w
 10351  03E2  0022               	movlb	2	; select bank2
 10352  03E3  00EA               	movwf	_errorOut^(0+256)
 10353  03E4  0008               	return
 10354  03E5                     l8086:	
 10355                           ;cmd_parser.c: 86: case CMD_HEATER_TOGGLE: errorOut = setHeaterToggle(s->p1.paramI, s->p
      +                          2.paramI); break;
 10356                           
 10357  03E5  0023               	movlb	3	; select bank3
 10358  03E6  0A6D               	incf	execCmd@s^(0+384),w
 10359  03E7  0086               	movwf	6
 10360  03E8  3002               	movlw	2	; select bank4/5
 10361  03E9  0087               	movwf	7
 10362  03EA  3F40               	moviw [0]fsr1
 10363  03EB  0021               	movlb	1	; select bank1
 10364  03EC  00B5               	movwf	setHeaterToggle@num^(0+128)
 10365  03ED  3F41               	moviw [1]fsr1
 10366  03EE  00B6               	movwf	(setHeaterToggle@num+1)^(0+128)
 10367  03EF  0023               	movlb	3	; select bank3
 10368  03F0  086D               	movf	execCmd@s^(0+384),w
 10369  03F1  3E0B               	addlw	11
 10370  03F2  0086               	movwf	6
 10371  03F3  3002               	movlw	2	; select bank4/5
 10372  03F4  0087               	movwf	7
 10373  03F5  3F40               	moviw [0]fsr1
 10374  03F6  0021               	movlb	1	; select bank1
 10375  03F7  00B7               	movwf	setHeaterToggle@topOrB^(0+128)
 10376  03F8  3F41               	moviw [1]fsr1
 10377  03F9  00B8               	movwf	(setHeaterToggle@topOrB+1)^(0+128)
 10378  03FA  3188  2057         	fcall	_setHeaterToggle
 10379  03FC  0021               	movlb	1	; select bank1
 10380  03FD  0836               	movf	(?_setHeaterToggle+1)^(0+128),w
 10381  03FE  0022               	movlb	2	; select bank2
 10382  03FF  00EB               	movwf	(_errorOut+1)^(0+256)
 10383  0400  0021               	movlb	1	; select bank1
 10384  0401  0835               	movf	?_setHeaterToggle^(0+128),w
 10385  0402  0022               	movlb	2	; select bank2
 10386  0403  00EA               	movwf	_errorOut^(0+256)
 10387  0404  0008               	return
 10388  0405                     l8088:	
 10389                           ;cmd_parser.c: 88: case CMD_SETA: errorOut = setActive(s->p1.paramI, s->p2.paramI); brea
      +                          k;
 10390                           
 10391  0405  0023               	movlb	3	; select bank3
 10392  0406  0A6D               	incf	execCmd@s^(0+384),w
 10393  0407  0086               	movwf	6
 10394  0408  3002               	movlw	2	; select bank4/5
 10395  0409  0087               	movwf	7
 10396  040A  3F40               	moviw [0]fsr1
 10397  040B  0021               	movlb	1	; select bank1
 10398  040C  00B5               	movwf	setActive@probeNum^(0+128)
 10399  040D  3F41               	moviw [1]fsr1
 10400  040E  00B6               	movwf	(setActive@probeNum+1)^(0+128)
 10401  040F  0023               	movlb	3	; select bank3
 10402  0410  086D               	movf	execCmd@s^(0+384),w
 10403  0411  3E0B               	addlw	11
 10404  0412  0086               	movwf	6
 10405  0413  3002               	movlw	2	; select bank4/5
 10406  0414  0087               	movwf	7
 10407  0415  3F40               	moviw [0]fsr1
 10408  0416  0021               	movlb	1	; select bank1
 10409  0417  00B7               	movwf	setActive@onOff^(0+128)
 10410  0418  3F41               	moviw [1]fsr1
 10411  0419  00B8               	movwf	(setActive@onOff+1)^(0+128)
 10412  041A  3189  21BF         	fcall	_setActive
 10413  041C  0021               	movlb	1	; select bank1
 10414  041D  0836               	movf	(?_setActive+1)^(0+128),w
 10415  041E  0022               	movlb	2	; select bank2
 10416  041F  00EB               	movwf	(_errorOut+1)^(0+256)
 10417  0420  0021               	movlb	1	; select bank1
 10418  0421  0835               	movf	?_setActive^(0+128),w
 10419  0422  0022               	movlb	2	; select bank2
 10420  0423  00EA               	movwf	_errorOut^(0+256)
 10421  0424  0008               	return
 10422  0425                     l8090:	
 10423                           ;cmd_parser.c: 89: case CMD_SETM: errorOut = setMoveMask(s->p1.paramI, s->p2.paramI); br
      +                          eak;
 10424                           
 10425  0425  0023               	movlb	3	; select bank3
 10426  0426  0A6D               	incf	execCmd@s^(0+384),w
 10427  0427  0086               	movwf	6
 10428  0428  3002               	movlw	2	; select bank4/5
 10429  0429  0087               	movwf	7
 10430  042A  3F40               	moviw [0]fsr1
 10431  042B  0021               	movlb	1	; select bank1
 10432  042C  00B5               	movwf	setMoveMask@probeNum^(0+128)
 10433  042D  3F41               	moviw [1]fsr1
 10434  042E  00B6               	movwf	(setMoveMask@probeNum+1)^(0+128)
 10435  042F  0023               	movlb	3	; select bank3
 10436  0430  086D               	movf	execCmd@s^(0+384),w
 10437  0431  3E0B               	addlw	11
 10438  0432  0086               	movwf	6
 10439  0433  3002               	movlw	2	; select bank4/5
 10440  0434  0087               	movwf	7
 10441  0435  3F40               	moviw [0]fsr1
 10442  0436  0021               	movlb	1	; select bank1
 10443  0437  00B7               	movwf	setMoveMask@onOff^(0+128)
 10444  0438  3F41               	moviw [1]fsr1
 10445  0439  00B8               	movwf	(setMoveMask@onOff+1)^(0+128)
 10446  043A  3194  245C         	fcall	_setMoveMask
 10447  043C  0021               	movlb	1	; select bank1
 10448  043D  0836               	movf	(?_setMoveMask+1)^(0+128),w
 10449  043E  0022               	movlb	2	; select bank2
 10450  043F  00EB               	movwf	(_errorOut+1)^(0+256)
 10451  0440  0021               	movlb	1	; select bank1
 10452  0441  0835               	movf	?_setMoveMask^(0+128),w
 10453  0442  0022               	movlb	2	; select bank2
 10454  0443  00EA               	movwf	_errorOut^(0+256)
 10455  0444  0008               	return
 10456  0445                     l8092:	
 10457                           ;cmd_parser.c: 90: case CMD_GET_ACTIVE: errorOut = getActive(); break;
 10458                           
 10459  0445  319D  252C         	fcall	_getActive
 10460  0447  0021               	movlb	1	; select bank1
 10461  0448  0836               	movf	(?_getActive+1)^(0+128),w
 10462  0449  0022               	movlb	2	; select bank2
 10463  044A  00EB               	movwf	(_errorOut+1)^(0+256)
 10464  044B  0021               	movlb	1	; select bank1
 10465  044C  0835               	movf	?_getActive^(0+128),w
 10466  044D  0022               	movlb	2	; select bank2
 10467  044E  00EA               	movwf	_errorOut^(0+256)
 10468  044F  0008               	return
 10469  0450                     l8094:	
 10470                           ;cmd_parser.c: 91: case CMD_GET_MOVABLE: errorOut = getMoveMask(); break;
 10471                           
 10472  0450  319D  2577         	fcall	_getMoveMask
 10473  0452  0021               	movlb	1	; select bank1
 10474  0453  0836               	movf	(?_getMoveMask+1)^(0+128),w
 10475  0454  0022               	movlb	2	; select bank2
 10476  0455  00EB               	movwf	(_errorOut+1)^(0+256)
 10477  0456  0021               	movlb	1	; select bank1
 10478  0457  0835               	movf	?_getMoveMask^(0+128),w
 10479  0458  0022               	movlb	2	; select bank2
 10480  0459  00EA               	movwf	_errorOut^(0+256)
 10481  045A  0008               	return
 10482  045B                     l8096:	
 10483                           ;cmd_parser.c: 92: case CMD_MOTION_STATUS: errorOut = getMotionStatus(); break;
 10484                           
 10485  045B  3198  20C3         	fcall	_getMotionStatus
 10486  045D  0021               	movlb	1	; select bank1
 10487  045E  0836               	movf	(?_getMotionStatus+1)^(0+128),w
 10488  045F  0022               	movlb	2	; select bank2
 10489  0460  00EB               	movwf	(_errorOut+1)^(0+256)
 10490  0461  0021               	movlb	1	; select bank1
 10491  0462  0835               	movf	?_getMotionStatus^(0+128),w
 10492  0463  0022               	movlb	2	; select bank2
 10493  0464  00EA               	movwf	_errorOut^(0+256)
 10494  0465  0008               	return
 10495  0466                     l8098:	
 10496                           ;cmd_parser.c: 93: case CMD_COMM_CHECK: errorOut = commCheck(); break;
 10497                           
 10498  0466  318B  237C         	fcall	_commCheck
 10499  0468  0021               	movlb	1	; select bank1
 10500  0469  0853               	movf	(?_commCheck+1)^(0+128),w
 10501  046A  0022               	movlb	2	; select bank2
 10502  046B  00EB               	movwf	(_errorOut+1)^(0+256)
 10503  046C  0021               	movlb	1	; select bank1
 10504  046D  0852               	movf	?_commCheck^(0+128),w
 10505  046E  0022               	movlb	2	; select bank2
 10506  046F  00EA               	movwf	_errorOut^(0+256)
 10507  0470  0008               	return
 10508  0471                     l8100:	
 10509                           ;cmd_parser.c: 94: case CMD_PING: printf("!\n"); break;
 10510                           
 10511  0471  30A0               	movlw	low ((STR_78+20)| (0+32768))
 10512  0472  0021               	movlb	1	; select bank1
 10513  0473  00A0               	movwf	printf@f^(0+128)
 10514  0474  30A8               	movlw	high ((STR_78+20)| (0+32768))
 10515  0475  00A1               	movwf	(printf@f^(0+128)+1)
 10516  0476  3186  2618         	fcall	_printf
 10517  0478  0008               	return
 10518  0479                     l8102:	
 10519                           ;cmd_parser.c: 95: default: printf("UNRECOGNIZED COMMAND!\n");
 10520                           
 10521  0479  308C               	movlw	low (STR_78| (0+32768))
 10522  047A  0021               	movlb	1	; select bank1
 10523  047B  00A0               	movwf	printf@f^(0+128)
 10524  047C  30A8               	movlw	high (STR_78| (0+32768))
 10525  047D  00A1               	movwf	(printf@f^(0+128)+1)
 10526  047E  3186  2618         	fcall	_printf
 10527                           
 10528                           ;cmd_parser.c: 102: }
 10529  0480  0008               	return
 10530  0481                     l8104:	
 10531  0481  0023               	movlb	3	; select bank3
 10532  0482  086D               	movf	execCmd@s^(0+384),w
 10533  0483  0086               	movwf	6
 10534  0484  3002               	movlw	2	; select bank4/5
 10535  0485  0087               	movwf	7
 10536  0486  0801               	movf	1,w
 10537                           
 10538                           ; Switch size 1, requested type "space"
 10539                           ; Number of cases is 19, Range of values is 1 to 20
 10540                           ; switch strategies available:
 10541                           ; Name         Instructions Cycles
 10542                           ; direct_byte           49     9 (fixed)
 10543                           ; simple_byte           58    30 (average)
 10544                           ; jumptable            263     9 (fixed)
 10545                           ;	Chosen strategy is direct_byte
 10546  0487  3EFF               	addlw	-1
 10547  0488  1C03               	skipc
 10548  0489  2C79               	goto	l8102
 10549  048A  0084               	movwf	4
 10550  048B  3014               	movlw	20
 10551  048C  0204               	subwf	4,w
 10552  048D  1803               	skipnc
 10553  048E  2C79               	goto	l8102
 10554  048F  3198               	movlp	high S8498
 10555  0490  3504               	lslf	4,w
 10556  0491  3E00               	addlw	low S8498
 10557  0492  0082               	movwf	2
 10558                           
 10559                           ;cmd_parser.c: 104: return errorOut;
 10560                           ;	Return value of _execCmd is never used
 10561  0493  0008               	return
 10562  0494                     __end_of_execCmd:	
 10563                           
 10564                           	psect	swtext1
 10565  1800                     __pswtext1:	
 10566  1800                     S8498:	
 10567  1800  3183  2B07         	ljmp	l8066
 10568  1802  3182  2AF2         	ljmp	l8064
 10569  1804  3183  2B1C         	ljmp	l8068
 10570  1806  3184  2C79         	ljmp	l8102
 10571  1808  3184  2C05         	ljmp	l8088
 10572  180A  3184  2C25         	ljmp	l8090
 10573  180C  3183  2B31         	ljmp	l8070
 10574  180E  3183  2B3C         	ljmp	l8072
 10575  1810  3183  2B51         	ljmp	l8074
 10576  1812  3183  2B66         	ljmp	l8076
 10577  1814  3183  2B7B         	ljmp	l8078
 10578  1816  3183  2B90         	ljmp	l8080
 10579  1818  3183  2BA5         	ljmp	l8082
 10580  181A  3183  2BC5         	ljmp	l8084
 10581  181C  3183  2BE5         	ljmp	l8086
 10582  181E  3184  2C45         	ljmp	l8092
 10583  1820  3184  2C50         	ljmp	l8094
 10584  1822  3184  2C5B         	ljmp	l8096
 10585  1824  3184  2C66         	ljmp	l8098
 10586  1826  3184  2C71         	ljmp	l8100
 10587                           
 10588                           	psect	text13
 10589  16B5                     __ptext13:	
 10590 ;; *************** function _zeroPosition *****************
 10591 ;; Defined at:
 10592 ;;		line 372 in file "main.c"
 10593 ;; Parameters:    Size  Location     Type
 10594 ;;		None
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;  i               2   41[BANK0 ] int 
 10597 ;; Return value:  Size  Location     Type
 10598 ;;                  2   21[BANK1 ] int 
 10599 ;; Registers used:
 10600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/0
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10606 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10607 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10608 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10609 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10610 ;;Total ram usage:       14 bytes
 10611 ;; Hardware stack levels used:    1
 10612 ;; Hardware stack levels required when called:    9
 10613 ;; This function calls:
 10614 ;;		_printf
 10615 ;; This function is called by:
 10616 ;;		_execCmd
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           
 10621                           ;psect for function _zeroPosition
 10622  16B5                     _zeroPosition:	
 10623                           
 10624                           ;main.c: 373: for(int i = 0; i<24; i++){
 10625                           
 10626                           ;incstack = 0
 10627                           ; Regs used in _zeroPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10628  16B5  0020               	movlb	0	; select bank0
 10629  16B6  01C9               	clrf	zeroPosition@i
 10630  16B7  01CA               	clrf	zeroPosition@i+1
 10631  16B8  084A               	movf	zeroPosition@i+1,w
 10632  16B9  3A80               	xorlw	128
 10633  16BA  0021               	movlb	1	; select bank1
 10634  16BB  00B7               	movwf	??_zeroPosition^(0+128)
 10635  16BC  3080               	movlw	128
 10636  16BD  0237               	subwf	??_zeroPosition^(0+128),w
 10637  16BE  1D03               	skipz
 10638  16BF  2EC3               	goto	u7835
 10639  16C0  3018               	movlw	24
 10640  16C1  0020               	movlb	0	; select bank0
 10641  16C2  0249               	subwf	zeroPosition@i,w
 10642  16C3                     u7835:	
 10643  16C3  1803               	btfsc	3,0
 10644  16C4  2F15               	goto	l7722
 10645  16C5                     l7714:	
 10646                           
 10647                           ;main.c: 374: if((activeMask & (1 << i)) > 0)
 10648  16C5  0021               	movlb	1	; select bank1
 10649  16C6  0858               	movf	_activeMask^(0+128),w
 10650  16C7  00B7               	movwf	??_zeroPosition^(0+128)
 10651  16C8  0859               	movf	(_activeMask+1)^(0+128),w
 10652  16C9  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 10653  16CA  085A               	movf	(_activeMask+2)^(0+128),w
 10654  16CB  00B9               	movwf	(??_zeroPosition^(0+128)+2)
 10655  16CC  085B               	movf	(_activeMask+3)^(0+128),w
 10656  16CD  00BA               	movwf	(??_zeroPosition^(0+128)+3)
 10657  16CE  3001               	movlw	1
 10658  16CF  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 10659  16D0  3000               	movlw	0
 10660  16D1  00BC               	movwf	((??_zeroPosition+4)^(0+128)+1)
 10661  16D2  0020               	movlb	0	; select bank0
 10662  16D3  0A49               	incf	zeroPosition@i,w
 10663  16D4  0021               	movlb	1	; select bank1
 10664  16D5  2ED8               	goto	u7844
 10665  16D6                     u7845:	
 10666  16D6  35BB               	lslf	(??_zeroPosition+4)^(0+128),f
 10667  16D7  0DBC               	rlf	((??_zeroPosition+4)^(0+128)+1),f
 10668  16D8                     u7844:	
 10669  16D8  0B89               	decfsz	9,f
 10670  16D9  2ED6               	goto	u7845
 10671  16DA  083B               	movf	(??_zeroPosition+4)^(0+128),w
 10672  16DB  00BD               	movwf	(??_zeroPosition+6)^(0+128)
 10673  16DC  083C               	movf	(??_zeroPosition+5)^(0+128),w
 10674  16DD  00BE               	movwf	((??_zeroPosition+6)^(0+128)+1)
 10675  16DE  3000               	movlw	0
 10676  16DF  1BBE               	btfsc	((??_zeroPosition+6)^(0+128)+1),7
 10677  16E0  30FF               	movlw	255
 10678  16E1  00BF               	movwf	((??_zeroPosition+6)^(0+128)+2)
 10679  16E2  00C0               	movwf	((??_zeroPosition+6)^(0+128)+3)
 10680  16E3  083D               	movf	(??_zeroPosition+6)^(0+128),w
 10681  16E4  05B7               	andwf	??_zeroPosition^(0+128),f
 10682  16E5  083E               	movf	(??_zeroPosition+7)^(0+128),w
 10683  16E6  05B8               	andwf	(??_zeroPosition^(0+128)+1),f
 10684  16E7  083F               	movf	(??_zeroPosition+8)^(0+128),w
 10685  16E8  05B9               	andwf	(??_zeroPosition^(0+128)+2),f
 10686  16E9  0840               	movf	(??_zeroPosition+9)^(0+128),w
 10687  16EA  05BA               	andwf	(??_zeroPosition^(0+128)+3),f
 10688  16EB  1BBA               	btfsc	(??_zeroPosition^(0+128)+3),7
 10689  16EC  2F03               	goto	l7718
 10690  16ED  083A               	movf	(??_zeroPosition^(0+128)+3),w
 10691  16EE  1D03               	btfss	3,2
 10692  16EF  2EFA               	goto	l7716
 10693  16F0  0839               	movf	(??_zeroPosition^(0+128)+2),w
 10694  16F1  1D03               	btfss	3,2
 10695  16F2  2EFA               	goto	l7716
 10696  16F3  0838               	movf	(??_zeroPosition^(0+128)+1),w
 10697  16F4  1D03               	btfss	3,2
 10698  16F5  2EFA               	goto	l7716
 10699  16F6  3001               	movlw	1
 10700  16F7  0237               	subwf	??_zeroPosition^(0+128),w
 10701  16F8  1C03               	btfss	3,0
 10702  16F9  2F03               	goto	l7718
 10703  16FA                     l7716:	
 10704                           
 10705                           ;main.c: 375: currentPositions_steps[i]=0;
 10706  16FA  0020               	movlb	0	; select bank0
 10707  16FB  3549               	lslf	zeroPosition@i,w
 10708  16FC  3EA0               	addlw	(low (_currentPositions_steps| (0+256)))& (0+255)
 10709  16FD  0086               	movwf	6
 10710  16FE  3001               	movlw	1	; select bank3/4
 10711  16FF  0087               	movwf	7
 10712  1700  3000               	movlw	0
 10713  1701  3FC0               	movwi [0]fsr1
 10714  1702  3FC1               	movwi [1]fsr1
 10715  1703                     l7718:	
 10716  1703  3001               	movlw	1
 10717  1704  0020               	movlb	0	; select bank0
 10718  1705  07C9               	addwf	zeroPosition@i,f
 10719  1706  3000               	movlw	0
 10720  1707  3DCA               	addwfc	zeroPosition@i+1,f
 10721  1708  084A               	movf	zeroPosition@i+1,w
 10722  1709  3A80               	xorlw	128
 10723  170A  0021               	movlb	1	; select bank1
 10724  170B  00B7               	movwf	??_zeroPosition^(0+128)
 10725  170C  3080               	movlw	128
 10726  170D  0237               	subwf	??_zeroPosition^(0+128),w
 10727  170E  1D03               	skipz
 10728  170F  2F13               	goto	u7865
 10729  1710  3018               	movlw	24
 10730  1711  0020               	movlb	0	; select bank0
 10731  1712  0249               	subwf	zeroPosition@i,w
 10732  1713                     u7865:	
 10733  1713  1C03               	skipc
 10734  1714  2EC5               	goto	l7714
 10735  1715                     l7722:	
 10736                           
 10737                           ;main.c: 376: }
 10738                           ;main.c: 377: printf("A\n");
 10739  1715  3025               	movlw	low (STR_7| (0+32768))
 10740  1716  0021               	movlb	1	; select bank1
 10741  1717  00A0               	movwf	printf@f^(0+128)
 10742  1718  30AA               	movlw	high (STR_7| (0+32768))
 10743  1719  00A1               	movwf	(printf@f^(0+128)+1)
 10744  171A  3186  2618         	fcall	_printf
 10745                           
 10746                           ;main.c: 378: return 0;
 10747  171C  0021               	movlb	1	; select bank1
 10748  171D  01B5               	clrf	?_zeroPosition^(0+128)
 10749  171E  01B6               	clrf	(?_zeroPosition+1)^(0+128)
 10750  171F  0008               	return
 10751  1720                     __end_of_zeroPosition:	
 10752                           
 10753                           	psect	text14
 10754  267B                     __ptext14:	
 10755 ;; *************** function _startRelMove *****************
 10756 ;; Defined at:
 10757 ;;		line 279 in file "main.c"
 10758 ;; Parameters:    Size  Location     Type
 10759 ;;  steps           2   21[BANK1 ] int 
 10760 ;; Auto vars:     Size  Location     Type
 10761 ;;		None
 10762 ;; Return value:  Size  Location     Type
 10763 ;;                  2   21[BANK1 ] int 
 10764 ;; Registers used:
 10765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10766 ;; Tracked objects:
 10767 ;;		On entry : 0/0
 10768 ;;		On exit  : 0/0
 10769 ;;		Unchanged: 0/0
 10770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10771 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10774 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10775 ;;Total ram usage:        2 bytes
 10776 ;; Hardware stack levels used:    1
 10777 ;; Hardware stack levels required when called:    9
 10778 ;; This function calls:
 10779 ;;		_printf
 10780 ;; This function is called by:
 10781 ;;		_execCmd
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           
 10786                           ;psect for function _startRelMove
 10787  267B                     _startRelMove:	
 10788                           
 10789                           ;main.c: 280: motionType = REL_MOVE;
 10790                           
 10791                           ;incstack = 0
 10792                           ; Regs used in _startRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10793  267B  0020               	movlb	0	; select bank0
 10794  267C  01D3               	clrf	_motionType
 10795  267D  0AD3               	incf	_motionType,f
 10796                           
 10797                           ;main.c: 281: remainingSteps = steps;
 10798  267E  0021               	movlb	1	; select bank1
 10799  267F  0836               	movf	(startRelMove@steps+1)^(0+128),w
 10800  2680  00E7               	movwf	(_remainingSteps+1)^(0+128)
 10801  2681  0835               	movf	startRelMove@steps^(0+128),w
 10802  2682  00E6               	movwf	_remainingSteps^(0+128)
 10803                           
 10804                           ;main.c: 282: printf("A\n");
 10805  2683  3025               	movlw	low (STR_7| (0+32768))
 10806  2684  00A0               	movwf	printf@f^(0+128)
 10807  2685  30AA               	movlw	high (STR_7| (0+32768))
 10808  2686  00A1               	movwf	(printf@f^(0+128)+1)
 10809  2687  3186  2618         	fcall	_printf
 10810                           
 10811                           ;main.c: 283: return 0;
 10812  2689  0021               	movlb	1	; select bank1
 10813  268A  01B5               	clrf	?_startRelMove^(0+128)
 10814  268B  01B6               	clrf	(?_startRelMove+1)^(0+128)
 10815  268C  0008               	return
 10816  268D                     __end_of_startRelMove:	
 10817                           
 10818                           	psect	text15
 10819  26A1                     __ptext15:	
 10820 ;; *************** function _startAbsMove *****************
 10821 ;; Defined at:
 10822 ;;		line 285 in file "main.c"
 10823 ;; Parameters:    Size  Location     Type
 10824 ;;  steps           2   21[BANK1 ] int 
 10825 ;; Auto vars:     Size  Location     Type
 10826 ;;		None
 10827 ;; Return value:  Size  Location     Type
 10828 ;;                  2   21[BANK1 ] int 
 10829 ;; Registers used:
 10830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10831 ;; Tracked objects:
 10832 ;;		On entry : 0/0
 10833 ;;		On exit  : 0/0
 10834 ;;		Unchanged: 0/0
 10835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10836 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10838 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10839 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10840 ;;Total ram usage:        3 bytes
 10841 ;; Hardware stack levels used:    1
 10842 ;; Hardware stack levels required when called:    9
 10843 ;; This function calls:
 10844 ;;		_printf
 10845 ;; This function is called by:
 10846 ;;		_execCmd
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850                           
 10851                           ;psect for function _startAbsMove
 10852  26A1                     _startAbsMove:	
 10853                           
 10854                           ;main.c: 286: motionType = ABS_MOVE;
 10855                           
 10856                           ;incstack = 0
 10857                           ; Regs used in _startAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10858  26A1  3002               	movlw	2
 10859  26A2  0020               	movlb	0	; select bank0
 10860  26A3  00C9               	movwf	??_startAbsMove
 10861  26A4  0849               	movf	??_startAbsMove,w
 10862  26A5  00D3               	movwf	_motionType
 10863                           
 10864                           ;main.c: 287: absCommand = steps;
 10865  26A6  0021               	movlb	1	; select bank1
 10866  26A7  0836               	movf	(startAbsMove@steps+1)^(0+128),w
 10867  26A8  00E5               	movwf	(_absCommand+1)^(0+128)
 10868  26A9  0835               	movf	startAbsMove@steps^(0+128),w
 10869  26AA  00E4               	movwf	_absCommand^(0+128)
 10870                           
 10871                           ;main.c: 288: printf("A\n");
 10872  26AB  3025               	movlw	low (STR_7| (0+32768))
 10873  26AC  00A0               	movwf	printf@f^(0+128)
 10874  26AD  30AA               	movlw	high (STR_7| (0+32768))
 10875  26AE  00A1               	movwf	(printf@f^(0+128)+1)
 10876  26AF  3186  2618         	fcall	_printf
 10877                           
 10878                           ;main.c: 289: return 0;
 10879  26B1  0021               	movlb	1	; select bank1
 10880  26B2  01B5               	clrf	?_startAbsMove^(0+128)
 10881  26B3  01B6               	clrf	(?_startAbsMove+1)^(0+128)
 10882  26B4  0008               	return
 10883  26B5                     __end_of_startAbsMove:	
 10884                           
 10885                           	psect	text16
 10886  145C                     __ptext16:	
 10887 ;; *************** function _setMoveMask *****************
 10888 ;; Defined at:
 10889 ;;		line 493 in file "main.c"
 10890 ;; Parameters:    Size  Location     Type
 10891 ;;  probeNum        2   21[BANK1 ] int 
 10892 ;;  onOff           2   23[BANK1 ] int 
 10893 ;; Auto vars:     Size  Location     Type
 10894 ;;		None
 10895 ;; Return value:  Size  Location     Type
 10896 ;;                  2   21[BANK1 ] int 
 10897 ;; Registers used:
 10898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10899 ;; Tracked objects:
 10900 ;;		On entry : 0/0
 10901 ;;		On exit  : 0/0
 10902 ;;		Unchanged: 0/0
 10903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10904 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10906 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10907 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10908 ;;Total ram usage:       10 bytes
 10909 ;; Hardware stack levels used:    1
 10910 ;; Hardware stack levels required when called:    9
 10911 ;; This function calls:
 10912 ;;		_printf
 10913 ;; This function is called by:
 10914 ;;		_execCmd
 10915 ;; This function uses a non-reentrant model
 10916 ;;
 10917                           
 10918                           
 10919                           ;psect for function _setMoveMask
 10920  145C                     _setMoveMask:	
 10921                           
 10922                           ;main.c: 497: if (probeNum < 24-1){
 10923                           
 10924                           ;incstack = 0
 10925                           ; Regs used in _setMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10926  145C  0021               	movlb	1	; select bank1
 10927  145D  0836               	movf	(setMoveMask@probeNum+1)^(0+128),w
 10928  145E  3A80               	xorlw	128
 10929  145F  00B9               	movwf	??_setMoveMask^(0+128)
 10930  1460  3080               	movlw	128
 10931  1461  0239               	subwf	??_setMoveMask^(0+128),w
 10932  1462  1D03               	skipz
 10933  1463  2C66               	goto	u7975
 10934  1464  3017               	movlw	23
 10935  1465  0235               	subwf	setMoveMask@probeNum^(0+128),w
 10936  1466                     u7975:	
 10937  1466  1803               	skipnc
 10938  1467  2CB0               	goto	l7876
 10939                           
 10940                           ;main.c: 498: if (onOff)
 10941  1468  0021               	movlb	1	; select bank1
 10942  1469  0837               	movf	setMoveMask@onOff^(0+128),w
 10943  146A  0438               	iorwf	(setMoveMask@onOff+1)^(0+128),w
 10944  146B  1903               	btfsc	3,2
 10945  146C  2C89               	goto	l7868
 10946                           
 10947                           ;main.c: 499: moveMask |= (1<<probeNum);
 10948  146D  3001               	movlw	1
 10949  146E  00B9               	movwf	??_setMoveMask^(0+128)
 10950  146F  3000               	movlw	0
 10951  1470  00BA               	movwf	(??_setMoveMask^(0+128)+1)
 10952  1471  0A35               	incf	setMoveMask@probeNum^(0+128),w
 10953  1472  2C75               	goto	u7994
 10954  1473                     u7995:	
 10955  1473  35B9               	lslf	??_setMoveMask^(0+128),f
 10956  1474  0DBA               	rlf	(??_setMoveMask^(0+128)+1),f
 10957  1475                     u7994:	
 10958  1475  0B89               	decfsz	9,f
 10959  1476  2C73               	goto	u7995
 10960  1477  0839               	movf	??_setMoveMask^(0+128),w
 10961  1478  00BB               	movwf	(??_setMoveMask+2)^(0+128)
 10962  1479  083A               	movf	(??_setMoveMask+1)^(0+128),w
 10963  147A  00BC               	movwf	((??_setMoveMask+2)^(0+128)+1)
 10964  147B  3000               	movlw	0
 10965  147C  1BBC               	btfsc	((??_setMoveMask+2)^(0+128)+1),7
 10966  147D  30FF               	movlw	255
 10967  147E  00BD               	movwf	((??_setMoveMask+2)^(0+128)+2)
 10968  147F  00BE               	movwf	((??_setMoveMask+2)^(0+128)+3)
 10969  1480  083B               	movf	(??_setMoveMask+2)^(0+128),w
 10970  1481  04D4               	iorwf	_moveMask^(0+128),f
 10971  1482  083C               	movf	(??_setMoveMask+3)^(0+128),w
 10972  1483  04D5               	iorwf	(_moveMask+1)^(0+128),f
 10973  1484  083D               	movf	(??_setMoveMask+4)^(0+128),w
 10974  1485  04D6               	iorwf	(_moveMask+2)^(0+128),f
 10975  1486  083E               	movf	(??_setMoveMask+5)^(0+128),w
 10976  1487  04D7               	iorwf	(_moveMask+3)^(0+128),f
 10977  1488  2CA6               	goto	l7870
 10978  1489                     l7868:	
 10979                           
 10980                           ;main.c: 500: else
 10981                           ;main.c: 501: moveMask &= ~(1 << probeNum);
 10982  1489  3001               	movlw	1
 10983  148A  00B9               	movwf	??_setMoveMask^(0+128)
 10984  148B  3000               	movlw	0
 10985  148C  00BA               	movwf	(??_setMoveMask^(0+128)+1)
 10986  148D  0A35               	incf	setMoveMask@probeNum^(0+128),w
 10987  148E  2C91               	goto	u8004
 10988  148F                     u8005:	
 10989  148F  35B9               	lslf	??_setMoveMask^(0+128),f
 10990  1490  0DBA               	rlf	(??_setMoveMask^(0+128)+1),f
 10991  1491                     u8004:	
 10992  1491  0B89               	decfsz	9,f
 10993  1492  2C8F               	goto	u8005
 10994  1493  09B9               	comf	??_setMoveMask^(0+128),f
 10995  1494  09BA               	comf	(??_setMoveMask^(0+128)+1),f
 10996  1495  0839               	movf	??_setMoveMask^(0+128),w
 10997  1496  00BB               	movwf	(??_setMoveMask+2)^(0+128)
 10998  1497  083A               	movf	(??_setMoveMask+1)^(0+128),w
 10999  1498  00BC               	movwf	((??_setMoveMask+2)^(0+128)+1)
 11000  1499  3000               	movlw	0
 11001  149A  1BBC               	btfsc	((??_setMoveMask+2)^(0+128)+1),7
 11002  149B  30FF               	movlw	255
 11003  149C  00BD               	movwf	((??_setMoveMask+2)^(0+128)+2)
 11004  149D  00BE               	movwf	((??_setMoveMask+2)^(0+128)+3)
 11005  149E  083B               	movf	(??_setMoveMask+2)^(0+128),w
 11006  149F  05D4               	andwf	_moveMask^(0+128),f
 11007  14A0  083C               	movf	(??_setMoveMask+3)^(0+128),w
 11008  14A1  05D5               	andwf	(_moveMask+1)^(0+128),f
 11009  14A2  083D               	movf	(??_setMoveMask+4)^(0+128),w
 11010  14A3  05D6               	andwf	(_moveMask+2)^(0+128),f
 11011  14A4  083E               	movf	(??_setMoveMask+5)^(0+128),w
 11012  14A5  05D7               	andwf	(_moveMask+3)^(0+128),f
 11013  14A6                     l7870:	
 11014                           
 11015                           ;main.c: 502: printf("A\n");
 11016  14A6  3025               	movlw	low (STR_7| (0+32768))
 11017  14A7  00A0               	movwf	printf@f^(0+128)
 11018  14A8  30AA               	movlw	high (STR_7| (0+32768))
 11019  14A9  00A1               	movwf	(printf@f^(0+128)+1)
 11020  14AA  3186  2618         	fcall	_printf
 11021                           
 11022                           ;main.c: 503: return 0;
 11023  14AC  0021               	movlb	1	; select bank1
 11024  14AD  01B5               	clrf	?_setMoveMask^(0+128)
 11025  14AE  01B6               	clrf	(?_setMoveMask+1)^(0+128)
 11026  14AF  0008               	return
 11027  14B0                     l7876:	
 11028                           
 11029                           ;main.c: 504: }
 11030                           ;main.c: 505: printf("E\n");
 11031  14B0  3028               	movlw	low (STR_16| (0+32768))
 11032  14B1  0021               	movlb	1	; select bank1
 11033  14B2  00A0               	movwf	printf@f^(0+128)
 11034  14B3  30AA               	movlw	high (STR_16| (0+32768))
 11035  14B4  00A1               	movwf	(printf@f^(0+128)+1)
 11036  14B5  3186  2618         	fcall	_printf
 11037                           
 11038                           ;main.c: 506: return 1;
 11039  14B7  3001               	movlw	1
 11040  14B8  0021               	movlb	1	; select bank1
 11041  14B9  00B5               	movwf	?_setMoveMask^(0+128)
 11042  14BA  3000               	movlw	0
 11043  14BB  00B6               	movwf	(?_setMoveMask^(0+128)+1)
 11044  14BC  0008               	return
 11045  14BD                     __end_of_setMoveMask:	
 11046                           
 11047                           	psect	text17
 11048  27A2                     __ptext17:	
 11049 ;; *************** function _setLEDPwr *****************
 11050 ;; Defined at:
 11051 ;;		line 449 in file "main.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;  pwr             2   21[BANK1 ] int 
 11054 ;;  topOrBottom     2   23[BANK1 ] int 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;		None
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  2   21[BANK1 ] int 
 11059 ;; Registers used:
 11060 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11066 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11069 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11070 ;;Total ram usage:        4 bytes
 11071 ;; Hardware stack levels used:    1
 11072 ;; Hardware stack levels required when called:    9
 11073 ;; This function calls:
 11074 ;;		_LEDsPwr
 11075 ;;		_printf
 11076 ;; This function is called by:
 11077 ;;		_execCmd
 11078 ;; This function uses a non-reentrant model
 11079 ;;
 11080                           
 11081                           
 11082                           ;psect for function _setLEDPwr
 11083  27A2                     _setLEDPwr:	
 11084                           
 11085                           ;main.c: 450: LEDsPwr(pwr, topOrBottom);
 11086                           
 11087                           ;incstack = 0
 11088                           ; Regs used in _setLEDPwr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11089  27A2  0021               	movlb	1	; select bank1
 11090  27A3  0836               	movf	(setLEDPwr@pwr+1)^(0+128),w
 11091  27A4  0020               	movlb	0	; select bank0
 11092  27A5  00C5               	movwf	LEDsPwr@pwr+1
 11093  27A6  0021               	movlb	1	; select bank1
 11094  27A7  0835               	movf	setLEDPwr@pwr^(0+128),w
 11095  27A8  0020               	movlb	0	; select bank0
 11096  27A9  00C4               	movwf	LEDsPwr@pwr
 11097  27AA  0021               	movlb	1	; select bank1
 11098  27AB  0838               	movf	(setLEDPwr@topOrBottom+1)^(0+128),w
 11099  27AC  0020               	movlb	0	; select bank0
 11100  27AD  00C7               	movwf	LEDsPwr@topOrBottom+1
 11101  27AE  0021               	movlb	1	; select bank1
 11102  27AF  0837               	movf	setLEDPwr@topOrBottom^(0+128),w
 11103  27B0  0020               	movlb	0	; select bank0
 11104  27B1  00C6               	movwf	LEDsPwr@topOrBottom
 11105  27B2  3195  2583  31A7   	fcall	_LEDsPwr
 11106                           
 11107                           ;main.c: 451: printf("A\n");
 11108  27B5  3025               	movlw	low (STR_7| (0+32768))
 11109  27B6  0021               	movlb	1	; select bank1
 11110  27B7  00A0               	movwf	printf@f^(0+128)
 11111  27B8  30AA               	movlw	high (STR_7| (0+32768))
 11112  27B9  00A1               	movwf	(printf@f^(0+128)+1)
 11113  27BA  3186  2618         	fcall	_printf
 11114                           
 11115                           ;main.c: 452: return 0;
 11116  27BC  0021               	movlb	1	; select bank1
 11117  27BD  01B5               	clrf	?_setLEDPwr^(0+128)
 11118  27BE  01B6               	clrf	(?_setLEDPwr+1)^(0+128)
 11119  27BF  0008               	return
 11120  27C0                     __end_of_setLEDPwr:	
 11121                           
 11122                           	psect	text18
 11123  1583                     __ptext18:	
 11124 ;; *************** function _LEDsPwr *****************
 11125 ;; Defined at:
 11126 ;;		line 12 in file "LEDcomm.c"
 11127 ;; Parameters:    Size  Location     Type
 11128 ;;  pwr             2   36[BANK0 ] int 
 11129 ;;  topOrBottom     2   38[BANK0 ] int 
 11130 ;; Auto vars:     Size  Location     Type
 11131 ;;  pwrAll          4    0[BANK1 ] unsigned long 
 11132 ;; Return value:  Size  Location     Type
 11133 ;;                  1    wreg      void 
 11134 ;; Registers used:
 11135 ;;		wreg, status,2, status,0, pclath, cstack
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11141 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11142 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11143 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11144 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11145 ;;Total ram usage:       14 bytes
 11146 ;; Hardware stack levels used:    1
 11147 ;; Hardware stack levels required when called:    8
 11148 ;; This function calls:
 11149 ;;		_send_2length_2bytes_IK
 11150 ;; This function is called by:
 11151 ;;		_initialize
 11152 ;;		_setLEDPwr
 11153 ;; This function uses a non-reentrant model
 11154 ;;
 11155                           
 11156                           
 11157                           ;psect for function _LEDsPwr
 11158  1583                     _LEDsPwr:	
 11159                           
 11160                           ;LEDcomm.c: 13: pwr = (pwr>63) ? 63 : pwr;
 11161                           
 11162                           ;incstack = 0
 11163                           ; Regs used in _LEDsPwr: [wreg+status,2+status,0+pclath+cstack]
 11164  1583  0020               	movlb	0	; select bank0
 11165  1584  0845               	movf	LEDsPwr@pwr+1,w
 11166  1585  3A80               	xorlw	128
 11167  1586  00C8               	movwf	??_LEDsPwr
 11168  1587  3080               	movlw	128
 11169  1588  0248               	subwf	??_LEDsPwr,w
 11170  1589  1D03               	skipz
 11171  158A  2D8D               	goto	u7235
 11172  158B  3040               	movlw	64
 11173  158C  0244               	subwf	LEDsPwr@pwr,w
 11174  158D                     u7235:	
 11175  158D  1C03               	btfss	3,0
 11176  158E  2D94               	goto	l190
 11177  158F  303F               	movlw	63
 11178  1590  0020               	movlb	0	; select bank0
 11179  1591  00C4               	movwf	LEDsPwr@pwr
 11180  1592  3000               	movlw	0
 11181  1593  00C5               	movwf	LEDsPwr@pwr+1
 11182  1594                     l190:	
 11183                           
 11184                           ;LEDcomm.c: 14: unsigned long pwrAll = pwr | (pwr<<6) | (pwr<<12);
 11185  1594  0020               	movlb	0	; select bank0
 11186  1595  0845               	movf	LEDsPwr@pwr+1,w
 11187  1596  00C9               	movwf	??_LEDsPwr+1
 11188  1597  0844               	movf	LEDsPwr@pwr,w
 11189  1598  00C8               	movwf	??_LEDsPwr
 11190  1599  0E48               	swapf	??_LEDsPwr,w
 11191  159A  39F0               	andlw	240
 11192  159B  00C9               	movwf	??_LEDsPwr+1
 11193  159C  01C8               	clrf	??_LEDsPwr
 11194  159D  0845               	movf	LEDsPwr@pwr+1,w
 11195  159E  00CB               	movwf	??_LEDsPwr+3
 11196  159F  0844               	movf	LEDsPwr@pwr,w
 11197  15A0  00CA               	movwf	??_LEDsPwr+2
 11198  15A1  3006               	movlw	6
 11199  15A2                     u7245:	
 11200  15A2  35CA               	lslf	??_LEDsPwr+2,f
 11201  15A3  0DCB               	rlf	??_LEDsPwr+3,f
 11202  15A4  0B89               	decfsz	9,f
 11203  15A5  2DA2               	goto	u7245
 11204  15A6  0848               	movf	??_LEDsPwr,w
 11205  15A7  044A               	iorwf	??_LEDsPwr+2,w
 11206  15A8  00CC               	movwf	??_LEDsPwr+4
 11207  15A9  0849               	movf	??_LEDsPwr+1,w
 11208  15AA  044B               	iorwf	??_LEDsPwr+3,w
 11209  15AB  00CD               	movwf	??_LEDsPwr+5
 11210  15AC  0844               	movf	LEDsPwr@pwr,w
 11211  15AD  044C               	iorwf	??_LEDsPwr+4,w
 11212  15AE  0021               	movlb	1	; select bank1
 11213  15AF  00A0               	movwf	LEDsPwr@pwrAll^(0+128)
 11214  15B0  0020               	movlb	0	; select bank0
 11215  15B1  0845               	movf	LEDsPwr@pwr+1,w
 11216  15B2  044D               	iorwf	??_LEDsPwr+5,w
 11217  15B3  0021               	movlb	1	; select bank1
 11218  15B4  00A1               	movwf	(LEDsPwr@pwrAll+1)^(0+128)
 11219  15B5  01A2               	clrf	(LEDsPwr@pwrAll^(0+128)+2)
 11220  15B6  1BA1               	btfsc	(LEDsPwr@pwrAll^(0+128)+1),7
 11221  15B7  03A2               	decf	(LEDsPwr@pwrAll+2)^(0+128),f
 11222  15B8  0822               	movf	(LEDsPwr@pwrAll^(0+128)+2),w
 11223  15B9  00A3               	movwf	(LEDsPwr@pwrAll+3)^(0+128)
 11224                           
 11225                           ;LEDcomm.c: 15: send_2length_2bytes_IK((unsigned int)((pwrAll>>16) & 0xFFFF),(unsigned i
      +                          nt)pwrAll, 7, topOrBottom);
 11226  15BA  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 11227  15BB  0020               	movlb	0	; select bank0
 11228  15BC  00C8               	movwf	??_LEDsPwr
 11229  15BD  0021               	movlb	1	; select bank1
 11230  15BE  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 11231  15BF  0020               	movlb	0	; select bank0
 11232  15C0  00C9               	movwf	??_LEDsPwr+1
 11233  15C1  0021               	movlb	1	; select bank1
 11234  15C2  0822               	movf	(LEDsPwr@pwrAll+2)^(0+128),w
 11235  15C3  0020               	movlb	0	; select bank0
 11236  15C4  00CA               	movwf	??_LEDsPwr+2
 11237  15C5  0021               	movlb	1	; select bank1
 11238  15C6  0823               	movf	(LEDsPwr@pwrAll+3)^(0+128),w
 11239  15C7  0020               	movlb	0	; select bank0
 11240  15C8  00CB               	movwf	??_LEDsPwr+3
 11241  15C9  3010               	movlw	16
 11242  15CA                     u7255:	
 11243  15CA  36CB               	lsrf	??_LEDsPwr+3,f
 11244  15CB  0CCA               	rrf	??_LEDsPwr+2,f
 11245  15CC  0CC9               	rrf	??_LEDsPwr+1,f
 11246  15CD  0CC8               	rrf	??_LEDsPwr,f
 11247  15CE  0B89               	decfsz	9,f
 11248  15CF  2DCA               	goto	u7255
 11249  15D0  0849               	movf	??_LEDsPwr+1,w
 11250  15D1  00BD               	movwf	send_2length_2bytes_IK@data1+1
 11251  15D2  0848               	movf	??_LEDsPwr,w
 11252  15D3  00BC               	movwf	send_2length_2bytes_IK@data1
 11253  15D4  0021               	movlb	1	; select bank1
 11254  15D5  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 11255  15D6  0020               	movlb	0	; select bank0
 11256  15D7  00BF               	movwf	send_2length_2bytes_IK@data2+1
 11257  15D8  0021               	movlb	1	; select bank1
 11258  15D9  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 11259  15DA  0020               	movlb	0	; select bank0
 11260  15DB  00BE               	movwf	send_2length_2bytes_IK@data2
 11261  15DC  3007               	movlw	7
 11262  15DD  00CC               	movwf	??_LEDsPwr+4
 11263  15DE  084C               	movf	??_LEDsPwr+4,w
 11264  15DF  00C0               	movwf	send_2length_2bytes_IK@latch_start
 11265  15E0  0847               	movf	LEDsPwr@topOrBottom+1,w
 11266  15E1  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 11267  15E2  0846               	movf	LEDsPwr@topOrBottom,w
 11268  15E3  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 11269  15E4  31A6  26E2         	fcall	_send_2length_2bytes_IK
 11270  15E6  0008               	return
 11271  15E7                     __end_of_LEDsPwr:	
 11272                           
 11273                           	psect	text19
 11274  2784                     __ptext19:	
 11275 ;; *************** function _setLEDBrightnessRange *****************
 11276 ;; Defined at:
 11277 ;;		line 441 in file "main.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;  r               2   21[BANK1 ] int 
 11280 ;;  tOB             2   23[BANK1 ] int 
 11281 ;; Auto vars:     Size  Location     Type
 11282 ;;		None
 11283 ;; Return value:  Size  Location     Type
 11284 ;;                  2   21[BANK1 ] int 
 11285 ;; Registers used:
 11286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11287 ;; Tracked objects:
 11288 ;;		On entry : 0/0
 11289 ;;		On exit  : 0/0
 11290 ;;		Unchanged: 0/0
 11291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11292 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11295 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11296 ;;Total ram usage:        4 bytes
 11297 ;; Hardware stack levels used:    1
 11298 ;; Hardware stack levels required when called:    9
 11299 ;; This function calls:
 11300 ;;		_LED_setBrightnessRange
 11301 ;;		_printf
 11302 ;; This function is called by:
 11303 ;;		_execCmd
 11304 ;; This function uses a non-reentrant model
 11305 ;;
 11306                           
 11307                           
 11308                           ;psect for function _setLEDBrightnessRange
 11309  2784                     _setLEDBrightnessRange:	
 11310                           
 11311                           ;main.c: 442: LED_setBrightnessRange(r, tOB);
 11312                           
 11313                           ;incstack = 0
 11314                           ; Regs used in _setLEDBrightnessRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11315  2784  0021               	movlb	1	; select bank1
 11316  2785  0836               	movf	(setLEDBrightnessRange@r+1)^(0+128),w
 11317  2786  0020               	movlb	0	; select bank0
 11318  2787  00C5               	movwf	LED_setBrightnessRange@range+1
 11319  2788  0021               	movlb	1	; select bank1
 11320  2789  0835               	movf	setLEDBrightnessRange@r^(0+128),w
 11321  278A  0020               	movlb	0	; select bank0
 11322  278B  00C4               	movwf	LED_setBrightnessRange@range
 11323  278C  0021               	movlb	1	; select bank1
 11324  278D  0838               	movf	(setLEDBrightnessRange@tOB+1)^(0+128),w
 11325  278E  0020               	movlb	0	; select bank0
 11326  278F  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 11327  2790  0021               	movlb	1	; select bank1
 11328  2791  0837               	movf	setLEDBrightnessRange@tOB^(0+128),w
 11329  2792  0020               	movlb	0	; select bank0
 11330  2793  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 11331  2794  318C  2445  31A7   	fcall	_LED_setBrightnessRange
 11332                           
 11333                           ;main.c: 443: printf("A\n");
 11334  2797  3025               	movlw	low (STR_7| (0+32768))
 11335  2798  0021               	movlb	1	; select bank1
 11336  2799  00A0               	movwf	printf@f^(0+128)
 11337  279A  30AA               	movlw	high (STR_7| (0+32768))
 11338  279B  00A1               	movwf	(printf@f^(0+128)+1)
 11339  279C  3186  2618         	fcall	_printf
 11340                           
 11341                           ;main.c: 444: return 0;
 11342  279E  0021               	movlb	1	; select bank1
 11343  279F  01B5               	clrf	?_setLEDBrightnessRange^(0+128)
 11344  27A0  01B6               	clrf	(?_setLEDBrightnessRange+1)^(0+128)
 11345  27A1  0008               	return
 11346  27A2                     __end_of_setLEDBrightnessRange:	
 11347                           
 11348                           	psect	text20
 11349  0857                     __ptext20:	
 11350 ;; *************** function _setHeaterToggle *****************
 11351 ;; Defined at:
 11352 ;;		line 458 in file "main.c"
 11353 ;; Parameters:    Size  Location     Type
 11354 ;;  num             2   21[BANK1 ] int 
 11355 ;;  topOrB          2   23[BANK1 ] int 
 11356 ;; Auto vars:     Size  Location     Type
 11357 ;;		None
 11358 ;; Return value:  Size  Location     Type
 11359 ;;                  2   21[BANK1 ] int 
 11360 ;; Registers used:
 11361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11362 ;; Tracked objects:
 11363 ;;		On entry : 0/0
 11364 ;;		On exit  : 0/0
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11367 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11369 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11370 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11371 ;;Total ram usage:        8 bytes
 11372 ;; Hardware stack levels used:    1
 11373 ;; Hardware stack levels required when called:    9
 11374 ;; This function calls:
 11375 ;;		_LEDsOn
 11376 ;;		_printf
 11377 ;; This function is called by:
 11378 ;;		_execCmd
 11379 ;; This function uses a non-reentrant model
 11380 ;;
 11381                           
 11382                           
 11383                           ;psect for function _setHeaterToggle
 11384  0857                     _setHeaterToggle:	
 11385                           
 11386                           ;main.c: 460: if(topOrB){
 11387                           
 11388                           ;incstack = 0
 11389                           ; Regs used in _setHeaterToggle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11390  0857  0021               	movlb	1	; select bank1
 11391  0858  0837               	movf	setHeaterToggle@topOrB^(0+128),w
 11392  0859  0438               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 11393  085A  1903               	btfsc	3,2
 11394  085B  288C               	goto	l7832
 11395                           
 11396                           ;main.c: 461: demoHeaterToggle_top ^= 1UL << num;
 11397  085C  3001               	movlw	1
 11398  085D  00B9               	movwf	??_setHeaterToggle^(0+128)
 11399  085E  3000               	movlw	0
 11400  085F  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 11401  0860  3000               	movlw	0
 11402  0861  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 11403  0862  3000               	movlw	0
 11404  0863  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 11405  0864  0A35               	incf	setHeaterToggle@num^(0+128),w
 11406  0865  286A               	goto	u7900
 11407  0866                     u7905:	
 11408  0866  35B9               	lslf	??_setHeaterToggle^(0+128),f
 11409  0867  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 11410  0868  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 11411  0869  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 11412  086A                     u7900:	
 11413  086A  0B89               	decfsz	9,f
 11414  086B  2866               	goto	u7905
 11415  086C  0839               	movf	??_setHeaterToggle^(0+128),w
 11416  086D  0022               	movlb	2	; select bank2
 11417  086E  06CA               	xorwf	_demoHeaterToggle_top^(0+256),f
 11418  086F  0021               	movlb	1	; select bank1
 11419  0870  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 11420  0871  0022               	movlb	2	; select bank2
 11421  0872  06CB               	xorwf	(_demoHeaterToggle_top+1)^(0+256),f
 11422  0873  0021               	movlb	1	; select bank1
 11423  0874  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 11424  0875  0022               	movlb	2	; select bank2
 11425  0876  06CC               	xorwf	(_demoHeaterToggle_top+2)^(0+256),f
 11426  0877  0021               	movlb	1	; select bank1
 11427  0878  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 11428  0879  0022               	movlb	2	; select bank2
 11429  087A  06CD               	xorwf	(_demoHeaterToggle_top+3)^(0+256),f
 11430                           
 11431                           ;main.c: 462: LEDsOn(demoHeaterToggle_top, 1);
 11432  087B  084D               	movf	(_demoHeaterToggle_top+3)^(0+256),w
 11433  087C  0020               	movlb	0	; select bank0
 11434  087D  00C7               	movwf	LEDsOn@LEDpins+3
 11435  087E  0022               	movlb	2	; select bank2
 11436  087F  084C               	movf	(_demoHeaterToggle_top+2)^(0+256),w
 11437  0880  0020               	movlb	0	; select bank0
 11438  0881  00C6               	movwf	LEDsOn@LEDpins+2
 11439  0882  0022               	movlb	2	; select bank2
 11440  0883  084B               	movf	(_demoHeaterToggle_top+1)^(0+256),w
 11441  0884  0020               	movlb	0	; select bank0
 11442  0885  00C5               	movwf	LEDsOn@LEDpins+1
 11443  0886  0022               	movlb	2	; select bank2
 11444  0887  084A               	movf	_demoHeaterToggle_top^(0+256),w
 11445  0888  0020               	movlb	0	; select bank0
 11446  0889  00C4               	movwf	LEDsOn@LEDpins
 11447  088A  3001               	movlw	1
 11448  088B  28BC               	goto	L20
 11449  088C                     l7832:	
 11450                           ;main.c: 463: }
 11451                           
 11452                           
 11453                           ;main.c: 464: else{
 11454                           ;main.c: 465: demoHeaterToggle_bot ^= 1UL << num;
 11455  088C  3001               	movlw	1
 11456  088D  0021               	movlb	1	; select bank1
 11457  088E  00B9               	movwf	??_setHeaterToggle^(0+128)
 11458  088F  3000               	movlw	0
 11459  0890  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 11460  0891  3000               	movlw	0
 11461  0892  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 11462  0893  3000               	movlw	0
 11463  0894  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 11464  0895  0A35               	incf	setHeaterToggle@num^(0+128),w
 11465  0896  289B               	goto	u7910
 11466  0897                     u7915:	
 11467  0897  35B9               	lslf	??_setHeaterToggle^(0+128),f
 11468  0898  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 11469  0899  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 11470  089A  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 11471  089B                     u7910:	
 11472  089B  0B89               	decfsz	9,f
 11473  089C  2897               	goto	u7915
 11474  089D  0839               	movf	??_setHeaterToggle^(0+128),w
 11475  089E  0022               	movlb	2	; select bank2
 11476  089F  06C6               	xorwf	_demoHeaterToggle_bot^(0+256),f
 11477  08A0  0021               	movlb	1	; select bank1
 11478  08A1  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 11479  08A2  0022               	movlb	2	; select bank2
 11480  08A3  06C7               	xorwf	(_demoHeaterToggle_bot+1)^(0+256),f
 11481  08A4  0021               	movlb	1	; select bank1
 11482  08A5  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 11483  08A6  0022               	movlb	2	; select bank2
 11484  08A7  06C8               	xorwf	(_demoHeaterToggle_bot+2)^(0+256),f
 11485  08A8  0021               	movlb	1	; select bank1
 11486  08A9  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 11487  08AA  0022               	movlb	2	; select bank2
 11488  08AB  06C9               	xorwf	(_demoHeaterToggle_bot+3)^(0+256),f
 11489                           
 11490                           ;main.c: 466: LEDsOn(demoHeaterToggle_top, 2);
 11491  08AC  084D               	movf	(_demoHeaterToggle_top+3)^(0+256),w
 11492  08AD  0020               	movlb	0	; select bank0
 11493  08AE  00C7               	movwf	LEDsOn@LEDpins+3
 11494  08AF  0022               	movlb	2	; select bank2
 11495  08B0  084C               	movf	(_demoHeaterToggle_top+2)^(0+256),w
 11496  08B1  0020               	movlb	0	; select bank0
 11497  08B2  00C6               	movwf	LEDsOn@LEDpins+2
 11498  08B3  0022               	movlb	2	; select bank2
 11499  08B4  084B               	movf	(_demoHeaterToggle_top+1)^(0+256),w
 11500  08B5  0020               	movlb	0	; select bank0
 11501  08B6  00C5               	movwf	LEDsOn@LEDpins+1
 11502  08B7  0022               	movlb	2	; select bank2
 11503  08B8  084A               	movf	_demoHeaterToggle_top^(0+256),w
 11504  08B9  0020               	movlb	0	; select bank0
 11505  08BA  00C4               	movwf	LEDsOn@LEDpins
 11506  08BB  3002               	movlw	2
 11507  08BC                     L20:	
 11508  08BC  00C8               	movwf	LEDsOn@topOrBottom
 11509  08BD  3000               	movlw	0
 11510  08BE  00C9               	movwf	LEDsOn@topOrBottom+1
 11511  08BF  3198  2080  3188   	fcall	_LEDsOn
 11512                           
 11513                           ;main.c: 467: }
 11514                           ;main.c: 469: printf("A\n");
 11515  08C2  3025               	movlw	low (STR_7| (0+32768))
 11516  08C3  0021               	movlb	1	; select bank1
 11517  08C4  00A0               	movwf	printf@f^(0+128)
 11518  08C5  30AA               	movlw	high (STR_7| (0+32768))
 11519  08C6  00A1               	movwf	(printf@f^(0+128)+1)
 11520  08C7  3186  2618         	fcall	_printf
 11521                           
 11522                           ;main.c: 470: return 0;
 11523  08C9  0021               	movlb	1	; select bank1
 11524  08CA  01B5               	clrf	?_setHeaterToggle^(0+128)
 11525  08CB  01B6               	clrf	(?_setHeaterToggle+1)^(0+128)
 11526  08CC  0008               	return
 11527  08CD                     __end_of_setHeaterToggle:	
 11528                           
 11529                           	psect	text21
 11530  1520                     __ptext21:	
 11531 ;; *************** function _setHeaterPreTime *****************
 11532 ;; Defined at:
 11533 ;;		line 425 in file "main.c"
 11534 ;; Parameters:    Size  Location     Type
 11535 ;;  t               2   29[BANK1 ] int 
 11536 ;; Auto vars:     Size  Location     Type
 11537 ;;		None
 11538 ;; Return value:  Size  Location     Type
 11539 ;;                  2   29[BANK1 ] int 
 11540 ;; Registers used:
 11541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11542 ;; Tracked objects:
 11543 ;;		On entry : 0/0
 11544 ;;		On exit  : 0/0
 11545 ;;		Unchanged: 0/0
 11546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11547 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11549 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11550 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11551 ;;Total ram usage:        4 bytes
 11552 ;; Hardware stack levels used:    1
 11553 ;; Hardware stack levels required when called:    9
 11554 ;; This function calls:
 11555 ;;		_TMR0_Load8bitPeriod
 11556 ;;		___awtoft
 11557 ;;		___ftadd
 11558 ;;		___ftmul
 11559 ;;		___fttol
 11560 ;;		_printf
 11561 ;; This function is called by:
 11562 ;;		_execCmd
 11563 ;; This function uses a non-reentrant model
 11564 ;;
 11565                           
 11566                           
 11567                           ;psect for function _setHeaterPreTime
 11568  1520                     _setHeaterPreTime:	
 11569                           
 11570                           ;main.c: 426: heater_pre_time_ms = t;
 11571                           
 11572                           ;incstack = 0
 11573                           ; Regs used in _setHeaterPreTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11574  1520  0021               	movlb	1	; select bank1
 11575  1521  083E               	movf	(setHeaterPreTime@t+1)^(0+128),w
 11576  1522  0020               	movlb	0	; select bank0
 11577  1523  00DD               	movwf	_heater_pre_time_ms+1
 11578  1524  0021               	movlb	1	; select bank1
 11579  1525  083D               	movf	setHeaterPreTime@t^(0+128),w
 11580  1526  0020               	movlb	0	; select bank0
 11581  1527  00DC               	movwf	_heater_pre_time_ms
 11582                           
 11583                           ;main.c: 427: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 11584  1528  095C               	comf	_heater_pre_time_ms,w
 11585  1529  0021               	movlb	1	; select bank1
 11586  152A  00BF               	movwf	??_setHeaterPreTime^(0+128)
 11587  152B  0020               	movlb	0	; select bank0
 11588  152C  095D               	comf	_heater_pre_time_ms+1,w
 11589  152D  0021               	movlb	1	; select bank1
 11590  152E  00C0               	movwf	(??_setHeaterPreTime^(0+128)+1)
 11591  152F  0ABF               	incf	??_setHeaterPreTime^(0+128),f
 11592  1530  1903               	skipnz
 11593  1531  0AC0               	incf	(??_setHeaterPreTime^(0+128)+1),f
 11594  1532  0020               	movlb	0	; select bank0
 11595  1533  0858               	movf	_piezo_on_time_ms,w
 11596  1534  0021               	movlb	1	; select bank1
 11597  1535  073F               	addwf	??_setHeaterPreTime^(0+128),w
 11598  1536  0020               	movlb	0	; select bank0
 11599  1537  00B9               	movwf	___awtoft@c
 11600  1538  0859               	movf	_piezo_on_time_ms+1,w
 11601  1539  0021               	movlb	1	; select bank1
 11602  153A  3D40               	addwfc	(??_setHeaterPreTime+1)^(0+128),w
 11603  153B  0020               	movlb	0	; select bank0
 11604  153C  00BA               	movwf	___awtoft@c+1
 11605  153D  3198  20A1  3195   	fcall	___awtoft
 11606  1540  0020               	movlb	0	; select bank0
 11607  1541  0839               	movf	?___awtoft,w
 11608  1542  00C2               	movwf	___ftmul@f2
 11609  1543  083A               	movf	?___awtoft+1,w
 11610  1544  00C3               	movwf	___ftmul@f2+1
 11611  1545  083B               	movf	?___awtoft+2,w
 11612  1546  00C4               	movwf	___ftmul@f2+2
 11613  1547  3022               	movlw	low (_TMR0_RANGE| (0+32768))
 11614  1548  0084               	movwf	4
 11615  1549  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 11616  154A  0085               	movwf	5
 11617  154B  3F00               	moviw [0]fsr0
 11618  154C  00BF               	movwf	___ftmul@f1
 11619  154D  3F01               	moviw [1]fsr0
 11620  154E  00C0               	movwf	___ftmul@f1+1
 11621  154F  3F02               	moviw [2]fsr0
 11622  1550  00C1               	movwf	___ftmul@f1+2
 11623  1551  318D  2523  3195   	fcall	___ftmul
 11624  1554  0020               	movlb	0	; select bank0
 11625  1555  083F               	movf	?___ftmul,w
 11626  1556  0021               	movlb	1	; select bank1
 11627  1557  00A9               	movwf	___ftadd@f2^(0+128)
 11628  1558  0020               	movlb	0	; select bank0
 11629  1559  0840               	movf	?___ftmul+1,w
 11630  155A  0021               	movlb	1	; select bank1
 11631  155B  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 11632  155C  0020               	movlb	0	; select bank0
 11633  155D  0841               	movf	?___ftmul+2,w
 11634  155E  0021               	movlb	1	; select bank1
 11635  155F  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 11636  1560  3000               	movlw	0
 11637  1561  00A6               	movwf	___ftadd@f1^(0+128)
 11638  1562  3080               	movlw	128
 11639  1563  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 11640  1564  30BF               	movlw	191
 11641  1565  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 11642  1566  318E  26E6  3195   	fcall	___ftadd
 11643  1569  0021               	movlb	1	; select bank1
 11644  156A  0826               	movf	?___ftadd^(0+128),w
 11645  156B  00AF               	movwf	___fttol@f1^(0+128)
 11646  156C  0827               	movf	(?___ftadd+1)^(0+128),w
 11647  156D  00B0               	movwf	(___fttol@f1+1)^(0+128)
 11648  156E  0828               	movf	(?___ftadd+2)^(0+128),w
 11649  156F  00B1               	movwf	(___fttol@f1+2)^(0+128)
 11650  1570  318A  223C  3195   	fcall	___fttol
 11651  1573  0021               	movlb	1	; select bank1
 11652  1574  082F               	movf	?___fttol^(0+128),w
 11653  1575  31A4  24E7  3195   	fcall	_TMR0_Load8bitPeriod
 11654                           
 11655                           ;main.c: 428: printf("A\n");
 11656  1578  3025               	movlw	low (STR_7| (0+32768))
 11657  1579  0021               	movlb	1	; select bank1
 11658  157A  00A0               	movwf	printf@f^(0+128)
 11659  157B  30AA               	movlw	high (STR_7| (0+32768))
 11660  157C  00A1               	movwf	(printf@f^(0+128)+1)
 11661  157D  3186  2618         	fcall	_printf
 11662                           
 11663                           ;main.c: 429: return 0;
 11664  157F  0021               	movlb	1	; select bank1
 11665  1580  01BD               	clrf	?_setHeaterPreTime^(0+128)
 11666  1581  01BE               	clrf	(?_setHeaterPreTime+1)^(0+128)
 11667  1582  0008               	return
 11668  1583                     __end_of_setHeaterPreTime:	
 11669                           
 11670                           	psect	text22
 11671  1EFD                     __ptext22:	
 11672 ;; *************** function _setHeaterPostTime *****************
 11673 ;; Defined at:
 11674 ;;		line 431 in file "main.c"
 11675 ;; Parameters:    Size  Location     Type
 11676 ;;  t               2   29[BANK1 ] int 
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;		None
 11679 ;; Return value:  Size  Location     Type
 11680 ;;                  2   29[BANK1 ] int 
 11681 ;; Registers used:
 11682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11683 ;; Tracked objects:
 11684 ;;		On entry : 0/0
 11685 ;;		On exit  : 0/0
 11686 ;;		Unchanged: 0/0
 11687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11688 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11691 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11692 ;;Total ram usage:        2 bytes
 11693 ;; Hardware stack levels used:    1
 11694 ;; Hardware stack levels required when called:    9
 11695 ;; This function calls:
 11696 ;;		_TMR2_LoadPeriodRegister
 11697 ;;		___awtoft
 11698 ;;		___ftadd
 11699 ;;		___ftmul
 11700 ;;		___fttol
 11701 ;;		_printf
 11702 ;; This function is called by:
 11703 ;;		_execCmd
 11704 ;; This function uses a non-reentrant model
 11705 ;;
 11706                           
 11707                           
 11708                           ;psect for function _setHeaterPostTime
 11709  1EFD                     _setHeaterPostTime:	
 11710                           
 11711                           ;main.c: 432: heater_post_time_ms = t;
 11712                           
 11713                           ;incstack = 0
 11714                           ; Regs used in _setHeaterPostTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11715  1EFD  0021               	movlb	1	; select bank1
 11716  1EFE  083E               	movf	(setHeaterPostTime@t+1)^(0+128),w
 11717  1EFF  0020               	movlb	0	; select bank0
 11718  1F00  00DB               	movwf	_heater_post_time_ms+1
 11719  1F01  0021               	movlb	1	; select bank1
 11720  1F02  083D               	movf	setHeaterPostTime@t^(0+128),w
 11721  1F03  0020               	movlb	0	; select bank0
 11722  1F04  00DA               	movwf	_heater_post_time_ms
 11723                           
 11724                           ;main.c: 433: TMR2_LoadPeriodRegister((heater_post_time_ms*TMR2_RANGE)-1);
 11725  1F05  085B               	movf	_heater_post_time_ms+1,w
 11726  1F06  00BA               	movwf	___awtoft@c+1
 11727  1F07  085A               	movf	_heater_post_time_ms,w
 11728  1F08  00B9               	movwf	___awtoft@c
 11729  1F09  3198  20A1  319E   	fcall	___awtoft
 11730  1F0C  0020               	movlb	0	; select bank0
 11731  1F0D  0839               	movf	?___awtoft,w
 11732  1F0E  00C2               	movwf	___ftmul@f2
 11733  1F0F  083A               	movf	?___awtoft+1,w
 11734  1F10  00C3               	movwf	___ftmul@f2+1
 11735  1F11  083B               	movf	?___awtoft+2,w
 11736  1F12  00C4               	movwf	___ftmul@f2+2
 11737  1F13  301F               	movlw	low (_TMR2_RANGE| (0+32768))
 11738  1F14  0084               	movwf	4
 11739  1F15  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
 11740  1F16  0085               	movwf	5
 11741  1F17  3F00               	moviw [0]fsr0
 11742  1F18  00BF               	movwf	___ftmul@f1
 11743  1F19  3F01               	moviw [1]fsr0
 11744  1F1A  00C0               	movwf	___ftmul@f1+1
 11745  1F1B  3F02               	moviw [2]fsr0
 11746  1F1C  00C1               	movwf	___ftmul@f1+2
 11747  1F1D  318D  2523  319E   	fcall	___ftmul
 11748  1F20  0020               	movlb	0	; select bank0
 11749  1F21  083F               	movf	?___ftmul,w
 11750  1F22  0021               	movlb	1	; select bank1
 11751  1F23  00A9               	movwf	___ftadd@f2^(0+128)
 11752  1F24  0020               	movlb	0	; select bank0
 11753  1F25  0840               	movf	?___ftmul+1,w
 11754  1F26  0021               	movlb	1	; select bank1
 11755  1F27  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 11756  1F28  0020               	movlb	0	; select bank0
 11757  1F29  0841               	movf	?___ftmul+2,w
 11758  1F2A  0021               	movlb	1	; select bank1
 11759  1F2B  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 11760  1F2C  3000               	movlw	0
 11761  1F2D  00A6               	movwf	___ftadd@f1^(0+128)
 11762  1F2E  3080               	movlw	128
 11763  1F2F  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 11764  1F30  30BF               	movlw	191
 11765  1F31  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 11766  1F32  318E  26E6  319E   	fcall	___ftadd
 11767  1F35  0021               	movlb	1	; select bank1
 11768  1F36  0826               	movf	?___ftadd^(0+128),w
 11769  1F37  00AF               	movwf	___fttol@f1^(0+128)
 11770  1F38  0827               	movf	(?___ftadd+1)^(0+128),w
 11771  1F39  00B0               	movwf	(___fttol@f1+1)^(0+128)
 11772  1F3A  0828               	movf	(?___ftadd+2)^(0+128),w
 11773  1F3B  00B1               	movwf	(___fttol@f1+2)^(0+128)
 11774  1F3C  318A  223C  319E   	fcall	___fttol
 11775  1F3F  0021               	movlb	1	; select bank1
 11776  1F40  082F               	movf	?___fttol^(0+128),w
 11777  1F41  31A4  24EC  319E   	fcall	_TMR2_LoadPeriodRegister
 11778                           
 11779                           ;main.c: 434: printf("A\n");
 11780  1F44  3025               	movlw	low (STR_7| (0+32768))
 11781  1F45  0021               	movlb	1	; select bank1
 11782  1F46  00A0               	movwf	printf@f^(0+128)
 11783  1F47  30AA               	movlw	high (STR_7| (0+32768))
 11784  1F48  00A1               	movwf	(printf@f^(0+128)+1)
 11785  1F49  3186  2618         	fcall	_printf
 11786                           
 11787                           ;main.c: 435: return 0;
 11788  1F4B  0021               	movlb	1	; select bank1
 11789  1F4C  01BD               	clrf	?_setHeaterPostTime^(0+128)
 11790  1F4D  01BE               	clrf	(?_setHeaterPostTime+1)^(0+128)
 11791  1F4E  0008               	return
 11792  1F4F                     __end_of_setHeaterPostTime:	
 11793                           
 11794                           	psect	text23
 11795  24EC                     __ptext23:	
 11796 ;; *************** function _TMR2_LoadPeriodRegister *****************
 11797 ;; Defined at:
 11798 ;;		line 114 in file "mcc_generated_files/tmr2.c"
 11799 ;; Parameters:    Size  Location     Type
 11800 ;;  periodVal       1    wreg     unsigned char 
 11801 ;; Auto vars:     Size  Location     Type
 11802 ;;  periodVal       1   17[BANK0 ] unsigned char 
 11803 ;; Return value:  Size  Location     Type
 11804 ;;                  1    wreg      void 
 11805 ;; Registers used:
 11806 ;;		wreg
 11807 ;; Tracked objects:
 11808 ;;		On entry : 0/0
 11809 ;;		On exit  : 0/0
 11810 ;;		Unchanged: 0/0
 11811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11815 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11816 ;;Total ram usage:        1 bytes
 11817 ;; Hardware stack levels used:    1
 11818 ;; Hardware stack levels required when called:    6
 11819 ;; This function calls:
 11820 ;;		Nothing
 11821 ;; This function is called by:
 11822 ;;		_initialize
 11823 ;;		_setHeaterPostTime
 11824 ;; This function uses a non-reentrant model
 11825 ;;
 11826                           
 11827                           
 11828                           ;psect for function _TMR2_LoadPeriodRegister
 11829  24EC                     _TMR2_LoadPeriodRegister:	
 11830                           
 11831                           ;incstack = 0
 11832                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
 11833                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
 11834  24EC  0020               	movlb	0	; select bank0
 11835  24ED  00B1               	movwf	TMR2_LoadPeriodRegister@periodVal
 11836                           
 11837                           ;tmr2.c: 116: PR2 = periodVal;
 11838  24EE  0831               	movf	TMR2_LoadPeriodRegister@periodVal,w
 11839  24EF  009E               	movwf	30	;volatile
 11840  24F0  0008               	return
 11841  24F1                     __end_of_TMR2_LoadPeriodRegister:	
 11842                           
 11843                           	psect	text24
 11844  14BD                     __ptext24:	
 11845 ;; *************** function _setDrvPiezoOnTime *****************
 11846 ;; Defined at:
 11847 ;;		line 414 in file "main.c"
 11848 ;; Parameters:    Size  Location     Type
 11849 ;;  t               2   29[BANK1 ] int 
 11850 ;; Auto vars:     Size  Location     Type
 11851 ;;		None
 11852 ;; Return value:  Size  Location     Type
 11853 ;;                  2   29[BANK1 ] int 
 11854 ;; Registers used:
 11855 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11856 ;; Tracked objects:
 11857 ;;		On entry : 0/0
 11858 ;;		On exit  : 0/0
 11859 ;;		Unchanged: 0/0
 11860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11861 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11863 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11864 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11865 ;;Total ram usage:        4 bytes
 11866 ;; Hardware stack levels used:    1
 11867 ;; Hardware stack levels required when called:    9
 11868 ;; This function calls:
 11869 ;;		_TMR0_Load8bitPeriod
 11870 ;;		___awtoft
 11871 ;;		___ftadd
 11872 ;;		___ftmul
 11873 ;;		___fttol
 11874 ;;		_printf
 11875 ;; This function is called by:
 11876 ;;		_execCmd
 11877 ;; This function uses a non-reentrant model
 11878 ;;
 11879                           
 11880                           
 11881                           ;psect for function _setDrvPiezoOnTime
 11882  14BD                     _setDrvPiezoOnTime:	
 11883                           
 11884                           ;main.c: 415: piezo_on_time_ms = t;
 11885                           
 11886                           ;incstack = 0
 11887                           ; Regs used in _setDrvPiezoOnTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11888  14BD  0021               	movlb	1	; select bank1
 11889  14BE  083E               	movf	(setDrvPiezoOnTime@t+1)^(0+128),w
 11890  14BF  0020               	movlb	0	; select bank0
 11891  14C0  00D9               	movwf	_piezo_on_time_ms+1
 11892  14C1  0021               	movlb	1	; select bank1
 11893  14C2  083D               	movf	setDrvPiezoOnTime@t^(0+128),w
 11894  14C3  0020               	movlb	0	; select bank0
 11895  14C4  00D8               	movwf	_piezo_on_time_ms
 11896                           
 11897                           ;main.c: 416: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 11898  14C5  095C               	comf	_heater_pre_time_ms,w
 11899  14C6  0021               	movlb	1	; select bank1
 11900  14C7  00BF               	movwf	??_setDrvPiezoOnTime^(0+128)
 11901  14C8  0020               	movlb	0	; select bank0
 11902  14C9  095D               	comf	_heater_pre_time_ms+1,w
 11903  14CA  0021               	movlb	1	; select bank1
 11904  14CB  00C0               	movwf	(??_setDrvPiezoOnTime^(0+128)+1)
 11905  14CC  0ABF               	incf	??_setDrvPiezoOnTime^(0+128),f
 11906  14CD  1903               	skipnz
 11907  14CE  0AC0               	incf	(??_setDrvPiezoOnTime^(0+128)+1),f
 11908  14CF  0020               	movlb	0	; select bank0
 11909  14D0  0858               	movf	_piezo_on_time_ms,w
 11910  14D1  0021               	movlb	1	; select bank1
 11911  14D2  073F               	addwf	??_setDrvPiezoOnTime^(0+128),w
 11912  14D3  0020               	movlb	0	; select bank0
 11913  14D4  00B9               	movwf	___awtoft@c
 11914  14D5  0859               	movf	_piezo_on_time_ms+1,w
 11915  14D6  0021               	movlb	1	; select bank1
 11916  14D7  3D40               	addwfc	(??_setDrvPiezoOnTime+1)^(0+128),w
 11917  14D8  0020               	movlb	0	; select bank0
 11918  14D9  00BA               	movwf	___awtoft@c+1
 11919  14DA  3198  20A1  3194   	fcall	___awtoft
 11920  14DD  0020               	movlb	0	; select bank0
 11921  14DE  0839               	movf	?___awtoft,w
 11922  14DF  00C2               	movwf	___ftmul@f2
 11923  14E0  083A               	movf	?___awtoft+1,w
 11924  14E1  00C3               	movwf	___ftmul@f2+1
 11925  14E2  083B               	movf	?___awtoft+2,w
 11926  14E3  00C4               	movwf	___ftmul@f2+2
 11927  14E4  3022               	movlw	low (_TMR0_RANGE| (0+32768))
 11928  14E5  0084               	movwf	4
 11929  14E6  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 11930  14E7  0085               	movwf	5
 11931  14E8  3F00               	moviw [0]fsr0
 11932  14E9  00BF               	movwf	___ftmul@f1
 11933  14EA  3F01               	moviw [1]fsr0
 11934  14EB  00C0               	movwf	___ftmul@f1+1
 11935  14EC  3F02               	moviw [2]fsr0
 11936  14ED  00C1               	movwf	___ftmul@f1+2
 11937  14EE  318D  2523  3194   	fcall	___ftmul
 11938  14F1  0020               	movlb	0	; select bank0
 11939  14F2  083F               	movf	?___ftmul,w
 11940  14F3  0021               	movlb	1	; select bank1
 11941  14F4  00A9               	movwf	___ftadd@f2^(0+128)
 11942  14F5  0020               	movlb	0	; select bank0
 11943  14F6  0840               	movf	?___ftmul+1,w
 11944  14F7  0021               	movlb	1	; select bank1
 11945  14F8  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 11946  14F9  0020               	movlb	0	; select bank0
 11947  14FA  0841               	movf	?___ftmul+2,w
 11948  14FB  0021               	movlb	1	; select bank1
 11949  14FC  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 11950  14FD  3000               	movlw	0
 11951  14FE  00A6               	movwf	___ftadd@f1^(0+128)
 11952  14FF  3080               	movlw	128
 11953  1500  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 11954  1501  30BF               	movlw	191
 11955  1502  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 11956  1503  318E  26E6  3194   	fcall	___ftadd
 11957  1506  0021               	movlb	1	; select bank1
 11958  1507  0826               	movf	?___ftadd^(0+128),w
 11959  1508  00AF               	movwf	___fttol@f1^(0+128)
 11960  1509  0827               	movf	(?___ftadd+1)^(0+128),w
 11961  150A  00B0               	movwf	(___fttol@f1+1)^(0+128)
 11962  150B  0828               	movf	(?___ftadd+2)^(0+128),w
 11963  150C  00B1               	movwf	(___fttol@f1+2)^(0+128)
 11964  150D  318A  223C  3194   	fcall	___fttol
 11965  1510  0021               	movlb	1	; select bank1
 11966  1511  082F               	movf	?___fttol^(0+128),w
 11967  1512  31A4  24E7  3194   	fcall	_TMR0_Load8bitPeriod
 11968                           
 11969                           ;main.c: 417: printf("A\n");
 11970  1515  3025               	movlw	low (STR_7| (0+32768))
 11971  1516  0021               	movlb	1	; select bank1
 11972  1517  00A0               	movwf	printf@f^(0+128)
 11973  1518  30AA               	movlw	high (STR_7| (0+32768))
 11974  1519  00A1               	movwf	(printf@f^(0+128)+1)
 11975  151A  3186  2618         	fcall	_printf
 11976                           
 11977                           ;main.c: 418: return 0;
 11978  151C  0021               	movlb	1	; select bank1
 11979  151D  01BD               	clrf	?_setDrvPiezoOnTime^(0+128)
 11980  151E  01BE               	clrf	(?_setDrvPiezoOnTime+1)^(0+128)
 11981  151F  0008               	return
 11982  1520                     __end_of_setDrvPiezoOnTime:	
 11983                           
 11984                           	psect	text25
 11985  0EE6                     __ptext25:	
 11986 ;; *************** function ___ftadd *****************
 11987 ;; Defined at:
 11988 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 11989 ;; Parameters:    Size  Location     Type
 11990 ;;  f1              3    6[BANK1 ] float 
 11991 ;;  f2              3    9[BANK1 ] float 
 11992 ;; Auto vars:     Size  Location     Type
 11993 ;;  exp1            1   14[BANK1 ] unsigned char 
 11994 ;;  exp2            1   13[BANK1 ] unsigned char 
 11995 ;;  sign            1   12[BANK1 ] unsigned char 
 11996 ;; Return value:  Size  Location     Type
 11997 ;;                  3    6[BANK1 ] float 
 11998 ;; Registers used:
 11999 ;;		wreg, status,2, status,0, pclath, cstack
 12000 ;; Tracked objects:
 12001 ;;		On entry : 0/0
 12002 ;;		On exit  : 0/0
 12003 ;;		Unchanged: 0/0
 12004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12005 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12006 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12007 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12008 ;;      Totals:         0       4       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12009 ;;Total ram usage:       13 bytes
 12010 ;; Hardware stack levels used:    1
 12011 ;; Hardware stack levels required when called:    7
 12012 ;; This function calls:
 12013 ;;		___ftpack
 12014 ;; This function is called by:
 12015 ;;		_initialize
 12016 ;;		_setDrvPiezoOnTime
 12017 ;;		_setHeaterPreTime
 12018 ;;		_setHeaterPostTime
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022                           
 12023                           ;psect for function ___ftadd
 12024  0EE6                     ___ftadd:	
 12025                           
 12026                           ;incstack = 0
 12027                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 12028  0EE6  0021               	movlb	1	; select bank1
 12029  0EE7  0826               	movf	___ftadd@f1^(0+128),w
 12030  0EE8  0020               	movlb	0	; select bank0
 12031  0EE9  00C9               	movwf	??___ftadd
 12032  0EEA  0021               	movlb	1	; select bank1
 12033  0EEB  0827               	movf	(___ftadd@f1+1)^(0+128),w
 12034  0EEC  0020               	movlb	0	; select bank0
 12035  0EED  00CA               	movwf	??___ftadd+1
 12036  0EEE  0021               	movlb	1	; select bank1
 12037  0EEF  0828               	movf	(___ftadd@f1+2)^(0+128),w
 12038  0EF0  0020               	movlb	0	; select bank0
 12039  0EF1  00CB               	movwf	??___ftadd+2
 12040  0EF2  1003               	clrc
 12041  0EF3  0D4A               	rlf	??___ftadd+1,w
 12042  0EF4  0D4B               	rlf	??___ftadd+2,w
 12043  0EF5  00CC               	movwf	??___ftadd+3
 12044  0EF6  084C               	movf	??___ftadd+3,w
 12045  0EF7  0021               	movlb	1	; select bank1
 12046  0EF8  00AE               	movwf	___ftadd@exp1^(0+128)
 12047  0EF9  0829               	movf	___ftadd@f2^(0+128),w
 12048  0EFA  0020               	movlb	0	; select bank0
 12049  0EFB  00C9               	movwf	??___ftadd
 12050  0EFC  0021               	movlb	1	; select bank1
 12051  0EFD  082A               	movf	(___ftadd@f2+1)^(0+128),w
 12052  0EFE  0020               	movlb	0	; select bank0
 12053  0EFF  00CA               	movwf	??___ftadd+1
 12054  0F00  0021               	movlb	1	; select bank1
 12055  0F01  082B               	movf	(___ftadd@f2+2)^(0+128),w
 12056  0F02  0020               	movlb	0	; select bank0
 12057  0F03  00CB               	movwf	??___ftadd+2
 12058  0F04  1003               	clrc
 12059  0F05  0D4A               	rlf	??___ftadd+1,w
 12060  0F06  0D4B               	rlf	??___ftadd+2,w
 12061  0F07  00CC               	movwf	??___ftadd+3
 12062  0F08  084C               	movf	??___ftadd+3,w
 12063  0F09  0021               	movlb	1	; select bank1
 12064  0F0A  00AD               	movwf	___ftadd@exp2^(0+128)
 12065  0F0B  082E               	movf	___ftadd@exp1^(0+128),w
 12066  0F0C  1903               	btfsc	3,2
 12067  0F0D  2F1B               	goto	l7456
 12068  0F0E  082D               	movf	___ftadd@exp2^(0+128),w
 12069  0F0F  022E               	subwf	___ftadd@exp1^(0+128),w
 12070  0F10  1803               	skipnc
 12071  0F11  2F23               	goto	l7460
 12072  0F12  032E               	decf	___ftadd@exp1^(0+128),w
 12073  0F13  3AFF               	xorlw	255
 12074  0F14  072D               	addwf	___ftadd@exp2^(0+128),w
 12075  0F15  0020               	movlb	0	; select bank0
 12076  0F16  00C9               	movwf	??___ftadd
 12077  0F17  3019               	movlw	25
 12078  0F18  0249               	subwf	??___ftadd,w
 12079  0F19  1C03               	skipc
 12080  0F1A  2F23               	goto	l7460
 12081  0F1B                     l7456:	
 12082  0F1B  0021               	movlb	1	; select bank1
 12083  0F1C  0829               	movf	___ftadd@f2^(0+128),w
 12084  0F1D  00A6               	movwf	?___ftadd^(0+128)
 12085  0F1E  082A               	movf	(___ftadd@f2+1)^(0+128),w
 12086  0F1F  00A7               	movwf	(?___ftadd+1)^(0+128)
 12087  0F20  082B               	movf	(___ftadd@f2+2)^(0+128),w
 12088  0F21  00A8               	movwf	(?___ftadd+2)^(0+128)
 12089  0F22  0008               	return
 12090  0F23                     l7460:	
 12091  0F23  0021               	movlb	1	; select bank1
 12092  0F24  082D               	movf	___ftadd@exp2^(0+128),w
 12093  0F25  1903               	btfsc	3,2
 12094  0F26  0008               	return
 12095  0F27  082E               	movf	___ftadd@exp1^(0+128),w
 12096  0F28  022D               	subwf	___ftadd@exp2^(0+128),w
 12097  0F29  1803               	skipnc
 12098  0F2A  2F34               	goto	l7466
 12099  0F2B  032D               	decf	___ftadd@exp2^(0+128),w
 12100  0F2C  3AFF               	xorlw	255
 12101  0F2D  072E               	addwf	___ftadd@exp1^(0+128),w
 12102  0F2E  0020               	movlb	0	; select bank0
 12103  0F2F  00C9               	movwf	??___ftadd
 12104  0F30  3019               	movlw	25
 12105  0F31  0249               	subwf	??___ftadd,w
 12106  0F32  1803               	btfsc	3,0
 12107  0F33  0008               	return
 12108  0F34                     l7466:	
 12109  0F34  3006               	movlw	6
 12110  0F35  0020               	movlb	0	; select bank0
 12111  0F36  00C9               	movwf	??___ftadd
 12112  0F37  0849               	movf	??___ftadd,w
 12113  0F38  0021               	movlb	1	; select bank1
 12114  0F39  00AC               	movwf	___ftadd@sign^(0+128)
 12115  0F3A  1BA8               	btfsc	(___ftadd@f1+2)^(0+128),7
 12116  0F3B  17AC               	bsf	___ftadd@sign^(0+128),7
 12117  0F3C  1BAB               	btfsc	(___ftadd@f2+2)^(0+128),7
 12118  0F3D  172C               	bsf	___ftadd@sign^(0+128),6
 12119  0F3E  17A7               	bsf	(___ftadd@f1^(0+128)+1),7
 12120  0F3F  30FF               	movlw	255
 12121  0F40  05A6               	andwf	___ftadd@f1^(0+128),f
 12122  0F41  30FF               	movlw	255
 12123  0F42  05A7               	andwf	(___ftadd@f1+1)^(0+128),f
 12124  0F43  3000               	movlw	0
 12125  0F44  05A8               	andwf	(___ftadd@f1+2)^(0+128),f
 12126  0F45  17AA               	bsf	(___ftadd@f2^(0+128)+1),7
 12127  0F46  30FF               	movlw	255
 12128  0F47  05A9               	andwf	___ftadd@f2^(0+128),f
 12129  0F48  30FF               	movlw	255
 12130  0F49  05AA               	andwf	(___ftadd@f2+1)^(0+128),f
 12131  0F4A  3000               	movlw	0
 12132  0F4B  05AB               	andwf	(___ftadd@f2+2)^(0+128),f
 12133  0F4C  082D               	movf	___ftadd@exp2^(0+128),w
 12134  0F4D  022E               	subwf	___ftadd@exp1^(0+128),w
 12135  0F4E  1803               	skipnc
 12136  0F4F  2F74               	goto	l7488
 12137  0F50                     l7478:	
 12138  0F50  3001               	movlw	1
 12139  0F51                     u7475:	
 12140  0F51  35A9               	lslf	___ftadd@f2^(0+128),f
 12141  0F52  0DAA               	rlf	(___ftadd@f2+1)^(0+128),f
 12142  0F53  0DAB               	rlf	(___ftadd@f2+2)^(0+128),f
 12143  0F54  0B89               	decfsz	9,f
 12144  0F55  2F51               	goto	u7475
 12145  0F56  3001               	movlw	1
 12146  0F57  02AD               	subwf	___ftadd@exp2^(0+128),f
 12147  0F58  082D               	movf	___ftadd@exp2^(0+128),w
 12148  0F59  062E               	xorwf	___ftadd@exp1^(0+128),w
 12149  0F5A  1903               	skipnz
 12150  0F5B  2F6F               	goto	l7486
 12151  0F5C  3001               	movlw	1
 12152  0F5D  02AC               	subwf	___ftadd@sign^(0+128),f
 12153  0F5E  082C               	movf	___ftadd@sign^(0+128),w
 12154  0F5F  3907               	andlw	7
 12155  0F60  1903               	btfsc	3,2
 12156  0F61  2F6F               	goto	l7486
 12157  0F62  2F50               	goto	l7478
 12158  0F63                     l7484:	
 12159  0F63  3001               	movlw	1
 12160  0F64                     u7505:	
 12161  0F64  36A8               	lsrf	(___ftadd@f1+2)^(0+128),f
 12162  0F65  0CA7               	rrf	(___ftadd@f1+1)^(0+128),f
 12163  0F66  0CA6               	rrf	___ftadd@f1^(0+128),f
 12164  0F67  0B89               	decfsz	9,f
 12165  0F68  2F64               	goto	u7505
 12166  0F69  3001               	movlw	1
 12167  0F6A  0020               	movlb	0	; select bank0
 12168  0F6B  00C9               	movwf	??___ftadd
 12169  0F6C  0849               	movf	??___ftadd,w
 12170  0F6D  0021               	movlb	1	; select bank1
 12171  0F6E  07AE               	addwf	___ftadd@exp1^(0+128),f
 12172  0F6F                     l7486:	
 12173  0F6F  082E               	movf	___ftadd@exp1^(0+128),w
 12174  0F70  062D               	xorwf	___ftadd@exp2^(0+128),w
 12175  0F71  1903               	btfsc	3,2
 12176  0F72  2F9B               	goto	l1697
 12177  0F73  2F63               	goto	l7484
 12178  0F74                     l7488:	
 12179  0F74  082E               	movf	___ftadd@exp1^(0+128),w
 12180  0F75  022D               	subwf	___ftadd@exp2^(0+128),w
 12181  0F76  1803               	skipnc
 12182  0F77  2F9B               	goto	l1697
 12183  0F78                     l7490:	
 12184  0F78  3001               	movlw	1
 12185  0F79                     u7535:	
 12186  0F79  35A6               	lslf	___ftadd@f1^(0+128),f
 12187  0F7A  0DA7               	rlf	(___ftadd@f1+1)^(0+128),f
 12188  0F7B  0DA8               	rlf	(___ftadd@f1+2)^(0+128),f
 12189  0F7C  0B89               	decfsz	9,f
 12190  0F7D  2F79               	goto	u7535
 12191  0F7E  3001               	movlw	1
 12192  0F7F  02AE               	subwf	___ftadd@exp1^(0+128),f
 12193  0F80  082D               	movf	___ftadd@exp2^(0+128),w
 12194  0F81  062E               	xorwf	___ftadd@exp1^(0+128),w
 12195  0F82  1903               	skipnz
 12196  0F83  2F97               	goto	l7498
 12197  0F84  3001               	movlw	1
 12198  0F85  02AC               	subwf	___ftadd@sign^(0+128),f
 12199  0F86  082C               	movf	___ftadd@sign^(0+128),w
 12200  0F87  3907               	andlw	7
 12201  0F88  1903               	btfsc	3,2
 12202  0F89  2F97               	goto	l7498
 12203  0F8A  2F78               	goto	l7490
 12204  0F8B                     l7496:	
 12205  0F8B  3001               	movlw	1
 12206  0F8C                     u7565:	
 12207  0F8C  36AB               	lsrf	(___ftadd@f2+2)^(0+128),f
 12208  0F8D  0CAA               	rrf	(___ftadd@f2+1)^(0+128),f
 12209  0F8E  0CA9               	rrf	___ftadd@f2^(0+128),f
 12210  0F8F  0B89               	decfsz	9,f
 12211  0F90  2F8C               	goto	u7565
 12212  0F91  3001               	movlw	1
 12213  0F92  0020               	movlb	0	; select bank0
 12214  0F93  00C9               	movwf	??___ftadd
 12215  0F94  0849               	movf	??___ftadd,w
 12216  0F95  0021               	movlb	1	; select bank1
 12217  0F96  07AD               	addwf	___ftadd@exp2^(0+128),f
 12218  0F97                     l7498:	
 12219  0F97  082E               	movf	___ftadd@exp1^(0+128),w
 12220  0F98  062D               	xorwf	___ftadd@exp2^(0+128),w
 12221  0F99  1D03               	skipz
 12222  0F9A  2F8B               	goto	l7496
 12223  0F9B                     l1697:	
 12224  0F9B  1FAC               	btfss	___ftadd@sign^(0+128),7
 12225  0F9C  2FAD               	goto	l7502
 12226  0F9D  30FF               	movlw	255
 12227  0F9E  06A6               	xorwf	___ftadd@f1^(0+128),f
 12228  0F9F  30FF               	movlw	255
 12229  0FA0  06A7               	xorwf	(___ftadd@f1+1)^(0+128),f
 12230  0FA1  30FF               	movlw	255
 12231  0FA2  06A8               	xorwf	(___ftadd@f1+2)^(0+128),f
 12232  0FA3  3001               	movlw	1
 12233  0FA4  07A6               	addwf	___ftadd@f1^(0+128),f
 12234  0FA5  3000               	movlw	0
 12235  0FA6  1803               	skipnc
 12236  0FA7  3001               	movlw	1
 12237  0FA8  07A7               	addwf	(___ftadd@f1+1)^(0+128),f
 12238  0FA9  3000               	movlw	0
 12239  0FAA  1803               	skipnc
 12240  0FAB  3001               	movlw	1
 12241  0FAC  07A8               	addwf	(___ftadd@f1+2)^(0+128),f
 12242  0FAD                     l7502:	
 12243  0FAD  1F2C               	btfss	___ftadd@sign^(0+128),6
 12244  0FAE  2FBF               	goto	l7506
 12245  0FAF  30FF               	movlw	255
 12246  0FB0  06A9               	xorwf	___ftadd@f2^(0+128),f
 12247  0FB1  30FF               	movlw	255
 12248  0FB2  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 12249  0FB3  30FF               	movlw	255
 12250  0FB4  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 12251  0FB5  3001               	movlw	1
 12252  0FB6  07A9               	addwf	___ftadd@f2^(0+128),f
 12253  0FB7  3000               	movlw	0
 12254  0FB8  1803               	skipnc
 12255  0FB9  3001               	movlw	1
 12256  0FBA  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 12257  0FBB  3000               	movlw	0
 12258  0FBC  1803               	skipnc
 12259  0FBD  3001               	movlw	1
 12260  0FBE  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 12261  0FBF                     l7506:	
 12262  0FBF  01AC               	clrf	___ftadd@sign^(0+128)
 12263  0FC0  0826               	movf	___ftadd@f1^(0+128),w
 12264  0FC1  07A9               	addwf	___ftadd@f2^(0+128),f
 12265  0FC2  0827               	movf	(___ftadd@f1+1)^(0+128),w
 12266  0FC3  3DAA               	addwfc	(___ftadd@f2+1)^(0+128),f
 12267  0FC4  0828               	movf	(___ftadd@f1+2)^(0+128),w
 12268  0FC5  3DAB               	addwfc	(___ftadd@f2+2)^(0+128),f
 12269  0FC6  1FAB               	btfss	(___ftadd@f2+2)^(0+128),7
 12270  0FC7  2FDA               	goto	l7516
 12271  0FC8  30FF               	movlw	255
 12272  0FC9  06A9               	xorwf	___ftadd@f2^(0+128),f
 12273  0FCA  30FF               	movlw	255
 12274  0FCB  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 12275  0FCC  30FF               	movlw	255
 12276  0FCD  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 12277  0FCE  3001               	movlw	1
 12278  0FCF  07A9               	addwf	___ftadd@f2^(0+128),f
 12279  0FD0  3000               	movlw	0
 12280  0FD1  1803               	skipnc
 12281  0FD2  3001               	movlw	1
 12282  0FD3  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 12283  0FD4  3000               	movlw	0
 12284  0FD5  1803               	skipnc
 12285  0FD6  3001               	movlw	1
 12286  0FD7  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 12287  0FD8  01AC               	clrf	___ftadd@sign^(0+128)
 12288  0FD9  0AAC               	incf	___ftadd@sign^(0+128),f
 12289  0FDA                     l7516:	
 12290  0FDA  0829               	movf	___ftadd@f2^(0+128),w
 12291  0FDB  0020               	movlb	0	; select bank0
 12292  0FDC  00B1               	movwf	___ftpack@arg
 12293  0FDD  0021               	movlb	1	; select bank1
 12294  0FDE  082A               	movf	(___ftadd@f2+1)^(0+128),w
 12295  0FDF  0020               	movlb	0	; select bank0
 12296  0FE0  00B2               	movwf	___ftpack@arg+1
 12297  0FE1  0021               	movlb	1	; select bank1
 12298  0FE2  082B               	movf	(___ftadd@f2+2)^(0+128),w
 12299  0FE3  0020               	movlb	0	; select bank0
 12300  0FE4  00B3               	movwf	___ftpack@arg+2
 12301  0FE5  0021               	movlb	1	; select bank1
 12302  0FE6  082E               	movf	___ftadd@exp1^(0+128),w
 12303  0FE7  0020               	movlb	0	; select bank0
 12304  0FE8  00C9               	movwf	??___ftadd
 12305  0FE9  0849               	movf	??___ftadd,w
 12306  0FEA  00B4               	movwf	___ftpack@exp
 12307  0FEB  0021               	movlb	1	; select bank1
 12308  0FEC  082C               	movf	___ftadd@sign^(0+128),w
 12309  0FED  0020               	movlb	0	; select bank0
 12310  0FEE  00CA               	movwf	??___ftadd+1
 12311  0FEF  084A               	movf	??___ftadd+1,w
 12312  0FF0  00B5               	movwf	___ftpack@sign
 12313  0FF1  3195  25E7         	fcall	___ftpack
 12314  0FF3  0020               	movlb	0	; select bank0
 12315  0FF4  0831               	movf	?___ftpack,w
 12316  0FF5  0021               	movlb	1	; select bank1
 12317  0FF6  00A6               	movwf	?___ftadd^(0+128)
 12318  0FF7  0020               	movlb	0	; select bank0
 12319  0FF8  0832               	movf	?___ftpack+1,w
 12320  0FF9  0021               	movlb	1	; select bank1
 12321  0FFA  00A7               	movwf	(?___ftadd+1)^(0+128)
 12322  0FFB  0020               	movlb	0	; select bank0
 12323  0FFC  0833               	movf	?___ftpack+2,w
 12324  0FFD  0021               	movlb	1	; select bank1
 12325  0FFE  00A8               	movwf	(?___ftadd+2)^(0+128)
 12326  0FFF  0008               	return
 12327  1000                     __end_of___ftadd:	
 12328                           
 12329                           	psect	text26
 12330  24E7                     __ptext26:	
 12331 ;; *************** function _TMR0_Load8bitPeriod *****************
 12332 ;; Defined at:
 12333 ;;		line 114 in file "mcc_generated_files/tmr0.c"
 12334 ;; Parameters:    Size  Location     Type
 12335 ;;  periodVal       1    wreg     unsigned char 
 12336 ;; Auto vars:     Size  Location     Type
 12337 ;;  periodVal       1   17[BANK0 ] unsigned char 
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  1    wreg      void 
 12340 ;; Registers used:
 12341 ;;		wreg
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12348 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12350 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12351 ;;Total ram usage:        1 bytes
 12352 ;; Hardware stack levels used:    1
 12353 ;; Hardware stack levels required when called:    6
 12354 ;; This function calls:
 12355 ;;		Nothing
 12356 ;; This function is called by:
 12357 ;;		_initialize
 12358 ;;		_setDrvPiezoOnTime
 12359 ;;		_setHeaterPreTime
 12360 ;; This function uses a non-reentrant model
 12361 ;;
 12362                           
 12363                           
 12364                           ;psect for function _TMR0_Load8bitPeriod
 12365  24E7                     _TMR0_Load8bitPeriod:	
 12366                           
 12367                           ;incstack = 0
 12368                           ; Regs used in _TMR0_Load8bitPeriod: [wreg]
 12369                           ;TMR0_Load8bitPeriod@periodVal stored from wreg
 12370  24E7  0020               	movlb	0	; select bank0
 12371  24E8  00B1               	movwf	TMR0_Load8bitPeriod@periodVal
 12372                           
 12373                           ;tmr0.c: 117: TMR0H = periodVal;
 12374  24E9  0831               	movf	TMR0_Load8bitPeriod@periodVal,w
 12375  24EA  0096               	movwf	22	;volatile
 12376  24EB  0008               	return
 12377  24EC                     __end_of_TMR0_Load8bitPeriod:	
 12378                           
 12379                           	psect	text27
 12380  262A                     __ptext27:	
 12381 ;; *************** function _setDrvPeak *****************
 12382 ;; Defined at:
 12383 ;;		line 393 in file "main.c"
 12384 ;; Parameters:    Size  Location     Type
 12385 ;;  pk              2   21[BANK1 ] int 
 12386 ;; Auto vars:     Size  Location     Type
 12387 ;;		None
 12388 ;; Return value:  Size  Location     Type
 12389 ;;                  2   21[BANK1 ] int 
 12390 ;; Registers used:
 12391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12392 ;; Tracked objects:
 12393 ;;		On entry : 0/0
 12394 ;;		On exit  : 0/0
 12395 ;;		Unchanged: 0/0
 12396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12397 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12400 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12401 ;;Total ram usage:        2 bytes
 12402 ;; Hardware stack levels used:    1
 12403 ;; Hardware stack levels required when called:    9
 12404 ;; This function calls:
 12405 ;;		_printf
 12406 ;; This function is called by:
 12407 ;;		_execCmd
 12408 ;; This function uses a non-reentrant model
 12409 ;;
 12410                           
 12411                           
 12412                           ;psect for function _setDrvPeak
 12413  262A                     _setDrvPeak:	
 12414                           
 12415                           ;main.c: 394: drv_peak_val = pk;
 12416                           
 12417                           ;incstack = 0
 12418                           ; Regs used in _setDrvPeak: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12419  262A  0021               	movlb	1	; select bank1
 12420  262B  0836               	movf	(setDrvPeak@pk+1)^(0+128),w
 12421  262C  00EF               	movwf	(_drv_peak_val+1)^(0+128)
 12422  262D  0835               	movf	setDrvPeak@pk^(0+128),w
 12423  262E  00EE               	movwf	_drv_peak_val^(0+128)
 12424                           
 12425                           ;main.c: 395: printf("A\n");
 12426  262F  3025               	movlw	low (STR_7| (0+32768))
 12427  2630  00A0               	movwf	printf@f^(0+128)
 12428  2631  30AA               	movlw	high (STR_7| (0+32768))
 12429  2632  00A1               	movwf	(printf@f^(0+128)+1)
 12430  2633  3186  2618         	fcall	_printf
 12431                           
 12432                           ;main.c: 396: return 0;
 12433  2635  0021               	movlb	1	; select bank1
 12434  2636  01B5               	clrf	?_setDrvPeak^(0+128)
 12435  2637  01B6               	clrf	(?_setDrvPeak+1)^(0+128)
 12436  2638  0008               	return
 12437  2639                     __end_of_setDrvPeak:	
 12438                           
 12439                           	psect	text28
 12440  1C15                     __ptext28:	
 12441 ;; *************** function _setDrvGain *****************
 12442 ;; Defined at:
 12443 ;;		line 400 in file "main.c"
 12444 ;; Parameters:    Size  Location     Type
 12445 ;;  gain            2   21[BANK1 ] int 
 12446 ;; Auto vars:     Size  Location     Type
 12447 ;;  setGain         2   24[BANK1 ] int 
 12448 ;; Return value:  Size  Location     Type
 12449 ;;                  2   21[BANK1 ] int 
 12450 ;; Registers used:
 12451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12452 ;; Tracked objects:
 12453 ;;		On entry : 0/0
 12454 ;;		On exit  : 0/0
 12455 ;;		Unchanged: 0/0
 12456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12457 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12458 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12459 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12460 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12461 ;;Total ram usage:        5 bytes
 12462 ;; Hardware stack levels used:    1
 12463 ;; Hardware stack levels required when called:   13
 12464 ;; This function calls:
 12465 ;;		_drv_write
 12466 ;;		_printf
 12467 ;; This function is called by:
 12468 ;;		_execCmd
 12469 ;; This function uses a non-reentrant model
 12470 ;;
 12471                           
 12472                           
 12473                           ;psect for function _setDrvGain
 12474  1C15                     _setDrvGain:	
 12475                           
 12476                           ;main.c: 401: int setGain = 0;
 12477                           
 12478                           ;incstack = 0
 12479                           ; Regs used in _setDrvGain: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12480  1C15  0021               	movlb	1	; select bank1
 12481  1C16  01B8               	clrf	setDrvGain@setGain^(0+128)
 12482  1C17  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 12483                           
 12484                           ;main.c: 402: switch (gain){
 12485  1C18  2C31               	goto	l7768
 12486  1C19                     l7752:	
 12487                           ;main.c: 403: case 0: setGain = 0x00; break;
 12488                           
 12489  1C19  01B8               	clrf	setDrvGain@setGain^(0+128)
 12490  1C1A  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 12491  1C1B  2C44               	goto	l7770
 12492  1C1C                     l7754:	
 12493                           ;main.c: 404: case 1: setGain = 0x01; break;
 12494                           
 12495  1C1C  3001               	movlw	1
 12496  1C1D  2C21               	goto	L22
 12497  1C1E                     l7756:	
 12498                           ;main.c: 405: case 2: setGain = 0x02; break;
 12499                           
 12500  1C1E  3002               	movlw	2
 12501  1C1F  2C21               	goto	L22
 12502  1C20                     l7758:	
 12503                           ;main.c: 406: case 3: setGain = 0x03; break;
 12504                           
 12505  1C20  3003               	movlw	3
 12506  1C21                     L22:	
 12507  1C21  00B8               	movwf	setDrvGain@setGain^(0+128)
 12508  1C22  3000               	movlw	0
 12509  1C23  00B9               	movwf	(setDrvGain@setGain^(0+128)+1)
 12510  1C24  2C44               	goto	l7770
 12511  1C25                     l7760:	
 12512                           ;main.c: 407: default: printf("E\n"); return 1;
 12513                           
 12514  1C25  3028               	movlw	low (STR_16| (0+32768))
 12515  1C26  00A0               	movwf	printf@f^(0+128)
 12516  1C27  30AA               	movlw	high (STR_16| (0+32768))
 12517  1C28  00A1               	movwf	(printf@f^(0+128)+1)
 12518  1C29  3186  2618         	fcall	_printf
 12519  1C2B  3001               	movlw	1
 12520  1C2C  0021               	movlb	1	; select bank1
 12521  1C2D  00B5               	movwf	?_setDrvGain^(0+128)
 12522  1C2E  3000               	movlw	0
 12523  1C2F  00B6               	movwf	(?_setDrvGain^(0+128)+1)
 12524  1C30  0008               	return
 12525  1C31                     l7768:	
 12526                           ;main.c: 408: }
 12527                           
 12528                           
 12529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12530                           ; Switch size 1, requested type "space"
 12531                           ; Number of cases is 1, Range of values is 0 to 0
 12532                           ; switch strategies available:
 12533                           ; Name         Instructions Cycles
 12534                           ; simple_byte            4     3 (average)
 12535                           ; direct_byte            8     6 (fixed)
 12536                           ; jumptable            260     6 (fixed)
 12537                           ;	Chosen strategy is simple_byte
 12538  1C31  0836               	movf	(setDrvGain@gain+1)^(0+128),w
 12539  1C32  3A00               	xorlw	0	; case 0
 12540  1C33  1903               	skipnz
 12541  1C34  2C36               	goto	l8500
 12542  1C35  2C25               	goto	l7760
 12543  1C36                     l8500:	
 12544                           
 12545                           ; Switch size 1, requested type "space"
 12546                           ; Number of cases is 4, Range of values is 0 to 3
 12547                           ; switch strategies available:
 12548                           ; Name         Instructions Cycles
 12549                           ; simple_byte           13     7 (average)
 12550                           ; direct_byte           14     6 (fixed)
 12551                           ; jumptable            260     6 (fixed)
 12552                           ;	Chosen strategy is simple_byte
 12553  1C36  0835               	movf	setDrvGain@gain^(0+128),w
 12554  1C37  3A00               	xorlw	0	; case 0
 12555  1C38  1903               	skipnz
 12556  1C39  2C19               	goto	l7752
 12557  1C3A  3A01               	xorlw	1	; case 1
 12558  1C3B  1903               	skipnz
 12559  1C3C  2C1C               	goto	l7754
 12560  1C3D  3A03               	xorlw	3	; case 2
 12561  1C3E  1903               	skipnz
 12562  1C3F  2C1E               	goto	l7756
 12563  1C40  3A01               	xorlw	1	; case 3
 12564  1C41  1903               	skipnz
 12565  1C42  2C20               	goto	l7758
 12566  1C43  2C25               	goto	l7760
 12567  1C44                     l7770:	
 12568                           
 12569                           ;main.c: 409: drv_write(0x01, setGain);
 12570  1C44  0838               	movf	setDrvGain@setGain^(0+128),w
 12571  1C45  00B7               	movwf	??_setDrvGain^(0+128)
 12572  1C46  0837               	movf	??_setDrvGain^(0+128),w
 12573  1C47  0020               	movlb	0	; select bank0
 12574  1C48  00C9               	movwf	drv_write@data
 12575  1C49  3001               	movlw	1
 12576  1C4A  3199  212E  319C   	fcall	_drv_write
 12577                           
 12578                           ;main.c: 410: printf("A\n");
 12579  1C4D  3025               	movlw	low (STR_7| (0+32768))
 12580  1C4E  0021               	movlb	1	; select bank1
 12581  1C4F  00A0               	movwf	printf@f^(0+128)
 12582  1C50  30AA               	movlw	high (STR_7| (0+32768))
 12583  1C51  00A1               	movwf	(printf@f^(0+128)+1)
 12584  1C52  3186  2618         	fcall	_printf
 12585                           
 12586                           ;main.c: 411: return 0;
 12587  1C54  0021               	movlb	1	; select bank1
 12588  1C55  01B5               	clrf	?_setDrvGain^(0+128)
 12589  1C56  01B6               	clrf	(?_setDrvGain+1)^(0+128)
 12590  1C57  0008               	return
 12591  1C58                     __end_of_setDrvGain:	
 12592                           
 12593                           	psect	text29
 12594  09BF                     __ptext29:	
 12595 ;; *************** function _setActive *****************
 12596 ;; Defined at:
 12597 ;;		line 478 in file "main.c"
 12598 ;; Parameters:    Size  Location     Type
 12599 ;;  probeNum        2   21[BANK1 ] int 
 12600 ;;  onOff           2   23[BANK1 ] int 
 12601 ;; Auto vars:     Size  Location     Type
 12602 ;;		None
 12603 ;; Return value:  Size  Location     Type
 12604 ;;                  2   21[BANK1 ] int 
 12605 ;; Registers used:
 12606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12607 ;; Tracked objects:
 12608 ;;		On entry : 0/0
 12609 ;;		On exit  : 0/0
 12610 ;;		Unchanged: 0/0
 12611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12612 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12614 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12615 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12616 ;;Total ram usage:       14 bytes
 12617 ;; Hardware stack levels used:    1
 12618 ;; Hardware stack levels required when called:    9
 12619 ;; This function calls:
 12620 ;;		_printf
 12621 ;; This function is called by:
 12622 ;;		_execCmd
 12623 ;; This function uses a non-reentrant model
 12624 ;;
 12625                           
 12626                           
 12627                           ;psect for function _setActive
 12628  09BF                     _setActive:	
 12629                           
 12630                           ;main.c: 481: if(moveMask & 1 << probeNum){
 12631                           
 12632                           ;incstack = 0
 12633                           ; Regs used in _setActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12634  09BF  0021               	movlb	1	; select bank1
 12635  09C0  0854               	movf	_moveMask^(0+128),w
 12636  09C1  00B9               	movwf	??_setActive^(0+128)
 12637  09C2  0855               	movf	(_moveMask+1)^(0+128),w
 12638  09C3  00BA               	movwf	(??_setActive^(0+128)+1)
 12639  09C4  0856               	movf	(_moveMask+2)^(0+128),w
 12640  09C5  00BB               	movwf	(??_setActive^(0+128)+2)
 12641  09C6  0857               	movf	(_moveMask+3)^(0+128),w
 12642  09C7  00BC               	movwf	(??_setActive^(0+128)+3)
 12643  09C8  3001               	movlw	1
 12644  09C9  00BD               	movwf	(??_setActive+4)^(0+128)
 12645  09CA  3000               	movlw	0
 12646  09CB  00BE               	movwf	((??_setActive+4)^(0+128)+1)
 12647  09CC  0A35               	incf	setActive@probeNum^(0+128),w
 12648  09CD  29D0               	goto	u7924
 12649  09CE                     u7925:	
 12650  09CE  35BD               	lslf	(??_setActive+4)^(0+128),f
 12651  09CF  0DBE               	rlf	((??_setActive+4)^(0+128)+1),f
 12652  09D0                     u7924:	
 12653  09D0  0B89               	decfsz	9,f
 12654  09D1  29CE               	goto	u7925
 12655  09D2  083D               	movf	(??_setActive+4)^(0+128),w
 12656  09D3  00BF               	movwf	(??_setActive+6)^(0+128)
 12657  09D4  083E               	movf	(??_setActive+5)^(0+128),w
 12658  09D5  00C0               	movwf	((??_setActive+6)^(0+128)+1)
 12659  09D6  3000               	movlw	0
 12660  09D7  1BC0               	btfsc	((??_setActive+6)^(0+128)+1),7
 12661  09D8  30FF               	movlw	255
 12662  09D9  00C1               	movwf	((??_setActive+6)^(0+128)+2)
 12663  09DA  00C2               	movwf	((??_setActive+6)^(0+128)+3)
 12664  09DB  083F               	movf	(??_setActive+6)^(0+128),w
 12665  09DC  05B9               	andwf	??_setActive^(0+128),f
 12666  09DD  0840               	movf	(??_setActive+7)^(0+128),w
 12667  09DE  05BA               	andwf	(??_setActive^(0+128)+1),f
 12668  09DF  0841               	movf	(??_setActive+8)^(0+128),w
 12669  09E0  05BB               	andwf	(??_setActive^(0+128)+2),f
 12670  09E1  0842               	movf	(??_setActive+9)^(0+128),w
 12671  09E2  05BC               	andwf	(??_setActive^(0+128)+3),f
 12672  09E3  083C               	movf	(??_setActive+3)^(0+128),w
 12673  09E4  043B               	iorwf	(??_setActive+2)^(0+128),w
 12674  09E5  043A               	iorwf	(??_setActive+1)^(0+128),w
 12675  09E6  0439               	iorwf	??_setActive^(0+128),w
 12676  09E7  1903               	skipnz
 12677  09E8  2A30               	goto	l7856
 12678                           
 12679                           ;main.c: 482: if (onOff)
 12680  09E9  0837               	movf	setActive@onOff^(0+128),w
 12681  09EA  0438               	iorwf	(setActive@onOff+1)^(0+128),w
 12682  09EB  1903               	btfsc	3,2
 12683  09EC  2A09               	goto	l7848
 12684                           
 12685                           ;main.c: 483: activeMask |= 1 << probeNum;
 12686  09ED  3001               	movlw	1
 12687  09EE  00B9               	movwf	??_setActive^(0+128)
 12688  09EF  3000               	movlw	0
 12689  09F0  00BA               	movwf	(??_setActive^(0+128)+1)
 12690  09F1  0A35               	incf	setActive@probeNum^(0+128),w
 12691  09F2  29F5               	goto	u7954
 12692  09F3                     u7955:	
 12693  09F3  35B9               	lslf	??_setActive^(0+128),f
 12694  09F4  0DBA               	rlf	(??_setActive^(0+128)+1),f
 12695  09F5                     u7954:	
 12696  09F5  0B89               	decfsz	9,f
 12697  09F6  29F3               	goto	u7955
 12698  09F7  0839               	movf	??_setActive^(0+128),w
 12699  09F8  00BB               	movwf	(??_setActive+2)^(0+128)
 12700  09F9  083A               	movf	(??_setActive+1)^(0+128),w
 12701  09FA  00BC               	movwf	((??_setActive+2)^(0+128)+1)
 12702  09FB  3000               	movlw	0
 12703  09FC  1BBC               	btfsc	((??_setActive+2)^(0+128)+1),7
 12704  09FD  30FF               	movlw	255
 12705  09FE  00BD               	movwf	((??_setActive+2)^(0+128)+2)
 12706  09FF  00BE               	movwf	((??_setActive+2)^(0+128)+3)
 12707  0A00  083B               	movf	(??_setActive+2)^(0+128),w
 12708  0A01  04D8               	iorwf	_activeMask^(0+128),f
 12709  0A02  083C               	movf	(??_setActive+3)^(0+128),w
 12710  0A03  04D9               	iorwf	(_activeMask+1)^(0+128),f
 12711  0A04  083D               	movf	(??_setActive+4)^(0+128),w
 12712  0A05  04DA               	iorwf	(_activeMask+2)^(0+128),f
 12713  0A06  083E               	movf	(??_setActive+5)^(0+128),w
 12714  0A07  04DB               	iorwf	(_activeMask+3)^(0+128),f
 12715  0A08  2A26               	goto	l7850
 12716  0A09                     l7848:	
 12717                           
 12718                           ;main.c: 484: else
 12719                           ;main.c: 485: activeMask &= ~(1 << probeNum);
 12720  0A09  3001               	movlw	1
 12721  0A0A  00B9               	movwf	??_setActive^(0+128)
 12722  0A0B  3000               	movlw	0
 12723  0A0C  00BA               	movwf	(??_setActive^(0+128)+1)
 12724  0A0D  0A35               	incf	setActive@probeNum^(0+128),w
 12725  0A0E  2A11               	goto	u7964
 12726  0A0F                     u7965:	
 12727  0A0F  35B9               	lslf	??_setActive^(0+128),f
 12728  0A10  0DBA               	rlf	(??_setActive^(0+128)+1),f
 12729  0A11                     u7964:	
 12730  0A11  0B89               	decfsz	9,f
 12731  0A12  2A0F               	goto	u7965
 12732  0A13  09B9               	comf	??_setActive^(0+128),f
 12733  0A14  09BA               	comf	(??_setActive^(0+128)+1),f
 12734  0A15  0839               	movf	??_setActive^(0+128),w
 12735  0A16  00BB               	movwf	(??_setActive+2)^(0+128)
 12736  0A17  083A               	movf	(??_setActive+1)^(0+128),w
 12737  0A18  00BC               	movwf	((??_setActive+2)^(0+128)+1)
 12738  0A19  3000               	movlw	0
 12739  0A1A  1BBC               	btfsc	((??_setActive+2)^(0+128)+1),7
 12740  0A1B  30FF               	movlw	255
 12741  0A1C  00BD               	movwf	((??_setActive+2)^(0+128)+2)
 12742  0A1D  00BE               	movwf	((??_setActive+2)^(0+128)+3)
 12743  0A1E  083B               	movf	(??_setActive+2)^(0+128),w
 12744  0A1F  05D8               	andwf	_activeMask^(0+128),f
 12745  0A20  083C               	movf	(??_setActive+3)^(0+128),w
 12746  0A21  05D9               	andwf	(_activeMask+1)^(0+128),f
 12747  0A22  083D               	movf	(??_setActive+4)^(0+128),w
 12748  0A23  05DA               	andwf	(_activeMask+2)^(0+128),f
 12749  0A24  083E               	movf	(??_setActive+5)^(0+128),w
 12750  0A25  05DB               	andwf	(_activeMask+3)^(0+128),f
 12751  0A26                     l7850:	
 12752                           
 12753                           ;main.c: 486: printf("A\n");
 12754  0A26  3025               	movlw	low (STR_7| (0+32768))
 12755  0A27  00A0               	movwf	printf@f^(0+128)
 12756  0A28  30AA               	movlw	high (STR_7| (0+32768))
 12757  0A29  00A1               	movwf	(printf@f^(0+128)+1)
 12758  0A2A  3186  2618         	fcall	_printf
 12759                           
 12760                           ;main.c: 487: return 0;
 12761  0A2C  0021               	movlb	1	; select bank1
 12762  0A2D  01B5               	clrf	?_setActive^(0+128)
 12763  0A2E  01B6               	clrf	(?_setActive+1)^(0+128)
 12764  0A2F  0008               	return
 12765  0A30                     l7856:	
 12766                           
 12767                           ;main.c: 488: }
 12768                           ;main.c: 489: printf("E\n");
 12769  0A30  3028               	movlw	low (STR_16| (0+32768))
 12770  0A31  00A0               	movwf	printf@f^(0+128)
 12771  0A32  30AA               	movlw	high (STR_16| (0+32768))
 12772  0A33  00A1               	movwf	(printf@f^(0+128)+1)
 12773  0A34  3186  2618         	fcall	_printf
 12774                           
 12775                           ;main.c: 490: return 1;
 12776  0A36  3001               	movlw	1
 12777  0A37  0021               	movlb	1	; select bank1
 12778  0A38  00B5               	movwf	?_setActive^(0+128)
 12779  0A39  3000               	movlw	0
 12780  0A3A  00B6               	movwf	(?_setActive^(0+128)+1)
 12781  0A3B  0008               	return
 12782  0A3C                     __end_of_setActive:	
 12783                           
 12784                           	psect	text30
 12785  1A14                     __ptext30:	
 12786 ;; *************** function _getPosition *****************
 12787 ;; Defined at:
 12788 ;;		line 382 in file "main.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;  a               2   21[BANK1 ] int 
 12791 ;; Auto vars:     Size  Location     Type
 12792 ;;		None
 12793 ;; Return value:  Size  Location     Type
 12794 ;;                  2   21[BANK1 ] int 
 12795 ;; Registers used:
 12796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12797 ;; Tracked objects:
 12798 ;;		On entry : 0/0
 12799 ;;		On exit  : 0/0
 12800 ;;		Unchanged: 0/0
 12801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12802 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12804 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12805 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12806 ;;Total ram usage:        3 bytes
 12807 ;; Hardware stack levels used:    1
 12808 ;; Hardware stack levels required when called:    9
 12809 ;; This function calls:
 12810 ;;		_printf
 12811 ;; This function is called by:
 12812 ;;		_execCmd
 12813 ;; This function uses a non-reentrant model
 12814 ;;
 12815                           
 12816                           
 12817                           ;psect for function _getPosition
 12818  1A14                     _getPosition:	
 12819                           
 12820                           ;main.c: 384: if (a>=0 && a < 24){
 12821                           
 12822                           ;incstack = 0
 12823                           ; Regs used in _getPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12824  1A14  0021               	movlb	1	; select bank1
 12825  1A15  1BB6               	btfsc	(getPosition@a+1)^(0+128),7
 12826  1A16  2A38               	goto	l7738
 12827  1A17  0836               	movf	(getPosition@a+1)^(0+128),w
 12828  1A18  3A80               	xorlw	128
 12829  1A19  0020               	movlb	0	; select bank0
 12830  1A1A  00C9               	movwf	??_getPosition
 12831  1A1B  3080               	movlw	128
 12832  1A1C  0249               	subwf	??_getPosition,w
 12833  1A1D  1D03               	skipz
 12834  1A1E  2A22               	goto	u7885
 12835  1A1F  3018               	movlw	24
 12836  1A20  0021               	movlb	1	; select bank1
 12837  1A21  0235               	subwf	getPosition@a^(0+128),w
 12838  1A22                     u7885:	
 12839  1A22  1803               	skipnc
 12840  1A23  2A38               	goto	l7738
 12841                           
 12842                           ;main.c: 385: printf("%d\n", currentPositions_steps[a]);
 12843  1A24  304C               	movlw	low ((STR_50+10)| (0+32768))
 12844  1A25  0021               	movlb	1	; select bank1
 12845  1A26  00A0               	movwf	printf@f^(0+128)
 12846  1A27  30A9               	movlw	high ((STR_50+10)| (0+32768))
 12847  1A28  00A1               	movwf	(printf@f^(0+128)+1)
 12848  1A29  3535               	lslf	getPosition@a^(0+128),w
 12849  1A2A  3EA0               	addlw	(low (_currentPositions_steps| (0+256)))& (0+255)
 12850  1A2B  0086               	movwf	6
 12851  1A2C  3001               	movlw	1	; select bank3/4
 12852  1A2D  0087               	movwf	7
 12853  1A2E  3F40               	moviw [0]fsr1
 12854  1A2F  00A2               	movwf	(?_printf^(0+128)+2)
 12855  1A30  3F41               	moviw [1]fsr1
 12856  1A31  00A3               	movwf	((?_printf+1)^(0+128)+2)
 12857  1A32  3186  2618         	fcall	_printf
 12858                           
 12859                           ;main.c: 386: return 0;
 12860  1A34  0021               	movlb	1	; select bank1
 12861  1A35  01B5               	clrf	?_getPosition^(0+128)
 12862  1A36  01B6               	clrf	(?_getPosition+1)^(0+128)
 12863  1A37  0008               	return
 12864  1A38                     l7738:	
 12865                           
 12866                           ;main.c: 387: }
 12867                           ;main.c: 389: return 1;
 12868  1A38  3001               	movlw	1
 12869  1A39  0021               	movlb	1	; select bank1
 12870  1A3A  00B5               	movwf	?_getPosition^(0+128)
 12871  1A3B  3000               	movlw	0
 12872  1A3C  00B6               	movwf	(?_getPosition^(0+128)+1)
 12873  1A3D  0008               	return
 12874  1A3E                     __end_of_getPosition:	
 12875                           
 12876                           	psect	text31
 12877  1D77                     __ptext31:	
 12878 ;; *************** function _getMoveMask *****************
 12879 ;; Defined at:
 12880 ;;		line 518 in file "main.c"
 12881 ;; Parameters:    Size  Location     Type
 12882 ;;		None
 12883 ;; Auto vars:     Size  Location     Type
 12884 ;;  i               2   23[BANK1 ] int 
 12885 ;; Return value:  Size  Location     Type
 12886 ;;                  2   21[BANK1 ] int 
 12887 ;; Registers used:
 12888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12889 ;; Tracked objects:
 12890 ;;		On entry : 0/0
 12891 ;;		On exit  : 0/0
 12892 ;;		Unchanged: 0/0
 12893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12894 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12895 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12896 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12897 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12898 ;;Total ram usage:        8 bytes
 12899 ;; Hardware stack levels used:    1
 12900 ;; Hardware stack levels required when called:    9
 12901 ;; This function calls:
 12902 ;;		_printf
 12903 ;; This function is called by:
 12904 ;;		_execCmd
 12905 ;; This function uses a non-reentrant model
 12906 ;;
 12907                           
 12908                           
 12909                           ;psect for function _getMoveMask
 12910  1D77                     _getMoveMask:	
 12911                           
 12912                           ;main.c: 519: for(int i=24-1; i>=0; i--){
 12913                           
 12914                           ;incstack = 0
 12915                           ; Regs used in _getMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12916  1D77  3017               	movlw	23
 12917  1D78  0021               	movlb	1	; select bank1
 12918  1D79  00B7               	movwf	getMoveMask@i^(0+128)
 12919  1D7A  3000               	movlw	0
 12920  1D7B  00B8               	movwf	(getMoveMask@i^(0+128)+1)
 12921  1D7C  1BB8               	btfsc	(getMoveMask@i+1)^(0+128),7
 12922  1D7D  2DB8               	goto	l7912
 12923  1D7E                     l7906:	
 12924                           
 12925                           ;main.c: 520: printf("%d ", (moveMask >> i) & 1 );
 12926  1D7E  301B               	movlw	low (STR_1| (0+32768))
 12927  1D7F  00A0               	movwf	printf@f^(0+128)
 12928  1D80  30AA               	movlw	high (STR_1| (0+32768))
 12929  1D81  00A1               	movwf	(printf@f^(0+128)+1)
 12930  1D82  0854               	movf	_moveMask^(0+128),w
 12931  1D83  0020               	movlb	0	; select bank0
 12932  1D84  00C9               	movwf	??_getMoveMask
 12933  1D85  0021               	movlb	1	; select bank1
 12934  1D86  0855               	movf	(_moveMask+1)^(0+128),w
 12935  1D87  0020               	movlb	0	; select bank0
 12936  1D88  00CA               	movwf	??_getMoveMask+1
 12937  1D89  0021               	movlb	1	; select bank1
 12938  1D8A  0856               	movf	(_moveMask+2)^(0+128),w
 12939  1D8B  0020               	movlb	0	; select bank0
 12940  1D8C  00CB               	movwf	??_getMoveMask+2
 12941  1D8D  0021               	movlb	1	; select bank1
 12942  1D8E  0857               	movf	(_moveMask+3)^(0+128),w
 12943  1D8F  0020               	movlb	0	; select bank0
 12944  1D90  00CC               	movwf	??_getMoveMask+3
 12945  1D91  0021               	movlb	1	; select bank1
 12946  1D92  0A37               	incf	getMoveMask@i^(0+128),w
 12947  1D93  0020               	movlb	0	; select bank0
 12948  1D94  2D99               	goto	u8050
 12949  1D95                     u8055:	
 12950  1D95  37CC               	asrf	??_getMoveMask+3,f
 12951  1D96  0CCB               	rrf	??_getMoveMask+2,f
 12952  1D97  0CCA               	rrf	??_getMoveMask+1,f
 12953  1D98  0CC9               	rrf	??_getMoveMask,f
 12954  1D99                     u8050:	
 12955  1D99  0B89               	decfsz	9,f
 12956  1D9A  2D95               	goto	u8055
 12957  1D9B  3001               	movlw	1
 12958  1D9C  0549               	andwf	??_getMoveMask,w
 12959  1D9D  0021               	movlb	1	; select bank1
 12960  1D9E  00A2               	movwf	(?_printf^(0+128)+2)
 12961  1D9F  3000               	movlw	0
 12962  1DA0  0020               	movlb	0	; select bank0
 12963  1DA1  054A               	andwf	??_getMoveMask+1,w
 12964  1DA2  0021               	movlb	1	; select bank1
 12965  1DA3  00A3               	movwf	((?_printf+1)^(0+128)+2)
 12966  1DA4  3000               	movlw	0
 12967  1DA5  0020               	movlb	0	; select bank0
 12968  1DA6  054B               	andwf	??_getMoveMask+2,w
 12969  1DA7  0021               	movlb	1	; select bank1
 12970  1DA8  00A4               	movwf	((?_printf+2)^(0+128)+2)
 12971  1DA9  3000               	movlw	0
 12972  1DAA  0020               	movlb	0	; select bank0
 12973  1DAB  054C               	andwf	??_getMoveMask+3,w
 12974  1DAC  0021               	movlb	1	; select bank1
 12975  1DAD  00A5               	movwf	((?_printf+3)^(0+128)+2)
 12976  1DAE  3186  2618  319D   	fcall	_printf
 12977  1DB1  30FF               	movlw	255
 12978  1DB2  0021               	movlb	1	; select bank1
 12979  1DB3  07B7               	addwf	getMoveMask@i^(0+128),f
 12980  1DB4  30FF               	movlw	255
 12981  1DB5  3DB8               	addwfc	(getMoveMask@i+1)^(0+128),f
 12982  1DB6  1FB8               	btfss	(getMoveMask@i+1)^(0+128),7
 12983  1DB7  2D7E               	goto	l7906
 12984  1DB8                     l7912:	
 12985                           
 12986                           ;main.c: 521: }
 12987                           ;main.c: 522: printf("\n");
 12988  1DB8  303B               	movlw	low ((STR_35+28)| (0+32768))
 12989  1DB9  00A0               	movwf	printf@f^(0+128)
 12990  1DBA  30A8               	movlw	high ((STR_35+28)| (0+32768))
 12991  1DBB  00A1               	movwf	(printf@f^(0+128)+1)
 12992  1DBC  3186  2618         	fcall	_printf
 12993                           
 12994                           ;main.c: 523: return 0;
 12995  1DBE  0021               	movlb	1	; select bank1
 12996  1DBF  01B5               	clrf	?_getMoveMask^(0+128)
 12997  1DC0  01B6               	clrf	(?_getMoveMask+1)^(0+128)
 12998  1DC1  0008               	return
 12999  1DC2                     __end_of_getMoveMask:	
 13000                           
 13001                           	psect	text32
 13002  18C3                     __ptext32:	
 13003 ;; *************** function _getMotionStatus *****************
 13004 ;; Defined at:
 13005 ;;		line 525 in file "main.c"
 13006 ;; Parameters:    Size  Location     Type
 13007 ;;		None
 13008 ;; Auto vars:     Size  Location     Type
 13009 ;;		None
 13010 ;; Return value:  Size  Location     Type
 13011 ;;                  2   21[BANK1 ] int 
 13012 ;; Registers used:
 13013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13014 ;; Tracked objects:
 13015 ;;		On entry : 0/0
 13016 ;;		On exit  : 0/0
 13017 ;;		Unchanged: 0/0
 13018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13019 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13022 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13023 ;;Total ram usage:        2 bytes
 13024 ;; Hardware stack levels used:    1
 13025 ;; Hardware stack levels required when called:    9
 13026 ;; This function calls:
 13027 ;;		_printf
 13028 ;; This function is called by:
 13029 ;;		_execCmd
 13030 ;; This function uses a non-reentrant model
 13031 ;;
 13032                           
 13033                           
 13034                           ;psect for function _getMotionStatus
 13035  18C3                     _getMotionStatus:	
 13036                           
 13037                           ;main.c: 526: switch(motionType){
 13038                           
 13039                           ;incstack = 0
 13040                           ; Regs used in _getMotionStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13041  18C3  28DC               	goto	l7928
 13042  18C4                     l7920:	
 13043                           ;main.c: 527: case REL_MOVE: printf("R"); break;
 13044                           
 13045  18C4  3031               	movlw	low (STR_32| (0+32768))
 13046  18C5  0021               	movlb	1	; select bank1
 13047  18C6  00A0               	movwf	printf@f^(0+128)
 13048  18C7  30AA               	movlw	high (STR_32| (0+32768))
 13049  18C8  00A1               	movwf	(printf@f^(0+128)+1)
 13050  18C9  3186  2618         	fcall	_printf
 13051  18CB  0008               	return
 13052  18CC                     l7922:	
 13053                           ;main.c: 528: case ABS_MOVE: printf("A"); break;
 13054                           
 13055  18CC  30F4               	movlw	low ((STR_72+3)| (0+32768))
 13056  18CD  0021               	movlb	1	; select bank1
 13057  18CE  00A0               	movwf	printf@f^(0+128)
 13058  18CF  30A9               	movlw	high ((STR_72+3)| (0+32768))
 13059  18D0  00A1               	movwf	(printf@f^(0+128)+1)
 13060  18D1  3186  2618         	fcall	_printf
 13061  18D3  0008               	return
 13062  18D4                     l7924:	
 13063                           ;main.c: 529: default: printf("N"); break;
 13064                           
 13065  18D4  302F               	movlw	low (STR_34| (0+32768))
 13066  18D5  0021               	movlb	1	; select bank1
 13067  18D6  00A0               	movwf	printf@f^(0+128)
 13068  18D7  30AA               	movlw	high (STR_34| (0+32768))
 13069  18D8  00A1               	movwf	(printf@f^(0+128)+1)
 13070  18D9  3186  2618         	fcall	_printf
 13071                           
 13072                           ;main.c: 530: }
 13073  18DB  0008               	return
 13074  18DC                     l7928:	
 13075  18DC  0020               	movlb	0	; select bank0
 13076  18DD  0853               	movf	_motionType,w
 13077                           
 13078                           ; Switch size 1, requested type "space"
 13079                           ; Number of cases is 2, Range of values is 1 to 2
 13080                           ; switch strategies available:
 13081                           ; Name         Instructions Cycles
 13082                           ; simple_byte            7     4 (average)
 13083                           ; direct_byte           13     9 (fixed)
 13084                           ; jumptable            263     9 (fixed)
 13085                           ;	Chosen strategy is simple_byte
 13086  18DE  3A01               	xorlw	1	; case 1
 13087  18DF  1903               	skipnz
 13088  18E0  28C4               	goto	l7920
 13089  18E1  3A03               	xorlw	3	; case 2
 13090  18E2  1903               	skipnz
 13091  18E3  28CC               	goto	l7922
 13092  18E4  28D4               	goto	l7924
 13093  18E5  0008               	return
 13094  18E6                     __end_of_getMotionStatus:	
 13095                           
 13096                           	psect	text33
 13097  1D2C                     __ptext33:	
 13098 ;; *************** function _getActive *****************
 13099 ;; Defined at:
 13100 ;;		line 510 in file "main.c"
 13101 ;; Parameters:    Size  Location     Type
 13102 ;;		None
 13103 ;; Auto vars:     Size  Location     Type
 13104 ;;  i               2   23[BANK1 ] int 
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  2   21[BANK1 ] int 
 13107 ;; Registers used:
 13108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/0
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13114 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13115 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13116 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13117 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13118 ;;Total ram usage:        8 bytes
 13119 ;; Hardware stack levels used:    1
 13120 ;; Hardware stack levels required when called:    9
 13121 ;; This function calls:
 13122 ;;		_printf
 13123 ;; This function is called by:
 13124 ;;		_execCmd
 13125 ;; This function uses a non-reentrant model
 13126 ;;
 13127                           
 13128                           
 13129                           ;psect for function _getActive
 13130  1D2C                     _getActive:	
 13131                           
 13132                           ;main.c: 511: for(int i=24-1; i>=0; i--){
 13133                           
 13134                           ;incstack = 0
 13135                           ; Regs used in _getActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13136  1D2C  3017               	movlw	23
 13137  1D2D  0021               	movlb	1	; select bank1
 13138  1D2E  00B7               	movwf	getActive@i^(0+128)
 13139  1D2F  3000               	movlw	0
 13140  1D30  00B8               	movwf	(getActive@i^(0+128)+1)
 13141  1D31  1BB8               	btfsc	(getActive@i+1)^(0+128),7
 13142  1D32  2D6D               	goto	l7894
 13143  1D33                     l7888:	
 13144                           
 13145                           ;main.c: 512: printf("%d ", (activeMask >> i) & 1 );
 13146  1D33  301B               	movlw	low (STR_1| (0+32768))
 13147  1D34  00A0               	movwf	printf@f^(0+128)
 13148  1D35  30AA               	movlw	high (STR_1| (0+32768))
 13149  1D36  00A1               	movwf	(printf@f^(0+128)+1)
 13150  1D37  0858               	movf	_activeMask^(0+128),w
 13151  1D38  0020               	movlb	0	; select bank0
 13152  1D39  00C9               	movwf	??_getActive
 13153  1D3A  0021               	movlb	1	; select bank1
 13154  1D3B  0859               	movf	(_activeMask+1)^(0+128),w
 13155  1D3C  0020               	movlb	0	; select bank0
 13156  1D3D  00CA               	movwf	??_getActive+1
 13157  1D3E  0021               	movlb	1	; select bank1
 13158  1D3F  085A               	movf	(_activeMask+2)^(0+128),w
 13159  1D40  0020               	movlb	0	; select bank0
 13160  1D41  00CB               	movwf	??_getActive+2
 13161  1D42  0021               	movlb	1	; select bank1
 13162  1D43  085B               	movf	(_activeMask+3)^(0+128),w
 13163  1D44  0020               	movlb	0	; select bank0
 13164  1D45  00CC               	movwf	??_getActive+3
 13165  1D46  0021               	movlb	1	; select bank1
 13166  1D47  0A37               	incf	getActive@i^(0+128),w
 13167  1D48  0020               	movlb	0	; select bank0
 13168  1D49  2D4E               	goto	u8020
 13169  1D4A                     u8025:	
 13170  1D4A  37CC               	asrf	??_getActive+3,f
 13171  1D4B  0CCB               	rrf	??_getActive+2,f
 13172  1D4C  0CCA               	rrf	??_getActive+1,f
 13173  1D4D  0CC9               	rrf	??_getActive,f
 13174  1D4E                     u8020:	
 13175  1D4E  0B89               	decfsz	9,f
 13176  1D4F  2D4A               	goto	u8025
 13177  1D50  3001               	movlw	1
 13178  1D51  0549               	andwf	??_getActive,w
 13179  1D52  0021               	movlb	1	; select bank1
 13180  1D53  00A2               	movwf	(?_printf^(0+128)+2)
 13181  1D54  3000               	movlw	0
 13182  1D55  0020               	movlb	0	; select bank0
 13183  1D56  054A               	andwf	??_getActive+1,w
 13184  1D57  0021               	movlb	1	; select bank1
 13185  1D58  00A3               	movwf	((?_printf+1)^(0+128)+2)
 13186  1D59  3000               	movlw	0
 13187  1D5A  0020               	movlb	0	; select bank0
 13188  1D5B  054B               	andwf	??_getActive+2,w
 13189  1D5C  0021               	movlb	1	; select bank1
 13190  1D5D  00A4               	movwf	((?_printf+2)^(0+128)+2)
 13191  1D5E  3000               	movlw	0
 13192  1D5F  0020               	movlb	0	; select bank0
 13193  1D60  054C               	andwf	??_getActive+3,w
 13194  1D61  0021               	movlb	1	; select bank1
 13195  1D62  00A5               	movwf	((?_printf+3)^(0+128)+2)
 13196  1D63  3186  2618  319D   	fcall	_printf
 13197  1D66  30FF               	movlw	255
 13198  1D67  0021               	movlb	1	; select bank1
 13199  1D68  07B7               	addwf	getActive@i^(0+128),f
 13200  1D69  30FF               	movlw	255
 13201  1D6A  3DB8               	addwfc	(getActive@i+1)^(0+128),f
 13202  1D6B  1FB8               	btfss	(getActive@i+1)^(0+128),7
 13203  1D6C  2D33               	goto	l7888
 13204  1D6D                     l7894:	
 13205                           
 13206                           ;main.c: 513: }
 13207                           ;main.c: 514: printf("\n");
 13208  1D6D  303B               	movlw	low ((STR_35+28)| (0+32768))
 13209  1D6E  00A0               	movwf	printf@f^(0+128)
 13210  1D6F  30A8               	movlw	high ((STR_35+28)| (0+32768))
 13211  1D70  00A1               	movwf	(printf@f^(0+128)+1)
 13212  1D71  3186  2618         	fcall	_printf
 13213                           
 13214                           ;main.c: 515: return 0;
 13215  1D73  0021               	movlb	1	; select bank1
 13216  1D74  01B5               	clrf	?_getActive^(0+128)
 13217  1D75  01B6               	clrf	(?_getActive+1)^(0+128)
 13218  1D76  0008               	return
 13219  1D77                     __end_of_getActive:	
 13220                           
 13221                           	psect	text34
 13222  0B7C                     __ptext34:	
 13223 ;; *************** function _commCheck *****************
 13224 ;; Defined at:
 13225 ;;		line 533 in file "main.c"
 13226 ;; Parameters:    Size  Location     Type
 13227 ;;		None
 13228 ;; Auto vars:     Size  Location     Type
 13229 ;;		None
 13230 ;; Return value:  Size  Location     Type
 13231 ;;                  2   50[BANK1 ] int 
 13232 ;; Registers used:
 13233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13234 ;; Tracked objects:
 13235 ;;		On entry : 0/0
 13236 ;;		On exit  : 0/0
 13237 ;;		Unchanged: 0/0
 13238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13239 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13241 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13242 ;;      Totals:         0       0       2       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13243 ;;Total ram usage:        3 bytes
 13244 ;; Hardware stack levels used:    1
 13245 ;; Hardware stack levels required when called:   13
 13246 ;; This function calls:
 13247 ;;		_LED_testComm
 13248 ;;		_LED_test_openshort
 13249 ;;		_drv_read
 13250 ;;		_printf
 13251 ;; This function is called by:
 13252 ;;		_execCmd
 13253 ;; This function uses a non-reentrant model
 13254 ;;
 13255                           
 13256                           
 13257                           ;psect for function _commCheck
 13258  0B7C                     _commCheck:	
 13259                           
 13260                           ;main.c: 534: printf("\n----starting comm test----\n\n");
 13261                           
 13262                           ;incstack = 0
 13263                           ; Regs used in _commCheck: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13264  0B7C  301F               	movlw	low (STR_35| (0+32768))
 13265  0B7D  0021               	movlb	1	; select bank1
 13266  0B7E  00A0               	movwf	printf@f^(0+128)
 13267  0B7F  30A8               	movlw	high (STR_35| (0+32768))
 13268  0B80  00A1               	movwf	(printf@f^(0+128)+1)
 13269  0B81  3186  2618  318B   	fcall	_printf
 13270                           
 13271                           ;main.c: 536: printf("testing top LED driver...");
 13272  0B84  3059               	movlw	low (STR_36| (0+32768))
 13273  0B85  0021               	movlb	1	; select bank1
 13274  0B86  00A0               	movwf	printf@f^(0+128)
 13275  0B87  30A8               	movlw	high (STR_36| (0+32768))
 13276  0B88  00A1               	movwf	(printf@f^(0+128)+1)
 13277  0B89  3186  2618  318B   	fcall	_printf
 13278                           
 13279                           ;main.c: 537: if (!LED_testComm(1))
 13280  0B8C  3001               	movlw	1
 13281  0B8D  0021               	movlb	1	; select bank1
 13282  0B8E  00CA               	movwf	LED_testComm@topOrBottom^(0+128)
 13283  0B8F  3000               	movlw	0
 13284  0B90  00CB               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 13285  0B91  3189  2146  318B   	fcall	_LED_testComm
 13286  0B94  0021               	movlb	1	; select bank1
 13287  0B95  084A               	movf	?_LED_testComm^(0+128),w
 13288  0B96  044B               	iorwf	(?_LED_testComm+1)^(0+128),w
 13289  0B97  1D03               	btfss	3,2
 13290  0B98  2B9D               	goto	l7934
 13291                           
 13292                           ;main.c: 538: printf("passed\n");
 13293  0B99  30D2               	movlw	low (STR_37| (0+32768))
 13294  0B9A  00A0               	movwf	printf@f^(0+128)
 13295  0B9B  30A9               	movlw	high (STR_37| (0+32768))
 13296  0B9C  2BA1               	goto	L23
 13297  0B9D                     l7934:	
 13298                           
 13299                           ;main.c: 539: else
 13300                           ;main.c: 540: printf("FAILED\n");
 13301  0B9D  30CA               	movlw	low (STR_38| (0+32768))
 13302  0B9E  0021               	movlb	1	; select bank1
 13303  0B9F  00A0               	movwf	printf@f^(0+128)
 13304  0BA0  30A9               	movlw	high (STR_38| (0+32768))
 13305  0BA1                     L23:	
 13306  0BA1  00A1               	movwf	(printf@f^(0+128)+1)
 13307  0BA2  3186  2618  318B   	fcall	_printf
 13308                           
 13309                           ;main.c: 542: printf("opens: ");
 13310  0BA5  30E2               	movlw	low (STR_39| (0+32768))
 13311  0BA6  0021               	movlb	1	; select bank1
 13312  0BA7  00A0               	movwf	printf@f^(0+128)
 13313  0BA8  30A9               	movlw	high (STR_39| (0+32768))
 13314  0BA9  00A1               	movwf	(printf@f^(0+128)+1)
 13315  0BAA  3186  2618  318B   	fcall	_printf
 13316                           
 13317                           ;main.c: 543: LED_test_openshort(10, 1);
 13318  0BAD  300A               	movlw	10
 13319  0BAE  0021               	movlb	1	; select bank1
 13320  0BAF  00B5               	movwf	LED_test_openshort@type^(0+128)
 13321  0BB0  3000               	movlw	0
 13322  0BB1  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 13323  0BB2  3001               	movlw	1
 13324  0BB3  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 13325  0BB4  3000               	movlw	0
 13326  0BB5  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 13327  0BB6  3196  264C  318B   	fcall	_LED_test_openshort
 13328                           
 13329                           ;main.c: 544: printf("\n\nshorts: ");
 13330  0BB9  308D               	movlw	low (STR_40| (0+32768))
 13331  0BBA  0021               	movlb	1	; select bank1
 13332  0BBB  00A0               	movwf	printf@f^(0+128)
 13333  0BBC  30A9               	movlw	high (STR_40| (0+32768))
 13334  0BBD  00A1               	movwf	(printf@f^(0+128)+1)
 13335  0BBE  3186  2618  318B   	fcall	_printf
 13336                           
 13337                           ;main.c: 545: LED_test_openshort(11, 1);
 13338  0BC1  300B               	movlw	11
 13339  0BC2  0021               	movlb	1	; select bank1
 13340  0BC3  00B5               	movwf	LED_test_openshort@type^(0+128)
 13341  0BC4  3000               	movlw	0
 13342  0BC5  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 13343  0BC6  3001               	movlw	1
 13344  0BC7  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 13345  0BC8  3000               	movlw	0
 13346  0BC9  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 13347  0BCA  3196  264C  318B   	fcall	_LED_test_openshort
 13348                           
 13349                           ;main.c: 547: printf("\ntesting bottom LED driver...\n");
 13350  0BCD  3000               	movlw	low (STR_41| (0+32768))
 13351  0BCE  0021               	movlb	1	; select bank1
 13352  0BCF  00A0               	movwf	printf@f^(0+128)
 13353  0BD0  30A8               	movlw	high (STR_41| (0+32768))
 13354  0BD1  00A1               	movwf	(printf@f^(0+128)+1)
 13355  0BD2  3186  2618  318B   	fcall	_printf
 13356                           
 13357                           ;main.c: 548: if (!LED_testComm(2))
 13358  0BD5  3002               	movlw	2
 13359  0BD6  0021               	movlb	1	; select bank1
 13360  0BD7  00CA               	movwf	LED_testComm@topOrBottom^(0+128)
 13361  0BD8  3000               	movlw	0
 13362  0BD9  00CB               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 13363  0BDA  3189  2146  318B   	fcall	_LED_testComm
 13364  0BDD  0021               	movlb	1	; select bank1
 13365  0BDE  084A               	movf	?_LED_testComm^(0+128),w
 13366  0BDF  044B               	iorwf	(?_LED_testComm+1)^(0+128),w
 13367  0BE0  1D03               	btfss	3,2
 13368  0BE1  2BE6               	goto	l7938
 13369                           
 13370                           ;main.c: 549: printf("passed\n");
 13371  0BE2  30D2               	movlw	low (STR_37| (0+32768))
 13372  0BE3  00A0               	movwf	printf@f^(0+128)
 13373  0BE4  30A9               	movlw	high (STR_37| (0+32768))
 13374  0BE5  2BEA               	goto	L24
 13375  0BE6                     l7938:	
 13376                           
 13377                           ;main.c: 550: else
 13378                           ;main.c: 551: printf("FAILED\n");
 13379  0BE6  30CA               	movlw	low (STR_38| (0+32768))
 13380  0BE7  0021               	movlb	1	; select bank1
 13381  0BE8  00A0               	movwf	printf@f^(0+128)
 13382  0BE9  30A9               	movlw	high (STR_38| (0+32768))
 13383  0BEA                     L24:	
 13384  0BEA  00A1               	movwf	(printf@f^(0+128)+1)
 13385  0BEB  3186  2618  318B   	fcall	_printf
 13386                           
 13387                           ;main.c: 553: printf("opens: ");
 13388  0BEE  30E2               	movlw	low (STR_39| (0+32768))
 13389  0BEF  0021               	movlb	1	; select bank1
 13390  0BF0  00A0               	movwf	printf@f^(0+128)
 13391  0BF1  30A9               	movlw	high (STR_39| (0+32768))
 13392  0BF2  00A1               	movwf	(printf@f^(0+128)+1)
 13393  0BF3  3186  2618  318B   	fcall	_printf
 13394                           
 13395                           ;main.c: 554: LED_test_openshort(10, 2);
 13396  0BF6  300A               	movlw	10
 13397  0BF7  0021               	movlb	1	; select bank1
 13398  0BF8  00B5               	movwf	LED_test_openshort@type^(0+128)
 13399  0BF9  3000               	movlw	0
 13400  0BFA  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 13401  0BFB  3002               	movlw	2
 13402  0BFC  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 13403  0BFD  3000               	movlw	0
 13404  0BFE  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 13405  0BFF  3196  264C  318B   	fcall	_LED_test_openshort
 13406                           
 13407                           ;main.c: 555: printf("\n\nshorts: ");
 13408  0C02  308D               	movlw	low (STR_40| (0+32768))
 13409  0C03  0021               	movlb	1	; select bank1
 13410  0C04  00A0               	movwf	printf@f^(0+128)
 13411  0C05  30A9               	movlw	high (STR_40| (0+32768))
 13412  0C06  00A1               	movwf	(printf@f^(0+128)+1)
 13413  0C07  3186  2618  318B   	fcall	_printf
 13414                           
 13415                           ;main.c: 556: LED_test_openshort(11, 2);
 13416  0C0A  300B               	movlw	11
 13417  0C0B  0021               	movlb	1	; select bank1
 13418  0C0C  00B5               	movwf	LED_test_openshort@type^(0+128)
 13419  0C0D  3000               	movlw	0
 13420  0C0E  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 13421  0C0F  3002               	movlw	2
 13422  0C10  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 13423  0C11  3000               	movlw	0
 13424  0C12  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 13425  0C13  3196  264C  318B   	fcall	_LED_test_openshort
 13426                           
 13427                           ;main.c: 558: printf("\ntesting piezo driver...");
 13428  0C16  3073               	movlw	low (STR_46| (0+32768))
 13429  0C17  0021               	movlb	1	; select bank1
 13430  0C18  00A0               	movwf	printf@f^(0+128)
 13431  0C19  30A8               	movlw	high (STR_46| (0+32768))
 13432  0C1A  00A1               	movwf	(printf@f^(0+128)+1)
 13433  0C1B  3186  2618  318B   	fcall	_printf
 13434                           
 13435                           ;main.c: 559: if(drv_read(0x01) > 0)
 13436  0C1E  3001               	movlw	1
 13437  0C1F  319C  249C  318B   	fcall	_drv_read
 13438  0C22  0021               	movlb	1	; select bank1
 13439  0C23  0836               	movf	(?_drv_read+1)^(0+128),w
 13440  0C24  3A80               	xorlw	128
 13441  0C25  0023               	movlb	3	; select bank3
 13442  0C26  00EC               	movwf	??_commCheck^(0+384)
 13443  0C27  3080               	movlw	128
 13444  0C28  026C               	subwf	??_commCheck^(0+384),w
 13445  0C29  1D03               	skipz
 13446  0C2A  2C2E               	goto	u8095
 13447  0C2B  3001               	movlw	1
 13448  0C2C  0021               	movlb	1	; select bank1
 13449  0C2D  0235               	subwf	?_drv_read^(0+128),w
 13450  0C2E                     u8095:	
 13451  0C2E  1C03               	skipc
 13452  0C2F  2C35               	goto	l7942
 13453                           
 13454                           ;main.c: 560: printf("passed\n\n");
 13455  0C30  30A1               	movlw	low (STR_47| (0+32768))
 13456  0C31  0021               	movlb	1	; select bank1
 13457  0C32  00A0               	movwf	printf@f^(0+128)
 13458  0C33  30A9               	movlw	high (STR_47| (0+32768))
 13459  0C34  2C39               	goto	L25
 13460  0C35                     l7942:	
 13461                           
 13462                           ;main.c: 561: else
 13463                           ;main.c: 562: printf("FAILED\n\n");
 13464  0C35  3098               	movlw	low (STR_48| (0+32768))
 13465  0C36  0021               	movlb	1	; select bank1
 13466  0C37  00A0               	movwf	printf@f^(0+128)
 13467  0C38  30A9               	movlw	high (STR_48| (0+32768))
 13468  0C39                     L25:	
 13469  0C39  00A1               	movwf	(printf@f^(0+128)+1)
 13470  0C3A  3186  2618  318B   	fcall	_printf
 13471                           
 13472                           ;main.c: 563: printf("----finished comm test----\n");
 13473  0C3D  303D               	movlw	low (STR_49| (0+32768))
 13474  0C3E  0021               	movlb	1	; select bank1
 13475  0C3F  00A0               	movwf	printf@f^(0+128)
 13476  0C40  30A8               	movlw	high (STR_49| (0+32768))
 13477  0C41  00A1               	movwf	(printf@f^(0+128)+1)
 13478  0C42  3186  2618         	fcall	_printf
 13479  0C44  0008               	return
 13480  0C45                     __end_of_commCheck:	
 13481                           
 13482                           	psect	text35
 13483  164C                     __ptext35:	
 13484 ;; *************** function _LED_test_openshort *****************
 13485 ;; Defined at:
 13486 ;;		line 95 in file "LEDcomm.c"
 13487 ;; Parameters:    Size  Location     Type
 13488 ;;  type            2   21[BANK1 ] int 
 13489 ;;  topOrBottom     2   23[BANK1 ] int 
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;  j               2   30[BANK1 ] int 
 13492 ;;  readData        4   26[BANK1 ] unsigned long 
 13493 ;; Return value:  Size  Location     Type
 13494 ;;                  1    wreg      void 
 13495 ;; Registers used:
 13496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13497 ;; Tracked objects:
 13498 ;;		On entry : 0/0
 13499 ;;		On exit  : 0/0
 13500 ;;		Unchanged: 0/0
 13501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13502 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13503 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13504 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13505 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13506 ;;Total ram usage:       11 bytes
 13507 ;; Hardware stack levels used:    1
 13508 ;; Hardware stack levels required when called:    9
 13509 ;; This function calls:
 13510 ;;		_LEDsOn
 13511 ;;		_printf
 13512 ;;		_send_2length_2bytes_IK
 13513 ;; This function is called by:
 13514 ;;		_commCheck
 13515 ;; This function uses a non-reentrant model
 13516 ;;
 13517                           
 13518                           
 13519                           ;psect for function _LED_test_openshort
 13520  164C                     _LED_test_openshort:	
 13521                           
 13522                           ;incstack = 0
 13523                           ; Regs used in _LED_test_openshort: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13524                           ;LEDcomm.c: 97: do { LATCbits.LATC1 = 1; } while(0);
 13525  164C  0022               	movlb	2	; select bank2
 13526  164D  148E               	bsf	14,1	;volatile
 13527                           
 13528                           ;LEDcomm.c: 98: LEDsOn(0xFFFFFFFF, topOrBottom);
 13529  164E  30FF               	movlw	255
 13530  164F  0020               	movlb	0	; select bank0
 13531  1650  00C7               	movwf	LEDsOn@LEDpins+3
 13532  1651  30FF               	movlw	255
 13533  1652  00C6               	movwf	LEDsOn@LEDpins+2
 13534  1653  30FF               	movlw	255
 13535  1654  00C5               	movwf	LEDsOn@LEDpins+1
 13536  1655  30FF               	movlw	255
 13537  1656  00C4               	movwf	LEDsOn@LEDpins
 13538  1657  0021               	movlb	1	; select bank1
 13539  1658  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 13540  1659  0020               	movlb	0	; select bank0
 13541  165A  00C9               	movwf	LEDsOn@topOrBottom+1
 13542  165B  0021               	movlb	1	; select bank1
 13543  165C  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 13544  165D  0020               	movlb	0	; select bank0
 13545  165E  00C8               	movwf	LEDsOn@topOrBottom
 13546  165F  3198  2080  3196   	fcall	_LEDsOn
 13547                           
 13548                           ;LEDcomm.c: 99: send_2length_2bytes_IK(0,0,type,topOrBottom);
 13549  1662  3000               	movlw	0
 13550  1663  0020               	movlb	0	; select bank0
 13551  1664  00BC               	movwf	send_2length_2bytes_IK@data1
 13552  1665  00BD               	movwf	send_2length_2bytes_IK@data1+1
 13553  1666  3000               	movlw	0
 13554  1667  00BE               	movwf	send_2length_2bytes_IK@data2
 13555  1668  00BF               	movwf	send_2length_2bytes_IK@data2+1
 13556  1669  0021               	movlb	1	; select bank1
 13557  166A  0835               	movf	LED_test_openshort@type^(0+128),w
 13558  166B  00B9               	movwf	??_LED_test_openshort^(0+128)
 13559  166C  0839               	movf	??_LED_test_openshort^(0+128),w
 13560  166D  0020               	movlb	0	; select bank0
 13561  166E  00C0               	movwf	send_2length_2bytes_IK@latch_start
 13562  166F  0021               	movlb	1	; select bank1
 13563  1670  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 13564  1671  0020               	movlb	0	; select bank0
 13565  1672  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 13566  1673  0021               	movlb	1	; select bank1
 13567  1674  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 13568  1675  0020               	movlb	0	; select bank0
 13569  1676  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 13570  1677  31A6  26E2  3196   	fcall	_send_2length_2bytes_IK
 13571                           
 13572                           ;LEDcomm.c: 101: do { LATCbits.LATC1 = 0; } while(0);
 13573  167A  0022               	movlb	2	; select bank2
 13574  167B  108E               	bcf	14,1	;volatile
 13575                           
 13576                           ;LEDcomm.c: 103: unsigned long readData = 0;
 13577  167C  3000               	movlw	0
 13578  167D  0021               	movlb	1	; select bank1
 13579  167E  00BD               	movwf	(LED_test_openshort@readData+3)^(0+128)
 13580  167F  3000               	movlw	0
 13581  1680  00BC               	movwf	(LED_test_openshort@readData+2)^(0+128)
 13582  1681  3000               	movlw	0
 13583  1682  00BB               	movwf	(LED_test_openshort@readData+1)^(0+128)
 13584  1683  3000               	movlw	0
 13585  1684  00BA               	movwf	LED_test_openshort@readData^(0+128)
 13586                           
 13587                           ;LEDcomm.c: 105: for(int j = 23; j>=0; j--){
 13588  1685  3017               	movlw	23
 13589  1686  00BE               	movwf	LED_test_openshort@j^(0+128)
 13590  1687  3000               	movlw	0
 13591  1688  00BF               	movwf	(LED_test_openshort@j^(0+128)+1)
 13592  1689  1BBF               	btfsc	(LED_test_openshort@j+1)^(0+128),7
 13593  168A  2EAE               	goto	l7400
 13594  168B                     l267:	
 13595                           ;LEDcomm.c: 106: do { LATAbits.LATA2 = 1; } while(0);
 13596                           
 13597  168B  0022               	movlb	2	; select bank2
 13598  168C  150C               	bsf	12,2	;volatile
 13599                           
 13600                           ;LEDcomm.c: 107: _delay((unsigned long)((10)*(1000000/4000000.0)));
 13601  168D  3200               	nop2	;2 cycle nop
 13602                           
 13603                           ;LEDcomm.c: 108: do { LATAbits.LATA2 = 0; } while(0);
 13604  168E  0022               	movlb	2	; select bank2
 13605  168F  110C               	bcf	12,2	;volatile
 13606                           
 13607                           ;LEDcomm.c: 110: if (PORTCbits.RC3) printf("%d ", j);
 13608  1690  0020               	movlb	0	; select bank0
 13609  1691  1D8E               	btfss	14,3	;volatile
 13610  1692  2E9F               	goto	l7394
 13611  1693  301B               	movlw	low (STR_1| (0+32768))
 13612  1694  0021               	movlb	1	; select bank1
 13613  1695  00A0               	movwf	printf@f^(0+128)
 13614  1696  30AA               	movlw	high (STR_1| (0+32768))
 13615  1697  00A1               	movwf	(printf@f^(0+128)+1)
 13616  1698  083F               	movf	(LED_test_openshort@j+1)^(0+128),w
 13617  1699  00A3               	movwf	((?_printf+1)^(0+128)+2)
 13618  169A  083E               	movf	LED_test_openshort@j^(0+128),w
 13619  169B  00A2               	movwf	(?_printf^(0+128)+2)
 13620  169C  3186  2618  3196   	fcall	_printf
 13621  169F                     l7394:	
 13622                           
 13623                           ;LEDcomm.c: 116: if (j == 23) do { LATCbits.LATC1 = 1; } while(0);
 13624  169F  3017               	movlw	23
 13625  16A0  0021               	movlb	1	; select bank1
 13626  16A1  063E               	xorwf	LED_test_openshort@j^(0+128),w
 13627  16A2  043F               	iorwf	(LED_test_openshort@j+1)^(0+128),w
 13628  16A3  1D03               	btfss	3,2
 13629  16A4  2EA7               	goto	l7396
 13630  16A5  0022               	movlb	2	; select bank2
 13631  16A6  148E               	bsf	14,1	;volatile
 13632  16A7                     l7396:	
 13633  16A7  30FF               	movlw	255
 13634  16A8  0021               	movlb	1	; select bank1
 13635  16A9  07BE               	addwf	LED_test_openshort@j^(0+128),f
 13636  16AA  30FF               	movlw	255
 13637  16AB  3DBF               	addwfc	(LED_test_openshort@j+1)^(0+128),f
 13638  16AC  1FBF               	btfss	(LED_test_openshort@j+1)^(0+128),7
 13639  16AD  2E8B               	goto	l267
 13640  16AE                     l7400:	
 13641                           
 13642                           ;LEDcomm.c: 117: }
 13643                           ;LEDcomm.c: 118: printf("\n");
 13644  16AE  303B               	movlw	low ((STR_35+28)| (0+32768))
 13645  16AF  00A0               	movwf	printf@f^(0+128)
 13646  16B0  30A8               	movlw	high ((STR_35+28)| (0+32768))
 13647  16B1  00A1               	movwf	(printf@f^(0+128)+1)
 13648  16B2  3186  2618         	fcall	_printf
 13649  16B4  0008               	return
 13650  16B5                     __end_of_LED_test_openshort:	
 13651                           
 13652                           	psect	text36
 13653  0946                     __ptext36:	
 13654 ;; *************** function _LED_testComm *****************
 13655 ;; Defined at:
 13656 ;;		line 151 in file "LEDcomm.c"
 13657 ;; Parameters:    Size  Location     Type
 13658 ;;  topOrBottom     2   42[BANK1 ] int 
 13659 ;; Auto vars:     Size  Location     Type
 13660 ;;  oldConfigReg    4   46[BANK1 ] long 
 13661 ;;  readResult      2   44[BANK1 ] int 
 13662 ;; Return value:  Size  Location     Type
 13663 ;;                  2   42[BANK1 ] int 
 13664 ;; Registers used:
 13665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13666 ;; Tracked objects:
 13667 ;;		On entry : 0/0
 13668 ;;		On exit  : 0/0
 13669 ;;		Unchanged: 0/0
 13670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13671 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13672 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13673 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13674 ;;      Totals:         0       2       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13675 ;;Total ram usage:       10 bytes
 13676 ;; Hardware stack levels used:    1
 13677 ;; Hardware stack levels required when called:   11
 13678 ;; This function calls:
 13679 ;;		_LED_readConfig
 13680 ;;		_LED_setBrightnessRange
 13681 ;; This function is called by:
 13682 ;;		_commCheck
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           
 13687                           ;psect for function _LED_testComm
 13688  0946                     _LED_testComm:	
 13689                           
 13690                           ;LEDcomm.c: 153: long oldConfigReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 13691                           
 13692                           ;incstack = 0
 13693                           ; Regs used in _LED_testComm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13694  0946  0021               	movlb	1	; select bank1
 13695  0947  034A               	decf	LED_testComm@topOrBottom^(0+128),w
 13696  0948  044B               	iorwf	(LED_testComm@topOrBottom+1)^(0+128),w
 13697  0949  1903               	btfsc	3,2
 13698  094A  295A               	goto	l7406
 13699  094B  0022               	movlb	2	; select bank2
 13700  094C  0851               	movf	(_LED_configReg_bot+3)^(0+256),w
 13701  094D  0021               	movlb	1	; select bank1
 13702  094E  00D1               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 13703  094F  0022               	movlb	2	; select bank2
 13704  0950  0850               	movf	(_LED_configReg_bot+2)^(0+256),w
 13705  0951  0021               	movlb	1	; select bank1
 13706  0952  00D0               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 13707  0953  0022               	movlb	2	; select bank2
 13708  0954  084F               	movf	(_LED_configReg_bot+1)^(0+256),w
 13709  0955  0021               	movlb	1	; select bank1
 13710  0956  00CF               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 13711  0957  0022               	movlb	2	; select bank2
 13712  0958  084E               	movf	_LED_configReg_bot^(0+256),w
 13713  0959  2968               	goto	L26
 13714  095A                     l7406:	
 13715  095A  0022               	movlb	2	; select bank2
 13716  095B  0855               	movf	(_LED_configReg_top+3)^(0+256),w
 13717  095C  0021               	movlb	1	; select bank1
 13718  095D  00D1               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 13719  095E  0022               	movlb	2	; select bank2
 13720  095F  0854               	movf	(_LED_configReg_top+2)^(0+256),w
 13721  0960  0021               	movlb	1	; select bank1
 13722  0961  00D0               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 13723  0962  0022               	movlb	2	; select bank2
 13724  0963  0853               	movf	(_LED_configReg_top+1)^(0+256),w
 13725  0964  0021               	movlb	1	; select bank1
 13726  0965  00CF               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 13727  0966  0022               	movlb	2	; select bank2
 13728  0967  0852               	movf	_LED_configReg_top^(0+256),w
 13729  0968                     L26:	
 13730  0968  0021               	movlb	1	; select bank1
 13731  0969  00CE               	movwf	LED_testComm@oldConfigReg^(0+128)
 13732                           
 13733                           ;LEDcomm.c: 154: LED_setBrightnessRange(1, topOrBottom);
 13734  096A  3001               	movlw	1
 13735  096B  0020               	movlb	0	; select bank0
 13736  096C  00C4               	movwf	LED_setBrightnessRange@range
 13737  096D  3000               	movlw	0
 13738  096E  00C5               	movwf	LED_setBrightnessRange@range+1
 13739  096F  0021               	movlb	1	; select bank1
 13740  0970  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 13741  0971  0020               	movlb	0	; select bank0
 13742  0972  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 13743  0973  0021               	movlb	1	; select bank1
 13744  0974  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 13745  0975  0020               	movlb	0	; select bank0
 13746  0976  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 13747  0977  318C  2445  3189   	fcall	_LED_setBrightnessRange
 13748                           
 13749                           ;LEDcomm.c: 155: int readResult = LED_readConfig(1);
 13750  097A  3001               	movlw	1
 13751  097B  0021               	movlb	1	; select bank1
 13752  097C  00C6               	movwf	LED_readConfig@topOrBottom^(0+128)
 13753  097D  3000               	movlw	0
 13754  097E  00C7               	movwf	(LED_readConfig@topOrBottom^(0+128)+1)
 13755  097F  3199  2152  3189   	fcall	_LED_readConfig
 13756  0982  0021               	movlb	1	; select bank1
 13757  0983  0847               	movf	(?_LED_readConfig+1)^(0+128),w
 13758  0984  00CD               	movwf	(LED_testComm@readResult+1)^(0+128)
 13759  0985  0846               	movf	?_LED_readConfig^(0+128),w
 13760  0986  00CC               	movwf	LED_testComm@readResult^(0+128)
 13761                           
 13762                           ;LEDcomm.c: 157: LED_setBrightnessRange(oldConfigReg > 0, topOrBottom);
 13763  0987  1BD1               	btfsc	(LED_testComm@oldConfigReg+3)^(0+128),7
 13764  0988  2998               	goto	u7310
 13765  0989  0851               	movf	(LED_testComm@oldConfigReg+3)^(0+128),w
 13766  098A  1D03               	btfss	3,2
 13767  098B  2996               	goto	u7311
 13768  098C  0850               	movf	(LED_testComm@oldConfigReg+2)^(0+128),w
 13769  098D  1D03               	btfss	3,2
 13770  098E  2996               	goto	u7311
 13771  098F  084F               	movf	(LED_testComm@oldConfigReg+1)^(0+128),w
 13772  0990  1D03               	btfss	3,2
 13773  0991  2996               	goto	u7311
 13774  0992  3001               	movlw	1
 13775  0993  024E               	subwf	LED_testComm@oldConfigReg^(0+128),w
 13776  0994  1C03               	btfss	3,0
 13777  0995  2998               	goto	u7310
 13778  0996                     u7311:	
 13779  0996  3001               	movlw	1
 13780  0997  2999               	goto	u7320
 13781  0998                     u7310:	
 13782  0998  3000               	movlw	0
 13783  0999                     u7320:	
 13784  0999  0020               	movlb	0	; select bank0
 13785  099A  00CC               	movwf	??_LED_testComm
 13786  099B  01CD               	clrf	??_LED_testComm+1
 13787  099C  084C               	movf	??_LED_testComm,w
 13788  099D  00C4               	movwf	LED_setBrightnessRange@range
 13789  099E  084D               	movf	??_LED_testComm+1,w
 13790  099F  00C5               	movwf	LED_setBrightnessRange@range+1
 13791  09A0  0021               	movlb	1	; select bank1
 13792  09A1  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 13793  09A2  0020               	movlb	0	; select bank0
 13794  09A3  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 13795  09A4  0021               	movlb	1	; select bank1
 13796  09A5  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 13797  09A6  0020               	movlb	0	; select bank0
 13798  09A7  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 13799  09A8  318C  2445  3189   	fcall	_LED_setBrightnessRange
 13800                           
 13801                           ;LEDcomm.c: 159: return (readResult != 7);
 13802  09AB  3007               	movlw	7
 13803  09AC  0021               	movlb	1	; select bank1
 13804  09AD  064C               	xorwf	LED_testComm@readResult^(0+128),w
 13805  09AE  044D               	iorwf	(LED_testComm@readResult+1)^(0+128),w
 13806  09AF  1903               	btfsc	3,2
 13807  09B0  29B3               	goto	u7330
 13808  09B1  3001               	movlw	1
 13809  09B2  29B4               	goto	u7340
 13810  09B3                     u7330:	
 13811  09B3  3000               	movlw	0
 13812  09B4                     u7340:	
 13813  09B4  0020               	movlb	0	; select bank0
 13814  09B5  00CC               	movwf	??_LED_testComm
 13815  09B6  01CD               	clrf	??_LED_testComm+1
 13816  09B7  084C               	movf	??_LED_testComm,w
 13817  09B8  0021               	movlb	1	; select bank1
 13818  09B9  00CA               	movwf	?_LED_testComm^(0+128)
 13819  09BA  0020               	movlb	0	; select bank0
 13820  09BB  084D               	movf	??_LED_testComm+1,w
 13821  09BC  0021               	movlb	1	; select bank1
 13822  09BD  00CB               	movwf	(?_LED_testComm+1)^(0+128)
 13823  09BE  0008               	return
 13824  09BF                     __end_of_LED_testComm:	
 13825                           
 13826                           	psect	text37
 13827  0C45                     __ptext37:	
 13828 ;; *************** function _LED_setBrightnessRange *****************
 13829 ;; Defined at:
 13830 ;;		line 77 in file "LEDcomm.c"
 13831 ;; Parameters:    Size  Location     Type
 13832 ;;  range           2   36[BANK0 ] int 
 13833 ;;  topOrBottom     2   38[BANK0 ] int 
 13834 ;; Auto vars:     Size  Location     Type
 13835 ;;  LED_configRe    4   40[BANK0 ] long 
 13836 ;; Return value:  Size  Location     Type
 13837 ;;                  1    wreg      void 
 13838 ;; Registers used:
 13839 ;;		wreg, status,2, status,0, pclath, cstack
 13840 ;; Tracked objects:
 13841 ;;		On entry : 0/0
 13842 ;;		On exit  : 0/0
 13843 ;;		Unchanged: 0/0
 13844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13845 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13846 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13847 ;;      Temps:          0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13848 ;;      Totals:         0       8      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13849 ;;Total ram usage:       25 bytes
 13850 ;; Hardware stack levels used:    1
 13851 ;; Hardware stack levels required when called:    8
 13852 ;; This function calls:
 13853 ;;		_send_2length_2bytes_IK
 13854 ;; This function is called by:
 13855 ;;		_LED_testComm
 13856 ;;		_setLEDBrightnessRange
 13857 ;; This function uses a non-reentrant model
 13858 ;;
 13859                           
 13860                           
 13861                           ;psect for function _LED_setBrightnessRange
 13862  0C45                     _LED_setBrightnessRange:	
 13863                           
 13864                           ;LEDcomm.c: 79: long LED_configReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 13865                           
 13866                           ;incstack = 0
 13867                           ; Regs used in _LED_setBrightnessRange: [wreg+status,2+status,0+pclath+cstack]
 13868  0C45  0020               	movlb	0	; select bank0
 13869  0C46  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 13870  0C47  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 13871  0C48  1903               	btfsc	3,2
 13872  0C49  2C59               	goto	l7298
 13873  0C4A  0022               	movlb	2	; select bank2
 13874  0C4B  0851               	movf	(_LED_configReg_bot+3)^(0+256),w
 13875  0C4C  0020               	movlb	0	; select bank0
 13876  0C4D  00CB               	movwf	LED_setBrightnessRange@LED_configReg+3
 13877  0C4E  0022               	movlb	2	; select bank2
 13878  0C4F  0850               	movf	(_LED_configReg_bot+2)^(0+256),w
 13879  0C50  0020               	movlb	0	; select bank0
 13880  0C51  00CA               	movwf	LED_setBrightnessRange@LED_configReg+2
 13881  0C52  0022               	movlb	2	; select bank2
 13882  0C53  084F               	movf	(_LED_configReg_bot+1)^(0+256),w
 13883  0C54  0020               	movlb	0	; select bank0
 13884  0C55  00C9               	movwf	LED_setBrightnessRange@LED_configReg+1
 13885  0C56  0022               	movlb	2	; select bank2
 13886  0C57  084E               	movf	_LED_configReg_bot^(0+256),w
 13887  0C58  2C67               	goto	L27
 13888  0C59                     l7298:	
 13889  0C59  0022               	movlb	2	; select bank2
 13890  0C5A  0855               	movf	(_LED_configReg_top+3)^(0+256),w
 13891  0C5B  0020               	movlb	0	; select bank0
 13892  0C5C  00CB               	movwf	LED_setBrightnessRange@LED_configReg+3
 13893  0C5D  0022               	movlb	2	; select bank2
 13894  0C5E  0854               	movf	(_LED_configReg_top+2)^(0+256),w
 13895  0C5F  0020               	movlb	0	; select bank0
 13896  0C60  00CA               	movwf	LED_setBrightnessRange@LED_configReg+2
 13897  0C61  0022               	movlb	2	; select bank2
 13898  0C62  0853               	movf	(_LED_configReg_top+1)^(0+256),w
 13899  0C63  0020               	movlb	0	; select bank0
 13900  0C64  00C9               	movwf	LED_setBrightnessRange@LED_configReg+1
 13901  0C65  0022               	movlb	2	; select bank2
 13902  0C66  0852               	movf	_LED_configReg_top^(0+256),w
 13903  0C67                     L27:	
 13904  0C67  0020               	movlb	0	; select bank0
 13905  0C68  00C8               	movwf	LED_setBrightnessRange@LED_configReg
 13906                           
 13907                           ;LEDcomm.c: 80: LED_configReg |= ((range>0) | (range>0)<<1 | (range>0) << 2);
 13908  0C69  0845               	movf	LED_setBrightnessRange@range+1,w
 13909  0C6A  3A80               	xorlw	128
 13910  0C6B  0021               	movlb	1	; select bank1
 13911  0C6C  00A0               	movwf	??_LED_setBrightnessRange^(0+128)
 13912  0C6D  3080               	movlw	128
 13913  0C6E  0220               	subwf	??_LED_setBrightnessRange^(0+128),w
 13914  0C6F  1D03               	skipz
 13915  0C70  2C74               	goto	u7015
 13916  0C71  3001               	movlw	1
 13917  0C72  0020               	movlb	0	; select bank0
 13918  0C73  0244               	subwf	LED_setBrightnessRange@range,w
 13919  0C74                     u7015:	
 13920  0C74  1C03               	btfss	3,0
 13921  0C75  2C78               	goto	u7010
 13922  0C76  3001               	movlw	1
 13923  0C77  2C79               	goto	u7020
 13924  0C78                     u7010:	
 13925  0C78  3000               	movlw	0
 13926  0C79                     u7020:	
 13927  0C79  0021               	movlb	1	; select bank1
 13928  0C7A  00A1               	movwf	(??_LED_setBrightnessRange+1)^(0+128)
 13929  0C7B  01A2               	clrf	((??_LED_setBrightnessRange+1)^(0+128)+1)
 13930  0C7C  35A1               	lslf	(??_LED_setBrightnessRange+1)^(0+128),f
 13931  0C7D  0DA2               	rlf	((??_LED_setBrightnessRange+1)^(0+128)+1),f
 13932  0C7E  35A1               	lslf	(??_LED_setBrightnessRange+1)^(0+128),f
 13933  0C7F  0DA2               	rlf	((??_LED_setBrightnessRange+1)^(0+128)+1),f
 13934  0C80  0020               	movlb	0	; select bank0
 13935  0C81  0845               	movf	LED_setBrightnessRange@range+1,w
 13936  0C82  3A80               	xorlw	128
 13937  0C83  0021               	movlb	1	; select bank1
 13938  0C84  00A3               	movwf	(??_LED_setBrightnessRange+3)^(0+128)
 13939  0C85  3080               	movlw	128
 13940  0C86  0223               	subwf	(??_LED_setBrightnessRange+3)^(0+128),w
 13941  0C87  1D03               	skipz
 13942  0C88  2C8C               	goto	u7035
 13943  0C89  3001               	movlw	1
 13944  0C8A  0020               	movlb	0	; select bank0
 13945  0C8B  0244               	subwf	LED_setBrightnessRange@range,w
 13946  0C8C                     u7035:	
 13947  0C8C  1C03               	btfss	3,0
 13948  0C8D  2C90               	goto	u7030
 13949  0C8E  3001               	movlw	1
 13950  0C8F  2C91               	goto	u7040
 13951  0C90                     u7030:	
 13952  0C90  3000               	movlw	0
 13953  0C91                     u7040:	
 13954  0C91  0021               	movlb	1	; select bank1
 13955  0C92  00A4               	movwf	(??_LED_setBrightnessRange+4)^(0+128)
 13956  0C93  01A5               	clrf	((??_LED_setBrightnessRange+4)^(0+128)+1)
 13957  0C94  35A4               	lslf	(??_LED_setBrightnessRange+4)^(0+128),f
 13958  0C95  0DA5               	rlf	((??_LED_setBrightnessRange+4)^(0+128)+1),f
 13959  0C96  0020               	movlb	0	; select bank0
 13960  0C97  0845               	movf	LED_setBrightnessRange@range+1,w
 13961  0C98  3A80               	xorlw	128
 13962  0C99  0021               	movlb	1	; select bank1
 13963  0C9A  00A6               	movwf	(??_LED_setBrightnessRange+6)^(0+128)
 13964  0C9B  3080               	movlw	128
 13965  0C9C  0226               	subwf	(??_LED_setBrightnessRange+6)^(0+128),w
 13966  0C9D  1D03               	skipz
 13967  0C9E  2CA2               	goto	u7055
 13968  0C9F  3001               	movlw	1
 13969  0CA0  0020               	movlb	0	; select bank0
 13970  0CA1  0244               	subwf	LED_setBrightnessRange@range,w
 13971  0CA2                     u7055:	
 13972  0CA2  1C03               	btfss	3,0
 13973  0CA3  2CA6               	goto	u7050
 13974  0CA4  3001               	movlw	1
 13975  0CA5  2CA7               	goto	u7060
 13976  0CA6                     u7050:	
 13977  0CA6  3000               	movlw	0
 13978  0CA7                     u7060:	
 13979  0CA7  0021               	movlb	1	; select bank1
 13980  0CA8  00A7               	movwf	(??_LED_setBrightnessRange+7)^(0+128)
 13981  0CA9  01A8               	clrf	((??_LED_setBrightnessRange+7)^(0+128)+1)
 13982  0CAA  0824               	movf	(??_LED_setBrightnessRange+4)^(0+128),w
 13983  0CAB  0427               	iorwf	(??_LED_setBrightnessRange+7)^(0+128),w
 13984  0CAC  00A9               	movwf	(??_LED_setBrightnessRange+9)^(0+128)
 13985  0CAD  0825               	movf	(??_LED_setBrightnessRange+5)^(0+128),w
 13986  0CAE  0428               	iorwf	(??_LED_setBrightnessRange+8)^(0+128),w
 13987  0CAF  00AA               	movwf	(??_LED_setBrightnessRange+10)^(0+128)
 13988  0CB0  0821               	movf	(??_LED_setBrightnessRange+1)^(0+128),w
 13989  0CB1  0429               	iorwf	(??_LED_setBrightnessRange+9)^(0+128),w
 13990  0CB2  00AB               	movwf	(??_LED_setBrightnessRange+11)^(0+128)
 13991  0CB3  0822               	movf	(??_LED_setBrightnessRange+2)^(0+128),w
 13992  0CB4  042A               	iorwf	(??_LED_setBrightnessRange+10)^(0+128),w
 13993  0CB5  00AC               	movwf	(??_LED_setBrightnessRange+12)^(0+128)
 13994  0CB6  082B               	movf	(??_LED_setBrightnessRange+11)^(0+128),w
 13995  0CB7  00AD               	movwf	(??_LED_setBrightnessRange+13)^(0+128)
 13996  0CB8  082C               	movf	(??_LED_setBrightnessRange+12)^(0+128),w
 13997  0CB9  00AE               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+1)
 13998  0CBA  3000               	movlw	0
 13999  0CBB  1BAE               	btfsc	((??_LED_setBrightnessRange+13)^(0+128)+1),7
 14000  0CBC  30FF               	movlw	255
 14001  0CBD  00AF               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+2)
 14002  0CBE  00B0               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+3)
 14003  0CBF  082D               	movf	(??_LED_setBrightnessRange+13)^(0+128),w
 14004  0CC0  0020               	movlb	0	; select bank0
 14005  0CC1  04C8               	iorwf	LED_setBrightnessRange@LED_configReg,f
 14006  0CC2  0021               	movlb	1	; select bank1
 14007  0CC3  082E               	movf	(??_LED_setBrightnessRange+14)^(0+128),w
 14008  0CC4  0020               	movlb	0	; select bank0
 14009  0CC5  04C9               	iorwf	LED_setBrightnessRange@LED_configReg+1,f
 14010  0CC6  0021               	movlb	1	; select bank1
 14011  0CC7  082F               	movf	(??_LED_setBrightnessRange+15)^(0+128),w
 14012  0CC8  0020               	movlb	0	; select bank0
 14013  0CC9  04CA               	iorwf	LED_setBrightnessRange@LED_configReg+2,f
 14014  0CCA  0021               	movlb	1	; select bank1
 14015  0CCB  0830               	movf	(??_LED_setBrightnessRange+16)^(0+128),w
 14016  0CCC  0020               	movlb	0	; select bank0
 14017  0CCD  04CB               	iorwf	LED_setBrightnessRange@LED_configReg+3,f
 14018                           
 14019                           ;LEDcomm.c: 81: send_2length_2bytes_IK((unsigned int)((LED_configReg>>16) & 0xFFFF),(uns
      +                          igned int)LED_configReg, 3, topOrBottom);
 14020  0CCE  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 14021  0CCF  0021               	movlb	1	; select bank1
 14022  0CD0  00A0               	movwf	??_LED_setBrightnessRange^(0+128)
 14023  0CD1  0020               	movlb	0	; select bank0
 14024  0CD2  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 14025  0CD3  0021               	movlb	1	; select bank1
 14026  0CD4  00A1               	movwf	(??_LED_setBrightnessRange^(0+128)+1)
 14027  0CD5  0020               	movlb	0	; select bank0
 14028  0CD6  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 14029  0CD7  0021               	movlb	1	; select bank1
 14030  0CD8  00A2               	movwf	(??_LED_setBrightnessRange^(0+128)+2)
 14031  0CD9  0020               	movlb	0	; select bank0
 14032  0CDA  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 14033  0CDB  0021               	movlb	1	; select bank1
 14034  0CDC  00A3               	movwf	(??_LED_setBrightnessRange^(0+128)+3)
 14035  0CDD  3010               	movlw	16
 14036  0CDE  00A4               	movwf	(??_LED_setBrightnessRange+4)^(0+128)
 14037  0CDF                     u7075:	
 14038  0CDF  37A3               	asrf	(??_LED_setBrightnessRange^(0+128)+3),f
 14039  0CE0  0CA2               	rrf	(??_LED_setBrightnessRange^(0+128)+2),f
 14040  0CE1  0CA1               	rrf	(??_LED_setBrightnessRange^(0+128)+1),f
 14041  0CE2  0CA0               	rrf	??_LED_setBrightnessRange^(0+128),f
 14042  0CE3  0BA4               	decfsz	(??_LED_setBrightnessRange+4)^(0+128),f
 14043  0CE4  2CDF               	goto	u7075
 14044  0CE5  0821               	movf	(??_LED_setBrightnessRange+1)^(0+128),w
 14045  0CE6  0020               	movlb	0	; select bank0
 14046  0CE7  00BD               	movwf	send_2length_2bytes_IK@data1+1
 14047  0CE8  0021               	movlb	1	; select bank1
 14048  0CE9  0820               	movf	??_LED_setBrightnessRange^(0+128),w
 14049  0CEA  0020               	movlb	0	; select bank0
 14050  0CEB  00BC               	movwf	send_2length_2bytes_IK@data1
 14051  0CEC  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 14052  0CED  00BF               	movwf	send_2length_2bytes_IK@data2+1
 14053  0CEE  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 14054  0CEF  00BE               	movwf	send_2length_2bytes_IK@data2
 14055  0CF0  3003               	movlw	3
 14056  0CF1  0021               	movlb	1	; select bank1
 14057  0CF2  00A5               	movwf	(??_LED_setBrightnessRange+5)^(0+128)
 14058  0CF3  0825               	movf	(??_LED_setBrightnessRange+5)^(0+128),w
 14059  0CF4  0020               	movlb	0	; select bank0
 14060  0CF5  00C0               	movwf	send_2length_2bytes_IK@latch_start
 14061  0CF6  0847               	movf	LED_setBrightnessRange@topOrBottom+1,w
 14062  0CF7  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 14063  0CF8  0846               	movf	LED_setBrightnessRange@topOrBottom,w
 14064  0CF9  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 14065  0CFA  31A6  26E2  318C   	fcall	_send_2length_2bytes_IK
 14066                           
 14067                           ;LEDcomm.c: 84: if (topOrBottom == 1)
 14068  0CFD  0020               	movlb	0	; select bank0
 14069  0CFE  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 14070  0CFF  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 14071  0D00  1D03               	btfss	3,2
 14072  0D01  2D12               	goto	l7308
 14073                           
 14074                           ;LEDcomm.c: 85: LED_configReg_top = LED_configReg;
 14075  0D02  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 14076  0D03  0022               	movlb	2	; select bank2
 14077  0D04  00D5               	movwf	(_LED_configReg_top+3)^(0+256)
 14078  0D05  0020               	movlb	0	; select bank0
 14079  0D06  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 14080  0D07  0022               	movlb	2	; select bank2
 14081  0D08  00D4               	movwf	(_LED_configReg_top+2)^(0+256)
 14082  0D09  0020               	movlb	0	; select bank0
 14083  0D0A  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 14084  0D0B  0022               	movlb	2	; select bank2
 14085  0D0C  00D3               	movwf	(_LED_configReg_top+1)^(0+256)
 14086  0D0D  0020               	movlb	0	; select bank0
 14087  0D0E  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 14088  0D0F  0022               	movlb	2	; select bank2
 14089  0D10  00D2               	movwf	_LED_configReg_top^(0+256)
 14090  0D11  0008               	return
 14091  0D12                     l7308:	
 14092                           
 14093                           ;LEDcomm.c: 86: else
 14094                           ;LEDcomm.c: 87: LED_configReg_bot = LED_configReg;
 14095  0D12  0020               	movlb	0	; select bank0
 14096  0D13  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 14097  0D14  0022               	movlb	2	; select bank2
 14098  0D15  00D1               	movwf	(_LED_configReg_bot+3)^(0+256)
 14099  0D16  0020               	movlb	0	; select bank0
 14100  0D17  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 14101  0D18  0022               	movlb	2	; select bank2
 14102  0D19  00D0               	movwf	(_LED_configReg_bot+2)^(0+256)
 14103  0D1A  0020               	movlb	0	; select bank0
 14104  0D1B  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 14105  0D1C  0022               	movlb	2	; select bank2
 14106  0D1D  00CF               	movwf	(_LED_configReg_bot+1)^(0+256)
 14107  0D1E  0020               	movlb	0	; select bank0
 14108  0D1F  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 14109  0D20  0022               	movlb	2	; select bank2
 14110  0D21  00CE               	movwf	_LED_configReg_bot^(0+256)
 14111  0D22  0008               	return
 14112  0D23                     __end_of_LED_setBrightnessRange:	
 14113                           
 14114                           	psect	text38
 14115  1952                     __ptext38:	
 14116 ;; *************** function _LED_readConfig *****************
 14117 ;; Defined at:
 14118 ;;		line 123 in file "LEDcomm.c"
 14119 ;; Parameters:    Size  Location     Type
 14120 ;;  topOrBottom     2   38[BANK1 ] int 
 14121 ;; Auto vars:     Size  Location     Type
 14122 ;;		None
 14123 ;; Return value:  Size  Location     Type
 14124 ;;                  4   38[BANK1 ] long 
 14125 ;; Registers used:
 14126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14127 ;; Tracked objects:
 14128 ;;		On entry : 0/0
 14129 ;;		On exit  : 0/0
 14130 ;;		Unchanged: 0/0
 14131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14132 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14134 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14135 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14136 ;;Total ram usage:        5 bytes
 14137 ;; Hardware stack levels used:    1
 14138 ;; Hardware stack levels required when called:   10
 14139 ;; This function calls:
 14140 ;;		_LED_getData
 14141 ;;		_send_2length_2bytes_IK
 14142 ;; This function is called by:
 14143 ;;		_LED_testComm
 14144 ;; This function uses a non-reentrant model
 14145 ;;
 14146                           
 14147                           
 14148                           ;psect for function _LED_readConfig
 14149  1952                     _LED_readConfig:	
 14150                           
 14151                           ;incstack = 0
 14152                           ; Regs used in _LED_readConfig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14153                           ;LEDcomm.c: 124: do { LATCbits.LATC1 = 1; } while(0);
 14154  1952  0022               	movlb	2	; select bank2
 14155  1953  148E               	bsf	14,1	;volatile
 14156                           
 14157                           ;LEDcomm.c: 125: send_2length_2bytes_IK(0,0,5,topOrBottom);
 14158  1954  3000               	movlw	0
 14159  1955  0020               	movlb	0	; select bank0
 14160  1956  00BC               	movwf	send_2length_2bytes_IK@data1
 14161  1957  00BD               	movwf	send_2length_2bytes_IK@data1+1
 14162  1958  3000               	movlw	0
 14163  1959  00BE               	movwf	send_2length_2bytes_IK@data2
 14164  195A  00BF               	movwf	send_2length_2bytes_IK@data2+1
 14165  195B  3005               	movlw	5
 14166  195C  00C9               	movwf	??_LED_readConfig
 14167  195D  0849               	movf	??_LED_readConfig,w
 14168  195E  00C0               	movwf	send_2length_2bytes_IK@latch_start
 14169  195F  0021               	movlb	1	; select bank1
 14170  1960  0847               	movf	(LED_readConfig@topOrBottom+1)^(0+128),w
 14171  1961  0020               	movlb	0	; select bank0
 14172  1962  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 14173  1963  0021               	movlb	1	; select bank1
 14174  1964  0846               	movf	LED_readConfig@topOrBottom^(0+128),w
 14175  1965  0020               	movlb	0	; select bank0
 14176  1966  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 14177  1967  31A6  26E2  3199   	fcall	_send_2length_2bytes_IK
 14178                           
 14179                           ;LEDcomm.c: 126: return LED_getData();
 14180  196A  3194  2400         	fcall	_LED_getData
 14181  196C  0021               	movlb	1	; select bank1
 14182  196D  0838               	movf	(?_LED_getData+3)^(0+128),w
 14183  196E  00C9               	movwf	(?_LED_readConfig+3)^(0+128)
 14184  196F  0837               	movf	(?_LED_getData+2)^(0+128),w
 14185  1970  00C8               	movwf	(?_LED_readConfig+2)^(0+128)
 14186  1971  0836               	movf	(?_LED_getData+1)^(0+128),w
 14187  1972  00C7               	movwf	(?_LED_readConfig+1)^(0+128)
 14188  1973  0835               	movf	?_LED_getData^(0+128),w
 14189  1974  00C6               	movwf	?_LED_readConfig^(0+128)
 14190  1975  0008               	return
 14191  1976                     __end_of_LED_readConfig:	
 14192                           
 14193                           	psect	text39
 14194  1400                     __ptext39:	
 14195 ;; *************** function _LED_getData *****************
 14196 ;; Defined at:
 14197 ;;		line 129 in file "LEDcomm.c"
 14198 ;; Parameters:    Size  Location     Type
 14199 ;;		None
 14200 ;; Auto vars:     Size  Location     Type
 14201 ;;  j               2   36[BANK1 ] int 
 14202 ;;  readData        4   32[BANK1 ] long 
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  4   21[BANK1 ] long 
 14205 ;; Registers used:
 14206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14207 ;; Tracked objects:
 14208 ;;		On entry : 0/0
 14209 ;;		On exit  : 0/0
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14212 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14213 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14214 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14215 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14216 ;;Total ram usage:       17 bytes
 14217 ;; Hardware stack levels used:    1
 14218 ;; Hardware stack levels required when called:    9
 14219 ;; This function calls:
 14220 ;;		_printf
 14221 ;; This function is called by:
 14222 ;;		_LED_readConfig
 14223 ;; This function uses a non-reentrant model
 14224 ;;
 14225                           
 14226                           
 14227                           ;psect for function _LED_getData
 14228  1400                     _LED_getData:	
 14229                           
 14230                           ;LEDcomm.c: 131: long readData = 0;
 14231                           
 14232                           ;incstack = 0
 14233                           ; Regs used in _LED_getData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14234  1400  3000               	movlw	0
 14235  1401  0021               	movlb	1	; select bank1
 14236  1402  00C3               	movwf	(LED_getData@readData+3)^(0+128)
 14237  1403  3000               	movlw	0
 14238  1404  00C2               	movwf	(LED_getData@readData+2)^(0+128)
 14239  1405  3000               	movlw	0
 14240  1406  00C1               	movwf	(LED_getData@readData+1)^(0+128)
 14241  1407  3000               	movlw	0
 14242  1408  00C0               	movwf	LED_getData@readData^(0+128)
 14243                           
 14244                           ;LEDcomm.c: 132: do { LATBbits.LATB4 = 0; } while(0);
 14245  1409  0022               	movlb	2	; select bank2
 14246  140A  120D               	bcf	13,4	;volatile
 14247                           
 14248                           ;LEDcomm.c: 134: for(int j = 23; j>=0; j--){
 14249  140B  3017               	movlw	23
 14250  140C  0021               	movlb	1	; select bank1
 14251  140D  00C4               	movwf	LED_getData@j^(0+128)
 14252  140E  3000               	movlw	0
 14253  140F  00C5               	movwf	(LED_getData@j^(0+128)+1)
 14254  1410  1BC5               	btfsc	(LED_getData@j+1)^(0+128),7
 14255  1411  2C41               	goto	l291
 14256  1412                     l287:	
 14257                           ;LEDcomm.c: 135: do { LATAbits.LATA2 = 1; } while(0);
 14258                           
 14259  1412  0022               	movlb	2	; select bank2
 14260  1413  150C               	bsf	12,2	;volatile
 14261                           
 14262                           ;LEDcomm.c: 136: readData |= (PORTCbits.RC3 << j);
 14263  1414  0020               	movlb	0	; select bank0
 14264  1415  0C0E               	rrf	14,w	;volatile
 14265  1416  0021               	movlb	1	; select bank1
 14266  1417  00B9               	movwf	??_LED_getData^(0+128)
 14267  1418  0CB9               	rrf	??_LED_getData^(0+128),f
 14268  1419  0C39               	rrf	??_LED_getData^(0+128),w
 14269  141A  3901               	andlw	1
 14270  141B  00BA               	movwf	(??_LED_getData+1)^(0+128)
 14271  141C  01BB               	clrf	((??_LED_getData+1)^(0+128)+1)
 14272  141D  0A44               	incf	LED_getData@j^(0+128),w
 14273  141E  2C21               	goto	u6954
 14274  141F                     u6955:	
 14275  141F  35BA               	lslf	(??_LED_getData+1)^(0+128),f
 14276  1420  0DBB               	rlf	((??_LED_getData+1)^(0+128)+1),f
 14277  1421                     u6954:	
 14278  1421  0B89               	decfsz	9,f
 14279  1422  2C1F               	goto	u6955
 14280  1423  083A               	movf	(??_LED_getData+1)^(0+128),w
 14281  1424  00BC               	movwf	(??_LED_getData+3)^(0+128)
 14282  1425  083B               	movf	(??_LED_getData+2)^(0+128),w
 14283  1426  00BD               	movwf	((??_LED_getData+3)^(0+128)+1)
 14284  1427  3000               	movlw	0
 14285  1428  1BBD               	btfsc	((??_LED_getData+3)^(0+128)+1),7
 14286  1429  30FF               	movlw	255
 14287  142A  00BE               	movwf	((??_LED_getData+3)^(0+128)+2)
 14288  142B  00BF               	movwf	((??_LED_getData+3)^(0+128)+3)
 14289  142C  083C               	movf	(??_LED_getData+3)^(0+128),w
 14290  142D  04C0               	iorwf	LED_getData@readData^(0+128),f
 14291  142E  083D               	movf	(??_LED_getData+4)^(0+128),w
 14292  142F  04C1               	iorwf	(LED_getData@readData+1)^(0+128),f
 14293  1430  083E               	movf	(??_LED_getData+5)^(0+128),w
 14294  1431  04C2               	iorwf	(LED_getData@readData+2)^(0+128),f
 14295  1432  083F               	movf	(??_LED_getData+6)^(0+128),w
 14296  1433  04C3               	iorwf	(LED_getData@readData+3)^(0+128),f
 14297                           
 14298                           ;LEDcomm.c: 138: do { LATAbits.LATA2 = 0; } while(0);
 14299  1434  0022               	movlb	2	; select bank2
 14300  1435  110C               	bcf	12,2	;volatile
 14301                           
 14302                           ;LEDcomm.c: 139: _delay((unsigned long)((100)*(1000000/4000000.0)));
 14303  1436  3008               	movlw	8
 14304  1437                     u8787:	
 14305  1437  0B89               	decfsz	9,f
 14306  1438  2C37               	goto	u8787
 14307  1439  0000               	nop
 14308  143A  30FF               	movlw	255
 14309  143B  0021               	movlb	1	; select bank1
 14310  143C  07C4               	addwf	LED_getData@j^(0+128),f
 14311  143D  30FF               	movlw	255
 14312  143E  3DC5               	addwfc	(LED_getData@j+1)^(0+128),f
 14313  143F  1FC5               	btfss	(LED_getData@j+1)^(0+128),7
 14314  1440  2C12               	goto	l287
 14315  1441                     l291:	
 14316                           ;LEDcomm.c: 141: }
 14317                           ;LEDcomm.c: 143: do { LATAbits.LATA2 = 0; } while(0);
 14318                           
 14319  1441  0022               	movlb	2	; select bank2
 14320  1442  110C               	bcf	12,2	;volatile
 14321                           
 14322                           ;LEDcomm.c: 144: printf("read data: %lu\n", readData);
 14323  1443  30F7               	movlw	low (STR_3| (0+32768))
 14324  1444  0021               	movlb	1	; select bank1
 14325  1445  00A0               	movwf	printf@f^(0+128)
 14326  1446  30A8               	movlw	high (STR_3| (0+32768))
 14327  1447  00A1               	movwf	(printf@f^(0+128)+1)
 14328  1448  0843               	movf	(LED_getData@readData+3)^(0+128),w
 14329  1449  00A5               	movwf	((?_printf+3)^(0+128)+2)
 14330  144A  0842               	movf	(LED_getData@readData+2)^(0+128),w
 14331  144B  00A4               	movwf	((?_printf+2)^(0+128)+2)
 14332  144C  0841               	movf	(LED_getData@readData+1)^(0+128),w
 14333  144D  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14334  144E  0840               	movf	LED_getData@readData^(0+128),w
 14335  144F  00A2               	movwf	(?_printf^(0+128)+2)
 14336  1450  3186  2618         	fcall	_printf
 14337                           
 14338                           ;LEDcomm.c: 145: return readData;
 14339  1452  0021               	movlb	1	; select bank1
 14340  1453  0843               	movf	(LED_getData@readData+3)^(0+128),w
 14341  1454  00B8               	movwf	(?_LED_getData+3)^(0+128)
 14342  1455  0842               	movf	(LED_getData@readData+2)^(0+128),w
 14343  1456  00B7               	movwf	(?_LED_getData+2)^(0+128)
 14344  1457  0841               	movf	(LED_getData@readData+1)^(0+128),w
 14345  1458  00B6               	movwf	(?_LED_getData+1)^(0+128)
 14346  1459  0840               	movf	LED_getData@readData^(0+128),w
 14347  145A  00B5               	movwf	?_LED_getData^(0+128)
 14348  145B  0008               	return
 14349  145C                     __end_of_LED_getData:	
 14350                           
 14351                           	psect	text40
 14352  0E04                     __ptext40:	
 14353 ;; *************** function _doRelMove *****************
 14354 ;; Defined at:
 14355 ;;		line 335 in file "main.c"
 14356 ;; Parameters:    Size  Location     Type
 14357 ;;		None
 14358 ;; Auto vars:     Size  Location     Type
 14359 ;;  j               2   42[BANK1 ] int 
 14360 ;; Return value:  Size  Location     Type
 14361 ;;                  1    wreg      void 
 14362 ;; Registers used:
 14363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14364 ;; Tracked objects:
 14365 ;;		On entry : 0/0
 14366 ;;		On exit  : 0/0
 14367 ;;		Unchanged: 0/0
 14368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14370 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14371 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14372 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14373 ;;Total ram usage:        9 bytes
 14374 ;; Hardware stack levels used:    1
 14375 ;; Hardware stack levels required when called:   16
 14376 ;; This function calls:
 14377 ;;		_doMove
 14378 ;;		_printf
 14379 ;; This function is called by:
 14380 ;;		_main
 14381 ;; This function uses a non-reentrant model
 14382 ;;
 14383                           
 14384                           
 14385                           ;psect for function _doRelMove
 14386  0E04                     _doRelMove:	
 14387                           
 14388                           ;main.c: 336: printf("doRelMove\n");
 14389                           
 14390                           ;incstack = 0
 14391 ;; hardware stack exceeded
 14392                           ; Regs used in _doRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14393  0E04  3082               	movlw	low (STR_11| (0+32768))
 14394  0E05  0021               	movlb	1	; select bank1
 14395  0E06  00A0               	movwf	printf@f^(0+128)
 14396  0E07  30A9               	movlw	high (STR_11| (0+32768))
 14397  0E08  00A1               	movwf	(printf@f^(0+128)+1)
 14398  0E09  3186  2618  318E   	fcall	_printf
 14399                           
 14400                           ;main.c: 337: if(remainingSteps == 0){
 14401  0E0C  0021               	movlb	1	; select bank1
 14402  0E0D  0866               	movf	_remainingSteps^(0+128),w
 14403  0E0E  0467               	iorwf	(_remainingSteps+1)^(0+128),w
 14404  0E0F  1D03               	btfss	3,2
 14405  0E10  2E2B               	goto	l8126
 14406                           
 14407                           ;main.c: 338: printf("rel: all there\n");
 14408  0E11  30D7               	movlw	low (STR_12| (0+32768))
 14409  0E12  00A0               	movwf	printf@f^(0+128)
 14410  0E13  30A8               	movlw	high (STR_12| (0+32768))
 14411  0E14  00A1               	movwf	(printf@f^(0+128)+1)
 14412  0E15  3186  2618         	fcall	_printf
 14413                           
 14414                           ;main.c: 339: motionType = NONE;
 14415  0E17  0020               	movlb	0	; select bank0
 14416  0E18  01D3               	clrf	_motionType
 14417                           
 14418                           ;main.c: 340: moveVector_ups = 0;
 14419  0E19  3000               	movlw	0
 14420  0E1A  0021               	movlb	1	; select bank1
 14421  0E1B  00E3               	movwf	(_moveVector_ups+3)^(0+128)
 14422  0E1C  3000               	movlw	0
 14423  0E1D  00E2               	movwf	(_moveVector_ups+2)^(0+128)
 14424  0E1E  3000               	movlw	0
 14425  0E1F  00E1               	movwf	(_moveVector_ups+1)^(0+128)
 14426  0E20  3000               	movlw	0
 14427  0E21  00E0               	movwf	_moveVector_ups^(0+128)
 14428                           
 14429                           ;main.c: 341: moveVector_downs = 0;
 14430  0E22  3000               	movlw	0
 14431  0E23  00DF               	movwf	(_moveVector_downs+3)^(0+128)
 14432  0E24  3000               	movlw	0
 14433  0E25  00DE               	movwf	(_moveVector_downs+2)^(0+128)
 14434  0E26  3000               	movlw	0
 14435  0E27  00DD               	movwf	(_moveVector_downs+1)^(0+128)
 14436  0E28  3000               	movlw	0
 14437  0E29  00DC               	movwf	_moveVector_downs^(0+128)
 14438                           
 14439                           ;main.c: 343: }
 14440                           
 14441                           ;main.c: 342: return;
 14442  0E2A  0008               	return
 14443  0E2B                     l8126:	
 14444                           
 14445                           ;main.c: 344: else{
 14446                           ;main.c: 345: int j;
 14447                           ;main.c: 346: if (remainingSteps > 0){
 14448  0E2B  0867               	movf	(_remainingSteps+1)^(0+128),w
 14449  0E2C  3A80               	xorlw	128
 14450  0E2D  00C3               	movwf	??_doRelMove^(0+128)
 14451  0E2E  3080               	movlw	128
 14452  0E2F  0243               	subwf	??_doRelMove^(0+128),w
 14453  0E30  1D03               	skipz
 14454  0E31  2E34               	goto	u8145
 14455  0E32  3001               	movlw	1
 14456  0E33  0266               	subwf	_remainingSteps^(0+128),w
 14457  0E34                     u8145:	
 14458  0E34  1C03               	skipc
 14459  0E35  2E8E               	goto	l8146
 14460                           
 14461                           ;main.c: 347: moveVector_ups = 0;
 14462  0E36  3000               	movlw	0
 14463  0E37  0021               	movlb	1	; select bank1
 14464  0E38  00E3               	movwf	(_moveVector_ups+3)^(0+128)
 14465  0E39  3000               	movlw	0
 14466  0E3A  00E2               	movwf	(_moveVector_ups+2)^(0+128)
 14467  0E3B  3000               	movlw	0
 14468  0E3C  00E1               	movwf	(_moveVector_ups+1)^(0+128)
 14469  0E3D  3000               	movlw	0
 14470  0E3E  00E0               	movwf	_moveVector_ups^(0+128)
 14471                           
 14472                           ;main.c: 348: moveVector_downs = activeMask;
 14473  0E3F  085B               	movf	(_activeMask+3)^(0+128),w
 14474  0E40  00DF               	movwf	(_moveVector_downs+3)^(0+128)
 14475  0E41  085A               	movf	(_activeMask+2)^(0+128),w
 14476  0E42  00DE               	movwf	(_moveVector_downs+2)^(0+128)
 14477  0E43  0859               	movf	(_activeMask+1)^(0+128),w
 14478  0E44  00DD               	movwf	(_moveVector_downs+1)^(0+128)
 14479  0E45  0858               	movf	_activeMask^(0+128),w
 14480  0E46  00DC               	movwf	_moveVector_downs^(0+128)
 14481                           
 14482                           ;main.c: 350: doMove();
 14483  0E47  3187  274A  318E   	fcall	_doMove
 14484                           
 14485                           ;main.c: 351: remainingSteps--;
 14486  0E4A  30FF               	movlw	255
 14487  0E4B  0021               	movlb	1	; select bank1
 14488  0E4C  07E6               	addwf	_remainingSteps^(0+128),f
 14489  0E4D  30FF               	movlw	255
 14490  0E4E  3DE7               	addwfc	(_remainingSteps+1)^(0+128),f
 14491                           
 14492                           ;main.c: 354: for(j = 0; j<24; j++)
 14493  0E4F  01CA               	clrf	doRelMove@j^(0+128)
 14494  0E50  01CB               	clrf	(doRelMove@j+1)^(0+128)
 14495  0E51                     L28:	
 14496  0E51  084B               	movf	(doRelMove@j+1)^(0+128),w
 14497  0E52  3A80               	xorlw	128
 14498  0E53  00C3               	movwf	??_doRelMove^(0+128)
 14499  0E54  3080               	movlw	128
 14500  0E55  0243               	subwf	??_doRelMove^(0+128),w
 14501  0E56  1D03               	skipz
 14502  0E57  2E5A               	goto	u8155
 14503  0E58  3018               	movlw	24
 14504  0E59  024A               	subwf	doRelMove@j^(0+128),w
 14505  0E5A                     u8155:	
 14506  0E5A  1803               	btfsc	3,0
 14507  0E5B  0008               	return
 14508                           
 14509                           ;main.c: 355: currentPositions_steps[j] += (activeMask & (1<<j) > 0);
 14510  0E5C  3001               	movlw	1
 14511  0E5D  0021               	movlb	1	; select bank1
 14512  0E5E  00C3               	movwf	??_doRelMove^(0+128)
 14513  0E5F  3000               	movlw	0
 14514  0E60  00C4               	movwf	(??_doRelMove^(0+128)+1)
 14515  0E61  0A4A               	incf	doRelMove@j^(0+128),w
 14516  0E62  2E65               	goto	u8164
 14517  0E63                     u8165:	
 14518  0E63  35C3               	lslf	??_doRelMove^(0+128),f
 14519  0E64  0DC4               	rlf	(??_doRelMove^(0+128)+1),f
 14520  0E65                     u8164:	
 14521  0E65  0B89               	decfsz	9,f
 14522  0E66  2E63               	goto	u8165
 14523  0E67  0844               	movf	(??_doRelMove+1)^(0+128),w
 14524  0E68  3A80               	xorlw	128
 14525  0E69  00C5               	movwf	(??_doRelMove+2)^(0+128)
 14526  0E6A  3080               	movlw	128
 14527  0E6B  0245               	subwf	(??_doRelMove+2)^(0+128),w
 14528  0E6C  1D03               	skipz
 14529  0E6D  2E70               	goto	u8175
 14530  0E6E  3001               	movlw	1
 14531  0E6F  0243               	subwf	??_doRelMove^(0+128),w
 14532  0E70                     u8175:	
 14533  0E70  1C03               	btfss	3,0
 14534  0E71  2E74               	goto	u8170
 14535  0E72  3001               	movlw	1
 14536  0E73  2E75               	goto	u8180
 14537  0E74                     u8170:	
 14538  0E74  3000               	movlw	0
 14539  0E75                     u8180:	
 14540  0E75  0021               	movlb	1	; select bank1
 14541  0E76  00C6               	movwf	(??_doRelMove+3)^(0+128)
 14542  0E77  01C7               	clrf	((??_doRelMove+3)^(0+128)+1)
 14543  0E78  0858               	movf	_activeMask^(0+128),w
 14544  0E79  0546               	andwf	(??_doRelMove+3)^(0+128),w
 14545  0E7A  00C8               	movwf	(??_doRelMove+5)^(0+128)
 14546  0E7B  0859               	movf	(_activeMask+1)^(0+128),w
 14547  0E7C  0547               	andwf	(??_doRelMove+4)^(0+128),w
 14548  0E7D  00C9               	movwf	(??_doRelMove+6)^(0+128)
 14549  0E7E  354A               	lslf	doRelMove@j^(0+128),w
 14550  0E7F  3EA0               	addlw	(low (_currentPositions_steps| (0+256)))& (0+255)
 14551  0E80  0086               	movwf	6
 14552  0E81  3001               	movlw	1	; select bank3/4
 14553  0E82  0087               	movwf	7
 14554  0E83  0848               	movf	(??_doRelMove+5)^(0+128),w
 14555  0E84  0781               	addwf	1,f
 14556  0E85  3141               	addfsr 1,1
 14557  0E86  0849               	movf	(??_doRelMove+6)^(0+128),w
 14558  0E87  3D81               	addwfc	1,f
 14559  0E88  317F               	addfsr 1,-1
 14560  0E89  3001               	movlw	1
 14561  0E8A  07CA               	addwf	doRelMove@j^(0+128),f
 14562  0E8B  3000               	movlw	0
 14563  0E8C  3DCB               	addwfc	(doRelMove@j+1)^(0+128),f
 14564  0E8D  2E51               	goto	L28
 14565  0E8E                     l8146:	
 14566                           ;main.c: 357: }
 14567                           
 14568                           
 14569                           ;main.c: 358: else{
 14570                           ;main.c: 359: moveVector_ups = activeMask;
 14571  0E8E  0021               	movlb	1	; select bank1
 14572  0E8F  085B               	movf	(_activeMask+3)^(0+128),w
 14573  0E90  00E3               	movwf	(_moveVector_ups+3)^(0+128)
 14574  0E91  085A               	movf	(_activeMask+2)^(0+128),w
 14575  0E92  00E2               	movwf	(_moveVector_ups+2)^(0+128)
 14576  0E93  0859               	movf	(_activeMask+1)^(0+128),w
 14577  0E94  00E1               	movwf	(_moveVector_ups+1)^(0+128)
 14578  0E95  0858               	movf	_activeMask^(0+128),w
 14579  0E96  00E0               	movwf	_moveVector_ups^(0+128)
 14580                           
 14581                           ;main.c: 360: moveVector_downs = 0;
 14582  0E97  3000               	movlw	0
 14583  0E98  00DF               	movwf	(_moveVector_downs+3)^(0+128)
 14584  0E99  3000               	movlw	0
 14585  0E9A  00DE               	movwf	(_moveVector_downs+2)^(0+128)
 14586  0E9B  3000               	movlw	0
 14587  0E9C  00DD               	movwf	(_moveVector_downs+1)^(0+128)
 14588  0E9D  3000               	movlw	0
 14589  0E9E  00DC               	movwf	_moveVector_downs^(0+128)
 14590                           
 14591                           ;main.c: 362: doMove();
 14592  0E9F  3187  274A  318E   	fcall	_doMove
 14593                           
 14594                           ;main.c: 363: remainingSteps++;
 14595  0EA2  3001               	movlw	1
 14596  0EA3  0021               	movlb	1	; select bank1
 14597  0EA4  07E6               	addwf	_remainingSteps^(0+128),f
 14598  0EA5  3000               	movlw	0
 14599  0EA6  3DE7               	addwfc	(_remainingSteps+1)^(0+128),f
 14600                           
 14601                           ;main.c: 364: for(j = 0; j<24; j++)
 14602  0EA7  01CA               	clrf	doRelMove@j^(0+128)
 14603  0EA8  01CB               	clrf	(doRelMove@j+1)^(0+128)
 14604  0EA9                     L29:	
 14605  0EA9  084B               	movf	(doRelMove@j+1)^(0+128),w
 14606  0EAA  3A80               	xorlw	128
 14607  0EAB  00C3               	movwf	??_doRelMove^(0+128)
 14608  0EAC  3080               	movlw	128
 14609  0EAD  0243               	subwf	??_doRelMove^(0+128),w
 14610  0EAE  1D03               	skipz
 14611  0EAF  2EB2               	goto	u8205
 14612  0EB0  3018               	movlw	24
 14613  0EB1  024A               	subwf	doRelMove@j^(0+128),w
 14614  0EB2                     u8205:	
 14615  0EB2  1803               	btfsc	3,0
 14616  0EB3  0008               	return
 14617                           
 14618                           ;main.c: 365: currentPositions_steps[j] -= (activeMask & (1<<j) > 0);
 14619  0EB4  3001               	movlw	1
 14620  0EB5  0021               	movlb	1	; select bank1
 14621  0EB6  00C3               	movwf	??_doRelMove^(0+128)
 14622  0EB7  3000               	movlw	0
 14623  0EB8  00C4               	movwf	(??_doRelMove^(0+128)+1)
 14624  0EB9  0A4A               	incf	doRelMove@j^(0+128),w
 14625  0EBA  2EBD               	goto	u8214
 14626  0EBB                     u8215:	
 14627  0EBB  35C3               	lslf	??_doRelMove^(0+128),f
 14628  0EBC  0DC4               	rlf	(??_doRelMove^(0+128)+1),f
 14629  0EBD                     u8214:	
 14630  0EBD  0B89               	decfsz	9,f
 14631  0EBE  2EBB               	goto	u8215
 14632  0EBF  0844               	movf	(??_doRelMove+1)^(0+128),w
 14633  0EC0  3A80               	xorlw	128
 14634  0EC1  00C5               	movwf	(??_doRelMove+2)^(0+128)
 14635  0EC2  3080               	movlw	128
 14636  0EC3  0245               	subwf	(??_doRelMove+2)^(0+128),w
 14637  0EC4  1D03               	skipz
 14638  0EC5  2EC8               	goto	u8225
 14639  0EC6  3001               	movlw	1
 14640  0EC7  0243               	subwf	??_doRelMove^(0+128),w
 14641  0EC8                     u8225:	
 14642  0EC8  1C03               	btfss	3,0
 14643  0EC9  2ECC               	goto	u8220
 14644  0ECA  3001               	movlw	1
 14645  0ECB  2ECD               	goto	u8230
 14646  0ECC                     u8220:	
 14647  0ECC  3000               	movlw	0
 14648  0ECD                     u8230:	
 14649  0ECD  0021               	movlb	1	; select bank1
 14650  0ECE  00C6               	movwf	(??_doRelMove+3)^(0+128)
 14651  0ECF  01C7               	clrf	((??_doRelMove+3)^(0+128)+1)
 14652  0ED0  0858               	movf	_activeMask^(0+128),w
 14653  0ED1  0546               	andwf	(??_doRelMove+3)^(0+128),w
 14654  0ED2  00C8               	movwf	(??_doRelMove+5)^(0+128)
 14655  0ED3  0859               	movf	(_activeMask+1)^(0+128),w
 14656  0ED4  0547               	andwf	(??_doRelMove+4)^(0+128),w
 14657  0ED5  00C9               	movwf	(??_doRelMove+6)^(0+128)
 14658  0ED6  354A               	lslf	doRelMove@j^(0+128),w
 14659  0ED7  3EA0               	addlw	(low (_currentPositions_steps| (0+256)))& (0+255)
 14660  0ED8  0086               	movwf	6
 14661  0ED9  3001               	movlw	1	; select bank3/4
 14662  0EDA  0087               	movwf	7
 14663  0EDB  0848               	movf	(??_doRelMove+5)^(0+128),w
 14664  0EDC  0281               	subwf	1,f
 14665  0EDD  3141               	addfsr 1,1
 14666  0EDE  0849               	movf	(??_doRelMove+6)^(0+128),w
 14667  0EDF  3B81               	subwfb	1,f
 14668  0EE0  317F               	addfsr 1,-1
 14669  0EE1  3001               	movlw	1
 14670  0EE2  07CA               	addwf	doRelMove@j^(0+128),f
 14671  0EE3  3000               	movlw	0
 14672  0EE4  3DCB               	addwfc	(doRelMove@j+1)^(0+128),f
 14673  0EE5  2EA9               	goto	L29
 14674  0EE6                     __end_of_doRelMove:	
 14675                           
 14676                           	psect	text41
 14677  00A1                     __ptext41:	
 14678 ;; *************** function _doAbsMove *****************
 14679 ;; Defined at:
 14680 ;;		line 303 in file "main.c"
 14681 ;; Parameters:    Size  Location     Type
 14682 ;;		None
 14683 ;; Auto vars:     Size  Location     Type
 14684 ;;  i               2   39[BANK1 ] int 
 14685 ;;  i               2   41[BANK1 ] int 
 14686 ;;  i               2   37[BANK1 ] int 
 14687 ;;  allThere        2   35[BANK1 ] int 
 14688 ;; Return value:  Size  Location     Type
 14689 ;;                  1    wreg      void 
 14690 ;; Registers used:
 14691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14692 ;; Tracked objects:
 14693 ;;		On entry : 0/0
 14694 ;;		On exit  : 0/0
 14695 ;;		Unchanged: 0/0
 14696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14698 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14699 ;;      Temps:          0       0       0       0       0      24       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14700 ;;      Totals:         0       0       8       0       0      24       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14701 ;;Total ram usage:       32 bytes
 14702 ;; Hardware stack levels used:    1
 14703 ;; Hardware stack levels required when called:   16
 14704 ;; This function calls:
 14705 ;;		_doMove
 14706 ;;		_printf
 14707 ;; This function is called by:
 14708 ;;		_main
 14709 ;; This function uses a non-reentrant model
 14710 ;;
 14711                           
 14712                           
 14713                           ;psect for function _doAbsMove
 14714  00A1                     _doAbsMove:	
 14715                           
 14716                           ;main.c: 306: int allThere=1;
 14717                           
 14718                           ;incstack = 0
 14719 ;; hardware stack exceeded
 14720                           ; Regs used in _doAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14721  00A1  3001               	movlw	1
 14722  00A2  0021               	movlb	1	; select bank1
 14723  00A3  00C3               	movwf	doAbsMove@allThere^(0+128)
 14724  00A4  3000               	movlw	0
 14725  00A5  00C4               	movwf	(doAbsMove@allThere^(0+128)+1)
 14726                           
 14727                           ;main.c: 307: for(int i=0;i<24;i++){
 14728  00A6  01C5               	clrf	doAbsMove@i^(0+128)
 14729  00A7  01C6               	clrf	(doAbsMove@i+1)^(0+128)
 14730  00A8  0846               	movf	(doAbsMove@i+1)^(0+128),w
 14731  00A9  3A80               	xorlw	128
 14732  00AA  0024               	movlb	4	; select bank4
 14733  00AB  00C0               	movwf	??_doAbsMove^(0+512)
 14734  00AC  3080               	movlw	128
 14735  00AD  0240               	subwf	??_doAbsMove^(0+512),w
 14736  00AE  1D03               	skipz
 14737  00AF  28B3               	goto	u8255
 14738  00B0  3018               	movlw	24
 14739  00B1  0021               	movlb	1	; select bank1
 14740  00B2  0245               	subwf	doAbsMove@i^(0+128),w
 14741  00B3                     u8255:	
 14742  00B3  1803               	btfsc	3,0
 14743  00B4  2926               	goto	l8180
 14744  00B5                     l8172:	
 14745                           
 14746                           ;main.c: 308: if((activeMask & (1 << i)) > 0)
 14747  00B5  0021               	movlb	1	; select bank1
 14748  00B6  0858               	movf	_activeMask^(0+128),w
 14749  00B7  0024               	movlb	4	; select bank4
 14750  00B8  00C0               	movwf	??_doAbsMove^(0+512)
 14751  00B9  0021               	movlb	1	; select bank1
 14752  00BA  0859               	movf	(_activeMask+1)^(0+128),w
 14753  00BB  0024               	movlb	4	; select bank4
 14754  00BC  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 14755  00BD  0021               	movlb	1	; select bank1
 14756  00BE  085A               	movf	(_activeMask+2)^(0+128),w
 14757  00BF  0024               	movlb	4	; select bank4
 14758  00C0  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 14759  00C1  0021               	movlb	1	; select bank1
 14760  00C2  085B               	movf	(_activeMask+3)^(0+128),w
 14761  00C3  0024               	movlb	4	; select bank4
 14762  00C4  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 14763  00C5  3001               	movlw	1
 14764  00C6  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 14765  00C7  3000               	movlw	0
 14766  00C8  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 14767  00C9  0021               	movlb	1	; select bank1
 14768  00CA  0A45               	incf	doAbsMove@i^(0+128),w
 14769  00CB  0024               	movlb	4	; select bank4
 14770  00CC  28CF               	goto	u8264
 14771  00CD                     u8265:	
 14772  00CD  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 14773  00CE  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 14774  00CF                     u8264:	
 14775  00CF  0B89               	decfsz	9,f
 14776  00D0  28CD               	goto	u8265
 14777  00D1  0844               	movf	(??_doAbsMove+4)^(0+512),w
 14778  00D2  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 14779  00D3  0845               	movf	(??_doAbsMove+5)^(0+512),w
 14780  00D4  00C7               	movwf	((??_doAbsMove+6)^(0+512)+1)
 14781  00D5  3000               	movlw	0
 14782  00D6  1BC7               	btfsc	((??_doAbsMove+6)^(0+512)+1),7
 14783  00D7  30FF               	movlw	255
 14784  00D8  00C8               	movwf	((??_doAbsMove+6)^(0+512)+2)
 14785  00D9  00C9               	movwf	((??_doAbsMove+6)^(0+512)+3)
 14786  00DA  0846               	movf	(??_doAbsMove+6)^(0+512),w
 14787  00DB  05C0               	andwf	??_doAbsMove^(0+512),f
 14788  00DC  0847               	movf	(??_doAbsMove+7)^(0+512),w
 14789  00DD  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 14790  00DE  0848               	movf	(??_doAbsMove+8)^(0+512),w
 14791  00DF  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 14792  00E0  0849               	movf	(??_doAbsMove+9)^(0+512),w
 14793  00E1  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 14794  00E2  1BC3               	btfsc	(??_doAbsMove^(0+512)+3),7
 14795  00E3  2914               	goto	l8176
 14796  00E4  0843               	movf	(??_doAbsMove^(0+512)+3),w
 14797  00E5  1D03               	btfss	3,2
 14798  00E6  28F1               	goto	l8174
 14799  00E7  0842               	movf	(??_doAbsMove^(0+512)+2),w
 14800  00E8  1D03               	btfss	3,2
 14801  00E9  28F1               	goto	l8174
 14802  00EA  0841               	movf	(??_doAbsMove^(0+512)+1),w
 14803  00EB  1D03               	btfss	3,2
 14804  00EC  28F1               	goto	l8174
 14805  00ED  3001               	movlw	1
 14806  00EE  0240               	subwf	??_doAbsMove^(0+512),w
 14807  00EF  1C03               	btfss	3,0
 14808  00F0  2914               	goto	l8176
 14809  00F1                     l8174:	
 14810                           
 14811                           ;main.c: 309: allThere &= (currentPositions_steps[i] == absCommand);
 14812  00F1  0021               	movlb	1	; select bank1
 14813  00F2  3545               	lslf	doAbsMove@i^(0+128),w
 14814  00F3  3EA0               	addlw	(low (_currentPositions_steps| (0+256)))& (0+255)
 14815  00F4  0086               	movwf	6
 14816  00F5  3001               	movlw	1	; select bank3/4
 14817  00F6  0087               	movwf	7
 14818  00F7  3F40               	moviw [0]fsr1
 14819  00F8  0024               	movlb	4	; select bank4
 14820  00F9  00C0               	movwf	??_doAbsMove^(0+512)
 14821  00FA  3F41               	moviw [1]fsr1
 14822  00FB  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 14823  00FC  0021               	movlb	1	; select bank1
 14824  00FD  0865               	movf	(_absCommand+1)^(0+128),w
 14825  00FE  0024               	movlb	4	; select bank4
 14826  00FF  0641               	xorwf	(??_doAbsMove+1)^(0+512),w
 14827  0100  1D03               	skipz
 14828  0101  2906               	goto	u8285
 14829  0102  0021               	movlb	1	; select bank1
 14830  0103  0864               	movf	_absCommand^(0+128),w
 14831  0104  0024               	movlb	4	; select bank4
 14832  0105  0640               	xorwf	??_doAbsMove^(0+512),w
 14833  0106                     u8285:	
 14834  0106  1D03               	btfss	3,2
 14835  0107  290A               	goto	u8280
 14836  0108  3001               	movlw	1
 14837  0109  290B               	goto	u8290
 14838  010A                     u8280:	
 14839  010A  3000               	movlw	0
 14840  010B                     u8290:	
 14841  010B  00C2               	movwf	(??_doAbsMove+2)^(0+512)
 14842  010C  01C3               	clrf	((??_doAbsMove+2)^(0+512)+1)
 14843  010D  0842               	movf	(??_doAbsMove+2)^(0+512),w
 14844  010E  0021               	movlb	1	; select bank1
 14845  010F  05C3               	andwf	doAbsMove@allThere^(0+128),f
 14846  0110  0024               	movlb	4	; select bank4
 14847  0111  0843               	movf	(??_doAbsMove+3)^(0+512),w
 14848  0112  0021               	movlb	1	; select bank1
 14849  0113  05C4               	andwf	(doAbsMove@allThere+1)^(0+128),f
 14850  0114                     l8176:	
 14851  0114  3001               	movlw	1
 14852  0115  0021               	movlb	1	; select bank1
 14853  0116  07C5               	addwf	doAbsMove@i^(0+128),f
 14854  0117  3000               	movlw	0
 14855  0118  3DC6               	addwfc	(doAbsMove@i+1)^(0+128),f
 14856  0119  0846               	movf	(doAbsMove@i+1)^(0+128),w
 14857  011A  3A80               	xorlw	128
 14858  011B  0024               	movlb	4	; select bank4
 14859  011C  00C0               	movwf	??_doAbsMove^(0+512)
 14860  011D  3080               	movlw	128
 14861  011E  0240               	subwf	??_doAbsMove^(0+512),w
 14862  011F  1D03               	skipz
 14863  0120  2924               	goto	u8305
 14864  0121  3018               	movlw	24
 14865  0122  0021               	movlb	1	; select bank1
 14866  0123  0245               	subwf	doAbsMove@i^(0+128),w
 14867  0124                     u8305:	
 14868  0124  1C03               	skipc
 14869  0125  28B5               	goto	l8172
 14870  0126                     l8180:	
 14871                           
 14872                           ;main.c: 310: }
 14873                           ;main.c: 312: if(allThere){
 14874  0126  0021               	movlb	1	; select bank1
 14875  0127  0843               	movf	doAbsMove@allThere^(0+128),w
 14876  0128  0444               	iorwf	(doAbsMove@allThere+1)^(0+128),w
 14877  0129  1903               	btfsc	3,2
 14878  012A  2945               	goto	l8194
 14879                           
 14880                           ;main.c: 313: printf("abs: all there\n");
 14881  012B  30E7               	movlw	low (STR_10| (0+32768))
 14882  012C  00A0               	movwf	printf@f^(0+128)
 14883  012D  30A8               	movlw	high (STR_10| (0+32768))
 14884  012E  00A1               	movwf	(printf@f^(0+128)+1)
 14885  012F  3186  2618         	fcall	_printf
 14886                           
 14887                           ;main.c: 314: motionType = NONE;
 14888  0131  0020               	movlb	0	; select bank0
 14889  0132  01D3               	clrf	_motionType
 14890                           
 14891                           ;main.c: 315: moveVector_ups = 0;
 14892  0133  3000               	movlw	0
 14893  0134  0021               	movlb	1	; select bank1
 14894  0135  00E3               	movwf	(_moveVector_ups+3)^(0+128)
 14895  0136  3000               	movlw	0
 14896  0137  00E2               	movwf	(_moveVector_ups+2)^(0+128)
 14897  0138  3000               	movlw	0
 14898  0139  00E1               	movwf	(_moveVector_ups+1)^(0+128)
 14899  013A  3000               	movlw	0
 14900  013B  00E0               	movwf	_moveVector_ups^(0+128)
 14901                           
 14902                           ;main.c: 316: moveVector_downs = 0;
 14903  013C  3000               	movlw	0
 14904  013D  00DF               	movwf	(_moveVector_downs+3)^(0+128)
 14905  013E  3000               	movlw	0
 14906  013F  00DE               	movwf	(_moveVector_downs+2)^(0+128)
 14907  0140  3000               	movlw	0
 14908  0141  00DD               	movwf	(_moveVector_downs+1)^(0+128)
 14909  0142  3000               	movlw	0
 14910  0143  00DC               	movwf	_moveVector_downs^(0+128)
 14911                           
 14912                           ;main.c: 318: }
 14913                           
 14914                           ;main.c: 317: return;
 14915  0144  0008               	return
 14916  0145                     l8194:	
 14917                           
 14918                           ;main.c: 319: else{
 14919                           ;main.c: 320: for(int i=0;i<24;i++){
 14920  0145  01C9               	clrf	doAbsMove@i_1546^(0+128)
 14921  0146  01CA               	clrf	(doAbsMove@i_1546+1)^(0+128)
 14922  0147  084A               	movf	(doAbsMove@i_1546+1)^(0+128),w
 14923  0148  3A80               	xorlw	128
 14924  0149  0024               	movlb	4	; select bank4
 14925  014A  00C0               	movwf	??_doAbsMove^(0+512)
 14926  014B  3080               	movlw	128
 14927  014C  0240               	subwf	??_doAbsMove^(0+512),w
 14928  014D  1D03               	skipz
 14929  014E  2952               	goto	u8325
 14930  014F  3018               	movlw	24
 14931  0150  0021               	movlb	1	; select bank1
 14932  0151  0249               	subwf	doAbsMove@i_1546^(0+128),w
 14933  0152                     u8325:	
 14934  0152  1803               	btfsc	3,0
 14935  0153  2A39               	goto	l8206
 14936  0154                     l8200:	
 14937                           
 14938                           ;main.c: 322: moveVector_ups |= (activeMask & (1 << i)) & ((currentPositions_steps[i] > 
      +                          absCommand)<<i);
 14939  0154  0021               	movlb	1	; select bank1
 14940  0155  0858               	movf	_activeMask^(0+128),w
 14941  0156  0024               	movlb	4	; select bank4
 14942  0157  00C0               	movwf	??_doAbsMove^(0+512)
 14943  0158  0021               	movlb	1	; select bank1
 14944  0159  0859               	movf	(_activeMask+1)^(0+128),w
 14945  015A  0024               	movlb	4	; select bank4
 14946  015B  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 14947  015C  0021               	movlb	1	; select bank1
 14948  015D  085A               	movf	(_activeMask+2)^(0+128),w
 14949  015E  0024               	movlb	4	; select bank4
 14950  015F  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 14951  0160  0021               	movlb	1	; select bank1
 14952  0161  085B               	movf	(_activeMask+3)^(0+128),w
 14953  0162  0024               	movlb	4	; select bank4
 14954  0163  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 14955  0164  0021               	movlb	1	; select bank1
 14956  0165  3549               	lslf	doAbsMove@i_1546^(0+128),w
 14957  0166  3EA0               	addlw	(low (_currentPositions_steps| (0+256)))& (0+255)
 14958  0167  0086               	movwf	6
 14959  0168  3001               	movlw	1	; select bank3/4
 14960  0169  0087               	movwf	7
 14961  016A  3F40               	moviw [0]fsr1
 14962  016B  0024               	movlb	4	; select bank4
 14963  016C  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 14964  016D  3F41               	moviw [1]fsr1
 14965  016E  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 14966  016F  0021               	movlb	1	; select bank1
 14967  0170  0865               	movf	(_absCommand+1)^(0+128),w
 14968  0171  3A80               	xorlw	128
 14969  0172  0024               	movlb	4	; select bank4
 14970  0173  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 14971  0174  0845               	movf	(??_doAbsMove+5)^(0+512),w
 14972  0175  3A80               	xorlw	128
 14973  0176  0246               	subwf	(??_doAbsMove+6)^(0+512),w
 14974  0177  1D03               	skipz
 14975  0178  297C               	goto	u8335
 14976  0179  0844               	movf	(??_doAbsMove+4)^(0+512),w
 14977  017A  0021               	movlb	1	; select bank1
 14978  017B  0264               	subwf	_absCommand^(0+128),w
 14979  017C                     u8335:	
 14980  017C  1803               	btfsc	3,0
 14981  017D  2980               	goto	u8330
 14982  017E  3001               	movlw	1
 14983  017F  2981               	goto	u8340
 14984  0180                     u8330:	
 14985  0180  3000               	movlw	0
 14986  0181                     u8340:	
 14987  0181  0024               	movlb	4	; select bank4
 14988  0182  00C7               	movwf	(??_doAbsMove+7)^(0+512)
 14989  0183  01C8               	clrf	((??_doAbsMove+7)^(0+512)+1)
 14990  0184  0021               	movlb	1	; select bank1
 14991  0185  0A49               	incf	doAbsMove@i_1546^(0+128),w
 14992  0186  0024               	movlb	4	; select bank4
 14993  0187  298A               	goto	u8354
 14994  0188                     u8355:	
 14995  0188  35C7               	lslf	(??_doAbsMove+7)^(0+512),f
 14996  0189  0DC8               	rlf	((??_doAbsMove+7)^(0+512)+1),f
 14997  018A                     u8354:	
 14998  018A  0B89               	decfsz	9,f
 14999  018B  2988               	goto	u8355
 15000  018C  3001               	movlw	1
 15001  018D  00C9               	movwf	(??_doAbsMove+9)^(0+512)
 15002  018E  3000               	movlw	0
 15003  018F  00CA               	movwf	((??_doAbsMove+9)^(0+512)+1)
 15004  0190  0021               	movlb	1	; select bank1
 15005  0191  0A49               	incf	doAbsMove@i_1546^(0+128),w
 15006  0192  0024               	movlb	4	; select bank4
 15007  0193  2996               	goto	u8364
 15008  0194                     u8365:	
 15009  0194  35C9               	lslf	(??_doAbsMove+9)^(0+512),f
 15010  0195  0DCA               	rlf	((??_doAbsMove+9)^(0+512)+1),f
 15011  0196                     u8364:	
 15012  0196  0B89               	decfsz	9,f
 15013  0197  2994               	goto	u8365
 15014  0198  0847               	movf	(??_doAbsMove+7)^(0+512),w
 15015  0199  0549               	andwf	(??_doAbsMove+9)^(0+512),w
 15016  019A  00CB               	movwf	(??_doAbsMove+11)^(0+512)
 15017  019B  0848               	movf	(??_doAbsMove+8)^(0+512),w
 15018  019C  054A               	andwf	(??_doAbsMove+10)^(0+512),w
 15019  019D  00CC               	movwf	(??_doAbsMove+12)^(0+512)
 15020  019E  084B               	movf	(??_doAbsMove+11)^(0+512),w
 15021  019F  00CD               	movwf	(??_doAbsMove+13)^(0+512)
 15022  01A0  084C               	movf	(??_doAbsMove+12)^(0+512),w
 15023  01A1  00CE               	movwf	((??_doAbsMove+13)^(0+512)+1)
 15024  01A2  3000               	movlw	0
 15025  01A3  1BCE               	btfsc	((??_doAbsMove+13)^(0+512)+1),7
 15026  01A4  30FF               	movlw	255
 15027  01A5  00CF               	movwf	((??_doAbsMove+13)^(0+512)+2)
 15028  01A6  00D0               	movwf	((??_doAbsMove+13)^(0+512)+3)
 15029  01A7  084D               	movf	(??_doAbsMove+13)^(0+512),w
 15030  01A8  05C0               	andwf	??_doAbsMove^(0+512),f
 15031  01A9  084E               	movf	(??_doAbsMove+14)^(0+512),w
 15032  01AA  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 15033  01AB  084F               	movf	(??_doAbsMove+15)^(0+512),w
 15034  01AC  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 15035  01AD  0850               	movf	(??_doAbsMove+16)^(0+512),w
 15036  01AE  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 15037  01AF  0840               	movf	??_doAbsMove^(0+512),w
 15038  01B0  0021               	movlb	1	; select bank1
 15039  01B1  04E0               	iorwf	_moveVector_ups^(0+128),f
 15040  01B2  0024               	movlb	4	; select bank4
 15041  01B3  0841               	movf	(??_doAbsMove+1)^(0+512),w
 15042  01B4  0021               	movlb	1	; select bank1
 15043  01B5  04E1               	iorwf	(_moveVector_ups+1)^(0+128),f
 15044  01B6  0024               	movlb	4	; select bank4
 15045  01B7  0842               	movf	(??_doAbsMove+2)^(0+512),w
 15046  01B8  0021               	movlb	1	; select bank1
 15047  01B9  04E2               	iorwf	(_moveVector_ups+2)^(0+128),f
 15048  01BA  0024               	movlb	4	; select bank4
 15049  01BB  0843               	movf	(??_doAbsMove+3)^(0+512),w
 15050  01BC  0021               	movlb	1	; select bank1
 15051  01BD  04E3               	iorwf	(_moveVector_ups+3)^(0+128),f
 15052                           
 15053                           ;main.c: 323: moveVector_downs |= (activeMask & (1 << i)) & ((currentPositions_steps[i] 
      +                          < absCommand)<<i);
 15054  01BE  0858               	movf	_activeMask^(0+128),w
 15055  01BF  0024               	movlb	4	; select bank4
 15056  01C0  00C0               	movwf	??_doAbsMove^(0+512)
 15057  01C1  0021               	movlb	1	; select bank1
 15058  01C2  0859               	movf	(_activeMask+1)^(0+128),w
 15059  01C3  0024               	movlb	4	; select bank4
 15060  01C4  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 15061  01C5  0021               	movlb	1	; select bank1
 15062  01C6  085A               	movf	(_activeMask+2)^(0+128),w
 15063  01C7  0024               	movlb	4	; select bank4
 15064  01C8  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 15065  01C9  0021               	movlb	1	; select bank1
 15066  01CA  085B               	movf	(_activeMask+3)^(0+128),w
 15067  01CB  0024               	movlb	4	; select bank4
 15068  01CC  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 15069  01CD  0021               	movlb	1	; select bank1
 15070  01CE  3549               	lslf	doAbsMove@i_1546^(0+128),w
 15071  01CF  3EA0               	addlw	(low (_currentPositions_steps| (0+256)))& (0+255)
 15072  01D0  0086               	movwf	6
 15073  01D1  3001               	movlw	1	; select bank3/4
 15074  01D2  0087               	movwf	7
 15075  01D3  3F40               	moviw [0]fsr1
 15076  01D4  0024               	movlb	4	; select bank4
 15077  01D5  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 15078  01D6  3F41               	moviw [1]fsr1
 15079  01D7  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 15080  01D8  0845               	movf	(??_doAbsMove+5)^(0+512),w
 15081  01D9  3A80               	xorlw	128
 15082  01DA  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 15083  01DB  0021               	movlb	1	; select bank1
 15084  01DC  0865               	movf	(_absCommand+1)^(0+128),w
 15085  01DD  3A80               	xorlw	128
 15086  01DE  0024               	movlb	4	; select bank4
 15087  01DF  0246               	subwf	(??_doAbsMove+6)^(0+512),w
 15088  01E0  1D03               	skipz
 15089  01E1  29E6               	goto	u8375
 15090  01E2  0021               	movlb	1	; select bank1
 15091  01E3  0864               	movf	_absCommand^(0+128),w
 15092  01E4  0024               	movlb	4	; select bank4
 15093  01E5  0244               	subwf	(??_doAbsMove+4)^(0+512),w
 15094  01E6                     u8375:	
 15095  01E6  1803               	btfsc	3,0
 15096  01E7  29EA               	goto	u8370
 15097  01E8  3001               	movlw	1
 15098  01E9  29EB               	goto	u8380
 15099  01EA                     u8370:	
 15100  01EA  3000               	movlw	0
 15101  01EB                     u8380:	
 15102  01EB  0024               	movlb	4	; select bank4
 15103  01EC  00C7               	movwf	(??_doAbsMove+7)^(0+512)
 15104  01ED  01C8               	clrf	((??_doAbsMove+7)^(0+512)+1)
 15105  01EE  0021               	movlb	1	; select bank1
 15106  01EF  0A49               	incf	doAbsMove@i_1546^(0+128),w
 15107  01F0  0024               	movlb	4	; select bank4
 15108  01F1  29F4               	goto	u8394
 15109  01F2                     u8395:	
 15110  01F2  35C7               	lslf	(??_doAbsMove+7)^(0+512),f
 15111  01F3  0DC8               	rlf	((??_doAbsMove+7)^(0+512)+1),f
 15112  01F4                     u8394:	
 15113  01F4  0B89               	decfsz	9,f
 15114  01F5  29F2               	goto	u8395
 15115  01F6  3001               	movlw	1
 15116  01F7  00C9               	movwf	(??_doAbsMove+9)^(0+512)
 15117  01F8  3000               	movlw	0
 15118  01F9  00CA               	movwf	((??_doAbsMove+9)^(0+512)+1)
 15119  01FA  0021               	movlb	1	; select bank1
 15120  01FB  0A49               	incf	doAbsMove@i_1546^(0+128),w
 15121  01FC  0024               	movlb	4	; select bank4
 15122  01FD  2A00               	goto	u8404
 15123  01FE                     u8405:	
 15124  01FE  35C9               	lslf	(??_doAbsMove+9)^(0+512),f
 15125  01FF  0DCA               	rlf	((??_doAbsMove+9)^(0+512)+1),f
 15126  0200                     u8404:	
 15127  0200  0B89               	decfsz	9,f
 15128  0201  29FE               	goto	u8405
 15129  0202  0847               	movf	(??_doAbsMove+7)^(0+512),w
 15130  0203  0549               	andwf	(??_doAbsMove+9)^(0+512),w
 15131  0204  00CB               	movwf	(??_doAbsMove+11)^(0+512)
 15132  0205  0848               	movf	(??_doAbsMove+8)^(0+512),w
 15133  0206  054A               	andwf	(??_doAbsMove+10)^(0+512),w
 15134  0207  00CC               	movwf	(??_doAbsMove+12)^(0+512)
 15135  0208  084B               	movf	(??_doAbsMove+11)^(0+512),w
 15136  0209  00CD               	movwf	(??_doAbsMove+13)^(0+512)
 15137  020A  084C               	movf	(??_doAbsMove+12)^(0+512),w
 15138  020B  00CE               	movwf	((??_doAbsMove+13)^(0+512)+1)
 15139  020C  3000               	movlw	0
 15140  020D  1BCE               	btfsc	((??_doAbsMove+13)^(0+512)+1),7
 15141  020E  30FF               	movlw	255
 15142  020F  00CF               	movwf	((??_doAbsMove+13)^(0+512)+2)
 15143  0210  00D0               	movwf	((??_doAbsMove+13)^(0+512)+3)
 15144  0211  084D               	movf	(??_doAbsMove+13)^(0+512),w
 15145  0212  05C0               	andwf	??_doAbsMove^(0+512),f
 15146  0213  084E               	movf	(??_doAbsMove+14)^(0+512),w
 15147  0214  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 15148  0215  084F               	movf	(??_doAbsMove+15)^(0+512),w
 15149  0216  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 15150  0217  0850               	movf	(??_doAbsMove+16)^(0+512),w
 15151  0218  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 15152  0219  0840               	movf	??_doAbsMove^(0+512),w
 15153  021A  0021               	movlb	1	; select bank1
 15154  021B  04DC               	iorwf	_moveVector_downs^(0+128),f
 15155  021C  0024               	movlb	4	; select bank4
 15156  021D  0841               	movf	(??_doAbsMove+1)^(0+512),w
 15157  021E  0021               	movlb	1	; select bank1
 15158  021F  04DD               	iorwf	(_moveVector_downs+1)^(0+128),f
 15159  0220  0024               	movlb	4	; select bank4
 15160  0221  0842               	movf	(??_doAbsMove+2)^(0+512),w
 15161  0222  0021               	movlb	1	; select bank1
 15162  0223  04DE               	iorwf	(_moveVector_downs+2)^(0+128),f
 15163  0224  0024               	movlb	4	; select bank4
 15164  0225  0843               	movf	(??_doAbsMove+3)^(0+512),w
 15165  0226  0021               	movlb	1	; select bank1
 15166  0227  04DF               	iorwf	(_moveVector_downs+3)^(0+128),f
 15167  0228  3001               	movlw	1
 15168  0229  07C9               	addwf	doAbsMove@i_1546^(0+128),f
 15169  022A  3000               	movlw	0
 15170  022B  3DCA               	addwfc	(doAbsMove@i_1546+1)^(0+128),f
 15171  022C  084A               	movf	(doAbsMove@i_1546+1)^(0+128),w
 15172  022D  3A80               	xorlw	128
 15173  022E  0024               	movlb	4	; select bank4
 15174  022F  00C0               	movwf	??_doAbsMove^(0+512)
 15175  0230  3080               	movlw	128
 15176  0231  0240               	subwf	??_doAbsMove^(0+512),w
 15177  0232  1D03               	skipz
 15178  0233  2A37               	goto	u8415
 15179  0234  3018               	movlw	24
 15180  0235  0021               	movlb	1	; select bank1
 15181  0236  0249               	subwf	doAbsMove@i_1546^(0+128),w
 15182  0237                     u8415:	
 15183  0237  1C03               	skipc
 15184  0238  2954               	goto	l8200
 15185  0239                     l8206:	
 15186                           
 15187                           ;main.c: 325: }
 15188                           ;main.c: 326: doMove();
 15189  0239  3187  274A  3180   	fcall	_doMove
 15190                           
 15191                           ;main.c: 328: for(int i=0;i<24;i++)
 15192  023C  0021               	movlb	1	; select bank1
 15193  023D  01C7               	clrf	doAbsMove@i_1548^(0+128)
 15194  023E  01C8               	clrf	(doAbsMove@i_1548+1)^(0+128)
 15195  023F                     L30:	
 15196  023F  0848               	movf	(doAbsMove@i_1548+1)^(0+128),w
 15197  0240  3A80               	xorlw	128
 15198  0241  0024               	movlb	4	; select bank4
 15199  0242  00C0               	movwf	??_doAbsMove^(0+512)
 15200  0243  3080               	movlw	128
 15201  0244  0240               	subwf	??_doAbsMove^(0+512),w
 15202  0245  1D03               	skipz
 15203  0246  2A4A               	goto	u8425
 15204  0247  3018               	movlw	24
 15205  0248  0021               	movlb	1	; select bank1
 15206  0249  0247               	subwf	doAbsMove@i_1548^(0+128),w
 15207  024A                     u8425:	
 15208  024A  1803               	btfsc	3,0
 15209  024B  0008               	return
 15210                           
 15211                           ;main.c: 329: currentPositions_steps[i] += ((moveVector_downs & (1 << i)) > 0) - ((moveV
      +                          ector_ups & (1 << i)) > 0);
 15212  024C  0021               	movlb	1	; select bank1
 15213  024D  0860               	movf	_moveVector_ups^(0+128),w
 15214  024E  0024               	movlb	4	; select bank4
 15215  024F  00C0               	movwf	??_doAbsMove^(0+512)
 15216  0250  0021               	movlb	1	; select bank1
 15217  0251  0861               	movf	(_moveVector_ups+1)^(0+128),w
 15218  0252  0024               	movlb	4	; select bank4
 15219  0253  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 15220  0254  0021               	movlb	1	; select bank1
 15221  0255  0862               	movf	(_moveVector_ups+2)^(0+128),w
 15222  0256  0024               	movlb	4	; select bank4
 15223  0257  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 15224  0258  0021               	movlb	1	; select bank1
 15225  0259  0863               	movf	(_moveVector_ups+3)^(0+128),w
 15226  025A  0024               	movlb	4	; select bank4
 15227  025B  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 15228  025C  3001               	movlw	1
 15229  025D  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 15230  025E  3000               	movlw	0
 15231  025F  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 15232  0260  0021               	movlb	1	; select bank1
 15233  0261  0A47               	incf	doAbsMove@i_1548^(0+128),w
 15234  0262  0024               	movlb	4	; select bank4
 15235  0263  2A66               	goto	u8434
 15236  0264                     u8435:	
 15237  0264  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 15238  0265  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 15239  0266                     u8434:	
 15240  0266  0B89               	decfsz	9,f
 15241  0267  2A64               	goto	u8435
 15242  0268  0844               	movf	(??_doAbsMove+4)^(0+512),w
 15243  0269  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 15244  026A  0845               	movf	(??_doAbsMove+5)^(0+512),w
 15245  026B  00C7               	movwf	((??_doAbsMove+6)^(0+512)+1)
 15246  026C  3000               	movlw	0
 15247  026D  1BC7               	btfsc	((??_doAbsMove+6)^(0+512)+1),7
 15248  026E  30FF               	movlw	255
 15249  026F  00C8               	movwf	((??_doAbsMove+6)^(0+512)+2)
 15250  0270  00C9               	movwf	((??_doAbsMove+6)^(0+512)+3)
 15251  0271  0846               	movf	(??_doAbsMove+6)^(0+512),w
 15252  0272  05C0               	andwf	??_doAbsMove^(0+512),f
 15253  0273  0847               	movf	(??_doAbsMove+7)^(0+512),w
 15254  0274  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 15255  0275  0848               	movf	(??_doAbsMove+8)^(0+512),w
 15256  0276  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 15257  0277  0849               	movf	(??_doAbsMove+9)^(0+512),w
 15258  0278  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 15259  0279  1BC3               	btfsc	(??_doAbsMove^(0+512)+3),7
 15260  027A  2A8A               	goto	u8440
 15261  027B  0843               	movf	(??_doAbsMove^(0+512)+3),w
 15262  027C  1D03               	btfss	3,2
 15263  027D  2A88               	goto	u8441
 15264  027E  0842               	movf	(??_doAbsMove^(0+512)+2),w
 15265  027F  1D03               	btfss	3,2
 15266  0280  2A88               	goto	u8441
 15267  0281  0841               	movf	(??_doAbsMove^(0+512)+1),w
 15268  0282  1D03               	btfss	3,2
 15269  0283  2A88               	goto	u8441
 15270  0284  3001               	movlw	1
 15271  0285  0240               	subwf	??_doAbsMove^(0+512),w
 15272  0286  1C03               	btfss	3,0
 15273  0287  2A8A               	goto	u8440
 15274  0288                     u8441:	
 15275  0288  3001               	movlw	1
 15276  0289  2A8B               	goto	u8450
 15277  028A                     u8440:	
 15278  028A  3000               	movlw	0
 15279  028B                     u8450:	
 15280  028B  00CA               	movwf	(??_doAbsMove+10)^(0+512)
 15281  028C  01CB               	clrf	((??_doAbsMove+10)^(0+512)+1)
 15282  028D  09CA               	comf	(??_doAbsMove+10)^(0+512),f
 15283  028E  09CB               	comf	((??_doAbsMove+10)^(0+512)+1),f
 15284  028F  0ACA               	incf	(??_doAbsMove+10)^(0+512),f
 15285  0290  1903               	skipnz
 15286  0291  0ACB               	incf	((??_doAbsMove+10)^(0+512)+1),f
 15287  0292  0021               	movlb	1	; select bank1
 15288  0293  085C               	movf	_moveVector_downs^(0+128),w
 15289  0294  0024               	movlb	4	; select bank4
 15290  0295  00CC               	movwf	(??_doAbsMove+12)^(0+512)
 15291  0296  0021               	movlb	1	; select bank1
 15292  0297  085D               	movf	(_moveVector_downs+1)^(0+128),w
 15293  0298  0024               	movlb	4	; select bank4
 15294  0299  00CD               	movwf	((??_doAbsMove+12)^(0+512)+1)
 15295  029A  0021               	movlb	1	; select bank1
 15296  029B  085E               	movf	(_moveVector_downs+2)^(0+128),w
 15297  029C  0024               	movlb	4	; select bank4
 15298  029D  00CE               	movwf	((??_doAbsMove+12)^(0+512)+2)
 15299  029E  0021               	movlb	1	; select bank1
 15300  029F  085F               	movf	(_moveVector_downs+3)^(0+128),w
 15301  02A0  0024               	movlb	4	; select bank4
 15302  02A1  00CF               	movwf	((??_doAbsMove+12)^(0+512)+3)
 15303  02A2  3001               	movlw	1
 15304  02A3  00D0               	movwf	(??_doAbsMove+16)^(0+512)
 15305  02A4  3000               	movlw	0
 15306  02A5  00D1               	movwf	((??_doAbsMove+16)^(0+512)+1)
 15307  02A6  0021               	movlb	1	; select bank1
 15308  02A7  0A47               	incf	doAbsMove@i_1548^(0+128),w
 15309  02A8  0024               	movlb	4	; select bank4
 15310  02A9  2AAC               	goto	u8464
 15311  02AA                     u8465:	
 15312  02AA  35D0               	lslf	(??_doAbsMove+16)^(0+512),f
 15313  02AB  0DD1               	rlf	((??_doAbsMove+16)^(0+512)+1),f
 15314  02AC                     u8464:	
 15315  02AC  0B89               	decfsz	9,f
 15316  02AD  2AAA               	goto	u8465
 15317  02AE  0850               	movf	(??_doAbsMove+16)^(0+512),w
 15318  02AF  00D2               	movwf	(??_doAbsMove+18)^(0+512)
 15319  02B0  0851               	movf	(??_doAbsMove+17)^(0+512),w
 15320  02B1  00D3               	movwf	((??_doAbsMove+18)^(0+512)+1)
 15321  02B2  3000               	movlw	0
 15322  02B3  1BD3               	btfsc	((??_doAbsMove+18)^(0+512)+1),7
 15323  02B4  30FF               	movlw	255
 15324  02B5  00D4               	movwf	((??_doAbsMove+18)^(0+512)+2)
 15325  02B6  00D5               	movwf	((??_doAbsMove+18)^(0+512)+3)
 15326  02B7  0852               	movf	(??_doAbsMove+18)^(0+512),w
 15327  02B8  05CC               	andwf	(??_doAbsMove+12)^(0+512),f
 15328  02B9  0853               	movf	(??_doAbsMove+19)^(0+512),w
 15329  02BA  05CD               	andwf	((??_doAbsMove+12)^(0+512)+1),f
 15330  02BB  0854               	movf	(??_doAbsMove+20)^(0+512),w
 15331  02BC  05CE               	andwf	((??_doAbsMove+12)^(0+512)+2),f
 15332  02BD  0855               	movf	(??_doAbsMove+21)^(0+512),w
 15333  02BE  05CF               	andwf	((??_doAbsMove+12)^(0+512)+3),f
 15334  02BF  1BCF               	btfsc	((??_doAbsMove+12)^(0+512)+3),7
 15335  02C0  2AD0               	goto	u8470
 15336  02C1  084F               	movf	((??_doAbsMove+12)^(0+512)+3),w
 15337  02C2  1D03               	btfss	3,2
 15338  02C3  2ACE               	goto	u8471
 15339  02C4  084E               	movf	((??_doAbsMove+12)^(0+512)+2),w
 15340  02C5  1D03               	btfss	3,2
 15341  02C6  2ACE               	goto	u8471
 15342  02C7  084D               	movf	((??_doAbsMove+12)^(0+512)+1),w
 15343  02C8  1D03               	btfss	3,2
 15344  02C9  2ACE               	goto	u8471
 15345  02CA  3001               	movlw	1
 15346  02CB  024C               	subwf	(??_doAbsMove+12)^(0+512),w
 15347  02CC  1C03               	btfss	3,0
 15348  02CD  2AD0               	goto	u8470
 15349  02CE                     u8471:	
 15350  02CE  3001               	movlw	1
 15351  02CF  2AD1               	goto	u8480
 15352  02D0                     u8470:	
 15353  02D0  3000               	movlw	0
 15354  02D1                     u8480:	
 15355  02D1  074A               	addwf	(??_doAbsMove+10)^(0+512),w
 15356  02D2  00D6               	movwf	(??_doAbsMove+22)^(0+512)
 15357  02D3  084B               	movf	(??_doAbsMove+11)^(0+512),w
 15358  02D4  1803               	skipnc
 15359  02D5  0A4B               	incf	(??_doAbsMove+11)^(0+512),w
 15360  02D6  00D7               	movwf	((??_doAbsMove+22)^(0+512)+1)
 15361  02D7  0021               	movlb	1	; select bank1
 15362  02D8  3547               	lslf	doAbsMove@i_1548^(0+128),w
 15363  02D9  3EA0               	addlw	(low (_currentPositions_steps| (0+256)))& (0+255)
 15364  02DA  0086               	movwf	6
 15365  02DB  3001               	movlw	1	; select bank3/4
 15366  02DC  0087               	movwf	7
 15367  02DD  0024               	movlb	4	; select bank4
 15368  02DE  0856               	movf	(??_doAbsMove+22)^(0+512),w
 15369  02DF  0781               	addwf	1,f
 15370  02E0  3141               	addfsr 1,1
 15371  02E1  0857               	movf	(??_doAbsMove+23)^(0+512),w
 15372  02E2  3D81               	addwfc	1,f
 15373  02E3  317F               	addfsr 1,-1
 15374  02E4  3001               	movlw	1
 15375  02E5  0021               	movlb	1	; select bank1
 15376  02E6  07C7               	addwf	doAbsMove@i_1548^(0+128),f
 15377  02E7  3000               	movlw	0
 15378  02E8  3DC8               	addwfc	(doAbsMove@i_1548+1)^(0+128),f
 15379  02E9  2A3F               	goto	L30
 15380  02EA                     __end_of_doAbsMove:	
 15381                           
 15382                           	psect	text42
 15383  074A                     __ptext42:	
 15384 ;; *************** function _doMove *****************
 15385 ;; Defined at:
 15386 ;;		line 233 in file "main.c"
 15387 ;; Parameters:    Size  Location     Type
 15388 ;;		None
 15389 ;; Auto vars:     Size  Location     Type
 15390 ;;		None
 15391 ;; Return value:  Size  Location     Type
 15392 ;;                  1    wreg      void 
 15393 ;; Registers used:
 15394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15395 ;; Tracked objects:
 15396 ;;		On entry : 0/0
 15397 ;;		On exit  : 0/0
 15398 ;;		Unchanged: 0/0
 15399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15402 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15403 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15404 ;;Total ram usage:        4 bytes
 15405 ;; Hardware stack levels used:    1
 15406 ;; Hardware stack levels required when called:   15
 15407 ;; This function calls:
 15408 ;;		_LEDsOn
 15409 ;;		_TMR0_StartTimer
 15410 ;;		_TMR2_StartTimer
 15411 ;;		___awtoft
 15412 ;;		___ftmul
 15413 ;;		___fttol
 15414 ;;		_calcHeaterPins
 15415 ;;		_drv_write_DC
 15416 ;;		_printf
 15417 ;; This function is called by:
 15418 ;;		_doAbsMove
 15419 ;;		_doRelMove
 15420 ;; This function uses a non-reentrant model
 15421 ;;
 15422                           
 15423                           
 15424                           ;psect for function _doMove
 15425  074A                     _doMove:	
 15426                           
 15427                           ;main.c: 234: printf("doMove\n");
 15428                           
 15429                           ;incstack = 0
 15430 ;; hardware stack exceeded
 15431                           ; Regs used in _doMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15432  074A  30DA               	movlw	low (STR_6| (0+32768))
 15433  074B  0021               	movlb	1	; select bank1
 15434  074C  00A0               	movwf	printf@f^(0+128)
 15435  074D  30A9               	movlw	high (STR_6| (0+32768))
 15436  074E  00A1               	movwf	(printf@f^(0+128)+1)
 15437  074F  3186  2618  3187   	fcall	_printf
 15438                           
 15439                           ;main.c: 236: calcHeaterPins();
 15440  0752  3188  20CD  3187   	fcall	_calcHeaterPins
 15441                           
 15442                           ;main.c: 237: do { LATCbits.LATC1 = 1; } while(0);
 15443  0755  0022               	movlb	2	; select bank2
 15444  0756  148E               	bsf	14,1	;volatile
 15445                           
 15446                           ;main.c: 238: LEDsOn(first_top, 1);
 15447  0757  085D               	movf	(_first_top+3)^(0+256),w
 15448  0758  0020               	movlb	0	; select bank0
 15449  0759  00C7               	movwf	LEDsOn@LEDpins+3
 15450  075A  0022               	movlb	2	; select bank2
 15451  075B  085C               	movf	(_first_top+2)^(0+256),w
 15452  075C  0020               	movlb	0	; select bank0
 15453  075D  00C6               	movwf	LEDsOn@LEDpins+2
 15454  075E  0022               	movlb	2	; select bank2
 15455  075F  085B               	movf	(_first_top+1)^(0+256),w
 15456  0760  0020               	movlb	0	; select bank0
 15457  0761  00C5               	movwf	LEDsOn@LEDpins+1
 15458  0762  0022               	movlb	2	; select bank2
 15459  0763  085A               	movf	_first_top^(0+256),w
 15460  0764  0020               	movlb	0	; select bank0
 15461  0765  00C4               	movwf	LEDsOn@LEDpins
 15462  0766  3001               	movlw	1
 15463  0767  00C8               	movwf	LEDsOn@topOrBottom
 15464  0768  3000               	movlw	0
 15465  0769  00C9               	movwf	LEDsOn@topOrBottom+1
 15466  076A  3198  2080  3187   	fcall	_LEDsOn
 15467                           
 15468                           ;main.c: 239: LEDsOn(first_bottom,2);
 15469  076D  0022               	movlb	2	; select bank2
 15470  076E  0861               	movf	(_first_bottom+3)^(0+256),w
 15471  076F  0020               	movlb	0	; select bank0
 15472  0770  00C7               	movwf	LEDsOn@LEDpins+3
 15473  0771  0022               	movlb	2	; select bank2
 15474  0772  0860               	movf	(_first_bottom+2)^(0+256),w
 15475  0773  0020               	movlb	0	; select bank0
 15476  0774  00C6               	movwf	LEDsOn@LEDpins+2
 15477  0775  0022               	movlb	2	; select bank2
 15478  0776  085F               	movf	(_first_bottom+1)^(0+256),w
 15479  0777  0020               	movlb	0	; select bank0
 15480  0778  00C5               	movwf	LEDsOn@LEDpins+1
 15481  0779  0022               	movlb	2	; select bank2
 15482  077A  085E               	movf	_first_bottom^(0+256),w
 15483  077B  0020               	movlb	0	; select bank0
 15484  077C  00C4               	movwf	LEDsOn@LEDpins
 15485  077D  3002               	movlw	2
 15486  077E  00C8               	movwf	LEDsOn@topOrBottom
 15487  077F  3000               	movlw	0
 15488  0780  00C9               	movwf	LEDsOn@topOrBottom+1
 15489  0781  3198  2080  3187   	fcall	_LEDsOn
 15490                           
 15491                           ;main.c: 240: do { LATCbits.LATC1 = 0; } while(0);
 15492  0784  0022               	movlb	2	; select bank2
 15493  0785  108E               	bcf	14,1	;volatile
 15494                           
 15495                           ;main.c: 241: _delay((unsigned long)((heater_pre_time_ms)*(1000000/4000.0)));
 15496  0786  0020               	movlb	0	; select bank0
 15497  0787  085D               	movf	_heater_pre_time_ms+1,w
 15498  0788  00BA               	movwf	___awtoft@c+1
 15499  0789  085C               	movf	_heater_pre_time_ms,w
 15500  078A  00B9               	movwf	___awtoft@c
 15501  078B  3198  20A1  3187   	fcall	___awtoft
 15502  078E  0020               	movlb	0	; select bank0
 15503  078F  0839               	movf	?___awtoft,w
 15504  0790  00C2               	movwf	___ftmul@f2
 15505  0791  083A               	movf	?___awtoft+1,w
 15506  0792  00C3               	movwf	___ftmul@f2+1
 15507  0793  083B               	movf	?___awtoft+2,w
 15508  0794  00C4               	movwf	___ftmul@f2+2
 15509  0795  3000               	movlw	0
 15510  0796  00BF               	movwf	___ftmul@f1
 15511  0797  307A               	movlw	122
 15512  0798  00C0               	movwf	___ftmul@f1+1
 15513  0799  3043               	movlw	67
 15514  079A  00C1               	movwf	___ftmul@f1+2
 15515  079B  318D  2523  3187   	fcall	___ftmul
 15516  079E  0020               	movlb	0	; select bank0
 15517  079F  083F               	movf	?___ftmul,w
 15518  07A0  0021               	movlb	1	; select bank1
 15519  07A1  00AF               	movwf	___fttol@f1^(0+128)
 15520  07A2  0020               	movlb	0	; select bank0
 15521  07A3  0840               	movf	?___ftmul+1,w
 15522  07A4  0021               	movlb	1	; select bank1
 15523  07A5  00B0               	movwf	(___fttol@f1+1)^(0+128)
 15524  07A6  0020               	movlb	0	; select bank0
 15525  07A7  0841               	movf	?___ftmul+2,w
 15526  07A8  0021               	movlb	1	; select bank1
 15527  07A9  00B1               	movwf	(___fttol@f1+2)^(0+128)
 15528  07AA  318A  223C  3187   	fcall	___fttol
 15529  07AD  0021               	movlb	1	; select bank1
 15530  07AE  082F               	movf	?___fttol^(0+128),w
 15531  07AF  00BF               	movwf	??_doMove^(0+128)
 15532  07B0  0830               	movf	(?___fttol+1)^(0+128),w
 15533  07B1  00C0               	movwf	(??_doMove^(0+128)+1)
 15534  07B2  0831               	movf	(?___fttol+2)^(0+128),w
 15535  07B3  00C1               	movwf	(??_doMove^(0+128)+2)
 15536  07B4  0832               	movf	(?___fttol+3)^(0+128),w
 15537  07B5  00C2               	movwf	(??_doMove^(0+128)+3)
 15538                           
 15539                           ;main.c: 242: TMR2_StartTimer();
 15540  07B6  31A4  248F  3187   	fcall	_TMR2_StartTimer
 15541                           
 15542                           ;main.c: 243: TMR0_StartTimer();
 15543  07B9  31A4  248C  3187   	fcall	_TMR0_StartTimer
 15544                           
 15545                           ;main.c: 245: drv_write_DC(drv_peak_val, piezo_on_time_ms);
 15546  07BC  0021               	movlb	1	; select bank1
 15547  07BD  086F               	movf	(_drv_peak_val+1)^(0+128),w
 15548  07BE  00B9               	movwf	(drv_write_DC@val+1)^(0+128)
 15549  07BF  086E               	movf	_drv_peak_val^(0+128),w
 15550  07C0  00B8               	movwf	drv_write_DC@val^(0+128)
 15551  07C1  0020               	movlb	0	; select bank0
 15552  07C2  0859               	movf	_piezo_on_time_ms+1,w
 15553  07C3  0021               	movlb	1	; select bank1
 15554  07C4  00BB               	movwf	(drv_write_DC@duration_ms+1)^(0+128)
 15555  07C5  0020               	movlb	0	; select bank0
 15556  07C6  0858               	movf	_piezo_on_time_ms,w
 15557  07C7  0021               	movlb	1	; select bank1
 15558  07C8  00BA               	movwf	drv_write_DC@duration_ms^(0+128)
 15559  07C9  319E  265B  3187   	fcall	_drv_write_DC
 15560                           
 15561                           ;main.c: 247: _delay((unsigned long)((heater_post_time_ms)*(1000000/4000.0)));
 15562  07CC  0020               	movlb	0	; select bank0
 15563  07CD  085B               	movf	_heater_post_time_ms+1,w
 15564  07CE  00BA               	movwf	___awtoft@c+1
 15565  07CF  085A               	movf	_heater_post_time_ms,w
 15566  07D0  00B9               	movwf	___awtoft@c
 15567  07D1  3198  20A1  3187   	fcall	___awtoft
 15568  07D4  0020               	movlb	0	; select bank0
 15569  07D5  0839               	movf	?___awtoft,w
 15570  07D6  00C2               	movwf	___ftmul@f2
 15571  07D7  083A               	movf	?___awtoft+1,w
 15572  07D8  00C3               	movwf	___ftmul@f2+1
 15573  07D9  083B               	movf	?___awtoft+2,w
 15574  07DA  00C4               	movwf	___ftmul@f2+2
 15575  07DB  3000               	movlw	0
 15576  07DC  00BF               	movwf	___ftmul@f1
 15577  07DD  307A               	movlw	122
 15578  07DE  00C0               	movwf	___ftmul@f1+1
 15579  07DF  3043               	movlw	67
 15580  07E0  00C1               	movwf	___ftmul@f1+2
 15581  07E1  318D  2523  3187   	fcall	___ftmul
 15582  07E4  0020               	movlb	0	; select bank0
 15583  07E5  083F               	movf	?___ftmul,w
 15584  07E6  0021               	movlb	1	; select bank1
 15585  07E7  00AF               	movwf	___fttol@f1^(0+128)
 15586  07E8  0020               	movlb	0	; select bank0
 15587  07E9  0840               	movf	?___ftmul+1,w
 15588  07EA  0021               	movlb	1	; select bank1
 15589  07EB  00B0               	movwf	(___fttol@f1+1)^(0+128)
 15590  07EC  0020               	movlb	0	; select bank0
 15591  07ED  0841               	movf	?___ftmul+2,w
 15592  07EE  0021               	movlb	1	; select bank1
 15593  07EF  00B1               	movwf	(___fttol@f1+2)^(0+128)
 15594  07F0  318A  223C         	fcall	___fttol
 15595  07F2  0021               	movlb	1	; select bank1
 15596  07F3  082F               	movf	?___fttol^(0+128),w
 15597  07F4  00BF               	movwf	??_doMove^(0+128)
 15598  07F5  0830               	movf	(?___fttol+1)^(0+128),w
 15599  07F6  00C0               	movwf	(??_doMove^(0+128)+1)
 15600  07F7  0831               	movf	(?___fttol+2)^(0+128),w
 15601  07F8  00C1               	movwf	(??_doMove^(0+128)+2)
 15602  07F9  0832               	movf	(?___fttol+3)^(0+128),w
 15603  07FA  00C2               	movwf	(??_doMove^(0+128)+3)
 15604                           
 15605                           ;main.c: 249: do { LATCbits.LATC1 = 1; } while(0);
 15606  07FB  0022               	movlb	2	; select bank2
 15607  07FC  148E               	bsf	14,1	;volatile
 15608  07FD  0008               	return
 15609  07FE                     __end_of_doMove:	
 15610                           
 15611                           	psect	text43
 15612  1E5B                     __ptext43:	
 15613 ;; *************** function _drv_write_DC *****************
 15614 ;; Defined at:
 15615 ;;		line 102 in file "drv2665.c"
 15616 ;; Parameters:    Size  Location     Type
 15617 ;;  val             2   24[BANK1 ] int 
 15618 ;;  duration_ms     2   26[BANK1 ] int 
 15619 ;; Auto vars:     Size  Location     Type
 15620 ;;  i               2   29[BANK1 ] int 
 15621 ;; Return value:  Size  Location     Type
 15622 ;;                  1    wreg      void 
 15623 ;; Registers used:
 15624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15625 ;; Tracked objects:
 15626 ;;		On entry : 0/0
 15627 ;;		On exit  : 0/0
 15628 ;;		Unchanged: 0/0
 15629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15630 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15631 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15632 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15633 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15634 ;;Total ram usage:        7 bytes
 15635 ;; Hardware stack levels used:    1
 15636 ;; Hardware stack levels required when called:   14
 15637 ;; This function calls:
 15638 ;;		___awdiv
 15639 ;;		_drv_write
 15640 ;;		_fifo_check
 15641 ;;		_printf
 15642 ;; This function is called by:
 15643 ;;		_doMove
 15644 ;; This function uses a non-reentrant model
 15645 ;;
 15646                           
 15647                           
 15648                           ;psect for function _drv_write_DC
 15649  1E5B                     _drv_write_DC:	
 15650                           
 15651                           ;drv2665.c: 104: drv_write(0x0b, 0x00);
 15652                           
 15653                           ;incstack = 0
 15654 ;; hardware stack exceeded
 15655                           ; Regs used in _drv_write_DC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15656  1E5B  0020               	movlb	0	; select bank0
 15657  1E5C  01C9               	clrf	drv_write@data
 15658  1E5D  300B               	movlw	11
 15659  1E5E  3199  212E  319E   	fcall	_drv_write
 15660                           
 15661                           ;drv2665.c: 105: for(int i=0;i<duration_ms/5; i++){
 15662  1E61  0021               	movlb	1	; select bank1
 15663  1E62  01BD               	clrf	drv_write_DC@i^(0+128)
 15664  1E63  01BE               	clrf	(drv_write_DC@i+1)^(0+128)
 15665  1E64                     l7432:	
 15666  1E64  3005               	movlw	5
 15667  1E65  0020               	movlb	0	; select bank0
 15668  1E66  00B1               	movwf	___awdiv@divisor
 15669  1E67  3000               	movlw	0
 15670  1E68  00B2               	movwf	___awdiv@divisor+1
 15671  1E69  0021               	movlb	1	; select bank1
 15672  1E6A  083B               	movf	(drv_write_DC@duration_ms+1)^(0+128),w
 15673  1E6B  0020               	movlb	0	; select bank0
 15674  1E6C  00B4               	movwf	___awdiv@dividend+1
 15675  1E6D  0021               	movlb	1	; select bank1
 15676  1E6E  083A               	movf	drv_write_DC@duration_ms^(0+128),w
 15677  1E6F  0020               	movlb	0	; select bank0
 15678  1E70  00B3               	movwf	___awdiv@dividend
 15679  1E71  319E  26AB  319E   	fcall	___awdiv
 15680  1E74  0021               	movlb	1	; select bank1
 15681  1E75  083E               	movf	(drv_write_DC@i+1)^(0+128),w
 15682  1E76  3A80               	xorlw	128
 15683  1E77  00BC               	movwf	??_drv_write_DC^(0+128)
 15684  1E78  0020               	movlb	0	; select bank0
 15685  1E79  0832               	movf	?___awdiv+1,w
 15686  1E7A  3A80               	xorlw	128
 15687  1E7B  0021               	movlb	1	; select bank1
 15688  1E7C  023C               	subwf	??_drv_write_DC^(0+128),w
 15689  1E7D  1D03               	skipz
 15690  1E7E  2E83               	goto	u7355
 15691  1E7F  0020               	movlb	0	; select bank0
 15692  1E80  0831               	movf	?___awdiv,w
 15693  1E81  0021               	movlb	1	; select bank1
 15694  1E82  023D               	subwf	drv_write_DC@i^(0+128),w
 15695  1E83                     u7355:	
 15696  1E83  1803               	btfsc	3,0
 15697  1E84  2E98               	goto	l7434
 15698                           
 15699                           ;drv2665.c: 106: drv_write(0x0b, val);
 15700  1E85  0021               	movlb	1	; select bank1
 15701  1E86  0838               	movf	drv_write_DC@val^(0+128),w
 15702  1E87  00BC               	movwf	??_drv_write_DC^(0+128)
 15703  1E88  083C               	movf	??_drv_write_DC^(0+128),w
 15704  1E89  0020               	movlb	0	; select bank0
 15705  1E8A  00C9               	movwf	drv_write@data
 15706  1E8B  300B               	movlw	11
 15707  1E8C  3199  212E  319E   	fcall	_drv_write
 15708                           
 15709                           ;drv2665.c: 107: _delay((unsigned long)((20)*(1000000/4000000.0)));
 15710  1E8F  3200               	nop2	;2 cycle nop
 15711  1E90  3200               	nop2	;2 cycle nop
 15712  1E91  0000               	nop
 15713  1E92  3001               	movlw	1
 15714  1E93  0021               	movlb	1	; select bank1
 15715  1E94  07BD               	addwf	drv_write_DC@i^(0+128),f
 15716  1E95  3000               	movlw	0
 15717  1E96  3DBE               	addwfc	(drv_write_DC@i+1)^(0+128),f
 15718  1E97  2E64               	goto	l7432
 15719  1E98                     l7434:	
 15720                           
 15721                           ;drv2665.c: 109: }
 15722                           ;drv2665.c: 112: if(!fifo_check()) printf("fifo not ready!\n");
 15723  1E98  31A6  2658  319E   	fcall	_fifo_check
 15724  1E9B  1803               	btfsc	3,0
 15725  1E9C  2EA5               	goto	l1244
 15726  1E9D  30C6               	movlw	low (STR_54| (0+32768))
 15727  1E9E  0021               	movlb	1	; select bank1
 15728  1E9F  00A0               	movwf	printf@f^(0+128)
 15729  1EA0  30A8               	movlw	high (STR_54| (0+32768))
 15730  1EA1  00A1               	movwf	(printf@f^(0+128)+1)
 15731  1EA2  3186  2618  319E   	fcall	_printf
 15732  1EA5                     l1244:	
 15733                           
 15734                           ;drv2665.c: 114: drv_write(0x0b, 0x00);
 15735  1EA5  0020               	movlb	0	; select bank0
 15736  1EA6  01C9               	clrf	drv_write@data
 15737  1EA7  300B               	movlw	11
 15738  1EA8  3199  212E         	fcall	_drv_write
 15739  1EAA  0008               	return
 15740  1EAB                     __end_of_drv_write_DC:	
 15741                           
 15742                           	psect	text44
 15743  2658                     __ptext44:	
 15744 ;; *************** function _fifo_check *****************
 15745 ;; Defined at:
 15746 ;;		line 120 in file "drv2665.c"
 15747 ;; Parameters:    Size  Location     Type
 15748 ;;		None
 15749 ;; Auto vars:     Size  Location     Type
 15750 ;;  reply           1   23[BANK1 ] unsigned char 
 15751 ;; Return value:  Size  Location     Type
 15752 ;;		None               void
 15753 ;; Registers used:
 15754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15755 ;; Tracked objects:
 15756 ;;		On entry : 0/0
 15757 ;;		On exit  : 0/0
 15758 ;;		Unchanged: 0/0
 15759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15761 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15762 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15763 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15764 ;;Total ram usage:        2 bytes
 15765 ;; Hardware stack levels used:    1
 15766 ;; Hardware stack levels required when called:   13
 15767 ;; This function calls:
 15768 ;;		_drv_read
 15769 ;; This function is called by:
 15770 ;;		_drv_write_DC
 15771 ;; This function uses a non-reentrant model
 15772 ;;
 15773                           
 15774                           
 15775                           ;psect for function _fifo_check
 15776  2658                     _fifo_check:	
 15777                           
 15778                           ;drv2665.c: 122: uint8_t reply;
 15779                           ;drv2665.c: 123: reply = drv_read(0x00);
 15780                           
 15781                           ;incstack = 0
 15782 ;; hardware stack exceeded
 15783                           ; Regs used in _fifo_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15784  2658  3000               	movlw	0
 15785  2659  319C  249C  31A6   	fcall	_drv_read
 15786  265C  0021               	movlb	1	; select bank1
 15787  265D  0835               	movf	?_drv_read^(0+128),w
 15788  265E  0020               	movlb	0	; select bank0
 15789  265F  00CD               	movwf	??_fifo_check
 15790  2660  084D               	movf	??_fifo_check,w
 15791  2661  0021               	movlb	1	; select bank1
 15792  2662  00B7               	movwf	fifo_check@reply^(0+128)
 15793                           
 15794                           ;drv2665.c: 125: return !(reply & 0x01);
 15795  2663  1C37               	btfss	fifo_check@reply^(0+128),0
 15796  2664  2E67               	goto	l7330
 15797  2665  1003               	clrc
 15798  2666  0008               	return
 15799  2667                     l7330:	
 15800  2667  1403               	setc
 15801  2668  0008               	return
 15802  2669                     __end_of_fifo_check:	
 15803                           
 15804                           	psect	text45
 15805  1C9C                     __ptext45:	
 15806 ;; *************** function _drv_read *****************
 15807 ;; Defined at:
 15808 ;;		line 80 in file "drv2665.c"
 15809 ;; Parameters:    Size  Location     Type
 15810 ;;  reg             1    wreg     unsigned char 
 15811 ;; Auto vars:     Size  Location     Type
 15812 ;;  reg             1   43[BANK0 ] unsigned char 
 15813 ;;  buff            1   44[BANK0 ] unsigned char 
 15814 ;; Return value:  Size  Location     Type
 15815 ;;                  2   21[BANK1 ] int 
 15816 ;; Registers used:
 15817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15818 ;; Tracked objects:
 15819 ;;		On entry : 0/0
 15820 ;;		On exit  : 0/0
 15821 ;;		Unchanged: 0/0
 15822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15823 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15824 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15825 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15826 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15827 ;;Total ram usage:        6 bytes
 15828 ;; Hardware stack levels used:    1
 15829 ;; Hardware stack levels required when called:   12
 15830 ;; This function calls:
 15831 ;;		_i2c_masterOperation
 15832 ;;		_i2c_setBuffer
 15833 ;;		_printf
 15834 ;; This function is called by:
 15835 ;;		_commCheck
 15836 ;;		_fifo_check
 15837 ;;		_drv_init
 15838 ;; This function uses a non-reentrant model
 15839 ;;
 15840                           
 15841                           
 15842                           ;psect for function _drv_read
 15843  1C9C                     _drv_read:	
 15844                           
 15845                           ;incstack = 0
 15846                           ; Regs used in _drv_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15847                           ;drv_read@reg stored from wreg
 15848  1C9C  0020               	movlb	0	; select bank0
 15849  1C9D  00CB               	movwf	drv_read@reg
 15850                           
 15851                           ;drv2665.c: 82: char buff=0;
 15852  1C9E  01CC               	clrf	drv_read@buff
 15853                           
 15854                           ;drv2665.c: 85: i2c_setBuffer(&reg, 1);
 15855  1C9F  304B               	movlw	low drv_read@reg
 15856  1CA0  00B1               	movwf	i2c_setBuffer@buffer
 15857  1CA1  3000               	movlw	high drv_read@reg
 15858  1CA2  00B2               	movwf	i2c_setBuffer@buffer+1
 15859  1CA3  3001               	movlw	1
 15860  1CA4  00B3               	movwf	i2c_setBuffer@bufferSize
 15861  1CA5  3000               	movlw	0
 15862  1CA6  00B4               	movwf	i2c_setBuffer@bufferSize+1
 15863  1CA7  3198  202A  319C   	fcall	_i2c_setBuffer
 15864                           
 15865                           ;drv2665.c: 86: if(i2c_masterOperation(0) != I2C_NOERR)
 15866  1CAA  3000               	movlw	0
 15867  1CAB  3199  210A  319C   	fcall	_i2c_masterOperation
 15868  1CAE  3A00               	xorlw	0
 15869  1CAF  1903               	skipnz
 15870  1CB0  2CB9               	goto	l7280
 15871                           
 15872                           ;drv2665.c: 87: printf("drv_write error!\n");
 15873  1CB1  30A3               	movlw	low (STR_51| (0+32768))
 15874  1CB2  0021               	movlb	1	; select bank1
 15875  1CB3  00A0               	movwf	printf@f^(0+128)
 15876  1CB4  30A8               	movlw	high (STR_51| (0+32768))
 15877  1CB5  00A1               	movwf	(printf@f^(0+128)+1)
 15878  1CB6  3186  2618  319C   	fcall	_printf
 15879  1CB9                     l7280:	
 15880                           
 15881                           ;drv2665.c: 90: _delay((unsigned long)((100)*(1000000/4000000.0)));
 15882  1CB9  3008               	movlw	8
 15883  1CBA                     u8797:	
 15884  1CBA  0B89               	decfsz	9,f
 15885  1CBB  2CBA               	goto	u8797
 15886  1CBC  0000               	nop
 15887                           
 15888                           ;drv2665.c: 93: i2c_setBuffer(&buff, 1);
 15889  1CBD  304C               	movlw	low drv_read@buff
 15890  1CBE  0020               	movlb	0	; select bank0
 15891  1CBF  00B1               	movwf	i2c_setBuffer@buffer
 15892  1CC0  3000               	movlw	high drv_read@buff
 15893  1CC1  00B2               	movwf	i2c_setBuffer@buffer+1
 15894  1CC2  3001               	movlw	1
 15895  1CC3  00B3               	movwf	i2c_setBuffer@bufferSize
 15896  1CC4  3000               	movlw	0
 15897  1CC5  00B4               	movwf	i2c_setBuffer@bufferSize+1
 15898  1CC6  3198  202A  319C   	fcall	_i2c_setBuffer
 15899                           
 15900                           ;drv2665.c: 95: if(i2c_masterOperation(1) != I2C_NOERR)
 15901  1CC9  3001               	movlw	1
 15902  1CCA  3199  210A  319C   	fcall	_i2c_masterOperation
 15903  1CCD  3A00               	xorlw	0
 15904  1CCE  1903               	skipnz
 15905  1CCF  2CD7               	goto	l7288
 15906                           
 15907                           ;drv2665.c: 96: printf("drv_read error!\n");
 15908  1CD0  30B5               	movlw	low (STR_53| (0+32768))
 15909  1CD1  0021               	movlb	1	; select bank1
 15910  1CD2  00A0               	movwf	printf@f^(0+128)
 15911  1CD3  30A8               	movlw	high (STR_53| (0+32768))
 15912  1CD4  00A1               	movwf	(printf@f^(0+128)+1)
 15913  1CD5  3186  2618         	fcall	_printf
 15914  1CD7                     l7288:	
 15915                           
 15916                           ;drv2665.c: 98: return buff;
 15917  1CD7  0020               	movlb	0	; select bank0
 15918  1CD8  084C               	movf	drv_read@buff,w
 15919  1CD9  00C9               	movwf	??_drv_read
 15920  1CDA  01CA               	clrf	??_drv_read+1
 15921  1CDB  0849               	movf	??_drv_read,w
 15922  1CDC  0021               	movlb	1	; select bank1
 15923  1CDD  00B5               	movwf	?_drv_read^(0+128)
 15924  1CDE  0020               	movlb	0	; select bank0
 15925  1CDF  084A               	movf	??_drv_read+1,w
 15926  1CE0  0021               	movlb	1	; select bank1
 15927  1CE1  00B6               	movwf	(?_drv_read+1)^(0+128)
 15928  1CE2  0008               	return
 15929  1CE3                     __end_of_drv_read:	
 15930                           
 15931                           	psect	text46
 15932  192E                     __ptext46:	
 15933 ;; *************** function _drv_write *****************
 15934 ;; Defined at:
 15935 ;;		line 53 in file "drv2665.c"
 15936 ;; Parameters:    Size  Location     Type
 15937 ;;  reg             1    wreg     unsigned char 
 15938 ;;  data            1   41[BANK0 ] unsigned char 
 15939 ;; Auto vars:     Size  Location     Type
 15940 ;;  reg             1   43[BANK0 ] unsigned char 
 15941 ;;  buff            2   44[BANK0 ] unsigned char [2]
 15942 ;; Return value:  Size  Location     Type
 15943 ;;                  1    wreg      void 
 15944 ;; Registers used:
 15945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15946 ;; Tracked objects:
 15947 ;;		On entry : 0/0
 15948 ;;		On exit  : 0/0
 15949 ;;		Unchanged: 0/0
 15950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15951 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15952 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15953 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15954 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15955 ;;Total ram usage:        5 bytes
 15956 ;; Hardware stack levels used:    1
 15957 ;; Hardware stack levels required when called:   12
 15958 ;; This function calls:
 15959 ;;		_i2c_masterOperation
 15960 ;;		_i2c_setBuffer
 15961 ;;		_printf
 15962 ;; This function is called by:
 15963 ;;		_setDrvGain
 15964 ;;		_drv_write_DC
 15965 ;;		_drv_init
 15966 ;;		_drv_reset
 15967 ;;		_drv_outputSine
 15968 ;;		_drv_outputWave
 15969 ;; This function uses a non-reentrant model
 15970 ;;
 15971                           
 15972                           
 15973                           ;psect for function _drv_write
 15974  192E                     _drv_write:	
 15975                           
 15976                           ;incstack = 0
 15977                           ; Regs used in _drv_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15978                           ;drv_write@reg stored from wreg
 15979  192E  0020               	movlb	0	; select bank0
 15980  192F  00CB               	movwf	drv_write@reg
 15981                           
 15982                           ;drv2665.c: 58: uint8_t buff[2];
 15983                           ;drv2665.c: 60: buff[0] = reg;
 15984  1930  084B               	movf	drv_write@reg,w
 15985  1931  00CA               	movwf	??_drv_write
 15986  1932  084A               	movf	??_drv_write,w
 15987  1933  00CC               	movwf	drv_write@buff
 15988                           
 15989                           ;drv2665.c: 61: buff[1] = data;
 15990  1934  0849               	movf	drv_write@data,w
 15991  1935  00CA               	movwf	??_drv_write
 15992  1936  084A               	movf	??_drv_write,w
 15993  1937  00CD               	movwf	drv_write@buff+1
 15994                           
 15995                           ;drv2665.c: 64: i2c_setBuffer(buff, 2);
 15996  1938  304C               	movlw	low drv_write@buff
 15997  1939  00B1               	movwf	i2c_setBuffer@buffer
 15998  193A  3000               	movlw	high drv_write@buff
 15999  193B  00B2               	movwf	i2c_setBuffer@buffer+1
 16000  193C  3002               	movlw	2
 16001  193D  00B3               	movwf	i2c_setBuffer@bufferSize
 16002  193E  3000               	movlw	0
 16003  193F  00B4               	movwf	i2c_setBuffer@bufferSize+1
 16004  1940  3198  202A  3199   	fcall	_i2c_setBuffer
 16005                           
 16006                           ;drv2665.c: 65: if(i2c_masterOperation(0) != I2C_NOERR)
 16007  1943  3000               	movlw	0
 16008  1944  3199  210A  3199   	fcall	_i2c_masterOperation
 16009  1947  3A00               	xorlw	0
 16010  1948  1903               	skipnz
 16011  1949  0008               	return
 16012                           
 16013                           ;drv2665.c: 66: printf("drv_write error!\n");
 16014  194A  30A3               	movlw	low (STR_51| (0+32768))
 16015  194B  0021               	movlb	1	; select bank1
 16016  194C  00A0               	movwf	printf@f^(0+128)
 16017  194D  30A8               	movlw	high (STR_51| (0+32768))
 16018  194E  00A1               	movwf	(printf@f^(0+128)+1)
 16019  194F  3186  2618         	fcall	_printf
 16020  1951  0008               	return
 16021  1952                     __end_of_drv_write:	
 16022                           
 16023                           	psect	text47
 16024  0618                     __ptext47:	
 16025 ;; *************** function _printf *****************
 16026 ;; Defined at:
 16027 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 16028 ;; Parameters:    Size  Location     Type
 16029 ;;  f               2    0[BANK1 ] PTR const unsigned char 
 16030 ;;		 -> STR_78(23), STR_77(3), STR_54(17), STR_53(17), 
 16031 ;;		 -> STR_52(18), STR_51(18), STR_50(14), STR_49(28), 
 16032 ;;		 -> STR_48(9), STR_47(9), STR_46(25), STR_45(11), 
 16033 ;;		 -> STR_44(8), STR_43(8), STR_42(8), STR_41(31), 
 16034 ;;		 -> STR_40(11), STR_39(8), STR_38(8), STR_37(8), 
 16035 ;;		 -> STR_36(26), STR_35(30), STR_34(2), STR_33(2), 
 16036 ;;		 -> STR_32(2), STR_31(2), STR_30(4), STR_29(2), 
 16037 ;;		 -> STR_28(4), STR_27(3), STR_26(3), STR_25(3), 
 16038 ;;		 -> STR_24(3), STR_23(3), STR_22(3), STR_21(3), 
 16039 ;;		 -> STR_20(3), STR_19(3), STR_18(3), STR_17(3), 
 16040 ;;		 -> STR_16(3), STR_15(3), STR_14(4), STR_13(3), 
 16041 ;;		 -> STR_12(16), STR_11(11), STR_10(16), STR_9(3), 
 16042 ;;		 -> STR_8(3), STR_7(3), STR_6(8), STR_5(13), 
 16043 ;;		 -> STR_4(15), STR_3(16), STR_2(2), STR_1(4), 
 16044 ;; Auto vars:     Size  Location     Type
 16045 ;;  val             4   14[BANK1 ] unsigned long 
 16046 ;;  tmpval          4    0        struct .
 16047 ;;  prec            2   12[BANK1 ] int 
 16048 ;;  cp              2    0        PTR const unsigned char 
 16049 ;;  len             2    0        unsigned int 
 16050 ;;  c               1   20[BANK1 ] char 
 16051 ;;  ap              1   19[BANK1 ] PTR void [1]
 16052 ;;		 -> ?_printf(2), 
 16053 ;;  flag            1   18[BANK1 ] unsigned char 
 16054 ;; Return value:  Size  Location     Type
 16055 ;;                  2    0[BANK1 ] int 
 16056 ;; Registers used:
 16057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16058 ;; Tracked objects:
 16059 ;;		On entry : 0/0
 16060 ;;		On exit  : 0/0
 16061 ;;		Unchanged: 0/0
 16062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16063 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16064 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16065 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16066 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16067 ;;Total ram usage:       21 bytes
 16068 ;; Hardware stack levels used:    1
 16069 ;; Hardware stack levels required when called:    8
 16070 ;; This function calls:
 16071 ;;		___lldiv
 16072 ;;		___llmod
 16073 ;;		_putch
 16074 ;; This function is called by:
 16075 ;;		_LED_test_openshort
 16076 ;;		_LED_getData
 16077 ;;		_main
 16078 ;;		_initialize
 16079 ;;		_doMove
 16080 ;;		_startRelMove
 16081 ;;		_startAbsMove
 16082 ;;		_doAbsMove
 16083 ;;		_doRelMove
 16084 ;;		_zeroPosition
 16085 ;;		_getPosition
 16086 ;;		_setDrvPeak
 16087 ;;		_setDrvGain
 16088 ;;		_setDrvPiezoOnTime
 16089 ;;		_setHeaterPreTime
 16090 ;;		_setHeaterPostTime
 16091 ;;		_setLEDBrightnessRange
 16092 ;;		_setLEDPwr
 16093 ;;		_setHeaterToggle
 16094 ;;		_setActive
 16095 ;;		_setMoveMask
 16096 ;;		_getActive
 16097 ;;		_getMoveMask
 16098 ;;		_getMotionStatus
 16099 ;;		_commCheck
 16100 ;;		_drv_write
 16101 ;;		_drv_read
 16102 ;;		_drv_write_DC
 16103 ;;		_execCmd
 16104 ;;		_stop
 16105 ;;		_drv_init
 16106 ;; This function uses a non-reentrant model
 16107 ;;
 16108                           
 16109                           
 16110                           ;psect for function _printf
 16111  0618                     _printf:	
 16112                           
 16113                           ;doprnt.c: 466: va_list ap;
 16114                           ;doprnt.c: 499: signed char c;
 16115                           ;doprnt.c: 504: int prec;
 16116                           ;doprnt.c: 508: unsigned char flag;
 16117                           ;doprnt.c: 523: union {
 16118                           ;doprnt.c: 524: unsigned long vd;
 16119                           ;doprnt.c: 525: double integ;
 16120                           ;doprnt.c: 526: } tmpval;
 16121                           ;doprnt.c: 528: unsigned long val;
 16122                           ;doprnt.c: 529: unsigned len;
 16123                           ;doprnt.c: 530: const char * cp;
 16124                           ;doprnt.c: 533: *ap = __va_start();
 16125                           
 16126                           ;incstack = 0
 16127                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16128  0618  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 16129  0619  0021               	movlb	1	; select bank1
 16130  061A  00A6               	movwf	??_printf^(0+128)
 16131  061B  0826               	movf	??_printf^(0+128),w
 16132  061C  00B3               	movwf	printf@ap^(0+128)
 16133  061D                     l7218:	
 16134                           ;doprnt.c: 536: while(c = *f++) {
 16135                           
 16136  061D  0021               	movlb	1	; select bank1
 16137  061E  0821               	movf	(printf@f+1)^(0+128),w
 16138  061F  00A7               	movwf	(??_printf^(0+128)+1)
 16139  0620  0820               	movf	printf@f^(0+128),w
 16140  0621  00A6               	movwf	??_printf^(0+128)
 16141  0622  0AA0               	incf	printf@f^(0+128),f
 16142  0623  1903               	skipnz
 16143  0624  0AA1               	incf	(printf@f+1)^(0+128),f
 16144  0625  0826               	movf	??_printf^(0+128),w
 16145  0626  0084               	movwf	4
 16146  0627  0827               	movf	(??_printf+1)^(0+128),w
 16147  0628  0085               	movwf	5
 16148  0629  0800               	movf	0,w	;code access
 16149  062A  00A8               	movwf	(??_printf+2)^(0+128)
 16150  062B  0828               	movf	(??_printf+2)^(0+128),w
 16151  062C  00B4               	movwf	printf@c^(0+128)
 16152  062D  0834               	movf	printf@c^(0+128),w
 16153  062E  1903               	btfsc	3,2
 16154  062F  0008               	return
 16155                           
 16156                           ;doprnt.c: 538: if(c != '%')
 16157  0630  3025               	movlw	37
 16158  0631  0634               	xorwf	printf@c^(0+128),w
 16159  0632  1903               	btfsc	3,2
 16160  0633  2E39               	goto	l7164
 16161                           
 16162                           ;doprnt.c: 540: {
 16163                           ;doprnt.c: 541: (putch(c) );
 16164  0634  0834               	movf	printf@c^(0+128),w
 16165  0635  31A5  2509  3186   	fcall	_putch
 16166                           
 16167                           ;doprnt.c: 542: continue;
 16168  0638  2E1D               	goto	l7218
 16169  0639                     l7164:	
 16170                           
 16171                           ;doprnt.c: 543: }
 16172                           ;doprnt.c: 548: flag = 0;
 16173  0639  0021               	movlb	1	; select bank1
 16174  063A  01B2               	clrf	printf@flag^(0+128)
 16175                           
 16176                           ;doprnt.c: 635: switch(c = *f++) {
 16177                           
 16178                           ;doprnt.c: 633: loop:
 16179  063B  2E40               	goto	l7168
 16180  063C                     l1387:	
 16181                           ;doprnt.c: 641: case 'l':
 16182                           
 16183                           ;doprnt.c: 638: goto alldone;
 16184                           
 16185                           ;doprnt.c: 637: case 0:
 16186                           
 16187                           
 16188                           ;doprnt.c: 643: flag |= 0x10;
 16189  063C  1632               	bsf	printf@flag^(0+128),4
 16190                           
 16191                           ;doprnt.c: 644: goto loop;
 16192  063D  2E40               	goto	l7168
 16193  063E                     l1392:	
 16194                           ;doprnt.c: 817: case 'u':
 16195                           
 16196                           ;doprnt.c: 813: continue;
 16197                           
 16198                           ;doprnt.c: 802: default:
 16199                           
 16200                           ;doprnt.c: 698: case 'i':
 16201                           ;doprnt.c: 699: break;
 16202                           
 16203                           ;doprnt.c: 697: case 'd':
 16204                           
 16205                           
 16206                           ;doprnt.c: 818: flag |= 0x40;
 16207  063E  1732               	bsf	printf@flag^(0+128),6
 16208                           
 16209                           ;doprnt.c: 822: }
 16210                           
 16211                           ;doprnt.c: 819: break;
 16212  063F  2E5D               	goto	l1390
 16213  0640                     l7168:	
 16214  0640  0821               	movf	(printf@f+1)^(0+128),w
 16215  0641  00A7               	movwf	(??_printf^(0+128)+1)
 16216  0642  0820               	movf	printf@f^(0+128),w
 16217  0643  00A6               	movwf	??_printf^(0+128)
 16218  0644  0AA0               	incf	printf@f^(0+128),f
 16219  0645  1903               	skipnz
 16220  0646  0AA1               	incf	(printf@f+1)^(0+128),f
 16221  0647  0826               	movf	??_printf^(0+128),w
 16222  0648  0084               	movwf	4
 16223  0649  0827               	movf	(??_printf+1)^(0+128),w
 16224  064A  0085               	movwf	5
 16225  064B  0800               	movf	0,w	;code access
 16226  064C  00B4               	movwf	printf@c^(0+128)
 16227                           
 16228                           ; Switch size 1, requested type "space"
 16229                           ; Number of cases is 5, Range of values is 0 to 117
 16230                           ; switch strategies available:
 16231                           ; Name         Instructions Cycles
 16232                           ; simple_byte           16     9 (average)
 16233                           ; direct_byte          242     6 (fixed)
 16234                           ; jumptable            260     6 (fixed)
 16235                           ;	Chosen strategy is simple_byte
 16236  064D  3A00               	xorlw	0	; case 0
 16237  064E  1903               	skipnz
 16238  064F  2F49               	goto	l1408
 16239  0650  3A64               	xorlw	100	; case 100
 16240  0651  1903               	skipnz
 16241  0652  2E5D               	goto	l1390
 16242  0653  3A0D               	xorlw	13	; case 105
 16243  0654  1903               	skipnz
 16244  0655  2E5D               	goto	l1390
 16245  0656  3A05               	xorlw	5	; case 108
 16246  0657  1903               	skipnz
 16247  0658  2E3C               	goto	l1387
 16248  0659  3A19               	xorlw	25	; case 117
 16249  065A  1903               	skipnz
 16250  065B  2E3E               	goto	l1392
 16251  065C  2E1D               	goto	l7218
 16252  065D                     l1390:	
 16253                           
 16254                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 16255  065D  1B32               	btfsc	printf@flag^(0+128),6
 16256  065E  2E94               	goto	l1393
 16257                           
 16258                           ;doprnt.c: 1253: {
 16259                           ;doprnt.c: 1255: if(flag & 0x10)
 16260  065F  1E32               	btfss	printf@flag^(0+128),4
 16261  0660  2E6E               	goto	l7176
 16262                           
 16263                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 16264  0661  0833               	movf	printf@ap^(0+128),w
 16265  0662  0086               	movwf	6
 16266  0663  0187               	clrf	7
 16267  0664  3F40               	moviw [0]fsr1
 16268  0665  00AE               	movwf	printf@val^(0+128)
 16269  0666  3F41               	moviw [1]fsr1
 16270  0667  00AF               	movwf	(printf@val+1)^(0+128)
 16271  0668  3F42               	moviw [2]fsr1
 16272  0669  00B0               	movwf	(printf@val+2)^(0+128)
 16273  066A  3F43               	moviw [3]fsr1
 16274  066B  00B1               	movwf	(printf@val+3)^(0+128)
 16275  066C  3004               	movlw	4
 16276  066D  2E7F               	goto	L31
 16277  066E                     l7176:	
 16278                           
 16279                           ;doprnt.c: 1257: else
 16280                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 16281  066E  0833               	movf	printf@ap^(0+128),w
 16282  066F  0086               	movwf	6
 16283  0670  0187               	clrf	7
 16284  0671  3F40               	moviw [0]fsr1
 16285  0672  00A6               	movwf	??_printf^(0+128)
 16286  0673  3F41               	moviw [1]fsr1
 16287  0674  00A7               	movwf	(??_printf^(0+128)+1)
 16288  0675  0826               	movf	??_printf^(0+128),w
 16289  0676  00AE               	movwf	printf@val^(0+128)
 16290  0677  0827               	movf	(??_printf+1)^(0+128),w
 16291  0678  00AF               	movwf	(printf@val+1)^(0+128)
 16292  0679  0D89               	rlf	9,f
 16293  067A  3B89               	subwfb	9,f
 16294  067B  0989               	comf	9,f
 16295  067C  00B0               	movwf	(printf@val+2)^(0+128)
 16296  067D  00B1               	movwf	(printf@val+3)^(0+128)
 16297  067E  3002               	movlw	2
 16298  067F                     L31:	
 16299  067F  00A6               	movwf	??_printf^(0+128)
 16300  0680  0826               	movf	??_printf^(0+128),w
 16301  0681  07B3               	addwf	printf@ap^(0+128),f
 16302                           
 16303                           ;doprnt.c: 1261: if((long)val < 0) {
 16304  0682  1FB1               	btfss	(printf@val+3)^(0+128),7
 16305  0683  2EB4               	goto	l7194
 16306                           
 16307                           ;doprnt.c: 1262: flag |= 0x03;
 16308  0684  3003               	movlw	3
 16309  0685  00A6               	movwf	??_printf^(0+128)
 16310  0686  0826               	movf	??_printf^(0+128),w
 16311  0687  04B2               	iorwf	printf@flag^(0+128),f
 16312                           
 16313                           ;doprnt.c: 1263: val = -val;
 16314  0688  09AE               	comf	printf@val^(0+128),f
 16315  0689  09AF               	comf	(printf@val+1)^(0+128),f
 16316  068A  09B0               	comf	(printf@val+2)^(0+128),f
 16317  068B  09B1               	comf	(printf@val+3)^(0+128),f
 16318  068C  0AAE               	incf	printf@val^(0+128),f
 16319  068D  1903               	skipnz
 16320  068E  0AAF               	incf	(printf@val+1)^(0+128),f
 16321  068F  1903               	skipnz
 16322  0690  0AB0               	incf	(printf@val+2)^(0+128),f
 16323  0691  1903               	skipnz
 16324  0692  0AB1               	incf	(printf@val+3)^(0+128),f
 16325                           
 16326                           ;doprnt.c: 1264: }
 16327                           ;doprnt.c: 1266: }
 16328  0693  2EB4               	goto	l7194
 16329  0694                     l1393:	
 16330                           
 16331                           ;doprnt.c: 1268: else
 16332                           ;doprnt.c: 1273: {
 16333                           ;doprnt.c: 1281: if(flag & 0x10)
 16334  0694  1E32               	btfss	printf@flag^(0+128),4
 16335  0695  2EA3               	goto	l7190
 16336                           
 16337                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 16338  0696  0833               	movf	printf@ap^(0+128),w
 16339  0697  0086               	movwf	6
 16340  0698  0187               	clrf	7
 16341  0699  3F40               	moviw [0]fsr1
 16342  069A  00AE               	movwf	printf@val^(0+128)
 16343  069B  3F41               	moviw [1]fsr1
 16344  069C  00AF               	movwf	(printf@val+1)^(0+128)
 16345  069D  3F42               	moviw [2]fsr1
 16346  069E  00B0               	movwf	(printf@val+2)^(0+128)
 16347  069F  3F43               	moviw [3]fsr1
 16348  06A0  00B1               	movwf	(printf@val+3)^(0+128)
 16349  06A1  3004               	movlw	4
 16350  06A2  2EB1               	goto	L32
 16351  06A3                     l7190:	
 16352                           
 16353                           ;doprnt.c: 1283: else
 16354                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 16355  06A3  0833               	movf	printf@ap^(0+128),w
 16356  06A4  0086               	movwf	6
 16357  06A5  0187               	clrf	7
 16358  06A6  3F40               	moviw [0]fsr1
 16359  06A7  00A6               	movwf	??_printf^(0+128)
 16360  06A8  3F41               	moviw [1]fsr1
 16361  06A9  00A7               	movwf	(??_printf^(0+128)+1)
 16362  06AA  0826               	movf	??_printf^(0+128),w
 16363  06AB  00AE               	movwf	printf@val^(0+128)
 16364  06AC  0827               	movf	(??_printf+1)^(0+128),w
 16365  06AD  00AF               	movwf	(printf@val^(0+128)+1)
 16366  06AE  01B0               	clrf	(printf@val^(0+128)+2)
 16367  06AF  01B1               	clrf	(printf@val^(0+128)+3)
 16368  06B0  3002               	movlw	2
 16369  06B1                     L32:	
 16370  06B1  00A6               	movwf	??_printf^(0+128)
 16371  06B2  0826               	movf	??_printf^(0+128),w
 16372  06B3  07B3               	addwf	printf@ap^(0+128),f
 16373  06B4                     l7194:	
 16374                           
 16375                           ;doprnt.c: 1287: }
 16376                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16377  06B4  01B4               	clrf	printf@c^(0+128)
 16378  06B5  0AB4               	incf	printf@c^(0+128),f
 16379  06B6  300A               	movlw	10
 16380  06B7  0634               	xorwf	printf@c^(0+128),w
 16381  06B8  1903               	btfsc	3,2
 16382  06B9  2EE7               	goto	l7206
 16383  06BA                     l7200:	
 16384                           
 16385                           ;doprnt.c: 1306: if(val < dpowers[c])
 16386  06BA  0834               	movf	printf@c^(0+128),w
 16387  06BB  00A6               	movwf	??_printf^(0+128)
 16388  06BC  01A7               	clrf	(??_printf^(0+128)+1)
 16389  06BD  35A6               	lslf	??_printf^(0+128),f
 16390  06BE  0DA7               	rlf	(??_printf^(0+128)+1),f
 16391  06BF  35A6               	lslf	??_printf^(0+128),f
 16392  06C0  0DA7               	rlf	(??_printf^(0+128)+1),f
 16393  06C1  3000               	movlw	low (_dpowers| (0+32768))
 16394  06C2  0726               	addwf	??_printf^(0+128),w
 16395  06C3  0084               	movwf	4
 16396  06C4  30A0               	movlw	high (_dpowers| (0+32768))
 16397  06C5  3D27               	addwfc	(??_printf+1)^(0+128),w
 16398  06C6  0085               	movwf	5
 16399  06C7  3F00               	moviw [0]fsr0
 16400  06C8  00A8               	movwf	(??_printf+2)^(0+128)
 16401  06C9  3F01               	moviw [1]fsr0
 16402  06CA  00A9               	movwf	((??_printf+2)^(0+128)+1)
 16403  06CB  3F02               	moviw [2]fsr0
 16404  06CC  00AA               	movwf	((??_printf+2)^(0+128)+2)
 16405  06CD  3F03               	moviw [3]fsr0
 16406  06CE  00AB               	movwf	((??_printf+2)^(0+128)+3)
 16407  06CF  082B               	movf	(??_printf+5)^(0+128),w
 16408  06D0  0231               	subwf	(printf@val+3)^(0+128),w
 16409  06D1  1D03               	skipz
 16410  06D2  2EDD               	goto	u6855
 16411  06D3  082A               	movf	(??_printf+4)^(0+128),w
 16412  06D4  0230               	subwf	(printf@val+2)^(0+128),w
 16413  06D5  1D03               	skipz
 16414  06D6  2EDD               	goto	u6855
 16415  06D7  0829               	movf	(??_printf+3)^(0+128),w
 16416  06D8  022F               	subwf	(printf@val+1)^(0+128),w
 16417  06D9  1D03               	skipz
 16418  06DA  2EDD               	goto	u6855
 16419  06DB  0828               	movf	(??_printf+2)^(0+128),w
 16420  06DC  022E               	subwf	printf@val^(0+128),w
 16421  06DD                     u6855:	
 16422  06DD  1C03               	btfss	3,0
 16423  06DE  2EE7               	goto	l7206
 16424                           
 16425                           ;doprnt.c: 1307: break;
 16426  06DF  3001               	movlw	1
 16427  06E0  00A6               	movwf	??_printf^(0+128)
 16428  06E1  0826               	movf	??_printf^(0+128),w
 16429  06E2  07B4               	addwf	printf@c^(0+128),f
 16430  06E3  300A               	movlw	10
 16431  06E4  0634               	xorwf	printf@c^(0+128),w
 16432  06E5  1D03               	btfss	3,2
 16433  06E6  2EBA               	goto	l7200
 16434  06E7                     l7206:	
 16435                           
 16436                           ;doprnt.c: 1422: {
 16437                           ;doprnt.c: 1438: if(flag & 0x03)
 16438  06E7  0832               	movf	printf@flag^(0+128),w
 16439  06E8  3903               	andlw	3
 16440  06E9  1903               	btfsc	3,2
 16441  06EA  2EEF               	goto	l7210
 16442                           
 16443                           ;doprnt.c: 1439: (putch('-') );
 16444  06EB  302D               	movlw	45
 16445  06EC  31A5  2509  3186   	fcall	_putch
 16446  06EF                     l7210:	
 16447                           
 16448                           ;doprnt.c: 1469: }
 16449                           ;doprnt.c: 1472: prec = c;
 16450  06EF  0021               	movlb	1	; select bank1
 16451  06F0  0834               	movf	printf@c^(0+128),w
 16452  06F1  00AC               	movwf	printf@prec^(0+128)
 16453  06F2  01AD               	clrf	(printf@prec+1)^(0+128)
 16454  06F3  1BAC               	btfsc	printf@prec^(0+128),7
 16455  06F4  03AD               	decf	(printf@prec+1)^(0+128),f
 16456  06F5                     l7216:	
 16457                           ;doprnt.c: 1474: while(prec--) {
 16458                           
 16459  06F5  30FF               	movlw	255
 16460  06F6  0021               	movlb	1	; select bank1
 16461  06F7  07AC               	addwf	printf@prec^(0+128),f
 16462  06F8  30FF               	movlw	255
 16463  06F9  3DAD               	addwfc	(printf@prec+1)^(0+128),f
 16464  06FA  0A2C               	incf	printf@prec^(0+128),w
 16465  06FB  1903               	btfsc	3,2
 16466  06FC  0A2D               	incf	(printf@prec+1)^(0+128),w
 16467  06FD  1903               	btfsc	3,2
 16468  06FE  2E1D               	goto	l7218
 16469                           
 16470                           ;doprnt.c: 1478: {
 16471                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 16472  06FF  3000               	movlw	0
 16473  0700  0020               	movlb	0	; select bank0
 16474  0701  00C2               	movwf	___llmod@divisor+3
 16475  0702  3000               	movlw	0
 16476  0703  00C1               	movwf	___llmod@divisor+2
 16477  0704  3000               	movlw	0
 16478  0705  00C0               	movwf	___llmod@divisor+1
 16479  0706  300A               	movlw	10
 16480  0707  00BF               	movwf	___llmod@divisor
 16481  0708  0021               	movlb	1	; select bank1
 16482  0709  082D               	movf	(printf@prec+1)^(0+128),w
 16483  070A  0085               	movwf	5
 16484  070B  082C               	movf	printf@prec^(0+128),w
 16485  070C  0084               	movwf	4
 16486  070D  3584               	lslf	4,f
 16487  070E  0D85               	rlf	5,f
 16488  070F  3584               	lslf	4,f
 16489  0710  0D85               	rlf	5,f
 16490  0711  3000               	movlw	low (_dpowers| (0+32768))
 16491  0712  0784               	addwf	4,f
 16492  0713  30A0               	movlw	high (_dpowers| (0+32768))
 16493  0714  3D85               	addwfc	5,f
 16494  0715  3F00               	moviw [0]fsr0
 16495  0716  0020               	movlb	0	; select bank0
 16496  0717  00B1               	movwf	___lldiv@divisor
 16497  0718  3F01               	moviw [1]fsr0
 16498  0719  00B2               	movwf	___lldiv@divisor+1
 16499  071A  3F02               	moviw [2]fsr0
 16500  071B  00B3               	movwf	___lldiv@divisor+2
 16501  071C  3F03               	moviw [3]fsr0
 16502  071D  00B4               	movwf	___lldiv@divisor+3
 16503  071E  0021               	movlb	1	; select bank1
 16504  071F  0831               	movf	(printf@val+3)^(0+128),w
 16505  0720  0020               	movlb	0	; select bank0
 16506  0721  00B8               	movwf	___lldiv@dividend+3
 16507  0722  0021               	movlb	1	; select bank1
 16508  0723  0830               	movf	(printf@val+2)^(0+128),w
 16509  0724  0020               	movlb	0	; select bank0
 16510  0725  00B7               	movwf	___lldiv@dividend+2
 16511  0726  0021               	movlb	1	; select bank1
 16512  0727  082F               	movf	(printf@val+1)^(0+128),w
 16513  0728  0020               	movlb	0	; select bank0
 16514  0729  00B6               	movwf	___lldiv@dividend+1
 16515  072A  0021               	movlb	1	; select bank1
 16516  072B  082E               	movf	printf@val^(0+128),w
 16517  072C  0020               	movlb	0	; select bank0
 16518  072D  00B5               	movwf	___lldiv@dividend
 16519  072E  3188  2004  3186   	fcall	___lldiv
 16520  0731  0020               	movlb	0	; select bank0
 16521  0732  0834               	movf	?___lldiv+3,w
 16522  0733  00C6               	movwf	___llmod@dividend+3
 16523  0734  0833               	movf	?___lldiv+2,w
 16524  0735  00C5               	movwf	___llmod@dividend+2
 16525  0736  0832               	movf	?___lldiv+1,w
 16526  0737  00C4               	movwf	___llmod@dividend+1
 16527  0738  0831               	movf	?___lldiv,w
 16528  0739  00C3               	movwf	___llmod@dividend
 16529  073A  319B  23D2  3186   	fcall	___llmod
 16530  073D  0020               	movlb	0	; select bank0
 16531  073E  083F               	movf	?___llmod,w
 16532  073F  3E30               	addlw	48
 16533  0740  0021               	movlb	1	; select bank1
 16534  0741  00A6               	movwf	??_printf^(0+128)
 16535  0742  0826               	movf	??_printf^(0+128),w
 16536  0743  00B4               	movwf	printf@c^(0+128)
 16537                           
 16538                           ;doprnt.c: 1523: }
 16539                           ;doprnt.c: 1524: (putch(c) );
 16540  0744  0834               	movf	printf@c^(0+128),w
 16541  0745  31A5  2509  3186   	fcall	_putch
 16542  0748  2EF5               	goto	l7216
 16543  0749                     l1408:	
 16544                           ;doprnt.c: 1540: return 0;
 16545                           ;	Return value of _printf is never used
 16546                           
 16547                           ;doprnt.c: 1525: }
 16548                           ;doprnt.c: 1533: }
 16549                           ;doprnt.c: 1535: alldone:
 16550                           
 16551  0749  0008               	return
 16552  074A                     __end_of_printf:	
 16553                           
 16554                           	psect	text48
 16555  2509                     __ptext48:	
 16556 ;; *************** function _putch *****************
 16557 ;; Defined at:
 16558 ;;		line 156 in file "mcc_generated_files/eusart.c"
 16559 ;; Parameters:    Size  Location     Type
 16560 ;;  txData          1    wreg     unsigned char 
 16561 ;; Auto vars:     Size  Location     Type
 16562 ;;  txData          1   19[BANK0 ] unsigned char 
 16563 ;; Return value:  Size  Location     Type
 16564 ;;                  1    wreg      void 
 16565 ;; Registers used:
 16566 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16567 ;; Tracked objects:
 16568 ;;		On entry : 0/0
 16569 ;;		On exit  : 0/0
 16570 ;;		Unchanged: 0/0
 16571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16573 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16575 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16576 ;;Total ram usage:        1 bytes
 16577 ;; Hardware stack levels used:    1
 16578 ;; Hardware stack levels required when called:    7
 16579 ;; This function calls:
 16580 ;;		_EUSART_Write
 16581 ;; This function is called by:
 16582 ;;		_printf
 16583 ;; This function uses a non-reentrant model
 16584 ;;
 16585                           
 16586                           
 16587                           ;psect for function _putch
 16588  2509                     _putch:	
 16589                           
 16590                           ;incstack = 0
 16591                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16592                           ;putch@txData stored from wreg
 16593  2509  0020               	movlb	0	; select bank0
 16594  250A  00B3               	movwf	putch@txData
 16595                           
 16596                           ;eusart.c: 158: EUSART_Write(txData);
 16597  250B  0833               	movf	putch@txData,w
 16598  250C  3199  2176         	fcall	_EUSART_Write
 16599  250E  0008               	return
 16600  250F                     __end_of_putch:	
 16601                           
 16602                           	psect	text49
 16603  1976                     __ptext49:	
 16604 ;; *************** function _EUSART_Write *****************
 16605 ;; Defined at:
 16606 ;;		line 128 in file "mcc_generated_files/eusart.c"
 16607 ;; Parameters:    Size  Location     Type
 16608 ;;  txData          1    wreg     unsigned char 
 16609 ;; Auto vars:     Size  Location     Type
 16610 ;;  txData          1   18[BANK0 ] unsigned char 
 16611 ;; Return value:  Size  Location     Type
 16612 ;;                  1    wreg      void 
 16613 ;; Registers used:
 16614 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16615 ;; Tracked objects:
 16616 ;;		On entry : 0/0
 16617 ;;		On exit  : 0/0
 16618 ;;		Unchanged: 0/0
 16619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16623 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16624 ;;Total ram usage:        2 bytes
 16625 ;; Hardware stack levels used:    1
 16626 ;; Hardware stack levels required when called:    6
 16627 ;; This function calls:
 16628 ;;		Nothing
 16629 ;; This function is called by:
 16630 ;;		_putch
 16631 ;; This function uses a non-reentrant model
 16632 ;;
 16633                           
 16634                           
 16635                           ;psect for function _EUSART_Write
 16636  1976                     _EUSART_Write:	
 16637                           
 16638                           ;incstack = 0
 16639                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 16640                           ;EUSART_Write@txData stored from wreg
 16641  1976  0020               	movlb	0	; select bank0
 16642  1977  00B2               	movwf	EUSART_Write@txData
 16643  1978                     l7034:	
 16644                           ;eusart.c: 131: {
 16645                           
 16646                           ;eusart.c: 130: while(0 == eusartTxBufferRemaining)
 16647                           
 16648  1978  085E               	movf	_eusartTxBufferRemaining,w	;volatile
 16649  1979  1903               	btfsc	3,2
 16650  197A  2978               	goto	l7034
 16651                           
 16652                           ;eusart.c: 132: }
 16653                           ;eusart.c: 134: if(0 == PIE1bits.TXIE)
 16654  197B  0021               	movlb	1	; select bank1
 16655  197C  1A11               	btfsc	17,4	;volatile
 16656  197D  2983               	goto	l391
 16657                           
 16658                           ;eusart.c: 135: {
 16659                           ;eusart.c: 136: TX1REG = txData;
 16660  197E  0020               	movlb	0	; select bank0
 16661  197F  0832               	movf	EUSART_Write@txData,w
 16662  1980  0023               	movlb	3	; select bank3
 16663  1981  009A               	movwf	26	;volatile
 16664                           
 16665                           ;eusart.c: 137: }
 16666  1982  2998               	goto	l7048
 16667  1983                     l391:	
 16668                           
 16669                           ;eusart.c: 138: else
 16670                           ;eusart.c: 139: {
 16671                           ;eusart.c: 140: PIE1bits.TXIE = 0;
 16672  1983  1211               	bcf	17,4	;volatile
 16673                           
 16674                           ;eusart.c: 141: eusartTxBuffer[eusartTxHead++] = txData;
 16675  1984  0020               	movlb	0	; select bank0
 16676  1985  0832               	movf	EUSART_Write@txData,w
 16677  1986  00B1               	movwf	??_EUSART_Write
 16678  1987  087D               	movf	_eusartTxHead,w
 16679  1988  3E3E               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 16680  1989  0086               	movwf	6
 16681  198A  3001               	movlw	1	; select bank2/3
 16682  198B  0087               	movwf	7
 16683  198C  0831               	movf	??_EUSART_Write,w
 16684  198D  0081               	movwf	1
 16685  198E  3001               	movlw	1
 16686  198F  00B1               	movwf	??_EUSART_Write
 16687  1990  0831               	movf	??_EUSART_Write,w
 16688  1991  07FD               	addwf	_eusartTxHead,f	;volatile
 16689                           
 16690                           ;eusart.c: 142: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 16691  1992  3008               	movlw	8
 16692  1993  027D               	subwf	_eusartTxHead,w	;volatile
 16693  1994  1803               	btfsc	3,0
 16694                           
 16695                           ;eusart.c: 143: {
 16696                           ;eusart.c: 144: eusartTxHead = 0;
 16697  1995  01FD               	clrf	_eusartTxHead	;volatile
 16698                           
 16699                           ;eusart.c: 145: }
 16700                           ;eusart.c: 146: eusartTxBufferRemaining--;
 16701  1996  3001               	movlw	1
 16702  1997  02DE               	subwf	_eusartTxBufferRemaining,f	;volatile
 16703  1998                     l7048:	
 16704                           
 16705                           ;eusart.c: 147: }
 16706                           ;eusart.c: 148: PIE1bits.TXIE = 1;
 16707  1998  0021               	movlb	1	; select bank1
 16708  1999  1611               	bsf	17,4	;volatile
 16709  199A  0008               	return
 16710  199B                     __end_of_EUSART_Write:	
 16711                           
 16712                           	psect	text50
 16713  1BD2                     __ptext50:	
 16714 ;; *************** function ___llmod *****************
 16715 ;; Defined at:
 16716 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 16717 ;; Parameters:    Size  Location     Type
 16718 ;;  divisor         4   31[BANK0 ] unsigned long 
 16719 ;;  dividend        4   35[BANK0 ] unsigned long 
 16720 ;; Auto vars:     Size  Location     Type
 16721 ;;  counter         1   40[BANK0 ] unsigned char 
 16722 ;; Return value:  Size  Location     Type
 16723 ;;                  4   31[BANK0 ] unsigned long 
 16724 ;; Registers used:
 16725 ;;		wreg, status,2, status,0
 16726 ;; Tracked objects:
 16727 ;;		On entry : 0/0
 16728 ;;		On exit  : 0/0
 16729 ;;		Unchanged: 0/0
 16730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16731 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16732 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16733 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16734 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16735 ;;Total ram usage:       10 bytes
 16736 ;; Hardware stack levels used:    1
 16737 ;; Hardware stack levels required when called:    6
 16738 ;; This function calls:
 16739 ;;		Nothing
 16740 ;; This function is called by:
 16741 ;;		_printf
 16742 ;; This function uses a non-reentrant model
 16743 ;;
 16744                           
 16745                           
 16746                           ;psect for function ___llmod
 16747  1BD2                     ___llmod:	
 16748                           
 16749                           ;incstack = 0
 16750                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 16751  1BD2  0020               	movlb	0	; select bank0
 16752  1BD3  0842               	movf	___llmod@divisor+3,w
 16753  1BD4  0441               	iorwf	___llmod@divisor+2,w
 16754  1BD5  0440               	iorwf	___llmod@divisor+1,w
 16755  1BD6  043F               	iorwf	___llmod@divisor,w
 16756  1BD7  1903               	skipnz
 16757  1BD8  2C0C               	goto	l7122
 16758  1BD9  01C8               	clrf	___llmod@counter
 16759  1BDA  0AC8               	incf	___llmod@counter,f
 16760  1BDB                     l7112:	
 16761  1BDB  1BC2               	btfsc	___llmod@divisor+3,7
 16762  1BDC  2BE9               	goto	l7114
 16763  1BDD  3001               	movlw	1
 16764  1BDE                     u6625:	
 16765  1BDE  35BF               	lslf	___llmod@divisor,f
 16766  1BDF  0DC0               	rlf	___llmod@divisor+1,f
 16767  1BE0  0DC1               	rlf	___llmod@divisor+2,f
 16768  1BE1  0DC2               	rlf	___llmod@divisor+3,f
 16769  1BE2  0B89               	decfsz	9,f
 16770  1BE3  2BDE               	goto	u6625
 16771  1BE4  3001               	movlw	1
 16772  1BE5  00C7               	movwf	??___llmod
 16773  1BE6  0847               	movf	??___llmod,w
 16774  1BE7  07C8               	addwf	___llmod@counter,f
 16775  1BE8  2BDB               	goto	l7112
 16776  1BE9                     l7114:	
 16777  1BE9  0842               	movf	___llmod@divisor+3,w
 16778  1BEA  0246               	subwf	___llmod@dividend+3,w
 16779  1BEB  1D03               	skipz
 16780  1BEC  2BF7               	goto	u6645
 16781  1BED  0841               	movf	___llmod@divisor+2,w
 16782  1BEE  0245               	subwf	___llmod@dividend+2,w
 16783  1BEF  1D03               	skipz
 16784  1BF0  2BF7               	goto	u6645
 16785  1BF1  0840               	movf	___llmod@divisor+1,w
 16786  1BF2  0244               	subwf	___llmod@dividend+1,w
 16787  1BF3  1D03               	skipz
 16788  1BF4  2BF7               	goto	u6645
 16789  1BF5  083F               	movf	___llmod@divisor,w
 16790  1BF6  0243               	subwf	___llmod@dividend,w
 16791  1BF7                     u6645:	
 16792  1BF7  1C03               	skipc
 16793  1BF8  2C01               	goto	l7118
 16794  1BF9  083F               	movf	___llmod@divisor,w
 16795  1BFA  02C3               	subwf	___llmod@dividend,f
 16796  1BFB  0840               	movf	___llmod@divisor+1,w
 16797  1BFC  3BC4               	subwfb	___llmod@dividend+1,f
 16798  1BFD  0841               	movf	___llmod@divisor+2,w
 16799  1BFE  3BC5               	subwfb	___llmod@dividend+2,f
 16800  1BFF  0842               	movf	___llmod@divisor+3,w
 16801  1C00  3BC6               	subwfb	___llmod@dividend+3,f
 16802  1C01                     l7118:	
 16803  1C01  3001               	movlw	1
 16804  1C02                     u6655:	
 16805  1C02  36C2               	lsrf	___llmod@divisor+3,f
 16806  1C03  0CC1               	rrf	___llmod@divisor+2,f
 16807  1C04  0CC0               	rrf	___llmod@divisor+1,f
 16808  1C05  0CBF               	rrf	___llmod@divisor,f
 16809  1C06  0B89               	decfsz	9,f
 16810  1C07  2C02               	goto	u6655
 16811  1C08  3001               	movlw	1
 16812  1C09  02C8               	subwf	___llmod@counter,f
 16813  1C0A  1D03               	btfss	3,2
 16814  1C0B  2BE9               	goto	l7114
 16815  1C0C                     l7122:	
 16816  1C0C  0846               	movf	___llmod@dividend+3,w
 16817  1C0D  00C2               	movwf	?___llmod+3
 16818  1C0E  0845               	movf	___llmod@dividend+2,w
 16819  1C0F  00C1               	movwf	?___llmod+2
 16820  1C10  0844               	movf	___llmod@dividend+1,w
 16821  1C11  00C0               	movwf	?___llmod+1
 16822  1C12  0843               	movf	___llmod@dividend,w
 16823  1C13  00BF               	movwf	?___llmod
 16824  1C14  0008               	return
 16825  1C15                     __end_of___llmod:	
 16826                           
 16827                           	psect	text51
 16828  0804                     __ptext51:	
 16829 ;; *************** function ___lldiv *****************
 16830 ;; Defined at:
 16831 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 16832 ;; Parameters:    Size  Location     Type
 16833 ;;  divisor         4   17[BANK0 ] unsigned long 
 16834 ;;  dividend        4   21[BANK0 ] unsigned long 
 16835 ;; Auto vars:     Size  Location     Type
 16836 ;;  quotient        4   26[BANK0 ] unsigned long 
 16837 ;;  counter         1   30[BANK0 ] unsigned char 
 16838 ;; Return value:  Size  Location     Type
 16839 ;;                  4   17[BANK0 ] unsigned long 
 16840 ;; Registers used:
 16841 ;;		wreg, status,2, status,0
 16842 ;; Tracked objects:
 16843 ;;		On entry : 0/0
 16844 ;;		On exit  : 0/0
 16845 ;;		Unchanged: 0/0
 16846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16847 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16848 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16850 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16851 ;;Total ram usage:       14 bytes
 16852 ;; Hardware stack levels used:    1
 16853 ;; Hardware stack levels required when called:    6
 16854 ;; This function calls:
 16855 ;;		Nothing
 16856 ;; This function is called by:
 16857 ;;		_printf
 16858 ;; This function uses a non-reentrant model
 16859 ;;
 16860                           
 16861                           
 16862                           ;psect for function ___lldiv
 16863  0804                     ___lldiv:	
 16864                           
 16865                           ;incstack = 0
 16866                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 16867  0804  3000               	movlw	0
 16868  0805  0020               	movlb	0	; select bank0
 16869  0806  00BD               	movwf	___lldiv@quotient+3
 16870  0807  3000               	movlw	0
 16871  0808  00BC               	movwf	___lldiv@quotient+2
 16872  0809  3000               	movlw	0
 16873  080A  00BB               	movwf	___lldiv@quotient+1
 16874  080B  3000               	movlw	0
 16875  080C  00BA               	movwf	___lldiv@quotient
 16876  080D  0834               	movf	___lldiv@divisor+3,w
 16877  080E  0433               	iorwf	___lldiv@divisor+2,w
 16878  080F  0432               	iorwf	___lldiv@divisor+1,w
 16879  0810  0431               	iorwf	___lldiv@divisor,w
 16880  0811  1903               	skipnz
 16881  0812  284E               	goto	l7102
 16882  0813  01BE               	clrf	___lldiv@counter
 16883  0814  0ABE               	incf	___lldiv@counter,f
 16884  0815                     l7088:	
 16885  0815  1BB4               	btfsc	___lldiv@divisor+3,7
 16886  0816  2823               	goto	l7090
 16887  0817  3001               	movlw	1
 16888  0818                     u6555:	
 16889  0818  35B1               	lslf	___lldiv@divisor,f
 16890  0819  0DB2               	rlf	___lldiv@divisor+1,f
 16891  081A  0DB3               	rlf	___lldiv@divisor+2,f
 16892  081B  0DB4               	rlf	___lldiv@divisor+3,f
 16893  081C  0B89               	decfsz	9,f
 16894  081D  2818               	goto	u6555
 16895  081E  3001               	movlw	1
 16896  081F  00B9               	movwf	??___lldiv
 16897  0820  0839               	movf	??___lldiv,w
 16898  0821  07BE               	addwf	___lldiv@counter,f
 16899  0822  2815               	goto	l7088
 16900  0823                     l7090:	
 16901  0823  3001               	movlw	1
 16902  0824                     u6575:	
 16903  0824  35BA               	lslf	___lldiv@quotient,f
 16904  0825  0DBB               	rlf	___lldiv@quotient+1,f
 16905  0826  0DBC               	rlf	___lldiv@quotient+2,f
 16906  0827  0DBD               	rlf	___lldiv@quotient+3,f
 16907  0828  0B89               	decfsz	9,f
 16908  0829  2824               	goto	u6575
 16909  082A  0834               	movf	___lldiv@divisor+3,w
 16910  082B  0238               	subwf	___lldiv@dividend+3,w
 16911  082C  1D03               	skipz
 16912  082D  2838               	goto	u6585
 16913  082E  0833               	movf	___lldiv@divisor+2,w
 16914  082F  0237               	subwf	___lldiv@dividend+2,w
 16915  0830  1D03               	skipz
 16916  0831  2838               	goto	u6585
 16917  0832  0832               	movf	___lldiv@divisor+1,w
 16918  0833  0236               	subwf	___lldiv@dividend+1,w
 16919  0834  1D03               	skipz
 16920  0835  2838               	goto	u6585
 16921  0836  0831               	movf	___lldiv@divisor,w
 16922  0837  0235               	subwf	___lldiv@dividend,w
 16923  0838                     u6585:	
 16924  0838  1C03               	skipc
 16925  0839  2843               	goto	l7098
 16926  083A  0831               	movf	___lldiv@divisor,w
 16927  083B  02B5               	subwf	___lldiv@dividend,f
 16928  083C  0832               	movf	___lldiv@divisor+1,w
 16929  083D  3BB6               	subwfb	___lldiv@dividend+1,f
 16930  083E  0833               	movf	___lldiv@divisor+2,w
 16931  083F  3BB7               	subwfb	___lldiv@dividend+2,f
 16932  0840  0834               	movf	___lldiv@divisor+3,w
 16933  0841  3BB8               	subwfb	___lldiv@dividend+3,f
 16934  0842  143A               	bsf	___lldiv@quotient,0
 16935  0843                     l7098:	
 16936  0843  3001               	movlw	1
 16937  0844                     u6595:	
 16938  0844  36B4               	lsrf	___lldiv@divisor+3,f
 16939  0845  0CB3               	rrf	___lldiv@divisor+2,f
 16940  0846  0CB2               	rrf	___lldiv@divisor+1,f
 16941  0847  0CB1               	rrf	___lldiv@divisor,f
 16942  0848  0B89               	decfsz	9,f
 16943  0849  2844               	goto	u6595
 16944  084A  3001               	movlw	1
 16945  084B  02BE               	subwf	___lldiv@counter,f
 16946  084C  1D03               	btfss	3,2
 16947  084D  2823               	goto	l7090
 16948  084E                     l7102:	
 16949  084E  083D               	movf	___lldiv@quotient+3,w
 16950  084F  00B4               	movwf	?___lldiv+3
 16951  0850  083C               	movf	___lldiv@quotient+2,w
 16952  0851  00B3               	movwf	?___lldiv+2
 16953  0852  083B               	movf	___lldiv@quotient+1,w
 16954  0853  00B2               	movwf	?___lldiv+1
 16955  0854  083A               	movf	___lldiv@quotient,w
 16956  0855  00B1               	movwf	?___lldiv
 16957  0856  0008               	return
 16958  0857                     __end_of___lldiv:	
 16959                           
 16960                           	psect	text52
 16961  182A                     __ptext52:	
 16962 ;; *************** function _i2c_setBuffer *****************
 16963 ;; Defined at:
 16964 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 16965 ;; Parameters:    Size  Location     Type
 16966 ;;  buffer          2   17[BANK0 ] PTR void 
 16967 ;;		 -> drv_read@reg(1), drv_read@buff(1), drv2665@drv_fifo_sine(244), drv_write@buff(2), 
 16968 ;;  bufferSize      2   19[BANK0 ] unsigned int 
 16969 ;; Auto vars:     Size  Location     Type
 16970 ;;		None
 16971 ;; Return value:  Size  Location     Type
 16972 ;;                  1    wreg      void 
 16973 ;; Registers used:
 16974 ;;		wreg
 16975 ;; Tracked objects:
 16976 ;;		On entry : 0/0
 16977 ;;		On exit  : 0/0
 16978 ;;		Unchanged: 0/0
 16979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16980 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16983 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16984 ;;Total ram usage:        4 bytes
 16985 ;; Hardware stack levels used:    1
 16986 ;; Hardware stack levels required when called:    6
 16987 ;; This function calls:
 16988 ;;		Nothing
 16989 ;; This function is called by:
 16990 ;;		_drv_write
 16991 ;;		_drv_read
 16992 ;;		_drv_write_wvfrm
 16993 ;; This function uses a non-reentrant model
 16994 ;;
 16995                           
 16996                           
 16997                           ;psect for function _i2c_setBuffer
 16998  182A                     _i2c_setBuffer:	
 16999                           
 17000                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 17001                           
 17002                           ;incstack = 0
 17003                           ; Regs used in _i2c_setBuffer: [wreg]
 17004  182A  0022               	movlb	2	; select bank2
 17005  182B  1D20               	btfss	_i2c_status^(0+256),2
 17006  182C  0008               	return
 17007                           
 17008                           ;i2c_master.c: 187: {
 17009                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 17010  182D  0020               	movlb	0	; select bank0
 17011  182E  0832               	movf	i2c_setBuffer@buffer+1,w
 17012  182F  0022               	movlb	2	; select bank2
 17013  1830  00A3               	movwf	((low ((_i2c_status| (0+256)+2))+1))^0
 17014  1831  0020               	movlb	0	; select bank0
 17015  1832  0831               	movf	i2c_setBuffer@buffer,w
 17016  1833  0022               	movlb	2	; select bank2
 17017  1834  00A2               	movwf	(low ((_i2c_status| (0+256)+2)))^0
 17018                           
 17019                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 17020  1835  0020               	movlb	0	; select bank0
 17021  1836  0834               	movf	i2c_setBuffer@bufferSize+1,w
 17022  1837  0022               	movlb	2	; select bank2
 17023  1838  00A5               	movwf	((_i2c_status+1)^(0+256)+4)
 17024  1839  0020               	movlb	0	; select bank0
 17025  183A  0833               	movf	i2c_setBuffer@bufferSize,w
 17026  183B  0022               	movlb	2	; select bank2
 17027  183C  00A4               	movwf	(_i2c_status^(0+256)+4)
 17028                           
 17029                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 17030  183D  1120               	bcf	_i2c_status^(0+256),2
 17031  183E  0008               	return
 17032  183F                     __end_of_i2c_setBuffer:	
 17033                           
 17034                           	psect	text53
 17035  190A                     __ptext53:	
 17036 ;; *************** function _i2c_masterOperation *****************
 17037 ;; Defined at:
 17038 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 17039 ;; Parameters:    Size  Location     Type
 17040 ;;  read            1    wreg     unsigned char 
 17041 ;; Auto vars:     Size  Location     Type
 17042 ;;  read            1   24[BANK0 ] unsigned char 
 17043 ;;  ret             1   25[BANK0 ] enum E8193
 17044 ;; Return value:  Size  Location     Type
 17045 ;;                  1    wreg      enum E8193
 17046 ;; Registers used:
 17047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17048 ;; Tracked objects:
 17049 ;;		On entry : 0/0
 17050 ;;		On exit  : 0/0
 17051 ;;		Unchanged: 0/0
 17052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17054 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17056 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17057 ;;Total ram usage:        3 bytes
 17058 ;; Hardware stack levels used:    1
 17059 ;; Hardware stack levels required when called:   11
 17060 ;; This function calls:
 17061 ;;		_i2c1_driver_start
 17062 ;;		_i2c_poller
 17063 ;;		_mssp1_IRQisEnabled
 17064 ;; This function is called by:
 17065 ;;		_drv_write
 17066 ;;		_drv_read
 17067 ;;		_i2c_masterRead
 17068 ;;		_i2c_masterWrite
 17069 ;;		_drv_write_wvfrm
 17070 ;; This function uses a non-reentrant model
 17071 ;;
 17072                           
 17073                           
 17074                           ;psect for function _i2c_masterOperation
 17075  190A                     _i2c_masterOperation:	
 17076                           
 17077                           ;incstack = 0
 17078                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17079                           ;i2c_masterOperation@read stored from wreg
 17080  190A  0020               	movlb	0	; select bank0
 17081  190B  00B8               	movwf	i2c_masterOperation@read
 17082                           
 17083                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 17084  190C  01B9               	clrf	i2c_masterOperation@ret
 17085  190D  0AB9               	incf	i2c_masterOperation@ret,f
 17086                           
 17087                           ;i2c_master.c: 196: if(!i2c_status.busy)
 17088  190E  0022               	movlb	2	; select bank2
 17089  190F  1820               	btfsc	_i2c_status^(0+256),0
 17090  1910  292B               	goto	l7242
 17091                           
 17092                           ;i2c_master.c: 197: {
 17093                           ;i2c_master.c: 198: i2c_status.busy = 1;
 17094  1911  1420               	bsf	_i2c_status^(0+256),0
 17095                           
 17096                           ;i2c_master.c: 199: ret = I2C_NOERR;
 17097  1912  0020               	movlb	0	; select bank0
 17098  1913  01B9               	clrf	i2c_masterOperation@ret
 17099                           
 17100                           ;i2c_master.c: 201: if(read)
 17101  1914  0838               	movf	i2c_masterOperation@read,w
 17102  1915  1903               	btfsc	3,2
 17103  1916  291B               	goto	l7236
 17104                           
 17105                           ;i2c_master.c: 202: {
 17106                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 17107  1917  0022               	movlb	2	; select bank2
 17108  1918  01AA               	clrf	(_i2c_status^(0+256)+10)
 17109  1919  0AAA               	incf	(_i2c_status^(0+256)+10),f
 17110                           
 17111                           ;i2c_master.c: 204: }
 17112  191A  2921               	goto	l7238
 17113  191B                     l7236:	
 17114                           
 17115                           ;i2c_master.c: 205: else
 17116                           ;i2c_master.c: 206: {
 17117                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 17118  191B  3002               	movlw	2
 17119  191C  0020               	movlb	0	; select bank0
 17120  191D  00B7               	movwf	??_i2c_masterOperation
 17121  191E  0837               	movf	??_i2c_masterOperation,w
 17122  191F  0022               	movlb	2	; select bank2
 17123  1920  00AA               	movwf	(_i2c_status^(0+256)+10)
 17124  1921                     l7238:	
 17125                           
 17126                           ;i2c_master.c: 208: }
 17127                           ;i2c_master.c: 209: i2c1_driver_start();
 17128  1921  31A4  2492  3199   	fcall	_i2c1_driver_start
 17129                           
 17130                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 17131  1924  31A5  25B5  3199   	fcall	_mssp1_IRQisEnabled
 17132  1927  1803               	btfsc	3,0
 17133  1928  292B               	goto	l7242
 17134                           
 17135                           ;i2c_master.c: 212: i2c_poller();
 17136  1929  31A5  25E0         	fcall	_i2c_poller
 17137  192B                     l7242:	
 17138                           
 17139                           ;i2c_master.c: 213: }
 17140                           ;i2c_master.c: 214: return ret;
 17141  192B  0020               	movlb	0	; select bank0
 17142  192C  0839               	movf	i2c_masterOperation@ret,w
 17143  192D  0008               	return
 17144  192E                     __end_of_i2c_masterOperation:	
 17145                           
 17146                           	psect	text54
 17147  25B5                     __ptext54:	
 17148 ;; *************** function _mssp1_IRQisEnabled *****************
 17149 ;; Defined at:
 17150 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
 17151 ;; Parameters:    Size  Location     Type
 17152 ;;		None
 17153 ;; Auto vars:     Size  Location     Type
 17154 ;;		None
 17155 ;; Return value:  Size  Location     Type
 17156 ;;		None               void
 17157 ;; Registers used:
 17158 ;;		wreg, status,2, status,0
 17159 ;; Tracked objects:
 17160 ;;		On entry : 0/0
 17161 ;;		On exit  : 0/0
 17162 ;;		Unchanged: 0/0
 17163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17166 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17167 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17168 ;;Total ram usage:        2 bytes
 17169 ;; Hardware stack levels used:    1
 17170 ;; Hardware stack levels required when called:    6
 17171 ;; This function calls:
 17172 ;;		Nothing
 17173 ;; This function is called by:
 17174 ;;		_i2c_masterOperation
 17175 ;; This function uses a non-reentrant model
 17176 ;;
 17177                           
 17178                           
 17179                           ;psect for function _mssp1_IRQisEnabled
 17180  25B5                     _mssp1_IRQisEnabled:	
 17181                           
 17182                           ;i2c1_driver.c: 45: return PIE1bits.SSP1IE;
 17183                           
 17184                           ;incstack = 0
 17185                           ; Regs used in _mssp1_IRQisEnabled: [wreg+status,2+status,0]
 17186  25B5  0021               	movlb	1	; select bank1
 17187  25B6  0C11               	rrf	17,w	;volatile
 17188  25B7  0020               	movlb	0	; select bank0
 17189  25B8  00B1               	movwf	??_mssp1_IRQisEnabled
 17190  25B9  0CB1               	rrf	??_mssp1_IRQisEnabled,f
 17191  25BA  0C31               	rrf	??_mssp1_IRQisEnabled,w
 17192  25BB  3901               	andlw	1
 17193  25BC  00B2               	movwf	??_mssp1_IRQisEnabled+1
 17194  25BD  0C32               	rrf	??_mssp1_IRQisEnabled+1,w
 17195  25BE  0008               	return
 17196  25BF                     __end_of_mssp1_IRQisEnabled:	
 17197                           
 17198                           	psect	text55
 17199  25E0                     __ptext55:	
 17200 ;; *************** function _i2c_poller *****************
 17201 ;; Defined at:
 17202 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 17203 ;; Parameters:    Size  Location     Type
 17204 ;;		None
 17205 ;; Auto vars:     Size  Location     Type
 17206 ;;		None
 17207 ;; Return value:  Size  Location     Type
 17208 ;;                  1    wreg      void 
 17209 ;; Registers used:
 17210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17211 ;; Tracked objects:
 17212 ;;		On entry : 0/0
 17213 ;;		On exit  : 0/0
 17214 ;;		Unchanged: 0/0
 17215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17220 ;;Total ram usage:        0 bytes
 17221 ;; Hardware stack levels used:    1
 17222 ;; Hardware stack levels required when called:   10
 17223 ;; This function calls:
 17224 ;;		_i2c_ISR
 17225 ;;		_mssp1_waitForEvent
 17226 ;; This function is called by:
 17227 ;;		_i2c_masterOperation
 17228 ;; This function uses a non-reentrant model
 17229 ;;
 17230                           
 17231                           
 17232                           ;psect for function _i2c_poller
 17233  25E0                     _i2c_poller:	
 17234  25E0                     l7080:	
 17235                           ;i2c_master.c: 232: while(i2c_status.busy)
 17236                           
 17237                           ;incstack = 0
 17238                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17239                           
 17240  25E0  0022               	movlb	2	; select bank2
 17241  25E1  1C20               	btfss	_i2c_status^(0+256),0
 17242  25E2  0008               	return
 17243                           
 17244                           ;i2c_master.c: 233: {
 17245                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 17246  25E3  3000               	movlw	0
 17247  25E4  31A5  25D5  31A5   	fcall	_mssp1_waitForEvent
 17248                           
 17249                           ;i2c_master.c: 235: i2c_ISR();
 17250  25E7  3199  219B  31A5   	fcall	_i2c_ISR
 17251  25EA  2DE0               	goto	l7080
 17252  25EB                     __end_of_i2c_poller:	
 17253                           
 17254                           	psect	text56
 17255  25D5                     __ptext56:	
 17256 ;; *************** function _mssp1_waitForEvent *****************
 17257 ;; Defined at:
 17258 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
 17259 ;; Parameters:    Size  Location     Type
 17260 ;;  timeout         1    wreg     PTR unsigned int 
 17261 ;;		 -> NULL(0), 
 17262 ;; Auto vars:     Size  Location     Type
 17263 ;;  timeout         1   17[BANK0 ] PTR unsigned int 
 17264 ;;		 -> NULL(0), 
 17265 ;; Return value:  Size  Location     Type
 17266 ;;                  1    wreg      void 
 17267 ;; Registers used:
 17268 ;;		wreg
 17269 ;; Tracked objects:
 17270 ;;		On entry : 0/0
 17271 ;;		On exit  : 0/0
 17272 ;;		Unchanged: 0/0
 17273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17277 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17278 ;;Total ram usage:        1 bytes
 17279 ;; Hardware stack levels used:    1
 17280 ;; Hardware stack levels required when called:    6
 17281 ;; This function calls:
 17282 ;;		Nothing
 17283 ;; This function is called by:
 17284 ;;		_i2c_poller
 17285 ;; This function uses a non-reentrant model
 17286 ;;
 17287                           
 17288                           
 17289                           ;psect for function _mssp1_waitForEvent
 17290  25D5                     _mssp1_waitForEvent:	
 17291                           
 17292                           ;i2c1_driver.c: 73: if(PIR1bits.SSP1IF == 0)
 17293                           
 17294                           ;incstack = 0
 17295                           ; Regs used in _mssp1_waitForEvent: [wreg]
 17296  25D5  0020               	movlb	0	; select bank0
 17297  25D6  1991               	btfsc	17,3	;volatile
 17298  25D7  0008               	return
 17299  25D8                     l464:	
 17300                           ;i2c1_driver.c: 74: {
 17301                           ;i2c1_driver.c: 75: while(1)
 17302                           
 17303                           
 17304                           ;i2c1_driver.c: 76: {
 17305                           ;i2c1_driver.c: 77: if(PIR1bits.SSP1IF) break;
 17306  25D8  0020               	movlb	0	; select bank0
 17307  25D9  1991               	btfsc	17,3	;volatile
 17308  25DA  0008               	return
 17309                           
 17310                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(1000000/4000000.0)));
 17311  25DB  3008               	movlw	8
 17312  25DC                     u8807:	
 17313  25DC  0B89               	decfsz	9,f
 17314  25DD  2DDC               	goto	u8807
 17315  25DE  0000               	nop
 17316  25DF  2DD8               	goto	l464
 17317  25E0                     __end_of_mssp1_waitForEvent:	
 17318                           
 17319                           	psect	text57
 17320  199B                     __ptext57:	
 17321 ;; *************** function _i2c_ISR *****************
 17322 ;; Defined at:
 17323 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 17324 ;; Parameters:    Size  Location     Type
 17325 ;;		None
 17326 ;; Auto vars:     Size  Location     Type
 17327 ;;		None
 17328 ;; Return value:  Size  Location     Type
 17329 ;;                  1    wreg      void 
 17330 ;; Registers used:
 17331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17332 ;; Tracked objects:
 17333 ;;		On entry : 0/0
 17334 ;;		On exit  : 0/0
 17335 ;;		Unchanged: 0/0
 17336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17339 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17340 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17341 ;;Total ram usage:        1 bytes
 17342 ;; Hardware stack levels used:    1
 17343 ;; Hardware stack levels required when called:    9
 17344 ;; This function calls:
 17345 ;;		_do_I2C_DO_ACK
 17346 ;;		_do_I2C_DO_ADDRESS_NACK
 17347 ;;		_do_I2C_DO_NACK_RESTART
 17348 ;;		_do_I2C_DO_NACK_STOP
 17349 ;;		_do_I2C_IDLE
 17350 ;;		_do_I2C_RCEN
 17351 ;;		_do_I2C_RESET
 17352 ;;		_do_I2C_RX
 17353 ;;		_do_I2C_SEND_ADR_READ
 17354 ;;		_do_I2C_SEND_ADR_WRITE
 17355 ;;		_do_I2C_SEND_RESTART
 17356 ;;		_do_I2C_SEND_RESTART_READ
 17357 ;;		_do_I2C_SEND_RESTART_WRITE
 17358 ;;		_do_I2C_SEND_STOP
 17359 ;;		_do_I2C_TX
 17360 ;;		_do_I2C_TX_EMPTY
 17361 ;;		_i2c1_driver_isNACK
 17362 ;;		_mssp1_clearIRQ
 17363 ;; This function is called by:
 17364 ;;		_i2c_poller
 17365 ;;		_i2c_open
 17366 ;;		_INTERRUPT_InterruptManager
 17367 ;; This function uses a non-reentrant model
 17368 ;;
 17369                           
 17370                           
 17371                           ;psect for function _i2c_ISR
 17372  199B                     _i2c_ISR:	
 17373                           
 17374                           ;Skip over the trampoline to the duplicate function for level 1
 17375  199B  1C7E               	btfss	126,0
 17376  199C  299F               	goto	l7056
 17377  199D  31A7  2FC0         	ljmp	i1l8220
 17378  199F                     _i2c_ISR$intlevel0:	
 17379  199F                     l7056:	
 17380                           ;incstack = 0
 17381                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17382                           
 17383                           
 17384                           ;i2c_master.c: 421: mssp1_clearIRQ();
 17385  199F  31A4  24A4  3199   	fcall	_mssp1_clearIRQ
 17386                           
 17387                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 17388  19A2  0022               	movlb	2	; select bank2
 17389  19A3  1DA0               	btfss	_i2c_status^(0+256),3
 17390  19A4  29B0               	goto	l7064
 17391  19A5  31A6  261D  3199   	fcall	_i2c1_driver_isNACK
 17392  19A8  1C03               	btfss	3,0
 17393  19A9  29B0               	goto	l7064
 17394                           
 17395                           ;i2c_master.c: 428: {
 17396                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 17397  19AA  300F               	movlw	15
 17398  19AB  0020               	movlb	0	; select bank0
 17399  19AC  00B6               	movwf	??_i2c_ISR
 17400  19AD  0836               	movf	??_i2c_ISR,w
 17401  19AE  0022               	movlb	2	; select bank2
 17402  19AF  00AA               	movwf	(_i2c_status^(0+256)+10)
 17403  19B0                     l7064:	
 17404                           
 17405                           ;i2c_master.c: 430: }
 17406                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 17407  19B0  0022               	movlb	2	; select bank2
 17408  19B1  352A               	lslf	(_i2c_status^(0+256)+10),w
 17409  19B2  3E20               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 17410  19B3  0086               	movwf	6
 17411  19B4  3002               	movlw	2	; select bank4/5
 17412  19B5  0087               	movwf	7
 17413  19B6  3F41               	moviw [1]fsr1
 17414  19B7  008A               	movwf	10
 17415  19B8  3F40               	moviw [0]fsr1
 17416  19B9  000A               	callw
 17417  19BA  3199               	pagesel	$
 17418  19BB  0020               	movlb	0	; select bank0
 17419  19BC  00B6               	movwf	??_i2c_ISR
 17420  19BD  0836               	movf	??_i2c_ISR,w
 17421  19BE  0022               	movlb	2	; select bank2
 17422  19BF  00AA               	movwf	(_i2c_status^(0+256)+10)
 17423  19C0  0008               	return
 17424  19C1                     __end_of_i2c_ISR:	
 17425                           
 17426                           	psect	text58
 17427  24A4                     __ptext58:	
 17428 ;; *************** function _mssp1_clearIRQ *****************
 17429 ;; Defined at:
 17430 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 17431 ;; Parameters:    Size  Location     Type
 17432 ;;		None
 17433 ;; Auto vars:     Size  Location     Type
 17434 ;;		None
 17435 ;; Return value:  Size  Location     Type
 17436 ;;                  1    wreg      void 
 17437 ;; Registers used:
 17438 ;;		None
 17439 ;; Tracked objects:
 17440 ;;		On entry : 0/0
 17441 ;;		On exit  : 0/0
 17442 ;;		Unchanged: 0/0
 17443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17448 ;;Total ram usage:        0 bytes
 17449 ;; Hardware stack levels used:    1
 17450 ;; Hardware stack levels required when called:    6
 17451 ;; This function calls:
 17452 ;;		Nothing
 17453 ;; This function is called by:
 17454 ;;		_i2c_ISR
 17455 ;;		_i2c_open
 17456 ;;		_i2c_close
 17457 ;; This function uses a non-reentrant model
 17458 ;;
 17459                           
 17460                           
 17461                           ;psect for function _mssp1_clearIRQ
 17462  24A4                     _mssp1_clearIRQ:	
 17463                           
 17464                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 17465                           
 17466                           ;incstack = 0
 17467                           ; Regs used in _mssp1_clearIRQ: []
 17468  24A4  0020               	movlb	0	; select bank0
 17469  24A5  1191               	bcf	17,3	;volatile
 17470  24A6  0008               	return
 17471  24A7                     __end_of_mssp1_clearIRQ:	
 17472                           
 17473                           	psect	text59
 17474  1C58                     __ptext59:	
 17475 ;; *************** function _do_I2C_RX *****************
 17476 ;; Defined at:
 17477 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 17478 ;; Parameters:    Size  Location     Type
 17479 ;;		None
 17480 ;; Auto vars:     Size  Location     Type
 17481 ;;		None
 17482 ;; Return value:  Size  Location     Type
 17483 ;;                  1    wreg      enum E8364
 17484 ;; Registers used:
 17485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17486 ;; Tracked objects:
 17487 ;;		On entry : 0/0
 17488 ;;		On exit  : 0/0
 17489 ;;		Unchanged: 0/0
 17490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17493 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17494 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17495 ;;Total ram usage:        1 bytes
 17496 ;; Hardware stack levels used:    1
 17497 ;; Hardware stack levels required when called:    8
 17498 ;; This function calls:
 17499 ;;		_do_I2C_DO_NACK_RESTART
 17500 ;;		_do_I2C_DO_NACK_STOP
 17501 ;;		_i2c1_driver_getRXData
 17502 ;;		_i2c1_driver_sendACK
 17503 ;;		_returnReset
 17504 ;;		_returnStop
 17505 ;; This function is called by:
 17506 ;;		_i2c_ISR
 17507 ;;		i1_i2c_ISR
 17508 ;; This function uses a non-reentrant model
 17509 ;;
 17510                           
 17511                           
 17512                           ;psect for function _do_I2C_RX
 17513  1C58                     _do_I2C_RX:	
 17514                           
 17515                           ;Skip over the trampoline to the duplicate function for level 1
 17516  1C58  1C7E               	btfss	126,0
 17517  1C59  2C5C               	goto	l6986
 17518  1C5A  319B  2B93         	ljmp	i1l8012
 17519  1C5C                     _do_I2C_RX$intlevel0:	
 17520  1C5C                     l6986:	
 17521                           ;incstack = 0
 17522                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17523                           
 17524                           
 17525                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 17526  1C5C  0022               	movlb	2	; select bank2
 17527  1C5D  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 17528  1C5E  0086               	movwf	6
 17529  1C5F  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 17530  1C60  0087               	movwf	7
 17531  1C61  31A4  249E  319C   	fcall	_i2c1_driver_getRXData
 17532  1C64  0081               	movwf	1
 17533  1C65  3001               	movlw	1
 17534  1C66  0022               	movlb	2	; select bank2
 17535  1C67  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 17536  1C68  3000               	movlw	0
 17537  1C69  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 17538                           
 17539                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 17540  1C6A  3001               	movlw	1
 17541  1C6B  02A4               	subwf	(_i2c_status^(0+256)+4),f
 17542  1C6C  3000               	movlw	0
 17543  1C6D  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 17544  1C6E  0824               	movf	(_i2c_status^(0+256)+4),w
 17545  1C6F  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 17546  1C70  1903               	btfsc	3,2
 17547  1C71  2C76               	goto	l725
 17548                           
 17549                           ;i2c_master.c: 361: {
 17550                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 17551  1C72  31A4  24CF         	fcall	_i2c1_driver_sendACK
 17552                           
 17553                           ;i2c_master.c: 363: return I2C_RCEN;
 17554  1C74  3005               	movlw	5
 17555                           
 17556                           ;i2c_master.c: 364: }
 17557  1C75  0008               	return
 17558  1C76                     l725:	
 17559                           
 17560                           ;i2c_master.c: 365: else
 17561                           ;i2c_master.c: 366: {
 17562                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 17563  1C76  1520               	bsf	_i2c_status^(0+256),2
 17564                           
 17565                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 17566  1C77  2C7E               	goto	l7010
 17567  1C78                     l7000:	
 17568                           ;i2c_master.c: 369: {
 17569                           ;i2c_master.c: 370: case i2c_restart_write:
 17570                           
 17571                           
 17572                           ;i2c_master.c: 371: case i2c_restart_read:
 17573                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 17574  1C78  31A5  2575         	fcall	_do_I2C_DO_NACK_RESTART
 17575  1C7A  0008               	return
 17576  1C7B                     l7004:	
 17577                           ;i2c_master.c: 374: case i2c_continue:
 17578                           
 17579                           ;i2c_master.c: 373: default:
 17580                           
 17581                           
 17582                           ;i2c_master.c: 375: case i2c_stop:
 17583                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 17584  1C7B  31A5  256D         	fcall	_do_I2C_DO_NACK_STOP
 17585                           
 17586                           ;i2c_master.c: 377: }
 17587  1C7D  0008               	return
 17588  1C7E                     l7010:	
 17589  1C7E  0022               	movlb	2	; select bank2
 17590  1C7F  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 17591  1C80  0020               	movlb	0	; select bank0
 17592  1C81  00B1               	movwf	??_do_I2C_RX
 17593  1C82  0831               	movf	??_do_I2C_RX,w
 17594  1C83  00B1               	movwf	returnReset@p
 17595  1C84  300C               	movlw	12
 17596  1C85  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 17597  1C86  0086               	movwf	6
 17598  1C87  3001               	movlw	1	; select bank2/3
 17599  1C88  0087               	movwf	7
 17600  1C89  3F41               	moviw [1]fsr1
 17601  1C8A  008A               	movwf	10
 17602  1C8B  3F40               	moviw [0]fsr1
 17603  1C8C  000A               	callw
 17604  1C8D  319C               	pagesel	$
 17605                           
 17606                           ; Switch size 1, requested type "space"
 17607                           ; Number of cases is 4, Range of values is 1 to 4
 17608                           ; switch strategies available:
 17609                           ; Name         Instructions Cycles
 17610                           ; simple_byte           13     7 (average)
 17611                           ; direct_byte           17     9 (fixed)
 17612                           ; jumptable            263     9 (fixed)
 17613                           ;	Chosen strategy is simple_byte
 17614  1C8E  3A01               	xorlw	1	; case 1
 17615  1C8F  1903               	skipnz
 17616  1C90  2C7B               	goto	l7004
 17617  1C91  3A03               	xorlw	3	; case 2
 17618  1C92  1903               	skipnz
 17619  1C93  2C78               	goto	l7000
 17620  1C94  3A01               	xorlw	1	; case 3
 17621  1C95  1903               	skipnz
 17622  1C96  2C78               	goto	l7000
 17623  1C97  3A07               	xorlw	7	; case 4
 17624  1C98  1903               	skipnz
 17625  1C99  2C7B               	goto	l7004
 17626  1C9A  2C7B               	goto	l7004
 17627  1C9B  0008               	return
 17628  1C9C                     __end_of_do_I2C_RX:	
 17629                           
 17630                           	psect	text60
 17631  1FA7                     __ptext60:	
 17632 ;; *************** function _do_I2C_TX *****************
 17633 ;; Defined at:
 17634 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 17635 ;; Parameters:    Size  Location     Type
 17636 ;;		None
 17637 ;; Auto vars:     Size  Location     Type
 17638 ;;		None
 17639 ;; Return value:  Size  Location     Type
 17640 ;;                  1    wreg      enum E8364
 17641 ;; Registers used:
 17642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17643 ;; Tracked objects:
 17644 ;;		On entry : 0/0
 17645 ;;		On exit  : 0/0
 17646 ;;		Unchanged: 0/0
 17647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17649 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17650 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17651 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17652 ;;Total ram usage:        4 bytes
 17653 ;; Hardware stack levels used:    1
 17654 ;; Hardware stack levels required when called:    8
 17655 ;; This function calls:
 17656 ;;		_do_I2C_SEND_RESTART_READ
 17657 ;;		_do_I2C_SEND_RESTART_WRITE
 17658 ;;		_do_I2C_SEND_STOP
 17659 ;;		_i2c1_driver_TXData
 17660 ;;		_i2c1_driver_isNACK
 17661 ;;		_returnReset
 17662 ;;		_returnStop
 17663 ;; This function is called by:
 17664 ;;		_i2c_ISR
 17665 ;;		i1_i2c_ISR
 17666 ;; This function uses a non-reentrant model
 17667 ;;
 17668                           
 17669                           
 17670                           ;psect for function _do_I2C_TX
 17671  1FA7                     _do_I2C_TX:	
 17672                           
 17673                           ;Skip over the trampoline to the duplicate function for level 1
 17674  1FA7  1C7E               	btfss	126,0
 17675  1FA8  2FAB               	goto	l6956
 17676  1FA9  319E  2E0D         	ljmp	i1l7982
 17677  1FAB                     _do_I2C_TX$intlevel0:	
 17678  1FAB                     l6956:	
 17679                           ;incstack = 0
 17680                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17681                           
 17682                           
 17683                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 17684  1FAB  31A6  261D  319F   	fcall	_i2c1_driver_isNACK
 17685  1FAE  1803               	btfsc	3,0
 17686  1FAF  2FBA               	goto	l6974
 17687  1FB0  2FD8               	goto	l709
 17688  1FB1                     l6960:	
 17689                           ;i2c_master.c: 338: {
 17690                           ;i2c_master.c: 339: case i2c_restart_read:
 17691                           
 17692                           ;i2c_master.c: 336: {
 17693                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 17694                           
 17695                           
 17696                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 17697  1FB1  31A5  2545         	fcall	_do_I2C_SEND_RESTART_READ
 17698  1FB3  0008               	return
 17699  1FB4                     l6964:	
 17700                           ;i2c_master.c: 341: case i2c_restart_write:
 17701                           
 17702                           
 17703                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 17704  1FB4  31A5  254D         	fcall	_do_I2C_SEND_RESTART_WRITE
 17705  1FB6  0008               	return
 17706  1FB7                     l6968:	
 17707                           ;i2c_master.c: 344: case i2c_continue:
 17708                           
 17709                           ;i2c_master.c: 343: default:
 17710                           
 17711                           
 17712                           ;i2c_master.c: 345: case i2c_stop:
 17713                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 17714  1FB7  31A5  255D         	fcall	_do_I2C_SEND_STOP
 17715                           
 17716                           ;i2c_master.c: 347: }
 17717  1FB9  0008               	return
 17718  1FBA                     l6974:	
 17719  1FBA  0022               	movlb	2	; select bank2
 17720  1FBB  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 17721  1FBC  0020               	movlb	0	; select bank0
 17722  1FBD  00B2               	movwf	??_do_I2C_TX
 17723  1FBE  0832               	movf	??_do_I2C_TX,w
 17724  1FBF  00B1               	movwf	returnReset@p
 17725  1FC0  3012               	movlw	18
 17726  1FC1  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 17727  1FC2  0086               	movwf	6
 17728  1FC3  3001               	movlw	1	; select bank2/3
 17729  1FC4  0087               	movwf	7
 17730  1FC5  3F41               	moviw [1]fsr1
 17731  1FC6  008A               	movwf	10
 17732  1FC7  3F40               	moviw [0]fsr1
 17733  1FC8  000A               	callw
 17734  1FC9  319F               	pagesel	$
 17735                           
 17736                           ; Switch size 1, requested type "space"
 17737                           ; Number of cases is 4, Range of values is 1 to 4
 17738                           ; switch strategies available:
 17739                           ; Name         Instructions Cycles
 17740                           ; simple_byte           13     7 (average)
 17741                           ; direct_byte           17     9 (fixed)
 17742                           ; jumptable            263     9 (fixed)
 17743                           ;	Chosen strategy is simple_byte
 17744  1FCA  3A01               	xorlw	1	; case 1
 17745  1FCB  1903               	skipnz
 17746  1FCC  2FB7               	goto	l6968
 17747  1FCD  3A03               	xorlw	3	; case 2
 17748  1FCE  1903               	skipnz
 17749  1FCF  2FB1               	goto	l6960
 17750  1FD0  3A01               	xorlw	1	; case 3
 17751  1FD1  1903               	skipnz
 17752  1FD2  2FB4               	goto	l6964
 17753  1FD3  3A07               	xorlw	7	; case 4
 17754  1FD4  1903               	skipnz
 17755  1FD5  2FB7               	goto	l6968
 17756  1FD6  2FB7               	goto	l6968
 17757                           
 17758                           ;i2c_master.c: 348: }
 17759  1FD7  0008               	return
 17760  1FD8                     l709:	
 17761                           
 17762                           ;i2c_master.c: 349: else
 17763                           ;i2c_master.c: 350: {
 17764                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 17765  1FD8  0022               	movlb	2	; select bank2
 17766  1FD9  11A0               	bcf	_i2c_status^(0+256),3
 17767                           
 17768                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 17769  1FDA  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 17770  1FDB  0020               	movlb	0	; select bank0
 17771  1FDC  00B3               	movwf	??_do_I2C_TX+1
 17772  1FDD  0022               	movlb	2	; select bank2
 17773  1FDE  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 17774  1FDF  0020               	movlb	0	; select bank0
 17775  1FE0  00B2               	movwf	??_do_I2C_TX
 17776  1FE1  0022               	movlb	2	; select bank2
 17777  1FE2  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 17778  1FE3  1903               	skipnz
 17779  1FE4  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 17780  1FE5  0020               	movlb	0	; select bank0
 17781  1FE6  0832               	movf	??_do_I2C_TX,w
 17782  1FE7  0084               	movwf	4
 17783  1FE8  0833               	movf	??_do_I2C_TX+1,w
 17784  1FE9  0085               	movwf	5
 17785  1FEA  0800               	movf	0,w	;code access
 17786  1FEB  31A5  2503  319F   	fcall	_i2c1_driver_TXData
 17787                           
 17788                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 17789  1FEE  3001               	movlw	1
 17790  1FEF  0022               	movlb	2	; select bank2
 17791  1FF0  02A4               	subwf	(_i2c_status^(0+256)+4),f
 17792  1FF1  3000               	movlw	0
 17793  1FF2  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 17794  1FF3  0824               	movf	(_i2c_status^(0+256)+4),w
 17795  1FF4  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 17796  1FF5  1D03               	btfss	3,2
 17797  1FF6  2FF9               	goto	l6982
 17798  1FF7  3006               	movlw	6
 17799  1FF8  2FFA               	goto	L33
 17800  1FF9                     l6982:	
 17801  1FF9  3003               	movlw	3
 17802  1FFA                     L33:	
 17803  1FFA  0020               	movlb	0	; select bank0
 17804  1FFB  00B4               	movwf	_do_I2C_TX$1114
 17805  1FFC  3000               	movlw	0
 17806  1FFD  00B5               	movwf	_do_I2C_TX$1114+1
 17807  1FFE  0834               	movf	_do_I2C_TX$1114,w
 17808  1FFF  0008               	return
 17809  2000                     __end_of_do_I2C_TX:	
 17810                           
 17811                           	psect	text61
 17812  1A3E                     __ptext61:	
 17813 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 17814 ;; Defined at:
 17815 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 17816 ;; Parameters:    Size  Location     Type
 17817 ;;		None
 17818 ;; Auto vars:     Size  Location     Type
 17819 ;;		None
 17820 ;; Return value:  Size  Location     Type
 17821 ;;                  1    wreg      enum E8364
 17822 ;; Registers used:
 17823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17824 ;; Tracked objects:
 17825 ;;		On entry : 0/0
 17826 ;;		On exit  : 0/0
 17827 ;;		Unchanged: 0/0
 17828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17831 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17832 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17833 ;;Total ram usage:        1 bytes
 17834 ;; Hardware stack levels used:    1
 17835 ;; Hardware stack levels required when called:    8
 17836 ;; This function calls:
 17837 ;;		_do_I2C_SEND_RESTART
 17838 ;;		_do_I2C_SEND_STOP
 17839 ;;		_returnReset
 17840 ;;		_returnStop
 17841 ;; This function is called by:
 17842 ;;		_i2c_ISR
 17843 ;;		i1_i2c_ISR
 17844 ;; This function uses a non-reentrant model
 17845 ;;
 17846                           
 17847                           
 17848                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 17849  1A3E                     _do_I2C_DO_ADDRESS_NACK:	
 17850                           
 17851                           ;Skip over the trampoline to the duplicate function for level 1
 17852  1A3E  1C7E               	btfss	126,0
 17853  1A3F  2A42               	goto	l6940
 17854  1A40  3198  28E6         	ljmp	i1l7966
 17855  1A42                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
 17856  1A42                     l6940:	
 17857                           ;incstack = 0
 17858                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17859                           
 17860                           
 17861                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 17862  1A42  0022               	movlb	2	; select bank2
 17863  1A43  11A0               	bcf	_i2c_status^(0+256),3
 17864                           
 17865                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 17866  1A44  3002               	movlw	2
 17867  1A45  0020               	movlb	0	; select bank0
 17868  1A46  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 17869  1A47  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 17870  1A48  0022               	movlb	2	; select bank2
 17871  1A49  00AB               	movwf	(_i2c_status^(0+256)+11)
 17872                           
 17873                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 17874  1A4A  2A51               	goto	l6954
 17875  1A4B                     l6944:	
 17876                           ;i2c_master.c: 324: {
 17877                           ;i2c_master.c: 325: case i2c_restart_read:
 17878                           
 17879                           
 17880                           ;i2c_master.c: 326: case i2c_restart_write:
 17881                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 17882  1A4B  31A5  2555         	fcall	_do_I2C_SEND_RESTART
 17883  1A4D  0008               	return
 17884  1A4E                     l6948:	
 17885                           ;i2c_master.c: 328: default:
 17886                           
 17887                           
 17888                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 17889  1A4E  31A5  255D         	fcall	_do_I2C_SEND_STOP
 17890                           
 17891                           ;i2c_master.c: 330: }
 17892  1A50  0008               	return
 17893  1A51                     l6954:	
 17894  1A51  0022               	movlb	2	; select bank2
 17895  1A52  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 17896  1A53  0020               	movlb	0	; select bank0
 17897  1A54  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 17898  1A55  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 17899  1A56  00B1               	movwf	returnReset@p
 17900  1A57  3010               	movlw	16
 17901  1A58  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 17902  1A59  0086               	movwf	6
 17903  1A5A  3001               	movlw	1	; select bank2/3
 17904  1A5B  0087               	movwf	7
 17905  1A5C  3F41               	moviw [1]fsr1
 17906  1A5D  008A               	movwf	10
 17907  1A5E  3F40               	moviw [0]fsr1
 17908  1A5F  000A               	callw
 17909  1A60  319A               	pagesel	$
 17910                           
 17911                           ; Switch size 1, requested type "space"
 17912                           ; Number of cases is 2, Range of values is 2 to 3
 17913                           ; switch strategies available:
 17914                           ; Name         Instructions Cycles
 17915                           ; simple_byte            7     4 (average)
 17916                           ; direct_byte           13     9 (fixed)
 17917                           ; jumptable            263     9 (fixed)
 17918                           ;	Chosen strategy is simple_byte
 17919  1A61  3A02               	xorlw	2	; case 2
 17920  1A62  1903               	skipnz
 17921  1A63  2A4B               	goto	l6944
 17922  1A64  3A01               	xorlw	1	; case 3
 17923  1A65  1903               	skipnz
 17924  1A66  2A4B               	goto	l6944
 17925  1A67  2A4E               	goto	l6948
 17926  1A68  0008               	return
 17927  1A69                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 17928                           
 17929                           	psect	text62
 17930  2575                     __ptext62:	
 17931 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 17932 ;; Defined at:
 17933 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 17934 ;; Parameters:    Size  Location     Type
 17935 ;;		None
 17936 ;; Auto vars:     Size  Location     Type
 17937 ;;		None
 17938 ;; Return value:  Size  Location     Type
 17939 ;;                  1    wreg      enum E8364
 17940 ;; Registers used:
 17941 ;;		wreg, status,2, status,0, pclath, cstack
 17942 ;; Tracked objects:
 17943 ;;		On entry : 0/0
 17944 ;;		On exit  : 0/0
 17945 ;;		Unchanged: 0/0
 17946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17951 ;;Total ram usage:        0 bytes
 17952 ;; Hardware stack levels used:    1
 17953 ;; Hardware stack levels required when called:    7
 17954 ;; This function calls:
 17955 ;;		_i2c1_driver_sendNACK
 17956 ;; This function is called by:
 17957 ;;		_do_I2C_RX
 17958 ;;		_i2c_ISR
 17959 ;;		i1_i2c_ISR
 17960 ;; This function uses a non-reentrant model
 17961 ;;
 17962                           
 17963                           
 17964                           ;psect for function _do_I2C_DO_NACK_RESTART
 17965  2575                     _do_I2C_DO_NACK_RESTART:	
 17966                           
 17967                           ;Skip over the trampoline to the duplicate function for level 1
 17968  2575  1C7E               	btfss	126,0
 17969  2576  2D79               	goto	l6876
 17970  2577  31A4  2CC7         	ljmp	i1l7654
 17971  2579                     _do_I2C_DO_NACK_RESTART$intlevel0:	
 17972  2579                     l6876:	
 17973                           ;incstack = 0
 17974                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 17975                           
 17976                           
 17977                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 17978  2579  3188  2000         	fcall	_i2c1_driver_sendNACK
 17979                           
 17980                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 17981  257B  3009               	movlw	9
 17982  257C  0008               	return
 17983  257D                     __end_of_do_I2C_DO_NACK_RESTART:	
 17984                           
 17985                           	psect	text63
 17986  256D                     __ptext63:	
 17987 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 17988 ;; Defined at:
 17989 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 17990 ;; Parameters:    Size  Location     Type
 17991 ;;		None
 17992 ;; Auto vars:     Size  Location     Type
 17993 ;;		None
 17994 ;; Return value:  Size  Location     Type
 17995 ;;                  1    wreg      enum E8364
 17996 ;; Registers used:
 17997 ;;		wreg, status,2, status,0, pclath, cstack
 17998 ;; Tracked objects:
 17999 ;;		On entry : 0/0
 18000 ;;		On exit  : 0/0
 18001 ;;		Unchanged: 0/0
 18002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18007 ;;Total ram usage:        0 bytes
 18008 ;; Hardware stack levels used:    1
 18009 ;; Hardware stack levels required when called:    7
 18010 ;; This function calls:
 18011 ;;		_i2c1_driver_sendNACK
 18012 ;; This function is called by:
 18013 ;;		_do_I2C_RX
 18014 ;;		_i2c_ISR
 18015 ;;		i1_i2c_ISR
 18016 ;; This function uses a non-reentrant model
 18017 ;;
 18018                           
 18019                           
 18020                           ;psect for function _do_I2C_DO_NACK_STOP
 18021  256D                     _do_I2C_DO_NACK_STOP:	
 18022                           
 18023                           ;Skip over the trampoline to the duplicate function for level 1
 18024  256D  1C7E               	btfss	126,0
 18025  256E  2D71               	goto	l6870
 18026  256F  31A4  2CC3         	ljmp	i1l7648
 18027  2571                     _do_I2C_DO_NACK_STOP$intlevel0:	
 18028  2571                     l6870:	
 18029                           ;incstack = 0
 18030                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 18031                           
 18032                           
 18033                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 18034  2571  3188  2000         	fcall	_i2c1_driver_sendNACK
 18035                           
 18036                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 18037  2573  300A               	movlw	10
 18038  2574  0008               	return
 18039  2575                     __end_of_do_I2C_DO_NACK_STOP:	
 18040                           
 18041                           	psect	text64
 18042  2565                     __ptext64:	
 18043 ;; *************** function _do_I2C_DO_ACK *****************
 18044 ;; Defined at:
 18045 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 18046 ;; Parameters:    Size  Location     Type
 18047 ;;		None
 18048 ;; Auto vars:     Size  Location     Type
 18049 ;;		None
 18050 ;; Return value:  Size  Location     Type
 18051 ;;                  1    wreg      enum E8364
 18052 ;; Registers used:
 18053 ;;		wreg, status,2, status,0, pclath, cstack
 18054 ;; Tracked objects:
 18055 ;;		On entry : 0/0
 18056 ;;		On exit  : 0/0
 18057 ;;		Unchanged: 0/0
 18058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18063 ;;Total ram usage:        0 bytes
 18064 ;; Hardware stack levels used:    1
 18065 ;; Hardware stack levels required when called:    7
 18066 ;; This function calls:
 18067 ;;		_i2c1_driver_sendACK
 18068 ;; This function is called by:
 18069 ;;		_i2c_ISR
 18070 ;;		i1_i2c_ISR
 18071 ;; This function uses a non-reentrant model
 18072 ;;
 18073                           
 18074                           
 18075                           ;psect for function _do_I2C_DO_ACK
 18076  2565                     _do_I2C_DO_ACK:	
 18077                           
 18078                           ;Skip over the trampoline to the duplicate function for level 1
 18079  2565  1C7E               	btfss	126,0
 18080  2566  2D69               	goto	l6934
 18081  2567  31A4  2CBF         	ljmp	i1l7960
 18082  2569                     _do_I2C_DO_ACK$intlevel0:	
 18083  2569                     l6934:	
 18084                           ;incstack = 0
 18085                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 18086                           
 18087                           
 18088                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 18089  2569  31A4  24CF         	fcall	_i2c1_driver_sendACK
 18090                           
 18091                           ;i2c_master.c: 302: return I2C_RCEN;
 18092  256B  3005               	movlw	5
 18093  256C  0008               	return
 18094  256D                     __end_of_do_I2C_DO_ACK:	
 18095                           
 18096                           	psect	text65
 18097  25AB                     __ptext65:	
 18098 ;; *************** function _do_I2C_RCEN *****************
 18099 ;; Defined at:
 18100 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 18101 ;; Parameters:    Size  Location     Type
 18102 ;;		None
 18103 ;; Auto vars:     Size  Location     Type
 18104 ;;		None
 18105 ;; Return value:  Size  Location     Type
 18106 ;;                  1    wreg      enum E8364
 18107 ;; Registers used:
 18108 ;;		wreg, status,2, status,0, pclath, cstack
 18109 ;; Tracked objects:
 18110 ;;		On entry : 0/0
 18111 ;;		On exit  : 0/0
 18112 ;;		Unchanged: 0/0
 18113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18118 ;;Total ram usage:        0 bytes
 18119 ;; Hardware stack levels used:    1
 18120 ;; Hardware stack levels required when called:    7
 18121 ;; This function calls:
 18122 ;;		_i2c1_driver_startRX
 18123 ;; This function is called by:
 18124 ;;		_i2c_ISR
 18125 ;;		i1_i2c_ISR
 18126 ;; This function uses a non-reentrant model
 18127 ;;
 18128                           
 18129                           
 18130                           ;psect for function _do_I2C_RCEN
 18131  25AB                     _do_I2C_RCEN:	
 18132                           
 18133                           ;Skip over the trampoline to the duplicate function for level 1
 18134  25AB  1C7E               	btfss	126,0
 18135  25AC  2DAF               	goto	l6926
 18136  25AD  31A4  2CF1         	ljmp	i1l6060
 18137  25AF                     _do_I2C_RCEN$intlevel0:	
 18138  25AF                     l6926:	
 18139                           ;incstack = 0
 18140                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 18141                           
 18142                           
 18143                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 18144  25AF  0022               	movlb	2	; select bank2
 18145  25B0  11A0               	bcf	_i2c_status^(0+256),3
 18146                           
 18147                           ;i2c_master.c: 295: i2c1_driver_startRX();
 18148  25B1  31A4  249B         	fcall	_i2c1_driver_startRX
 18149                           
 18150                           ;i2c_master.c: 296: return I2C_RX;
 18151  25B3  3004               	movlw	4
 18152  25B4  0008               	return
 18153  25B5                     __end_of_do_I2C_RCEN:	
 18154                           
 18155                           	psect	text66
 18156  25CA                     __ptext66:	
 18157 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 18158 ;; Defined at:
 18159 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 18160 ;; Parameters:    Size  Location     Type
 18161 ;;		None
 18162 ;; Auto vars:     Size  Location     Type
 18163 ;;		None
 18164 ;; Return value:  Size  Location     Type
 18165 ;;                  1    wreg      enum E8364
 18166 ;; Registers used:
 18167 ;;		wreg, status,2, status,0, pclath, cstack
 18168 ;; Tracked objects:
 18169 ;;		On entry : 0/0
 18170 ;;		On exit  : 0/0
 18171 ;;		Unchanged: 0/0
 18172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18177 ;;Total ram usage:        0 bytes
 18178 ;; Hardware stack levels used:    1
 18179 ;; Hardware stack levels required when called:    7
 18180 ;; This function calls:
 18181 ;;		_i2c1_driver_TXData
 18182 ;; This function is called by:
 18183 ;;		_i2c_ISR
 18184 ;;		i1_i2c_ISR
 18185 ;; This function uses a non-reentrant model
 18186 ;;
 18187                           
 18188                           
 18189                           ;psect for function _do_I2C_SEND_ADR_WRITE
 18190  25CA                     _do_I2C_SEND_ADR_WRITE:	
 18191                           
 18192                           ;Skip over the trampoline to the duplicate function for level 1
 18193  25CA  1C7E               	btfss	126,0
 18194  25CB  2DCE               	goto	l6918
 18195  25CC  31A5  2D2E         	ljmp	i1l7952
 18196  25CE                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
 18197  25CE                     l6918:	
 18198                           ;incstack = 0
 18199                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18200                           
 18201                           
 18202                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 18203  25CE  0022               	movlb	2	; select bank2
 18204  25CF  15A0               	bsf	_i2c_status^(0+256),3
 18205                           
 18206                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 18207  25D0  3521               	lslf	(_i2c_status^(0+256)+1),w
 18208  25D1  31A5  2503         	fcall	_i2c1_driver_TXData
 18209                           
 18210                           ;i2c_master.c: 289: return I2C_TX;
 18211  25D3  3003               	movlw	3
 18212  25D4  0008               	return
 18213  25D5                     __end_of_do_I2C_SEND_ADR_WRITE:	
 18214                           
 18215                           	psect	text67
 18216  25F7                     __ptext67:	
 18217 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 18218 ;; Defined at:
 18219 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 18220 ;; Parameters:    Size  Location     Type
 18221 ;;		None
 18222 ;; Auto vars:     Size  Location     Type
 18223 ;;		None
 18224 ;; Return value:  Size  Location     Type
 18225 ;;                  1    wreg      enum E8364
 18226 ;; Registers used:
 18227 ;;		wreg, status,2, status,0, pclath, cstack
 18228 ;; Tracked objects:
 18229 ;;		On entry : 0/0
 18230 ;;		On exit  : 0/0
 18231 ;;		Unchanged: 0/0
 18232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18237 ;;Total ram usage:        0 bytes
 18238 ;; Hardware stack levels used:    1
 18239 ;; Hardware stack levels required when called:    7
 18240 ;; This function calls:
 18241 ;;		_i2c1_driver_TXData
 18242 ;; This function is called by:
 18243 ;;		_i2c_ISR
 18244 ;;		i1_i2c_ISR
 18245 ;; This function uses a non-reentrant model
 18246 ;;
 18247                           
 18248                           
 18249                           ;psect for function _do_I2C_SEND_ADR_READ
 18250  25F7                     _do_I2C_SEND_ADR_READ:	
 18251                           
 18252                           ;Skip over the trampoline to the duplicate function for level 1
 18253  25F7  1C7E               	btfss	126,0
 18254  25F8  2DFB               	goto	l6910
 18255  25F9  31A5  2D35         	ljmp	i1l7944
 18256  25FB                     _do_I2C_SEND_ADR_READ$intlevel0:	
 18257  25FB                     l6910:	
 18258                           ;incstack = 0
 18259                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 18260                           
 18261                           
 18262                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 18263  25FB  0022               	movlb	2	; select bank2
 18264  25FC  15A0               	bsf	_i2c_status^(0+256),3
 18265                           
 18266                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 18267  25FD  1403               	setc
 18268  25FE  0D21               	rlf	(_i2c_status^(0+256)+1),w
 18269  25FF  31A5  2503         	fcall	_i2c1_driver_TXData
 18270                           
 18271                           ;i2c_master.c: 282: return I2C_RCEN;
 18272  2601  3005               	movlw	5
 18273  2602  0008               	return
 18274  2603                     __end_of_do_I2C_SEND_ADR_READ:	
 18275                           
 18276                           	psect	text68
 18277  255D                     __ptext68:	
 18278 ;; *************** function _do_I2C_SEND_STOP *****************
 18279 ;; Defined at:
 18280 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 18281 ;; Parameters:    Size  Location     Type
 18282 ;;		None
 18283 ;; Auto vars:     Size  Location     Type
 18284 ;;		None
 18285 ;; Return value:  Size  Location     Type
 18286 ;;                  1    wreg      enum E8364
 18287 ;; Registers used:
 18288 ;;		wreg, status,2, status,0, pclath, cstack
 18289 ;; Tracked objects:
 18290 ;;		On entry : 0/0
 18291 ;;		On exit  : 0/0
 18292 ;;		Unchanged: 0/0
 18293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18298 ;;Total ram usage:        0 bytes
 18299 ;; Hardware stack levels used:    1
 18300 ;; Hardware stack levels required when called:    7
 18301 ;; This function calls:
 18302 ;;		_i2c1_driver_stop
 18303 ;; This function is called by:
 18304 ;;		_do_I2C_DO_ADDRESS_NACK
 18305 ;;		_do_I2C_TX
 18306 ;;		_do_I2C_TX_EMPTY
 18307 ;;		_i2c_ISR
 18308 ;;		i1_i2c_ISR
 18309 ;; This function uses a non-reentrant model
 18310 ;;
 18311                           
 18312                           
 18313                           ;psect for function _do_I2C_SEND_STOP
 18314  255D                     _do_I2C_SEND_STOP:	
 18315                           
 18316                           ;Skip over the trampoline to the duplicate function for level 1
 18317  255D  1C7E               	btfss	126,0
 18318  255E  2D61               	goto	l6864
 18319  255F  31A4  2CBB         	ljmp	i1l7642
 18320  2561                     _do_I2C_SEND_STOP$intlevel0:	
 18321  2561                     l6864:	
 18322                           ;incstack = 0
 18323                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 18324                           
 18325                           
 18326                           ;i2c_master.c: 274: i2c1_driver_stop();
 18327  2561  31A4  2498         	fcall	_i2c1_driver_stop
 18328                           
 18329                           ;i2c_master.c: 275: return I2C_IDLE;
 18330  2563  3000               	movlw	0
 18331  2564  0008               	return
 18332  2565                     __end_of_do_I2C_SEND_STOP:	
 18333                           
 18334                           	psect	text69
 18335  2555                     __ptext69:	
 18336 ;; *************** function _do_I2C_SEND_RESTART *****************
 18337 ;; Defined at:
 18338 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 18339 ;; Parameters:    Size  Location     Type
 18340 ;;		None
 18341 ;; Auto vars:     Size  Location     Type
 18342 ;;		None
 18343 ;; Return value:  Size  Location     Type
 18344 ;;                  1    wreg      enum E8364
 18345 ;; Registers used:
 18346 ;;		wreg, status,2, status,0, pclath, cstack
 18347 ;; Tracked objects:
 18348 ;;		On entry : 0/0
 18349 ;;		On exit  : 0/0
 18350 ;;		Unchanged: 0/0
 18351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18356 ;;Total ram usage:        0 bytes
 18357 ;; Hardware stack levels used:    1
 18358 ;; Hardware stack levels required when called:    7
 18359 ;; This function calls:
 18360 ;;		_i2c1_driver_restart
 18361 ;; This function is called by:
 18362 ;;		_do_I2C_DO_ADDRESS_NACK
 18363 ;;		_do_I2C_TX_EMPTY
 18364 ;;		_i2c_ISR
 18365 ;;		i1_i2c_ISR
 18366 ;; This function uses a non-reentrant model
 18367 ;;
 18368                           
 18369                           
 18370                           ;psect for function _do_I2C_SEND_RESTART
 18371  2555                     _do_I2C_SEND_RESTART:	
 18372                           
 18373                           ;Skip over the trampoline to the duplicate function for level 1
 18374  2555  1C7E               	btfss	126,0
 18375  2556  2D59               	goto	l6858
 18376  2557  31A4  2CB7         	ljmp	i1l7636
 18377  2559                     _do_I2C_SEND_RESTART$intlevel0:	
 18378  2559                     l6858:	
 18379                           ;incstack = 0
 18380                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18381                           
 18382                           
 18383                           ;i2c_master.c: 268: i2c1_driver_restart();
 18384  2559  31A4  2495         	fcall	_i2c1_driver_restart
 18385                           
 18386                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 18387  255B  3001               	movlw	1
 18388  255C  0008               	return
 18389  255D                     __end_of_do_I2C_SEND_RESTART:	
 18390                           
 18391                           	psect	text70
 18392  254D                     __ptext70:	
 18393 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 18394 ;; Defined at:
 18395 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 18396 ;; Parameters:    Size  Location     Type
 18397 ;;		None
 18398 ;; Auto vars:     Size  Location     Type
 18399 ;;		None
 18400 ;; Return value:  Size  Location     Type
 18401 ;;                  1    wreg      enum E8364
 18402 ;; Registers used:
 18403 ;;		wreg, status,2, status,0, pclath, cstack
 18404 ;; Tracked objects:
 18405 ;;		On entry : 0/0
 18406 ;;		On exit  : 0/0
 18407 ;;		Unchanged: 0/0
 18408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18413 ;;Total ram usage:        0 bytes
 18414 ;; Hardware stack levels used:    1
 18415 ;; Hardware stack levels required when called:    7
 18416 ;; This function calls:
 18417 ;;		_i2c1_driver_restart
 18418 ;; This function is called by:
 18419 ;;		_do_I2C_TX
 18420 ;;		_i2c_ISR
 18421 ;;		i1_i2c_ISR
 18422 ;; This function uses a non-reentrant model
 18423 ;;
 18424                           
 18425                           
 18426                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 18427  254D                     _do_I2C_SEND_RESTART_WRITE:	
 18428                           
 18429                           ;Skip over the trampoline to the duplicate function for level 1
 18430  254D  1C7E               	btfss	126,0
 18431  254E  2D51               	goto	l6852
 18432  254F  31A4  2CB3         	ljmp	i1l7630
 18433  2551                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
 18434  2551                     l6852:	
 18435                           ;incstack = 0
 18436                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18437                           
 18438                           
 18439                           ;i2c_master.c: 262: i2c1_driver_restart();
 18440  2551  31A4  2495         	fcall	_i2c1_driver_restart
 18441                           
 18442                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 18443  2553  3002               	movlw	2
 18444  2554  0008               	return
 18445  2555                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 18446                           
 18447                           	psect	text71
 18448  2545                     __ptext71:	
 18449 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 18450 ;; Defined at:
 18451 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 18452 ;; Parameters:    Size  Location     Type
 18453 ;;		None
 18454 ;; Auto vars:     Size  Location     Type
 18455 ;;		None
 18456 ;; Return value:  Size  Location     Type
 18457 ;;                  1    wreg      enum E8364
 18458 ;; Registers used:
 18459 ;;		wreg, status,2, status,0, pclath, cstack
 18460 ;; Tracked objects:
 18461 ;;		On entry : 0/0
 18462 ;;		On exit  : 0/0
 18463 ;;		Unchanged: 0/0
 18464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18469 ;;Total ram usage:        0 bytes
 18470 ;; Hardware stack levels used:    1
 18471 ;; Hardware stack levels required when called:    7
 18472 ;; This function calls:
 18473 ;;		_i2c1_driver_restart
 18474 ;; This function is called by:
 18475 ;;		_do_I2C_TX
 18476 ;;		_i2c_ISR
 18477 ;;		i1_i2c_ISR
 18478 ;; This function uses a non-reentrant model
 18479 ;;
 18480                           
 18481                           
 18482                           ;psect for function _do_I2C_SEND_RESTART_READ
 18483  2545                     _do_I2C_SEND_RESTART_READ:	
 18484                           
 18485                           ;Skip over the trampoline to the duplicate function for level 1
 18486  2545  1C7E               	btfss	126,0
 18487  2546  2D49               	goto	l6846
 18488  2547  31A4  2CAF         	ljmp	i1l7624
 18489  2549                     _do_I2C_SEND_RESTART_READ$intlevel0:	
 18490  2549                     l6846:	
 18491                           ;incstack = 0
 18492                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 18493                           
 18494                           
 18495                           ;i2c_master.c: 256: i2c1_driver_restart();
 18496  2549  31A4  2495         	fcall	_i2c1_driver_restart
 18497                           
 18498                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 18499  254B  3001               	movlw	1
 18500  254C  0008               	return
 18501  254D                     __end_of_do_I2C_SEND_RESTART_READ:	
 18502                           
 18503                           	psect	text72
 18504  2598                     __ptext72:	
 18505 ;; *************** function _do_I2C_IDLE *****************
 18506 ;; Defined at:
 18507 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 18508 ;; Parameters:    Size  Location     Type
 18509 ;;		None
 18510 ;; Auto vars:     Size  Location     Type
 18511 ;;		None
 18512 ;; Return value:  Size  Location     Type
 18513 ;;                  1    wreg      enum E8364
 18514 ;; Registers used:
 18515 ;;		wreg, status,2
 18516 ;; Tracked objects:
 18517 ;;		On entry : 0/0
 18518 ;;		On exit  : 0/0
 18519 ;;		Unchanged: 0/0
 18520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18525 ;;Total ram usage:        0 bytes
 18526 ;; Hardware stack levels used:    1
 18527 ;; Hardware stack levels required when called:    6
 18528 ;; This function calls:
 18529 ;;		Nothing
 18530 ;; This function is called by:
 18531 ;;		_i2c_ISR
 18532 ;;		i1_i2c_ISR
 18533 ;; This function uses a non-reentrant model
 18534 ;;
 18535                           
 18536                           
 18537                           ;psect for function _do_I2C_IDLE
 18538  2598                     _do_I2C_IDLE:	
 18539                           
 18540                           ;Skip over the trampoline to the duplicate function for level 1
 18541  2598  1C7E               	btfss	126,0
 18542  2599  2D9C               	goto	l6902
 18543  259A  31A4  2CE2         	ljmp	i1l6036
 18544  259C                     _do_I2C_IDLE$intlevel0:	
 18545  259C                     l6902:	
 18546                           ;incstack = 0
 18547                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 18548                           
 18549                           
 18550                           ;i2c_master.c: 249: i2c_status.busy = 0;
 18551  259C  0022               	movlb	2	; select bank2
 18552  259D  1020               	bcf	_i2c_status^(0+256),0
 18553                           
 18554                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 18555  259E  01AB               	clrf	(_i2c_status^(0+256)+11)
 18556                           
 18557                           ;i2c_master.c: 251: return I2C_RESET;
 18558  259F  300E               	movlw	14
 18559  25A0  0008               	return
 18560  25A1                     __end_of_do_I2C_IDLE:	
 18561                           
 18562                           	psect	text73
 18563  25BF                     __ptext73:	
 18564 ;; *************** function _do_I2C_RESET *****************
 18565 ;; Defined at:
 18566 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 18567 ;; Parameters:    Size  Location     Type
 18568 ;;		None
 18569 ;; Auto vars:     Size  Location     Type
 18570 ;;		None
 18571 ;; Return value:  Size  Location     Type
 18572 ;;                  1    wreg      enum E8364
 18573 ;; Registers used:
 18574 ;;		wreg, status,2, status,0, pclath, cstack
 18575 ;; Tracked objects:
 18576 ;;		On entry : 0/0
 18577 ;;		On exit  : 0/0
 18578 ;;		Unchanged: 0/0
 18579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18584 ;;Total ram usage:        0 bytes
 18585 ;; Hardware stack levels used:    1
 18586 ;; Hardware stack levels required when called:    7
 18587 ;; This function calls:
 18588 ;;		_i2c1_driver_resetBus
 18589 ;; This function is called by:
 18590 ;;		_i2c_ISR
 18591 ;;		i1_i2c_ISR
 18592 ;; This function uses a non-reentrant model
 18593 ;;
 18594                           
 18595                           
 18596                           ;psect for function _do_I2C_RESET
 18597  25BF                     _do_I2C_RESET:	
 18598                           
 18599                           ;Skip over the trampoline to the duplicate function for level 1
 18600  25BF  1C7E               	btfss	126,0
 18601  25C0  2DC3               	goto	l6892
 18602  25C1  31A5  2D27         	ljmp	i1l6026
 18603  25C3                     _do_I2C_RESET$intlevel0:	
 18604  25C3                     l6892:	
 18605                           ;incstack = 0
 18606                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 18607                           
 18608                           
 18609                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 18610  25C3  3198  2029         	fcall	_i2c1_driver_resetBus
 18611                           
 18612                           ;i2c_master.c: 242: i2c_status.busy = 0;
 18613  25C5  0022               	movlb	2	; select bank2
 18614  25C6  1020               	bcf	_i2c_status^(0+256),0
 18615                           
 18616                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 18617  25C7  01AB               	clrf	(_i2c_status^(0+256)+11)
 18618                           
 18619                           ;i2c_master.c: 244: return I2C_RESET;
 18620  25C8  300E               	movlw	14
 18621  25C9  0008               	return
 18622  25CA                     __end_of_do_I2C_RESET:	
 18623                           
 18624                           	psect	text74
 18625  1A69                     __ptext74:	
 18626 ;; *************** function _do_I2C_TX_EMPTY *****************
 18627 ;; Defined at:
 18628 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 18629 ;; Parameters:    Size  Location     Type
 18630 ;;		None
 18631 ;; Auto vars:     Size  Location     Type
 18632 ;;		None
 18633 ;; Return value:  Size  Location     Type
 18634 ;;                  1    wreg      enum E8364
 18635 ;; Registers used:
 18636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18637 ;; Tracked objects:
 18638 ;;		On entry : 0/0
 18639 ;;		On exit  : 0/0
 18640 ;;		Unchanged: 0/0
 18641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18644 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18645 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18646 ;;Total ram usage:        1 bytes
 18647 ;; Hardware stack levels used:    1
 18648 ;; Hardware stack levels required when called:    8
 18649 ;; This function calls:
 18650 ;;		_do_I2C_SEND_RESTART
 18651 ;;		_do_I2C_SEND_STOP
 18652 ;;		_mssp1_setIRQ
 18653 ;;		_returnReset
 18654 ;;		_returnStop
 18655 ;; This function is called by:
 18656 ;;		_i2c_ISR
 18657 ;;		i1_i2c_ISR
 18658 ;; This function uses a non-reentrant model
 18659 ;;
 18660                           
 18661                           
 18662                           ;psect for function _do_I2C_TX_EMPTY
 18663  1A69                     _do_I2C_TX_EMPTY:	
 18664                           
 18665                           ;Skip over the trampoline to the duplicate function for level 1
 18666  1A69  1C7E               	btfss	126,0
 18667  1A6A  2A6D               	goto	l7012
 18668  1A6B  3199  29EA         	ljmp	i1l8038
 18669  1A6D                     _do_I2C_TX_EMPTY$intlevel0:	
 18670  1A6D                     l7012:	
 18671                           ;incstack = 0
 18672                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18673                           
 18674                           
 18675                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 18676  1A6D  0022               	movlb	2	; select bank2
 18677  1A6E  1520               	bsf	_i2c_status^(0+256),2
 18678                           
 18679                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 18680  1A6F  2A7A               	goto	l7030
 18681  1A70                     l7014:	
 18682                           ;i2c_master.c: 386: {
 18683                           ;i2c_master.c: 387: case i2c_restart_read:
 18684                           
 18685                           
 18686                           ;i2c_master.c: 388: case i2c_restart_write:
 18687                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 18688  1A70  31A5  2555         	fcall	_do_I2C_SEND_RESTART
 18689  1A72  0008               	return
 18690  1A73                     l7018:	
 18691                           ;i2c_master.c: 390: case i2c_continue:
 18692                           
 18693                           
 18694                           ;i2c_master.c: 391: mssp1_setIRQ();
 18695  1A73  31A4  24A1         	fcall	_mssp1_setIRQ
 18696                           
 18697                           ;i2c_master.c: 392: return I2C_TX;
 18698  1A75  3003               	movlw	3
 18699  1A76  0008               	return
 18700  1A77                     l7024:	
 18701                           ;i2c_master.c: 394: case i2c_stop:
 18702                           
 18703                           ;i2c_master.c: 393: default:
 18704                           
 18705                           
 18706                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 18707  1A77  31A5  255D         	fcall	_do_I2C_SEND_STOP
 18708                           
 18709                           ;i2c_master.c: 396: }
 18710  1A79  0008               	return
 18711  1A7A                     l7030:	
 18712  1A7A  0022               	movlb	2	; select bank2
 18713  1A7B  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 18714  1A7C  0020               	movlb	0	; select bank0
 18715  1A7D  00B1               	movwf	??_do_I2C_TX_EMPTY
 18716  1A7E  0831               	movf	??_do_I2C_TX_EMPTY,w
 18717  1A7F  00B1               	movwf	returnReset@p
 18718  1A80  300C               	movlw	12
 18719  1A81  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 18720  1A82  0086               	movwf	6
 18721  1A83  3001               	movlw	1	; select bank2/3
 18722  1A84  0087               	movwf	7
 18723  1A85  3F41               	moviw [1]fsr1
 18724  1A86  008A               	movwf	10
 18725  1A87  3F40               	moviw [0]fsr1
 18726  1A88  000A               	callw
 18727  1A89  319A               	pagesel	$
 18728                           
 18729                           ; Switch size 1, requested type "space"
 18730                           ; Number of cases is 4, Range of values is 1 to 4
 18731                           ; switch strategies available:
 18732                           ; Name         Instructions Cycles
 18733                           ; simple_byte           13     7 (average)
 18734                           ; direct_byte           17     9 (fixed)
 18735                           ; jumptable            263     9 (fixed)
 18736                           ;	Chosen strategy is simple_byte
 18737  1A8A  3A01               	xorlw	1	; case 1
 18738  1A8B  1903               	skipnz
 18739  1A8C  2A77               	goto	l7024
 18740  1A8D  3A03               	xorlw	3	; case 2
 18741  1A8E  1903               	skipnz
 18742  1A8F  2A70               	goto	l7014
 18743  1A90  3A01               	xorlw	1	; case 3
 18744  1A91  1903               	skipnz
 18745  1A92  2A70               	goto	l7014
 18746  1A93  3A07               	xorlw	7	; case 4
 18747  1A94  1903               	skipnz
 18748  1A95  2A73               	goto	l7018
 18749  1A96  2A77               	goto	l7024
 18750  1A97  0008               	return
 18751  1A98                     __end_of_do_I2C_TX_EMPTY:	
 18752                           
 18753                           	psect	text75
 18754  24A1                     __ptext75:	
 18755 ;; *************** function _mssp1_setIRQ *****************
 18756 ;; Defined at:
 18757 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 18758 ;; Parameters:    Size  Location     Type
 18759 ;;		None
 18760 ;; Auto vars:     Size  Location     Type
 18761 ;;		None
 18762 ;; Return value:  Size  Location     Type
 18763 ;;                  1    wreg      void 
 18764 ;; Registers used:
 18765 ;;		None
 18766 ;; Tracked objects:
 18767 ;;		On entry : 0/0
 18768 ;;		On exit  : 0/0
 18769 ;;		Unchanged: 0/0
 18770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18775 ;;Total ram usage:        0 bytes
 18776 ;; Hardware stack levels used:    1
 18777 ;; Hardware stack levels required when called:    6
 18778 ;; This function calls:
 18779 ;;		Nothing
 18780 ;; This function is called by:
 18781 ;;		_do_I2C_TX_EMPTY
 18782 ;; This function uses a non-reentrant model
 18783 ;;
 18784                           
 18785                           
 18786                           ;psect for function _mssp1_setIRQ
 18787  24A1                     _mssp1_setIRQ:	
 18788                           
 18789                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 18790                           
 18791                           ;incstack = 0
 18792                           ; Regs used in _mssp1_setIRQ: []
 18793  24A1  0020               	movlb	0	; select bank0
 18794  24A2  1591               	bsf	17,3	;volatile
 18795  24A3  0008               	return
 18796  24A4                     __end_of_mssp1_setIRQ:	
 18797                           
 18798                           	psect	text76
 18799  261D                     __ptext76:	
 18800 ;; *************** function _i2c1_driver_isNACK *****************
 18801 ;; Defined at:
 18802 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 18803 ;; Parameters:    Size  Location     Type
 18804 ;;		None
 18805 ;; Auto vars:     Size  Location     Type
 18806 ;;		None
 18807 ;; Return value:  Size  Location     Type
 18808 ;;		None               void
 18809 ;; Registers used:
 18810 ;;		wreg, status,2, status,0
 18811 ;; Tracked objects:
 18812 ;;		On entry : 0/0
 18813 ;;		On exit  : 0/0
 18814 ;;		Unchanged: 0/0
 18815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18819 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18820 ;;Total ram usage:        1 bytes
 18821 ;; Hardware stack levels used:    1
 18822 ;; Hardware stack levels required when called:    6
 18823 ;; This function calls:
 18824 ;;		Nothing
 18825 ;; This function is called by:
 18826 ;;		_do_I2C_TX
 18827 ;;		_i2c_ISR
 18828 ;; This function uses a non-reentrant model
 18829 ;;
 18830                           
 18831                           
 18832                           ;psect for function _i2c1_driver_isNACK
 18833  261D                     _i2c1_driver_isNACK:	
 18834                           
 18835                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 18836                           
 18837                           ;incstack = 0
 18838                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 18839  261D  0024               	movlb	4	; select bank4
 18840  261E  0816               	movf	22,w	;volatile
 18841  261F  39BF               	andlw	-65
 18842  2620  3840               	iorlw	64
 18843  2621  0096               	movwf	22	;volatile
 18844  2622  0E16               	swapf	22,w	;volatile
 18845  2623  0C89               	rrf	9,f
 18846  2624  0C89               	rrf	9,f
 18847  2625  3901               	andlw	1
 18848  2626  0020               	movlb	0	; select bank0
 18849  2627  00B1               	movwf	??_i2c1_driver_isNACK
 18850  2628  0C31               	rrf	??_i2c1_driver_isNACK,w
 18851  2629  0008               	return
 18852  262A                     __end_of_i2c1_driver_isNACK:	
 18853                           
 18854                           	psect	text77
 18855  2503                     __ptext77:	
 18856 ;; *************** function _i2c1_driver_TXData *****************
 18857 ;; Defined at:
 18858 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 18859 ;; Parameters:    Size  Location     Type
 18860 ;;  d               1    wreg     unsigned char 
 18861 ;; Auto vars:     Size  Location     Type
 18862 ;;  d               1   17[BANK0 ] unsigned char 
 18863 ;; Return value:  Size  Location     Type
 18864 ;;                  1    wreg      void 
 18865 ;; Registers used:
 18866 ;;		wreg
 18867 ;; Tracked objects:
 18868 ;;		On entry : 0/0
 18869 ;;		On exit  : 0/0
 18870 ;;		Unchanged: 0/0
 18871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18873 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18875 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18876 ;;Total ram usage:        1 bytes
 18877 ;; Hardware stack levels used:    1
 18878 ;; Hardware stack levels required when called:    6
 18879 ;; This function calls:
 18880 ;;		Nothing
 18881 ;; This function is called by:
 18882 ;;		_do_I2C_SEND_ADR_READ
 18883 ;;		_do_I2C_SEND_ADR_WRITE
 18884 ;;		_do_I2C_TX
 18885 ;; This function uses a non-reentrant model
 18886 ;;
 18887                           
 18888                           
 18889                           ;psect for function _i2c1_driver_TXData
 18890  2503                     _i2c1_driver_TXData:	
 18891                           
 18892                           ;incstack = 0
 18893                           ; Regs used in _i2c1_driver_TXData: [wreg]
 18894                           ;i2c1_driver_TXData@d stored from wreg
 18895  2503  0020               	movlb	0	; select bank0
 18896  2504  00B1               	movwf	i2c1_driver_TXData@d
 18897                           
 18898                           ;i2c1_driver.c: 188: SSP1BUF = d;
 18899  2505  0831               	movf	i2c1_driver_TXData@d,w
 18900  2506  0024               	movlb	4	; select bank4
 18901  2507  0091               	movwf	17	;volatile
 18902  2508  0008               	return
 18903  2509                     __end_of_i2c1_driver_TXData:	
 18904                           
 18905                           	psect	text78
 18906  249E                     __ptext78:	
 18907 ;; *************** function _i2c1_driver_getRXData *****************
 18908 ;; Defined at:
 18909 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 18910 ;; Parameters:    Size  Location     Type
 18911 ;;		None
 18912 ;; Auto vars:     Size  Location     Type
 18913 ;;		None
 18914 ;; Return value:  Size  Location     Type
 18915 ;;                  1    wreg      unsigned char 
 18916 ;; Registers used:
 18917 ;;		wreg
 18918 ;; Tracked objects:
 18919 ;;		On entry : 0/0
 18920 ;;		On exit  : 0/0
 18921 ;;		Unchanged: 0/0
 18922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18927 ;;Total ram usage:        0 bytes
 18928 ;; Hardware stack levels used:    1
 18929 ;; Hardware stack levels required when called:    6
 18930 ;; This function calls:
 18931 ;;		Nothing
 18932 ;; This function is called by:
 18933 ;;		_do_I2C_RX
 18934 ;; This function uses a non-reentrant model
 18935 ;;
 18936                           
 18937                           
 18938                           ;psect for function _i2c1_driver_getRXData
 18939  249E                     _i2c1_driver_getRXData:	
 18940                           
 18941                           ;i2c1_driver.c: 173: return SSP1BUF;
 18942                           
 18943                           ;incstack = 0
 18944                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 18945  249E  0024               	movlb	4	; select bank4
 18946  249F  0811               	movf	17,w	;volatile
 18947  24A0  0008               	return
 18948  24A1                     __end_of_i2c1_driver_getRXData:	
 18949                           
 18950                           	psect	text79
 18951  0800                     __ptext79:	
 18952 ;; *************** function _i2c1_driver_sendNACK *****************
 18953 ;; Defined at:
 18954 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 18955 ;; Parameters:    Size  Location     Type
 18956 ;;		None
 18957 ;; Auto vars:     Size  Location     Type
 18958 ;;		None
 18959 ;; Return value:  Size  Location     Type
 18960 ;;                  1    wreg      void 
 18961 ;; Registers used:
 18962 ;;		None
 18963 ;; Tracked objects:
 18964 ;;		On entry : 0/0
 18965 ;;		On exit  : 0/0
 18966 ;;		Unchanged: 0/0
 18967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18972 ;;Total ram usage:        0 bytes
 18973 ;; Hardware stack levels used:    1
 18974 ;; Hardware stack levels required when called:    6
 18975 ;; This function calls:
 18976 ;;		Nothing
 18977 ;; This function is called by:
 18978 ;;		_do_I2C_DO_NACK_STOP
 18979 ;;		_do_I2C_DO_NACK_RESTART
 18980 ;; This function uses a non-reentrant model
 18981 ;;
 18982                           
 18983                           
 18984                           ;psect for function _i2c1_driver_sendNACK
 18985  0800                     _i2c1_driver_sendNACK:	
 18986                           
 18987                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 18988                           
 18989                           ;incstack = 0
 18990                           ; Regs used in _i2c1_driver_sendNACK: []
 18991  0800  0024               	movlb	4	; select bank4
 18992  0801  1696               	bsf	22,5	;volatile
 18993                           
 18994                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 18995  0802  1616               	bsf	22,4	;volatile
 18996  0803  0008               	return
 18997  0804                     __end_of_i2c1_driver_sendNACK:	
 18998                           
 18999                           	psect	text80
 19000  1829                     __ptext80:	
 19001 ;; *************** function _i2c1_driver_resetBus *****************
 19002 ;; Defined at:
 19003 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 19004 ;; Parameters:    Size  Location     Type
 19005 ;;		None
 19006 ;; Auto vars:     Size  Location     Type
 19007 ;;		None
 19008 ;; Return value:  Size  Location     Type
 19009 ;;                  1    wreg      void 
 19010 ;; Registers used:
 19011 ;;		None
 19012 ;; Tracked objects:
 19013 ;;		On entry : 0/0
 19014 ;;		On exit  : 0/0
 19015 ;;		Unchanged: 0/0
 19016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19021 ;;Total ram usage:        0 bytes
 19022 ;; Hardware stack levels used:    1
 19023 ;; Hardware stack levels required when called:    6
 19024 ;; This function calls:
 19025 ;;		Nothing
 19026 ;; This function is called by:
 19027 ;;		_do_I2C_RESET
 19028 ;; This function uses a non-reentrant model
 19029 ;;
 19030                           
 19031                           
 19032                           ;psect for function _i2c1_driver_resetBus
 19033  1829                     _i2c1_driver_resetBus:	
 19034                           
 19035                           ;incstack = 0
 19036                           ; Regs used in _i2c1_driver_resetBus: []
 19037  1829  0008               	return
 19038  182A                     __end_of_i2c1_driver_resetBus:	
 19039                           
 19040                           	psect	text81
 19041  249B                     __ptext81:	
 19042 ;; *************** function _i2c1_driver_startRX *****************
 19043 ;; Defined at:
 19044 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 19045 ;; Parameters:    Size  Location     Type
 19046 ;;		None
 19047 ;; Auto vars:     Size  Location     Type
 19048 ;;		None
 19049 ;; Return value:  Size  Location     Type
 19050 ;;                  1    wreg      void 
 19051 ;; Registers used:
 19052 ;;		None
 19053 ;; Tracked objects:
 19054 ;;		On entry : 0/0
 19055 ;;		On exit  : 0/0
 19056 ;;		Unchanged: 0/0
 19057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19062 ;;Total ram usage:        0 bytes
 19063 ;; Hardware stack levels used:    1
 19064 ;; Hardware stack levels required when called:    6
 19065 ;; This function calls:
 19066 ;;		Nothing
 19067 ;; This function is called by:
 19068 ;;		_do_I2C_RCEN
 19069 ;; This function uses a non-reentrant model
 19070 ;;
 19071                           
 19072                           
 19073                           ;psect for function _i2c1_driver_startRX
 19074  249B                     _i2c1_driver_startRX:	
 19075                           
 19076                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 19077                           
 19078                           ;incstack = 0
 19079                           ; Regs used in _i2c1_driver_startRX: []
 19080  249B  0024               	movlb	4	; select bank4
 19081  249C  1596               	bsf	22,3	;volatile
 19082  249D  0008               	return
 19083  249E                     __end_of_i2c1_driver_startRX:	
 19084                           
 19085                           	psect	text82
 19086  24FD                     __ptext82:	
 19087 ;; *************** function _returnReset *****************
 19088 ;; Defined at:
 19089 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 19090 ;; Parameters:    Size  Location     Type
 19091 ;;  p               1   17[BANK0 ] PTR void 
 19092 ;;		 -> NULL(0), 
 19093 ;; Auto vars:     Size  Location     Type
 19094 ;;		None
 19095 ;; Return value:  Size  Location     Type
 19096 ;;                  1    wreg      enum E8198
 19097 ;; Registers used:
 19098 ;;		wreg
 19099 ;; Tracked objects:
 19100 ;;		On entry : 0/0
 19101 ;;		On exit  : 0/0
 19102 ;;		Unchanged: 0/0
 19103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19104 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19107 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19108 ;;Total ram usage:        1 bytes
 19109 ;; Hardware stack levels used:    1
 19110 ;; Hardware stack levels required when called:    6
 19111 ;; This function calls:
 19112 ;;		Nothing
 19113 ;; This function is called by:
 19114 ;;		_i2c_open
 19115 ;;		_do_I2C_DO_ADDRESS_NACK
 19116 ;;		_do_I2C_TX
 19117 ;;		_do_I2C_RX
 19118 ;;		_do_I2C_TX_EMPTY
 19119 ;;		i1_do_I2C_DO_ADDRESS_NACK
 19120 ;;		i1_do_I2C_TX
 19121 ;;		i1_do_I2C_RX
 19122 ;;		i1_do_I2C_TX_EMPTY
 19123 ;; This function uses a non-reentrant model
 19124 ;;
 19125                           
 19126                           
 19127                           ;psect for function _returnReset
 19128  24FD                     _returnReset:	
 19129                           
 19130                           ;Skip over the trampoline to the duplicate function for level 1
 19131  24FD  1C7E               	btfss	126,0
 19132  24FE  2D01               	goto	l6886
 19133  24FF  3187  2FFE         	ljmp	i1l7664
 19134  2501                     _returnReset$intlevel0:	
 19135  2501                     l6886:	
 19136                           ;incstack = 0
 19137                           ; Regs used in _returnReset: [wreg]
 19138                           
 19139                           
 19140                           ;i2c_master.c: 450: return i2c_reset_link;
 19141  2501  3005               	movlw	5
 19142  2502  0008               	return
 19143  2503                     __end_of_returnReset:	
 19144                           
 19145                           	psect	text83
 19146  24F7                     __ptext83:	
 19147 ;; *************** function _returnStop *****************
 19148 ;; Defined at:
 19149 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 19150 ;; Parameters:    Size  Location     Type
 19151 ;;  p               1   17[BANK0 ] PTR void 
 19152 ;;		 -> NULL(0), 
 19153 ;; Auto vars:     Size  Location     Type
 19154 ;;		None
 19155 ;; Return value:  Size  Location     Type
 19156 ;;                  1    wreg      enum E8198
 19157 ;; Registers used:
 19158 ;;		wreg
 19159 ;; Tracked objects:
 19160 ;;		On entry : 0/0
 19161 ;;		On exit  : 0/0
 19162 ;;		Unchanged: 0/0
 19163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19164 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19167 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19168 ;;Total ram usage:        1 bytes
 19169 ;; Hardware stack levels used:    1
 19170 ;; Hardware stack levels required when called:    6
 19171 ;; This function calls:
 19172 ;;		Nothing
 19173 ;; This function is called by:
 19174 ;;		_i2c_open
 19175 ;;		_setCallBack
 19176 ;;		_do_I2C_DO_ADDRESS_NACK
 19177 ;;		_do_I2C_TX
 19178 ;;		_do_I2C_RX
 19179 ;;		_do_I2C_TX_EMPTY
 19180 ;;		i1_do_I2C_DO_ADDRESS_NACK
 19181 ;;		i1_do_I2C_TX
 19182 ;;		i1_do_I2C_RX
 19183 ;;		i1_do_I2C_TX_EMPTY
 19184 ;; This function uses a non-reentrant model
 19185 ;;
 19186                           
 19187                           
 19188                           ;psect for function _returnStop
 19189  24F7                     _returnStop:	
 19190                           
 19191                           ;Skip over the trampoline to the duplicate function for level 1
 19192  24F7  1C7E               	btfss	126,0
 19193  24F8  2CFB               	goto	l6882
 19194  24F9  3180  2802         	ljmp	i1l7660
 19195  24FB                     _returnStop$intlevel0:	
 19196  24FB                     l6882:	
 19197                           ;incstack = 0
 19198                           ; Regs used in _returnStop: [wreg]
 19199                           
 19200                           
 19201                           ;i2c_master.c: 445: return i2c_stop;
 19202  24FB  3001               	movlw	1
 19203  24FC  0008               	return
 19204  24FD                     __end_of_returnStop:	
 19205                           
 19206                           	psect	text84
 19207  2498                     __ptext84:	
 19208 ;; *************** function _i2c1_driver_stop *****************
 19209 ;; Defined at:
 19210 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 19211 ;; Parameters:    Size  Location     Type
 19212 ;;		None
 19213 ;; Auto vars:     Size  Location     Type
 19214 ;;		None
 19215 ;; Return value:  Size  Location     Type
 19216 ;;                  1    wreg      void 
 19217 ;; Registers used:
 19218 ;;		None
 19219 ;; Tracked objects:
 19220 ;;		On entry : 0/0
 19221 ;;		On exit  : 0/0
 19222 ;;		Unchanged: 0/0
 19223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19228 ;;Total ram usage:        0 bytes
 19229 ;; Hardware stack levels used:    1
 19230 ;; Hardware stack levels required when called:    6
 19231 ;; This function calls:
 19232 ;;		Nothing
 19233 ;; This function is called by:
 19234 ;;		_do_I2C_SEND_STOP
 19235 ;; This function uses a non-reentrant model
 19236 ;;
 19237                           
 19238                           
 19239                           ;psect for function _i2c1_driver_stop
 19240  2498                     _i2c1_driver_stop:	
 19241                           
 19242                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 19243                           
 19244                           ;incstack = 0
 19245                           ; Regs used in _i2c1_driver_stop: []
 19246  2498  0024               	movlb	4	; select bank4
 19247  2499  1516               	bsf	22,2	;volatile
 19248  249A  0008               	return
 19249  249B                     __end_of_i2c1_driver_stop:	
 19250                           
 19251                           	psect	text85
 19252  2495                     __ptext85:	
 19253 ;; *************** function _i2c1_driver_restart *****************
 19254 ;; Defined at:
 19255 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 19256 ;; Parameters:    Size  Location     Type
 19257 ;;		None
 19258 ;; Auto vars:     Size  Location     Type
 19259 ;;		None
 19260 ;; Return value:  Size  Location     Type
 19261 ;;                  1    wreg      void 
 19262 ;; Registers used:
 19263 ;;		None
 19264 ;; Tracked objects:
 19265 ;;		On entry : 0/0
 19266 ;;		On exit  : 0/0
 19267 ;;		Unchanged: 0/0
 19268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19273 ;;Total ram usage:        0 bytes
 19274 ;; Hardware stack levels used:    1
 19275 ;; Hardware stack levels required when called:    6
 19276 ;; This function calls:
 19277 ;;		Nothing
 19278 ;; This function is called by:
 19279 ;;		_do_I2C_SEND_RESTART_READ
 19280 ;;		_do_I2C_SEND_RESTART_WRITE
 19281 ;;		_do_I2C_SEND_RESTART
 19282 ;; This function uses a non-reentrant model
 19283 ;;
 19284                           
 19285                           
 19286                           ;psect for function _i2c1_driver_restart
 19287  2495                     _i2c1_driver_restart:	
 19288                           
 19289                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 19290                           
 19291                           ;incstack = 0
 19292                           ; Regs used in _i2c1_driver_restart: []
 19293  2495  0024               	movlb	4	; select bank4
 19294  2496  1496               	bsf	22,1	;volatile
 19295  2497  0008               	return
 19296  2498                     __end_of_i2c1_driver_restart:	
 19297                           
 19298                           	psect	text86
 19299  24CF                     __ptext86:	
 19300 ;; *************** function _i2c1_driver_sendACK *****************
 19301 ;; Defined at:
 19302 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 19303 ;; Parameters:    Size  Location     Type
 19304 ;;		None
 19305 ;; Auto vars:     Size  Location     Type
 19306 ;;		None
 19307 ;; Return value:  Size  Location     Type
 19308 ;;                  1    wreg      void 
 19309 ;; Registers used:
 19310 ;;		None
 19311 ;; Tracked objects:
 19312 ;;		On entry : 0/0
 19313 ;;		On exit  : 0/0
 19314 ;;		Unchanged: 0/0
 19315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19320 ;;Total ram usage:        0 bytes
 19321 ;; Hardware stack levels used:    1
 19322 ;; Hardware stack levels required when called:    6
 19323 ;; This function calls:
 19324 ;;		Nothing
 19325 ;; This function is called by:
 19326 ;;		_do_I2C_DO_ACK
 19327 ;;		_do_I2C_RX
 19328 ;; This function uses a non-reentrant model
 19329 ;;
 19330                           
 19331                           
 19332                           ;psect for function _i2c1_driver_sendACK
 19333  24CF                     _i2c1_driver_sendACK:	
 19334                           
 19335                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 19336                           
 19337                           ;incstack = 0
 19338                           ; Regs used in _i2c1_driver_sendACK: []
 19339  24CF  0024               	movlb	4	; select bank4
 19340  24D0  1296               	bcf	22,5	;volatile
 19341                           
 19342                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 19343  24D1  1616               	bsf	22,4	;volatile
 19344  24D2  0008               	return
 19345  24D3                     __end_of_i2c1_driver_sendACK:	
 19346                           
 19347                           	psect	text87
 19348  2492                     __ptext87:	
 19349 ;; *************** function _i2c1_driver_start *****************
 19350 ;; Defined at:
 19351 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 19352 ;; Parameters:    Size  Location     Type
 19353 ;;		None
 19354 ;; Auto vars:     Size  Location     Type
 19355 ;;		None
 19356 ;; Return value:  Size  Location     Type
 19357 ;;                  1    wreg      void 
 19358 ;; Registers used:
 19359 ;;		None
 19360 ;; Tracked objects:
 19361 ;;		On entry : 0/0
 19362 ;;		On exit  : 0/0
 19363 ;;		Unchanged: 0/0
 19364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19369 ;;Total ram usage:        0 bytes
 19370 ;; Hardware stack levels used:    1
 19371 ;; Hardware stack levels required when called:    6
 19372 ;; This function calls:
 19373 ;;		Nothing
 19374 ;; This function is called by:
 19375 ;;		_i2c_masterOperation
 19376 ;; This function uses a non-reentrant model
 19377 ;;
 19378                           
 19379                           
 19380                           ;psect for function _i2c1_driver_start
 19381  2492                     _i2c1_driver_start:	
 19382                           
 19383                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
 19384                           
 19385                           ;incstack = 0
 19386                           ; Regs used in _i2c1_driver_start: []
 19387  2492  0024               	movlb	4	; select bank4
 19388  2493  1416               	bsf	22,0	;volatile
 19389  2494  0008               	return
 19390  2495                     __end_of_i2c1_driver_start:	
 19391                           
 19392                           	psect	text88
 19393  1EAB                     __ptext88:	
 19394 ;; *************** function ___awdiv *****************
 19395 ;; Defined at:
 19396 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 19397 ;; Parameters:    Size  Location     Type
 19398 ;;  divisor         2   17[BANK0 ] int 
 19399 ;;  dividend        2   19[BANK0 ] int 
 19400 ;; Auto vars:     Size  Location     Type
 19401 ;;  quotient        2   24[BANK0 ] int 
 19402 ;;  sign            1   23[BANK0 ] unsigned char 
 19403 ;;  counter         1   22[BANK0 ] unsigned char 
 19404 ;; Return value:  Size  Location     Type
 19405 ;;                  2   17[BANK0 ] int 
 19406 ;; Registers used:
 19407 ;;		wreg, status,2, status,0
 19408 ;; Tracked objects:
 19409 ;;		On entry : 0/0
 19410 ;;		On exit  : 0/0
 19411 ;;		Unchanged: 0/0
 19412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19413 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19414 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19415 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19416 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19417 ;;Total ram usage:        9 bytes
 19418 ;; Hardware stack levels used:    1
 19419 ;; Hardware stack levels required when called:    6
 19420 ;; This function calls:
 19421 ;;		Nothing
 19422 ;; This function is called by:
 19423 ;;		_drv_write_DC
 19424 ;;		_drv_outputSine
 19425 ;; This function uses a non-reentrant model
 19426 ;;
 19427                           
 19428                           
 19429                           ;psect for function ___awdiv
 19430  1EAB                     ___awdiv:	
 19431                           
 19432                           ;incstack = 0
 19433                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 19434  1EAB  0020               	movlb	0	; select bank0
 19435  1EAC  01B7               	clrf	___awdiv@sign
 19436  1EAD  1FB2               	btfss	___awdiv@divisor+1,7
 19437  1EAE  2EB6               	goto	l5140
 19438  1EAF  09B1               	comf	___awdiv@divisor,f
 19439  1EB0  09B2               	comf	___awdiv@divisor+1,f
 19440  1EB1  0AB1               	incf	___awdiv@divisor,f
 19441  1EB2  1903               	skipnz
 19442  1EB3  0AB2               	incf	___awdiv@divisor+1,f
 19443  1EB4  01B7               	clrf	___awdiv@sign
 19444  1EB5  0AB7               	incf	___awdiv@sign,f
 19445  1EB6                     l5140:	
 19446  1EB6  1FB4               	btfss	___awdiv@dividend+1,7
 19447  1EB7  2EC1               	goto	l5146
 19448  1EB8  09B3               	comf	___awdiv@dividend,f
 19449  1EB9  09B4               	comf	___awdiv@dividend+1,f
 19450  1EBA  0AB3               	incf	___awdiv@dividend,f
 19451  1EBB  1903               	skipnz
 19452  1EBC  0AB4               	incf	___awdiv@dividend+1,f
 19453  1EBD  3001               	movlw	1
 19454  1EBE  00B5               	movwf	??___awdiv
 19455  1EBF  0835               	movf	??___awdiv,w
 19456  1EC0  06B7               	xorwf	___awdiv@sign,f
 19457  1EC1                     l5146:	
 19458  1EC1  01B8               	clrf	___awdiv@quotient
 19459  1EC2  01B9               	clrf	___awdiv@quotient+1
 19460  1EC3  0831               	movf	___awdiv@divisor,w
 19461  1EC4  0432               	iorwf	___awdiv@divisor+1,w
 19462  1EC5  1903               	btfsc	3,2
 19463  1EC6  2EF0               	goto	l5168
 19464  1EC7  01B6               	clrf	___awdiv@counter
 19465  1EC8  0AB6               	incf	___awdiv@counter,f
 19466  1EC9                     l5156:	
 19467  1EC9  1BB2               	btfsc	___awdiv@divisor+1,7
 19468  1ECA  2ED5               	goto	l5158
 19469  1ECB  3001               	movlw	1
 19470  1ECC                     u4215:	
 19471  1ECC  35B1               	lslf	___awdiv@divisor,f
 19472  1ECD  0DB2               	rlf	___awdiv@divisor+1,f
 19473  1ECE  0B89               	decfsz	9,f
 19474  1ECF  2ECC               	goto	u4215
 19475  1ED0  3001               	movlw	1
 19476  1ED1  00B5               	movwf	??___awdiv
 19477  1ED2  0835               	movf	??___awdiv,w
 19478  1ED3  07B6               	addwf	___awdiv@counter,f
 19479  1ED4  2EC9               	goto	l5156
 19480  1ED5                     l5158:	
 19481  1ED5  3001               	movlw	1
 19482  1ED6                     u4235:	
 19483  1ED6  35B8               	lslf	___awdiv@quotient,f
 19484  1ED7  0DB9               	rlf	___awdiv@quotient+1,f
 19485  1ED8  0B89               	decfsz	9,f
 19486  1ED9  2ED6               	goto	u4235
 19487  1EDA  0832               	movf	___awdiv@divisor+1,w
 19488  1EDB  0234               	subwf	___awdiv@dividend+1,w
 19489  1EDC  1D03               	skipz
 19490  1EDD  2EE0               	goto	u4245
 19491  1EDE  0831               	movf	___awdiv@divisor,w
 19492  1EDF  0233               	subwf	___awdiv@dividend,w
 19493  1EE0                     u4245:	
 19494  1EE0  1C03               	skipc
 19495  1EE1  2EE7               	goto	l5164
 19496  1EE2  0831               	movf	___awdiv@divisor,w
 19497  1EE3  02B3               	subwf	___awdiv@dividend,f
 19498  1EE4  0832               	movf	___awdiv@divisor+1,w
 19499  1EE5  3BB4               	subwfb	___awdiv@dividend+1,f
 19500  1EE6  1438               	bsf	___awdiv@quotient,0
 19501  1EE7                     l5164:	
 19502  1EE7  3001               	movlw	1
 19503  1EE8                     u4255:	
 19504  1EE8  36B2               	lsrf	___awdiv@divisor+1,f
 19505  1EE9  0CB1               	rrf	___awdiv@divisor,f
 19506  1EEA  0B89               	decfsz	9,f
 19507  1EEB  2EE8               	goto	u4255
 19508  1EEC  3001               	movlw	1
 19509  1EED  02B6               	subwf	___awdiv@counter,f
 19510  1EEE  1D03               	btfss	3,2
 19511  1EEF  2ED5               	goto	l5158
 19512  1EF0                     l5168:	
 19513  1EF0  0837               	movf	___awdiv@sign,w
 19514  1EF1  1903               	btfsc	3,2
 19515  1EF2  2EF8               	goto	l5172
 19516  1EF3  09B8               	comf	___awdiv@quotient,f
 19517  1EF4  09B9               	comf	___awdiv@quotient+1,f
 19518  1EF5  0AB8               	incf	___awdiv@quotient,f
 19519  1EF6  1903               	skipnz
 19520  1EF7  0AB9               	incf	___awdiv@quotient+1,f
 19521  1EF8                     l5172:	
 19522  1EF8  0839               	movf	___awdiv@quotient+1,w
 19523  1EF9  00B2               	movwf	?___awdiv+1
 19524  1EFA  0838               	movf	___awdiv@quotient,w
 19525  1EFB  00B1               	movwf	?___awdiv
 19526  1EFC  0008               	return
 19527  1EFD                     __end_of___awdiv:	
 19528                           
 19529                           	psect	text89
 19530  08CD                     __ptext89:	
 19531 ;; *************** function _calcHeaterPins *****************
 19532 ;; Defined at:
 19533 ;;		line 257 in file "main.c"
 19534 ;; Parameters:    Size  Location     Type
 19535 ;;		None
 19536 ;; Auto vars:     Size  Location     Type
 19537 ;;		None
 19538 ;; Return value:  Size  Location     Type
 19539 ;;                  1    wreg      void 
 19540 ;; Registers used:
 19541 ;;		wreg, status,2, status,0
 19542 ;; Tracked objects:
 19543 ;;		On entry : 0/0
 19544 ;;		On exit  : 0/0
 19545 ;;		Unchanged: 0/0
 19546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19549 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19550 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19551 ;;Total ram usage:        4 bytes
 19552 ;; Hardware stack levels used:    1
 19553 ;; Hardware stack levels required when called:    6
 19554 ;; This function calls:
 19555 ;;		Nothing
 19556 ;; This function is called by:
 19557 ;;		_doMove
 19558 ;; This function uses a non-reentrant model
 19559 ;;
 19560                           
 19561                           
 19562                           ;psect for function _calcHeaterPins
 19563  08CD                     _calcHeaterPins:	
 19564                           
 19565                           ;main.c: 258: first_top = moveVector_downs & moveMask;
 19566                           
 19567                           ;incstack = 0
 19568                           ; Regs used in _calcHeaterPins: [wreg+status,2+status,0]
 19569  08CD  0021               	movlb	1	; select bank1
 19570  08CE  0854               	movf	_moveMask^(0+128),w
 19571  08CF  055C               	andwf	_moveVector_downs^(0+128),w
 19572  08D0  0022               	movlb	2	; select bank2
 19573  08D1  00DA               	movwf	_first_top^(0+256)
 19574  08D2  0021               	movlb	1	; select bank1
 19575  08D3  0855               	movf	(_moveMask+1)^(0+128),w
 19576  08D4  055D               	andwf	(_moveVector_downs+1)^(0+128),w
 19577  08D5  0022               	movlb	2	; select bank2
 19578  08D6  00DB               	movwf	(_first_top+1)^(0+256)
 19579  08D7  0021               	movlb	1	; select bank1
 19580  08D8  0856               	movf	(_moveMask+2)^(0+128),w
 19581  08D9  055E               	andwf	(_moveVector_downs+2)^(0+128),w
 19582  08DA  0022               	movlb	2	; select bank2
 19583  08DB  00DC               	movwf	(_first_top+2)^(0+256)
 19584  08DC  0021               	movlb	1	; select bank1
 19585  08DD  0857               	movf	(_moveMask+3)^(0+128),w
 19586  08DE  055F               	andwf	(_moveVector_downs+3)^(0+128),w
 19587  08DF  0022               	movlb	2	; select bank2
 19588  08E0  00DD               	movwf	(_first_top+3)^(0+256)
 19589                           
 19590                           ;main.c: 259: first_bottom = (~moveVector_downs) & moveMask;
 19591  08E1  0021               	movlb	1	; select bank1
 19592  08E2  095C               	comf	_moveVector_downs^(0+128),w
 19593  08E3  0020               	movlb	0	; select bank0
 19594  08E4  00B1               	movwf	??_calcHeaterPins
 19595  08E5  0021               	movlb	1	; select bank1
 19596  08E6  095D               	comf	(_moveVector_downs+1)^(0+128),w
 19597  08E7  0020               	movlb	0	; select bank0
 19598  08E8  00B2               	movwf	??_calcHeaterPins+1
 19599  08E9  0021               	movlb	1	; select bank1
 19600  08EA  095E               	comf	(_moveVector_downs+2)^(0+128),w
 19601  08EB  0020               	movlb	0	; select bank0
 19602  08EC  00B3               	movwf	??_calcHeaterPins+2
 19603  08ED  0021               	movlb	1	; select bank1
 19604  08EE  095F               	comf	(_moveVector_downs+3)^(0+128),w
 19605  08EF  0020               	movlb	0	; select bank0
 19606  08F0  00B4               	movwf	??_calcHeaterPins+3
 19607  08F1  0021               	movlb	1	; select bank1
 19608  08F2  0854               	movf	_moveMask^(0+128),w
 19609  08F3  0020               	movlb	0	; select bank0
 19610  08F4  0531               	andwf	??_calcHeaterPins,w
 19611  08F5  0022               	movlb	2	; select bank2
 19612  08F6  00DE               	movwf	_first_bottom^(0+256)
 19613  08F7  0021               	movlb	1	; select bank1
 19614  08F8  0855               	movf	(_moveMask+1)^(0+128),w
 19615  08F9  0020               	movlb	0	; select bank0
 19616  08FA  0532               	andwf	??_calcHeaterPins+1,w
 19617  08FB  0022               	movlb	2	; select bank2
 19618  08FC  00DF               	movwf	(_first_bottom+1)^(0+256)
 19619  08FD  0021               	movlb	1	; select bank1
 19620  08FE  0856               	movf	(_moveMask+2)^(0+128),w
 19621  08FF  0020               	movlb	0	; select bank0
 19622  0900  0533               	andwf	??_calcHeaterPins+2,w
 19623  0901  0022               	movlb	2	; select bank2
 19624  0902  00E0               	movwf	(_first_bottom+2)^(0+256)
 19625  0903  0021               	movlb	1	; select bank1
 19626  0904  0857               	movf	(_moveMask+3)^(0+128),w
 19627  0905  0020               	movlb	0	; select bank0
 19628  0906  0534               	andwf	??_calcHeaterPins+3,w
 19629  0907  0022               	movlb	2	; select bank2
 19630  0908  00E1               	movwf	(_first_bottom+3)^(0+256)
 19631                           
 19632                           ;main.c: 260: second_top = moveVector_ups & moveMask;
 19633  0909  0021               	movlb	1	; select bank1
 19634  090A  0854               	movf	_moveMask^(0+128),w
 19635  090B  0560               	andwf	_moveVector_ups^(0+128),w
 19636  090C  0022               	movlb	2	; select bank2
 19637  090D  00E2               	movwf	_second_top^(0+256)
 19638  090E  0021               	movlb	1	; select bank1
 19639  090F  0855               	movf	(_moveMask+1)^(0+128),w
 19640  0910  0561               	andwf	(_moveVector_ups+1)^(0+128),w
 19641  0911  0022               	movlb	2	; select bank2
 19642  0912  00E3               	movwf	(_second_top+1)^(0+256)
 19643  0913  0021               	movlb	1	; select bank1
 19644  0914  0856               	movf	(_moveMask+2)^(0+128),w
 19645  0915  0562               	andwf	(_moveVector_ups+2)^(0+128),w
 19646  0916  0022               	movlb	2	; select bank2
 19647  0917  00E4               	movwf	(_second_top+2)^(0+256)
 19648  0918  0021               	movlb	1	; select bank1
 19649  0919  0857               	movf	(_moveMask+3)^(0+128),w
 19650  091A  0563               	andwf	(_moveVector_ups+3)^(0+128),w
 19651  091B  0022               	movlb	2	; select bank2
 19652  091C  00E5               	movwf	(_second_top+3)^(0+256)
 19653                           
 19654                           ;main.c: 261: second_bottom = (~moveVector_ups) & moveMask;
 19655  091D  0021               	movlb	1	; select bank1
 19656  091E  0960               	comf	_moveVector_ups^(0+128),w
 19657  091F  0020               	movlb	0	; select bank0
 19658  0920  00B1               	movwf	??_calcHeaterPins
 19659  0921  0021               	movlb	1	; select bank1
 19660  0922  0961               	comf	(_moveVector_ups+1)^(0+128),w
 19661  0923  0020               	movlb	0	; select bank0
 19662  0924  00B2               	movwf	??_calcHeaterPins+1
 19663  0925  0021               	movlb	1	; select bank1
 19664  0926  0962               	comf	(_moveVector_ups+2)^(0+128),w
 19665  0927  0020               	movlb	0	; select bank0
 19666  0928  00B3               	movwf	??_calcHeaterPins+2
 19667  0929  0021               	movlb	1	; select bank1
 19668  092A  0963               	comf	(_moveVector_ups+3)^(0+128),w
 19669  092B  0020               	movlb	0	; select bank0
 19670  092C  00B4               	movwf	??_calcHeaterPins+3
 19671  092D  0021               	movlb	1	; select bank1
 19672  092E  0854               	movf	_moveMask^(0+128),w
 19673  092F  0020               	movlb	0	; select bank0
 19674  0930  0531               	andwf	??_calcHeaterPins,w
 19675  0931  0022               	movlb	2	; select bank2
 19676  0932  00D6               	movwf	_second_bottom^(0+256)
 19677  0933  0021               	movlb	1	; select bank1
 19678  0934  0855               	movf	(_moveMask+1)^(0+128),w
 19679  0935  0020               	movlb	0	; select bank0
 19680  0936  0532               	andwf	??_calcHeaterPins+1,w
 19681  0937  0022               	movlb	2	; select bank2
 19682  0938  00D7               	movwf	(_second_bottom+1)^(0+256)
 19683  0939  0021               	movlb	1	; select bank1
 19684  093A  0856               	movf	(_moveMask+2)^(0+128),w
 19685  093B  0020               	movlb	0	; select bank0
 19686  093C  0533               	andwf	??_calcHeaterPins+2,w
 19687  093D  0022               	movlb	2	; select bank2
 19688  093E  00D8               	movwf	(_second_bottom+2)^(0+256)
 19689  093F  0021               	movlb	1	; select bank1
 19690  0940  0857               	movf	(_moveMask+3)^(0+128),w
 19691  0941  0020               	movlb	0	; select bank0
 19692  0942  0534               	andwf	??_calcHeaterPins+3,w
 19693  0943  0022               	movlb	2	; select bank2
 19694  0944  00D9               	movwf	(_second_bottom+3)^(0+256)
 19695  0945  0008               	return
 19696  0946                     __end_of_calcHeaterPins:	
 19697                           
 19698                           	psect	text90
 19699  0A3C                     __ptext90:	
 19700 ;; *************** function ___fttol *****************
 19701 ;; Defined at:
 19702 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 19703 ;; Parameters:    Size  Location     Type
 19704 ;;  f1              3   15[BANK1 ] float 
 19705 ;; Auto vars:     Size  Location     Type
 19706 ;;  lval            4   24[BANK1 ] unsigned long 
 19707 ;;  exp1            1   28[BANK1 ] unsigned char 
 19708 ;;  sign1           1   23[BANK1 ] unsigned char 
 19709 ;; Return value:  Size  Location     Type
 19710 ;;                  4   15[BANK1 ] long 
 19711 ;; Registers used:
 19712 ;;		wreg, status,2, status,0
 19713 ;; Tracked objects:
 19714 ;;		On entry : 0/0
 19715 ;;		On exit  : 0/0
 19716 ;;		Unchanged: 0/0
 19717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19718 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19719 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19720 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19721 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19722 ;;Total ram usage:       14 bytes
 19723 ;; Hardware stack levels used:    1
 19724 ;; Hardware stack levels required when called:    6
 19725 ;; This function calls:
 19726 ;;		Nothing
 19727 ;; This function is called by:
 19728 ;;		_initialize
 19729 ;;		_doMove
 19730 ;;		_setDrvPiezoOnTime
 19731 ;;		_setHeaterPreTime
 19732 ;;		_setHeaterPostTime
 19733 ;;		_drv_outputSine
 19734 ;; This function uses a non-reentrant model
 19735 ;;
 19736                           
 19737                           
 19738                           ;psect for function ___fttol
 19739  0A3C                     ___fttol:	
 19740                           
 19741                           ;incstack = 0
 19742                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 19743  0A3C  0021               	movlb	1	; select bank1
 19744  0A3D  082F               	movf	___fttol@f1^(0+128),w
 19745  0A3E  00B3               	movwf	??___fttol^(0+128)
 19746  0A3F  0830               	movf	(___fttol@f1+1)^(0+128),w
 19747  0A40  00B4               	movwf	(??___fttol^(0+128)+1)
 19748  0A41  0831               	movf	(___fttol@f1+2)^(0+128),w
 19749  0A42  00B5               	movwf	(??___fttol^(0+128)+2)
 19750  0A43  1003               	clrc
 19751  0A44  0D34               	rlf	(??___fttol^(0+128)+1),w
 19752  0A45  0D35               	rlf	(??___fttol^(0+128)+2),w
 19753  0A46  00B6               	movwf	(??___fttol+3)^(0+128)
 19754  0A47  0836               	movf	(??___fttol+3)^(0+128),w
 19755  0A48  00BC               	movwf	___fttol@exp1^(0+128)
 19756  0A49  083C               	movf	___fttol@exp1^(0+128),w
 19757  0A4A  1D03               	btfss	3,2
 19758  0A4B  2A55               	goto	l7576
 19759  0A4C  3000               	movlw	0
 19760  0A4D  00B2               	movwf	(?___fttol+3)^(0+128)
 19761  0A4E  3000               	movlw	0
 19762  0A4F  00B1               	movwf	(?___fttol+2)^(0+128)
 19763  0A50  3000               	movlw	0
 19764  0A51  00B0               	movwf	(?___fttol+1)^(0+128)
 19765  0A52  3000               	movlw	0
 19766  0A53  00AF               	movwf	?___fttol^(0+128)
 19767  0A54  0008               	return
 19768  0A55                     l7576:	
 19769  0A55  082F               	movf	___fttol@f1^(0+128),w
 19770  0A56  00B3               	movwf	??___fttol^(0+128)
 19771  0A57  0830               	movf	(___fttol@f1+1)^(0+128),w
 19772  0A58  00B4               	movwf	(??___fttol^(0+128)+1)
 19773  0A59  0831               	movf	(___fttol@f1+2)^(0+128),w
 19774  0A5A  00B5               	movwf	(??___fttol^(0+128)+2)
 19775  0A5B  3017               	movlw	23
 19776  0A5C                     u7745:	
 19777  0A5C  36B5               	lsrf	(??___fttol^(0+128)+2),f
 19778  0A5D  0CB4               	rrf	(??___fttol^(0+128)+1),f
 19779  0A5E  0CB3               	rrf	??___fttol^(0+128),f
 19780  0A5F  0B89               	decfsz	9,f
 19781  0A60  2A5C               	goto	u7745
 19782  0A61  0833               	movf	??___fttol^(0+128),w
 19783  0A62  00B6               	movwf	(??___fttol+3)^(0+128)
 19784  0A63  0836               	movf	(??___fttol+3)^(0+128),w
 19785  0A64  00B7               	movwf	___fttol@sign1^(0+128)
 19786  0A65  17B0               	bsf	(___fttol@f1^(0+128)+1),7
 19787  0A66  30FF               	movlw	255
 19788  0A67  05AF               	andwf	___fttol@f1^(0+128),f
 19789  0A68  30FF               	movlw	255
 19790  0A69  05B0               	andwf	(___fttol@f1+1)^(0+128),f
 19791  0A6A  3000               	movlw	0
 19792  0A6B  05B1               	andwf	(___fttol@f1+2)^(0+128),f
 19793  0A6C  082F               	movf	___fttol@f1^(0+128),w
 19794  0A6D  00B8               	movwf	___fttol@lval^(0+128)
 19795  0A6E  0830               	movf	(___fttol@f1+1)^(0+128),w
 19796  0A6F  00B9               	movwf	(___fttol@lval^(0+128)+1)
 19797  0A70  0831               	movf	(___fttol@f1+2)^(0+128),w
 19798  0A71  00BA               	movwf	(___fttol@lval^(0+128)+2)
 19799  0A72  01BB               	clrf	(___fttol@lval^(0+128)+3)
 19800  0A73  308E               	movlw	142
 19801  0A74  02BC               	subwf	___fttol@exp1^(0+128),f
 19802  0A75  1FBC               	btfss	___fttol@exp1^(0+128),7
 19803  0A76  2A93               	goto	l7596
 19804  0A77  083C               	movf	___fttol@exp1^(0+128),w
 19805  0A78  3A80               	xorlw	128
 19806  0A79  3E8F               	addlw	143
 19807  0A7A  1803               	skipnc
 19808  0A7B  2A85               	goto	l7594
 19809  0A7C  3000               	movlw	0
 19810  0A7D  00B2               	movwf	(?___fttol+3)^(0+128)
 19811  0A7E  3000               	movlw	0
 19812  0A7F  00B1               	movwf	(?___fttol+2)^(0+128)
 19813  0A80  3000               	movlw	0
 19814  0A81  00B0               	movwf	(?___fttol+1)^(0+128)
 19815  0A82  3000               	movlw	0
 19816  0A83  00AF               	movwf	?___fttol^(0+128)
 19817  0A84  0008               	return
 19818  0A85                     l7594:	
 19819  0A85  3001               	movlw	1
 19820  0A86                     u7775:	
 19821  0A86  36BB               	lsrf	(___fttol@lval+3)^(0+128),f
 19822  0A87  0CBA               	rrf	(___fttol@lval+2)^(0+128),f
 19823  0A88  0CB9               	rrf	(___fttol@lval+1)^(0+128),f
 19824  0A89  0CB8               	rrf	___fttol@lval^(0+128),f
 19825  0A8A  0B89               	decfsz	9,f
 19826  0A8B  2A86               	goto	u7775
 19827  0A8C  3001               	movlw	1
 19828  0A8D  00B3               	movwf	??___fttol^(0+128)
 19829  0A8E  0833               	movf	??___fttol^(0+128),w
 19830  0A8F  07BC               	addwf	___fttol@exp1^(0+128),f
 19831  0A90  1903               	btfsc	3,2
 19832  0A91  2AAC               	goto	l7604
 19833  0A92  2A85               	goto	l7594
 19834  0A93                     l7596:	
 19835  0A93  3018               	movlw	24
 19836  0A94  023C               	subwf	___fttol@exp1^(0+128),w
 19837  0A95  1C03               	skipc
 19838  0A96  2AA9               	goto	l1757
 19839  0A97  3000               	movlw	0
 19840  0A98  00B2               	movwf	(?___fttol+3)^(0+128)
 19841  0A99  3000               	movlw	0
 19842  0A9A  00B1               	movwf	(?___fttol+2)^(0+128)
 19843  0A9B  3000               	movlw	0
 19844  0A9C  00B0               	movwf	(?___fttol+1)^(0+128)
 19845  0A9D  3000               	movlw	0
 19846  0A9E  00AF               	movwf	?___fttol^(0+128)
 19847  0A9F  0008               	return
 19848  0AA0                     l7602:	
 19849  0AA0  3001               	movlw	1
 19850  0AA1                     u7805:	
 19851  0AA1  35B8               	lslf	___fttol@lval^(0+128),f
 19852  0AA2  0DB9               	rlf	(___fttol@lval+1)^(0+128),f
 19853  0AA3  0DBA               	rlf	(___fttol@lval+2)^(0+128),f
 19854  0AA4  0DBB               	rlf	(___fttol@lval+3)^(0+128),f
 19855  0AA5  0B89               	decfsz	9,f
 19856  0AA6  2AA1               	goto	u7805
 19857  0AA7  3001               	movlw	1
 19858  0AA8  02BC               	subwf	___fttol@exp1^(0+128),f
 19859  0AA9                     l1757:	
 19860  0AA9  083C               	movf	___fttol@exp1^(0+128),w
 19861  0AAA  1D03               	btfss	3,2
 19862  0AAB  2AA0               	goto	l7602
 19863  0AAC                     l7604:	
 19864  0AAC  0837               	movf	___fttol@sign1^(0+128),w
 19865  0AAD  1903               	btfsc	3,2
 19866  0AAE  2ABA               	goto	l7608
 19867  0AAF  09B8               	comf	___fttol@lval^(0+128),f
 19868  0AB0  09B9               	comf	(___fttol@lval+1)^(0+128),f
 19869  0AB1  09BA               	comf	(___fttol@lval+2)^(0+128),f
 19870  0AB2  09BB               	comf	(___fttol@lval+3)^(0+128),f
 19871  0AB3  0AB8               	incf	___fttol@lval^(0+128),f
 19872  0AB4  1903               	skipnz
 19873  0AB5  0AB9               	incf	(___fttol@lval+1)^(0+128),f
 19874  0AB6  1903               	skipnz
 19875  0AB7  0ABA               	incf	(___fttol@lval+2)^(0+128),f
 19876  0AB8  1903               	skipnz
 19877  0AB9  0ABB               	incf	(___fttol@lval+3)^(0+128),f
 19878  0ABA                     l7608:	
 19879  0ABA  083B               	movf	(___fttol@lval+3)^(0+128),w
 19880  0ABB  00B2               	movwf	(?___fttol+3)^(0+128)
 19881  0ABC  083A               	movf	(___fttol@lval+2)^(0+128),w
 19882  0ABD  00B1               	movwf	(?___fttol+2)^(0+128)
 19883  0ABE  0839               	movf	(___fttol@lval+1)^(0+128),w
 19884  0ABF  00B0               	movwf	(?___fttol+1)^(0+128)
 19885  0AC0  0838               	movf	___fttol@lval^(0+128),w
 19886  0AC1  00AF               	movwf	?___fttol^(0+128)
 19887  0AC2  0008               	return
 19888  0AC3                     __end_of___fttol:	
 19889                           
 19890                           	psect	text91
 19891  0D23                     __ptext91:	
 19892 ;; *************** function ___ftmul *****************
 19893 ;; Defined at:
 19894 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 19895 ;; Parameters:    Size  Location     Type
 19896 ;;  f1              3   31[BANK0 ] float 
 19897 ;;  f2              3   34[BANK0 ] float 
 19898 ;; Auto vars:     Size  Location     Type
 19899 ;;  f3_as_produc    3    1[BANK1 ] unsigned um
 19900 ;;  sign            1    5[BANK1 ] unsigned char 
 19901 ;;  cntr            1    4[BANK1 ] unsigned char 
 19902 ;;  exp             1    0[BANK1 ] unsigned char 
 19903 ;; Return value:  Size  Location     Type
 19904 ;;                  3   31[BANK0 ] float 
 19905 ;; Registers used:
 19906 ;;		wreg, status,2, status,0, pclath, cstack
 19907 ;; Tracked objects:
 19908 ;;		On entry : 0/0
 19909 ;;		On exit  : 0/0
 19910 ;;		Unchanged: 0/0
 19911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19912 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19913 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19914 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19915 ;;      Totals:         0      10       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19916 ;;Total ram usage:       16 bytes
 19917 ;; Hardware stack levels used:    1
 19918 ;; Hardware stack levels required when called:    7
 19919 ;; This function calls:
 19920 ;;		___ftpack
 19921 ;; This function is called by:
 19922 ;;		_initialize
 19923 ;;		_doMove
 19924 ;;		_setDrvPiezoOnTime
 19925 ;;		_setHeaterPreTime
 19926 ;;		_setHeaterPostTime
 19927 ;;		_drv_outputSine
 19928 ;; This function uses a non-reentrant model
 19929 ;;
 19930                           
 19931                           
 19932                           ;psect for function ___ftmul
 19933  0D23                     ___ftmul:	
 19934                           
 19935                           ;incstack = 0
 19936                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 19937  0D23  0020               	movlb	0	; select bank0
 19938  0D24  083F               	movf	___ftmul@f1,w
 19939  0D25  00C5               	movwf	??___ftmul
 19940  0D26  0840               	movf	___ftmul@f1+1,w
 19941  0D27  00C6               	movwf	??___ftmul+1
 19942  0D28  0841               	movf	___ftmul@f1+2,w
 19943  0D29  00C7               	movwf	??___ftmul+2
 19944  0D2A  1003               	clrc
 19945  0D2B  0D46               	rlf	??___ftmul+1,w
 19946  0D2C  0D47               	rlf	??___ftmul+2,w
 19947  0D2D  00C8               	movwf	??___ftmul+3
 19948  0D2E  0848               	movf	??___ftmul+3,w
 19949  0D2F  0021               	movlb	1	; select bank1
 19950  0D30  00A0               	movwf	___ftmul@exp^(0+128)
 19951  0D31  0820               	movf	___ftmul@exp^(0+128),w
 19952  0D32  1D03               	btfss	3,2
 19953  0D33  2D3C               	goto	l7526
 19954  0D34  3000               	movlw	0
 19955  0D35  0020               	movlb	0	; select bank0
 19956  0D36  00BF               	movwf	?___ftmul
 19957  0D37  3000               	movlw	0
 19958  0D38  00C0               	movwf	?___ftmul+1
 19959  0D39  3000               	movlw	0
 19960  0D3A  00C1               	movwf	?___ftmul+2
 19961  0D3B  0008               	return
 19962  0D3C                     l7526:	
 19963  0D3C  0020               	movlb	0	; select bank0
 19964  0D3D  0842               	movf	___ftmul@f2,w
 19965  0D3E  00C5               	movwf	??___ftmul
 19966  0D3F  0843               	movf	___ftmul@f2+1,w
 19967  0D40  00C6               	movwf	??___ftmul+1
 19968  0D41  0844               	movf	___ftmul@f2+2,w
 19969  0D42  00C7               	movwf	??___ftmul+2
 19970  0D43  1003               	clrc
 19971  0D44  0D46               	rlf	??___ftmul+1,w
 19972  0D45  0D47               	rlf	??___ftmul+2,w
 19973  0D46  00C8               	movwf	??___ftmul+3
 19974  0D47  0848               	movf	??___ftmul+3,w
 19975  0D48  0021               	movlb	1	; select bank1
 19976  0D49  00A5               	movwf	___ftmul@sign^(0+128)
 19977  0D4A  0825               	movf	___ftmul@sign^(0+128),w
 19978  0D4B  1D03               	btfss	3,2
 19979  0D4C  2D55               	goto	l7532
 19980  0D4D  3000               	movlw	0
 19981  0D4E  0020               	movlb	0	; select bank0
 19982  0D4F  00BF               	movwf	?___ftmul
 19983  0D50  3000               	movlw	0
 19984  0D51  00C0               	movwf	?___ftmul+1
 19985  0D52  3000               	movlw	0
 19986  0D53  00C1               	movwf	?___ftmul+2
 19987  0D54  0008               	return
 19988  0D55                     l7532:	
 19989  0D55  0021               	movlb	1	; select bank1
 19990  0D56  0825               	movf	___ftmul@sign^(0+128),w
 19991  0D57  3E7B               	addlw	123
 19992  0D58  0020               	movlb	0	; select bank0
 19993  0D59  00C5               	movwf	??___ftmul
 19994  0D5A  0845               	movf	??___ftmul,w
 19995  0D5B  0021               	movlb	1	; select bank1
 19996  0D5C  07A0               	addwf	___ftmul@exp^(0+128),f
 19997  0D5D  0020               	movlb	0	; select bank0
 19998  0D5E  083F               	movf	___ftmul@f1,w
 19999  0D5F  00C5               	movwf	??___ftmul
 20000  0D60  0840               	movf	___ftmul@f1+1,w
 20001  0D61  00C6               	movwf	??___ftmul+1
 20002  0D62  0841               	movf	___ftmul@f1+2,w
 20003  0D63  00C7               	movwf	??___ftmul+2
 20004  0D64  3010               	movlw	16
 20005  0D65                     u7635:	
 20006  0D65  36C7               	lsrf	??___ftmul+2,f
 20007  0D66  0CC6               	rrf	??___ftmul+1,f
 20008  0D67  0CC5               	rrf	??___ftmul,f
 20009  0D68  0B89               	decfsz	9,f
 20010  0D69  2D65               	goto	u7635
 20011  0D6A  0845               	movf	??___ftmul,w
 20012  0D6B  00C8               	movwf	??___ftmul+3
 20013  0D6C  0848               	movf	??___ftmul+3,w
 20014  0D6D  0021               	movlb	1	; select bank1
 20015  0D6E  00A5               	movwf	___ftmul@sign^(0+128)
 20016  0D6F  0020               	movlb	0	; select bank0
 20017  0D70  0842               	movf	___ftmul@f2,w
 20018  0D71  00C5               	movwf	??___ftmul
 20019  0D72  0843               	movf	___ftmul@f2+1,w
 20020  0D73  00C6               	movwf	??___ftmul+1
 20021  0D74  0844               	movf	___ftmul@f2+2,w
 20022  0D75  00C7               	movwf	??___ftmul+2
 20023  0D76  3010               	movlw	16
 20024  0D77                     u7645:	
 20025  0D77  36C7               	lsrf	??___ftmul+2,f
 20026  0D78  0CC6               	rrf	??___ftmul+1,f
 20027  0D79  0CC5               	rrf	??___ftmul,f
 20028  0D7A  0B89               	decfsz	9,f
 20029  0D7B  2D77               	goto	u7645
 20030  0D7C  0845               	movf	??___ftmul,w
 20031  0D7D  00C8               	movwf	??___ftmul+3
 20032  0D7E  0848               	movf	??___ftmul+3,w
 20033  0D7F  0021               	movlb	1	; select bank1
 20034  0D80  06A5               	xorwf	___ftmul@sign^(0+128),f
 20035  0D81  3080               	movlw	128
 20036  0D82  0020               	movlb	0	; select bank0
 20037  0D83  00C5               	movwf	??___ftmul
 20038  0D84  0845               	movf	??___ftmul,w
 20039  0D85  0021               	movlb	1	; select bank1
 20040  0D86  05A5               	andwf	___ftmul@sign^(0+128),f
 20041  0D87  0020               	movlb	0	; select bank0
 20042  0D88  17C0               	bsf	___ftmul@f1+1,7
 20043  0D89  17C3               	bsf	___ftmul@f2+1,7
 20044  0D8A  30FF               	movlw	255
 20045  0D8B  05C2               	andwf	___ftmul@f2,f
 20046  0D8C  30FF               	movlw	255
 20047  0D8D  05C3               	andwf	___ftmul@f2+1,f
 20048  0D8E  3000               	movlw	0
 20049  0D8F  05C4               	andwf	___ftmul@f2+2,f
 20050  0D90  3000               	movlw	0
 20051  0D91  0021               	movlb	1	; select bank1
 20052  0D92  00A1               	movwf	___ftmul@f3_as_product^(0+128)
 20053  0D93  3000               	movlw	0
 20054  0D94  00A2               	movwf	(___ftmul@f3_as_product+1)^(0+128)
 20055  0D95  3000               	movlw	0
 20056  0D96  00A3               	movwf	(___ftmul@f3_as_product+2)^(0+128)
 20057  0D97  3007               	movlw	7
 20058  0D98  0020               	movlb	0	; select bank0
 20059  0D99  00C5               	movwf	??___ftmul
 20060  0D9A  0845               	movf	??___ftmul,w
 20061  0D9B  0021               	movlb	1	; select bank1
 20062  0D9C  00A4               	movwf	___ftmul@cntr^(0+128)
 20063  0D9D                     l7544:	
 20064  0D9D  0020               	movlb	0	; select bank0
 20065  0D9E  1C3F               	btfss	___ftmul@f1,0
 20066  0D9F  2DAB               	goto	l7548
 20067  0DA0  0842               	movf	___ftmul@f2,w
 20068  0DA1  0021               	movlb	1	; select bank1
 20069  0DA2  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 20070  0DA3  0020               	movlb	0	; select bank0
 20071  0DA4  0843               	movf	___ftmul@f2+1,w
 20072  0DA5  0021               	movlb	1	; select bank1
 20073  0DA6  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 20074  0DA7  0020               	movlb	0	; select bank0
 20075  0DA8  0844               	movf	___ftmul@f2+2,w
 20076  0DA9  0021               	movlb	1	; select bank1
 20077  0DAA  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 20078  0DAB                     l7548:	
 20079  0DAB  3001               	movlw	1
 20080  0DAC                     u7665:	
 20081  0DAC  0020               	movlb	0	; select bank0
 20082  0DAD  36C1               	lsrf	___ftmul@f1+2,f
 20083  0DAE  0CC0               	rrf	___ftmul@f1+1,f
 20084  0DAF  0CBF               	rrf	___ftmul@f1,f
 20085  0DB0  0B89               	decfsz	9,f
 20086  0DB1  2DAC               	goto	u7665
 20087  0DB2  3001               	movlw	1
 20088  0DB3                     u7675:	
 20089  0DB3  35C2               	lslf	___ftmul@f2,f
 20090  0DB4  0DC3               	rlf	___ftmul@f2+1,f
 20091  0DB5  0DC4               	rlf	___ftmul@f2+2,f
 20092  0DB6  0B89               	decfsz	9,f
 20093  0DB7  2DB3               	goto	u7675
 20094  0DB8  3001               	movlw	1
 20095  0DB9  0021               	movlb	1	; select bank1
 20096  0DBA  02A4               	subwf	___ftmul@cntr^(0+128),f
 20097  0DBB  1D03               	btfss	3,2
 20098  0DBC  2D9D               	goto	l7544
 20099  0DBD  3009               	movlw	9
 20100  0DBE  0020               	movlb	0	; select bank0
 20101  0DBF  00C5               	movwf	??___ftmul
 20102  0DC0  0845               	movf	??___ftmul,w
 20103  0DC1  0021               	movlb	1	; select bank1
 20104  0DC2  00A4               	movwf	___ftmul@cntr^(0+128)
 20105  0DC3                     l7556:	
 20106  0DC3  0020               	movlb	0	; select bank0
 20107  0DC4  1C3F               	btfss	___ftmul@f1,0
 20108  0DC5  2DD1               	goto	l7560
 20109  0DC6  0842               	movf	___ftmul@f2,w
 20110  0DC7  0021               	movlb	1	; select bank1
 20111  0DC8  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 20112  0DC9  0020               	movlb	0	; select bank0
 20113  0DCA  0843               	movf	___ftmul@f2+1,w
 20114  0DCB  0021               	movlb	1	; select bank1
 20115  0DCC  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 20116  0DCD  0020               	movlb	0	; select bank0
 20117  0DCE  0844               	movf	___ftmul@f2+2,w
 20118  0DCF  0021               	movlb	1	; select bank1
 20119  0DD0  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 20120  0DD1                     l7560:	
 20121  0DD1  3001               	movlw	1
 20122  0DD2                     u7705:	
 20123  0DD2  0020               	movlb	0	; select bank0
 20124  0DD3  36C1               	lsrf	___ftmul@f1+2,f
 20125  0DD4  0CC0               	rrf	___ftmul@f1+1,f
 20126  0DD5  0CBF               	rrf	___ftmul@f1,f
 20127  0DD6  0B89               	decfsz	9,f
 20128  0DD7  2DD2               	goto	u7705
 20129  0DD8  3001               	movlw	1
 20130  0DD9                     u7715:	
 20131  0DD9  0021               	movlb	1	; select bank1
 20132  0DDA  36A3               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
 20133  0DDB  0CA2               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
 20134  0DDC  0CA1               	rrf	___ftmul@f3_as_product^(0+128),f
 20135  0DDD  0B89               	decfsz	9,f
 20136  0DDE  2DD9               	goto	u7715
 20137  0DDF  3001               	movlw	1
 20138  0DE0  02A4               	subwf	___ftmul@cntr^(0+128),f
 20139  0DE1  1D03               	btfss	3,2
 20140  0DE2  2DC3               	goto	l7556
 20141  0DE3  0821               	movf	___ftmul@f3_as_product^(0+128),w
 20142  0DE4  0020               	movlb	0	; select bank0
 20143  0DE5  00B1               	movwf	___ftpack@arg
 20144  0DE6  0021               	movlb	1	; select bank1
 20145  0DE7  0822               	movf	(___ftmul@f3_as_product+1)^(0+128),w
 20146  0DE8  0020               	movlb	0	; select bank0
 20147  0DE9  00B2               	movwf	___ftpack@arg+1
 20148  0DEA  0021               	movlb	1	; select bank1
 20149  0DEB  0823               	movf	(___ftmul@f3_as_product+2)^(0+128),w
 20150  0DEC  0020               	movlb	0	; select bank0
 20151  0DED  00B3               	movwf	___ftpack@arg+2
 20152  0DEE  0021               	movlb	1	; select bank1
 20153  0DEF  0820               	movf	___ftmul@exp^(0+128),w
 20154  0DF0  0020               	movlb	0	; select bank0
 20155  0DF1  00C5               	movwf	??___ftmul
 20156  0DF2  0845               	movf	??___ftmul,w
 20157  0DF3  00B4               	movwf	___ftpack@exp
 20158  0DF4  0021               	movlb	1	; select bank1
 20159  0DF5  0825               	movf	___ftmul@sign^(0+128),w
 20160  0DF6  0020               	movlb	0	; select bank0
 20161  0DF7  00C6               	movwf	??___ftmul+1
 20162  0DF8  0846               	movf	??___ftmul+1,w
 20163  0DF9  00B5               	movwf	___ftpack@sign
 20164  0DFA  3195  25E7         	fcall	___ftpack
 20165  0DFC  0020               	movlb	0	; select bank0
 20166  0DFD  0831               	movf	?___ftpack,w
 20167  0DFE  00BF               	movwf	?___ftmul
 20168  0DFF  0832               	movf	?___ftpack+1,w
 20169  0E00  00C0               	movwf	?___ftmul+1
 20170  0E01  0833               	movf	?___ftpack+2,w
 20171  0E02  00C1               	movwf	?___ftmul+2
 20172  0E03  0008               	return
 20173  0E04                     __end_of___ftmul:	
 20174                           
 20175                           	psect	text92
 20176  18A1                     __ptext92:	
 20177 ;; *************** function ___awtoft *****************
 20178 ;; Defined at:
 20179 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 20180 ;; Parameters:    Size  Location     Type
 20181 ;;  c               2   25[BANK0 ] int 
 20182 ;; Auto vars:     Size  Location     Type
 20183 ;;  sign            1   30[BANK0 ] unsigned char 
 20184 ;; Return value:  Size  Location     Type
 20185 ;;                  3   25[BANK0 ] float 
 20186 ;; Registers used:
 20187 ;;		wreg, status,2, status,0, pclath, cstack
 20188 ;; Tracked objects:
 20189 ;;		On entry : 0/0
 20190 ;;		On exit  : 0/0
 20191 ;;		Unchanged: 0/0
 20192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20193 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20195 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20196 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20197 ;;Total ram usage:        6 bytes
 20198 ;; Hardware stack levels used:    1
 20199 ;; Hardware stack levels required when called:    7
 20200 ;; This function calls:
 20201 ;;		___ftpack
 20202 ;; This function is called by:
 20203 ;;		_initialize
 20204 ;;		_doMove
 20205 ;;		_setDrvPiezoOnTime
 20206 ;;		_setHeaterPreTime
 20207 ;;		_setHeaterPostTime
 20208 ;;		_drv_outputSine
 20209 ;; This function uses a non-reentrant model
 20210 ;;
 20211                           
 20212                           
 20213                           ;psect for function ___awtoft
 20214  18A1                     ___awtoft:	
 20215                           
 20216                           ;incstack = 0
 20217                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 20218  18A1  0020               	movlb	0	; select bank0
 20219  18A2  01BE               	clrf	___awtoft@sign
 20220  18A3  1FBA               	btfss	___awtoft@c+1,7
 20221  18A4  28AC               	goto	l7446
 20222  18A5  09B9               	comf	___awtoft@c,f
 20223  18A6  09BA               	comf	___awtoft@c+1,f
 20224  18A7  0AB9               	incf	___awtoft@c,f
 20225  18A8  1903               	skipnz
 20226  18A9  0ABA               	incf	___awtoft@c+1,f
 20227  18AA  01BE               	clrf	___awtoft@sign
 20228  18AB  0ABE               	incf	___awtoft@sign,f
 20229  18AC                     l7446:	
 20230  18AC  0839               	movf	___awtoft@c,w
 20231  18AD  00B1               	movwf	___ftpack@arg
 20232  18AE  083A               	movf	___awtoft@c+1,w
 20233  18AF  00B2               	movwf	___ftpack@arg+1
 20234  18B0  01B3               	clrf	___ftpack@arg+2
 20235  18B1  308E               	movlw	142
 20236  18B2  00BC               	movwf	??___awtoft
 20237  18B3  083C               	movf	??___awtoft,w
 20238  18B4  00B4               	movwf	___ftpack@exp
 20239  18B5  083E               	movf	___awtoft@sign,w
 20240  18B6  00BD               	movwf	??___awtoft+1
 20241  18B7  083D               	movf	??___awtoft+1,w
 20242  18B8  00B5               	movwf	___ftpack@sign
 20243  18B9  3195  25E7         	fcall	___ftpack
 20244  18BB  0020               	movlb	0	; select bank0
 20245  18BC  0831               	movf	?___ftpack,w
 20246  18BD  00B9               	movwf	?___awtoft
 20247  18BE  0832               	movf	?___ftpack+1,w
 20248  18BF  00BA               	movwf	?___awtoft+1
 20249  18C0  0833               	movf	?___ftpack+2,w
 20250  18C1  00BB               	movwf	?___awtoft+2
 20251  18C2  0008               	return
 20252  18C3                     __end_of___awtoft:	
 20253                           
 20254                           	psect	text93
 20255  15E7                     __ptext93:	
 20256 ;; *************** function ___ftpack *****************
 20257 ;; Defined at:
 20258 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 20259 ;; Parameters:    Size  Location     Type
 20260 ;;  arg             3   17[BANK0 ] unsigned um
 20261 ;;  exp             1   20[BANK0 ] unsigned char 
 20262 ;;  sign            1   21[BANK0 ] unsigned char 
 20263 ;; Auto vars:     Size  Location     Type
 20264 ;;		None
 20265 ;; Return value:  Size  Location     Type
 20266 ;;                  3   17[BANK0 ] float 
 20267 ;; Registers used:
 20268 ;;		wreg, status,2, status,0
 20269 ;; Tracked objects:
 20270 ;;		On entry : 0/0
 20271 ;;		On exit  : 0/0
 20272 ;;		Unchanged: 0/0
 20273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20274 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20276 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20277 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20278 ;;Total ram usage:        8 bytes
 20279 ;; Hardware stack levels used:    1
 20280 ;; Hardware stack levels required when called:    6
 20281 ;; This function calls:
 20282 ;;		Nothing
 20283 ;; This function is called by:
 20284 ;;		___awtoft
 20285 ;;		___ftadd
 20286 ;;		___ftmul
 20287 ;; This function uses a non-reentrant model
 20288 ;;
 20289                           
 20290                           
 20291                           ;psect for function ___ftpack
 20292  15E7                     ___ftpack:	
 20293                           
 20294                           ;incstack = 0
 20295                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 20296  15E7  0020               	movlb	0	; select bank0
 20297  15E8  0834               	movf	___ftpack@exp,w
 20298  15E9  1903               	btfsc	3,2
 20299  15EA  2DF0               	goto	l7338
 20300  15EB  0833               	movf	___ftpack@arg+2,w
 20301  15EC  0432               	iorwf	___ftpack@arg+1,w
 20302  15ED  0431               	iorwf	___ftpack@arg,w
 20303  15EE  1D03               	skipz
 20304  15EF  2E01               	goto	l7344
 20305  15F0                     l7338:	
 20306  15F0  3000               	movlw	0
 20307  15F1  00B1               	movwf	?___ftpack
 20308  15F2  3000               	movlw	0
 20309  15F3  00B2               	movwf	?___ftpack+1
 20310  15F4  3000               	movlw	0
 20311  15F5  00B3               	movwf	?___ftpack+2
 20312  15F6  0008               	return
 20313  15F7                     l7342:	
 20314  15F7  3001               	movlw	1
 20315  15F8  00B6               	movwf	??___ftpack
 20316  15F9  0836               	movf	??___ftpack,w
 20317  15FA  07B4               	addwf	___ftpack@exp,f
 20318  15FB  3001               	movlw	1
 20319  15FC                     u7135:	
 20320  15FC  36B3               	lsrf	___ftpack@arg+2,f
 20321  15FD  0CB2               	rrf	___ftpack@arg+1,f
 20322  15FE  0CB1               	rrf	___ftpack@arg,f
 20323  15FF  0B89               	decfsz	9,f
 20324  1600  2DFC               	goto	u7135
 20325  1601                     l7344:	
 20326  1601  30FE               	movlw	254
 20327  1602  0533               	andwf	___ftpack@arg+2,w
 20328  1603  1903               	btfsc	3,2
 20329  1604  2E1A               	goto	l1666
 20330  1605  2DF7               	goto	l7342
 20331  1606                     l7346:	
 20332  1606  3001               	movlw	1
 20333  1607  00B6               	movwf	??___ftpack
 20334  1608  0836               	movf	??___ftpack,w
 20335  1609  07B4               	addwf	___ftpack@exp,f
 20336  160A  3001               	movlw	1
 20337  160B  07B1               	addwf	___ftpack@arg,f
 20338  160C  3000               	movlw	0
 20339  160D  1803               	skipnc
 20340  160E  3001               	movlw	1
 20341  160F  07B2               	addwf	___ftpack@arg+1,f
 20342  1610  3000               	movlw	0
 20343  1611  1803               	skipnc
 20344  1612  3001               	movlw	1
 20345  1613  07B3               	addwf	___ftpack@arg+2,f
 20346  1614  3001               	movlw	1
 20347  1615                     u7155:	
 20348  1615  36B3               	lsrf	___ftpack@arg+2,f
 20349  1616  0CB2               	rrf	___ftpack@arg+1,f
 20350  1617  0CB1               	rrf	___ftpack@arg,f
 20351  1618  0B89               	decfsz	9,f
 20352  1619  2E15               	goto	u7155
 20353  161A                     l1666:	
 20354  161A  30FF               	movlw	255
 20355  161B  0533               	andwf	___ftpack@arg+2,w
 20356  161C  1903               	btfsc	3,2
 20357  161D  2E27               	goto	l7354
 20358  161E  2E06               	goto	l7346
 20359  161F                     l7352:	
 20360  161F  3001               	movlw	1
 20361  1620  02B4               	subwf	___ftpack@exp,f
 20362  1621  3001               	movlw	1
 20363  1622                     u7175:	
 20364  1622  35B1               	lslf	___ftpack@arg,f
 20365  1623  0DB2               	rlf	___ftpack@arg+1,f
 20366  1624  0DB3               	rlf	___ftpack@arg+2,f
 20367  1625  0B89               	decfsz	9,f
 20368  1626  2E22               	goto	u7175
 20369  1627                     l7354:	
 20370  1627  1BB2               	btfsc	___ftpack@arg+1,7
 20371  1628  2E2D               	goto	l1673
 20372  1629  3002               	movlw	2
 20373  162A  0234               	subwf	___ftpack@exp,w
 20374  162B  1803               	skipnc
 20375  162C  2E1F               	goto	l7352
 20376  162D                     l1673:	
 20377  162D  1834               	btfsc	___ftpack@exp,0
 20378  162E  2E35               	goto	l1674
 20379  162F  30FF               	movlw	255
 20380  1630  05B1               	andwf	___ftpack@arg,f
 20381  1631  307F               	movlw	127
 20382  1632  05B2               	andwf	___ftpack@arg+1,f
 20383  1633  30FF               	movlw	255
 20384  1634  05B3               	andwf	___ftpack@arg+2,f
 20385  1635                     l1674:	
 20386  1635  1003               	clrc
 20387  1636  0CB4               	rrf	___ftpack@exp,f
 20388  1637  0834               	movf	___ftpack@exp,w
 20389  1638  00B6               	movwf	??___ftpack
 20390  1639  01B7               	clrf	??___ftpack+1
 20391  163A  01B8               	clrf	??___ftpack+2
 20392  163B  3010               	movlw	16
 20393  163C                     u7215:	
 20394  163C  35B6               	lslf	??___ftpack,f
 20395  163D  0DB7               	rlf	??___ftpack+1,f
 20396  163E  0DB8               	rlf	??___ftpack+2,f
 20397  163F  0B89               	decfsz	9,f
 20398  1640  2E3C               	goto	u7215
 20399  1641  0836               	movf	??___ftpack,w
 20400  1642  04B1               	iorwf	___ftpack@arg,f
 20401  1643  0837               	movf	??___ftpack+1,w
 20402  1644  04B2               	iorwf	___ftpack@arg+1,f
 20403  1645  0838               	movf	??___ftpack+2,w
 20404  1646  04B3               	iorwf	___ftpack@arg+2,f
 20405  1647  0835               	movf	___ftpack@sign,w
 20406  1648  1903               	btfsc	3,2
 20407  1649  0008               	return
 20408  164A  17B3               	bsf	___ftpack@arg+2,7
 20409  164B  0008               	return
 20410  164C                     __end_of___ftpack:	
 20411                           
 20412                           	psect	text94
 20413  248F                     __ptext94:	
 20414 ;; *************** function _TMR2_StartTimer *****************
 20415 ;; Defined at:
 20416 ;;		line 87 in file "mcc_generated_files/tmr2.c"
 20417 ;; Parameters:    Size  Location     Type
 20418 ;;		None
 20419 ;; Auto vars:     Size  Location     Type
 20420 ;;		None
 20421 ;; Return value:  Size  Location     Type
 20422 ;;                  1    wreg      void 
 20423 ;; Registers used:
 20424 ;;		None
 20425 ;; Tracked objects:
 20426 ;;		On entry : 0/0
 20427 ;;		On exit  : 0/0
 20428 ;;		Unchanged: 0/0
 20429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20434 ;;Total ram usage:        0 bytes
 20435 ;; Hardware stack levels used:    1
 20436 ;; Hardware stack levels required when called:    6
 20437 ;; This function calls:
 20438 ;;		Nothing
 20439 ;; This function is called by:
 20440 ;;		_doMove
 20441 ;; This function uses a non-reentrant model
 20442 ;;
 20443                           
 20444                           
 20445                           ;psect for function _TMR2_StartTimer
 20446  248F                     _TMR2_StartTimer:	
 20447                           
 20448                           ;tmr2.c: 90: T2CONbits.TMR2ON = 1;
 20449                           
 20450                           ;incstack = 0
 20451                           ; Regs used in _TMR2_StartTimer: []
 20452  248F  0020               	movlb	0	; select bank0
 20453  2490  151F               	bsf	31,2	;volatile
 20454  2491  0008               	return
 20455  2492                     __end_of_TMR2_StartTimer:	
 20456                           
 20457                           	psect	text95
 20458  248C                     __ptext95:	
 20459 ;; *************** function _TMR0_StartTimer *****************
 20460 ;; Defined at:
 20461 ;;		line 86 in file "mcc_generated_files/tmr0.c"
 20462 ;; Parameters:    Size  Location     Type
 20463 ;;		None
 20464 ;; Auto vars:     Size  Location     Type
 20465 ;;		None
 20466 ;; Return value:  Size  Location     Type
 20467 ;;                  1    wreg      void 
 20468 ;; Registers used:
 20469 ;;		None
 20470 ;; Tracked objects:
 20471 ;;		On entry : 0/0
 20472 ;;		On exit  : 0/0
 20473 ;;		Unchanged: 0/0
 20474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20479 ;;Total ram usage:        0 bytes
 20480 ;; Hardware stack levels used:    1
 20481 ;; Hardware stack levels required when called:    6
 20482 ;; This function calls:
 20483 ;;		Nothing
 20484 ;; This function is called by:
 20485 ;;		_doMove
 20486 ;; This function uses a non-reentrant model
 20487 ;;
 20488                           
 20489                           
 20490                           ;psect for function _TMR0_StartTimer
 20491  248C                     _TMR0_StartTimer:	
 20492                           
 20493                           ;tmr0.c: 89: T0CON0bits.T0EN = 1;
 20494                           
 20495                           ;incstack = 0
 20496                           ; Regs used in _TMR0_StartTimer: []
 20497  248C  0020               	movlb	0	; select bank0
 20498  248D  1797               	bsf	23,7	;volatile
 20499  248E  0008               	return
 20500  248F                     __end_of_TMR0_StartTimer:	
 20501                           
 20502                           	psect	text96
 20503  1880                     __ptext96:	
 20504 ;; *************** function _LEDsOn *****************
 20505 ;; Defined at:
 20506 ;;		line 6 in file "LEDcomm.c"
 20507 ;; Parameters:    Size  Location     Type
 20508 ;;  LEDpins         4   36[BANK0 ] unsigned long 
 20509 ;;  topOrBottom     2   40[BANK0 ] int 
 20510 ;; Auto vars:     Size  Location     Type
 20511 ;;		None
 20512 ;; Return value:  Size  Location     Type
 20513 ;;                  1    wreg      void 
 20514 ;; Registers used:
 20515 ;;		wreg, status,2, status,0, pclath, cstack
 20516 ;; Tracked objects:
 20517 ;;		On entry : 0/0
 20518 ;;		On exit  : 0/0
 20519 ;;		Unchanged: 0/0
 20520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20521 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20523 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20524 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20525 ;;Total ram usage:       10 bytes
 20526 ;; Hardware stack levels used:    1
 20527 ;; Hardware stack levels required when called:    8
 20528 ;; This function calls:
 20529 ;;		_send_2length_2bytes_IK
 20530 ;; This function is called by:
 20531 ;;		_LED_test_openshort
 20532 ;;		_doMove
 20533 ;;		_setHeaterToggle
 20534 ;;		_demoSequence
 20535 ;; This function uses a non-reentrant model
 20536 ;;
 20537                           
 20538                           
 20539                           ;psect for function _LEDsOn
 20540  1880                     _LEDsOn:	
 20541                           
 20542                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 20543                           
 20544                           ;incstack = 0
 20545                           ; Regs used in _LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 20546  1880  0020               	movlb	0	; select bank0
 20547  1881  0844               	movf	LEDsOn@LEDpins,w
 20548  1882  00CA               	movwf	??_LEDsOn
 20549  1883  0845               	movf	LEDsOn@LEDpins+1,w
 20550  1884  00CB               	movwf	??_LEDsOn+1
 20551  1885  0846               	movf	LEDsOn@LEDpins+2,w
 20552  1886  00CC               	movwf	??_LEDsOn+2
 20553  1887  0847               	movf	LEDsOn@LEDpins+3,w
 20554  1888  00CD               	movwf	??_LEDsOn+3
 20555  1889  3010               	movlw	16
 20556  188A                     u6995:	
 20557  188A  36CD               	lsrf	??_LEDsOn+3,f
 20558  188B  0CCC               	rrf	??_LEDsOn+2,f
 20559  188C  0CCB               	rrf	??_LEDsOn+1,f
 20560  188D  0CCA               	rrf	??_LEDsOn,f
 20561  188E  0B89               	decfsz	9,f
 20562  188F  288A               	goto	u6995
 20563  1890  084B               	movf	??_LEDsOn+1,w
 20564  1891  00BD               	movwf	send_2length_2bytes_IK@data1+1
 20565  1892  084A               	movf	??_LEDsOn,w
 20566  1893  00BC               	movwf	send_2length_2bytes_IK@data1
 20567  1894  0845               	movf	LEDsOn@LEDpins+1,w
 20568  1895  00BF               	movwf	send_2length_2bytes_IK@data2+1
 20569  1896  0844               	movf	LEDsOn@LEDpins,w
 20570  1897  00BE               	movwf	send_2length_2bytes_IK@data2
 20571  1898  01C0               	clrf	send_2length_2bytes_IK@latch_start
 20572  1899  0AC0               	incf	send_2length_2bytes_IK@latch_start,f
 20573  189A  0849               	movf	LEDsOn@topOrBottom+1,w
 20574  189B  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 20575  189C  0848               	movf	LEDsOn@topOrBottom,w
 20576  189D  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 20577  189E  31A6  26E2         	fcall	_send_2length_2bytes_IK
 20578  18A0  0008               	return
 20579  18A1                     __end_of_LEDsOn:	
 20580                           
 20581                           	psect	text97
 20582  26E2                     __ptext97:	
 20583 ;; *************** function _send_2length_2bytes_IK *****************
 20584 ;; Defined at:
 20585 ;;		line 70 in file "LEDcomm.c"
 20586 ;; Parameters:    Size  Location     Type
 20587 ;;  data1           2   28[BANK0 ] unsigned int 
 20588 ;;  data2           2   30[BANK0 ] unsigned int 
 20589 ;;  latch_start     1   32[BANK0 ] unsigned char 
 20590 ;;  topOrBottom     2   33[BANK0 ] int 
 20591 ;; Auto vars:     Size  Location     Type
 20592 ;;		None
 20593 ;; Return value:  Size  Location     Type
 20594 ;;                  1    wreg      void 
 20595 ;; Registers used:
 20596 ;;		wreg, status,2, status,0, pclath, cstack
 20597 ;; Tracked objects:
 20598 ;;		On entry : 0/0
 20599 ;;		On exit  : 0/0
 20600 ;;		Unchanged: 0/0
 20601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20602 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20604 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20605 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20606 ;;Total ram usage:        8 bytes
 20607 ;; Hardware stack levels used:    1
 20608 ;; Hardware stack levels required when called:    7
 20609 ;; This function calls:
 20610 ;;		_send_2bytes_latchless_IK
 20611 ;;		_send_last_2bytes_IK
 20612 ;; This function is called by:
 20613 ;;		_LEDsOn
 20614 ;;		_LEDsPwr
 20615 ;;		_LED_setBrightnessRange
 20616 ;;		_LED_test_openshort
 20617 ;;		_LED_readConfig
 20618 ;; This function uses a non-reentrant model
 20619 ;;
 20620                           
 20621                           
 20622                           ;psect for function _send_2length_2bytes_IK
 20623  26E2                     _send_2length_2bytes_IK:	
 20624                           
 20625                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 20626                           
 20627                           ;incstack = 0
 20628                           ; Regs used in _send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 20629  26E2  0020               	movlb	0	; select bank0
 20630  26E3  083D               	movf	send_2length_2bytes_IK@data1+1,w
 20631  26E4  00B2               	movwf	send_2bytes_latchless_IK@data+1
 20632  26E5  083C               	movf	send_2length_2bytes_IK@data1,w
 20633  26E6  00B1               	movwf	send_2bytes_latchless_IK@data
 20634  26E7  319A  2298  31A6   	fcall	_send_2bytes_latchless_IK
 20635                           
 20636                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 20637  26EA  0020               	movlb	0	; select bank0
 20638  26EB  083F               	movf	send_2length_2bytes_IK@data2+1,w
 20639  26EC  00B2               	movwf	send_last_2bytes_IK@data+1
 20640  26ED  083E               	movf	send_2length_2bytes_IK@data2,w
 20641  26EE  00B1               	movwf	send_last_2bytes_IK@data
 20642  26EF  0840               	movf	send_2length_2bytes_IK@latch_start,w
 20643  26F0  00C3               	movwf	??_send_2length_2bytes_IK
 20644  26F1  0843               	movf	??_send_2length_2bytes_IK,w
 20645  26F2  00B3               	movwf	send_last_2bytes_IK@latch_start
 20646  26F3  0842               	movf	send_2length_2bytes_IK@topOrBottom+1,w
 20647  26F4  00B5               	movwf	send_last_2bytes_IK@topOrBottom+1
 20648  26F5  0841               	movf	send_2length_2bytes_IK@topOrBottom,w
 20649  26F6  00B4               	movwf	send_last_2bytes_IK@topOrBottom
 20650  26F7  319F  274F         	fcall	_send_last_2bytes_IK
 20651  26F9  0008               	return
 20652  26FA                     __end_of_send_2length_2bytes_IK:	
 20653                           
 20654                           	psect	text98
 20655  1F4F                     __ptext98:	
 20656 ;; *************** function _send_last_2bytes_IK *****************
 20657 ;; Defined at:
 20658 ;;		line 19 in file "LEDcomm.c"
 20659 ;; Parameters:    Size  Location     Type
 20660 ;;  data            2   17[BANK0 ] unsigned int 
 20661 ;;  latch_start     1   19[BANK0 ] unsigned char 
 20662 ;;  topOrBottom     2   20[BANK0 ] int 
 20663 ;; Auto vars:     Size  Location     Type
 20664 ;;  j               2   26[BANK0 ] int 
 20665 ;; Return value:  Size  Location     Type
 20666 ;;                  1    wreg      void 
 20667 ;; Registers used:
 20668 ;;		wreg, status,2, status,0
 20669 ;; Tracked objects:
 20670 ;;		On entry : 0/0
 20671 ;;		On exit  : 0/0
 20672 ;;		Unchanged: 0/0
 20673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20674 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20675 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20676 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20677 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20678 ;;Total ram usage:       11 bytes
 20679 ;; Hardware stack levels used:    1
 20680 ;; Hardware stack levels required when called:    6
 20681 ;; This function calls:
 20682 ;;		Nothing
 20683 ;; This function is called by:
 20684 ;;		_send_2length_2bytes_IK
 20685 ;; This function uses a non-reentrant model
 20686 ;;
 20687                           
 20688                           
 20689                           ;psect for function _send_last_2bytes_IK
 20690  1F4F                     _send_last_2bytes_IK:	
 20691                           
 20692                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 20693                           
 20694                           ;incstack = 0
 20695                           ; Regs used in _send_last_2bytes_IK: [wreg+status,2+status,0]
 20696  1F4F  0020               	movlb	0	; select bank0
 20697  1F50  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 20698  1F51  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 20699  1F52  1D03               	btfss	3,2
 20700  1F53  2F57               	goto	l198
 20701  1F54  0022               	movlb	2	; select bank2
 20702  1F55  120D               	bcf	13,4	;volatile
 20703  1F56  2F59               	goto	l7128
 20704  1F57                     l198:	
 20705  1F57  0022               	movlb	2	; select bank2
 20706  1F58  100E               	bcf	14,0	;volatile
 20707  1F59                     l7128:	
 20708                           
 20709                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 20710  1F59  300F               	movlw	15
 20711  1F5A  0020               	movlb	0	; select bank0
 20712  1F5B  00BA               	movwf	send_last_2bytes_IK@j
 20713  1F5C  3000               	movlw	0
 20714  1F5D  00BB               	movwf	send_last_2bytes_IK@j+1
 20715  1F5E  1BBB               	btfsc	send_last_2bytes_IK@j+1,7
 20716  1F5F  2F9A               	goto	l219
 20717  1F60                     l202:	
 20718                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 20719                           
 20720  1F60  0022               	movlb	2	; select bank2
 20721  1F61  110C               	bcf	12,2	;volatile
 20722                           
 20723                           ;LEDcomm.c: 28: if (data & 1 << j){
 20724  1F62  3001               	movlw	1
 20725  1F63  0020               	movlb	0	; select bank0
 20726  1F64  00B6               	movwf	??_send_last_2bytes_IK
 20727  1F65  3000               	movlw	0
 20728  1F66  00B7               	movwf	??_send_last_2bytes_IK+1
 20729  1F67  0A3A               	incf	send_last_2bytes_IK@j,w
 20730  1F68  2F6B               	goto	u6694
 20731  1F69                     u6695:	
 20732  1F69  35B6               	lslf	??_send_last_2bytes_IK,f
 20733  1F6A  0DB7               	rlf	??_send_last_2bytes_IK+1,f
 20734  1F6B                     u6694:	
 20735  1F6B  0B89               	decfsz	9,f
 20736  1F6C  2F69               	goto	u6695
 20737  1F6D  0831               	movf	send_last_2bytes_IK@data,w
 20738  1F6E  0536               	andwf	??_send_last_2bytes_IK,w
 20739  1F6F  00B8               	movwf	??_send_last_2bytes_IK+2
 20740  1F70  0832               	movf	send_last_2bytes_IK@data+1,w
 20741  1F71  0537               	andwf	??_send_last_2bytes_IK+1,w
 20742  1F72  00B9               	movwf	??_send_last_2bytes_IK+3
 20743  1F73  0838               	movf	??_send_last_2bytes_IK+2,w
 20744  1F74  0439               	iorwf	??_send_last_2bytes_IK+3,w
 20745  1F75  1903               	btfsc	3,2
 20746  1F76  2F7A               	goto	l208
 20747                           
 20748                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 20749  1F77  0022               	movlb	2	; select bank2
 20750  1F78  150E               	bsf	14,2	;volatile
 20751                           
 20752                           ;LEDcomm.c: 30: }
 20753  1F79  2F7C               	goto	l7136
 20754  1F7A                     l208:	
 20755                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 20756                           
 20757  1F7A  0022               	movlb	2	; select bank2
 20758  1F7B  110E               	bcf	14,2	;volatile
 20759  1F7C                     l7136:	
 20760                           
 20761                           ;LEDcomm.c: 33: if( j == latch_start) {
 20762  1F7C  0020               	movlb	0	; select bank0
 20763  1F7D  0833               	movf	send_last_2bytes_IK@latch_start,w
 20764  1F7E  00B6               	movwf	??_send_last_2bytes_IK
 20765  1F7F  01B7               	clrf	??_send_last_2bytes_IK+1
 20766  1F80  083B               	movf	send_last_2bytes_IK@j+1,w
 20767  1F81  0637               	xorwf	??_send_last_2bytes_IK+1,w
 20768  1F82  1D03               	skipz
 20769  1F83  2F86               	goto	u6715
 20770  1F84  083A               	movf	send_last_2bytes_IK@j,w
 20771  1F85  0636               	xorwf	??_send_last_2bytes_IK,w
 20772  1F86                     u6715:	
 20773  1F86  1D03               	skipz
 20774  1F87  2F91               	goto	l217
 20775                           
 20776                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 20777  1F88  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 20778  1F89  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 20779  1F8A  1D03               	btfss	3,2
 20780  1F8B  2F8F               	goto	l215
 20781  1F8C  0022               	movlb	2	; select bank2
 20782  1F8D  160D               	bsf	13,4	;volatile
 20783  1F8E  2F91               	goto	l217
 20784  1F8F                     l215:	
 20785  1F8F  0022               	movlb	2	; select bank2
 20786  1F90  140E               	bsf	14,0	;volatile
 20787  1F91                     l217:	
 20788                           ;LEDcomm.c: 37: }
 20789                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 20790                           
 20791  1F91  0022               	movlb	2	; select bank2
 20792  1F92  150C               	bsf	12,2	;volatile
 20793  1F93  30FF               	movlw	255
 20794  1F94  0020               	movlb	0	; select bank0
 20795  1F95  07BA               	addwf	send_last_2bytes_IK@j,f
 20796  1F96  30FF               	movlw	255
 20797  1F97  3DBB               	addwfc	send_last_2bytes_IK@j+1,f
 20798  1F98  1FBB               	btfss	send_last_2bytes_IK@j+1,7
 20799  1F99  2F60               	goto	l202
 20800  1F9A                     l219:	
 20801                           ;LEDcomm.c: 41: }
 20802                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 20803                           
 20804  1F9A  0022               	movlb	2	; select bank2
 20805  1F9B  110C               	bcf	12,2	;volatile
 20806                           
 20807                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 20808  1F9C  0020               	movlb	0	; select bank0
 20809  1F9D  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 20810  1F9E  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 20811  1F9F  1D03               	btfss	3,2
 20812  1FA0  2FA4               	goto	l225
 20813  1FA1  0022               	movlb	2	; select bank2
 20814  1FA2  120D               	bcf	13,4	;volatile
 20815  1FA3  0008               	return
 20816  1FA4                     l225:	
 20817  1FA4  0022               	movlb	2	; select bank2
 20818  1FA5  100E               	bcf	14,0	;volatile
 20819  1FA6  0008               	return
 20820  1FA7                     __end_of_send_last_2bytes_IK:	
 20821                           
 20822                           	psect	text99
 20823  1A98                     __ptext99:	
 20824 ;; *************** function _send_2bytes_latchless_IK *****************
 20825 ;; Defined at:
 20826 ;;		line 49 in file "LEDcomm.c"
 20827 ;; Parameters:    Size  Location     Type
 20828 ;;  data            2   17[BANK0 ] unsigned int 
 20829 ;; Auto vars:     Size  Location     Type
 20830 ;;  j               2   23[BANK0 ] int 
 20831 ;; Return value:  Size  Location     Type
 20832 ;;                  1    wreg      void 
 20833 ;; Registers used:
 20834 ;;		wreg, status,2, status,0
 20835 ;; Tracked objects:
 20836 ;;		On entry : 0/0
 20837 ;;		On exit  : 0/0
 20838 ;;		Unchanged: 0/0
 20839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20841 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20842 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20843 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20844 ;;Total ram usage:        8 bytes
 20845 ;; Hardware stack levels used:    1
 20846 ;; Hardware stack levels required when called:    6
 20847 ;; This function calls:
 20848 ;;		Nothing
 20849 ;; This function is called by:
 20850 ;;		_send_2length_2bytes_IK
 20851 ;; This function uses a non-reentrant model
 20852 ;;
 20853                           
 20854                           
 20855                           ;psect for function _send_2bytes_latchless_IK
 20856  1A98                     _send_2bytes_latchless_IK:	
 20857                           
 20858                           ;incstack = 0
 20859                           ; Regs used in _send_2bytes_latchless_IK: [wreg+status,2+status,0]
 20860                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 20861  1A98  0022               	movlb	2	; select bank2
 20862  1A99  120D               	bcf	13,4	;volatile
 20863                           
 20864                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 20865  1A9A  300F               	movlw	15
 20866  1A9B  0020               	movlb	0	; select bank0
 20867  1A9C  00B7               	movwf	send_2bytes_latchless_IK@j
 20868  1A9D  3000               	movlw	0
 20869  1A9E  00B8               	movwf	send_2bytes_latchless_IK@j+1
 20870  1A9F  1BB8               	btfsc	send_2bytes_latchless_IK@j+1,7
 20871  1AA0  2AC5               	goto	l244
 20872  1AA1                     l234:	
 20873                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 20874                           
 20875  1AA1  0022               	movlb	2	; select bank2
 20876  1AA2  110C               	bcf	12,2	;volatile
 20877                           
 20878                           ;LEDcomm.c: 56: if (data & 1 << j){
 20879  1AA3  3001               	movlw	1
 20880  1AA4  0020               	movlb	0	; select bank0
 20881  1AA5  00B3               	movwf	??_send_2bytes_latchless_IK
 20882  1AA6  3000               	movlw	0
 20883  1AA7  00B4               	movwf	??_send_2bytes_latchless_IK+1
 20884  1AA8  0A37               	incf	send_2bytes_latchless_IK@j,w
 20885  1AA9  2AAC               	goto	u6764
 20886  1AAA                     u6765:	
 20887  1AAA  35B3               	lslf	??_send_2bytes_latchless_IK,f
 20888  1AAB  0DB4               	rlf	??_send_2bytes_latchless_IK+1,f
 20889  1AAC                     u6764:	
 20890  1AAC  0B89               	decfsz	9,f
 20891  1AAD  2AAA               	goto	u6765
 20892  1AAE  0831               	movf	send_2bytes_latchless_IK@data,w
 20893  1AAF  0533               	andwf	??_send_2bytes_latchless_IK,w
 20894  1AB0  00B5               	movwf	??_send_2bytes_latchless_IK+2
 20895  1AB1  0832               	movf	send_2bytes_latchless_IK@data+1,w
 20896  1AB2  0534               	andwf	??_send_2bytes_latchless_IK+1,w
 20897  1AB3  00B6               	movwf	??_send_2bytes_latchless_IK+3
 20898  1AB4  0835               	movf	??_send_2bytes_latchless_IK+2,w
 20899  1AB5  0436               	iorwf	??_send_2bytes_latchless_IK+3,w
 20900  1AB6  1903               	btfsc	3,2
 20901  1AB7  2ABB               	goto	l240
 20902                           
 20903                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 20904  1AB8  0022               	movlb	2	; select bank2
 20905  1AB9  150E               	bsf	14,2	;volatile
 20906                           
 20907                           ;LEDcomm.c: 58: }
 20908  1ABA  2ABD               	goto	l242
 20909  1ABB                     l240:	
 20910                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 20911                           
 20912  1ABB  0022               	movlb	2	; select bank2
 20913  1ABC  110E               	bcf	14,2	;volatile
 20914  1ABD                     l242:	
 20915                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 20916                           
 20917  1ABD  150C               	bsf	12,2	;volatile
 20918  1ABE  30FF               	movlw	255
 20919  1ABF  0020               	movlb	0	; select bank0
 20920  1AC0  07B7               	addwf	send_2bytes_latchless_IK@j,f
 20921  1AC1  30FF               	movlw	255
 20922  1AC2  3DB8               	addwfc	send_2bytes_latchless_IK@j+1,f
 20923  1AC3  1FB8               	btfss	send_2bytes_latchless_IK@j+1,7
 20924  1AC4  2AA1               	goto	l234
 20925  1AC5                     l244:	
 20926                           ;LEDcomm.c: 64: }
 20927                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 20928                           
 20929  1AC5  0022               	movlb	2	; select bank2
 20930  1AC6  110C               	bcf	12,2	;volatile
 20931  1AC7  0008               	return
 20932  1AC8                     __end_of_send_2bytes_latchless_IK:	
 20933                           
 20934                           	psect	text100
 20935  26B5                     __ptext100:	
 20936 ;; *************** function _SYSTEM_Initialize *****************
 20937 ;; Defined at:
 20938 ;;		line 77 in file "mcc_generated_files/mcc.c"
 20939 ;; Parameters:    Size  Location     Type
 20940 ;;		None
 20941 ;; Auto vars:     Size  Location     Type
 20942 ;;		None
 20943 ;; Return value:  Size  Location     Type
 20944 ;;                  1    wreg      void 
 20945 ;; Registers used:
 20946 ;;		wreg, status,2, status,0, pclath, cstack
 20947 ;; Tracked objects:
 20948 ;;		On entry : 0/0
 20949 ;;		On exit  : 0/0
 20950 ;;		Unchanged: 0/0
 20951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20956 ;;Total ram usage:        0 bytes
 20957 ;; Hardware stack levels used:    1
 20958 ;; Hardware stack levels required when called:    8
 20959 ;; This function calls:
 20960 ;;		_EUSART_Initialize
 20961 ;;		_OSCILLATOR_Initialize
 20962 ;;		_PIN_MANAGER_Initialize
 20963 ;;		_PMD_Initialize
 20964 ;;		_TMR0_Initialize
 20965 ;;		_TMR2_Initialize
 20966 ;;		_WDT_Initialize
 20967 ;; This function is called by:
 20968 ;;		_main
 20969 ;; This function uses a non-reentrant model
 20970 ;;
 20971                           
 20972                           
 20973                           ;psect for function _SYSTEM_Initialize
 20974  26B5                     _SYSTEM_Initialize:	
 20975                           
 20976                           ;mcc.c: 80: PMD_Initialize();
 20977                           
 20978                           ;incstack = 0
 20979                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20980  26B5  31A5  253D  31A6   	fcall	_PMD_Initialize
 20981                           
 20982                           ;mcc.c: 81: PIN_MANAGER_Initialize();
 20983  26B8  319B  2328  31A6   	fcall	_PIN_MANAGER_Initialize
 20984                           
 20985                           ;mcc.c: 82: OSCILLATOR_Initialize();
 20986  26BB  31A5  25A1  31A6   	fcall	_OSCILLATOR_Initialize
 20987                           
 20988                           ;mcc.c: 83: WDT_Initialize();
 20989  26BE  31A4  24CB  31A6   	fcall	_WDT_Initialize
 20990                           
 20991                           ;mcc.c: 84: TMR2_Initialize();
 20992  26C1  31A6  2669  31A6   	fcall	_TMR2_Initialize
 20993                           
 20994                           ;mcc.c: 85: TMR0_Initialize();
 20995  26C4  31A6  268D  31A6   	fcall	_TMR0_Initialize
 20996                           
 20997                           ;mcc.c: 86: EUSART_Initialize();
 20998  26C7  31A6  26FA         	fcall	_EUSART_Initialize
 20999  26C9  0008               	return
 21000  26CA                     __end_of_SYSTEM_Initialize:	
 21001                           
 21002                           	psect	text101
 21003  24CB                     __ptext101:	
 21004 ;; *************** function _WDT_Initialize *****************
 21005 ;; Defined at:
 21006 ;;		line 103 in file "mcc_generated_files/mcc.c"
 21007 ;; Parameters:    Size  Location     Type
 21008 ;;		None
 21009 ;; Auto vars:     Size  Location     Type
 21010 ;;		None
 21011 ;; Return value:  Size  Location     Type
 21012 ;;                  1    wreg      void 
 21013 ;; Registers used:
 21014 ;;		wreg
 21015 ;; Tracked objects:
 21016 ;;		On entry : 0/0
 21017 ;;		On exit  : 0/0
 21018 ;;		Unchanged: 0/0
 21019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21024 ;;Total ram usage:        0 bytes
 21025 ;; Hardware stack levels used:    1
 21026 ;; Hardware stack levels required when called:    6
 21027 ;; This function calls:
 21028 ;;		Nothing
 21029 ;; This function is called by:
 21030 ;;		_SYSTEM_Initialize
 21031 ;; This function uses a non-reentrant model
 21032 ;;
 21033                           
 21034                           
 21035                           ;psect for function _WDT_Initialize
 21036  24CB                     _WDT_Initialize:	
 21037                           
 21038                           ;mcc.c: 106: WDTCON = 0x16;
 21039                           
 21040                           ;incstack = 0
 21041                           ; Regs used in _WDT_Initialize: [wreg]
 21042  24CB  3016               	movlw	22
 21043  24CC  0021               	movlb	1	; select bank1
 21044  24CD  0097               	movwf	23	;volatile
 21045  24CE  0008               	return
 21046  24CF                     __end_of_WDT_Initialize:	
 21047                           
 21048                           	psect	text102
 21049  2669                     __ptext102:	
 21050 ;; *************** function _TMR2_Initialize *****************
 21051 ;; Defined at:
 21052 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 21053 ;; Parameters:    Size  Location     Type
 21054 ;;		None
 21055 ;; Auto vars:     Size  Location     Type
 21056 ;;		None
 21057 ;; Return value:  Size  Location     Type
 21058 ;;                  1    wreg      void 
 21059 ;; Registers used:
 21060 ;;		wreg, status,2, status,0, pclath, cstack
 21061 ;; Tracked objects:
 21062 ;;		On entry : 0/0
 21063 ;;		On exit  : 0/0
 21064 ;;		Unchanged: 0/0
 21065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21070 ;;Total ram usage:        0 bytes
 21071 ;; Hardware stack levels used:    1
 21072 ;; Hardware stack levels required when called:    7
 21073 ;; This function calls:
 21074 ;;		_TMR2_SetInterruptHandler
 21075 ;; This function is called by:
 21076 ;;		_SYSTEM_Initialize
 21077 ;; This function uses a non-reentrant model
 21078 ;;
 21079                           
 21080                           
 21081                           ;psect for function _TMR2_Initialize
 21082  2669                     _TMR2_Initialize:	
 21083                           
 21084                           ;tmr2.c: 69: PR2 = 0x0F;
 21085                           
 21086                           ;incstack = 0
 21087                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 21088  2669  300F               	movlw	15
 21089  266A  0020               	movlb	0	; select bank0
 21090  266B  009E               	movwf	30	;volatile
 21091                           
 21092                           ;tmr2.c: 72: TMR2 = 0x00;
 21093  266C  019D               	clrf	29	;volatile
 21094                           
 21095                           ;tmr2.c: 75: PIR1bits.TMR2IF = 0;
 21096  266D  1091               	bcf	17,1	;volatile
 21097                           
 21098                           ;tmr2.c: 78: PIE1bits.TMR2IE = 1;
 21099  266E  0021               	movlb	1	; select bank1
 21100  266F  1491               	bsf	17,1	;volatile
 21101                           
 21102                           ;tmr2.c: 81: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 21103  2670  307D               	movlw	low _TMR2_DefaultInterruptHandler
 21104  2671  0020               	movlb	0	; select bank0
 21105  2672  00B1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 21106  2673  3025               	movlw	high _TMR2_DefaultInterruptHandler
 21107  2674  00B2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 21108  2675  31A5  258F         	fcall	_TMR2_SetInterruptHandler
 21109                           
 21110                           ;tmr2.c: 84: T2CON = 0x4E;
 21111  2677  304E               	movlw	78
 21112  2678  0020               	movlb	0	; select bank0
 21113  2679  009F               	movwf	31	;volatile
 21114  267A  0008               	return
 21115  267B                     __end_of_TMR2_Initialize:	
 21116                           
 21117                           	psect	text103
 21118  258F                     __ptext103:	
 21119 ;; *************** function _TMR2_SetInterruptHandler *****************
 21120 ;; Defined at:
 21121 ;;		line 132 in file "mcc_generated_files/tmr2.c"
 21122 ;; Parameters:    Size  Location     Type
 21123 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 21124 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 21125 ;; Auto vars:     Size  Location     Type
 21126 ;;		None
 21127 ;; Return value:  Size  Location     Type
 21128 ;;                  1    wreg      void 
 21129 ;; Registers used:
 21130 ;;		wreg
 21131 ;; Tracked objects:
 21132 ;;		On entry : 0/0
 21133 ;;		On exit  : 0/0
 21134 ;;		Unchanged: 0/0
 21135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21139 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21140 ;;Total ram usage:        2 bytes
 21141 ;; Hardware stack levels used:    1
 21142 ;; Hardware stack levels required when called:    6
 21143 ;; This function calls:
 21144 ;;		Nothing
 21145 ;; This function is called by:
 21146 ;;		_TMR2_Initialize
 21147 ;; This function uses a non-reentrant model
 21148 ;;
 21149                           
 21150                           
 21151                           ;psect for function _TMR2_SetInterruptHandler
 21152  258F                     _TMR2_SetInterruptHandler:	
 21153                           
 21154                           ;tmr2.c: 133: TMR2_InterruptHandler = InterruptHandler;
 21155                           
 21156                           ;incstack = 0
 21157                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 21158  258F  0020               	movlb	0	; select bank0
 21159  2590  0832               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 21160  2591  0022               	movlb	2	; select bank2
 21161  2592  00ED               	movwf	(_TMR2_InterruptHandler+1)^(0+256)
 21162  2593  0020               	movlb	0	; select bank0
 21163  2594  0831               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 21164  2595  0022               	movlb	2	; select bank2
 21165  2596  00EC               	movwf	_TMR2_InterruptHandler^(0+256)
 21166  2597  0008               	return
 21167  2598                     __end_of_TMR2_SetInterruptHandler:	
 21168                           
 21169                           	psect	text104
 21170  268D                     __ptext104:	
 21171 ;; *************** function _TMR0_Initialize *****************
 21172 ;; Defined at:
 21173 ;;		line 60 in file "mcc_generated_files/tmr0.c"
 21174 ;; Parameters:    Size  Location     Type
 21175 ;;		None
 21176 ;; Auto vars:     Size  Location     Type
 21177 ;;		None
 21178 ;; Return value:  Size  Location     Type
 21179 ;;                  1    wreg      void 
 21180 ;; Registers used:
 21181 ;;		wreg, status,2, status,0, pclath, cstack
 21182 ;; Tracked objects:
 21183 ;;		On entry : 0/0
 21184 ;;		On exit  : 0/0
 21185 ;;		Unchanged: 0/0
 21186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21191 ;;Total ram usage:        0 bytes
 21192 ;; Hardware stack levels used:    1
 21193 ;; Hardware stack levels required when called:    7
 21194 ;; This function calls:
 21195 ;;		_TMR0_SetInterruptHandler
 21196 ;; This function is called by:
 21197 ;;		_SYSTEM_Initialize
 21198 ;; This function uses a non-reentrant model
 21199 ;;
 21200                           
 21201                           
 21202                           ;psect for function _TMR0_Initialize
 21203  268D                     _TMR0_Initialize:	
 21204                           
 21205                           ;tmr0.c: 65: T0CON1 = 0x58;
 21206                           
 21207                           ;incstack = 0
 21208                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 21209  268D  3058               	movlw	88
 21210  268E  0020               	movlb	0	; select bank0
 21211  268F  0098               	movwf	24	;volatile
 21212                           
 21213                           ;tmr0.c: 68: TMR0H = 0x61;
 21214  2690  3061               	movlw	97
 21215  2691  0096               	movwf	22	;volatile
 21216                           
 21217                           ;tmr0.c: 71: TMR0L = 0x00;
 21218  2692  0195               	clrf	21	;volatile
 21219                           
 21220                           ;tmr0.c: 74: PIR0bits.TMR0IF = 0;
 21221  2693  1290               	bcf	16,5	;volatile
 21222                           
 21223                           ;tmr0.c: 77: PIE0bits.TMR0IE = 1;
 21224  2694  0021               	movlb	1	; select bank1
 21225  2695  1690               	bsf	16,5	;volatile
 21226                           
 21227                           ;tmr0.c: 80: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 21228  2696  305C               	movlw	low _TMR0_DefaultInterruptHandler
 21229  2697  0020               	movlb	0	; select bank0
 21230  2698  00B1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 21231  2699  301B               	movlw	high _TMR0_DefaultInterruptHandler
 21232  269A  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 21233  269B  31A5  2586         	fcall	_TMR0_SetInterruptHandler
 21234                           
 21235                           ;tmr0.c: 83: T0CON0 = 0x89;
 21236  269D  3089               	movlw	137
 21237  269E  0020               	movlb	0	; select bank0
 21238  269F  0097               	movwf	23	;volatile
 21239  26A0  0008               	return
 21240  26A1                     __end_of_TMR0_Initialize:	
 21241                           
 21242                           	psect	text105
 21243  2586                     __ptext105:	
 21244 ;; *************** function _TMR0_SetInterruptHandler *****************
 21245 ;; Defined at:
 21246 ;;		line 133 in file "mcc_generated_files/tmr0.c"
 21247 ;; Parameters:    Size  Location     Type
 21248 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 21249 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 21250 ;; Auto vars:     Size  Location     Type
 21251 ;;		None
 21252 ;; Return value:  Size  Location     Type
 21253 ;;                  1    wreg      void 
 21254 ;; Registers used:
 21255 ;;		wreg
 21256 ;; Tracked objects:
 21257 ;;		On entry : 0/0
 21258 ;;		On exit  : 0/0
 21259 ;;		Unchanged: 0/0
 21260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21261 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21264 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21265 ;;Total ram usage:        2 bytes
 21266 ;; Hardware stack levels used:    1
 21267 ;; Hardware stack levels required when called:    6
 21268 ;; This function calls:
 21269 ;;		Nothing
 21270 ;; This function is called by:
 21271 ;;		_TMR0_Initialize
 21272 ;; This function uses a non-reentrant model
 21273 ;;
 21274                           
 21275                           
 21276                           ;psect for function _TMR0_SetInterruptHandler
 21277  2586                     _TMR0_SetInterruptHandler:	
 21278                           
 21279                           ;tmr0.c: 134: TMR0_InterruptHandler = InterruptHandler;
 21280                           
 21281                           ;incstack = 0
 21282                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 21283  2586  0020               	movlb	0	; select bank0
 21284  2587  0832               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 21285  2588  0022               	movlb	2	; select bank2
 21286  2589  00EF               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 21287  258A  0020               	movlb	0	; select bank0
 21288  258B  0831               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 21289  258C  0022               	movlb	2	; select bank2
 21290  258D  00EE               	movwf	_TMR0_InterruptHandler^(0+256)
 21291  258E  0008               	return
 21292  258F                     __end_of_TMR0_SetInterruptHandler:	
 21293                           
 21294                           	psect	text106
 21295  253D                     __ptext106:	
 21296 ;; *************** function _PMD_Initialize *****************
 21297 ;; Defined at:
 21298 ;;		line 109 in file "mcc_generated_files/mcc.c"
 21299 ;; Parameters:    Size  Location     Type
 21300 ;;		None
 21301 ;; Auto vars:     Size  Location     Type
 21302 ;;		None
 21303 ;; Return value:  Size  Location     Type
 21304 ;;                  1    wreg      void 
 21305 ;; Registers used:
 21306 ;;		status,2
 21307 ;; Tracked objects:
 21308 ;;		On entry : 0/0
 21309 ;;		On exit  : 0/0
 21310 ;;		Unchanged: 0/0
 21311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21316 ;;Total ram usage:        0 bytes
 21317 ;; Hardware stack levels used:    1
 21318 ;; Hardware stack levels required when called:    6
 21319 ;; This function calls:
 21320 ;;		Nothing
 21321 ;; This function is called by:
 21322 ;;		_SYSTEM_Initialize
 21323 ;; This function uses a non-reentrant model
 21324 ;;
 21325                           
 21326                           
 21327                           ;psect for function _PMD_Initialize
 21328  253D                     _PMD_Initialize:	
 21329                           
 21330                           ;mcc.c: 112: PMD0 = 0x00;
 21331                           
 21332                           ;incstack = 0
 21333                           ; Regs used in _PMD_Initialize: [status,2]
 21334  253D  0032               	movlb	18	; select bank18
 21335  253E  0191               	clrf	17	;volatile
 21336                           
 21337                           ;mcc.c: 114: PMD1 = 0x00;
 21338  253F  0192               	clrf	18	;volatile
 21339                           
 21340                           ;mcc.c: 116: PMD2 = 0x00;
 21341  2540  0193               	clrf	19	;volatile
 21342                           
 21343                           ;mcc.c: 118: PMD3 = 0x00;
 21344  2541  0194               	clrf	20	;volatile
 21345                           
 21346                           ;mcc.c: 120: PMD4 = 0x00;
 21347  2542  0195               	clrf	21	;volatile
 21348                           
 21349                           ;mcc.c: 122: PMD5 = 0x00;
 21350  2543  0196               	clrf	22	;volatile
 21351  2544  0008               	return
 21352  2545                     __end_of_PMD_Initialize:	
 21353                           
 21354                           	psect	text107
 21355  1B28                     __ptext107:	
 21356 ;; *************** function _PIN_MANAGER_Initialize *****************
 21357 ;; Defined at:
 21358 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 21359 ;; Parameters:    Size  Location     Type
 21360 ;;		None
 21361 ;; Auto vars:     Size  Location     Type
 21362 ;;		None
 21363 ;; Return value:  Size  Location     Type
 21364 ;;                  1    wreg      void 
 21365 ;; Registers used:
 21366 ;;		wreg, status,2, status,0
 21367 ;; Tracked objects:
 21368 ;;		On entry : 0/0
 21369 ;;		On exit  : 0/0
 21370 ;;		Unchanged: 0/0
 21371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21376 ;;Total ram usage:        0 bytes
 21377 ;; Hardware stack levels used:    1
 21378 ;; Hardware stack levels required when called:    6
 21379 ;; This function calls:
 21380 ;;		Nothing
 21381 ;; This function is called by:
 21382 ;;		_SYSTEM_Initialize
 21383 ;; This function uses a non-reentrant model
 21384 ;;
 21385                           
 21386                           
 21387                           ;psect for function _PIN_MANAGER_Initialize
 21388  1B28                     _PIN_MANAGER_Initialize:	
 21389                           
 21390                           ;pin_manager.c: 57: LATA = 0x00;
 21391                           
 21392                           ;incstack = 0
 21393                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 21394  1B28  0022               	movlb	2	; select bank2
 21395  1B29  018C               	clrf	12	;volatile
 21396                           
 21397                           ;pin_manager.c: 58: LATB = 0x00;
 21398  1B2A  018D               	clrf	13	;volatile
 21399                           
 21400                           ;pin_manager.c: 59: LATC = 0x00;
 21401  1B2B  018E               	clrf	14	;volatile
 21402                           
 21403                           ;pin_manager.c: 64: TRISA = 0x33;
 21404  1B2C  3033               	movlw	51
 21405  1B2D  0021               	movlb	1	; select bank1
 21406  1B2E  008C               	movwf	12	;volatile
 21407                           
 21408                           ;pin_manager.c: 65: TRISB = 0xE0;
 21409  1B2F  30E0               	movlw	224
 21410  1B30  008D               	movwf	13	;volatile
 21411                           
 21412                           ;pin_manager.c: 66: TRISC = 0x78;
 21413  1B31  3078               	movlw	120
 21414  1B32  008E               	movwf	14	;volatile
 21415                           
 21416                           ;pin_manager.c: 71: ANSELC = 0x40;
 21417  1B33  3040               	movlw	64
 21418  1B34  0023               	movlb	3	; select bank3
 21419  1B35  008E               	movwf	14	;volatile
 21420                           
 21421                           ;pin_manager.c: 72: ANSELB = 0x00;
 21422  1B36  018D               	clrf	13	;volatile
 21423                           
 21424                           ;pin_manager.c: 73: ANSELA = 0x00;
 21425  1B37  018C               	clrf	12	;volatile
 21426                           
 21427                           ;pin_manager.c: 78: WPUB = 0x00;
 21428  1B38  0024               	movlb	4	; select bank4
 21429  1B39  018D               	clrf	13	;volatile
 21430                           
 21431                           ;pin_manager.c: 79: WPUA = 0x00;
 21432  1B3A  018C               	clrf	12	;volatile
 21433                           
 21434                           ;pin_manager.c: 80: WPUC = 0xC0;
 21435  1B3B  30C0               	movlw	192
 21436  1B3C  008E               	movwf	14	;volatile
 21437                           
 21438                           ;pin_manager.c: 85: ODCONA = 0x00;
 21439  1B3D  0025               	movlb	5	; select bank5
 21440  1B3E  018C               	clrf	12	;volatile
 21441                           
 21442                           ;pin_manager.c: 86: ODCONB = 0x00;
 21443  1B3F  018D               	clrf	13	;volatile
 21444                           
 21445                           ;pin_manager.c: 87: ODCONC = 0x00;
 21446  1B40  018E               	clrf	14	;volatile
 21447                           
 21448                           ;pin_manager.c: 94: SSP1DATPPSbits.SSP1DATPPS = 0x0D;
 21449  1B41  003C               	movlb	28	; select bank28
 21450  1B42  0821               	movf	33,w	;volatile
 21451  1B43  39E0               	andlw	-32
 21452  1B44  380D               	iorlw	13
 21453  1B45  00A1               	movwf	33	;volatile
 21454                           
 21455                           ;pin_manager.c: 95: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 21456  1B46  0820               	movf	32,w	;volatile
 21457  1B47  39E0               	andlw	-32
 21458  1B48  380E               	iorlw	14
 21459  1B49  00A0               	movwf	32	;volatile
 21460                           
 21461                           ;pin_manager.c: 96: RXPPSbits.RXPPS = 0x0F;
 21462  1B4A  0824               	movf	36,w	;volatile
 21463  1B4B  39E0               	andlw	-32
 21464  1B4C  380F               	iorlw	15
 21465  1B4D  00A4               	movwf	36	;volatile
 21466                           
 21467                           ;pin_manager.c: 97: RC7PPSbits.RC7PPS = 0x14;
 21468  1B4E  003D               	movlb	29	; select bank29
 21469  1B4F  0827               	movf	39,w	;volatile
 21470  1B50  39E0               	andlw	-32
 21471  1B51  3814               	iorlw	20
 21472  1B52  00A7               	movwf	39	;volatile
 21473                           
 21474                           ;pin_manager.c: 98: RB6PPSbits.RB6PPS = 0x18;
 21475  1B53  081E               	movf	30,w	;volatile
 21476  1B54  39E0               	andlw	-32
 21477  1B55  3818               	iorlw	24
 21478  1B56  009E               	movwf	30	;volatile
 21479                           
 21480                           ;pin_manager.c: 99: RB5PPSbits.RB5PPS = 0x19;
 21481  1B57  081D               	movf	29,w	;volatile
 21482  1B58  39E0               	andlw	-32
 21483  1B59  3819               	iorlw	25
 21484  1B5A  009D               	movwf	29	;volatile
 21485  1B5B  0008               	return
 21486  1B5C                     __end_of_PIN_MANAGER_Initialize:	
 21487                           
 21488                           	psect	text108
 21489  25A1                     __ptext108:	
 21490 ;; *************** function _OSCILLATOR_Initialize *****************
 21491 ;; Defined at:
 21492 ;;		line 89 in file "mcc_generated_files/mcc.c"
 21493 ;; Parameters:    Size  Location     Type
 21494 ;;		None
 21495 ;; Auto vars:     Size  Location     Type
 21496 ;;		None
 21497 ;; Return value:  Size  Location     Type
 21498 ;;                  1    wreg      void 
 21499 ;; Registers used:
 21500 ;;		wreg, status,2
 21501 ;; Tracked objects:
 21502 ;;		On entry : 0/0
 21503 ;;		On exit  : 0/0
 21504 ;;		Unchanged: 0/0
 21505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21510 ;;Total ram usage:        0 bytes
 21511 ;; Hardware stack levels used:    1
 21512 ;; Hardware stack levels required when called:    6
 21513 ;; This function calls:
 21514 ;;		Nothing
 21515 ;; This function is called by:
 21516 ;;		_SYSTEM_Initialize
 21517 ;; This function uses a non-reentrant model
 21518 ;;
 21519                           
 21520                           
 21521                           ;psect for function _OSCILLATOR_Initialize
 21522  25A1                     _OSCILLATOR_Initialize:	
 21523                           
 21524                           ;mcc.c: 92: OSCCON1 = 0x62;
 21525                           
 21526                           ;incstack = 0
 21527                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 21528  25A1  3062               	movlw	98
 21529  25A2  0032               	movlb	18	; select bank18
 21530  25A3  0099               	movwf	25	;volatile
 21531                           
 21532                           ;mcc.c: 94: OSCCON3 = 0x00;
 21533  25A4  019B               	clrf	27	;volatile
 21534                           
 21535                           ;mcc.c: 96: OSCEN = 0x00;
 21536  25A5  019D               	clrf	29	;volatile
 21537                           
 21538                           ;mcc.c: 98: OSCFRQ = 0x03;
 21539  25A6  3003               	movlw	3
 21540  25A7  009F               	movwf	31	;volatile
 21541                           
 21542                           ;mcc.c: 100: OSCTUNE = 0x20;
 21543  25A8  3020               	movlw	32
 21544  25A9  009E               	movwf	30	;volatile
 21545  25AA  0008               	return
 21546  25AB                     __end_of_OSCILLATOR_Initialize:	
 21547                           
 21548                           	psect	text109
 21549  26FA                     __ptext109:	
 21550 ;; *************** function _EUSART_Initialize *****************
 21551 ;; Defined at:
 21552 ;;		line 72 in file "mcc_generated_files/eusart.c"
 21553 ;; Parameters:    Size  Location     Type
 21554 ;;		None
 21555 ;; Auto vars:     Size  Location     Type
 21556 ;;		None
 21557 ;; Return value:  Size  Location     Type
 21558 ;;                  1    wreg      void 
 21559 ;; Registers used:
 21560 ;;		wreg, status,2
 21561 ;; Tracked objects:
 21562 ;;		On entry : 0/0
 21563 ;;		On exit  : 0/0
 21564 ;;		Unchanged: 0/0
 21565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21569 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21570 ;;Total ram usage:        1 bytes
 21571 ;; Hardware stack levels used:    1
 21572 ;; Hardware stack levels required when called:    6
 21573 ;; This function calls:
 21574 ;;		Nothing
 21575 ;; This function is called by:
 21576 ;;		_SYSTEM_Initialize
 21577 ;; This function uses a non-reentrant model
 21578 ;;
 21579                           
 21580                           
 21581                           ;psect for function _EUSART_Initialize
 21582  26FA                     _EUSART_Initialize:	
 21583                           
 21584                           ;eusart.c: 75: PIE1bits.RCIE = 0;
 21585                           
 21586                           ;incstack = 0
 21587                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 21588  26FA  0021               	movlb	1	; select bank1
 21589  26FB  1291               	bcf	17,5	;volatile
 21590                           
 21591                           ;eusart.c: 76: PIE1bits.TXIE = 0;
 21592  26FC  1211               	bcf	17,4	;volatile
 21593                           
 21594                           ;eusart.c: 80: BAUD1CON = 0x08;
 21595  26FD  3008               	movlw	8
 21596  26FE  0023               	movlb	3	; select bank3
 21597  26FF  009F               	movwf	31	;volatile
 21598                           
 21599                           ;eusart.c: 83: RC1STA = 0x90;
 21600  2700  3090               	movlw	144
 21601  2701  009D               	movwf	29	;volatile
 21602                           
 21603                           ;eusart.c: 86: TX1STA = 0x24;
 21604  2702  3024               	movlw	36
 21605  2703  009E               	movwf	30	;volatile
 21606                           
 21607                           ;eusart.c: 89: SP1BRGL = 0x19;
 21608  2704  3019               	movlw	25
 21609  2705  009B               	movwf	27	;volatile
 21610                           
 21611                           ;eusart.c: 92: SP1BRGH = 0x00;
 21612  2706  019C               	clrf	28	;volatile
 21613                           
 21614                           ;eusart.c: 96: eusartTxHead = 0;
 21615  2707  01FD               	clrf	_eusartTxHead	;volatile
 21616                           
 21617                           ;eusart.c: 97: eusartTxTail = 0;
 21618  2708  0020               	movlb	0	; select bank0
 21619  2709  01D7               	clrf	_eusartTxTail	;volatile
 21620                           
 21621                           ;eusart.c: 98: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 21622  270A  3008               	movlw	8
 21623  270B  00B1               	movwf	??_EUSART_Initialize
 21624  270C  0831               	movf	??_EUSART_Initialize,w
 21625  270D  00DE               	movwf	_eusartTxBufferRemaining	;volatile
 21626                           
 21627                           ;eusart.c: 100: eusartRxHead = 0;
 21628  270E  01D6               	clrf	_eusartRxHead	;volatile
 21629                           
 21630                           ;eusart.c: 101: eusartRxTail = 0;
 21631  270F  01D5               	clrf	_eusartRxTail	;volatile
 21632                           
 21633                           ;eusart.c: 102: eusartRxCount = 0;
 21634  2710  01D4               	clrf	_eusartRxCount	;volatile
 21635                           
 21636                           ;eusart.c: 105: PIE1bits.RCIE = 1;
 21637  2711  0021               	movlb	1	; select bank1
 21638  2712  1691               	bsf	17,5	;volatile
 21639  2713  0008               	return
 21640  2714                     __end_of_EUSART_Initialize:	
 21641                           
 21642                           	psect	text110
 21643  27E0                     __ptext110:	
 21644 ;; *************** function _EUSART_Read *****************
 21645 ;; Defined at:
 21646 ;;		line 108 in file "mcc_generated_files/eusart.c"
 21647 ;; Parameters:    Size  Location     Type
 21648 ;;		None
 21649 ;; Auto vars:     Size  Location     Type
 21650 ;;  readValue       1   18[BANK0 ] unsigned char 
 21651 ;; Return value:  Size  Location     Type
 21652 ;;                  1    wreg      unsigned char 
 21653 ;; Registers used:
 21654 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21655 ;; Tracked objects:
 21656 ;;		On entry : 0/0
 21657 ;;		On exit  : 0/0
 21658 ;;		Unchanged: 0/0
 21659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21662 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21663 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21664 ;;Total ram usage:        2 bytes
 21665 ;; Hardware stack levels used:    1
 21666 ;; Hardware stack levels required when called:    6
 21667 ;; This function calls:
 21668 ;;		Nothing
 21669 ;; This function is called by:
 21670 ;;		_main
 21671 ;;		_getch
 21672 ;; This function uses a non-reentrant model
 21673 ;;
 21674                           
 21675                           
 21676                           ;psect for function _EUSART_Read
 21677  27E0                     _EUSART_Read:	
 21678                           
 21679                           ;eusart.c: 110: uint8_t readValue = 0;
 21680                           
 21681                           ;incstack = 0
 21682                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 21683  27E0  0020               	movlb	0	; select bank0
 21684  27E1  01B2               	clrf	EUSART_Read@readValue
 21685  27E2                     l6220:	
 21686                           ;eusart.c: 113: {
 21687                           
 21688                           ;eusart.c: 112: while(0 == eusartRxCount)
 21689                           
 21690  27E2  0854               	movf	_eusartRxCount,w	;volatile
 21691  27E3  1903               	btfsc	3,2
 21692  27E4  2FE2               	goto	l6220
 21693                           
 21694                           ;eusart.c: 114: }
 21695                           ;eusart.c: 116: readValue = eusartRxBuffer[eusartRxTail++];
 21696  27E5  0855               	movf	_eusartRxTail,w
 21697  27E6  3ED0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 21698  27E7  0086               	movwf	6
 21699  27E8  3001               	movlw	1	; select bank3/4
 21700  27E9  0087               	movwf	7
 21701  27EA  0801               	movf	1,w
 21702  27EB  00B1               	movwf	??_EUSART_Read
 21703  27EC  0831               	movf	??_EUSART_Read,w
 21704  27ED  00B2               	movwf	EUSART_Read@readValue
 21705  27EE  3001               	movlw	1
 21706  27EF  00B1               	movwf	??_EUSART_Read
 21707  27F0  0831               	movf	??_EUSART_Read,w
 21708  27F1  07D5               	addwf	_eusartRxTail,f	;volatile
 21709                           
 21710                           ;eusart.c: 117: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 21711  27F2  3008               	movlw	8
 21712  27F3  0255               	subwf	_eusartRxTail,w	;volatile
 21713  27F4  1803               	btfsc	3,0
 21714                           
 21715                           ;eusart.c: 118: {
 21716                           ;eusart.c: 119: eusartRxTail = 0;
 21717  27F5  01D5               	clrf	_eusartRxTail	;volatile
 21718                           
 21719                           ;eusart.c: 120: }
 21720                           ;eusart.c: 121: PIE1bits.RCIE = 0;
 21721  27F6  0021               	movlb	1	; select bank1
 21722  27F7  1291               	bcf	17,5	;volatile
 21723                           
 21724                           ;eusart.c: 122: eusartRxCount--;
 21725  27F8  3001               	movlw	1
 21726  27F9  0020               	movlb	0	; select bank0
 21727  27FA  02D4               	subwf	_eusartRxCount,f	;volatile
 21728                           
 21729                           ;eusart.c: 123: PIE1bits.RCIE = 1;
 21730  27FB  0021               	movlb	1	; select bank1
 21731  27FC  1691               	bsf	17,5	;volatile
 21732                           
 21733                           ;eusart.c: 125: return readValue;
 21734  27FD  0020               	movlb	0	; select bank0
 21735  27FE  0832               	movf	EUSART_Read@readValue,w
 21736  27FF  0008               	return
 21737  2800                     __end_of_EUSART_Read:	
 21738                           
 21739                           	psect	intentry
 21740  0004                     __pintentry:	
 21741 ;; *************** function _INTERRUPT_InterruptManager *****************
 21742 ;; Defined at:
 21743 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 21744 ;; Parameters:    Size  Location     Type
 21745 ;;		None
 21746 ;; Auto vars:     Size  Location     Type
 21747 ;;		None
 21748 ;; Return value:  Size  Location     Type
 21749 ;;                  1    wreg      void 
 21750 ;; Registers used:
 21751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21752 ;; Tracked objects:
 21753 ;;		On entry : 0/0
 21754 ;;		On exit  : 0/0
 21755 ;;		Unchanged: 0/0
 21756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21761 ;;Total ram usage:        1 bytes
 21762 ;; Hardware stack levels used:    1
 21763 ;; Hardware stack levels required when called:    5
 21764 ;; This function calls:
 21765 ;;		Absolute function
 21766 ;;		_EUSART_Receive_ISR
 21767 ;;		_EUSART_Transmit_ISR
 21768 ;;		_TMR0_ISR
 21769 ;;		_TMR2_ISR
 21770 ;;		_i2c_busCollisionISR
 21771 ;;		i1_i2c_ISR
 21772 ;; This function is called by:
 21773 ;;		Interrupt level 1
 21774 ;; This function uses a non-reentrant model
 21775 ;;
 21776                           
 21777  0004                     _INTERRUPT_InterruptManager:	
 21778                           
 21779                           ;incstack = 0
 21780 ;; hardware stack exceeded
 21781  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21782                           
 21783                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21784  0005  3180               	pagesel	$
 21785  0006  0020               	movlb	0	; select bank0
 21786  0007  087F               	movf	127,w
 21787  0008  00FC               	movwf	??_INTERRUPT_InterruptManager
 21788                           
 21789                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 21790  0009  0021               	movlb	1	; select bank1
 21791  000A  1E90               	btfss	16,5	;volatile
 21792  000B  2813               	goto	i1l327
 21793  000C  0020               	movlb	0	; select bank0
 21794  000D  1E90               	btfss	16,5	;volatile
 21795  000E  2813               	goto	i1l327
 21796                           
 21797                           ;interrupt_manager.c: 55: {
 21798                           ;interrupt_manager.c: 56: TMR0_ISR();
 21799  000F  31A6  2603  3180   	fcall	_TMR0_ISR
 21800                           
 21801                           ;interrupt_manager.c: 57: }
 21802  0012  284A               	goto	i1l341
 21803  0013                     i1l327:	
 21804                           
 21805                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1)
 21806  0013  1F0B               	btfss	11,6	;volatile
 21807  0014  284A               	goto	i1l341
 21808                           
 21809                           ;interrupt_manager.c: 59: {
 21810                           ;interrupt_manager.c: 60: if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
 21811  0015  0021               	movlb	1	; select bank1
 21812  0016  1D11               	btfss	17,2	;volatile
 21813  0017  2821               	goto	i1l330
 21814  0018  0020               	movlb	0	; select bank0
 21815  0019  1D11               	btfss	17,2	;volatile
 21816  001A  2821               	goto	i1l330
 21817                           
 21818                           ;interrupt_manager.c: 61: {
 21819                           ;interrupt_manager.c: 62: i2c1_driver_busCollisionISR();
 21820  001B  0851               	movf	_i2c1_driver_busCollisionISR+1,w
 21821  001C  008A               	movwf	10
 21822  001D  0850               	movf	_i2c1_driver_busCollisionISR,w
 21823  001E  000A               	callw
 21824  001F  3180               	pagesel	$
 21825                           
 21826                           ;interrupt_manager.c: 63: }
 21827  0020  284A               	goto	i1l341
 21828  0021                     i1l330:	
 21829                           
 21830                           ;interrupt_manager.c: 64: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 21831  0021  0021               	movlb	1	; select bank1
 21832  0022  1D91               	btfss	17,3	;volatile
 21833  0023  282E               	goto	i1l332
 21834  0024  0020               	movlb	0	; select bank0
 21835  0025  1D91               	btfss	17,3	;volatile
 21836  0026  282E               	goto	i1l332
 21837                           
 21838                           ;interrupt_manager.c: 65: {
 21839                           ;interrupt_manager.c: 66: i2c1_driver_i2cISR();
 21840  0027  0021               	movlb	1	; select bank1
 21841  0028  0869               	movf	(_i2c1_driver_i2cISR+1)^(0+128),w
 21842  0029  008A               	movwf	10
 21843  002A  0868               	movf	_i2c1_driver_i2cISR^(0+128),w
 21844  002B  000A               	callw
 21845  002C  3180               	pagesel	$
 21846                           
 21847                           ;interrupt_manager.c: 67: }
 21848  002D  284A               	goto	i1l341
 21849  002E                     i1l332:	
 21850                           
 21851                           ;interrupt_manager.c: 68: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 21852  002E  0021               	movlb	1	; select bank1
 21853  002F  1C91               	btfss	17,1	;volatile
 21854  0030  2838               	goto	i1l334
 21855  0031  0020               	movlb	0	; select bank0
 21856  0032  1C91               	btfss	17,1	;volatile
 21857  0033  2838               	goto	i1l334
 21858                           
 21859                           ;interrupt_manager.c: 69: {
 21860                           ;interrupt_manager.c: 70: TMR2_ISR();
 21861  0034  31A6  2610  3180   	fcall	_TMR2_ISR
 21862                           
 21863                           ;interrupt_manager.c: 71: }
 21864  0037  284A               	goto	i1l341
 21865  0038                     i1l334:	
 21866                           
 21867                           ;interrupt_manager.c: 72: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 21868  0038  0021               	movlb	1	; select bank1
 21869  0039  1E91               	btfss	17,5	;volatile
 21870  003A  2842               	goto	i1l336
 21871  003B  0020               	movlb	0	; select bank0
 21872  003C  1E91               	btfss	17,5	;volatile
 21873  003D  2842               	goto	i1l336
 21874                           
 21875                           ;interrupt_manager.c: 73: {
 21876                           ;interrupt_manager.c: 74: EUSART_Receive_ISR();
 21877  003E  31A7  272E  3180   	fcall	_EUSART_Receive_ISR
 21878                           
 21879                           ;interrupt_manager.c: 75: }
 21880  0041  284A               	goto	i1l341
 21881  0042                     i1l336:	
 21882                           
 21883                           ;interrupt_manager.c: 76: else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 21884  0042  0021               	movlb	1	; select bank1
 21885  0043  1E11               	btfss	17,4	;volatile
 21886  0044  284A               	goto	i1l341
 21887  0045  0020               	movlb	0	; select bank0
 21888  0046  1E11               	btfss	17,4	;volatile
 21889  0047  284A               	goto	i1l341
 21890                           
 21891                           ;interrupt_manager.c: 77: {
 21892                           ;interrupt_manager.c: 78: EUSART_Transmit_ISR();
 21893  0048  31A7  2766         	fcall	_EUSART_Transmit_ISR
 21894  004A                     i1l341:	
 21895                           ;interrupt_manager.c: 85: else
 21896                           ;interrupt_manager.c: 86: {
 21897                           
 21898                           ;interrupt_manager.c: 83: }
 21899                           ;interrupt_manager.c: 84: }
 21900                           
 21901                           ;interrupt_manager.c: 80: else
 21902                           ;interrupt_manager.c: 81: {
 21903                           
 21904                           ;interrupt_manager.c: 79: }
 21905                           
 21906  004A  087C               	movf	??_INTERRUPT_InterruptManager,w
 21907  004B  0020               	movlb	0	; select bank0
 21908  004C  00FF               	movwf	127
 21909  004D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21910  004E  0009               	retfie
 21911  004F                     __end_of_INTERRUPT_InterruptManager:	
 21912                           
 21913                           	psect	text112
 21914  27C0                     __ptext112:	
 21915 ;; *************** function i1_i2c_ISR *****************
 21916 ;; Defined at:
 21917 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 21918 ;; Parameters:    Size  Location     Type
 21919 ;;		None
 21920 ;; Auto vars:     Size  Location     Type
 21921 ;;		None
 21922 ;; Return value:  Size  Location     Type
 21923 ;;                  1    wreg      void 
 21924 ;; Registers used:
 21925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21926 ;; Tracked objects:
 21927 ;;		On entry : 0/0
 21928 ;;		On exit  : 0/0
 21929 ;;		Unchanged: 0/0
 21930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21935 ;;Total ram usage:        1 bytes
 21936 ;; Hardware stack levels used:    1
 21937 ;; Hardware stack levels required when called:    3
 21938 ;; This function calls:
 21939 ;;		i1_do_I2C_DO_ACK
 21940 ;;		i1_do_I2C_DO_ADDRESS_NACK
 21941 ;;		i1_do_I2C_DO_NACK_RESTART
 21942 ;;		i1_do_I2C_DO_NACK_STOP
 21943 ;;		i1_do_I2C_IDLE
 21944 ;;		i1_do_I2C_RCEN
 21945 ;;		i1_do_I2C_RESET
 21946 ;;		i1_do_I2C_RX
 21947 ;;		i1_do_I2C_SEND_ADR_READ
 21948 ;;		i1_do_I2C_SEND_ADR_WRITE
 21949 ;;		i1_do_I2C_SEND_RESTART
 21950 ;;		i1_do_I2C_SEND_RESTART_READ
 21951 ;;		i1_do_I2C_SEND_RESTART_WRITE
 21952 ;;		i1_do_I2C_SEND_STOP
 21953 ;;		i1_do_I2C_TX
 21954 ;;		i1_do_I2C_TX_EMPTY
 21955 ;;		i1_i2c1_driver_isNACK
 21956 ;;		i1_mssp1_clearIRQ
 21957 ;; This function is called by:
 21958 ;; This function uses a non-reentrant model
 21959 ;;
 21960                           
 21961                           
 21962                           ;psect for function i1_i2c_ISR
 21963  27C0                     i1_i2c_ISR:	
 21964  27C0                     i1l8220:	
 21965                           ;incstack = 0
 21966                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21967                           
 21968                           
 21969                           ;i2c_master.c: 421: mssp1_clearIRQ();
 21970  27C0  31A4  2489  31A7   	fcall	i1_mssp1_clearIRQ
 21971                           
 21972                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 21973  27C3  0022               	movlb	2	; select bank2
 21974  27C4  1DA0               	btfss	_i2c_status^(0+256),3
 21975  27C5  2FD0               	goto	i1l8228
 21976  27C6  31A5  25EB  31A7   	fcall	i1_i2c1_driver_isNACK
 21977  27C9  1C03               	btfss	3,0
 21978  27CA  2FD0               	goto	i1l8228
 21979                           
 21980                           ;i2c_master.c: 428: {
 21981                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 21982  27CB  300F               	movlw	15
 21983  27CC  00F5               	movwf	??i1_i2c_ISR
 21984  27CD  0875               	movf	??i1_i2c_ISR,w
 21985  27CE  0022               	movlb	2	; select bank2
 21986  27CF  00AA               	movwf	(_i2c_status^(0+256)+10)
 21987  27D0                     i1l8228:	
 21988                           
 21989                           ;i2c_master.c: 430: }
 21990                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 21991  27D0  0022               	movlb	2	; select bank2
 21992  27D1  352A               	lslf	(_i2c_status^(0+256)+10),w
 21993  27D2  3E20               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 21994  27D3  0086               	movwf	6
 21995  27D4  3002               	movlw	2	; select bank4/5
 21996  27D5  0087               	movwf	7
 21997  27D6  3F41               	moviw [1]fsr1
 21998  27D7  008A               	movwf	10
 21999  27D8  3F40               	moviw [0]fsr1
 22000  27D9  000A               	callw
 22001  27DA  31A7               	pagesel	$
 22002  27DB  00F5               	movwf	??i1_i2c_ISR
 22003  27DC  0875               	movf	??i1_i2c_ISR,w
 22004  27DD  0022               	movlb	2	; select bank2
 22005  27DE  00AA               	movwf	(_i2c_status^(0+256)+10)
 22006  27DF  0008               	return
 22007  27E0                     __end_ofi1_i2c_ISR:	
 22008                           
 22009                           	psect	text113
 22010  2489                     __ptext113:	
 22011 ;; *************** function i1_mssp1_clearIRQ *****************
 22012 ;; Defined at:
 22013 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 22014 ;; Parameters:    Size  Location     Type
 22015 ;;		None
 22016 ;; Auto vars:     Size  Location     Type
 22017 ;;		None
 22018 ;; Return value:  Size  Location     Type
 22019 ;;                  1    wreg      void 
 22020 ;; Registers used:
 22021 ;;		None
 22022 ;; Tracked objects:
 22023 ;;		On entry : 0/0
 22024 ;;		On exit  : 0/0
 22025 ;;		Unchanged: 0/0
 22026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22031 ;;Total ram usage:        0 bytes
 22032 ;; Hardware stack levels used:    1
 22033 ;; This function calls:
 22034 ;;		Nothing
 22035 ;; This function is called by:
 22036 ;;		i1_i2c_ISR
 22037 ;; This function uses a non-reentrant model
 22038 ;;
 22039                           
 22040                           
 22041                           ;psect for function i1_mssp1_clearIRQ
 22042  2489                     i1_mssp1_clearIRQ:	
 22043                           
 22044                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 22045                           
 22046                           ;incstack = 0
 22047                           ; Regs used in i1_mssp1_clearIRQ: []
 22048  2489  0020               	movlb	0	; select bank0
 22049  248A  1191               	bcf	17,3	;volatile
 22050  248B  0008               	return
 22051  248C                     __end_ofi1_mssp1_clearIRQ:	
 22052                           
 22053                           	psect	text114
 22054  1B93                     __ptext114:	
 22055 ;; *************** function i1_do_I2C_RX *****************
 22056 ;; Defined at:
 22057 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 22058 ;; Parameters:    Size  Location     Type
 22059 ;;		None
 22060 ;; Auto vars:     Size  Location     Type
 22061 ;;		None
 22062 ;; Return value:  Size  Location     Type
 22063 ;;                  1    wreg      enum E8364
 22064 ;; Registers used:
 22065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22066 ;; Tracked objects:
 22067 ;;		On entry : 0/0
 22068 ;;		On exit  : 0/0
 22069 ;;		Unchanged: 0/0
 22070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22073 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22074 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22075 ;;Total ram usage:        1 bytes
 22076 ;; Hardware stack levels used:    1
 22077 ;; Hardware stack levels required when called:    2
 22078 ;; This function calls:
 22079 ;;		i1_do_I2C_DO_NACK_RESTART
 22080 ;;		i1_do_I2C_DO_NACK_STOP
 22081 ;;		i1_i2c1_driver_getRXData
 22082 ;;		i1_i2c1_driver_sendACK
 22083 ;;		i1_returnReset
 22084 ;;		i1_returnStop
 22085 ;; This function is called by:
 22086 ;; This function uses a non-reentrant model
 22087 ;;
 22088                           
 22089                           
 22090                           ;psect for function i1_do_I2C_RX
 22091  1B93                     i1_do_I2C_RX:	
 22092  1B93                     i1l8012:	
 22093                           ;incstack = 0
 22094                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22095                           
 22096                           
 22097                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 22098  1B93  0022               	movlb	2	; select bank2
 22099  1B94  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 22100  1B95  0086               	movwf	6
 22101  1B96  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 22102  1B97  0087               	movwf	7
 22103  1B98  31A4  2483  319B   	fcall	i1_i2c1_driver_getRXData
 22104  1B9B  0081               	movwf	1
 22105  1B9C  3001               	movlw	1
 22106  1B9D  0022               	movlb	2	; select bank2
 22107  1B9E  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 22108  1B9F  3000               	movlw	0
 22109  1BA0  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 22110                           
 22111                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 22112  1BA1  3001               	movlw	1
 22113  1BA2  02A4               	subwf	(_i2c_status^(0+256)+4),f
 22114  1BA3  3000               	movlw	0
 22115  1BA4  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 22116  1BA5  0824               	movf	(_i2c_status^(0+256)+4),w
 22117  1BA6  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 22118  1BA7  1903               	btfsc	3,2
 22119  1BA8  2BAD               	goto	i1l725
 22120                           
 22121                           ;i2c_master.c: 361: {
 22122                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 22123  1BA9  31A4  24A7         	fcall	i1_i2c1_driver_sendACK
 22124                           
 22125                           ;i2c_master.c: 363: return I2C_RCEN;
 22126  1BAB  3005               	movlw	5
 22127                           
 22128                           ;i2c_master.c: 364: }
 22129  1BAC  0008               	return
 22130  1BAD                     i1l725:	
 22131                           
 22132                           ;i2c_master.c: 365: else
 22133                           ;i2c_master.c: 366: {
 22134                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 22135  1BAD  1520               	bsf	_i2c_status^(0+256),2
 22136                           
 22137                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 22138  1BAE  2BB5               	goto	i1l8036
 22139  1BAF                     i1l8026:	
 22140                           ;i2c_master.c: 369: {
 22141                           ;i2c_master.c: 370: case i2c_restart_write:
 22142                           
 22143                           
 22144                           ;i2c_master.c: 371: case i2c_restart_read:
 22145                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 22146  1BAF  31A4  24C7         	fcall	i1_do_I2C_DO_NACK_RESTART
 22147  1BB1  0008               	return
 22148  1BB2                     i1l8030:	
 22149                           ;i2c_master.c: 374: case i2c_continue:
 22150                           
 22151                           ;i2c_master.c: 373: default:
 22152                           
 22153                           
 22154                           ;i2c_master.c: 375: case i2c_stop:
 22155                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 22156  1BB2  31A4  24C3         	fcall	i1_do_I2C_DO_NACK_STOP
 22157                           
 22158                           ;i2c_master.c: 377: }
 22159  1BB4  0008               	return
 22160  1BB5                     i1l8036:	
 22161  1BB5  0022               	movlb	2	; select bank2
 22162  1BB6  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 22163  1BB7  00F0               	movwf	??i1_do_I2C_RX
 22164  1BB8  0870               	movf	??i1_do_I2C_RX,w
 22165  1BB9  00F0               	movwf	i1returnReset@p
 22166  1BBA  300C               	movlw	12
 22167  1BBB  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 22168  1BBC  0086               	movwf	6
 22169  1BBD  3001               	movlw	1	; select bank2/3
 22170  1BBE  0087               	movwf	7
 22171  1BBF  3F41               	moviw [1]fsr1
 22172  1BC0  008A               	movwf	10
 22173  1BC1  3F40               	moviw [0]fsr1
 22174  1BC2  000A               	callw
 22175  1BC3  319B               	pagesel	$
 22176                           
 22177                           ; Switch size 1, requested type "space"
 22178                           ; Number of cases is 4, Range of values is 1 to 4
 22179                           ; switch strategies available:
 22180                           ; Name         Instructions Cycles
 22181                           ; simple_byte           13     7 (average)
 22182                           ; direct_byte           17     9 (fixed)
 22183                           ; jumptable            263     9 (fixed)
 22184                           ;	Chosen strategy is simple_byte
 22185  1BC4  3A01               	xorlw	1	; case 1
 22186  1BC5  1903               	skipnz
 22187  1BC6  2BB2               	goto	i1l8030
 22188  1BC7  3A03               	xorlw	3	; case 2
 22189  1BC8  1903               	skipnz
 22190  1BC9  2BAF               	goto	i1l8026
 22191  1BCA  3A01               	xorlw	1	; case 3
 22192  1BCB  1903               	skipnz
 22193  1BCC  2BAF               	goto	i1l8026
 22194  1BCD  3A07               	xorlw	7	; case 4
 22195  1BCE  1903               	skipnz
 22196  1BCF  2BB2               	goto	i1l8030
 22197  1BD0  2BB2               	goto	i1l8030
 22198  1BD1  0008               	return
 22199  1BD2                     __end_ofi1_do_I2C_RX:	
 22200                           
 22201                           	psect	text115
 22202  1E0D                     __ptext115:	
 22203 ;; *************** function i1_do_I2C_TX *****************
 22204 ;; Defined at:
 22205 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 22206 ;; Parameters:    Size  Location     Type
 22207 ;;		None
 22208 ;; Auto vars:     Size  Location     Type
 22209 ;;		None
 22210 ;; Return value:  Size  Location     Type
 22211 ;;                  1    wreg      enum E8364
 22212 ;; Registers used:
 22213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22214 ;; Tracked objects:
 22215 ;;		On entry : 0/0
 22216 ;;		On exit  : 0/0
 22217 ;;		Unchanged: 0/0
 22218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22221 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22222 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22223 ;;Total ram usage:        4 bytes
 22224 ;; Hardware stack levels used:    1
 22225 ;; Hardware stack levels required when called:    2
 22226 ;; This function calls:
 22227 ;;		i1_do_I2C_SEND_RESTART_READ
 22228 ;;		i1_do_I2C_SEND_RESTART_WRITE
 22229 ;;		i1_do_I2C_SEND_STOP
 22230 ;;		i1_i2c1_driver_TXData
 22231 ;;		i1_i2c1_driver_isNACK
 22232 ;;		i1_returnReset
 22233 ;;		i1_returnStop
 22234 ;; This function is called by:
 22235 ;; This function uses a non-reentrant model
 22236 ;;
 22237                           
 22238                           
 22239                           ;psect for function i1_do_I2C_TX
 22240  1E0D                     i1_do_I2C_TX:	
 22241  1E0D                     i1l7982:	
 22242                           ;incstack = 0
 22243                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22244                           
 22245                           
 22246                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 22247  1E0D  31A5  25EB  319E   	fcall	i1_i2c1_driver_isNACK
 22248  1E10  1803               	btfsc	3,0
 22249  1E11  2E1C               	goto	i1l8000
 22250  1E12  2E39               	goto	i1l709
 22251  1E13                     i1l7986:	
 22252                           ;i2c_master.c: 338: {
 22253                           ;i2c_master.c: 339: case i2c_restart_read:
 22254                           
 22255                           ;i2c_master.c: 336: {
 22256                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 22257                           
 22258                           
 22259                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 22260  1E13  31A4  24AF         	fcall	i1_do_I2C_SEND_RESTART_READ
 22261  1E15  0008               	return
 22262  1E16                     i1l7990:	
 22263                           ;i2c_master.c: 341: case i2c_restart_write:
 22264                           
 22265                           
 22266                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 22267  1E16  31A4  24B3         	fcall	i1_do_I2C_SEND_RESTART_WRITE
 22268  1E18  0008               	return
 22269  1E19                     i1l7994:	
 22270                           ;i2c_master.c: 344: case i2c_continue:
 22271                           
 22272                           ;i2c_master.c: 343: default:
 22273                           
 22274                           
 22275                           ;i2c_master.c: 345: case i2c_stop:
 22276                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 22277  1E19  31A4  24BB         	fcall	i1_do_I2C_SEND_STOP
 22278                           
 22279                           ;i2c_master.c: 347: }
 22280  1E1B  0008               	return
 22281  1E1C                     i1l8000:	
 22282  1E1C  0022               	movlb	2	; select bank2
 22283  1E1D  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 22284  1E1E  00F1               	movwf	??i1_do_I2C_TX
 22285  1E1F  0871               	movf	??i1_do_I2C_TX,w
 22286  1E20  00F0               	movwf	i1returnReset@p
 22287  1E21  3012               	movlw	18
 22288  1E22  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 22289  1E23  0086               	movwf	6
 22290  1E24  3001               	movlw	1	; select bank2/3
 22291  1E25  0087               	movwf	7
 22292  1E26  3F41               	moviw [1]fsr1
 22293  1E27  008A               	movwf	10
 22294  1E28  3F40               	moviw [0]fsr1
 22295  1E29  000A               	callw
 22296  1E2A  319E               	pagesel	$
 22297                           
 22298                           ; Switch size 1, requested type "space"
 22299                           ; Number of cases is 4, Range of values is 1 to 4
 22300                           ; switch strategies available:
 22301                           ; Name         Instructions Cycles
 22302                           ; simple_byte           13     7 (average)
 22303                           ; direct_byte           17     9 (fixed)
 22304                           ; jumptable            263     9 (fixed)
 22305                           ;	Chosen strategy is simple_byte
 22306  1E2B  3A01               	xorlw	1	; case 1
 22307  1E2C  1903               	skipnz
 22308  1E2D  2E19               	goto	i1l7994
 22309  1E2E  3A03               	xorlw	3	; case 2
 22310  1E2F  1903               	skipnz
 22311  1E30  2E13               	goto	i1l7986
 22312  1E31  3A01               	xorlw	1	; case 3
 22313  1E32  1903               	skipnz
 22314  1E33  2E16               	goto	i1l7990
 22315  1E34  3A07               	xorlw	7	; case 4
 22316  1E35  1903               	skipnz
 22317  1E36  2E19               	goto	i1l7994
 22318  1E37  2E19               	goto	i1l7994
 22319                           
 22320                           ;i2c_master.c: 348: }
 22321  1E38  0008               	return
 22322  1E39                     i1l709:	
 22323                           
 22324                           ;i2c_master.c: 349: else
 22325                           ;i2c_master.c: 350: {
 22326                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 22327  1E39  0022               	movlb	2	; select bank2
 22328  1E3A  11A0               	bcf	_i2c_status^(0+256),3
 22329                           
 22330                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 22331  1E3B  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 22332  1E3C  00F2               	movwf	??i1_do_I2C_TX+1
 22333  1E3D  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 22334  1E3E  00F1               	movwf	??i1_do_I2C_TX
 22335  1E3F  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 22336  1E40  1903               	skipnz
 22337  1E41  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 22338  1E42  0871               	movf	??i1_do_I2C_TX,w
 22339  1E43  0084               	movwf	4
 22340  1E44  0872               	movf	??i1_do_I2C_TX+1,w
 22341  1E45  0085               	movwf	5
 22342  1E46  0800               	movf	0,w	;code access
 22343  1E47  31A4  24DD  319E   	fcall	i1_i2c1_driver_TXData
 22344                           
 22345                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 22346  1E4A  3001               	movlw	1
 22347  1E4B  0022               	movlb	2	; select bank2
 22348  1E4C  02A4               	subwf	(_i2c_status^(0+256)+4),f
 22349  1E4D  3000               	movlw	0
 22350  1E4E  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 22351  1E4F  0824               	movf	(_i2c_status^(0+256)+4),w
 22352  1E50  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 22353  1E51  1D03               	btfss	3,2
 22354  1E52  2E55               	goto	i1l8008
 22355  1E53  3006               	movlw	6
 22356  1E54  2E56               	goto	L34
 22357  1E55                     i1l8008:	
 22358  1E55  3003               	movlw	3
 22359  1E56                     L34:	
 22360  1E56  00F3               	movwf	i1_do_I2C_TX$1114
 22361  1E57  3000               	movlw	0
 22362  1E58  00F4               	movwf	i1_do_I2C_TX$1114+1
 22363  1E59  0873               	movf	i1_do_I2C_TX$1114,w
 22364  1E5A  0008               	return
 22365  1E5B                     __end_ofi1_do_I2C_TX:	
 22366                           
 22367                           	psect	text116
 22368  18E6                     __ptext116:	
 22369 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 22370 ;; Defined at:
 22371 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 22372 ;; Parameters:    Size  Location     Type
 22373 ;;		None
 22374 ;; Auto vars:     Size  Location     Type
 22375 ;;		None
 22376 ;; Return value:  Size  Location     Type
 22377 ;;                  1    wreg      enum E8364
 22378 ;; Registers used:
 22379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22380 ;; Tracked objects:
 22381 ;;		On entry : 0/0
 22382 ;;		On exit  : 0/0
 22383 ;;		Unchanged: 0/0
 22384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22387 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22389 ;;Total ram usage:        1 bytes
 22390 ;; Hardware stack levels used:    1
 22391 ;; Hardware stack levels required when called:    2
 22392 ;; This function calls:
 22393 ;;		i1_do_I2C_SEND_RESTART
 22394 ;;		i1_do_I2C_SEND_STOP
 22395 ;;		i1_returnReset
 22396 ;;		i1_returnStop
 22397 ;; This function is called by:
 22398 ;; This function uses a non-reentrant model
 22399 ;;
 22400                           
 22401                           
 22402                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 22403  18E6                     i1_do_I2C_DO_ADDRESS_NACK:	
 22404  18E6                     i1l7966:	
 22405                           ;incstack = 0
 22406                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22407                           
 22408                           
 22409                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 22410  18E6  0022               	movlb	2	; select bank2
 22411  18E7  11A0               	bcf	_i2c_status^(0+256),3
 22412                           
 22413                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 22414  18E8  3002               	movlw	2
 22415  18E9  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 22416  18EA  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 22417  18EB  00AB               	movwf	(_i2c_status^(0+256)+11)
 22418                           
 22419                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 22420  18EC  28F3               	goto	i1l7980
 22421  18ED                     i1l7970:	
 22422                           ;i2c_master.c: 324: {
 22423                           ;i2c_master.c: 325: case i2c_restart_read:
 22424                           
 22425                           
 22426                           ;i2c_master.c: 326: case i2c_restart_write:
 22427                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 22428  18ED  31A4  24B7         	fcall	i1_do_I2C_SEND_RESTART
 22429  18EF  0008               	return
 22430  18F0                     i1l7974:	
 22431                           ;i2c_master.c: 328: default:
 22432                           
 22433                           
 22434                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 22435  18F0  31A4  24BB         	fcall	i1_do_I2C_SEND_STOP
 22436                           
 22437                           ;i2c_master.c: 330: }
 22438  18F2  0008               	return
 22439  18F3                     i1l7980:	
 22440  18F3  0022               	movlb	2	; select bank2
 22441  18F4  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 22442  18F5  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 22443  18F6  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 22444  18F7  00F0               	movwf	i1returnReset@p
 22445  18F8  3010               	movlw	16
 22446  18F9  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 22447  18FA  0086               	movwf	6
 22448  18FB  3001               	movlw	1	; select bank2/3
 22449  18FC  0087               	movwf	7
 22450  18FD  3F41               	moviw [1]fsr1
 22451  18FE  008A               	movwf	10
 22452  18FF  3F40               	moviw [0]fsr1
 22453  1900  000A               	callw
 22454  1901  3198               	pagesel	$
 22455                           
 22456                           ; Switch size 1, requested type "space"
 22457                           ; Number of cases is 2, Range of values is 2 to 3
 22458                           ; switch strategies available:
 22459                           ; Name         Instructions Cycles
 22460                           ; simple_byte            7     4 (average)
 22461                           ; direct_byte           13     9 (fixed)
 22462                           ; jumptable            263     9 (fixed)
 22463                           ;	Chosen strategy is simple_byte
 22464  1902  3A02               	xorlw	2	; case 2
 22465  1903  1903               	skipnz
 22466  1904  28ED               	goto	i1l7970
 22467  1905  3A01               	xorlw	1	; case 3
 22468  1906  1903               	skipnz
 22469  1907  28ED               	goto	i1l7970
 22470  1908  28F0               	goto	i1l7974
 22471  1909  0008               	return
 22472  190A                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 22473                           
 22474                           	psect	text117
 22475  24C7                     __ptext117:	
 22476 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 22477 ;; Defined at:
 22478 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 22479 ;; Parameters:    Size  Location     Type
 22480 ;;		None
 22481 ;; Auto vars:     Size  Location     Type
 22482 ;;		None
 22483 ;; Return value:  Size  Location     Type
 22484 ;;                  1    wreg      enum E8364
 22485 ;; Registers used:
 22486 ;;		wreg, status,2, status,0, pclath, cstack
 22487 ;; Tracked objects:
 22488 ;;		On entry : 0/0
 22489 ;;		On exit  : 0/0
 22490 ;;		Unchanged: 0/0
 22491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22496 ;;Total ram usage:        0 bytes
 22497 ;; Hardware stack levels used:    1
 22498 ;; Hardware stack levels required when called:    1
 22499 ;; This function calls:
 22500 ;;		i1_i2c1_driver_sendNACK
 22501 ;; This function is called by:
 22502 ;;		i1_do_I2C_RX
 22503 ;; This function uses a non-reentrant model
 22504 ;;
 22505                           
 22506                           
 22507                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 22508  24C7                     i1_do_I2C_DO_NACK_RESTART:	
 22509  24C7                     i1l7654:	
 22510                           ;incstack = 0
 22511                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 22512                           
 22513                           
 22514                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 22515  24C7  31A4  24AB         	fcall	i1_i2c1_driver_sendNACK
 22516                           
 22517                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 22518  24C9  3009               	movlw	9
 22519  24CA  0008               	return
 22520  24CB                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 22521                           
 22522                           	psect	text118
 22523  24C3                     __ptext118:	
 22524 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 22525 ;; Defined at:
 22526 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 22527 ;; Parameters:    Size  Location     Type
 22528 ;;		None
 22529 ;; Auto vars:     Size  Location     Type
 22530 ;;		None
 22531 ;; Return value:  Size  Location     Type
 22532 ;;                  1    wreg      enum E8364
 22533 ;; Registers used:
 22534 ;;		wreg, status,2, status,0, pclath, cstack
 22535 ;; Tracked objects:
 22536 ;;		On entry : 0/0
 22537 ;;		On exit  : 0/0
 22538 ;;		Unchanged: 0/0
 22539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22544 ;;Total ram usage:        0 bytes
 22545 ;; Hardware stack levels used:    1
 22546 ;; Hardware stack levels required when called:    1
 22547 ;; This function calls:
 22548 ;;		i1_i2c1_driver_sendNACK
 22549 ;; This function is called by:
 22550 ;;		i1_do_I2C_RX
 22551 ;; This function uses a non-reentrant model
 22552 ;;
 22553                           
 22554                           
 22555                           ;psect for function i1_do_I2C_DO_NACK_STOP
 22556  24C3                     i1_do_I2C_DO_NACK_STOP:	
 22557  24C3                     i1l7648:	
 22558                           ;incstack = 0
 22559                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 22560                           
 22561                           
 22562                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 22563  24C3  31A4  24AB         	fcall	i1_i2c1_driver_sendNACK
 22564                           
 22565                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 22566  24C5  300A               	movlw	10
 22567  24C6  0008               	return
 22568  24C7                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 22569                           
 22570                           	psect	text119
 22571  24BF                     __ptext119:	
 22572 ;; *************** function i1_do_I2C_DO_ACK *****************
 22573 ;; Defined at:
 22574 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 22575 ;; Parameters:    Size  Location     Type
 22576 ;;		None
 22577 ;; Auto vars:     Size  Location     Type
 22578 ;;		None
 22579 ;; Return value:  Size  Location     Type
 22580 ;;                  1    wreg      enum E8364
 22581 ;; Registers used:
 22582 ;;		wreg, status,2, status,0, pclath, cstack
 22583 ;; Tracked objects:
 22584 ;;		On entry : 0/0
 22585 ;;		On exit  : 0/0
 22586 ;;		Unchanged: 0/0
 22587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22592 ;;Total ram usage:        0 bytes
 22593 ;; Hardware stack levels used:    1
 22594 ;; Hardware stack levels required when called:    1
 22595 ;; This function calls:
 22596 ;;		i1_i2c1_driver_sendACK
 22597 ;; This function is called by:
 22598 ;; This function uses a non-reentrant model
 22599 ;;
 22600                           
 22601                           
 22602                           ;psect for function i1_do_I2C_DO_ACK
 22603  24BF                     i1_do_I2C_DO_ACK:	
 22604  24BF                     i1l7960:	
 22605                           ;incstack = 0
 22606                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 22607                           
 22608                           
 22609                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 22610  24BF  31A4  24A7         	fcall	i1_i2c1_driver_sendACK
 22611                           
 22612                           ;i2c_master.c: 302: return I2C_RCEN;
 22613  24C1  3005               	movlw	5
 22614  24C2  0008               	return
 22615  24C3                     __end_ofi1_do_I2C_DO_ACK:	
 22616                           
 22617                           	psect	text120
 22618  24F1                     __ptext120:	
 22619 ;; *************** function i1_do_I2C_RCEN *****************
 22620 ;; Defined at:
 22621 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 22622 ;; Parameters:    Size  Location     Type
 22623 ;;		None
 22624 ;; Auto vars:     Size  Location     Type
 22625 ;;		None
 22626 ;; Return value:  Size  Location     Type
 22627 ;;                  1    wreg      enum E8364
 22628 ;; Registers used:
 22629 ;;		wreg, status,2, status,0, pclath, cstack
 22630 ;; Tracked objects:
 22631 ;;		On entry : 0/0
 22632 ;;		On exit  : 0/0
 22633 ;;		Unchanged: 0/0
 22634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22639 ;;Total ram usage:        0 bytes
 22640 ;; Hardware stack levels used:    1
 22641 ;; Hardware stack levels required when called:    1
 22642 ;; This function calls:
 22643 ;;		i1_i2c1_driver_startRX
 22644 ;; This function is called by:
 22645 ;; This function uses a non-reentrant model
 22646 ;;
 22647                           
 22648                           
 22649                           ;psect for function i1_do_I2C_RCEN
 22650  24F1                     i1_do_I2C_RCEN:	
 22651  24F1                     i1l6060:	
 22652                           ;incstack = 0
 22653                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 22654                           
 22655                           
 22656                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 22657  24F1  0022               	movlb	2	; select bank2
 22658  24F2  11A0               	bcf	_i2c_status^(0+256),3
 22659                           
 22660                           ;i2c_master.c: 295: i2c1_driver_startRX();
 22661  24F3  31A4  2480         	fcall	i1_i2c1_driver_startRX
 22662                           
 22663                           ;i2c_master.c: 296: return I2C_RX;
 22664  24F5  3004               	movlw	4
 22665  24F6  0008               	return
 22666  24F7                     __end_ofi1_do_I2C_RCEN:	
 22667                           
 22668                           	psect	text121
 22669  252E                     __ptext121:	
 22670 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 22671 ;; Defined at:
 22672 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 22673 ;; Parameters:    Size  Location     Type
 22674 ;;		None
 22675 ;; Auto vars:     Size  Location     Type
 22676 ;;		None
 22677 ;; Return value:  Size  Location     Type
 22678 ;;                  1    wreg      enum E8364
 22679 ;; Registers used:
 22680 ;;		wreg, status,2, status,0, pclath, cstack
 22681 ;; Tracked objects:
 22682 ;;		On entry : 0/0
 22683 ;;		On exit  : 0/0
 22684 ;;		Unchanged: 0/0
 22685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22690 ;;Total ram usage:        0 bytes
 22691 ;; Hardware stack levels used:    1
 22692 ;; Hardware stack levels required when called:    1
 22693 ;; This function calls:
 22694 ;;		i1_i2c1_driver_TXData
 22695 ;; This function is called by:
 22696 ;; This function uses a non-reentrant model
 22697 ;;
 22698                           
 22699                           
 22700                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 22701  252E                     i1_do_I2C_SEND_ADR_WRITE:	
 22702  252E                     i1l7952:	
 22703                           ;incstack = 0
 22704                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 22705                           
 22706                           
 22707                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 22708  252E  0022               	movlb	2	; select bank2
 22709  252F  15A0               	bsf	_i2c_status^(0+256),3
 22710                           
 22711                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 22712  2530  3521               	lslf	(_i2c_status^(0+256)+1),w
 22713  2531  31A4  24DD         	fcall	i1_i2c1_driver_TXData
 22714                           
 22715                           ;i2c_master.c: 289: return I2C_TX;
 22716  2533  3003               	movlw	3
 22717  2534  0008               	return
 22718  2535                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 22719                           
 22720                           	psect	text122
 22721  2535                     __ptext122:	
 22722 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 22723 ;; Defined at:
 22724 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 22725 ;; Parameters:    Size  Location     Type
 22726 ;;		None
 22727 ;; Auto vars:     Size  Location     Type
 22728 ;;		None
 22729 ;; Return value:  Size  Location     Type
 22730 ;;                  1    wreg      enum E8364
 22731 ;; Registers used:
 22732 ;;		wreg, status,2, status,0, pclath, cstack
 22733 ;; Tracked objects:
 22734 ;;		On entry : 0/0
 22735 ;;		On exit  : 0/0
 22736 ;;		Unchanged: 0/0
 22737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22742 ;;Total ram usage:        0 bytes
 22743 ;; Hardware stack levels used:    1
 22744 ;; Hardware stack levels required when called:    1
 22745 ;; This function calls:
 22746 ;;		i1_i2c1_driver_TXData
 22747 ;; This function is called by:
 22748 ;; This function uses a non-reentrant model
 22749 ;;
 22750                           
 22751                           
 22752                           ;psect for function i1_do_I2C_SEND_ADR_READ
 22753  2535                     i1_do_I2C_SEND_ADR_READ:	
 22754  2535                     i1l7944:	
 22755                           ;incstack = 0
 22756                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 22757                           
 22758                           
 22759                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 22760  2535  0022               	movlb	2	; select bank2
 22761  2536  15A0               	bsf	_i2c_status^(0+256),3
 22762                           
 22763                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 22764  2537  1403               	setc
 22765  2538  0D21               	rlf	(_i2c_status^(0+256)+1),w
 22766  2539  31A4  24DD         	fcall	i1_i2c1_driver_TXData
 22767                           
 22768                           ;i2c_master.c: 282: return I2C_RCEN;
 22769  253B  3005               	movlw	5
 22770  253C  0008               	return
 22771  253D                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 22772                           
 22773                           	psect	text123
 22774  24BB                     __ptext123:	
 22775 ;; *************** function i1_do_I2C_SEND_STOP *****************
 22776 ;; Defined at:
 22777 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 22778 ;; Parameters:    Size  Location     Type
 22779 ;;		None
 22780 ;; Auto vars:     Size  Location     Type
 22781 ;;		None
 22782 ;; Return value:  Size  Location     Type
 22783 ;;                  1    wreg      enum E8364
 22784 ;; Registers used:
 22785 ;;		wreg, status,2, status,0, pclath, cstack
 22786 ;; Tracked objects:
 22787 ;;		On entry : 0/0
 22788 ;;		On exit  : 0/0
 22789 ;;		Unchanged: 0/0
 22790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22795 ;;Total ram usage:        0 bytes
 22796 ;; Hardware stack levels used:    1
 22797 ;; Hardware stack levels required when called:    1
 22798 ;; This function calls:
 22799 ;;		i1_i2c1_driver_stop
 22800 ;; This function is called by:
 22801 ;;		i1_do_I2C_DO_ADDRESS_NACK
 22802 ;;		i1_do_I2C_TX
 22803 ;;		i1_do_I2C_TX_EMPTY
 22804 ;; This function uses a non-reentrant model
 22805 ;;
 22806                           
 22807                           
 22808                           ;psect for function i1_do_I2C_SEND_STOP
 22809  24BB                     i1_do_I2C_SEND_STOP:	
 22810  24BB                     i1l7642:	
 22811                           ;incstack = 0
 22812                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 22813                           
 22814                           
 22815                           ;i2c_master.c: 274: i2c1_driver_stop();
 22816  24BB  31A4  247D         	fcall	i1_i2c1_driver_stop
 22817                           
 22818                           ;i2c_master.c: 275: return I2C_IDLE;
 22819  24BD  3000               	movlw	0
 22820  24BE  0008               	return
 22821  24BF                     __end_ofi1_do_I2C_SEND_STOP:	
 22822                           
 22823                           	psect	text124
 22824  24B7                     __ptext124:	
 22825 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 22826 ;; Defined at:
 22827 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 22828 ;; Parameters:    Size  Location     Type
 22829 ;;		None
 22830 ;; Auto vars:     Size  Location     Type
 22831 ;;		None
 22832 ;; Return value:  Size  Location     Type
 22833 ;;                  1    wreg      enum E8364
 22834 ;; Registers used:
 22835 ;;		wreg, status,2, status,0, pclath, cstack
 22836 ;; Tracked objects:
 22837 ;;		On entry : 0/0
 22838 ;;		On exit  : 0/0
 22839 ;;		Unchanged: 0/0
 22840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22845 ;;Total ram usage:        0 bytes
 22846 ;; Hardware stack levels used:    1
 22847 ;; Hardware stack levels required when called:    1
 22848 ;; This function calls:
 22849 ;;		i1_i2c1_driver_restart
 22850 ;; This function is called by:
 22851 ;;		i1_do_I2C_DO_ADDRESS_NACK
 22852 ;;		i1_do_I2C_TX_EMPTY
 22853 ;; This function uses a non-reentrant model
 22854 ;;
 22855                           
 22856                           
 22857                           ;psect for function i1_do_I2C_SEND_RESTART
 22858  24B7                     i1_do_I2C_SEND_RESTART:	
 22859  24B7                     i1l7636:	
 22860                           ;incstack = 0
 22861                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 22862                           
 22863                           
 22864                           ;i2c_master.c: 268: i2c1_driver_restart();
 22865  24B7  31A4  247A         	fcall	i1_i2c1_driver_restart
 22866                           
 22867                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 22868  24B9  3001               	movlw	1
 22869  24BA  0008               	return
 22870  24BB                     __end_ofi1_do_I2C_SEND_RESTART:	
 22871                           
 22872                           	psect	text125
 22873  24B3                     __ptext125:	
 22874 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 22875 ;; Defined at:
 22876 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 22877 ;; Parameters:    Size  Location     Type
 22878 ;;		None
 22879 ;; Auto vars:     Size  Location     Type
 22880 ;;		None
 22881 ;; Return value:  Size  Location     Type
 22882 ;;                  1    wreg      enum E8364
 22883 ;; Registers used:
 22884 ;;		wreg, status,2, status,0, pclath, cstack
 22885 ;; Tracked objects:
 22886 ;;		On entry : 0/0
 22887 ;;		On exit  : 0/0
 22888 ;;		Unchanged: 0/0
 22889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22894 ;;Total ram usage:        0 bytes
 22895 ;; Hardware stack levels used:    1
 22896 ;; Hardware stack levels required when called:    1
 22897 ;; This function calls:
 22898 ;;		i1_i2c1_driver_restart
 22899 ;; This function is called by:
 22900 ;;		i1_do_I2C_TX
 22901 ;; This function uses a non-reentrant model
 22902 ;;
 22903                           
 22904                           
 22905                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 22906  24B3                     i1_do_I2C_SEND_RESTART_WRITE:	
 22907  24B3                     i1l7630:	
 22908                           ;incstack = 0
 22909                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 22910                           
 22911                           
 22912                           ;i2c_master.c: 262: i2c1_driver_restart();
 22913  24B3  31A4  247A         	fcall	i1_i2c1_driver_restart
 22914                           
 22915                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 22916  24B5  3002               	movlw	2
 22917  24B6  0008               	return
 22918  24B7                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 22919                           
 22920                           	psect	text126
 22921  24AF                     __ptext126:	
 22922 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 22923 ;; Defined at:
 22924 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 22925 ;; Parameters:    Size  Location     Type
 22926 ;;		None
 22927 ;; Auto vars:     Size  Location     Type
 22928 ;;		None
 22929 ;; Return value:  Size  Location     Type
 22930 ;;                  1    wreg      enum E8364
 22931 ;; Registers used:
 22932 ;;		wreg, status,2, status,0, pclath, cstack
 22933 ;; Tracked objects:
 22934 ;;		On entry : 0/0
 22935 ;;		On exit  : 0/0
 22936 ;;		Unchanged: 0/0
 22937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22942 ;;Total ram usage:        0 bytes
 22943 ;; Hardware stack levels used:    1
 22944 ;; Hardware stack levels required when called:    1
 22945 ;; This function calls:
 22946 ;;		i1_i2c1_driver_restart
 22947 ;; This function is called by:
 22948 ;;		i1_do_I2C_TX
 22949 ;; This function uses a non-reentrant model
 22950 ;;
 22951                           
 22952                           
 22953                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 22954  24AF                     i1_do_I2C_SEND_RESTART_READ:	
 22955  24AF                     i1l7624:	
 22956                           ;incstack = 0
 22957                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 22958                           
 22959                           
 22960                           ;i2c_master.c: 256: i2c1_driver_restart();
 22961  24AF  31A4  247A         	fcall	i1_i2c1_driver_restart
 22962                           
 22963                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 22964  24B1  3001               	movlw	1
 22965  24B2  0008               	return
 22966  24B3                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 22967                           
 22968                           	psect	text127
 22969  24E2                     __ptext127:	
 22970 ;; *************** function i1_do_I2C_IDLE *****************
 22971 ;; Defined at:
 22972 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 22973 ;; Parameters:    Size  Location     Type
 22974 ;;		None
 22975 ;; Auto vars:     Size  Location     Type
 22976 ;;		None
 22977 ;; Return value:  Size  Location     Type
 22978 ;;                  1    wreg      enum E8364
 22979 ;; Registers used:
 22980 ;;		wreg, status,2
 22981 ;; Tracked objects:
 22982 ;;		On entry : 0/0
 22983 ;;		On exit  : 0/0
 22984 ;;		Unchanged: 0/0
 22985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22990 ;;Total ram usage:        0 bytes
 22991 ;; Hardware stack levels used:    1
 22992 ;; This function calls:
 22993 ;;		Nothing
 22994 ;; This function is called by:
 22995 ;; This function uses a non-reentrant model
 22996 ;;
 22997                           
 22998                           
 22999                           ;psect for function i1_do_I2C_IDLE
 23000  24E2                     i1_do_I2C_IDLE:	
 23001  24E2                     i1l6036:	
 23002                           ;incstack = 0
 23003                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 23004                           
 23005                           
 23006                           ;i2c_master.c: 249: i2c_status.busy = 0;
 23007  24E2  0022               	movlb	2	; select bank2
 23008  24E3  1020               	bcf	_i2c_status^(0+256),0
 23009                           
 23010                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 23011  24E4  01AB               	clrf	(_i2c_status^(0+256)+11)
 23012                           
 23013                           ;i2c_master.c: 251: return I2C_RESET;
 23014  24E5  300E               	movlw	14
 23015  24E6  0008               	return
 23016  24E7                     __end_ofi1_do_I2C_IDLE:	
 23017                           
 23018                           	psect	text128
 23019  2527                     __ptext128:	
 23020 ;; *************** function i1_do_I2C_RESET *****************
 23021 ;; Defined at:
 23022 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 23023 ;; Parameters:    Size  Location     Type
 23024 ;;		None
 23025 ;; Auto vars:     Size  Location     Type
 23026 ;;		None
 23027 ;; Return value:  Size  Location     Type
 23028 ;;                  1    wreg      enum E8364
 23029 ;; Registers used:
 23030 ;;		wreg, status,2, status,0, pclath, cstack
 23031 ;; Tracked objects:
 23032 ;;		On entry : 0/0
 23033 ;;		On exit  : 0/0
 23034 ;;		Unchanged: 0/0
 23035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23040 ;;Total ram usage:        0 bytes
 23041 ;; Hardware stack levels used:    1
 23042 ;; Hardware stack levels required when called:    1
 23043 ;; This function calls:
 23044 ;;		i1_i2c1_driver_resetBus
 23045 ;; This function is called by:
 23046 ;; This function uses a non-reentrant model
 23047 ;;
 23048                           
 23049                           
 23050                           ;psect for function i1_do_I2C_RESET
 23051  2527                     i1_do_I2C_RESET:	
 23052  2527                     i1l6026:	
 23053                           ;incstack = 0
 23054                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 23055                           
 23056                           
 23057                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 23058  2527  3198  2028         	fcall	i1_i2c1_driver_resetBus
 23059                           
 23060                           ;i2c_master.c: 242: i2c_status.busy = 0;
 23061  2529  0022               	movlb	2	; select bank2
 23062  252A  1020               	bcf	_i2c_status^(0+256),0
 23063                           
 23064                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 23065  252B  01AB               	clrf	(_i2c_status^(0+256)+11)
 23066                           
 23067                           ;i2c_master.c: 244: return I2C_RESET;
 23068  252C  300E               	movlw	14
 23069  252D  0008               	return
 23070  252E                     __end_ofi1_do_I2C_RESET:	
 23071                           
 23072                           	psect	text129
 23073  19EA                     __ptext129:	
 23074 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 23075 ;; Defined at:
 23076 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 23077 ;; Parameters:    Size  Location     Type
 23078 ;;		None
 23079 ;; Auto vars:     Size  Location     Type
 23080 ;;		None
 23081 ;; Return value:  Size  Location     Type
 23082 ;;                  1    wreg      enum E8364
 23083 ;; Registers used:
 23084 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23085 ;; Tracked objects:
 23086 ;;		On entry : 0/0
 23087 ;;		On exit  : 0/0
 23088 ;;		Unchanged: 0/0
 23089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23094 ;;Total ram usage:        1 bytes
 23095 ;; Hardware stack levels used:    1
 23096 ;; Hardware stack levels required when called:    2
 23097 ;; This function calls:
 23098 ;;		i1_do_I2C_SEND_RESTART
 23099 ;;		i1_do_I2C_SEND_STOP
 23100 ;;		i1_mssp1_setIRQ
 23101 ;;		i1_returnReset
 23102 ;;		i1_returnStop
 23103 ;; This function is called by:
 23104 ;; This function uses a non-reentrant model
 23105 ;;
 23106                           
 23107                           
 23108                           ;psect for function i1_do_I2C_TX_EMPTY
 23109  19EA                     i1_do_I2C_TX_EMPTY:	
 23110  19EA                     i1l8038:	
 23111                           ;incstack = 0
 23112                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23113                           
 23114                           
 23115                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 23116  19EA  0022               	movlb	2	; select bank2
 23117  19EB  1520               	bsf	_i2c_status^(0+256),2
 23118                           
 23119                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 23120  19EC  29F7               	goto	i1l8056
 23121  19ED                     i1l8040:	
 23122                           ;i2c_master.c: 386: {
 23123                           ;i2c_master.c: 387: case i2c_restart_read:
 23124                           
 23125                           
 23126                           ;i2c_master.c: 388: case i2c_restart_write:
 23127                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 23128  19ED  31A4  24B7         	fcall	i1_do_I2C_SEND_RESTART
 23129  19EF  0008               	return
 23130  19F0                     i1l8044:	
 23131                           ;i2c_master.c: 390: case i2c_continue:
 23132                           
 23133                           
 23134                           ;i2c_master.c: 391: mssp1_setIRQ();
 23135  19F0  31A4  2486         	fcall	i1_mssp1_setIRQ
 23136                           
 23137                           ;i2c_master.c: 392: return I2C_TX;
 23138  19F2  3003               	movlw	3
 23139  19F3  0008               	return
 23140  19F4                     i1l8050:	
 23141                           ;i2c_master.c: 394: case i2c_stop:
 23142                           
 23143                           ;i2c_master.c: 393: default:
 23144                           
 23145                           
 23146                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 23147  19F4  31A4  24BB         	fcall	i1_do_I2C_SEND_STOP
 23148                           
 23149                           ;i2c_master.c: 396: }
 23150  19F6  0008               	return
 23151  19F7                     i1l8056:	
 23152  19F7  0022               	movlb	2	; select bank2
 23153  19F8  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 23154  19F9  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 23155  19FA  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 23156  19FB  00F0               	movwf	i1returnReset@p
 23157  19FC  300C               	movlw	12
 23158  19FD  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23159  19FE  0086               	movwf	6
 23160  19FF  3001               	movlw	1	; select bank2/3
 23161  1A00  0087               	movwf	7
 23162  1A01  3F41               	moviw [1]fsr1
 23163  1A02  008A               	movwf	10
 23164  1A03  3F40               	moviw [0]fsr1
 23165  1A04  000A               	callw
 23166  1A05  3199               	pagesel	$
 23167                           
 23168                           ; Switch size 1, requested type "space"
 23169                           ; Number of cases is 4, Range of values is 1 to 4
 23170                           ; switch strategies available:
 23171                           ; Name         Instructions Cycles
 23172                           ; simple_byte           13     7 (average)
 23173                           ; direct_byte           17     9 (fixed)
 23174                           ; jumptable            263     9 (fixed)
 23175                           ;	Chosen strategy is simple_byte
 23176  1A06  3A01               	xorlw	1	; case 1
 23177  1A07  1903               	skipnz
 23178  1A08  29F4               	goto	i1l8050
 23179  1A09  3A03               	xorlw	3	; case 2
 23180  1A0A  1903               	skipnz
 23181  1A0B  29ED               	goto	i1l8040
 23182  1A0C  3A01               	xorlw	1	; case 3
 23183  1A0D  1903               	skipnz
 23184  1A0E  29ED               	goto	i1l8040
 23185  1A0F  3A07               	xorlw	7	; case 4
 23186  1A10  1903               	skipnz
 23187  1A11  29F0               	goto	i1l8044
 23188  1A12  29F4               	goto	i1l8050
 23189  1A13  0008               	return
 23190  1A14                     __end_ofi1_do_I2C_TX_EMPTY:	
 23191                           
 23192                           	psect	text130
 23193  2486                     __ptext130:	
 23194 ;; *************** function i1_mssp1_setIRQ *****************
 23195 ;; Defined at:
 23196 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 23197 ;; Parameters:    Size  Location     Type
 23198 ;;		None
 23199 ;; Auto vars:     Size  Location     Type
 23200 ;;		None
 23201 ;; Return value:  Size  Location     Type
 23202 ;;                  1    wreg      void 
 23203 ;; Registers used:
 23204 ;;		None
 23205 ;; Tracked objects:
 23206 ;;		On entry : 0/0
 23207 ;;		On exit  : 0/0
 23208 ;;		Unchanged: 0/0
 23209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23214 ;;Total ram usage:        0 bytes
 23215 ;; Hardware stack levels used:    1
 23216 ;; This function calls:
 23217 ;;		Nothing
 23218 ;; This function is called by:
 23219 ;;		i1_do_I2C_TX_EMPTY
 23220 ;; This function uses a non-reentrant model
 23221 ;;
 23222                           
 23223                           
 23224                           ;psect for function i1_mssp1_setIRQ
 23225  2486                     i1_mssp1_setIRQ:	
 23226                           
 23227                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 23228                           
 23229                           ;incstack = 0
 23230                           ; Regs used in i1_mssp1_setIRQ: []
 23231  2486  0020               	movlb	0	; select bank0
 23232  2487  1591               	bsf	17,3	;volatile
 23233  2488  0008               	return
 23234  2489                     __end_ofi1_mssp1_setIRQ:	
 23235                           
 23236                           	psect	text131
 23237  25EB                     __ptext131:	
 23238 ;; *************** function i1_i2c1_driver_isNACK *****************
 23239 ;; Defined at:
 23240 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 23241 ;; Parameters:    Size  Location     Type
 23242 ;;		None
 23243 ;; Auto vars:     Size  Location     Type
 23244 ;;		None
 23245 ;; Return value:  Size  Location     Type
 23246 ;;		None               void
 23247 ;; Registers used:
 23248 ;;		wreg, status,2, status,0
 23249 ;; Tracked objects:
 23250 ;;		On entry : 0/0
 23251 ;;		On exit  : 0/0
 23252 ;;		Unchanged: 0/0
 23253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23258 ;;Total ram usage:        1 bytes
 23259 ;; Hardware stack levels used:    1
 23260 ;; This function calls:
 23261 ;;		Nothing
 23262 ;; This function is called by:
 23263 ;;		i1_do_I2C_TX
 23264 ;;		i1_i2c_ISR
 23265 ;; This function uses a non-reentrant model
 23266 ;;
 23267                           
 23268                           
 23269                           ;psect for function i1_i2c1_driver_isNACK
 23270  25EB                     i1_i2c1_driver_isNACK:	
 23271                           
 23272                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 23273                           
 23274                           ;incstack = 0
 23275                           ; Regs used in i1_i2c1_driver_isNACK: [wreg+status,2+status,0]
 23276  25EB  0024               	movlb	4	; select bank4
 23277  25EC  0816               	movf	22,w	;volatile
 23278  25ED  39BF               	andlw	-65
 23279  25EE  3840               	iorlw	64
 23280  25EF  0096               	movwf	22	;volatile
 23281  25F0  0E16               	swapf	22,w	;volatile
 23282  25F1  0C89               	rrf	9,f
 23283  25F2  0C89               	rrf	9,f
 23284  25F3  3901               	andlw	1
 23285  25F4  00F0               	movwf	??i1_i2c1_driver_isNACK
 23286  25F5  0C70               	rrf	??i1_i2c1_driver_isNACK,w
 23287  25F6  0008               	return
 23288  25F7                     __end_ofi1_i2c1_driver_isNACK:	
 23289                           
 23290                           	psect	text132
 23291  24DD                     __ptext132:	
 23292 ;; *************** function i1_i2c1_driver_TXData *****************
 23293 ;; Defined at:
 23294 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 23295 ;; Parameters:    Size  Location     Type
 23296 ;;  d               1    wreg     unsigned char 
 23297 ;; Auto vars:     Size  Location     Type
 23298 ;;  d               1    0[COMMON] unsigned char 
 23299 ;; Return value:  Size  Location     Type
 23300 ;;                  1    wreg      void 
 23301 ;; Registers used:
 23302 ;;		wreg
 23303 ;; Tracked objects:
 23304 ;;		On entry : 0/0
 23305 ;;		On exit  : 0/0
 23306 ;;		Unchanged: 0/0
 23307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23311 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23312 ;;Total ram usage:        1 bytes
 23313 ;; Hardware stack levels used:    1
 23314 ;; This function calls:
 23315 ;;		Nothing
 23316 ;; This function is called by:
 23317 ;;		i1_do_I2C_SEND_ADR_READ
 23318 ;;		i1_do_I2C_SEND_ADR_WRITE
 23319 ;;		i1_do_I2C_TX
 23320 ;; This function uses a non-reentrant model
 23321 ;;
 23322                           
 23323                           
 23324                           ;psect for function i1_i2c1_driver_TXData
 23325  24DD                     i1_i2c1_driver_TXData:	
 23326                           
 23327                           ;incstack = 0
 23328                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 23329                           ;i1i2c1_driver_TXData@d stored from wreg
 23330  24DD  00F0               	movwf	i1i2c1_driver_TXData@d
 23331                           
 23332                           ;i2c1_driver.c: 188: SSP1BUF = d;
 23333  24DE  0870               	movf	i1i2c1_driver_TXData@d,w
 23334  24DF  0024               	movlb	4	; select bank4
 23335  24E0  0091               	movwf	17	;volatile
 23336  24E1  0008               	return
 23337  24E2                     __end_ofi1_i2c1_driver_TXData:	
 23338                           
 23339                           	psect	text133
 23340  2483                     __ptext133:	
 23341 ;; *************** function i1_i2c1_driver_getRXData *****************
 23342 ;; Defined at:
 23343 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 23344 ;; Parameters:    Size  Location     Type
 23345 ;;		None
 23346 ;; Auto vars:     Size  Location     Type
 23347 ;;		None
 23348 ;; Return value:  Size  Location     Type
 23349 ;;                  1    wreg      unsigned char 
 23350 ;; Registers used:
 23351 ;;		wreg
 23352 ;; Tracked objects:
 23353 ;;		On entry : 0/0
 23354 ;;		On exit  : 0/0
 23355 ;;		Unchanged: 0/0
 23356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23361 ;;Total ram usage:        0 bytes
 23362 ;; Hardware stack levels used:    1
 23363 ;; This function calls:
 23364 ;;		Nothing
 23365 ;; This function is called by:
 23366 ;;		i1_do_I2C_RX
 23367 ;; This function uses a non-reentrant model
 23368 ;;
 23369                           
 23370                           
 23371                           ;psect for function i1_i2c1_driver_getRXData
 23372  2483                     i1_i2c1_driver_getRXData:	
 23373                           
 23374                           ;i2c1_driver.c: 173: return SSP1BUF;
 23375                           
 23376                           ;incstack = 0
 23377                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 23378  2483  0024               	movlb	4	; select bank4
 23379  2484  0811               	movf	17,w	;volatile
 23380  2485  0008               	return
 23381  2486                     __end_ofi1_i2c1_driver_getRXData:	
 23382                           
 23383                           	psect	text134
 23384  24AB                     __ptext134:	
 23385 ;; *************** function i1_i2c1_driver_sendNACK *****************
 23386 ;; Defined at:
 23387 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 23388 ;; Parameters:    Size  Location     Type
 23389 ;;		None
 23390 ;; Auto vars:     Size  Location     Type
 23391 ;;		None
 23392 ;; Return value:  Size  Location     Type
 23393 ;;                  1    wreg      void 
 23394 ;; Registers used:
 23395 ;;		None
 23396 ;; Tracked objects:
 23397 ;;		On entry : 0/0
 23398 ;;		On exit  : 0/0
 23399 ;;		Unchanged: 0/0
 23400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23405 ;;Total ram usage:        0 bytes
 23406 ;; Hardware stack levels used:    1
 23407 ;; This function calls:
 23408 ;;		Nothing
 23409 ;; This function is called by:
 23410 ;;		i1_do_I2C_DO_NACK_STOP
 23411 ;;		i1_do_I2C_DO_NACK_RESTART
 23412 ;; This function uses a non-reentrant model
 23413 ;;
 23414                           
 23415                           
 23416                           ;psect for function i1_i2c1_driver_sendNACK
 23417  24AB                     i1_i2c1_driver_sendNACK:	
 23418                           
 23419                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 23420                           
 23421                           ;incstack = 0
 23422                           ; Regs used in i1_i2c1_driver_sendNACK: []
 23423  24AB  0024               	movlb	4	; select bank4
 23424  24AC  1696               	bsf	22,5	;volatile
 23425                           
 23426                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 23427  24AD  1616               	bsf	22,4	;volatile
 23428  24AE  0008               	return
 23429  24AF                     __end_ofi1_i2c1_driver_sendNACK:	
 23430                           
 23431                           	psect	text135
 23432  1828                     __ptext135:	
 23433 ;; *************** function i1_i2c1_driver_resetBus *****************
 23434 ;; Defined at:
 23435 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 23436 ;; Parameters:    Size  Location     Type
 23437 ;;		None
 23438 ;; Auto vars:     Size  Location     Type
 23439 ;;		None
 23440 ;; Return value:  Size  Location     Type
 23441 ;;                  1    wreg      void 
 23442 ;; Registers used:
 23443 ;;		None
 23444 ;; Tracked objects:
 23445 ;;		On entry : 0/0
 23446 ;;		On exit  : 0/0
 23447 ;;		Unchanged: 0/0
 23448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23453 ;;Total ram usage:        0 bytes
 23454 ;; Hardware stack levels used:    1
 23455 ;; This function calls:
 23456 ;;		Nothing
 23457 ;; This function is called by:
 23458 ;;		i1_do_I2C_RESET
 23459 ;; This function uses a non-reentrant model
 23460 ;;
 23461                           
 23462                           
 23463                           ;psect for function i1_i2c1_driver_resetBus
 23464  1828                     i1_i2c1_driver_resetBus:	
 23465                           
 23466                           ;incstack = 0
 23467                           ; Regs used in i1_i2c1_driver_resetBus: []
 23468  1828  0008               	return
 23469  1829                     __end_ofi1_i2c1_driver_resetBus:	
 23470                           
 23471                           	psect	text136
 23472  2480                     __ptext136:	
 23473 ;; *************** function i1_i2c1_driver_startRX *****************
 23474 ;; Defined at:
 23475 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 23476 ;; Parameters:    Size  Location     Type
 23477 ;;		None
 23478 ;; Auto vars:     Size  Location     Type
 23479 ;;		None
 23480 ;; Return value:  Size  Location     Type
 23481 ;;                  1    wreg      void 
 23482 ;; Registers used:
 23483 ;;		None
 23484 ;; Tracked objects:
 23485 ;;		On entry : 0/0
 23486 ;;		On exit  : 0/0
 23487 ;;		Unchanged: 0/0
 23488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23493 ;;Total ram usage:        0 bytes
 23494 ;; Hardware stack levels used:    1
 23495 ;; This function calls:
 23496 ;;		Nothing
 23497 ;; This function is called by:
 23498 ;;		i1_do_I2C_RCEN
 23499 ;; This function uses a non-reentrant model
 23500 ;;
 23501                           
 23502                           
 23503                           ;psect for function i1_i2c1_driver_startRX
 23504  2480                     i1_i2c1_driver_startRX:	
 23505                           
 23506                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 23507                           
 23508                           ;incstack = 0
 23509                           ; Regs used in i1_i2c1_driver_startRX: []
 23510  2480  0024               	movlb	4	; select bank4
 23511  2481  1596               	bsf	22,3	;volatile
 23512  2482  0008               	return
 23513  2483                     __end_ofi1_i2c1_driver_startRX:	
 23514                           
 23515                           	psect	text137
 23516  07FE                     __ptext137:	
 23517 ;; *************** function i1_returnReset *****************
 23518 ;; Defined at:
 23519 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 23520 ;; Parameters:    Size  Location     Type
 23521 ;;  p               1    0[COMMON] PTR void 
 23522 ;;		 -> NULL(0), 
 23523 ;; Auto vars:     Size  Location     Type
 23524 ;;		None
 23525 ;; Return value:  Size  Location     Type
 23526 ;;                  1    wreg      enum E8198
 23527 ;; Registers used:
 23528 ;;		wreg
 23529 ;; Tracked objects:
 23530 ;;		On entry : 0/0
 23531 ;;		On exit  : 0/0
 23532 ;;		Unchanged: 0/0
 23533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23534 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23537 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23538 ;;Total ram usage:        1 bytes
 23539 ;; Hardware stack levels used:    1
 23540 ;; This function calls:
 23541 ;;		Nothing
 23542 ;; This function is called by:
 23543 ;; This function uses a non-reentrant model
 23544 ;;
 23545                           
 23546                           
 23547                           ;psect for function i1_returnReset
 23548  07FE                     i1_returnReset:	
 23549  07FE                     i1l7664:	
 23550                           ;incstack = 0
 23551                           ; Regs used in i1_returnReset: [wreg]
 23552                           
 23553                           
 23554                           ;i2c_master.c: 450: return i2c_reset_link;
 23555  07FE  3005               	movlw	5
 23556  07FF  0008               	return
 23557  0800                     __end_ofi1_returnReset:	
 23558                           
 23559                           	psect	text138
 23560  0002                     __ptext138:	
 23561 ;; *************** function i1_returnStop *****************
 23562 ;; Defined at:
 23563 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 23564 ;; Parameters:    Size  Location     Type
 23565 ;;  p               1    0[COMMON] PTR void 
 23566 ;;		 -> NULL(0), 
 23567 ;; Auto vars:     Size  Location     Type
 23568 ;;		None
 23569 ;; Return value:  Size  Location     Type
 23570 ;;                  1    wreg      enum E8198
 23571 ;; Registers used:
 23572 ;;		wreg
 23573 ;; Tracked objects:
 23574 ;;		On entry : 0/0
 23575 ;;		On exit  : 0/0
 23576 ;;		Unchanged: 0/0
 23577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23578 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23581 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23582 ;;Total ram usage:        1 bytes
 23583 ;; Hardware stack levels used:    1
 23584 ;; This function calls:
 23585 ;;		Nothing
 23586 ;; This function is called by:
 23587 ;; This function uses a non-reentrant model
 23588 ;;
 23589                           
 23590                           
 23591                           ;psect for function i1_returnStop
 23592  0002                     i1_returnStop:	
 23593  0002                     i1l7660:	
 23594                           ;incstack = 0
 23595                           ; Regs used in i1_returnStop: [wreg]
 23596                           
 23597                           
 23598                           ;i2c_master.c: 445: return i2c_stop;
 23599  0002  3001               	movlw	1
 23600  0003  0008               	return
 23601  0004                     __end_ofi1_returnStop:	
 23602                           
 23603                           	psect	text139
 23604  247D                     __ptext139:	
 23605 ;; *************** function i1_i2c1_driver_stop *****************
 23606 ;; Defined at:
 23607 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 23608 ;; Parameters:    Size  Location     Type
 23609 ;;		None
 23610 ;; Auto vars:     Size  Location     Type
 23611 ;;		None
 23612 ;; Return value:  Size  Location     Type
 23613 ;;                  1    wreg      void 
 23614 ;; Registers used:
 23615 ;;		None
 23616 ;; Tracked objects:
 23617 ;;		On entry : 0/0
 23618 ;;		On exit  : 0/0
 23619 ;;		Unchanged: 0/0
 23620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23625 ;;Total ram usage:        0 bytes
 23626 ;; Hardware stack levels used:    1
 23627 ;; This function calls:
 23628 ;;		Nothing
 23629 ;; This function is called by:
 23630 ;;		i1_do_I2C_SEND_STOP
 23631 ;; This function uses a non-reentrant model
 23632 ;;
 23633                           
 23634                           
 23635                           ;psect for function i1_i2c1_driver_stop
 23636  247D                     i1_i2c1_driver_stop:	
 23637                           
 23638                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 23639                           
 23640                           ;incstack = 0
 23641                           ; Regs used in i1_i2c1_driver_stop: []
 23642  247D  0024               	movlb	4	; select bank4
 23643  247E  1516               	bsf	22,2	;volatile
 23644  247F  0008               	return
 23645  2480                     __end_ofi1_i2c1_driver_stop:	
 23646                           
 23647                           	psect	text140
 23648  247A                     __ptext140:	
 23649 ;; *************** function i1_i2c1_driver_restart *****************
 23650 ;; Defined at:
 23651 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 23652 ;; Parameters:    Size  Location     Type
 23653 ;;		None
 23654 ;; Auto vars:     Size  Location     Type
 23655 ;;		None
 23656 ;; Return value:  Size  Location     Type
 23657 ;;                  1    wreg      void 
 23658 ;; Registers used:
 23659 ;;		None
 23660 ;; Tracked objects:
 23661 ;;		On entry : 0/0
 23662 ;;		On exit  : 0/0
 23663 ;;		Unchanged: 0/0
 23664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23669 ;;Total ram usage:        0 bytes
 23670 ;; Hardware stack levels used:    1
 23671 ;; This function calls:
 23672 ;;		Nothing
 23673 ;; This function is called by:
 23674 ;;		i1_do_I2C_SEND_RESTART_READ
 23675 ;;		i1_do_I2C_SEND_RESTART_WRITE
 23676 ;;		i1_do_I2C_SEND_RESTART
 23677 ;; This function uses a non-reentrant model
 23678 ;;
 23679                           
 23680                           
 23681                           ;psect for function i1_i2c1_driver_restart
 23682  247A                     i1_i2c1_driver_restart:	
 23683                           
 23684                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 23685                           
 23686                           ;incstack = 0
 23687                           ; Regs used in i1_i2c1_driver_restart: []
 23688  247A  0024               	movlb	4	; select bank4
 23689  247B  1496               	bsf	22,1	;volatile
 23690  247C  0008               	return
 23691  247D                     __end_ofi1_i2c1_driver_restart:	
 23692                           
 23693                           	psect	text141
 23694  24A7                     __ptext141:	
 23695 ;; *************** function i1_i2c1_driver_sendACK *****************
 23696 ;; Defined at:
 23697 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 23698 ;; Parameters:    Size  Location     Type
 23699 ;;		None
 23700 ;; Auto vars:     Size  Location     Type
 23701 ;;		None
 23702 ;; Return value:  Size  Location     Type
 23703 ;;                  1    wreg      void 
 23704 ;; Registers used:
 23705 ;;		None
 23706 ;; Tracked objects:
 23707 ;;		On entry : 0/0
 23708 ;;		On exit  : 0/0
 23709 ;;		Unchanged: 0/0
 23710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23715 ;;Total ram usage:        0 bytes
 23716 ;; Hardware stack levels used:    1
 23717 ;; This function calls:
 23718 ;;		Nothing
 23719 ;; This function is called by:
 23720 ;;		i1_do_I2C_DO_ACK
 23721 ;;		i1_do_I2C_RX
 23722 ;; This function uses a non-reentrant model
 23723 ;;
 23724                           
 23725                           
 23726                           ;psect for function i1_i2c1_driver_sendACK
 23727  24A7                     i1_i2c1_driver_sendACK:	
 23728                           
 23729                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 23730                           
 23731                           ;incstack = 0
 23732                           ; Regs used in i1_i2c1_driver_sendACK: []
 23733  24A7  0024               	movlb	4	; select bank4
 23734  24A8  1296               	bcf	22,5	;volatile
 23735                           
 23736                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 23737  24A9  1616               	bsf	22,4	;volatile
 23738  24AA  0008               	return
 23739  24AB                     __end_ofi1_i2c1_driver_sendACK:	
 23740                           
 23741                           	psect	text142
 23742  2477                     __ptext142:	
 23743 ;; *************** function _i2c_busCollisionISR *****************
 23744 ;; Defined at:
 23745 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 23746 ;; Parameters:    Size  Location     Type
 23747 ;;		None
 23748 ;; Auto vars:     Size  Location     Type
 23749 ;;		None
 23750 ;; Return value:  Size  Location     Type
 23751 ;;                  1    wreg      void 
 23752 ;; Registers used:
 23753 ;;		status,2, status,0, pclath, cstack
 23754 ;; Tracked objects:
 23755 ;;		On entry : 0/0
 23756 ;;		On exit  : 0/0
 23757 ;;		Unchanged: 0/0
 23758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23763 ;;Total ram usage:        0 bytes
 23764 ;; Hardware stack levels used:    1
 23765 ;; Hardware stack levels required when called:    1
 23766 ;; This function calls:
 23767 ;;		_i2c1_driver_clearBusCollision
 23768 ;; This function is called by:
 23769 ;;		_i2c_open
 23770 ;;		_INTERRUPT_InterruptManager
 23771 ;; This function uses a non-reentrant model
 23772 ;;
 23773                           
 23774                           
 23775                           ;psect for function _i2c_busCollisionISR
 23776  2477                     _i2c_busCollisionISR:	
 23777                           
 23778                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 23779                           
 23780                           ;incstack = 0
 23781                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 23782  2477  31A4  2474         	fcall	_i2c1_driver_clearBusCollision
 23783  2479  0008               	return
 23784  247A                     __end_of_i2c_busCollisionISR:	
 23785                           
 23786                           	psect	text143
 23787  2474                     __ptext143:	
 23788 ;; *************** function _i2c1_driver_clearBusCollision *****************
 23789 ;; Defined at:
 23790 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 23791 ;; Parameters:    Size  Location     Type
 23792 ;;		None
 23793 ;; Auto vars:     Size  Location     Type
 23794 ;;		None
 23795 ;; Return value:  Size  Location     Type
 23796 ;;                  1    wreg      void 
 23797 ;; Registers used:
 23798 ;;		None
 23799 ;; Tracked objects:
 23800 ;;		On entry : 0/0
 23801 ;;		On exit  : 0/0
 23802 ;;		Unchanged: 0/0
 23803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23808 ;;Total ram usage:        0 bytes
 23809 ;; Hardware stack levels used:    1
 23810 ;; This function calls:
 23811 ;;		Nothing
 23812 ;; This function is called by:
 23813 ;;		_i2c_busCollisionISR
 23814 ;; This function uses a non-reentrant model
 23815 ;;
 23816                           
 23817                           
 23818                           ;psect for function _i2c1_driver_clearBusCollision
 23819  2474                     _i2c1_driver_clearBusCollision:	
 23820                           
 23821                           ;i2c1_driver.c: 255: PIR1bits.BCL1IF = 0;
 23822                           
 23823                           ;incstack = 0
 23824                           ; Regs used in _i2c1_driver_clearBusCollision: []
 23825  2474  0020               	movlb	0	; select bank0
 23826  2475  1111               	bcf	17,2	;volatile
 23827  2476  0008               	return
 23828  2477                     __end_of_i2c1_driver_clearBusCollision:	
 23829                           
 23830                           	psect	text144
 23831  2610                     __ptext144:	
 23832 ;; *************** function _TMR2_ISR *****************
 23833 ;; Defined at:
 23834 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 23835 ;; Parameters:    Size  Location     Type
 23836 ;;		None
 23837 ;; Auto vars:     Size  Location     Type
 23838 ;;		None
 23839 ;; Return value:  Size  Location     Type
 23840 ;;                  1    wreg      void 
 23841 ;; Registers used:
 23842 ;;		wreg, status,2, status,0, pclath, cstack
 23843 ;; Tracked objects:
 23844 ;;		On entry : 0/0
 23845 ;;		On exit  : 0/0
 23846 ;;		Unchanged: 0/0
 23847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23852 ;;Total ram usage:        0 bytes
 23853 ;; Hardware stack levels used:    1
 23854 ;; Hardware stack levels required when called:    2
 23855 ;; This function calls:
 23856 ;;		Absolute function
 23857 ;;		_TMR2_DefaultInterruptHandler
 23858 ;; This function is called by:
 23859 ;;		_INTERRUPT_InterruptManager
 23860 ;; This function uses a non-reentrant model
 23861 ;;
 23862                           
 23863                           
 23864                           ;psect for function _TMR2_ISR
 23865  2610                     _TMR2_ISR:	
 23866                           
 23867                           ;tmr2.c: 123: PIR1bits.TMR2IF = 0;
 23868                           
 23869                           ;incstack = 0
 23870                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 23871  2610  0020               	movlb	0	; select bank0
 23872  2611  1091               	bcf	17,1	;volatile
 23873                           
 23874                           ;tmr2.c: 125: if(TMR2_InterruptHandler)
 23875  2612  0022               	movlb	2	; select bank2
 23876  2613  086C               	movf	_TMR2_InterruptHandler^(0+256),w
 23877  2614  046D               	iorwf	(_TMR2_InterruptHandler+1)^(0+256),w
 23878  2615  1903               	btfsc	3,2
 23879  2616  0008               	return
 23880                           
 23881                           ;tmr2.c: 126: {
 23882                           ;tmr2.c: 127: TMR2_InterruptHandler();
 23883  2617  086D               	movf	(_TMR2_InterruptHandler+1)^(0+256),w
 23884  2618  008A               	movwf	10
 23885  2619  086C               	movf	_TMR2_InterruptHandler^(0+256),w
 23886  261A  000A               	callw
 23887  261B  31A6               	pagesel	$
 23888  261C  0008               	return
 23889  261D                     __end_of_TMR2_ISR:	
 23890                           
 23891                           	psect	text145
 23892  257D                     __ptext145:	
 23893 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 23894 ;; Defined at:
 23895 ;;		line 136 in file "mcc_generated_files/tmr2.c"
 23896 ;; Parameters:    Size  Location     Type
 23897 ;;		None
 23898 ;; Auto vars:     Size  Location     Type
 23899 ;;		None
 23900 ;; Return value:  Size  Location     Type
 23901 ;;                  1    wreg      void 
 23902 ;; Registers used:
 23903 ;;		wreg, status,2, status,0, pclath, cstack
 23904 ;; Tracked objects:
 23905 ;;		On entry : 0/0
 23906 ;;		On exit  : 0/0
 23907 ;;		Unchanged: 0/0
 23908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23913 ;;Total ram usage:        0 bytes
 23914 ;; Hardware stack levels used:    1
 23915 ;; Hardware stack levels required when called:    1
 23916 ;; This function calls:
 23917 ;;		_TMR2_StopTimer
 23918 ;;		_TMR2_WriteTimer
 23919 ;; This function is called by:
 23920 ;;		_TMR2_Initialize
 23921 ;;		_TMR2_ISR
 23922 ;; This function uses a non-reentrant model
 23923 ;;
 23924                           
 23925                           
 23926                           ;psect for function _TMR2_DefaultInterruptHandler
 23927  257D                     _TMR2_DefaultInterruptHandler:	
 23928                           
 23929                           ;incstack = 0
 23930                           ; Regs used in _TMR2_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 23931                           ;tmr2.c: 140: do { LATCbits.LATC1 = 1; } while(0);
 23932  257D  0022               	movlb	2	; select bank2
 23933  257E  148E               	bsf	14,1	;volatile
 23934                           
 23935                           ;tmr2.c: 143: TMR2_StopTimer();
 23936  257F  31A4  2471  31A5   	fcall	_TMR2_StopTimer
 23937                           
 23938                           ;tmr2.c: 144: TMR2_WriteTimer(0);
 23939  2582  3000               	movlw	0
 23940  2583  31A4  24D8         	fcall	_TMR2_WriteTimer
 23941  2585  0008               	return
 23942  2586                     __end_of_TMR2_DefaultInterruptHandler:	
 23943                           
 23944                           	psect	text146
 23945  24D8                     __ptext146:	
 23946 ;; *************** function _TMR2_WriteTimer *****************
 23947 ;; Defined at:
 23948 ;;		line 108 in file "mcc_generated_files/tmr2.c"
 23949 ;; Parameters:    Size  Location     Type
 23950 ;;  timerVal        1    wreg     unsigned char 
 23951 ;; Auto vars:     Size  Location     Type
 23952 ;;  timerVal        1    0[COMMON] unsigned char 
 23953 ;; Return value:  Size  Location     Type
 23954 ;;                  1    wreg      void 
 23955 ;; Registers used:
 23956 ;;		wreg
 23957 ;; Tracked objects:
 23958 ;;		On entry : 0/0
 23959 ;;		On exit  : 0/0
 23960 ;;		Unchanged: 0/0
 23961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23966 ;;Total ram usage:        1 bytes
 23967 ;; Hardware stack levels used:    1
 23968 ;; This function calls:
 23969 ;;		Nothing
 23970 ;; This function is called by:
 23971 ;;		_TMR2_DefaultInterruptHandler
 23972 ;; This function uses a non-reentrant model
 23973 ;;
 23974                           
 23975                           
 23976                           ;psect for function _TMR2_WriteTimer
 23977  24D8                     _TMR2_WriteTimer:	
 23978                           
 23979                           ;incstack = 0
 23980                           ; Regs used in _TMR2_WriteTimer: [wreg]
 23981                           ;TMR2_WriteTimer@timerVal stored from wreg
 23982  24D8  00F0               	movwf	TMR2_WriteTimer@timerVal
 23983                           
 23984                           ;tmr2.c: 111: TMR2 = timerVal;
 23985  24D9  0870               	movf	TMR2_WriteTimer@timerVal,w
 23986  24DA  0020               	movlb	0	; select bank0
 23987  24DB  009D               	movwf	29	;volatile
 23988  24DC  0008               	return
 23989  24DD                     __end_of_TMR2_WriteTimer:	
 23990                           
 23991                           	psect	text147
 23992  2471                     __ptext147:	
 23993 ;; *************** function _TMR2_StopTimer *****************
 23994 ;; Defined at:
 23995 ;;		line 93 in file "mcc_generated_files/tmr2.c"
 23996 ;; Parameters:    Size  Location     Type
 23997 ;;		None
 23998 ;; Auto vars:     Size  Location     Type
 23999 ;;		None
 24000 ;; Return value:  Size  Location     Type
 24001 ;;                  1    wreg      void 
 24002 ;; Registers used:
 24003 ;;		None
 24004 ;; Tracked objects:
 24005 ;;		On entry : 0/0
 24006 ;;		On exit  : 0/0
 24007 ;;		Unchanged: 0/0
 24008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24013 ;;Total ram usage:        0 bytes
 24014 ;; Hardware stack levels used:    1
 24015 ;; This function calls:
 24016 ;;		Nothing
 24017 ;; This function is called by:
 24018 ;;		_TMR2_DefaultInterruptHandler
 24019 ;; This function uses a non-reentrant model
 24020 ;;
 24021                           
 24022                           
 24023                           ;psect for function _TMR2_StopTimer
 24024  2471                     _TMR2_StopTimer:	
 24025                           
 24026                           ;tmr2.c: 96: T2CONbits.TMR2ON = 0;
 24027                           
 24028                           ;incstack = 0
 24029                           ; Regs used in _TMR2_StopTimer: []
 24030  2471  0020               	movlb	0	; select bank0
 24031  2472  111F               	bcf	31,2	;volatile
 24032  2473  0008               	return
 24033  2474                     __end_of_TMR2_StopTimer:	
 24034                           
 24035                           	psect	text148
 24036  2603                     __ptext148:	
 24037 ;; *************** function _TMR0_ISR *****************
 24038 ;; Defined at:
 24039 ;;		line 120 in file "mcc_generated_files/tmr0.c"
 24040 ;; Parameters:    Size  Location     Type
 24041 ;;		None
 24042 ;; Auto vars:     Size  Location     Type
 24043 ;;		None
 24044 ;; Return value:  Size  Location     Type
 24045 ;;                  1    wreg      void 
 24046 ;; Registers used:
 24047 ;;		wreg, status,2, status,0, pclath, cstack
 24048 ;; Tracked objects:
 24049 ;;		On entry : 0/0
 24050 ;;		On exit  : 0/0
 24051 ;;		Unchanged: 0/0
 24052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24057 ;;Total ram usage:        0 bytes
 24058 ;; Hardware stack levels used:    1
 24059 ;; Hardware stack levels required when called:    4
 24060 ;; This function calls:
 24061 ;;		Absolute function
 24062 ;;		_TMR0_DefaultInterruptHandler
 24063 ;; This function is called by:
 24064 ;;		_INTERRUPT_InterruptManager
 24065 ;; This function uses a non-reentrant model
 24066 ;;
 24067                           
 24068                           
 24069                           ;psect for function _TMR0_ISR
 24070  2603                     _TMR0_ISR:	
 24071                           
 24072                           ;tmr0.c: 123: PIR0bits.TMR0IF = 0;
 24073                           
 24074                           ;incstack = 0
 24075 ;; hardware stack exceeded
 24076                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 24077  2603  0020               	movlb	0	; select bank0
 24078  2604  1290               	bcf	16,5	;volatile
 24079                           
 24080                           ;tmr0.c: 124: if(TMR0_InterruptHandler)
 24081  2605  0022               	movlb	2	; select bank2
 24082  2606  086E               	movf	_TMR0_InterruptHandler^(0+256),w
 24083  2607  046F               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 24084  2608  1903               	btfsc	3,2
 24085  2609  0008               	return
 24086                           
 24087                           ;tmr0.c: 125: {
 24088                           ;tmr0.c: 126: TMR0_InterruptHandler();
 24089  260A  086F               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 24090  260B  008A               	movwf	10
 24091  260C  086E               	movf	_TMR0_InterruptHandler^(0+256),w
 24092  260D  000A               	callw
 24093  260E  31A6               	pagesel	$
 24094  260F  0008               	return
 24095  2610                     __end_of_TMR0_ISR:	
 24096                           
 24097                           	psect	text149
 24098  1B5C                     __ptext149:	
 24099 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 24100 ;; Defined at:
 24101 ;;		line 137 in file "mcc_generated_files/tmr0.c"
 24102 ;; Parameters:    Size  Location     Type
 24103 ;;		None
 24104 ;; Auto vars:     Size  Location     Type
 24105 ;;		None
 24106 ;; Return value:  Size  Location     Type
 24107 ;;                  1    wreg      void 
 24108 ;; Registers used:
 24109 ;;		wreg, status,2, status,0, pclath, cstack
 24110 ;; Tracked objects:
 24111 ;;		On entry : 0/0
 24112 ;;		On exit  : 0/0
 24113 ;;		Unchanged: 0/0
 24114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24119 ;;Total ram usage:        0 bytes
 24120 ;; Hardware stack levels used:    1
 24121 ;; Hardware stack levels required when called:    3
 24122 ;; This function calls:
 24123 ;;		_TMR0_StopTimer
 24124 ;;		_TMR0_Write8bitTimer
 24125 ;;		i1_LEDsOn
 24126 ;; This function is called by:
 24127 ;;		_TMR0_Initialize
 24128 ;;		_TMR0_ISR
 24129 ;; This function uses a non-reentrant model
 24130 ;;
 24131                           
 24132                           
 24133                           ;psect for function _TMR0_DefaultInterruptHandler
 24134  1B5C                     _TMR0_DefaultInterruptHandler:	
 24135                           
 24136                           ;tmr0.c: 142: LEDsOn(second_top, 1);
 24137                           
 24138                           ;incstack = 0
 24139 ;; hardware stack exceeded
 24140                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 24141  1B5C  0022               	movlb	2	; select bank2
 24142  1B5D  0865               	movf	(_second_top+3)^(0+256),w
 24143  1B5E  0020               	movlb	0	; select bank0
 24144  1B5F  00AA               	movwf	i1LEDsOn@LEDpins+3
 24145  1B60  0022               	movlb	2	; select bank2
 24146  1B61  0864               	movf	(_second_top+2)^(0+256),w
 24147  1B62  0020               	movlb	0	; select bank0
 24148  1B63  00A9               	movwf	i1LEDsOn@LEDpins+2
 24149  1B64  0022               	movlb	2	; select bank2
 24150  1B65  0863               	movf	(_second_top+1)^(0+256),w
 24151  1B66  0020               	movlb	0	; select bank0
 24152  1B67  00A8               	movwf	i1LEDsOn@LEDpins+1
 24153  1B68  0022               	movlb	2	; select bank2
 24154  1B69  0862               	movf	_second_top^(0+256),w
 24155  1B6A  0020               	movlb	0	; select bank0
 24156  1B6B  00A7               	movwf	i1LEDsOn@LEDpins
 24157  1B6C  3001               	movlw	1
 24158  1B6D  00AB               	movwf	i1LEDsOn@topOrBottom
 24159  1B6E  3000               	movlw	0
 24160  1B6F  00AC               	movwf	i1LEDsOn@topOrBottom+1
 24161  1B70  3198  205F  319B   	fcall	i1_LEDsOn
 24162                           
 24163                           ;tmr0.c: 143: LEDsOn(second_bottom,2);
 24164  1B73  0022               	movlb	2	; select bank2
 24165  1B74  0859               	movf	(_second_bottom+3)^(0+256),w
 24166  1B75  0020               	movlb	0	; select bank0
 24167  1B76  00AA               	movwf	i1LEDsOn@LEDpins+3
 24168  1B77  0022               	movlb	2	; select bank2
 24169  1B78  0858               	movf	(_second_bottom+2)^(0+256),w
 24170  1B79  0020               	movlb	0	; select bank0
 24171  1B7A  00A9               	movwf	i1LEDsOn@LEDpins+2
 24172  1B7B  0022               	movlb	2	; select bank2
 24173  1B7C  0857               	movf	(_second_bottom+1)^(0+256),w
 24174  1B7D  0020               	movlb	0	; select bank0
 24175  1B7E  00A8               	movwf	i1LEDsOn@LEDpins+1
 24176  1B7F  0022               	movlb	2	; select bank2
 24177  1B80  0856               	movf	_second_bottom^(0+256),w
 24178  1B81  0020               	movlb	0	; select bank0
 24179  1B82  00A7               	movwf	i1LEDsOn@LEDpins
 24180  1B83  3002               	movlw	2
 24181  1B84  00AB               	movwf	i1LEDsOn@topOrBottom
 24182  1B85  3000               	movlw	0
 24183  1B86  00AC               	movwf	i1LEDsOn@topOrBottom+1
 24184  1B87  3198  205F  319B   	fcall	i1_LEDsOn
 24185                           
 24186                           ;tmr0.c: 145: do { LATCbits.LATC1 = 0; } while(0);
 24187  1B8A  0022               	movlb	2	; select bank2
 24188  1B8B  108E               	bcf	14,1	;volatile
 24189                           
 24190                           ;tmr0.c: 146: TMR0_StopTimer();
 24191  1B8C  31A4  246E  319B   	fcall	_TMR0_StopTimer
 24192                           
 24193                           ;tmr0.c: 147: TMR0_Write8bitTimer(0);
 24194  1B8F  3000               	movlw	0
 24195  1B90  31A4  24D3         	fcall	_TMR0_Write8bitTimer
 24196  1B92  0008               	return
 24197  1B93                     __end_of_TMR0_DefaultInterruptHandler:	
 24198                           
 24199                           	psect	text150
 24200  185F                     __ptext150:	
 24201 ;; *************** function i1_LEDsOn *****************
 24202 ;; Defined at:
 24203 ;;		line 6 in file "LEDcomm.c"
 24204 ;; Parameters:    Size  Location     Type
 24205 ;;  LEDpins         4    7[BANK0 ] unsigned long 
 24206 ;;  topOrBottom     2   11[BANK0 ] int 
 24207 ;; Auto vars:     Size  Location     Type
 24208 ;;		None
 24209 ;; Return value:  Size  Location     Type
 24210 ;;                  1    wreg      void 
 24211 ;; Registers used:
 24212 ;;		wreg, status,2, status,0, pclath, cstack
 24213 ;; Tracked objects:
 24214 ;;		On entry : 0/0
 24215 ;;		On exit  : 0/0
 24216 ;;		Unchanged: 0/0
 24217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24218 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24220 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24221 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24222 ;;Total ram usage:       10 bytes
 24223 ;; Hardware stack levels used:    1
 24224 ;; Hardware stack levels required when called:    2
 24225 ;; This function calls:
 24226 ;;		i1_send_2length_2bytes_IK
 24227 ;; This function is called by:
 24228 ;;		_TMR0_DefaultInterruptHandler
 24229 ;; This function uses a non-reentrant model
 24230 ;;
 24231                           
 24232                           
 24233                           ;psect for function i1_LEDsOn
 24234  185F                     i1_LEDsOn:	
 24235                           
 24236                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 24237                           
 24238                           ;incstack = 0
 24239 ;; hardware stack exceeded
 24240                           ; Regs used in i1_LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 24241  185F  0020               	movlb	0	; select bank0
 24242  1860  0827               	movf	i1LEDsOn@LEDpins,w
 24243  1861  00AD               	movwf	??i1_LEDsOn
 24244  1862  0828               	movf	i1LEDsOn@LEDpins+1,w
 24245  1863  00AE               	movwf	??i1_LEDsOn+1
 24246  1864  0829               	movf	i1LEDsOn@LEDpins+2,w
 24247  1865  00AF               	movwf	??i1_LEDsOn+2
 24248  1866  082A               	movf	i1LEDsOn@LEDpins+3,w
 24249  1867  00B0               	movwf	??i1_LEDsOn+3
 24250  1868  3010               	movlw	16
 24251  1869                     u502_25:	
 24252  1869  36B0               	lsrf	??i1_LEDsOn+3,f
 24253  186A  0CAF               	rrf	??i1_LEDsOn+2,f
 24254  186B  0CAE               	rrf	??i1_LEDsOn+1,f
 24255  186C  0CAD               	rrf	??i1_LEDsOn,f
 24256  186D  0B89               	decfsz	9,f
 24257  186E  2869               	goto	u502_25
 24258  186F  082E               	movf	??i1_LEDsOn+1,w
 24259  1870  00A1               	movwf	i1send_2length_2bytes_IK@data1+1
 24260  1871  082D               	movf	??i1_LEDsOn,w
 24261  1872  00A0               	movwf	i1send_2length_2bytes_IK@data1
 24262  1873  0828               	movf	i1LEDsOn@LEDpins+1,w
 24263  1874  00A3               	movwf	i1send_2length_2bytes_IK@data2+1
 24264  1875  0827               	movf	i1LEDsOn@LEDpins,w
 24265  1876  00A2               	movwf	i1send_2length_2bytes_IK@data2
 24266  1877  01A4               	clrf	i1send_2length_2bytes_IK@latch_start
 24267  1878  0AA4               	incf	i1send_2length_2bytes_IK@latch_start,f
 24268  1879  082C               	movf	i1LEDsOn@topOrBottom+1,w
 24269  187A  00A6               	movwf	i1send_2length_2bytes_IK@topOrBottom+1
 24270  187B  082B               	movf	i1LEDsOn@topOrBottom,w
 24271  187C  00A5               	movwf	i1send_2length_2bytes_IK@topOrBottom
 24272  187D  31A6  26CA         	fcall	i1_send_2length_2bytes_IK
 24273  187F  0008               	return
 24274  1880                     __end_ofi1_LEDsOn:	
 24275                           
 24276                           	psect	text151
 24277  26CA                     __ptext151:	
 24278 ;; *************** function i1_send_2length_2bytes_IK *****************
 24279 ;; Defined at:
 24280 ;;		line 70 in file "LEDcomm.c"
 24281 ;; Parameters:    Size  Location     Type
 24282 ;;  data1           2    0[BANK0 ] unsigned int 
 24283 ;;  data2           2    2[BANK0 ] unsigned int 
 24284 ;;  latch_start     1    4[BANK0 ] unsigned char 
 24285 ;;  topOrBottom     2    5[BANK0 ] int 
 24286 ;; Auto vars:     Size  Location     Type
 24287 ;;		None
 24288 ;; Return value:  Size  Location     Type
 24289 ;;                  1    wreg      void 
 24290 ;; Registers used:
 24291 ;;		wreg, status,2, status,0, pclath, cstack
 24292 ;; Tracked objects:
 24293 ;;		On entry : 0/0
 24294 ;;		On exit  : 0/0
 24295 ;;		Unchanged: 0/0
 24296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24297 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24300 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24301 ;;Total ram usage:        8 bytes
 24302 ;; Hardware stack levels used:    1
 24303 ;; Hardware stack levels required when called:    1
 24304 ;; This function calls:
 24305 ;;		i1_send_2bytes_latchless_IK
 24306 ;;		i1_send_last_2bytes_IK
 24307 ;; This function is called by:
 24308 ;;		i1_LEDsOn
 24309 ;; This function uses a non-reentrant model
 24310 ;;
 24311                           
 24312                           
 24313                           ;psect for function i1_send_2length_2bytes_IK
 24314  26CA                     i1_send_2length_2bytes_IK:	
 24315                           
 24316                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 24317                           
 24318                           ;incstack = 0
 24319 ;; hardware stack exceeded
 24320                           ; Regs used in i1_send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 24321  26CA  0020               	movlb	0	; select bank0
 24322  26CB  0821               	movf	i1send_2length_2bytes_IK@data1+1,w
 24323  26CC  00F1               	movwf	i1send_2bytes_latchless_IK@data+1
 24324  26CD  0820               	movf	i1send_2length_2bytes_IK@data1,w
 24325  26CE  00F0               	movwf	i1send_2bytes_latchless_IK@data
 24326  26CF  3199  21C1  31A6   	fcall	i1_send_2bytes_latchless_IK
 24327                           
 24328                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 24329  26D2  0020               	movlb	0	; select bank0
 24330  26D3  0823               	movf	i1send_2length_2bytes_IK@data2+1,w
 24331  26D4  00F1               	movwf	i1send_last_2bytes_IK@data+1
 24332  26D5  0822               	movf	i1send_2length_2bytes_IK@data2,w
 24333  26D6  00F0               	movwf	i1send_last_2bytes_IK@data
 24334  26D7  0824               	movf	i1send_2length_2bytes_IK@latch_start,w
 24335  26D8  00FB               	movwf	??i1_send_2length_2bytes_IK
 24336  26D9  087B               	movf	??i1_send_2length_2bytes_IK,w
 24337  26DA  00F2               	movwf	i1send_last_2bytes_IK@latch_start
 24338  26DB  0826               	movf	i1send_2length_2bytes_IK@topOrBottom+1,w
 24339  26DC  00F4               	movwf	i1send_last_2bytes_IK@topOrBottom+1
 24340  26DD  0825               	movf	i1send_2length_2bytes_IK@topOrBottom,w
 24341  26DE  00F3               	movwf	i1send_last_2bytes_IK@topOrBottom
 24342  26DF  319C  24E3         	fcall	i1_send_last_2bytes_IK
 24343  26E1  0008               	return
 24344  26E2                     __end_ofi1_send_2length_2bytes_IK:	
 24345                           
 24346                           	psect	text152
 24347  1CE3                     __ptext152:	
 24348 ;; *************** function i1_send_last_2bytes_IK *****************
 24349 ;; Defined at:
 24350 ;;		line 19 in file "LEDcomm.c"
 24351 ;; Parameters:    Size  Location     Type
 24352 ;;  data            2    0[COMMON] unsigned int 
 24353 ;;  latch_start     1    2[COMMON] unsigned char 
 24354 ;;  topOrBottom     2    3[COMMON] int 
 24355 ;; Auto vars:     Size  Location     Type
 24356 ;;  send_last_2b    2    9[COMMON] int 
 24357 ;; Return value:  Size  Location     Type
 24358 ;;                  1    wreg      void 
 24359 ;; Registers used:
 24360 ;;		wreg, status,2, status,0
 24361 ;; Tracked objects:
 24362 ;;		On entry : 0/0
 24363 ;;		On exit  : 0/0
 24364 ;;		Unchanged: 0/0
 24365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24366 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24368 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24369 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24370 ;;Total ram usage:       11 bytes
 24371 ;; Hardware stack levels used:    1
 24372 ;; This function calls:
 24373 ;;		Nothing
 24374 ;; This function is called by:
 24375 ;;		i1_send_2length_2bytes_IK
 24376 ;; This function uses a non-reentrant model
 24377 ;;
 24378                           
 24379                           
 24380                           ;psect for function i1_send_last_2bytes_IK
 24381  1CE3                     i1_send_last_2bytes_IK:	
 24382                           
 24383                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 24384                           
 24385                           ;incstack = 0
 24386 ;; hardware stack exceeded
 24387                           ; Regs used in i1_send_last_2bytes_IK: [wreg+status,2+status,0]
 24388  1CE3  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 24389  1CE4  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 24390  1CE5  1D03               	btfss	3,2
 24391  1CE6  2CEA               	goto	i1l198
 24392  1CE7  0022               	movlb	2	; select bank2
 24393  1CE8  120D               	bcf	13,4	;volatile
 24394  1CE9  2CEC               	goto	i1l5028
 24395  1CEA                     i1l198:	
 24396  1CEA  0022               	movlb	2	; select bank2
 24397  1CEB  100E               	bcf	14,0	;volatile
 24398  1CEC                     i1l5028:	
 24399                           
 24400                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 24401  1CEC  300F               	movlw	15
 24402  1CED  00F9               	movwf	i1send_last_2bytes_IK@j
 24403  1CEE  3000               	movlw	0
 24404  1CEF  00FA               	movwf	i1send_last_2bytes_IK@j+1
 24405  1CF0  1BFA               	btfsc	i1send_last_2bytes_IK@j+1,7
 24406  1CF1  2D23               	goto	i1l219
 24407  1CF2                     i1l202:	
 24408                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 24409                           
 24410  1CF2  110C               	bcf	12,2	;volatile
 24411                           
 24412                           ;LEDcomm.c: 28: if (data & 1 << j){
 24413  1CF3  3001               	movlw	1
 24414  1CF4  00F5               	movwf	??i1_send_last_2bytes_IK
 24415  1CF5  3000               	movlw	0
 24416  1CF6  00F6               	movwf	??i1_send_last_2bytes_IK+1
 24417  1CF7  0A79               	incf	i1send_last_2bytes_IK@j,w
 24418  1CF8  2CFB               	goto	u384_24
 24419  1CF9                     u384_25:	
 24420  1CF9  35F5               	lslf	??i1_send_last_2bytes_IK,f
 24421  1CFA  0DF6               	rlf	??i1_send_last_2bytes_IK+1,f
 24422  1CFB                     u384_24:	
 24423  1CFB  0B89               	decfsz	9,f
 24424  1CFC  2CF9               	goto	u384_25
 24425  1CFD  0870               	movf	i1send_last_2bytes_IK@data,w
 24426  1CFE  0575               	andwf	??i1_send_last_2bytes_IK,w
 24427  1CFF  00F7               	movwf	??i1_send_last_2bytes_IK+2
 24428  1D00  0871               	movf	i1send_last_2bytes_IK@data+1,w
 24429  1D01  0576               	andwf	??i1_send_last_2bytes_IK+1,w
 24430  1D02  00F8               	movwf	??i1_send_last_2bytes_IK+3
 24431  1D03  0877               	movf	??i1_send_last_2bytes_IK+2,w
 24432  1D04  0478               	iorwf	??i1_send_last_2bytes_IK+3,w
 24433  1D05  1903               	btfsc	3,2
 24434  1D06  2D09               	goto	i1l208
 24435                           
 24436                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 24437  1D07  150E               	bsf	14,2	;volatile
 24438                           
 24439                           ;LEDcomm.c: 30: }
 24440  1D08  2D0A               	goto	i1l5036
 24441  1D09                     i1l208:	
 24442                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 24443                           
 24444  1D09  110E               	bcf	14,2	;volatile
 24445  1D0A                     i1l5036:	
 24446                           
 24447                           ;LEDcomm.c: 33: if( j == latch_start) {
 24448  1D0A  0872               	movf	i1send_last_2bytes_IK@latch_start,w
 24449  1D0B  00F5               	movwf	??i1_send_last_2bytes_IK
 24450  1D0C  01F6               	clrf	??i1_send_last_2bytes_IK+1
 24451  1D0D  087A               	movf	i1send_last_2bytes_IK@j+1,w
 24452  1D0E  0676               	xorwf	??i1_send_last_2bytes_IK+1,w
 24453  1D0F  1D03               	skipz
 24454  1D10  2D13               	goto	u386_25
 24455  1D11  0879               	movf	i1send_last_2bytes_IK@j,w
 24456  1D12  0675               	xorwf	??i1_send_last_2bytes_IK,w
 24457  1D13                     u386_25:	
 24458  1D13  1D03               	skipz
 24459  1D14  2D1C               	goto	i1l217
 24460                           
 24461                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 24462  1D15  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 24463  1D16  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 24464  1D17  1D03               	btfss	3,2
 24465  1D18  2D1B               	goto	i1l215
 24466  1D19  160D               	bsf	13,4	;volatile
 24467  1D1A  2D1C               	goto	i1l217
 24468  1D1B                     i1l215:	
 24469  1D1B  140E               	bsf	14,0	;volatile
 24470  1D1C                     i1l217:	
 24471                           ;LEDcomm.c: 37: }
 24472                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 24473                           
 24474  1D1C  150C               	bsf	12,2	;volatile
 24475  1D1D  30FF               	movlw	255
 24476  1D1E  07F9               	addwf	i1send_last_2bytes_IK@j,f
 24477  1D1F  30FF               	movlw	255
 24478  1D20  3DFA               	addwfc	i1send_last_2bytes_IK@j+1,f
 24479  1D21  1FFA               	btfss	i1send_last_2bytes_IK@j+1,7
 24480  1D22  2CF2               	goto	i1l202
 24481  1D23                     i1l219:	
 24482                           ;LEDcomm.c: 41: }
 24483                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 24484                           
 24485  1D23  110C               	bcf	12,2	;volatile
 24486                           
 24487                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 24488  1D24  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 24489  1D25  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 24490  1D26  1D03               	btfss	3,2
 24491  1D27  2D2A               	goto	i1l225
 24492  1D28  120D               	bcf	13,4	;volatile
 24493  1D29  0008               	return
 24494  1D2A                     i1l225:	
 24495  1D2A  100E               	bcf	14,0	;volatile
 24496  1D2B  0008               	return
 24497  1D2C                     __end_ofi1_send_last_2bytes_IK:	
 24498                           
 24499                           	psect	text153
 24500  19C1                     __ptext153:	
 24501 ;; *************** function i1_send_2bytes_latchless_IK *****************
 24502 ;; Defined at:
 24503 ;;		line 49 in file "LEDcomm.c"
 24504 ;; Parameters:    Size  Location     Type
 24505 ;;  data            2    0[COMMON] unsigned int 
 24506 ;; Auto vars:     Size  Location     Type
 24507 ;;  send_2bytes_    2    6[COMMON] int 
 24508 ;; Return value:  Size  Location     Type
 24509 ;;                  1    wreg      void 
 24510 ;; Registers used:
 24511 ;;		wreg, status,2, status,0
 24512 ;; Tracked objects:
 24513 ;;		On entry : 0/0
 24514 ;;		On exit  : 0/0
 24515 ;;		Unchanged: 0/0
 24516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24519 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24520 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24521 ;;Total ram usage:        8 bytes
 24522 ;; Hardware stack levels used:    1
 24523 ;; This function calls:
 24524 ;;		Nothing
 24525 ;; This function is called by:
 24526 ;;		i1_send_2length_2bytes_IK
 24527 ;; This function uses a non-reentrant model
 24528 ;;
 24529                           
 24530                           
 24531                           ;psect for function i1_send_2bytes_latchless_IK
 24532  19C1                     i1_send_2bytes_latchless_IK:	
 24533                           
 24534                           ;incstack = 0
 24535 ;; hardware stack exceeded
 24536                           ; Regs used in i1_send_2bytes_latchless_IK: [wreg+status,2+status,0]
 24537                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 24538  19C1  0022               	movlb	2	; select bank2
 24539  19C2  120D               	bcf	13,4	;volatile
 24540                           
 24541                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 24542  19C3  300F               	movlw	15
 24543  19C4  00F6               	movwf	i1send_2bytes_latchless_IK@j
 24544  19C5  3000               	movlw	0
 24545  19C6  00F7               	movwf	i1send_2bytes_latchless_IK@j+1
 24546  19C7  1BF7               	btfsc	i1send_2bytes_latchless_IK@j+1,7
 24547  19C8  29E8               	goto	i1l244
 24548  19C9                     i1l234:	
 24549                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 24550                           
 24551  19C9  110C               	bcf	12,2	;volatile
 24552                           
 24553                           ;LEDcomm.c: 56: if (data & 1 << j){
 24554  19CA  3001               	movlw	1
 24555  19CB  00F2               	movwf	??i1_send_2bytes_latchless_IK
 24556  19CC  3000               	movlw	0
 24557  19CD  00F3               	movwf	??i1_send_2bytes_latchless_IK+1
 24558  19CE  0A76               	incf	i1send_2bytes_latchless_IK@j,w
 24559  19CF  29D2               	goto	u391_24
 24560  19D0                     u391_25:	
 24561  19D0  35F2               	lslf	??i1_send_2bytes_latchless_IK,f
 24562  19D1  0DF3               	rlf	??i1_send_2bytes_latchless_IK+1,f
 24563  19D2                     u391_24:	
 24564  19D2  0B89               	decfsz	9,f
 24565  19D3  29D0               	goto	u391_25
 24566  19D4  0870               	movf	i1send_2bytes_latchless_IK@data,w
 24567  19D5  0572               	andwf	??i1_send_2bytes_latchless_IK,w
 24568  19D6  00F4               	movwf	??i1_send_2bytes_latchless_IK+2
 24569  19D7  0871               	movf	i1send_2bytes_latchless_IK@data+1,w
 24570  19D8  0573               	andwf	??i1_send_2bytes_latchless_IK+1,w
 24571  19D9  00F5               	movwf	??i1_send_2bytes_latchless_IK+3
 24572  19DA  0874               	movf	??i1_send_2bytes_latchless_IK+2,w
 24573  19DB  0475               	iorwf	??i1_send_2bytes_latchless_IK+3,w
 24574  19DC  1903               	btfsc	3,2
 24575  19DD  29E0               	goto	i1l240
 24576                           
 24577                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 24578  19DE  150E               	bsf	14,2	;volatile
 24579                           
 24580                           ;LEDcomm.c: 58: }
 24581  19DF  29E1               	goto	i1l242
 24582  19E0                     i1l240:	
 24583                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 24584                           
 24585  19E0  110E               	bcf	14,2	;volatile
 24586  19E1                     i1l242:	
 24587                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 24588                           
 24589  19E1  150C               	bsf	12,2	;volatile
 24590  19E2  30FF               	movlw	255
 24591  19E3  07F6               	addwf	i1send_2bytes_latchless_IK@j,f
 24592  19E4  30FF               	movlw	255
 24593  19E5  3DF7               	addwfc	i1send_2bytes_latchless_IK@j+1,f
 24594  19E6  1FF7               	btfss	i1send_2bytes_latchless_IK@j+1,7
 24595  19E7  29C9               	goto	i1l234
 24596  19E8                     i1l244:	
 24597                           ;LEDcomm.c: 64: }
 24598                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 24599                           
 24600  19E8  110C               	bcf	12,2	;volatile
 24601  19E9  0008               	return
 24602  19EA                     __end_ofi1_send_2bytes_latchless_IK:	
 24603                           
 24604                           	psect	text154
 24605  24D3                     __ptext154:	
 24606 ;; *************** function _TMR0_Write8bitTimer *****************
 24607 ;; Defined at:
 24608 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 24609 ;; Parameters:    Size  Location     Type
 24610 ;;  timerVal        1    wreg     unsigned char 
 24611 ;; Auto vars:     Size  Location     Type
 24612 ;;  timerVal        1    0[COMMON] unsigned char 
 24613 ;; Return value:  Size  Location     Type
 24614 ;;                  1    wreg      void 
 24615 ;; Registers used:
 24616 ;;		wreg
 24617 ;; Tracked objects:
 24618 ;;		On entry : 0/0
 24619 ;;		On exit  : 0/0
 24620 ;;		Unchanged: 0/0
 24621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24626 ;;Total ram usage:        1 bytes
 24627 ;; Hardware stack levels used:    1
 24628 ;; This function calls:
 24629 ;;		Nothing
 24630 ;; This function is called by:
 24631 ;;		_TMR0_DefaultInterruptHandler
 24632 ;; This function uses a non-reentrant model
 24633 ;;
 24634                           
 24635                           
 24636                           ;psect for function _TMR0_Write8bitTimer
 24637  24D3                     _TMR0_Write8bitTimer:	
 24638                           
 24639                           ;incstack = 0
 24640                           ; Regs used in _TMR0_Write8bitTimer: [wreg]
 24641                           ;TMR0_Write8bitTimer@timerVal stored from wreg
 24642  24D3  00F0               	movwf	TMR0_Write8bitTimer@timerVal
 24643                           
 24644                           ;tmr0.c: 111: TMR0L = timerVal;
 24645  24D4  0870               	movf	TMR0_Write8bitTimer@timerVal,w
 24646  24D5  0020               	movlb	0	; select bank0
 24647  24D6  0095               	movwf	21	;volatile
 24648  24D7  0008               	return
 24649  24D8                     __end_of_TMR0_Write8bitTimer:	
 24650                           
 24651                           	psect	text155
 24652  246E                     __ptext155:	
 24653 ;; *************** function _TMR0_StopTimer *****************
 24654 ;; Defined at:
 24655 ;;		line 92 in file "mcc_generated_files/tmr0.c"
 24656 ;; Parameters:    Size  Location     Type
 24657 ;;		None
 24658 ;; Auto vars:     Size  Location     Type
 24659 ;;		None
 24660 ;; Return value:  Size  Location     Type
 24661 ;;                  1    wreg      void 
 24662 ;; Registers used:
 24663 ;;		None
 24664 ;; Tracked objects:
 24665 ;;		On entry : 0/0
 24666 ;;		On exit  : 0/0
 24667 ;;		Unchanged: 0/0
 24668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24673 ;;Total ram usage:        0 bytes
 24674 ;; Hardware stack levels used:    1
 24675 ;; This function calls:
 24676 ;;		Nothing
 24677 ;; This function is called by:
 24678 ;;		_TMR0_DefaultInterruptHandler
 24679 ;; This function uses a non-reentrant model
 24680 ;;
 24681                           
 24682                           
 24683                           ;psect for function _TMR0_StopTimer
 24684  246E                     _TMR0_StopTimer:	
 24685                           
 24686                           ;tmr0.c: 95: T0CON0bits.T0EN = 0;
 24687                           
 24688                           ;incstack = 0
 24689                           ; Regs used in _TMR0_StopTimer: []
 24690  246E  0020               	movlb	0	; select bank0
 24691  246F  1397               	bcf	23,7	;volatile
 24692  2470  0008               	return
 24693  2471                     __end_of_TMR0_StopTimer:	
 24694                           
 24695                           	psect	text156
 24696  2766                     __ptext156:	
 24697 ;; *************** function _EUSART_Transmit_ISR *****************
 24698 ;; Defined at:
 24699 ;;		line 161 in file "mcc_generated_files/eusart.c"
 24700 ;; Parameters:    Size  Location     Type
 24701 ;;		None
 24702 ;; Auto vars:     Size  Location     Type
 24703 ;;		None
 24704 ;; Return value:  Size  Location     Type
 24705 ;;                  1    wreg      void 
 24706 ;; Registers used:
 24707 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24708 ;; Tracked objects:
 24709 ;;		On entry : 0/0
 24710 ;;		On exit  : 0/0
 24711 ;;		Unchanged: 0/0
 24712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24717 ;;Total ram usage:        1 bytes
 24718 ;; Hardware stack levels used:    1
 24719 ;; This function calls:
 24720 ;;		Nothing
 24721 ;; This function is called by:
 24722 ;;		_INTERRUPT_InterruptManager
 24723 ;; This function uses a non-reentrant model
 24724 ;;
 24725                           
 24726                           
 24727                           ;psect for function _EUSART_Transmit_ISR
 24728  2766                     _EUSART_Transmit_ISR:	
 24729                           
 24730                           ;eusart.c: 165: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 24731                           
 24732                           ;incstack = 0
 24733                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 24734  2766  3008               	movlw	8
 24735  2767  0020               	movlb	0	; select bank0
 24736  2768  025E               	subwf	_eusartTxBufferRemaining,w	;volatile
 24737  2769  1803               	skipnc
 24738  276A  2F81               	goto	i1l403
 24739                           
 24740                           ;eusart.c: 166: {
 24741                           ;eusart.c: 167: TX1REG = eusartTxBuffer[eusartTxTail++];
 24742  276B  0857               	movf	_eusartTxTail,w
 24743  276C  3E3E               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 24744  276D  0086               	movwf	6
 24745  276E  3001               	movlw	1	; select bank2/3
 24746  276F  0087               	movwf	7
 24747  2770  0801               	movf	1,w
 24748  2771  0023               	movlb	3	; select bank3
 24749  2772  009A               	movwf	26	;volatile
 24750  2773  3001               	movlw	1
 24751  2774  00F0               	movwf	??_EUSART_Transmit_ISR
 24752  2775  0870               	movf	??_EUSART_Transmit_ISR,w
 24753  2776  0020               	movlb	0	; select bank0
 24754  2777  07D7               	addwf	_eusartTxTail,f	;volatile
 24755                           
 24756                           ;eusart.c: 168: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 24757  2778  3008               	movlw	8
 24758  2779  0257               	subwf	_eusartTxTail,w	;volatile
 24759  277A  1803               	btfsc	3,0
 24760                           
 24761                           ;eusart.c: 169: {
 24762                           ;eusart.c: 170: eusartTxTail = 0;
 24763  277B  01D7               	clrf	_eusartTxTail	;volatile
 24764                           
 24765                           ;eusart.c: 171: }
 24766                           ;eusart.c: 172: eusartTxBufferRemaining++;
 24767  277C  3001               	movlw	1
 24768  277D  00F0               	movwf	??_EUSART_Transmit_ISR
 24769  277E  0870               	movf	??_EUSART_Transmit_ISR,w
 24770  277F  07DE               	addwf	_eusartTxBufferRemaining,f	;volatile
 24771                           
 24772                           ;eusart.c: 173: }
 24773  2780  0008               	return
 24774  2781                     i1l403:	
 24775                           
 24776                           ;eusart.c: 174: else
 24777                           ;eusart.c: 175: {
 24778                           ;eusart.c: 176: PIE1bits.TXIE = 0;
 24779  2781  0021               	movlb	1	; select bank1
 24780  2782  1211               	bcf	17,4	;volatile
 24781  2783  0008               	return
 24782  2784                     __end_of_EUSART_Transmit_ISR:	
 24783                           
 24784                           	psect	text157
 24785  272E                     __ptext157:	
 24786 ;; *************** function _EUSART_Receive_ISR *****************
 24787 ;; Defined at:
 24788 ;;		line 180 in file "mcc_generated_files/eusart.c"
 24789 ;; Parameters:    Size  Location     Type
 24790 ;;		None
 24791 ;; Auto vars:     Size  Location     Type
 24792 ;;		None
 24793 ;; Return value:  Size  Location     Type
 24794 ;;                  1    wreg      void 
 24795 ;; Registers used:
 24796 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24797 ;; Tracked objects:
 24798 ;;		On entry : 0/0
 24799 ;;		On exit  : 0/0
 24800 ;;		Unchanged: 0/0
 24801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24804 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24806 ;;Total ram usage:        1 bytes
 24807 ;; Hardware stack levels used:    1
 24808 ;; This function calls:
 24809 ;;		Nothing
 24810 ;; This function is called by:
 24811 ;;		_INTERRUPT_InterruptManager
 24812 ;; This function uses a non-reentrant model
 24813 ;;
 24814                           
 24815                           
 24816                           ;psect for function _EUSART_Receive_ISR
 24817  272E                     _EUSART_Receive_ISR:	
 24818                           
 24819                           ;eusart.c: 183: if(1 == RC1STAbits.OERR)
 24820                           
 24821                           ;incstack = 0
 24822                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 24823  272E  0023               	movlb	3	; select bank3
 24824  272F  1C9D               	btfss	29,1	;volatile
 24825  2730  2F33               	goto	i1l6196
 24826                           
 24827                           ;eusart.c: 184: {
 24828                           ;eusart.c: 187: RC1STAbits.CREN = 0;
 24829  2731  121D               	bcf	29,4	;volatile
 24830                           
 24831                           ;eusart.c: 188: RC1STAbits.CREN = 1;
 24832  2732  161D               	bsf	29,4	;volatile
 24833  2733                     i1l6196:	
 24834                           
 24835                           ;eusart.c: 189: }
 24836                           ;eusart.c: 192: eusartRxBuffer[eusartRxHead++] = RC1REG;
 24837  2733  0819               	movf	25,w	;volatile
 24838  2734  00F0               	movwf	??_EUSART_Receive_ISR
 24839  2735  0020               	movlb	0	; select bank0
 24840  2736  0856               	movf	_eusartRxHead,w
 24841  2737  3ED0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 24842  2738  0086               	movwf	6
 24843  2739  3001               	movlw	1	; select bank3/4
 24844  273A  0087               	movwf	7
 24845  273B  0870               	movf	??_EUSART_Receive_ISR,w
 24846  273C  0081               	movwf	1
 24847  273D  3001               	movlw	1
 24848  273E  00F0               	movwf	??_EUSART_Receive_ISR
 24849  273F  0870               	movf	??_EUSART_Receive_ISR,w
 24850  2740  07D6               	addwf	_eusartRxHead,f	;volatile
 24851                           
 24852                           ;eusart.c: 193: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 24853  2741  3008               	movlw	8
 24854  2742  0256               	subwf	_eusartRxHead,w	;volatile
 24855  2743  1803               	btfsc	3,0
 24856                           
 24857                           ;eusart.c: 194: {
 24858                           ;eusart.c: 195: eusartRxHead = 0;
 24859  2744  01D6               	clrf	_eusartRxHead	;volatile
 24860                           
 24861                           ;eusart.c: 196: }
 24862                           ;eusart.c: 197: eusartRxCount++;
 24863  2745  3001               	movlw	1
 24864  2746  00F0               	movwf	??_EUSART_Receive_ISR
 24865  2747  0870               	movf	??_EUSART_Receive_ISR,w
 24866  2748  07D4               	addwf	_eusartRxCount,f	;volatile
 24867  2749  0008               	return
 24868  274A                     __end_of_EUSART_Receive_ISR:	
 24869  007E                     btemp	set	126	;btemp
 24870  007E                     int$flags	set	126
 24871  007E                     wtemp0	set	126


Data Sizes:
    Strings     528
    Constant    1047
    Data        44
    BSS         206
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     46      63
    BANK1            80     52      80
    BANK2            80      0      80
    BANK3            80      3      79
    BANK4            80     24      77
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    i2c_ISR$2701	PTR const FTN()enum E8364 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    returnStop@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S911$11$0	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_56(CODE[2]), STR_55(CODE[2]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_56(CODE[2]), STR_55(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_56(CODE[2]), STR_55(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_56(CODE[2]), STR_55(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_56(CODE[2]), STR_55(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_76(CODE[5]), STR_75(CODE[5]), STR_74(CODE[8]), STR_73(CODE[5]), 
		 -> STR_72(CODE[5]), STR_71(CODE[13]), STR_70(CODE[7]), STR_69(CODE[8]), 
		 -> STR_68(CODE[15]), STR_67(CODE[14]), STR_66(CODE[12]), STR_65(CODE[8]), 
		 -> STR_64(CODE[8]), STR_63(CODE[2]), STR_62(CODE[5]), STR_61(CODE[5]), 
		 -> STR_60(CODE[2]), STR_59(CODE[4]), STR_58(CODE[4]), STR_57(CODE[4]), 

    stricmp@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_78(CODE[23]), STR_77(CODE[3]), STR_54(CODE[17]), STR_53(CODE[17]), 
		 -> STR_52(CODE[18]), STR_51(CODE[18]), STR_50(CODE[14]), STR_49(CODE[28]), 
		 -> STR_48(CODE[9]), STR_47(CODE[9]), STR_46(CODE[25]), STR_45(CODE[11]), 
		 -> STR_44(CODE[8]), STR_43(CODE[8]), STR_42(CODE[8]), STR_41(CODE[31]), 
		 -> STR_40(CODE[11]), STR_39(CODE[8]), STR_38(CODE[8]), STR_37(CODE[8]), 
		 -> STR_36(CODE[26]), STR_35(CODE[30]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[4]), STR_29(CODE[2]), 
		 -> STR_28(CODE[4]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), 
		 -> STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[3]), 
		 -> STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[4]), STR_13(CODE[3]), 
		 -> STR_12(CODE[16]), STR_11(CODE[11]), STR_10(CODE[16]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[8]), STR_5(CODE[13]), 
		 -> STR_4(CODE[15]), STR_3(CODE[16]), STR_2(CODE[2]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    execCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK4[21]), 

    parseCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK4[21]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    parseCmd@cmdString	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), 

    parseCmd@p	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E8364[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    S911$callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S911$callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S911$data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_i2c_ISR->i1_do_I2C_TX
    i1_do_I2C_TX->i1_i2c1_driver_TXData
    i1_do_I2C_TX->i1_i2c1_driver_isNACK
    i1_do_I2C_TX->i1_returnReset
    i1_do_I2C_TX->i1_returnStop
    i1_do_I2C_SEND_ADR_WRITE->i1_i2c1_driver_TXData
    i1_do_I2C_SEND_ADR_READ->i1_i2c1_driver_TXData
    _TMR2_DefaultInterruptHandler->_TMR2_WriteTimer
    i1_LEDsOn->i1_send_2length_2bytes_IK
    i1_send_2length_2bytes_IK->i1_send_last_2bytes_IK

Critical Paths under _main in BANK0

    _parseCmd->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _stricmp->_toupper
    _atoi->___wmul
    _initialize->_LEDsPwr
    _setLEDPwr->_LEDsPwr
    _LEDsPwr->_send_2length_2bytes_IK
    _setLEDBrightnessRange->_LED_setBrightnessRange
    _setHeaterToggle->_LEDsOn
    _setHeaterPreTime->___ftadd
    _setHeaterPostTime->___ftadd
    _setDrvPiezoOnTime->___ftadd
    ___ftadd->___ftmul
    _setDrvGain->_drv_write
    _commCheck->_LED_testComm
    _LED_test_openshort->_LEDsOn
    _LED_testComm->_LED_setBrightnessRange
    _LED_setBrightnessRange->_send_2length_2bytes_IK
    _doMove->_LEDsOn
    _drv_write_DC->_drv_write
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _printf->___llmod
    _putch->_EUSART_Write
    ___llmod->___lldiv
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _LEDsOn->_send_2length_2bytes_IK
    _send_2length_2bytes_IK->_send_last_2bytes_IK
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_DefaultInterruptHandler->i1_LEDsOn
    i1_LEDsOn->i1_send_2length_2bytes_IK

Critical Paths under _main in BANK1

    _initialize->___fttol
    _execCmd->_commCheck
    _zeroPosition->_printf
    _startRelMove->_printf
    _startAbsMove->_printf
    _setMoveMask->_printf
    _setLEDPwr->_printf
    _setLEDBrightnessRange->_printf
    _setHeaterToggle->_printf
    _setHeaterPreTime->___fttol
    _setHeaterPostTime->___fttol
    _setDrvPiezoOnTime->___fttol
    ___ftadd->___ftmul
    _setDrvPeak->_printf
    _setDrvGain->_printf
    _setActive->_printf
    _getPosition->_printf
    _getMoveMask->_printf
    _getMotionStatus->_printf
    _getActive->_printf
    _commCheck->_LED_testComm
    _LED_test_openshort->_printf
    _LED_testComm->_LED_readConfig
    _LED_readConfig->_LED_getData
    _LED_getData->_printf
    _doRelMove->_doMove
    _doAbsMove->_doMove
    _doMove->_drv_write_DC
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _drv_read->_printf
    _drv_write->_printf
    ___fttol->___ftadd

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_execCmd
    _execCmd->_commCheck

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_doAbsMove

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  343283
                                              2 BANK3      1     1      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                          _doAbsMove
                          _doRelMove
                            _execCmd
                         _initialize
                           _parseCmd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _parseCmd                                             6     5      1    6624
                                             37 BANK0      6     5      1
                               _atoi
                            _stricmp
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               6     4      2    1446
                                             31 BANK0      6     4      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               7     3      4     344
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _stricmp                                              6     4      2    2038
                                             19 BANK0      6     4      2
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    1920
                                             23 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1564
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     2      0   22993
                                             29 BANK1      2     2      0
                            _LEDsPwr
                _TMR0_Load8bitPeriod
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (1) _execCmd                                              1     1      0  210001
                                              1 BANK3      1     1      0
                          _commCheck
                          _getActive
                    _getMotionStatus
                        _getMoveMask
                        _getPosition
                             _printf
                          _setActive
                         _setDrvGain
                         _setDrvPeak
                  _setDrvPiezoOnTime
                  _setHeaterPostTime
                   _setHeaterPreTime
                    _setHeaterToggle
              _setLEDBrightnessRange
                          _setLEDPwr
                        _setMoveMask
                       _startAbsMove
                       _startRelMove
                       _zeroPosition
 ---------------------------------------------------------------------------------
 (2) _zeroPosition                                        14    12      2    6089
                                             41 BANK0      2     2      0
                                             21 BANK1     12    10      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startRelMove                                         2     0      2    6067
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startAbsMove                                         3     1      2    6067
                                             41 BANK0      1     1      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setMoveMask                                         10     6      4    6237
                                             21 BANK1     10     6      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setLEDPwr                                            4     0      4    9247
                                             21 BANK1      4     0      4
                            _LEDsPwr
                             _printf
 ---------------------------------------------------------------------------------
 (2) _LEDsPwr                                             14    10      4    3072
                                             36 BANK0     10     6      4
                                              0 BANK1      4     4      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (2) _setLEDBrightnessRange                                4     0      4    9343
                                             21 BANK1      4     0      4
             _LED_setBrightnessRange
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterToggle                                      8     4      4    9932
                                             21 BANK1      8     4      4
                             _LEDsOn
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPreTime                                     4     2      2   19998
                                             29 BANK1      4     2      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPostTime                                    2     0      2   19998
                                             29 BANK1      2     0      2
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TMR2_LoadPeriodRegister                              1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPiezoOnTime                                    4     2      2   19998
                                             29 BANK1      4     2      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4855
                                             41 BANK0      4     4      0
                                              6 BANK1      9     3      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _TMR0_Load8bitPeriod                                  1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPeak                                           2     0      2    6067
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setDrvGain                                           5     3      2   14929
                                             21 BANK1      5     3      2
                          _drv_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setActive                                           14    10      4    6237
                                             21 BANK1     14    10      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getPosition                                          3     1      2    6129
                                             41 BANK0      1     1      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMoveMask                                          8     6      2    6058
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMotionStatus                                      2     0      2    5959
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getActive                                            8     6      2    6058
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _commCheck                                            3     1      2   39007
                                             50 BANK1      2     0      2
                                              0 BANK3      1     1      0
                       _LED_testComm
                 _LED_test_openshort
                           _drv_read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _LED_test_openshort                                  11     7      4   12914
                                             21 BANK1     11     7      4
                             _LEDsOn
                             _printf
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _LED_testComm                                        10     8      2   12107
                                             44 BANK0      2     2      0
                                             42 BANK1      8     6      2
                     _LED_readConfig
             _LED_setBrightnessRange
 ---------------------------------------------------------------------------------
 (3) _LED_setBrightnessRange                              25    21      4    3168
                                             36 BANK0      8     4      4
                                              0 BANK1     17    17      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _LED_readConfig                                       5     1      4    8621
                                             41 BANK0      1     1      0
                                             38 BANK1      4     0      4
                        _LED_getData
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (5) _LED_getData                                         17    13      4    6126
                                             21 BANK1     17    13      4
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doRelMove                                            9     9      0   48594
                                             35 BANK1      9     9      0
                             _doMove
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doAbsMove                                           32    32      0   48916
                                             35 BANK1      8     8      0
                                              0 BANK4     24    24      0
                             _doMove
                             _printf
 ---------------------------------------------------------------------------------
 (2) _doMove                                               4     4      0   42375
                                             31 BANK1      4     4      0
                             _LEDsOn
                    _TMR0_StartTimer
                    _TMR2_StartTimer
                           ___awtoft
                            ___ftmul
                            ___fttol
                     _calcHeaterPins
                       _drv_write_DC
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drv_write_DC                                         7     3      4   23645
                                             24 BANK1      7     3      4
                            ___awdiv
                          _drv_write
                         _fifo_check
                             _printf
 ---------------------------------------------------------------------------------
 (4) _fifo_check                                           2     2      0    8061
                                             45 BANK0      1     1      0
                                             23 BANK1      1     1      0
                           _drv_read
 ---------------------------------------------------------------------------------
 (3) _drv_read                                             6     4      2    8027
                                             41 BANK0      4     4      0
                                             21 BANK1      2     0      2
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drv_write                                            5     4      1    8816
                                             41 BANK0      5     4      1
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              29    23      6    5959
                                              0 BANK1     21    15      6
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                             19 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                             31 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     395
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) _i2c_setBuffer                                        4     0      4     832
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _i2c_masterOperation                                  3     3      0    1104
                                             23 BANK0      3     3      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (5) _mssp1_IRQisEnabled                                   2     2      0       0
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _i2c_poller                                           0     0      0    1036
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (6) _mssp1_waitForEvent                                   1     1      0      42
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              1     1      0     994
                                             22 BANK0      1     1      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                       _mssp1_setIRQ
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            4     4      0     284
                                             18 BANK0      4     4      0
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            1     1      0     216
                                             17 BANK0      1     1      0
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1     216
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     556
                                             17 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _calcHeaterPins                                       4     4      0       0
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4    1044
                                             15 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    4848
                                             31 BANK0     10     4      6
                                              0 BANK1      6     6      0
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    3153
                                             25 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2404
                                             17 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LEDsOn                                              10     4      6    3726
                                             36 BANK0     10     4      6
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _send_2length_2bytes_IK                               8     1      7    2387
                                             28 BANK0      8     1      7
           _send_2bytes_latchless_IK
                _send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _send_last_2bytes_IK                                 11     6      5     516
                                             17 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (4) _send_2bytes_latchless_IK                             8     6      2     207
                                             17 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      86
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          1     1      0    1490
                                             12 COMMON     1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
                           _TMR2_ISR
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (13) i1_i2c_ISR                                           1     1      0     690
                                              5 COMMON     1     1      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
               i1_i2c1_driver_isNACK
                   i1_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (14) i1_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX_EMPTY                                   1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                     i1_mssp1_setIRQ
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX                                         4     4      0     208
                                              1 COMMON     4     4      0
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
               i1_i2c1_driver_TXData
               i1_i2c1_driver_isNACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_READ                              0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_TXData                                1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RX                                         1     1      0     140
                                              0 COMMON     1     1      0
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
            i1_i2c1_driver_getRXData
              i1_i2c1_driver_sendACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RESET                                      0     0      0       0
             i1_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RCEN                                       0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ADDRESS_NACK                            1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_returnStop                                        1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_returnReset                                       1     0      1     140
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_STOP                                  0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART                               0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ACK                                     0     0      0       0
              i1_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (14) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0      22
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultInterruptHandler                        0     0      0      22
                     _TMR2_StopTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR2_WriteTimer                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR2_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0     778
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultInterruptHandler                        0     0      0     778
                     _TMR0_StopTimer
                _TMR0_Write8bitTimer
                           i1_LEDsOn
 ---------------------------------------------------------------------------------
 (15) i1_LEDsOn                                           10     4      6     756
                                              7 BANK0     10     4      6
           i1_send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (16) i1_send_2length_2bytes_IK                            8     1      7     586
                                             11 COMMON     1     1      0
                                              0 BANK0      7     0      7
         i1_send_2bytes_latchless_IK
              i1_send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (17) i1_send_last_2bytes_IK                              11     6      5     278
                                              0 COMMON    11     6      5
 ---------------------------------------------------------------------------------
 (17) i1_send_2bytes_latchless_IK                          8     6      2     116
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (15) _TMR0_Write8bitTimer                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _doAbsMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _doRelMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _execCmd
     _commCheck
       _LED_testComm
         _LED_readConfig
           _LED_getData
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _LED_setBrightnessRange
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
       _LED_test_openshort
         _LEDsOn
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _drv_read
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMotionStatus
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
     _setActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvGain
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPeak
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPiezoOnTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPostTime
       _TMR2_LoadPeriodRegister
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPreTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterToggle
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDBrightnessRange
       _LED_setBrightnessRange
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDPwr
       _LEDsPwr
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startAbsMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startRelMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _zeroPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
   _initialize
     _LEDsPwr
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _TMR0_Load8bitPeriod
     _TMR2_LoadPeriodRegister
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _parseCmd
     _atoi
       ___wmul
       _isdigit
     _stricmp
       _toupper
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _TMR0_StopTimer
       _TMR0_Write8bitTimer
       i1_LEDsOn
         i1_send_2length_2bytes_IK
           i1_send_2bytes_latchless_IK
           i1_send_last_2bytes_IK
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
       _TMR2_StopTimer
       _TMR2_WriteTimer
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c1_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c1_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c1_driver_resetBus
     i1_do_I2C_RX *
       i1_do_I2C_DO_NACK_RESTART
         i1_i2c1_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP
         i1_i2c1_driver_sendNACK
       i1_i2c1_driver_getRXData
       i1_i2c1_driver_sendACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     i1_do_I2C_TX *
       i1_do_I2C_SEND_RESTART_READ
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_i2c1_driver_TXData
       i1_i2c1_driver_isNACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_TX_EMPTY *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_mssp1_setIRQ
       i1_returnReset *
       i1_returnStop *
     i1_i2c1_driver_isNACK *
     i1_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     34      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      3      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     18      4D      13       96.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     189      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     189      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Apr 15 22:43:45 2018

        i1send_last_2bytes_IK@topOrBottom 0073                              returnReset@p 0031  
        __end_of_TMR2_SetInterruptHandler 2598                                         pc 0002  
            __end_ofdrv2665@drv_fifo_sine 11E8                    setLEDBrightnessRange@r 00B5  
           _do_I2C_SEND_RESTART$intlevel0 2559                         ??_getMotionStatus 0049  
                             __CFG_CP$OFF 0000                              ___awdiv@sign 0037  
                    __size_of_do_I2C_IDLE 0009                       _do_I2C_SEND_RESTART 2555  
                            _startAbsMove 26A1                      __size_of_do_I2C_RCEN 000A  
                     ___wmul@multiplicand 0033                    i1send_last_2bytes_IK@j 0079  
                    __end_ofi1_returnStop 0004                              ___ftadd@exp1 00AE  
                            ___ftadd@exp2 00AD                               i1_do_I2C_RX 1B93  
                             i1_do_I2C_TX 1E0D                               __CFG_LVP$ON 0000  
                            ___ftadd@sign 00AC                                       l202 1F60  
                                     l215 1F8F                                       l240 1ABB  
                                     l208 1F7A                                       l225 1FA4  
                                     l217 1F91                                       l242 1ABD  
                                     l234 1AA1                                       l219 1F9A  
                                     l244 1AC5                                       l190 1594  
                                     l291 1441                                       l267 168B  
                                     l198 1F57                                       l391 1983  
                                     l287 1412                                       l464 25D8  
                                     l709 1FD8                                       l725 1C76  
                                     _PR2 001E                              __CFG_CPD$OFF 0000  
                i1_do_I2C_DO_NACK_RESTART 24C7              __size_of_i2c_masterOperation 0024  
                    _returnStop$intlevel0 24FB                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 2669                     __size_of_do_I2C_RESET 000B  
                                     wreg 0009                              _startRelMove 267B  
                         _setHeaterToggle 0857                     __end_ofi1_returnReset 0800  
                         ?i1_mssp1_setIRQ 0070                        i1_i2c1_driver_stop 247D  
                                    S8498 1800                  setLEDBrightnessRange@tOB 00B7  
                       setDrvGain@setGain 00B8                              ?_EUSART_Read 0070  
                                    l1244 1EA5                                      l1408 0749  
                                    l1390 065D                                      l1392 063E  
                                    l1393 0694                                      l1490 2753  
                                    l1387 063C                                      l1673 162D  
                                    l1674 1635                                      l1666 161A  
                                    l6010 17BE                             i1returnStop@p 0070  
                                    l5140 1EB6                                      l6020 17FB  
                                    l6012 17C2                                      l6004 17B6  
                                    l1757 0AA9                                      l6014 17EB  
                                    l7000 1C78                                      l5304 2646  
                                    l1697 0F9B                                      l5146 1EC1  
                                    l7010 1C7E                                      l1963 2714  
                                    l6220 27E2                                      l5172 1EF8  
                                    l5164 1EE7                                      l5156 1EC9  
                                    l7012 1A6D                                      l7004 1C7B  
                                    l5500 1B23                                      l6300 050A  
                                    l5158 1ED5                                      l7014 1A70  
                                    l7030 1A7A                                      l7102 084E  
                                    l5168 1EF0                                      l7024 1A77  
                                    l7112 1BDB                                      l7200 06BA  
                                    l5512 1AF3                                      l6320 0555  
                                    l6312 0537                                      l6304 0519  
                                    l7018 1A73                                      l7114 1BE9  
                                    l7122 1C0C                                      l7034 1978  
                                    l7210 06EF                                      l5506 1ACD  
                                    l8100 0471                                      l5284 274D  
                                    l5508 1AD5                                      l6340 05A0  
                                    l6332 0582                                      l6324 0564  
                                    l6316 0546                                      l6308 0528  
                                    l7118 1C01                                      l7206 06E7  
                                    l8102 0479                                      l7136 1F7C  
                                    l7128 1F59                                      l7064 19B0  
                                    l7056 199F                                      l7080 25E0  
                                    l7048 1998                                      l7216 06F5  
                                    l8200 0154                                      l7400 16AE  
                                    l8104 0481                                      l6352 05CD  
                                    l6344 05AF                                      l6336 0591  
                                    l6328 0573                                      l6280 04BA  
                                    l7242 192B                                      l7090 0823  
                                    l7218 061D                                      l7330 2667  
                                    l6362 05FB                                      l7236 191B  
                                    l7164 0639                                      l7308 0D12  
                                    l6356 05E3                                      l6348 05BE  
                                    l6292 04EC                                      l6284 04CE  
                                    l7342 15F7                                      l7238 1921  
                                    l7190 06A3                                      l8206 0239  
                                    l8126 0E2B                                      l7406 095A  
                                    l7502 0FAD                                      l8070 0331  
                                    l5494 1AFD                                      l6366 060E  
                                    l6358 05E9                                      l7352 161F  
                                    l7344 1601                                      l7088 0815  
                                    l7176 066E                                      l7168 0640  
                                    l7280 1CB9                                      l7432 1E64  
                                    l8080 0390                                      l8072 033C  
                                    l8064 02F2                                      l5488 2656  
                                    l5496 1B05                                      l6296 04FB  
                                    l6288 04DD                                      l7354 1627  
                                    l7346 1606                                      l7338 15F0  
                                    l7602 0AA0                                      l7098 0843  
                                    l7194 06B4                                      l7434 1E98  
                                    l8146 0E8E                                      l7506 0FBF  
                                    l8090 0425                                      l8082 03A5  
                                    l8074 0351                                      l8066 0307  
                                    l7532 0D55                                      l7604 0AAC  
                                    l8180 0126                                      l8172 00B5  
                                    l8500 1C36                                      l7516 0FDA  
                                    l7460 0F23                                      l8092 0445  
                                    l8084 03C5                                      l8076 0366  
                                    l8068 031C                                      l7446 18AC  
                                    l7526 0D3C                                      l6902 259C  
                                    l6910 25FB                                      l8174 00F1  
                                    l8094 0450                                      l8086 03E5  
                                    l8078 037B                                      l5950 1DCB  
                                    l8342 1740                                      l7560 0DD1  
                                    l7544 0D9D                                      l7608 0ABA  
                                    l7288 1CD7                                      l8176 0114  
                                    l7456 0F1B                                      l8096 045B  
                                    l8088 0405                                      l8352 1767  
                                    l8194 0145                                      l7298 0C59  
                                    l7394 169F                                      l7490 0F78  
                                    l7466 0F34                                      l7722 1715  
                                    l7714 16C5                                      l8098 0466  
                                    l8362 1739                                      l8354 176C  
                                    l7556 0DC3                                      l7548 0DAB  
                                    l6852 2551                                      l6940 1A42  
                                    l7396 16A7                                      l7484 0F63  
                                    l7716 16FA                                      l5980 13CF  
                                    l5972 1E0A                                      l5964 1DE7  
                                    l5956 1DD0                                      l8364 173D  
                                    l6846 2549                                      l6918 25CE  
                                    l6926 25AF                                      l6934 2569  
                                    l6870 2571                                      l7486 0F6F  
                                    l7478 0F50                                      l7718 1703  
                                    l5982 13D7                                      l5974 1E0B  
                                    l7576 0A55                                      l6864 2561  
                                    l6944 1A4B                                      l6960 1FB1  
                                    l7920 18C4                                      l7912 1DB8  
                                    l7760 1C25                                      l7752 1C19  
                                    l7496 0F8B                                      l7488 0F74  
                                    l7832 088C                                      l5992 1799  
                                    l8368 1785                                      l7594 0A85  
                                    l6882 24FB                                      l6858 2559  
                                    l6954 1A51                                      l7922 18CC  
                                    l7906 1D7E                                      l7738 1A38  
                                    l7850 0A26                                      l7754 1C1C  
                                    l7770 1C44                                      l7498 0F97  
                                    l5994 1791                                      l5986 13FA  
                                    l7596 0A93                                      l6892 25C3  
                                    l6876 2579                                      l6948 1A4E  
                                    l6964 1FB4                                      l6956 1FAB  
                                    l7924 18D4                                      l7756 1C1E  
                                    l5996 179E                                      l6886 2501  
                                    l6982 1FF9                                      l6974 1FBA  
                                    l7942 0C35                                      l7934 0B9D  
                                    l7758 1C20                                      l7870 14A6  
                                    l6968 1FB7                                      l7928 18DC  
                                    l7848 0A09                                      l7856 0A30  
                                    l7768 1C31              TMR0_Load8bitPeriod@periodVal 0031  
                                    l6986 1C5C                                      l7938 0BE6  
                                    l7868 1489                                      l7876 14B0  
                                    l7894 1D6D                                      l7888 1D33  
                         __end_of_LEDsPwr 15E7                                      STR_1 2A1B  
                                    STR_2 283B                                      STR_3 28F7  
                                    STR_4 2925                                      STR_5 295D  
                                    STR_6 29DA                                      STR_7 2A25  
                                    STR_8 2A25                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    u4215 1ECC                                      u4235 1ED6  
                                    u4245 1EE0                                      u4255 1EE8  
                                    u7010 0C78                                      u7020 0C79  
                                    _PMD0 0911                                      _PMD1 0912  
                                    u7030 0C90                                      _PMD2 0913  
                                    u7015 0C74                                      u4455 2754  
                                    _PMD3 0914                                      u7040 0C91  
                                    _PMD4 0915                                      u4465 2759  
                                    _PMD5 0916                                      u7050 0CA6  
                                    u7035 0C8C                                      u7060 0CA7  
                                    u8020 1D4E                                      u8004 1491  
                                    u8005 148F                                      u7310 0998  
                                    u7215 163C                                      u7135 15FC  
                                    u7055 0CA2                                      u7311 0996  
                                    u7320 0999                                      u8025 1D4A  
                                    u7330 09B3                                      u8050 1D99  
                                    u7155 1615                                      u7075 0CDF  
                                    u7235 158D                                      u8220 0ECC  
                                    u7340 09B4                                      u8205 0EB2  
                                    u7245 15A2                                      u8230 0ECD  
                                    u8214 0EBD                                      u7175 1622  
                                    u8215 0EBB                                      u8055 1D95  
                                    u7255 15CA                                      u6625 1BDE  
                                    u8305 0124                                      u8225 0EC8  
                                    u8145 0E34                                      u7505 0F64  
                                    u8330 0180                                      u8170 0E74  
                                    u6715 1F86                                      u6555 0818  
                                    u7355 1E83                                      u8155 0E5A  
                                    u8404 0200                                      u8340 0181  
                                    u8180 0E75                                      u8164 0E65  
                                    u6645 1BF7                                      u8405 01FE  
                                    u8325 0152                                      u8165 0E63  
                    ?_do_I2C_SEND_RESTART 0070                                      u6575 0824  
                                    u6655 1C02                                      u8415 0237  
                                    u8335 017C                                      u8255 00B3  
                                    u8175 0E70                                      u8095 0C2E  
                                    u7535 0F79                                      u8440 028A  
                                    u8280 010A                                      u8264 00CF  
                                    u7705 0DD2                                      u6585 0838  
                                    u8441 0288                                      u8425 024A  
                                    u8265 00CD                                      u8450 028B  
                                    u8434 0266                                      u8370 01EA  
                                    u8354 018A                                      u8290 010B  
                                    u7715 0DD9                                      u7635 0D65  
                                    u6595 0844                                      u8435 0264  
                                    u8355 0188                                      u7475 0F51  
                                    u6764 1AAC                                      u8380 01EB  
                                    u8364 0196                                      u7900 086A  
                                    u6765 1AAA                                      u7645 0D77  
                                    u7805 0AA1                                      u8365 0194  
                                    u8285 0106                                      u7565 0F8C  
                                    u6694 1F6B                                      u8470 02D0  
                                    u7910 089B                                      u6695 1F69  
                                    u6855 06DD                                      u8471 02CE  
                                    u8375 01E6                                      u8480 02D1  
                                    u8464 02AC                                      u7665 0DAC  
                                    u7745 0A5C                                      u8465 02AA  
                                    u7905 0866                                      u8394 01F4  
                                    u6954 1421                                      u7675 0DB3  
                                    u8395 01F2                                      u6955 141F  
                                    u7915 0897                                      u7835 16C3  
                                    u7924 09D0                                      u7844 16D8  
                                    u7925 09CE                                      u7845 16D6  
                                    u7775 0A86                                      u8807 25DC  
                                    u7865 1713                                      u7954 09F5  
                                    u6995 188A                                      u7955 09F3  
                                    u7964 0A11                                      u7885 1A22  
                                    u7965 0A0F                                      u7975 1466  
                                    u8777 1727                                      u7994 1475  
                                    u8787 1437                                      u7995 1473  
                                    u8797 1CBA                                      _TMR2 001D  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000         __size_of_do_I2C_SEND_RESTART_READ 0008  
                     ?i1_i2c1_driver_stop 0070                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _atoi 178F                                      _main 1720  
                            ___ftpack@arg 0031                 __size_of_do_I2C_SEND_STOP 0008  
                  __size_of_do_I2C_DO_ACK 0008                              ___ftpack@exp 0034  
                         _TMR0_StartTimer 248C                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                       ??i1_do_I2C_DO_ACK 0070                             __CFG_BOREN$ON 0000  
                            ?_LED_getData 00B5                   i1_i2c1_driver_getRXData 2483  
                   ?_do_I2C_SEND_ADR_READ 0070                             __CFG_BORV$LOW 0000  
         ??_i2c1_driver_clearBusCollision 0070                                      start 004F  
                        _setHeaterPreTime 1520                     __size_of_zeroPosition 006B  
                           _i2c_setBuffer 182A                    LED_test_openshort@type 00B5  
                 ??_setLEDBrightnessRange 004C                             __CFG_CSWEN$ON 0000  
                           __CFG_MCLRE$ON 0000                              ___ftmul@cntr 00A4  
                _send_2bytes_latchless_IK 1A98                           __end_of_i2c_ISR 19C1  
                            ___ftmul@sign 00A5                  ??_do_I2C_DO_NACK_RESTART 0031  
                           i1_do_I2C_IDLE 24E2                              ___fttol@exp1 00BC  
                           i1_do_I2C_RCEN 24F1                              ___fttol@lval 00B8  
                 __end_of_TMR0_Initialize 26A1                              _do_I2C_RESET 25BF  
                          i1returnReset@p 0070              __size_of_TMR0_Write8bitTimer 0005  
          ??_TMR0_DefaultInterruptHandler 007C                             ?_EUSART_Write 0070  
          __size_of_OSCILLATOR_Initialize 000A             __end_of_OSCILLATOR_Initialize 25AB  
                    ??i1_i2c1_driver_stop 0070                                     ?_atoi 0037  
                                   ?_main 0070                           __end_of___awdiv 1EFD  
                __end_of_i2c1_driver_stop 249B                           __end_of___ftadd 1000  
                                   STR_10 28E7                                     STR_11 2982  
                                   STR_20 2A25                                     STR_12 28D7  
                                   STR_21 2A25                                     STR_13 2A25  
                                   STR_22 2A25                                     STR_14 294C  
                                   STR_30 2A1B                                     STR_31 283B  
                                   STR_23 2A25                                     STR_15 2A25  
                                   STR_24 2A25                                     STR_32 2A31  
                                   STR_16 2A28                                     STR_40 298D  
                                   STR_17 2A25                                     STR_25 2A28  
                                   STR_33 29F4                                     STR_41 2800  
                           __CFG_WDTE$OFF 0000                                     STR_26 2A25  
                                   STR_18 2A25                                     STR_42 29D2  
                                   STR_34 2A2F                                     STR_50 2942  
                    send_last_2bytes_IK@j 003A                                     STR_19 2A25  
                                   STR_43 29CA                                     STR_27 2A28  
                                   STR_51 28A3                                     STR_35 281F  
                                   STR_52 28A3                                     STR_44 29E2  
                                   STR_28 2A1B                                     STR_60 2A15  
                                   STR_36 2859                                     STR_29 283B  
                                   STR_45 298D                                     STR_61 29F6  
                                   STR_37 29D2                                     STR_53 28B5  
                                   STR_62 2A00                                     STR_70 29EA  
                                   STR_38 29CA                                     STR_54 28C6  
                                   STR_46 2873                                     STR_55 29E8  
                                   STR_63 2A2D                                     STR_39 29E2  
                                   STR_47 29A1                                     STR_71 2950  
                                   STR_56 29E8                                     STR_72 29F1  
                                   STR_64 29AA                                     STR_48 2998  
                                   STR_57 2A0F                                     STR_73 29FB  
                                   STR_65 29B2                                     STR_49 283D  
                                   STR_58 2A13                                     STR_74 29C2  
                                   STR_66 2976                                     STR_59 2A17  
                                   STR_75 2A0A                                     STR_67 2934  
                                   STR_76 2A05                                     STR_68 2916  
                                   STR_77 28A0                                     STR_69 29BA  
                                   STR_78 288C                           __end_of___lldiv 0857  
                         __end_of___ftmul 0E04                           ___awdiv@divisor 0031  
                         __end_of___llmod 1C15                           __end_of___fttol 0AC3  
                                   _T2CON 001F                __end_of_i2c1_driver_TXData 2509  
                          __CFG_DEBUG$OFF 0000                          __end_ofi1_LEDsOn 1880  
                                   i1l202 1CF2                                     i1l215 1D1B  
                                   i1l240 19E0                                     i1l208 1D09  
                                   i1l225 1D2A                                     i1l217 1D1C  
                                   i1l242 19E1                                     i1l234 19C9  
                                   i1l330 0021                                     i1l403 2781  
                                   i1l219 1D23                                     i1l244 19E8  
                                   i1l332 002E                                     i1l341 004A  
                                   i1l334 0038                                     i1l327 0013  
                                   i1l336 0042                                     i1l198 1CEA  
                                   i1l709 1E39                                     i1l725 1BAD  
                         ___awdiv@counter 0036                          __end_of_LEDpower 2A2D  
                                   _OSCEN 091D                                     _TMR0H 0016  
                                   _TMR0L 0015                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                      __end_ofsin@coeff_a 2916                        __end_ofsin@coeff_b 2976  
       __size_of_TMR0_SetInterruptHandler 0009             i1send_2length_2bytes_IK@data1 0020  
           i1send_2length_2bytes_IK@data2 0022                 ?_TMR0_SetInterruptHandler 0031  
                        __end_of_TMR0_ISR 2610                          __end_of_TMR2_ISR 261D  
                         __end_of_execCmd 0494                        __size_ofi1_i2c_ISR 0020  
                           ___awtoft@sign 003E                __end_of_i2c1_driver_isNACK 262A  
                         __end_of_dpowers 2028                            _WDT_Initialize 24CB  
                                   _errno 0166                           __end_of_isdigit 2648  
            ?i1_do_I2C_SEND_RESTART_WRITE 0070                ?_do_I2C_SEND_RESTART_WRITE 0070  
                           ___ftpack@sign 0035                                     atoi@a 003C  
                                   atoi@s 003E                                     _putch 2509  
                   ??_do_I2C_SEND_RESTART 0031                 send_2bytes_latchless_IK@j 0037  
                       ?i1_mssp1_clearIRQ 0070                              _zeroPosition 16B5  
                                   pclath 000A                        setDrvPiezoOnTime@t 00BD  
                 __size_of_mssp1_clearIRQ 0003                      i1_i2c1_driver_TXData 24DD  
      __end_ofi1_send_2bytes_latchless_IK 19EA                i1_send_2bytes_latchless_IK 19C1  
                    setLEDPwr@topOrBottom 00B7                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                        ??i1_mssp1_clearIRQ 0070  
                                   wtemp0 007E                           _TMR2_StartTimer 248F  
                         __end_of_stricmp 1400          __size_of_TMR2_LoadPeriodRegister 0005  
                         __end_of_strcspn 1AF8                           __end_of_toupper 2658  
                          ?_i2c_setBuffer 0031                       _send_last_2bytes_IK 1F4F  
                    i1_i2c1_driver_isNACK 25EB                         _setHeaterPostTime 1EFD  
                           _fsmStateTable 0220                           __initialization 0051  
          __size_ofi1_do_I2C_SEND_RESTART 0004                                _i2c_poller 25E0  
           __end_ofi1_do_I2C_SEND_RESTART 24BB                            _remainingSteps 00E6  
                            __end_of_atoi 1800                                _i2c_status 0120  
                          ?i1_do_I2C_IDLE 0070                              __end_of_main 178F  
                      ?_setHeaterPostTime 00BD                            ?i1_do_I2C_RCEN 0070  
               LED_readConfig@topOrBottom 00C6                __end_ofi1_do_I2C_SEND_STOP 24BF  
                          ??_EUSART_Write 0031                   __end_of_TMR2_Initialize 267B  
             ?_INTERRUPT_InterruptManager 0070                             ?_LED_testComm 00CA  
                 __end_of_setHeaterToggle 08CD                            i1_do_I2C_RESET 2527  
                           _do_I2C_DO_ACK 2565                                    ??_atoi 0039  
                _TMR2_SetInterruptHandler 258F                                    ??_main 01EE  
                           ___fttol@sign1 00B7                       ??_setHeaterPostTime 004D  
           __size_of_i2c1_driver_sendNACK 0004                LED_test_openshort@readData 00BA  
                         _TMR2_WriteTimer 24D8                      ?_send_last_2bytes_IK 0031  
                           ?_drv_write_DC 00B8                                 ??_LEDsPwr 0048  
                  __end_of_WDT_Initialize 24CF             __size_of_i2c1_driver_resetBus 0001  
                             drv_read@reg 004B                        setHeaterPostTime@t 00BD  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                              ?_setMoveMask 00B5  
                      setHeaterToggle@num 00B5                          _piezo_on_time_ms 0058  
                 __end_of_TMR0_StartTimer 248F                             _drv_fifo_sine 1000  
                        ___llmod@dividend 0043                      __size_of_getMoveMask 004B  
                        ___awdiv@dividend 0033                          __end_of___awtoft 18C3  
                                  _ANSELA 018C                                    ?_putch 0070  
                                  _ANSELB 018D                                    _ANSELC 018E  
                        __end_of___ftpack 164C                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 0017                                    _T0CON1 0018  
                 ?i1_do_I2C_SEND_ADR_READ 0070                      drv2665@drv_fifo_sine 10F4  
                   ?i1_i2c1_driver_TXData 0070                                    _RC1REG 0199  
                                  _RC1STA 019D                                    _ODCONA 028C  
                                  _ODCONB 028D                                    _ODCONC 028E  
                                  i1l5036 1D0A                                    i1l5028 1CEC  
                                  i1l6026 2527                                    i1l6036 24E2  
                                  i1l6060 24F1                                    i1l8000 1E1C  
                                  i1l8012 1B93                                    i1l8030 1BB2  
                                  i1l8040 19ED                                    i1l8008 1E55  
                                  i1l8050 19F4                                    i1l8026 1BAF  
                                  i1l6196 2733                                    i1l8044 19F0  
                                  i1l8036 1BB5                                    i1l8220 27C0  
                                  i1l8038 19EA                 ??i1_i2c1_driver_getRXData 0070  
                                  i1l8056 19F7                                    i1l8228 27D0  
                                  i1l7630 24B3                                    i1l7624 24AF  
                                  i1l7642 24BB                                    i1l7660 0002  
                                  i1l7636 24B7                                    i1l7654 24C7  
                                  i1l7664 07FE                                    i1l7648 24C3  
                                  i1l7944 2535                                    i1l7952 252E  
                                  i1l7960 24BF                                    i1l7970 18ED  
                                  i1l7980 18F3                                    i1l7974 18F0  
                                  i1l7966 18E6                                    i1l7990 1E16  
                                  i1l7982 1E0D                                    i1l7994 1E19  
                                  i1l7986 1E13                                    u502_25 1869  
                                  _LEDsOn 1880             ??i1_do_I2C_SEND_RESTART_WRITE 0070  
                                  u391_24 19D2                                    u391_25 19D0  
                                  u384_24 1CFB                                    u384_25 1CF9  
                                  u386_25 1D13                                    _OSCFRQ 091F  
                  ??_do_I2C_SEND_ADR_READ 0032                           drv_write_DC@val 00B8  
                                  _TX1REG 019A                      __size_of_getPosition 002A  
                                  _WDTCON 0097                                    _TX1STA 019E  
                               ??_i2c_ISR 0036               __size_of_LED_test_openshort 0069  
               __end_of_setHeaterPostTime 1F4F                     ?i1_i2c1_driver_isNACK 0070  
                          __CFG_PWRTE$OFF 0000             LED_test_openshort@topOrBottom 00B7  
                   _i2c1_driver_getRXData 249E                       LED_getData@readData 00C0  
                 __size_of_LED_readConfig 0024                       _do_I2C_RX$intlevel0 1C5C  
                   __size_ofi1_returnStop 0002               __end_of_do_I2C_DO_NACK_STOP 2575  
                       __end_ofi1_i2c_ISR 27E0                                    ___wmul 274A  
                               ??___awdiv 0035     __end_of_i2c1_driver_clearBusCollision 2477  
  __size_of_i2c1_driver_clearBusCollision 0003             _i2c1_driver_clearBusCollision 2474  
                               ??___ftadd 0049                            __CFG_STVREN$ON 0000  
                                  _doMove 074A                                 ??___lldiv 0039  
                               ??___ftmul 0045                                 ??___llmod 0047  
                               ??___fttol 00B3               i1send_2bytes_latchless_IK@j 0076  
         __size_of_do_I2C_DO_NACK_RESTART 0008                         startAbsMove@steps 00B5  
                        __end_of_drv_read 1CE3                    __end_ofi1_do_I2C_RESET 252E  
                        __end_of_drv_sine 13CC                   ?_send_2length_2bytes_IK 003C  
                     _EUSART_Transmit_ISR 2766                            ??_LED_testComm 004C  
                        ?_TMR0_Initialize 0070                          ___awdiv@quotient 0038  
                          ?_do_I2C_DO_ACK 0070                          __end_of_parseCmd 0618  
                                  _printf 0618                                    _strchr 2714  
                                  _strtok 1DC2                                    _strspn 1AF8  
                               ??_execCmd 004E                     ___ftmul@f3_as_product 00A1  
                   ??_send_last_2bytes_IK 0036               __end_of_i2c1_driver_sendACK 24D3  
                          _PMD_Initialize 253D            __end_of_do_I2C_DO_ADDRESS_NACK 1A69  
                          ??_drv_write_DC 00BC                                 ??_isdigit 0031  
                         ?_WDT_Initialize 0070               __end_of_i2c1_driver_restart 2498  
                            ?_returnReset 0031             _do_I2C_DO_NACK_STOP$intlevel0 2571  
             __end_of_i2c1_driver_startRX 249E                        LEDsPwr@topOrBottom 0046  
       __size_ofi1_do_I2C_DO_ADDRESS_NACK 0024            __end_ofi1_do_I2C_SEND_ADR_READ 253D  
                 __end_of_TMR2_StartTimer 2492  TMR2_SetInterruptHandler@InterruptHandler 0031  
TMR0_SetInterruptHandler@InterruptHandler 0031                 ?i1_do_I2C_DO_ADDRESS_NACK 0070  
                               ??_stricmp 0035                                 ??_strcspn 003A  
                               ??_toupper 0031                      ?_EUSART_Transmit_ISR 0070  
                       i1_do_I2C_TX_EMPTY 19EA                      __size_of_EUSART_Read 0020  
                       _SYSTEM_Initialize 26B5            __size_ofi1_send_last_2bytes_IK 0049  
                 __end_of__initialization 009D             __end_ofi1_send_last_2bytes_IK 1D2C  
                         ??_i2c_setBuffer 0035            _do_I2C_SEND_ADR_READ$intlevel0 25FB  
                        _do_I2C_SEND_STOP 255D                              i1_returnStop 0002  
                              ___ftadd@f1 00A6                                ___ftadd@f2 00A9  
                         _getMotionStatus 18C3                     i1_do_I2C_DO_NACK_STOP 24C3  
                      __size_of_do_I2C_RX 0044                        __size_of_do_I2C_TX 0059  
                      ?i1_do_I2C_TX_EMPTY 0070                        ?_SYSTEM_Initialize 0070  
                      __size_of_doAbsMove 0249                          _moveVector_downs 00DC  
              __end_of_mssp1_IRQisEnabled 25BF                       _i2c_masterOperation 190A  
                __size_of_do_I2C_TX_EMPTY 002F                                ___awtoft@c 0039  
                               ?i1_LEDsOn 0027                           ??i1_do_I2C_IDLE 0070  
                         ??i1_do_I2C_RCEN 0070                                ___ftmul@f1 003F  
                              ___ftmul@f2 0042                __end_of_mssp1_waitForEvent 25E0  
                    __size_of_LED_getData 005C                                ___fttol@f1 00AF  
                             ?_i2c_poller 0070                            __pcstackCOMMON 0070  
              ??i1_do_I2C_DO_NACK_RESTART 0070                       _do_I2C_TX$intlevel0 1FAB  
                     ??i1_do_I2C_TX_EMPTY 0070            __end_of_send_2length_2bytes_IK 26FA  
                            __pidataBANK0 2521                              __pidataBANK1 251B  
                            __pidataBANK4 183F                       ??_SYSTEM_Initialize 0033  
                              _absCommand 00E4                                 ?_TMR0_ISR 0070  
                               ?_TMR2_ISR 0070                        __size_of_doRelMove 00E2  
                 __end_of_TMR2_WriteTimer 24DD                     i1_i2c1_driver_sendACK 24A7  
                   i1i2c1_driver_TXData@d 0070                           ?i1_do_I2C_RESET 0070  
                           __end_of_putch 250F                          ?_TMR2_Initialize 0070  
                   i1_i2c1_driver_restart 247A         __size_ofi1_send_2length_2bytes_IK 0018  
                  __end_of_PMD_Initialize 2545                          ?_setHeaterToggle 00B5  
               ?i1_send_2length_2bytes_IK 0020                        __size_of_getActive 004B  
                            ?i1_do_I2C_RX 0070                              ?i1_do_I2C_TX 0070  
                   i1_i2c1_driver_startRX 2480                          ??i1_mssp1_setIRQ 0070  
                    ?_i2c_masterOperation 0070              ??i1_do_I2C_SEND_RESTART_READ 0070  
                      __size_of_commCheck 00C9                  __end_of_setHeaterPreTime 1583  
                            LED_getData@j 00C4                           i1_do_I2C_DO_ACK 24BF  
             __end_of_TMR0_Load8bitPeriod 24EC                 __end_ofi1_do_I2C_TX_EMPTY 1A14  
                        ?_TMR0_StartTimer 0070                    _do_I2C_DO_NACK_RESTART 2575  
                  ??i1_i2c1_driver_TXData 0070                            _do_I2C_TX$1114 0034  
               __end_of_SYSTEM_Initialize 26CA                     ??_EUSART_Transmit_ISR 0070  
                                 ??_putch 0033                            _mssp1_clearIRQ 24A4  
                              __pbssBANK0 004E                                __pbssBANK1 00D4  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                              __pbssBANK4 0258                   __size_of_calcHeaterPins 0079  
                     _TMR0_Write8bitTimer 24D3                ??_send_2bytes_latchless_IK 0033  
                    __end_of_EUSART_Write 199B                                   ?_LEDsOn 0044  
                          _moveVector_ups 00E0                   _TMR2_LoadPeriodRegister 24EC  
                 drv_write_DC@duration_ms 00BA                                _activeMask 00D8  
                ??i1_i2c1_driver_sendNACK 0070                           drv2665@drv_sine 11E8  
                  ??i1_i2c1_driver_isNACK 0070                __size_of_setHeaterPostTime 0052  
                      __size_of_drv_write 0024               __size_of_EUSART_Receive_ISR 001C  
                      __size_of_setLEDPwr 001E                    ?_i2c1_driver_getRXData 0070  
                ??i1_i2c1_driver_resetBus 0070                              drv_read@buff 004C  
                              ??i1_LEDsOn 002D                     _do_I2C_IDLE$intlevel0 259C  
                          _SSP1DATPPSbits 0E21              __size_of_i2c_busCollisionISR 0003  
                              __pmaintext 1720                                doAbsMove@i 00C5  
                           ??_do_I2C_IDLE 0031                        __size_of_setActive 007D  
                           ??_do_I2C_RCEN 0031          __end_of_TMR0_SetInterruptHandler 258F  
                 __size_of_TMR0_StopTimer 0003            __size_of_setLEDBrightnessRange 001E  
                                 ?___wmul 0031             __end_of_setLEDBrightnessRange 27A2  
                              ??_TMR0_ISR 007C                           __CFG_PPS1WAY$ON 0000  
                              _cmd_struct 0258                                ??_TMR2_ISR 0071  
                                 ?_doMove 0070                           ??_do_I2C_DO_ACK 0031  
                              __pintentry 0004                         startRelMove@steps 00B5  
                   setHeaterToggle@topOrB 00B7                      ?_TMR0_Write8bitTimer 0070  
                     i2c_setBuffer@buffer 0031                                 ?___awtoft 0039  
                               ?___ftpack 0031                            _SSP1CLKPPSbits 0E20  
                                 ?_printf 00A0                           ?_PMD_Initialize 0070  
                              _fifo_check 2658                                   ?_strchr 0031  
          ?_i2c1_driver_clearBusCollision 0070                                   ?_strtok 003F  
                                 ?_strspn 0038                     ??_i2c_masterOperation 0037  
                       __end_of_do_I2C_RX 1C9C                         __end_of_do_I2C_TX 2000  
                       ?_i2c1_driver_stop 0070                             _eusartRxCount 0054  
                       __end_of_doAbsMove 02EA                  ?i1_do_I2C_SEND_ADR_WRITE 0070  
                                 _SP1BRGH 019C                                   _SP1BRGL 019B  
                                 _LEDsPwr 1583                        ??_i2c1_driver_stop 0031  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                           ?_mssp1_setIRQ 0070                                   _NVMADRH 0892  
                                 _NVMADRL 0891                                   _NVMDATH 0894  
                                 _OSCTUNE 091E                                   _NVMDATL 0893  
                                 _NVMCON2 0896                                   _SSP1ADD 0212  
                                 _SSP1BUF 0211                    __end_of_mssp1_clearIRQ 24A7  
                                 _SSP1MSK 0213                   __end_of_getMotionStatus 18E6  
                 __size_of_TMR2_StopTimer 0003                       __size_of_i2c_poller 000B  
                        ?_TMR2_StartTimer 0070                   ??_do_I2C_SEND_ADR_WRITE 0032  
     _do_I2C_SEND_RESTART_WRITE$intlevel0 2551                         __end_of_doRelMove 0EE6  
             ??_do_I2C_SEND_RESTART_WRITE 0031                      __size_of_setMoveMask 0061  
                  ?i1_do_I2C_DO_NACK_STOP 0070                        _i2c1_driver_TXData 2503  
                    __end_of_LED_testComm 09BF                                 ?_drv_read 00B5  
                         __size_of_LEDsOn 0021                        _i2c1_driver_i2cISR 00E8  
             ?i1_send_2bytes_latchless_IK 0070         LED_setBrightnessRange@topOrBottom 0046  
                       __end_of_getActive 1D77                                   _i2c_ISR 199B  
                               ?_parseCmd 0045                         __end_of_commCheck 0C45  
                    __end_of_drv_write_DC 1EAB                     _returnReset$intlevel0 2501  
                   _do_I2C_RCEN$intlevel0 25AF                        _i2c1_driver_isNACK 261D  
                     ?_i2c1_driver_TXData 0070                              drv_write@reg 004B  
              ??_TMR2_SetInterruptHandler 0033                            _LED_readConfig 1952  
        _do_I2C_DO_ADDRESS_NACK$intlevel0 1A42                        __end_of_TMR0_RANGE 2A25  
                      __end_of_TMR2_RANGE 2A22                    ?i1_i2c1_driver_sendACK 0070  
                              doRelMove@j 00CA                    __size_ofi1_returnReset 0002  
                                 ___awdiv 1EAB                                   ___ftadd 0EE6  
                                 ___lldiv 0804                 __size_ofi1_mssp1_clearIRQ 0003  
                         __size_of___wmul 001C                                   ___ftmul 0D23  
                                 ___llmod 1BD2                                   ___fttol 0A3C  
                   ??_TMR0_Write8bitTimer 0070                           __size_of_doMove 00B4  
                  ?i1_i2c1_driver_restart 0070                          ?_TMR2_WriteTimer 0070  
                       ??_do_I2C_TX_EMPTY 0031                       ?_i2c1_driver_isNACK 0070  
                                 _cmdRead 0168                    ?i1_i2c1_driver_startRX 0070  
                              ??___awtoft 003C                                ??___ftpack 0036  
                              _initialize 0AC3                   __end_ofi1_do_I2C_DO_ACK 24C3  
                                 __ptext1 0494                                   __ptext2 1DC2  
                                 __ptext3 1AF8                                   __ptext4 1AC8  
                                 __ptext5 2714                                   __ptext6 13CC  
                                 __ptext7 2648                                   __ptext8 178F  
                                 __ptext9 2639               __size_ofi1_i2c1_driver_stop 0003  
                     __end_of_do_I2C_IDLE 25A1                           __size_of_printf 0132  
                     __end_of_do_I2C_RCEN 25B5                                   _execCmd 02EA  
                         __size_of_strchr 001A                           __size_of_strtok 004B  
                         __size_of_strspn 0030                         __end_of_drv_write 1952  
                                 _dpowers 2000                  ??_LED_setBrightnessRange 00A0  
                   _OSCILLATOR_Initialize 25A1                                   _readIdx 004E  
                               _T2CONbits 001F                                   _isdigit 2639  
                          setActive@onOff 00B7                         __end_of_setLEDPwr 27C0  
             __end_of_do_I2C_SEND_RESTART 255D                            ??_mssp1_setIRQ 0031  
                    ??_i2c1_driver_TXData 0031                  ??_PIN_MANAGER_Initialize 0031  
                  i2c_masterOperation@ret 0039                        i1_do_I2C_SEND_STOP 24BB  
                 __end_ofdrv2665@drv_sine 12DA                         __end_of_setActive 0A3C  
                         ?_mssp1_clearIRQ 0070                _do_I2C_SEND_STOP$intlevel0 2561  
              __size_ofi1_do_I2C_TX_EMPTY 002A                 ??_TMR2_LoadPeriodRegister 0031  
                _do_I2C_SEND_RESTART_READ 2545                __size_of_SYSTEM_Initialize 0015  
                              _setDrvGain 1C15                         setActive@probeNum 00B5  
                                 clrloop0 2510                                _setDrvPeak 262A  
                                 _stricmp 13CC                                   _strcspn 1AC8  
                                 _toupper 2648                      __size_of_returnReset 0006  
                    end_of_initialization 009D                      ??_i2c1_driver_isNACK 0031  
                              _second_top 0162                                getActive@i 00B7  
             TMR0_Write8bitTimer@timerVal 0070                                ??_drv_read 0049  
                            setLEDPwr@pwr 00B5                                   init_ram 2515  
            __end_of_i2c1_driver_sendNACK 0804                       ?i1_do_I2C_SEND_STOP 0070  
                                 initloop 2516           __size_ofi1_i2c1_driver_sendNACK 0004  
                              ??_parseCmd 0046                    __end_of_LED_readConfig 1976  
                       _EUSART_Initialize 26FA              __end_of_i2c1_driver_resetBus 182A  
                         ___lldiv@divisor 0031           __size_ofi1_i2c1_driver_resetBus 0001  
                         ___lldiv@counter 003E                        ?_EUSART_Initialize 0070  
                                 printf@c 00B4                                   printf@f 00A0  
                              _motionType 0053                 _do_I2C_SEND_RESTART_WRITE 254D  
                       LEDsOn@topOrBottom 0048                     i1_do_I2C_SEND_RESTART 24B7  
        __end_ofi1_do_I2C_DO_ADDRESS_NACK 190A           __end_ofi1_do_I2C_SEND_ADR_WRITE 2535  
                     ??_EUSART_Initialize 0031                          ??_WDT_Initialize 0031  
                               i1_i2c_ISR 27C0                      ??i1_do_I2C_SEND_STOP 0070  
                                 strspn@i 003C                                _returnStop 24F7  
                _TMR0_SetInterruptHandler 2586                               ?_fifo_check 0070  
                               _PORTCbits 000E                  __end_of_do_I2C_SEND_STOP 2565  
      __end_ofi1_do_I2C_SEND_RESTART_READ 24B3                i1_do_I2C_SEND_RESTART_READ 24AF  
                    __size_ofi1_do_I2C_RX 003F                      __size_ofi1_do_I2C_TX 004E  
                           ??_getMoveMask 0049                     __size_of_EUSART_Write 0025  
                           i1_returnReset 07FE                               returnStop@p 0031  
                        ?_getMotionStatus 00B5                             ??_getPosition 0049  
                     LED_test_openshort@j 00BE                          __CFG_FEXTOSC$OFF 0000  
                          _calcHeaterPins 08CD          __end_of_send_2bytes_latchless_IK 1AC8  
              __end_of_LED_test_openshort 16B5                   TMR2_WriteTimer@timerVal 0070  
                               _RXPPSbits 0E24                 __end_of_EUSART_Initialize 2714  
          send_last_2bytes_IK@latch_start 0033               LED_setBrightnessRange@range 0044  
                          __end_of_LEDsOn 18A1          __end_ofi1_send_2length_2bytes_IK 26E2  
                         ?_LED_readConfig 00C6             __size_of_do_I2C_SEND_ADR_READ 000C  
                        ??i1_do_I2C_RESET 0070                               ___ftmul@exp 00A0  
                            ??_i2c_poller 0037                            _TMR0_StopTimer 246E  
                             _do_I2C_IDLE 2598                               _do_I2C_RCEN 25AB  
                       __size_ofi1_LEDsOn 0021                   LED_testComm@topOrBottom 00CA  
    __end_of_TMR2_DefaultInterruptHandler 2586     __size_of_TMR2_DefaultInterruptHandler 0009  
            _TMR2_DefaultInterruptHandler 257D               __end_of_send_last_2bytes_IK 1FA7  
                           ?_startAbsMove 00B5                            __end_of___wmul 2766  
                          __end_of_doMove 07FE                              _EUSART_Write 1976  
                       __size_of_TMR0_ISR 000D                               ?_initialize 0070  
                              ?i1_i2c_ISR 0070                         __size_of_TMR2_ISR 000D  
                      _mssp1_IRQisEnabled 25B5                    i1_i2c1_driver_sendNACK 24AB  
                        ?i1_do_I2C_DO_ACK 0070                    ?_OSCILLATOR_Initialize 0070  
            __size_of_do_I2C_DO_NACK_STOP 0008          TMR2_LoadPeriodRegister@periodVal 0031  
                          __end_of_printf 074A                        _mssp1_waitForEvent 25D5  
     __size_ofi1_send_2bytes_latchless_IK 0029                    i1_i2c1_driver_resetBus 1828  
                          __end_of_strchr 272E           __size_of_LED_setBrightnessRange 00DE  
                 ?_do_I2C_DO_NACK_RESTART 0070                            __end_of_strtok 1E0D  
                          __end_of_strspn 1B28                         setHeaterPreTime@t 00BD  
                     start_initialization 0051                             ?_startRelMove 00B5  
                       ?_setHeaterPreTime 00BD                       _i2c_busCollisionISR 2477  
                __size_of_TMR0_Initialize 0014           __size_of_PIN_MANAGER_Initialize 0034  
                     ?_mssp1_IRQisEnabled 0070                            ?i1_returnReset 0070  
                ?i1_i2c1_driver_getRXData 0070                    __end_of_calcHeaterPins 0946  
                   __size_of_LED_testComm 0079                            _TMR2_StopTimer 2471  
                           ??_EUSART_Read 0031       __end_ofi1_do_I2C_SEND_RESTART_WRITE 24B7  
             i1_do_I2C_SEND_RESTART_WRITE 24B3                              _first_bottom 015E  
                      ??_setHeaterPreTime 00BF                               ?_setDrvGain 00B5  
                             ?_setDrvPeak 00B5                       ?_mssp1_waitForEvent 0070  
                           _second_bottom 0156                               putch@txData 0033  
                      __end_of_i2c_poller 25EB              __size_of_i2c1_driver_sendACK 0004  
                     __end_of_getMoveMask 1DC2                   i2c_setBuffer@bufferSize 0033  
                                ??_LEDsOn 004A                   ??_i2c1_driver_getRXData 0031  
                   __size_of_drv_write_DC 0050              __size_of_i2c1_driver_restart 0003  
            __size_of_i2c1_driver_startRX 0003                           ___llmod@divisor 003F  
                           ??_LED_getData 00B9                       __size_of_fifo_check 0011  
                         ___llmod@counter 0048                     __end_of_i2c_setBuffer 183F  
                     __end_of_getPosition 1A3E                    __end_of_TMR0_StopTimer 2471  
                     _heater_post_time_ms 005A                     i1_send_last_2bytes_IK 1CE3  
     LED_setBrightnessRange@LED_configReg 0048                      ?_i2c_busCollisionISR 0070  
                        __CFG_LPBOREN$OFF 0000                      __end_of_mssp1_setIRQ 24A4  
                            _drv_peak_val 00EE                      ??_mssp1_IRQisEnabled 0031  
                        i1_do_I2C_TX$1114 0073                                LEDsPwr@pwr 0044  
                        ??_PMD_Initialize 0031                     __end_ofi1_do_I2C_IDLE 24E7  
                   __end_ofi1_do_I2C_RCEN 24F7                                  ??___wmul 0035  
                  ?i1_do_I2C_SEND_RESTART 0070                      ??_mssp1_waitForEvent 0031  
                                ??_doMove 00BF                          i1_mssp1_clearIRQ 2489  
                          ??_startAbsMove 0049                             ?_do_I2C_RESET 0070  
                             __pdataBANK0 0058                               __pdataBANK1 00EA  
                             __pdataBANK4 0220                 _do_I2C_TX_EMPTY$intlevel0 1A6D  
           ?_TMR2_DefaultInterruptHandler 0070                               ?_returnStop 0031  
                       _setDrvPiezoOnTime 14BD                              _LED_testComm 0946  
                                ??_printf 00A6                                  ??_strchr 0035  
          i1send_2bytes_latchless_IK@data 0070            __end_of_do_I2C_DO_NACK_RESTART 257D  
                                ??_strtok 0041                                  ??_strspn 003A  
                    _i2c1_driver_sendNACK 0800                         __size_of___awtoft 0022  
                       __size_of___ftpack 0065                        ?_setDrvPiezoOnTime 00BD  
             __end_of_EUSART_Transmit_ISR 2784                            ??_startRelMove 0049  
                i1_do_I2C_DO_ADDRESS_NACK 18E6                    __end_of_TMR2_StopTimer 2474  
                          setDrvGain@gain 00B5                               __pbssCOMMON 007D  
                                ?_LEDsPwr 0044                                 ___latbits 0003  
                    _i2c1_driver_resetBus 1829                              _drv_write_DC 1E5B  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK3 01EC                             __pcstackBANK4 0240  
                         fifo_check@reply 00B7         __size_ofi1_do_I2C_DO_NACK_RESTART 0004  
                __size_of_TMR2_Initialize 0012                                 _do_I2C_RX 1C58  
               ?i1_do_I2C_DO_NACK_RESTART 0070                                 _do_I2C_TX 1FA7  
                         ?_calcHeaterPins 0070                   ??i1_do_I2C_DO_NACK_STOP 0070  
                               _doAbsMove 00A1                  __size_of_setHeaterToggle 0076  
                            _isdigit$2092 0031                       ??_setDrvPiezoOnTime 00BF  
                           ?_zeroPosition 00B5                             LEDsOn@LEDpins 0044  
          __size_of_do_I2C_SEND_ADR_WRITE 000B             __size_ofi1_i2c1_driver_TXData 0005  
              __end_of_EUSART_Receive_ISR 274A             __end_of_do_I2C_SEND_ADR_WRITE 25D5  
              __size_of_EUSART_Initialize 001A                                sin@coeff_a 2907  
                              sin@coeff_b 296A                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070           _do_I2C_SEND_ADR_WRITE$intlevel0 25CE  
        __size_ofi1_do_I2C_SEND_ADR_WRITE 0007                       __size_of_initialize 00B9  
                     __end_of_EUSART_Read 2800              __size_of_TMR0_Load8bitPeriod 0005  
                               _doRelMove 0E04                           _do_I2C_TX_EMPTY 1A69  
                       parseCmd@cmdString 0047                     _TMR0_InterruptHandler 016E  
                               __pnvBANK0 005E                                 __pnvBANK2 016C  
                  _LED_setBrightnessRange 0C45                   ??i1_i2c1_driver_sendACK 0070  
                __size_of_TMR0_StartTimer 0003                         __size_of_drv_read 0047  
                         ?_TMR0_StopTimer 0070                     ??_i2c_busCollisionISR 0070  
           __size_ofi1_i2c1_driver_isNACK 000C                    _PIN_MANAGER_Initialize 1B28  
                 ??i1_i2c1_driver_restart 0070                                 _getActive 1D2C  
                       __size_of_parseCmd 0184                              setDrvPeak@pk 00B5  
                    EUSART_Read@readValue 0032                   ??i1_i2c1_driver_startRX 0070  
                          ??_do_I2C_RESET 0031                  i1_send_2length_2bytes_IK 26CA  
                     __end_of_LED_getData 145C                                  ?___awdiv 0031  
                               __ptext100 26B5                                 __ptext101 24CB  
                               __ptext110 27E0                                 __ptext102 2669  
                               __ptext103 258F                                 __ptext120 24F1  
                               __ptext112 27C0                                 __ptext104 268D  
                               __ptext121 252E                                 __ptext113 2489  
                               __ptext105 2586                                 __ptext130 2486  
                               __ptext122 2535                                 __ptext114 1B93  
                               __ptext106 253D                                 __ptext131 25EB  
                               __ptext123 24BB                                 __ptext115 1E0D  
                               __ptext107 1B28                                 __ptext140 247A  
                               __ptext132 24DD                                 __ptext124 24B7  
                               __ptext116 18E6                                 __ptext108 25A1  
                               __ptext141 24A7                                 __ptext133 2483  
                               __ptext125 24B3                                 __ptext117 24C7  
                               __ptext109 26FA                                  ?___ftadd 00A6  
                               __ptext150 185F                                 __ptext142 2477  
                               __ptext134 24AB                                 __ptext126 24AF  
                               __ptext118 24C3                                 __ptext151 26CA  
                               __ptext143 2474                                 __ptext135 1828  
                               __ptext127 24E2                                 __ptext119 24BF  
                               __ptext152 1CE3                                 __ptext144 2610  
                               __ptext136 2480                                 __ptext128 2527  
                               __ptext153 19C1                                 __ptext145 257D  
                               __ptext137 07FE                                 __ptext129 19EA  
                               __ptext154 24D3                                 __ptext146 24D8  
                               __ptext138 0002                                 __ptext155 246E  
                               __ptext147 2471                                 __ptext139 247D  
                               __ptext156 2766                                 __ptext148 2603  
                               __ptext157 272E                                 __ptext149 1B5C  
             __end_of_i2c_masterOperation 192E                                  ?___lldiv 0031  
                                ?___ftmul 003F                                  ?___llmod 003F  
                                ?___fttol 00AF                                 _commCheck 0B7C  
               __end_of_setDrvPiezoOnTime 1520                  ??_do_I2C_DO_ADDRESS_NACK 0031  
             _i2c1_driver_busCollisionISR 0050                              _eusartRxHead 0056  
                     __size_of_setDrvGain 0043         __size_of_send_2bytes_latchless_IK 0030  
                            _eusartTxHead 007D                       __size_of_setDrvPeak 000F  
                            _eusartRxTail 0055                 ?_send_2bytes_latchless_IK 0031  
                            _eusartTxTail 0057                           doAbsMove@i_1546 00C9  
                         doAbsMove@i_1548 00C7                     __end_of_do_I2C_DO_ACK 256D  
                   _setLEDBrightnessRange 2784                               ??i1_i2c_ISR 0075  
            ??_INTERRUPT_InterruptManager 007C                                 __pswtext1 1800  
              ??_do_I2C_SEND_RESTART_READ 0031                     ?_i2c1_driver_sendNACK 0070  
         __end_ofi1_i2c1_driver_getRXData 2486                   _eusartTxBufferRemaining 005E  
                                ?_execCmd 0070                  ??i1_do_I2C_SEND_ADR_READ 0071  
                        ??_mssp1_clearIRQ 0031                                  _BAUD1CON 019F  
                         ??i1_returnReset 0071                                  ?_isdigit 0070  
                  LED_testComm@readResult 00CC                           ?_TMR2_StopTimer 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0008  
                               _first_top 015A                               _getMoveMask 1D77  
                 send_last_2bytes_IK@data 0031                             ??_setMoveMask 00B9  
                   __end_of_drv_fifo_sine 10F4                         parseCmd@paramIter 0048  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                               _drv_write 192E                                ?_doAbsMove 0070  
                       _i2c1_driver_start 2492                            ??_zeroPosition 00B7  
             send_2length_2bytes_IK@data1 003C               send_2length_2bytes_IK@data2 003E  
                               _setLEDPwr 27A2            send_last_2bytes_IK@topOrBottom 0034  
                                ?_stricmp 0033                                  ?_strcspn 0038  
                                ?_toupper 0070                               _getPosition 1A14  
                 __size_ofi1_mssp1_setIRQ 0003                            __size_of_putch 0006  
                       _i2c_ISR$intlevel0 199F                        ?_i2c1_driver_start 0070  
                          _eusartRxBuffer 01D0                             zeroPosition@i 0049  
                               _setActive 09BF                         ??_TMR0_Initialize 0033  
                          _eusartTxBuffer 013E                            ___wmul@product 0035  
                                _LATAbits 010C                                  _LATBbits 010D  
                                _LATCbits 010E                    ?i1_send_last_2bytes_IK 0070  
                              ?_doRelMove 0070                  ??_send_2length_2bytes_IK 0043  
                     __size_of_returnStop 0006                 i1send_last_2bytes_IK@data 0070  
                               clear_ram0 250F                                  _PIE0bits 0090  
                                _PIE1bits 0091                  __size_of_TMR2_StartTimer 0003  
             __end_of_TMR0_Write8bitTimer 24D8                       ??_i2c1_driver_start 0031  
                                i1_LEDsOn 185F       __size_of_INTERRUPT_InterruptManager 004B  
                                _LEDpower 2A2B                ??_TMR0_SetInterruptHandler 0033  
                                _PIR0bits 0010                                  _PIR1bits 0011  
                              ?_getActive 00B5                    _currentPositions_steps 01A0  
                      _heater_pre_time_ms 005C                  LED_testComm@oldConfigReg 00CE  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
                                _TMR0_ISR 2603                                  _TMR2_ISR 2610  
                              ?_commCheck 00D2                                  _SSP1STAT 0214  
              __end_ofi1_i2c1_driver_stop 2480                              ??_fifo_check 004D  
                       ___wmul@multiplier 0031                         ?_do_I2C_SEND_STOP 0070  
             ?i1_do_I2C_SEND_RESTART_READ 0070                                printf@flag 00B2  
                              printf@prec 00AC            ??_TMR2_DefaultInterruptHandler 0071  
       __size_of_TMR2_SetInterruptHandler 0009                  __size_of_TMR2_WriteTimer 0005  
               __end_of_i2c1_driver_start 2495                             ??_returnReset 0032  
                      ??_do_I2C_SEND_STOP 0031                 ?_TMR2_SetInterruptHandler 0031  
             __size_of_i2c1_driver_TXData 0006                          __size_of_LEDsPwr 0064  
       __end_of_do_I2C_SEND_RESTART_WRITE 2555                                ?_drv_write 0049  
                             _EUSART_Read 27E0                   __end_of_do_I2C_TX_EMPTY 1A98  
                       doAbsMove@allThere 00C3         send_2length_2bytes_IK@latch_start 0040  
     i1send_2length_2bytes_IK@latch_start 0024                                ?_setLEDPwr 00B5  
                        ??_LED_readConfig 0049                      __end_of_startAbsMove 26B5  
            __size_of_do_I2C_SEND_RESTART 0008               __size_of_i2c1_driver_isNACK 000D  
                 _do_I2C_DO_ACK$intlevel0 2569                                ?_setActive 00B5  
                     __end_of_setMoveMask 14BD                             ?i1_returnStop 0070  
                   __size_of_mssp1_setIRQ 0003                         ??_TMR2_Initialize 0033  
                       ??_setHeaterToggle 00B9                       _do_I2C_DO_NACK_STOP 256D  
                             _LED_getData 1400                          __size_of_i2c_ISR 0026  
                      __end_of_fifo_check 2669                           i1LEDsOn@LEDpins 0027  
                           drv_write@data 0049                             drv_write_DC@i 00BD  
                           drv_write@buff 004C                      __end_of_startRelMove 268D  
                            ?_do_I2C_IDLE 0070                              ?_do_I2C_RCEN 0070  
                      _LED_test_openshort 164C                   ?i1_i2c1_driver_sendNACK 0070  
                 ??_OSCILLATOR_Initialize 0031                __size_of_setDrvPiezoOnTime 0063  
                  ?_setLEDBrightnessRange 00B5                         ??_TMR0_StartTimer 0031  
                     _i2c1_driver_sendACK 24CF                          __size_of___awdiv 0052  
                        __size_of___ftadd 011A           __size_of_do_I2C_DO_ADDRESS_NACK 002B  
        i1send_last_2bytes_IK@latch_start 0072                          __size_of___lldiv 0053  
                        __size_of___ftmul 00E1                       i2c1_driver_TXData@d 0031  
                        __size_of___llmod 0043                          __size_of___fttol 0087  
                  ??_i2c1_driver_sendNACK 0031                              ??_initialize 00BD  
                                ___awtoft 18A1                   ?i1_i2c1_driver_resetBus 0070  
                                ___ftpack 15E7                             ??i1_do_I2C_RX 0070  
                           ??i1_do_I2C_TX 0071        _do_I2C_SEND_RESTART_READ$intlevel0 2549  
                     _i2c1_driver_restart 2495                                 parseCmd@p 004A  
                               parseCmd@s 0045               __size_ofi1_do_I2C_SEND_STOP 0004  
                           LEDsPwr@pwrAll 00A0                      ?_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_startRX 249B                       ?_LED_test_openshort 00B5  
            __end_of_do_I2C_SEND_ADR_READ 2603                    ??_i2c1_driver_resetBus 0031  
         __size_ofi1_do_I2C_SEND_ADR_READ 0008                      _demoHeaterToggle_bot 0146  
                        __size_of_execCmd 01AA                  ?_TMR2_LoadPeriodRegister 0070  
                    _demoHeaterToggle_top 014A                                _T0CON0bits 0017  
                        __size_of_isdigit 000F                                  _demoLong 00EA  
                            _mssp1_setIRQ 24A1                               ??_do_I2C_RX 0031  
                             ??_do_I2C_TX 0032                               ??_doAbsMove 0240  
                                __ptext10 274A                                  __ptext11 0AC3  
                                __ptext20 0857                                  __ptext12 02EA  
                                __ptext21 1520                                  __ptext13 16B5  
                                __ptext30 1A14                                  __ptext22 1EFD  
                                __ptext14 267B                                  __ptext31 1D77  
                                __ptext23 24EC                                  __ptext15 26A1  
                                __ptext40 0E04                                  __ptext32 18C3  
                                __ptext24 14BD                                  __ptext16 145C  
                                __ptext41 00A1                                  __ptext33 1D2C  
                                __ptext25 0EE6                                  __ptext17 27A2  
                                __ptext50 1BD2                                  __ptext42 074A  
                                __ptext34 0B7C                                  __ptext26 24E7  
                                __ptext18 1583                                  __ptext51 0804  
                                __ptext43 1E5B                                  __ptext35 164C  
                                __ptext27 262A                                  __ptext19 2784  
                                __ptext60 1FA7                                  __ptext52 182A  
                                __ptext44 2658                                  __ptext36 0946  
                                __ptext28 1C15                                  __ptext61 1A3E  
                                __ptext53 190A                                  __ptext45 1C9C  
                                __ptext37 0C45                                  __ptext29 09BF  
                                __ptext70 254D                                  __ptext62 2575  
                                __ptext54 25B5                                  __ptext46 192E  
                                __ptext38 1952                                  __ptext71 2545  
                                __ptext63 256D                                  __ptext55 25E0  
                                __ptext47 0618                                  __ptext39 1400  
                                __ptext80 1829                                  __ptext72 2598  
                                __ptext64 2565                                  __ptext56 25D5  
                                __ptext48 2509                                  __ptext81 249B  
                                __ptext73 25BF                                  __ptext65 25AB  
                                __ptext57 199B                                  __ptext49 1976  
                                __ptext90 0A3C                                  __ptext82 24FD  
                                __ptext74 1A69                                  __ptext66 25CA  
                                __ptext58 24A4                                  __ptext91 0D23  
                                __ptext83 24F7                                  __ptext75 24A1  
                                __ptext67 25F7                                  __ptext59 1C58  
                                __ptext92 18A1                                  __ptext84 2498  
                                __ptext76 261D                                  __ptext68 255D  
                                __ptext93 15E7                                  __ptext85 2495  
                                __ptext77 2503                                  __ptext69 2555  
                                __ptext94 248F                                  __ptext86 24CF  
                                __ptext78 249E                                  __ptext95 248C  
                                __ptext87 2492                                  __ptext79 0800  
                                __ptext96 1880                                  __ptext88 1EAB  
                                __ptext97 26E2                                  __ptext89 08CD  
                                __ptext98 1F4F                                  __ptext99 1A98  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
                            ??_setDrvGain 00B7                              ??_setDrvPeak 0049  
                __end_ofi1_mssp1_clearIRQ 248C              send_2bytes_latchless_IK@data 0031  
                    ?_i2c1_driver_sendACK 0070                      __end_of_do_I2C_RESET 25CA  
                     i1LEDsOn@topOrBottom 002B                          __size_of_stricmp 0034  
                        __size_of_strcspn 0030                          __size_of_toupper 0010  
                          ??i1_returnStop 0071                   i1_do_I2C_SEND_ADR_WRITE 252E  
                    ?_i2c1_driver_restart 0070                       __end_of_returnReset 2503  
                                _drv_read 1C9C                                  _drv_sine 12DA  
                        _i2c1_driver_stop 2498                             __size_of_atoi 0071  
                           __size_of_main 006F                      ?_i2c1_driver_startRX 0070  
                                _errorOut 016A                      ??_LED_test_openshort 00B9  
                                _readdata 01D8            __size_of_i2c1_driver_getRXData 0003  
                             ??_doRelMove 00C3             __end_of_i2c1_driver_getRXData 24A1  
                                _parseCmd 0494                        __end_of_initialize 0B7C  
         __size_of_send_2length_2bytes_IK 0018      __end_of_TMR0_DefaultInterruptHandler 1B93  
   __size_of_TMR0_DefaultInterruptHandler 0037              _TMR0_DefaultInterruptHandler 1B5C  
                __size_of_getMotionStatus 0023                 __size_of_setHeaterPreTime 0063  
                 ??i1_do_I2C_SEND_RESTART 0070          __size_ofi1_i2c1_driver_getRXData 0003  
                                _moveMask 00D4                   i2c_masterOperation@read 0038  
                             ??_getActive 0049                                _RC1STAbits 019D  
    __size_ofi1_do_I2C_SEND_RESTART_WRITE 0004            __end_ofi1_i2c1_driver_sendNACK 24AF  
                              _RB5PPSbits 0E9D                          setMoveMask@onOff 00B7  
                              _RB6PPSbits 0E9E                                  int$flags 007E  
              ??i1_do_I2C_DO_ADDRESS_NACK 0070                                  atoi@sign 003B  
                             ??_commCheck 01EC          __end_ofi1_do_I2C_DO_NACK_RESTART 24CB  
                       _LED_configReg_bot 014E            __end_ofi1_i2c1_driver_resetBus 1829  
                    __end_of_zeroPosition 1720                         _LED_configReg_top 0152  
                       ??_TMR2_StartTimer 0031                                _RC7PPSbits 0EA7  
      __end_of_INTERRUPT_InterruptManager 004F                _INTERRUPT_InterruptManager 0004  
                               printf@val 00AE                              _SSP1STATbits 0214  
                      __end_of_setDrvGain 1C58          __end_of_do_I2C_SEND_RESTART_READ 254D  
                      __end_of_setDrvPeak 2639                              ??_returnStop 0032  
                                execCmd@s 01ED                     ??_do_I2C_DO_NACK_STOP 0031  
                        ??_calcHeaterPins 0031                       _TMR0_Load8bitPeriod 24E7  
               mssp1_waitForEvent@timeout 0031                                _INTCONbits 000B  
            __size_of_send_last_2bytes_IK 0058                               _NVMCON1bits 0895  
              __size_of_i2c1_driver_start 0003                               _setMoveMask 145C  
                     __end_ofi1_do_I2C_RX 1BD2                            __pstringtext10 296A  
                          __pstringtext11 2800                            __pstringtext20 28D7  
                          __pstringtext12 281F                       __end_ofi1_do_I2C_TX 1E5B  
                          __pstringtext21 28E7                            __pstringtext13 283D  
                          __pstringtext30 2982                            __pstringtext22 28F7  
                          __pstringtext14 2859                            __pstringtext31 298D  
                          __pstringtext23 2916                            __pstringtext15 2873  
                          __pstringtext40 29DA                            __pstringtext32 2998  
                          __pstringtext24 2925                            __pstringtext16 288C  
                          __pstringtext41 29E2                            __pstringtext33 29A1  
                          __pstringtext25 2934                            __pstringtext17 28A3  
                          __pstringtext50 2A13                            __pstringtext42 29EA  
                          __pstringtext34 29AA                            __pstringtext26 2942  
                          __pstringtext18 28B5                            __pstringtext51 2A17  
                          __pstringtext43 29F1                            __pstringtext35 29B2  
                          __pstringtext27 2950                            __pstringtext19 28C6  
                          __pstringtext52 2A1B                            __pstringtext44 29F6  
                          __pstringtext36 29BA                            __pstringtext28 295D  
                          __pstringtext53 2A25                            __pstringtext45 29FB  
                          __pstringtext37 29C2                            __pstringtext29 2976  
                          __pstringtext54 2A28                            __pstringtext46 2A00  
                          __pstringtext38 29CA                            __pstringtext55 2A2D  
                          __pstringtext47 2A05                            __pstringtext39 29D2  
                          __pstringtext56 2A2F                            __pstringtext48 2A0A  
                          __pstringtext57 2A31                            __pstringtext49 2A0F  
                          __pstringtext58 0000                                  isdigit@c 0032  
                             ??_drv_write 004A                  __size_ofi1_do_I2C_DO_ACK 0004  
                             ??_setLEDPwr 004E                     ??_i2c1_driver_sendACK 0031  
                        ?_do_I2C_TX_EMPTY 0070                            i1_mssp1_setIRQ 2486  
                 __size_of_WDT_Initialize 0004                    _do_I2C_DO_ADDRESS_NACK 1A3E  
          __size_ofi1_do_I2C_DO_NACK_STOP 0004                                  intlevel1 0000  
           __end_ofi1_do_I2C_DO_NACK_STOP 24C7                    _do_I2C_RESET$intlevel0 25C3  
                        ??_TMR0_StopTimer 0070                     ??_i2c1_driver_restart 0031  
                       ??_TMR2_WriteTimer 0070                   ?_LED_setBrightnessRange 0044  
                             ??_setActive 00B9                                 strchr@chr 0033  
                   ??_i2c1_driver_startRX 0031                                 strchr@ptr 0031  
              ??i1_send_2length_2bytes_IK 007B                          ___lldiv@dividend 0035  
                 ?_PIN_MANAGER_Initialize 0070                      ?_TMR0_Load8bitPeriod 0070  
            ??i1_send_2bytes_latchless_IK 0072                    i1_do_I2C_SEND_ADR_READ 2535  
                       __CFG_CLKOUTEN$OFF 0000                                 stricmp@s1 0038  
                               stricmp@s2 0033                                 strcspn@s1 003E  
                               strcspn@s2 0038                        __end_of_returnStop 24FD  
                            getMoveMask@i 00B7       __size_ofi1_do_I2C_SEND_RESTART_READ 0004  
          __size_ofi1_i2c1_driver_sendACK 0004             ?_TMR0_DefaultInterruptHandler 0070  
           __end_ofi1_i2c1_driver_sendACK 24AB               __size_of_mssp1_IRQisEnabled 000A  
          __size_ofi1_i2c1_driver_restart 0003                                  printf@ap 00B3  
           __end_ofi1_i2c1_driver_restart 247D                        _EUSART_Receive_ISR 272E  
             __size_of_mssp1_waitForEvent 000B            __size_ofi1_i2c1_driver_startRX 0003  
            __end_ofi1_i2c1_driver_TXData 24E2             __end_ofi1_i2c1_driver_startRX 2483  
                        ??_TMR2_StopTimer 0070           __end_of_TMR2_LoadPeriodRegister 24F1  
                           __pstringtext1 1000                             __pstringtext2 11E8  
                           __pstringtext3 12DA                             __pstringtext4 2000  
                           __pstringtext5 2A1F                             __pstringtext6 2A22  
                           __pstringtext7 2A2B                             __pstringtext8 10F4  
                           __pstringtext9 2907                   __size_ofi1_do_I2C_RESET 0007  
                  _send_2length_2bytes_IK 26E2                       ?_EUSART_Receive_ISR 0070  
            __end_ofi1_i2c1_driver_isNACK 25F7                                _TMR0_RANGE 2A22  
                        ___lldiv@quotient 003A                           _TMR0_Initialize 268D  
                                stricmp@r 0037                                _TMR2_RANGE 2A1F  
                                strcspn@i 003C         send_2length_2bytes_IK@topOrBottom 0041  
     i1send_2length_2bytes_IK@topOrBottom 0025                    __size_of_i2c_setBuffer 0015  
                            ?_getMoveMask 00B5                     __size_of_startAbsMove 0014  
                                toupper@c 0032                    __end_ofi1_mssp1_setIRQ 2489  
                             _returnReset 24FD                                  strtok@s1 0044  
                                strtok@s2 003F                                  strspn@s1 003E  
                                strspn@s2 0038          _do_I2C_DO_NACK_RESTART$intlevel0 2579  
                                strtok@sp 0052                 ??i1_do_I2C_SEND_ADR_WRITE 0071  
          __end_of_LED_setBrightnessRange 0D23                              getPosition@a 00B5  
                            ?_getPosition 00B5                    __size_ofi1_do_I2C_IDLE 0005  
                  __size_ofi1_do_I2C_RCEN 0006                   ??i1_send_last_2bytes_IK 0075  
                      EUSART_Write@txData 0032              __size_of_EUSART_Transmit_ISR 001E  
          __end_of_PIN_MANAGER_Initialize 1B5C               __end_of_i2c_busCollisionISR 247A  
                   __size_of_startRelMove 0012                     ??_TMR0_Load8bitPeriod 0031  
                     setMoveMask@probeNum 00B5                      ??_EUSART_Receive_ISR 0070  
                   _TMR2_InterruptHandler 016C                     _do_I2C_SEND_ADR_WRITE 25CA  
                    _do_I2C_SEND_ADR_READ 25F7  
