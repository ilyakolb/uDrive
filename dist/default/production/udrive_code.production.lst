

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 30 14:34:34 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	stringtext12,global,class=STRCODE,delta=2
    23                           	psect	stringtext13,global,class=STRCODE,delta=2
    24                           	psect	stringtext14,global,class=STRCODE,delta=2
    25                           	psect	stringtext15,global,class=STRCODE,delta=2
    26                           	psect	stringtext16,global,class=STRCODE,delta=2
    27                           	psect	stringtext17,global,class=STRCODE,delta=2
    28                           	psect	stringtext18,global,class=STRCODE,delta=2
    29                           	psect	stringtext19,global,class=STRCODE,delta=2
    30                           	psect	stringtext20,global,class=STRCODE,delta=2
    31                           	psect	stringtext21,global,class=STRCODE,delta=2
    32                           	psect	stringtext22,global,class=STRCODE,delta=2
    33                           	psect	stringtext23,global,class=STRCODE,delta=2
    34                           	psect	stringtext24,global,class=STRCODE,delta=2
    35                           	psect	stringtext25,global,class=STRCODE,delta=2
    36                           	psect	stringtext26,global,class=STRCODE,delta=2
    37                           	psect	stringtext27,global,class=STRCODE,delta=2
    38                           	psect	stringtext28,global,class=STRCODE,delta=2
    39                           	psect	stringtext29,global,class=STRCODE,delta=2
    40                           	psect	stringtext30,global,class=STRCODE,delta=2
    41                           	psect	stringtext31,global,class=STRCODE,delta=2
    42                           	psect	stringtext32,global,class=STRCODE,delta=2
    43                           	psect	stringtext33,global,class=STRCODE,delta=2
    44                           	psect	stringtext34,global,class=STRCODE,delta=2
    45                           	psect	stringtext35,global,class=STRCODE,delta=2
    46                           	psect	stringtext36,global,class=STRCODE,delta=2
    47                           	psect	stringtext37,global,class=STRCODE,delta=2
    48                           	psect	stringtext38,global,class=STRCODE,delta=2
    49                           	psect	stringtext39,global,class=STRCODE,delta=2
    50                           	psect	stringtext40,global,class=STRCODE,delta=2
    51                           	psect	stringtext41,global,class=STRCODE,delta=2
    52                           	psect	stringtext42,global,class=STRCODE,delta=2
    53                           	psect	stringtext43,global,class=STRCODE,delta=2
    54                           	psect	stringtext44,global,class=STRCODE,delta=2
    55                           	psect	stringtext45,global,class=STRCODE,delta=2
    56                           	psect	stringtext46,global,class=STRCODE,delta=2
    57                           	psect	stringtext47,global,class=STRCODE,delta=2
    58                           	psect	stringtext48,global,class=STRCODE,delta=2
    59                           	psect	stringtext49,global,class=STRCODE,delta=2
    60                           	psect	stringtext50,global,class=STRCODE,delta=2
    61                           	psect	stringtext51,global,class=STRCODE,delta=2
    62                           	psect	stringtext52,global,class=STRCODE,delta=2
    63                           	psect	stringtext53,global,class=STRCODE,delta=2
    64                           	psect	stringtext54,global,class=STRCODE,delta=2
    65                           	psect	stringtext55,global,class=STRCODE,delta=2
    66                           	psect	stringtext56,global,class=STRCODE,delta=2
    67                           	psect	stringtext57,global,class=STRCODE,delta=2
    68                           	psect	stringtext58,global,class=STRCODE,delta=2
    69                           	psect	stringtext59,global,class=STRCODE,delta=2
    70                           	psect	stringtext60,global,class=STRCODE,delta=2
    71                           	psect	stringtext61,global,class=STRCODE,delta=2
    72                           	psect	cinit,global,class=CODE,merge=1,delta=2
    73                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    74                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    75                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    76                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    77                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    78                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    79                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    80                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    81                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    82                           	psect	inittext,global,class=CODE,delta=2
    83                           	psect	clrtext,global,class=CODE,delta=2
    84                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    85                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    86                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    87                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    88                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    89                           	psect	text1,local,class=CODE,merge=1,delta=2
    90                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text11,local,class=CODE,merge=1,delta=2
   100                           	psect	text12,local,class=CODE,merge=1,delta=2
   101                           	psect	text13,local,class=CODE,merge=1,delta=2
   102                           	psect	text14,local,class=CODE,merge=1,delta=2
   103                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text17,local,class=CODE,merge=1,delta=2
   106                           	psect	text18,local,class=CODE,merge=1,delta=2
   107                           	psect	text19,local,class=CODE,merge=1,delta=2
   108                           	psect	swtext1,local,class=CONST,delta=2
   109                           	psect	text20,local,class=CODE,merge=1,delta=2
   110                           	psect	text21,local,class=CODE,merge=1,delta=2
   111                           	psect	text22,local,class=CODE,merge=1,delta=2
   112                           	psect	text23,local,class=CODE,merge=1,delta=2
   113                           	psect	text24,local,class=CODE,merge=1,delta=2
   114                           	psect	text25,local,class=CODE,merge=1,delta=2
   115                           	psect	text26,local,class=CODE,merge=1,delta=2
   116                           	psect	text27,local,class=CODE,merge=1,delta=2
   117                           	psect	text28,local,class=CODE,merge=1,delta=2
   118                           	psect	text29,local,class=CODE,merge=1,delta=2
   119                           	psect	text30,local,class=CODE,merge=1,delta=2
   120                           	psect	text31,local,class=CODE,merge=1,delta=2
   121                           	psect	text32,local,class=CODE,merge=1,delta=2
   122                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
   123                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
   124                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
   125                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
   126                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
   127                           	psect	text38,local,class=CODE,merge=1,delta=2
   128                           	psect	text39,local,class=CODE,merge=1,delta=2
   129                           	psect	text40,local,class=CODE,merge=1,delta=2
   130                           	psect	text41,local,class=CODE,merge=1,delta=2
   131                           	psect	text42,local,class=CODE,merge=1,delta=2
   132                           	psect	text43,local,class=CODE,merge=1,delta=2
   133                           	psect	text44,local,class=CODE,merge=1,delta=2
   134                           	psect	text45,local,class=CODE,merge=1,delta=2
   135                           	psect	text46,local,class=CODE,merge=1,delta=2
   136                           	psect	text47,local,class=CODE,merge=1,delta=2
   137                           	psect	text48,local,class=CODE,merge=1,delta=2
   138                           	psect	text49,local,class=CODE,merge=1,delta=2
   139                           	psect	text50,local,class=CODE,merge=1,delta=2
   140                           	psect	text51,local,class=CODE,merge=1,delta=2
   141                           	psect	text52,local,class=CODE,merge=1,delta=2
   142                           	psect	text53,local,class=CODE,merge=1,delta=2
   143                           	psect	text54,local,class=CODE,merge=1,delta=2
   144                           	psect	text55,local,class=CODE,merge=1,delta=2
   145                           	psect	text56,local,class=CODE,merge=1,delta=2
   146                           	psect	text57,local,class=CODE,merge=1,delta=2
   147                           	psect	text58,local,class=CODE,merge=1,delta=2
   148                           	psect	text59,local,class=CODE,merge=1,delta=2
   149                           	psect	text60,local,class=CODE,merge=1,delta=2
   150                           	psect	text61,local,class=CODE,merge=1,delta=2
   151                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
   152                           	psect	text63,local,class=CODE,merge=1,delta=2,group=2
   153                           	psect	text64,local,class=CODE,merge=1,delta=2
   154                           	psect	text65,local,class=CODE,merge=1,delta=2
   155                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
   156                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
   157                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
   158                           	psect	text69,local,class=CODE,merge=1,delta=2
   159                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
   160                           	psect	text71,local,class=CODE,merge=1,delta=2
   161                           	psect	text72,local,class=CODE,merge=1,delta=2
   162                           	psect	text73,local,class=CODE,merge=1,delta=2
   163                           	psect	text74,local,class=CODE,merge=1,delta=2
   164                           	psect	text75,local,class=CODE,merge=1,delta=2
   165                           	psect	text76,local,class=CODE,merge=1,delta=2
   166                           	psect	text77,local,class=CODE,merge=1,delta=2
   167                           	psect	text78,local,class=CODE,merge=1,delta=2
   168                           	psect	text79,local,class=CODE,merge=1,delta=2
   169                           	psect	text80,local,class=CODE,merge=1,delta=2
   170                           	psect	text81,local,class=CODE,merge=1,delta=2
   171                           	psect	text82,local,class=CODE,merge=1,delta=2
   172                           	psect	text83,local,class=CODE,merge=1,delta=2
   173                           	psect	text84,local,class=CODE,merge=1,delta=2
   174                           	psect	text85,local,class=CODE,merge=1,delta=2
   175                           	psect	text86,local,class=CODE,merge=1,delta=2
   176                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   177                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   178                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   179                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   180                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   181                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   182                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   183                           	psect	text94,local,class=CODE,merge=1,delta=2
   184                           	psect	text95,local,class=CODE,merge=1,delta=2
   185                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   186                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   187                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
   188                           	psect	text99,local,class=CODE,merge=1,inline,delta=2
   189                           	psect	text100,local,class=CODE,merge=1,delta=2,group=2
   190                           	psect	text101,local,class=CODE,merge=1,delta=2
   191                           	psect	text102,local,class=CODE,merge=1,delta=2
   192                           	psect	text103,local,class=CODE,merge=1,delta=2
   193                           	psect	text104,local,class=CODE,merge=1,delta=2
   194                           	psect	text105,local,class=CODE,merge=1,delta=2
   195                           	psect	text106,local,class=CODE,merge=1,delta=2
   196                           	psect	text107,local,class=CODE,merge=1,delta=2
   197                           	psect	text108,local,class=CODE,merge=1,delta=2
   198                           	psect	text109,local,class=CODE,merge=1,delta=2
   199                           	psect	text110,local,class=CODE,merge=1,delta=2
   200                           	psect	text111,local,class=CODE,merge=1,delta=2
   201                           	psect	text112,local,class=CODE,merge=1,delta=2
   202                           	psect	text113,local,class=CODE,merge=1,delta=2
   203                           	psect	text114,local,class=CODE,merge=1,delta=2
   204                           	psect	text115,local,class=CODE,merge=1,delta=2
   205                           	psect	text116,local,class=CODE,merge=1,delta=2
   206                           	psect	text117,local,class=CODE,merge=1,delta=2
   207                           	psect	text118,local,class=CODE,merge=1,delta=2
   208                           	psect	intentry,global,class=CODE,delta=2
   209                           	psect	text120,local,class=CODE,merge=1,delta=2
   210                           	psect	text121,local,class=CODE,merge=1,inline,delta=2
   211                           	psect	text122,local,class=CODE,merge=1,delta=2
   212                           	psect	text123,local,class=CODE,merge=1,delta=2
   213                           	psect	text124,local,class=CODE,merge=1,delta=2
   214                           	psect	text125,local,class=CODE,merge=1,delta=2
   215                           	psect	text126,local,class=CODE,merge=1,delta=2
   216                           	psect	text127,local,class=CODE,merge=1,delta=2
   217                           	psect	text128,local,class=CODE,merge=1,delta=2
   218                           	psect	text129,local,class=CODE,merge=1,delta=2
   219                           	psect	text130,local,class=CODE,merge=1,delta=2
   220                           	psect	text131,local,class=CODE,merge=1,delta=2
   221                           	psect	text132,local,class=CODE,merge=1,delta=2
   222                           	psect	text133,local,class=CODE,merge=1,delta=2
   223                           	psect	text134,local,class=CODE,merge=1,delta=2
   224                           	psect	text135,local,class=CODE,merge=1,delta=2
   225                           	psect	text136,local,class=CODE,merge=1,delta=2
   226                           	psect	text137,local,class=CODE,merge=1,delta=2
   227                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   228                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   229                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   230                           	psect	text141,local,class=CODE,merge=1,inline,delta=2
   231                           	psect	text142,local,class=CODE,merge=1,inline,delta=2
   232                           	psect	text143,local,class=CODE,merge=1,inline,delta=2
   233                           	psect	text144,local,class=CODE,merge=1,inline,delta=2
   234                           	psect	text145,local,class=CODE,merge=1,delta=2
   235                           	psect	text146,local,class=CODE,merge=1,delta=2
   236                           	psect	text147,local,class=CODE,merge=1,inline,delta=2
   237                           	psect	text148,local,class=CODE,merge=1,inline,delta=2
   238                           	psect	text149,local,class=CODE,merge=1,inline,delta=2
   239                           	psect	text150,local,class=CODE,merge=1,delta=2
   240                           	psect	text151,local,class=CODE,merge=1,inline,delta=2
   241                           	psect	text152,local,class=CODE,merge=1,delta=2
   242                           	psect	text153,local,class=CODE,merge=1,delta=2
   243                           	psect	text154,local,class=CODE,merge=1,delta=2
   244                           	psect	text155,local,class=CODE,merge=1,delta=2
   245                           	psect	text156,local,class=CODE,merge=1,delta=2
   246                           	psect	text157,local,class=CODE,merge=1,delta=2
   247                           	psect	text158,local,class=CODE,merge=1,delta=2
   248                           	psect	text159,local,class=CODE,merge=1,delta=2
   249                           	psect	text160,local,class=CODE,merge=1,delta=2
   250                           	psect	text161,local,class=CODE,merge=1,delta=2
   251                           	psect	text162,local,class=CODE,merge=1,delta=2
   252                           	psect	text163,local,class=CODE,merge=1,delta=2
   253                           	psect	text164,local,class=CODE,merge=1,delta=2
   254                           	psect	text165,local,class=CODE,merge=1,delta=2
   255                           	dabs	1,0xCA0,32
   256                           	dabs	1,0xC30,64
   257                           	dabs	1,0x2790,0,_currentPositions_steps
   258                           	dabs	1,0x7E,2
   259  0000                     
   260                           ; Version 1.45
   261                           ; Generated 16/11/2017 GMT
   262                           ; 
   263                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   264                           ; All rights reserved.
   265                           ; 
   266                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   267                           ; 
   268                           ; Redistribution and use in source and binary forms, with or without modification, are
   269                           ; permitted provided that the following conditions are met:
   270                           ; 
   271                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   272                           ;        conditions and the following disclaimer.
   273                           ; 
   274                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   275                           ;        of conditions and the following disclaimer in the documentation and/or other
   276                           ;        materials provided with the distribution.
   277                           ; 
   278                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   279                           ;        software without specific prior written permission.
   280                           ; 
   281                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   282                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   283                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   284                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   285                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   286                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   287                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   288                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   289                           ; 
   290                           ; 
   291                           ; Code-generator required, PIC16F18346 Definitions
   292                           ; 
   293                           ; SFR Addresses
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0097                     	;# 
   337  009B                     	;# 
   338  009B                     	;# 
   339  009C                     	;# 
   340  009D                     	;# 
   341  009E                     	;# 
   342  009F                     	;# 
   343  010C                     	;# 
   344  010D                     	;# 
   345  010E                     	;# 
   346  0111                     	;# 
   347  0112                     	;# 
   348  0113                     	;# 
   349  0114                     	;# 
   350  0115                     	;# 
   351  0116                     	;# 
   352  0117                     	;# 
   353  0118                     	;# 
   354  0119                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  018E                     	;# 
   358  0197                     	;# 
   359  0199                     	;# 
   360  0199                     	;# 
   361  0199                     	;# 
   362  019A                     	;# 
   363  019A                     	;# 
   364  019A                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019C                     	;# 
   371  019C                     	;# 
   372  019C                     	;# 
   373  019D                     	;# 
   374  019D                     	;# 
   375  019D                     	;# 
   376  019E                     	;# 
   377  019E                     	;# 
   378  019E                     	;# 
   379  019F                     	;# 
   380  019F                     	;# 
   381  019F                     	;# 
   382  019F                     	;# 
   383  019F                     	;# 
   384  020C                     	;# 
   385  020D                     	;# 
   386  020E                     	;# 
   387  0211                     	;# 
   388  0211                     	;# 
   389  0212                     	;# 
   390  0212                     	;# 
   391  0213                     	;# 
   392  0213                     	;# 
   393  0214                     	;# 
   394  0214                     	;# 
   395  0215                     	;# 
   396  0215                     	;# 
   397  0215                     	;# 
   398  0215                     	;# 
   399  0216                     	;# 
   400  0216                     	;# 
   401  0217                     	;# 
   402  0217                     	;# 
   403  0219                     	;# 
   404  021A                     	;# 
   405  021B                     	;# 
   406  021C                     	;# 
   407  021D                     	;# 
   408  021D                     	;# 
   409  021E                     	;# 
   410  021F                     	;# 
   411  028C                     	;# 
   412  028D                     	;# 
   413  028E                     	;# 
   414  0291                     	;# 
   415  0291                     	;# 
   416  0292                     	;# 
   417  0293                     	;# 
   418  0294                     	;# 
   419  0295                     	;# 
   420  0295                     	;# 
   421  0296                     	;# 
   422  0297                     	;# 
   423  0298                     	;# 
   424  029F                     	;# 
   425  030C                     	;# 
   426  030D                     	;# 
   427  030E                     	;# 
   428  0311                     	;# 
   429  0311                     	;# 
   430  0312                     	;# 
   431  0313                     	;# 
   432  0314                     	;# 
   433  0315                     	;# 
   434  0315                     	;# 
   435  0316                     	;# 
   436  0317                     	;# 
   437  0318                     	;# 
   438  038C                     	;# 
   439  038D                     	;# 
   440  038E                     	;# 
   441  0391                     	;# 
   442  0392                     	;# 
   443  0393                     	;# 
   444  0394                     	;# 
   445  0395                     	;# 
   446  0396                     	;# 
   447  0397                     	;# 
   448  0398                     	;# 
   449  0399                     	;# 
   450  039A                     	;# 
   451  039C                     	;# 
   452  039D                     	;# 
   453  039E                     	;# 
   454  039F                     	;# 
   455  0411                     	;# 
   456  0411                     	;# 
   457  0412                     	;# 
   458  0413                     	;# 
   459  0414                     	;# 
   460  0415                     	;# 
   461  0416                     	;# 
   462  0417                     	;# 
   463  0418                     	;# 
   464  0418                     	;# 
   465  0419                     	;# 
   466  041A                     	;# 
   467  041B                     	;# 
   468  041C                     	;# 
   469  041D                     	;# 
   470  041E                     	;# 
   471  041F                     	;# 
   472  0498                     	;# 
   473  0498                     	;# 
   474  0499                     	;# 
   475  049A                     	;# 
   476  049B                     	;# 
   477  049B                     	;# 
   478  049C                     	;# 
   479  049D                     	;# 
   480  049E                     	;# 
   481  049F                     	;# 
   482  0617                     	;# 
   483  0618                     	;# 
   484  0619                     	;# 
   485  0619                     	;# 
   486  061A                     	;# 
   487  061B                     	;# 
   488  061C                     	;# 
   489  061C                     	;# 
   490  061F                     	;# 
   491  0691                     	;# 
   492  0692                     	;# 
   493  0693                     	;# 
   494  0694                     	;# 
   495  0695                     	;# 
   496  0696                     	;# 
   497  0697                     	;# 
   498  0698                     	;# 
   499  0699                     	;# 
   500  0711                     	;# 
   501  0712                     	;# 
   502  0713                     	;# 
   503  0714                     	;# 
   504  0715                     	;# 
   505  0716                     	;# 
   506  0717                     	;# 
   507  0718                     	;# 
   508  0719                     	;# 
   509  0891                     	;# 
   510  0891                     	;# 
   511  0891                     	;# 
   512  0891                     	;# 
   513  0891                     	;# 
   514  0891                     	;# 
   515  0892                     	;# 
   516  0892                     	;# 
   517  0892                     	;# 
   518  0893                     	;# 
   519  0893                     	;# 
   520  0893                     	;# 
   521  0893                     	;# 
   522  0893                     	;# 
   523  0893                     	;# 
   524  0894                     	;# 
   525  0894                     	;# 
   526  0894                     	;# 
   527  0895                     	;# 
   528  0895                     	;# 
   529  0895                     	;# 
   530  0896                     	;# 
   531  0896                     	;# 
   532  0896                     	;# 
   533  089B                     	;# 
   534  0911                     	;# 
   535  0912                     	;# 
   536  0913                     	;# 
   537  0914                     	;# 
   538  0915                     	;# 
   539  0916                     	;# 
   540  0918                     	;# 
   541  0919                     	;# 
   542  091A                     	;# 
   543  091B                     	;# 
   544  091C                     	;# 
   545  091D                     	;# 
   546  091E                     	;# 
   547  091F                     	;# 
   548  0E0F                     	;# 
   549  0E10                     	;# 
   550  0E11                     	;# 
   551  0E12                     	;# 
   552  0E13                     	;# 
   553  0E14                     	;# 
   554  0E15                     	;# 
   555  0E16                     	;# 
   556  0E17                     	;# 
   557  0E18                     	;# 
   558  0E19                     	;# 
   559  0E1A                     	;# 
   560  0E1B                     	;# 
   561  0E1C                     	;# 
   562  0E1D                     	;# 
   563  0E1E                     	;# 
   564  0E1F                     	;# 
   565  0E20                     	;# 
   566  0E21                     	;# 
   567  0E22                     	;# 
   568  0E24                     	;# 
   569  0E25                     	;# 
   570  0E28                     	;# 
   571  0E29                     	;# 
   572  0E2A                     	;# 
   573  0E2B                     	;# 
   574  0E2C                     	;# 
   575  0E2D                     	;# 
   576  0E2E                     	;# 
   577  0E2F                     	;# 
   578  0E90                     	;# 
   579  0E91                     	;# 
   580  0E92                     	;# 
   581  0E94                     	;# 
   582  0E95                     	;# 
   583  0E9C                     	;# 
   584  0E9D                     	;# 
   585  0E9E                     	;# 
   586  0E9F                     	;# 
   587  0EA0                     	;# 
   588  0EA1                     	;# 
   589  0EA2                     	;# 
   590  0EA3                     	;# 
   591  0EA4                     	;# 
   592  0EA5                     	;# 
   593  0EA6                     	;# 
   594  0EA7                     	;# 
   595  0F0F                     	;# 
   596  0F10                     	;# 
   597  0F11                     	;# 
   598  0F12                     	;# 
   599  0F13                     	;# 
   600  0F14                     	;# 
   601  0F15                     	;# 
   602  0F16                     	;# 
   603  0F17                     	;# 
   604  0F18                     	;# 
   605  0F19                     	;# 
   606  0F1A                     	;# 
   607  0F1B                     	;# 
   608  0F1C                     	;# 
   609  0F1D                     	;# 
   610  0F1E                     	;# 
   611  0F1F                     	;# 
   612  0F20                     	;# 
   613  0F21                     	;# 
   614  0F22                     	;# 
   615  0F23                     	;# 
   616  0F24                     	;# 
   617  0F25                     	;# 
   618  0F26                     	;# 
   619  0F27                     	;# 
   620  0F28                     	;# 
   621  0F29                     	;# 
   622  0F2A                     	;# 
   623  0F2B                     	;# 
   624  0F2C                     	;# 
   625  0F2D                     	;# 
   626  0F2E                     	;# 
   627  0F2F                     	;# 
   628  0F30                     	;# 
   629  0F31                     	;# 
   630  0F32                     	;# 
   631  0F33                     	;# 
   632  0F34                     	;# 
   633  0F35                     	;# 
   634  0F36                     	;# 
   635  0F37                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  000D                     	;# 
   661  000E                     	;# 
   662  0010                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0013                     	;# 
   666  0014                     	;# 
   667  0015                     	;# 
   668  0015                     	;# 
   669  0016                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  0019                     	;# 
   675  001A                     	;# 
   676  001B                     	;# 
   677  001C                     	;# 
   678  001D                     	;# 
   679  001E                     	;# 
   680  001F                     	;# 
   681  008C                     	;# 
   682  008D                     	;# 
   683  008E                     	;# 
   684  0090                     	;# 
   685  0091                     	;# 
   686  0092                     	;# 
   687  0093                     	;# 
   688  0094                     	;# 
   689  0097                     	;# 
   690  009B                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  009F                     	;# 
   696  010C                     	;# 
   697  010D                     	;# 
   698  010E                     	;# 
   699  0111                     	;# 
   700  0112                     	;# 
   701  0113                     	;# 
   702  0114                     	;# 
   703  0115                     	;# 
   704  0116                     	;# 
   705  0117                     	;# 
   706  0118                     	;# 
   707  0119                     	;# 
   708  018C                     	;# 
   709  018D                     	;# 
   710  018E                     	;# 
   711  0197                     	;# 
   712  0199                     	;# 
   713  0199                     	;# 
   714  0199                     	;# 
   715  019A                     	;# 
   716  019A                     	;# 
   717  019A                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019B                     	;# 
   722  019B                     	;# 
   723  019C                     	;# 
   724  019C                     	;# 
   725  019C                     	;# 
   726  019D                     	;# 
   727  019D                     	;# 
   728  019D                     	;# 
   729  019E                     	;# 
   730  019E                     	;# 
   731  019E                     	;# 
   732  019F                     	;# 
   733  019F                     	;# 
   734  019F                     	;# 
   735  019F                     	;# 
   736  019F                     	;# 
   737  020C                     	;# 
   738  020D                     	;# 
   739  020E                     	;# 
   740  0211                     	;# 
   741  0211                     	;# 
   742  0212                     	;# 
   743  0212                     	;# 
   744  0213                     	;# 
   745  0213                     	;# 
   746  0214                     	;# 
   747  0214                     	;# 
   748  0215                     	;# 
   749  0215                     	;# 
   750  0215                     	;# 
   751  0215                     	;# 
   752  0216                     	;# 
   753  0216                     	;# 
   754  0217                     	;# 
   755  0217                     	;# 
   756  0219                     	;# 
   757  021A                     	;# 
   758  021B                     	;# 
   759  021C                     	;# 
   760  021D                     	;# 
   761  021D                     	;# 
   762  021E                     	;# 
   763  021F                     	;# 
   764  028C                     	;# 
   765  028D                     	;# 
   766  028E                     	;# 
   767  0291                     	;# 
   768  0291                     	;# 
   769  0292                     	;# 
   770  0293                     	;# 
   771  0294                     	;# 
   772  0295                     	;# 
   773  0295                     	;# 
   774  0296                     	;# 
   775  0297                     	;# 
   776  0298                     	;# 
   777  029F                     	;# 
   778  030C                     	;# 
   779  030D                     	;# 
   780  030E                     	;# 
   781  0311                     	;# 
   782  0311                     	;# 
   783  0312                     	;# 
   784  0313                     	;# 
   785  0314                     	;# 
   786  0315                     	;# 
   787  0315                     	;# 
   788  0316                     	;# 
   789  0317                     	;# 
   790  0318                     	;# 
   791  038C                     	;# 
   792  038D                     	;# 
   793  038E                     	;# 
   794  0391                     	;# 
   795  0392                     	;# 
   796  0393                     	;# 
   797  0394                     	;# 
   798  0395                     	;# 
   799  0396                     	;# 
   800  0397                     	;# 
   801  0398                     	;# 
   802  0399                     	;# 
   803  039A                     	;# 
   804  039C                     	;# 
   805  039D                     	;# 
   806  039E                     	;# 
   807  039F                     	;# 
   808  0411                     	;# 
   809  0411                     	;# 
   810  0412                     	;# 
   811  0413                     	;# 
   812  0414                     	;# 
   813  0415                     	;# 
   814  0416                     	;# 
   815  0417                     	;# 
   816  0418                     	;# 
   817  0418                     	;# 
   818  0419                     	;# 
   819  041A                     	;# 
   820  041B                     	;# 
   821  041C                     	;# 
   822  041D                     	;# 
   823  041E                     	;# 
   824  041F                     	;# 
   825  0498                     	;# 
   826  0498                     	;# 
   827  0499                     	;# 
   828  049A                     	;# 
   829  049B                     	;# 
   830  049B                     	;# 
   831  049C                     	;# 
   832  049D                     	;# 
   833  049E                     	;# 
   834  049F                     	;# 
   835  0617                     	;# 
   836  0618                     	;# 
   837  0619                     	;# 
   838  0619                     	;# 
   839  061A                     	;# 
   840  061B                     	;# 
   841  061C                     	;# 
   842  061C                     	;# 
   843  061F                     	;# 
   844  0691                     	;# 
   845  0692                     	;# 
   846  0693                     	;# 
   847  0694                     	;# 
   848  0695                     	;# 
   849  0696                     	;# 
   850  0697                     	;# 
   851  0698                     	;# 
   852  0699                     	;# 
   853  0711                     	;# 
   854  0712                     	;# 
   855  0713                     	;# 
   856  0714                     	;# 
   857  0715                     	;# 
   858  0716                     	;# 
   859  0717                     	;# 
   860  0718                     	;# 
   861  0719                     	;# 
   862  0891                     	;# 
   863  0891                     	;# 
   864  0891                     	;# 
   865  0891                     	;# 
   866  0891                     	;# 
   867  0891                     	;# 
   868  0892                     	;# 
   869  0892                     	;# 
   870  0892                     	;# 
   871  0893                     	;# 
   872  0893                     	;# 
   873  0893                     	;# 
   874  0893                     	;# 
   875  0893                     	;# 
   876  0893                     	;# 
   877  0894                     	;# 
   878  0894                     	;# 
   879  0894                     	;# 
   880  0895                     	;# 
   881  0895                     	;# 
   882  0895                     	;# 
   883  0896                     	;# 
   884  0896                     	;# 
   885  0896                     	;# 
   886  089B                     	;# 
   887  0911                     	;# 
   888  0912                     	;# 
   889  0913                     	;# 
   890  0914                     	;# 
   891  0915                     	;# 
   892  0916                     	;# 
   893  0918                     	;# 
   894  0919                     	;# 
   895  091A                     	;# 
   896  091B                     	;# 
   897  091C                     	;# 
   898  091D                     	;# 
   899  091E                     	;# 
   900  091F                     	;# 
   901  0E0F                     	;# 
   902  0E10                     	;# 
   903  0E11                     	;# 
   904  0E12                     	;# 
   905  0E13                     	;# 
   906  0E14                     	;# 
   907  0E15                     	;# 
   908  0E16                     	;# 
   909  0E17                     	;# 
   910  0E18                     	;# 
   911  0E19                     	;# 
   912  0E1A                     	;# 
   913  0E1B                     	;# 
   914  0E1C                     	;# 
   915  0E1D                     	;# 
   916  0E1E                     	;# 
   917  0E1F                     	;# 
   918  0E20                     	;# 
   919  0E21                     	;# 
   920  0E22                     	;# 
   921  0E24                     	;# 
   922  0E25                     	;# 
   923  0E28                     	;# 
   924  0E29                     	;# 
   925  0E2A                     	;# 
   926  0E2B                     	;# 
   927  0E2C                     	;# 
   928  0E2D                     	;# 
   929  0E2E                     	;# 
   930  0E2F                     	;# 
   931  0E90                     	;# 
   932  0E91                     	;# 
   933  0E92                     	;# 
   934  0E94                     	;# 
   935  0E95                     	;# 
   936  0E9C                     	;# 
   937  0E9D                     	;# 
   938  0E9E                     	;# 
   939  0E9F                     	;# 
   940  0EA0                     	;# 
   941  0EA1                     	;# 
   942  0EA2                     	;# 
   943  0EA3                     	;# 
   944  0EA4                     	;# 
   945  0EA5                     	;# 
   946  0EA6                     	;# 
   947  0EA7                     	;# 
   948  0F0F                     	;# 
   949  0F10                     	;# 
   950  0F11                     	;# 
   951  0F12                     	;# 
   952  0F13                     	;# 
   953  0F14                     	;# 
   954  0F15                     	;# 
   955  0F16                     	;# 
   956  0F17                     	;# 
   957  0F18                     	;# 
   958  0F19                     	;# 
   959  0F1A                     	;# 
   960  0F1B                     	;# 
   961  0F1C                     	;# 
   962  0F1D                     	;# 
   963  0F1E                     	;# 
   964  0F1F                     	;# 
   965  0F20                     	;# 
   966  0F21                     	;# 
   967  0F22                     	;# 
   968  0F23                     	;# 
   969  0F24                     	;# 
   970  0F25                     	;# 
   971  0F26                     	;# 
   972  0F27                     	;# 
   973  0F28                     	;# 
   974  0F29                     	;# 
   975  0F2A                     	;# 
   976  0F2B                     	;# 
   977  0F2C                     	;# 
   978  0F2D                     	;# 
   979  0F2E                     	;# 
   980  0F2F                     	;# 
   981  0F30                     	;# 
   982  0F31                     	;# 
   983  0F32                     	;# 
   984  0F33                     	;# 
   985  0F34                     	;# 
   986  0F35                     	;# 
   987  0F36                     	;# 
   988  0F37                     	;# 
   989  0FE4                     	;# 
   990  0FE5                     	;# 
   991  0FE6                     	;# 
   992  0FE7                     	;# 
   993  0FE8                     	;# 
   994  0FE9                     	;# 
   995  0FEA                     	;# 
   996  0FEB                     	;# 
   997  0FED                     	;# 
   998  0FEE                     	;# 
   999  0FEF                     	;# 
  1000  0000                     	;# 
  1001  0001                     	;# 
  1002  0002                     	;# 
  1003  0003                     	;# 
  1004  0004                     	;# 
  1005  0005                     	;# 
  1006  0006                     	;# 
  1007  0007                     	;# 
  1008  0008                     	;# 
  1009  0009                     	;# 
  1010  000A                     	;# 
  1011  000B                     	;# 
  1012  000C                     	;# 
  1013  000D                     	;# 
  1014  000E                     	;# 
  1015  0010                     	;# 
  1016  0011                     	;# 
  1017  0012                     	;# 
  1018  0013                     	;# 
  1019  0014                     	;# 
  1020  0015                     	;# 
  1021  0015                     	;# 
  1022  0016                     	;# 
  1023  0016                     	;# 
  1024  0017                     	;# 
  1025  0018                     	;# 
  1026  0019                     	;# 
  1027  0019                     	;# 
  1028  001A                     	;# 
  1029  001B                     	;# 
  1030  001C                     	;# 
  1031  001D                     	;# 
  1032  001E                     	;# 
  1033  001F                     	;# 
  1034  008C                     	;# 
  1035  008D                     	;# 
  1036  008E                     	;# 
  1037  0090                     	;# 
  1038  0091                     	;# 
  1039  0092                     	;# 
  1040  0093                     	;# 
  1041  0094                     	;# 
  1042  0097                     	;# 
  1043  009B                     	;# 
  1044  009B                     	;# 
  1045  009C                     	;# 
  1046  009D                     	;# 
  1047  009E                     	;# 
  1048  009F                     	;# 
  1049  010C                     	;# 
  1050  010D                     	;# 
  1051  010E                     	;# 
  1052  0111                     	;# 
  1053  0112                     	;# 
  1054  0113                     	;# 
  1055  0114                     	;# 
  1056  0115                     	;# 
  1057  0116                     	;# 
  1058  0117                     	;# 
  1059  0118                     	;# 
  1060  0119                     	;# 
  1061  018C                     	;# 
  1062  018D                     	;# 
  1063  018E                     	;# 
  1064  0197                     	;# 
  1065  0199                     	;# 
  1066  0199                     	;# 
  1067  0199                     	;# 
  1068  019A                     	;# 
  1069  019A                     	;# 
  1070  019A                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019B                     	;# 
  1076  019C                     	;# 
  1077  019C                     	;# 
  1078  019C                     	;# 
  1079  019D                     	;# 
  1080  019D                     	;# 
  1081  019D                     	;# 
  1082  019E                     	;# 
  1083  019E                     	;# 
  1084  019E                     	;# 
  1085  019F                     	;# 
  1086  019F                     	;# 
  1087  019F                     	;# 
  1088  019F                     	;# 
  1089  019F                     	;# 
  1090  020C                     	;# 
  1091  020D                     	;# 
  1092  020E                     	;# 
  1093  0211                     	;# 
  1094  0211                     	;# 
  1095  0212                     	;# 
  1096  0212                     	;# 
  1097  0213                     	;# 
  1098  0213                     	;# 
  1099  0214                     	;# 
  1100  0214                     	;# 
  1101  0215                     	;# 
  1102  0215                     	;# 
  1103  0215                     	;# 
  1104  0215                     	;# 
  1105  0216                     	;# 
  1106  0216                     	;# 
  1107  0217                     	;# 
  1108  0217                     	;# 
  1109  0219                     	;# 
  1110  021A                     	;# 
  1111  021B                     	;# 
  1112  021C                     	;# 
  1113  021D                     	;# 
  1114  021D                     	;# 
  1115  021E                     	;# 
  1116  021F                     	;# 
  1117  028C                     	;# 
  1118  028D                     	;# 
  1119  028E                     	;# 
  1120  0291                     	;# 
  1121  0291                     	;# 
  1122  0292                     	;# 
  1123  0293                     	;# 
  1124  0294                     	;# 
  1125  0295                     	;# 
  1126  0295                     	;# 
  1127  0296                     	;# 
  1128  0297                     	;# 
  1129  0298                     	;# 
  1130  029F                     	;# 
  1131  030C                     	;# 
  1132  030D                     	;# 
  1133  030E                     	;# 
  1134  0311                     	;# 
  1135  0311                     	;# 
  1136  0312                     	;# 
  1137  0313                     	;# 
  1138  0314                     	;# 
  1139  0315                     	;# 
  1140  0315                     	;# 
  1141  0316                     	;# 
  1142  0317                     	;# 
  1143  0318                     	;# 
  1144  038C                     	;# 
  1145  038D                     	;# 
  1146  038E                     	;# 
  1147  0391                     	;# 
  1148  0392                     	;# 
  1149  0393                     	;# 
  1150  0394                     	;# 
  1151  0395                     	;# 
  1152  0396                     	;# 
  1153  0397                     	;# 
  1154  0398                     	;# 
  1155  0399                     	;# 
  1156  039A                     	;# 
  1157  039C                     	;# 
  1158  039D                     	;# 
  1159  039E                     	;# 
  1160  039F                     	;# 
  1161  0411                     	;# 
  1162  0411                     	;# 
  1163  0412                     	;# 
  1164  0413                     	;# 
  1165  0414                     	;# 
  1166  0415                     	;# 
  1167  0416                     	;# 
  1168  0417                     	;# 
  1169  0418                     	;# 
  1170  0418                     	;# 
  1171  0419                     	;# 
  1172  041A                     	;# 
  1173  041B                     	;# 
  1174  041C                     	;# 
  1175  041D                     	;# 
  1176  041E                     	;# 
  1177  041F                     	;# 
  1178  0498                     	;# 
  1179  0498                     	;# 
  1180  0499                     	;# 
  1181  049A                     	;# 
  1182  049B                     	;# 
  1183  049B                     	;# 
  1184  049C                     	;# 
  1185  049D                     	;# 
  1186  049E                     	;# 
  1187  049F                     	;# 
  1188  0617                     	;# 
  1189  0618                     	;# 
  1190  0619                     	;# 
  1191  0619                     	;# 
  1192  061A                     	;# 
  1193  061B                     	;# 
  1194  061C                     	;# 
  1195  061C                     	;# 
  1196  061F                     	;# 
  1197  0691                     	;# 
  1198  0692                     	;# 
  1199  0693                     	;# 
  1200  0694                     	;# 
  1201  0695                     	;# 
  1202  0696                     	;# 
  1203  0697                     	;# 
  1204  0698                     	;# 
  1205  0699                     	;# 
  1206  0711                     	;# 
  1207  0712                     	;# 
  1208  0713                     	;# 
  1209  0714                     	;# 
  1210  0715                     	;# 
  1211  0716                     	;# 
  1212  0717                     	;# 
  1213  0718                     	;# 
  1214  0719                     	;# 
  1215  0891                     	;# 
  1216  0891                     	;# 
  1217  0891                     	;# 
  1218  0891                     	;# 
  1219  0891                     	;# 
  1220  0891                     	;# 
  1221  0892                     	;# 
  1222  0892                     	;# 
  1223  0892                     	;# 
  1224  0893                     	;# 
  1225  0893                     	;# 
  1226  0893                     	;# 
  1227  0893                     	;# 
  1228  0893                     	;# 
  1229  0893                     	;# 
  1230  0894                     	;# 
  1231  0894                     	;# 
  1232  0894                     	;# 
  1233  0895                     	;# 
  1234  0895                     	;# 
  1235  0895                     	;# 
  1236  0896                     	;# 
  1237  0896                     	;# 
  1238  0896                     	;# 
  1239  089B                     	;# 
  1240  0911                     	;# 
  1241  0912                     	;# 
  1242  0913                     	;# 
  1243  0914                     	;# 
  1244  0915                     	;# 
  1245  0916                     	;# 
  1246  0918                     	;# 
  1247  0919                     	;# 
  1248  091A                     	;# 
  1249  091B                     	;# 
  1250  091C                     	;# 
  1251  091D                     	;# 
  1252  091E                     	;# 
  1253  091F                     	;# 
  1254  0E0F                     	;# 
  1255  0E10                     	;# 
  1256  0E11                     	;# 
  1257  0E12                     	;# 
  1258  0E13                     	;# 
  1259  0E14                     	;# 
  1260  0E15                     	;# 
  1261  0E16                     	;# 
  1262  0E17                     	;# 
  1263  0E18                     	;# 
  1264  0E19                     	;# 
  1265  0E1A                     	;# 
  1266  0E1B                     	;# 
  1267  0E1C                     	;# 
  1268  0E1D                     	;# 
  1269  0E1E                     	;# 
  1270  0E1F                     	;# 
  1271  0E20                     	;# 
  1272  0E21                     	;# 
  1273  0E22                     	;# 
  1274  0E24                     	;# 
  1275  0E25                     	;# 
  1276  0E28                     	;# 
  1277  0E29                     	;# 
  1278  0E2A                     	;# 
  1279  0E2B                     	;# 
  1280  0E2C                     	;# 
  1281  0E2D                     	;# 
  1282  0E2E                     	;# 
  1283  0E2F                     	;# 
  1284  0E90                     	;# 
  1285  0E91                     	;# 
  1286  0E92                     	;# 
  1287  0E94                     	;# 
  1288  0E95                     	;# 
  1289  0E9C                     	;# 
  1290  0E9D                     	;# 
  1291  0E9E                     	;# 
  1292  0E9F                     	;# 
  1293  0EA0                     	;# 
  1294  0EA1                     	;# 
  1295  0EA2                     	;# 
  1296  0EA3                     	;# 
  1297  0EA4                     	;# 
  1298  0EA5                     	;# 
  1299  0EA6                     	;# 
  1300  0EA7                     	;# 
  1301  0F0F                     	;# 
  1302  0F10                     	;# 
  1303  0F11                     	;# 
  1304  0F12                     	;# 
  1305  0F13                     	;# 
  1306  0F14                     	;# 
  1307  0F15                     	;# 
  1308  0F16                     	;# 
  1309  0F17                     	;# 
  1310  0F18                     	;# 
  1311  0F19                     	;# 
  1312  0F1A                     	;# 
  1313  0F1B                     	;# 
  1314  0F1C                     	;# 
  1315  0F1D                     	;# 
  1316  0F1E                     	;# 
  1317  0F1F                     	;# 
  1318  0F20                     	;# 
  1319  0F21                     	;# 
  1320  0F22                     	;# 
  1321  0F23                     	;# 
  1322  0F24                     	;# 
  1323  0F25                     	;# 
  1324  0F26                     	;# 
  1325  0F27                     	;# 
  1326  0F28                     	;# 
  1327  0F29                     	;# 
  1328  0F2A                     	;# 
  1329  0F2B                     	;# 
  1330  0F2C                     	;# 
  1331  0F2D                     	;# 
  1332  0F2E                     	;# 
  1333  0F2F                     	;# 
  1334  0F30                     	;# 
  1335  0F31                     	;# 
  1336  0F32                     	;# 
  1337  0F33                     	;# 
  1338  0F34                     	;# 
  1339  0F35                     	;# 
  1340  0F36                     	;# 
  1341  0F37                     	;# 
  1342  0FE4                     	;# 
  1343  0FE5                     	;# 
  1344  0FE6                     	;# 
  1345  0FE7                     	;# 
  1346  0FE8                     	;# 
  1347  0FE9                     	;# 
  1348  0FEA                     	;# 
  1349  0FEB                     	;# 
  1350  0FED                     	;# 
  1351  0FEE                     	;# 
  1352  0FEF                     	;# 
  1353  0000                     	;# 
  1354  0001                     	;# 
  1355  0002                     	;# 
  1356  0003                     	;# 
  1357  0004                     	;# 
  1358  0005                     	;# 
  1359  0006                     	;# 
  1360  0007                     	;# 
  1361  0008                     	;# 
  1362  0009                     	;# 
  1363  000A                     	;# 
  1364  000B                     	;# 
  1365  000C                     	;# 
  1366  000D                     	;# 
  1367  000E                     	;# 
  1368  0010                     	;# 
  1369  0011                     	;# 
  1370  0012                     	;# 
  1371  0013                     	;# 
  1372  0014                     	;# 
  1373  0015                     	;# 
  1374  0015                     	;# 
  1375  0016                     	;# 
  1376  0016                     	;# 
  1377  0017                     	;# 
  1378  0018                     	;# 
  1379  0019                     	;# 
  1380  0019                     	;# 
  1381  001A                     	;# 
  1382  001B                     	;# 
  1383  001C                     	;# 
  1384  001D                     	;# 
  1385  001E                     	;# 
  1386  001F                     	;# 
  1387  008C                     	;# 
  1388  008D                     	;# 
  1389  008E                     	;# 
  1390  0090                     	;# 
  1391  0091                     	;# 
  1392  0092                     	;# 
  1393  0093                     	;# 
  1394  0094                     	;# 
  1395  0097                     	;# 
  1396  009B                     	;# 
  1397  009B                     	;# 
  1398  009C                     	;# 
  1399  009D                     	;# 
  1400  009E                     	;# 
  1401  009F                     	;# 
  1402  010C                     	;# 
  1403  010D                     	;# 
  1404  010E                     	;# 
  1405  0111                     	;# 
  1406  0112                     	;# 
  1407  0113                     	;# 
  1408  0114                     	;# 
  1409  0115                     	;# 
  1410  0116                     	;# 
  1411  0117                     	;# 
  1412  0118                     	;# 
  1413  0119                     	;# 
  1414  018C                     	;# 
  1415  018D                     	;# 
  1416  018E                     	;# 
  1417  0197                     	;# 
  1418  0199                     	;# 
  1419  0199                     	;# 
  1420  0199                     	;# 
  1421  019A                     	;# 
  1422  019A                     	;# 
  1423  019A                     	;# 
  1424  019B                     	;# 
  1425  019B                     	;# 
  1426  019B                     	;# 
  1427  019B                     	;# 
  1428  019B                     	;# 
  1429  019C                     	;# 
  1430  019C                     	;# 
  1431  019C                     	;# 
  1432  019D                     	;# 
  1433  019D                     	;# 
  1434  019D                     	;# 
  1435  019E                     	;# 
  1436  019E                     	;# 
  1437  019E                     	;# 
  1438  019F                     	;# 
  1439  019F                     	;# 
  1440  019F                     	;# 
  1441  019F                     	;# 
  1442  019F                     	;# 
  1443  020C                     	;# 
  1444  020D                     	;# 
  1445  020E                     	;# 
  1446  0211                     	;# 
  1447  0211                     	;# 
  1448  0212                     	;# 
  1449  0212                     	;# 
  1450  0213                     	;# 
  1451  0213                     	;# 
  1452  0214                     	;# 
  1453  0214                     	;# 
  1454  0215                     	;# 
  1455  0215                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0216                     	;# 
  1459  0216                     	;# 
  1460  0217                     	;# 
  1461  0217                     	;# 
  1462  0219                     	;# 
  1463  021A                     	;# 
  1464  021B                     	;# 
  1465  021C                     	;# 
  1466  021D                     	;# 
  1467  021D                     	;# 
  1468  021E                     	;# 
  1469  021F                     	;# 
  1470  028C                     	;# 
  1471  028D                     	;# 
  1472  028E                     	;# 
  1473  0291                     	;# 
  1474  0291                     	;# 
  1475  0292                     	;# 
  1476  0293                     	;# 
  1477  0294                     	;# 
  1478  0295                     	;# 
  1479  0295                     	;# 
  1480  0296                     	;# 
  1481  0297                     	;# 
  1482  0298                     	;# 
  1483  029F                     	;# 
  1484  030C                     	;# 
  1485  030D                     	;# 
  1486  030E                     	;# 
  1487  0311                     	;# 
  1488  0311                     	;# 
  1489  0312                     	;# 
  1490  0313                     	;# 
  1491  0314                     	;# 
  1492  0315                     	;# 
  1493  0315                     	;# 
  1494  0316                     	;# 
  1495  0317                     	;# 
  1496  0318                     	;# 
  1497  038C                     	;# 
  1498  038D                     	;# 
  1499  038E                     	;# 
  1500  0391                     	;# 
  1501  0392                     	;# 
  1502  0393                     	;# 
  1503  0394                     	;# 
  1504  0395                     	;# 
  1505  0396                     	;# 
  1506  0397                     	;# 
  1507  0398                     	;# 
  1508  0399                     	;# 
  1509  039A                     	;# 
  1510  039C                     	;# 
  1511  039D                     	;# 
  1512  039E                     	;# 
  1513  039F                     	;# 
  1514  0411                     	;# 
  1515  0411                     	;# 
  1516  0412                     	;# 
  1517  0413                     	;# 
  1518  0414                     	;# 
  1519  0415                     	;# 
  1520  0416                     	;# 
  1521  0417                     	;# 
  1522  0418                     	;# 
  1523  0418                     	;# 
  1524  0419                     	;# 
  1525  041A                     	;# 
  1526  041B                     	;# 
  1527  041C                     	;# 
  1528  041D                     	;# 
  1529  041E                     	;# 
  1530  041F                     	;# 
  1531  0498                     	;# 
  1532  0498                     	;# 
  1533  0499                     	;# 
  1534  049A                     	;# 
  1535  049B                     	;# 
  1536  049B                     	;# 
  1537  049C                     	;# 
  1538  049D                     	;# 
  1539  049E                     	;# 
  1540  049F                     	;# 
  1541  0617                     	;# 
  1542  0618                     	;# 
  1543  0619                     	;# 
  1544  0619                     	;# 
  1545  061A                     	;# 
  1546  061B                     	;# 
  1547  061C                     	;# 
  1548  061C                     	;# 
  1549  061F                     	;# 
  1550  0691                     	;# 
  1551  0692                     	;# 
  1552  0693                     	;# 
  1553  0694                     	;# 
  1554  0695                     	;# 
  1555  0696                     	;# 
  1556  0697                     	;# 
  1557  0698                     	;# 
  1558  0699                     	;# 
  1559  0711                     	;# 
  1560  0712                     	;# 
  1561  0713                     	;# 
  1562  0714                     	;# 
  1563  0715                     	;# 
  1564  0716                     	;# 
  1565  0717                     	;# 
  1566  0718                     	;# 
  1567  0719                     	;# 
  1568  0891                     	;# 
  1569  0891                     	;# 
  1570  0891                     	;# 
  1571  0891                     	;# 
  1572  0891                     	;# 
  1573  0891                     	;# 
  1574  0892                     	;# 
  1575  0892                     	;# 
  1576  0892                     	;# 
  1577  0893                     	;# 
  1578  0893                     	;# 
  1579  0893                     	;# 
  1580  0893                     	;# 
  1581  0893                     	;# 
  1582  0893                     	;# 
  1583  0894                     	;# 
  1584  0894                     	;# 
  1585  0894                     	;# 
  1586  0895                     	;# 
  1587  0895                     	;# 
  1588  0895                     	;# 
  1589  0896                     	;# 
  1590  0896                     	;# 
  1591  0896                     	;# 
  1592  089B                     	;# 
  1593  0911                     	;# 
  1594  0912                     	;# 
  1595  0913                     	;# 
  1596  0914                     	;# 
  1597  0915                     	;# 
  1598  0916                     	;# 
  1599  0918                     	;# 
  1600  0919                     	;# 
  1601  091A                     	;# 
  1602  091B                     	;# 
  1603  091C                     	;# 
  1604  091D                     	;# 
  1605  091E                     	;# 
  1606  091F                     	;# 
  1607  0E0F                     	;# 
  1608  0E10                     	;# 
  1609  0E11                     	;# 
  1610  0E12                     	;# 
  1611  0E13                     	;# 
  1612  0E14                     	;# 
  1613  0E15                     	;# 
  1614  0E16                     	;# 
  1615  0E17                     	;# 
  1616  0E18                     	;# 
  1617  0E19                     	;# 
  1618  0E1A                     	;# 
  1619  0E1B                     	;# 
  1620  0E1C                     	;# 
  1621  0E1D                     	;# 
  1622  0E1E                     	;# 
  1623  0E1F                     	;# 
  1624  0E20                     	;# 
  1625  0E21                     	;# 
  1626  0E22                     	;# 
  1627  0E24                     	;# 
  1628  0E25                     	;# 
  1629  0E28                     	;# 
  1630  0E29                     	;# 
  1631  0E2A                     	;# 
  1632  0E2B                     	;# 
  1633  0E2C                     	;# 
  1634  0E2D                     	;# 
  1635  0E2E                     	;# 
  1636  0E2F                     	;# 
  1637  0E90                     	;# 
  1638  0E91                     	;# 
  1639  0E92                     	;# 
  1640  0E94                     	;# 
  1641  0E95                     	;# 
  1642  0E9C                     	;# 
  1643  0E9D                     	;# 
  1644  0E9E                     	;# 
  1645  0E9F                     	;# 
  1646  0EA0                     	;# 
  1647  0EA1                     	;# 
  1648  0EA2                     	;# 
  1649  0EA3                     	;# 
  1650  0EA4                     	;# 
  1651  0EA5                     	;# 
  1652  0EA6                     	;# 
  1653  0EA7                     	;# 
  1654  0F0F                     	;# 
  1655  0F10                     	;# 
  1656  0F11                     	;# 
  1657  0F12                     	;# 
  1658  0F13                     	;# 
  1659  0F14                     	;# 
  1660  0F15                     	;# 
  1661  0F16                     	;# 
  1662  0F17                     	;# 
  1663  0F18                     	;# 
  1664  0F19                     	;# 
  1665  0F1A                     	;# 
  1666  0F1B                     	;# 
  1667  0F1C                     	;# 
  1668  0F1D                     	;# 
  1669  0F1E                     	;# 
  1670  0F1F                     	;# 
  1671  0F20                     	;# 
  1672  0F21                     	;# 
  1673  0F22                     	;# 
  1674  0F23                     	;# 
  1675  0F24                     	;# 
  1676  0F25                     	;# 
  1677  0F26                     	;# 
  1678  0F27                     	;# 
  1679  0F28                     	;# 
  1680  0F29                     	;# 
  1681  0F2A                     	;# 
  1682  0F2B                     	;# 
  1683  0F2C                     	;# 
  1684  0F2D                     	;# 
  1685  0F2E                     	;# 
  1686  0F2F                     	;# 
  1687  0F30                     	;# 
  1688  0F31                     	;# 
  1689  0F32                     	;# 
  1690  0F33                     	;# 
  1691  0F34                     	;# 
  1692  0F35                     	;# 
  1693  0F36                     	;# 
  1694  0F37                     	;# 
  1695  0FE4                     	;# 
  1696  0FE5                     	;# 
  1697  0FE6                     	;# 
  1698  0FE7                     	;# 
  1699  0FE8                     	;# 
  1700  0FE9                     	;# 
  1701  0FEA                     	;# 
  1702  0FEB                     	;# 
  1703  0FED                     	;# 
  1704  0FEE                     	;# 
  1705  0FEF                     	;# 
  1706  0000                     	;# 
  1707  0001                     	;# 
  1708  0002                     	;# 
  1709  0003                     	;# 
  1710  0004                     	;# 
  1711  0005                     	;# 
  1712  0006                     	;# 
  1713  0007                     	;# 
  1714  0008                     	;# 
  1715  0009                     	;# 
  1716  000A                     	;# 
  1717  000B                     	;# 
  1718  000C                     	;# 
  1719  000D                     	;# 
  1720  000E                     	;# 
  1721  0010                     	;# 
  1722  0011                     	;# 
  1723  0012                     	;# 
  1724  0013                     	;# 
  1725  0014                     	;# 
  1726  0015                     	;# 
  1727  0015                     	;# 
  1728  0016                     	;# 
  1729  0016                     	;# 
  1730  0017                     	;# 
  1731  0018                     	;# 
  1732  0019                     	;# 
  1733  0019                     	;# 
  1734  001A                     	;# 
  1735  001B                     	;# 
  1736  001C                     	;# 
  1737  001D                     	;# 
  1738  001E                     	;# 
  1739  001F                     	;# 
  1740  008C                     	;# 
  1741  008D                     	;# 
  1742  008E                     	;# 
  1743  0090                     	;# 
  1744  0091                     	;# 
  1745  0092                     	;# 
  1746  0093                     	;# 
  1747  0094                     	;# 
  1748  0097                     	;# 
  1749  009B                     	;# 
  1750  009B                     	;# 
  1751  009C                     	;# 
  1752  009D                     	;# 
  1753  009E                     	;# 
  1754  009F                     	;# 
  1755  010C                     	;# 
  1756  010D                     	;# 
  1757  010E                     	;# 
  1758  0111                     	;# 
  1759  0112                     	;# 
  1760  0113                     	;# 
  1761  0114                     	;# 
  1762  0115                     	;# 
  1763  0116                     	;# 
  1764  0117                     	;# 
  1765  0118                     	;# 
  1766  0119                     	;# 
  1767  018C                     	;# 
  1768  018D                     	;# 
  1769  018E                     	;# 
  1770  0197                     	;# 
  1771  0199                     	;# 
  1772  0199                     	;# 
  1773  0199                     	;# 
  1774  019A                     	;# 
  1775  019A                     	;# 
  1776  019A                     	;# 
  1777  019B                     	;# 
  1778  019B                     	;# 
  1779  019B                     	;# 
  1780  019B                     	;# 
  1781  019B                     	;# 
  1782  019C                     	;# 
  1783  019C                     	;# 
  1784  019C                     	;# 
  1785  019D                     	;# 
  1786  019D                     	;# 
  1787  019D                     	;# 
  1788  019E                     	;# 
  1789  019E                     	;# 
  1790  019E                     	;# 
  1791  019F                     	;# 
  1792  019F                     	;# 
  1793  019F                     	;# 
  1794  019F                     	;# 
  1795  019F                     	;# 
  1796  020C                     	;# 
  1797  020D                     	;# 
  1798  020E                     	;# 
  1799  0211                     	;# 
  1800  0211                     	;# 
  1801  0212                     	;# 
  1802  0212                     	;# 
  1803  0213                     	;# 
  1804  0213                     	;# 
  1805  0214                     	;# 
  1806  0214                     	;# 
  1807  0215                     	;# 
  1808  0215                     	;# 
  1809  0215                     	;# 
  1810  0215                     	;# 
  1811  0216                     	;# 
  1812  0216                     	;# 
  1813  0217                     	;# 
  1814  0217                     	;# 
  1815  0219                     	;# 
  1816  021A                     	;# 
  1817  021B                     	;# 
  1818  021C                     	;# 
  1819  021D                     	;# 
  1820  021D                     	;# 
  1821  021E                     	;# 
  1822  021F                     	;# 
  1823  028C                     	;# 
  1824  028D                     	;# 
  1825  028E                     	;# 
  1826  0291                     	;# 
  1827  0291                     	;# 
  1828  0292                     	;# 
  1829  0293                     	;# 
  1830  0294                     	;# 
  1831  0295                     	;# 
  1832  0295                     	;# 
  1833  0296                     	;# 
  1834  0297                     	;# 
  1835  0298                     	;# 
  1836  029F                     	;# 
  1837  030C                     	;# 
  1838  030D                     	;# 
  1839  030E                     	;# 
  1840  0311                     	;# 
  1841  0311                     	;# 
  1842  0312                     	;# 
  1843  0313                     	;# 
  1844  0314                     	;# 
  1845  0315                     	;# 
  1846  0315                     	;# 
  1847  0316                     	;# 
  1848  0317                     	;# 
  1849  0318                     	;# 
  1850  038C                     	;# 
  1851  038D                     	;# 
  1852  038E                     	;# 
  1853  0391                     	;# 
  1854  0392                     	;# 
  1855  0393                     	;# 
  1856  0394                     	;# 
  1857  0395                     	;# 
  1858  0396                     	;# 
  1859  0397                     	;# 
  1860  0398                     	;# 
  1861  0399                     	;# 
  1862  039A                     	;# 
  1863  039C                     	;# 
  1864  039D                     	;# 
  1865  039E                     	;# 
  1866  039F                     	;# 
  1867  0411                     	;# 
  1868  0411                     	;# 
  1869  0412                     	;# 
  1870  0413                     	;# 
  1871  0414                     	;# 
  1872  0415                     	;# 
  1873  0416                     	;# 
  1874  0417                     	;# 
  1875  0418                     	;# 
  1876  0418                     	;# 
  1877  0419                     	;# 
  1878  041A                     	;# 
  1879  041B                     	;# 
  1880  041C                     	;# 
  1881  041D                     	;# 
  1882  041E                     	;# 
  1883  041F                     	;# 
  1884  0498                     	;# 
  1885  0498                     	;# 
  1886  0499                     	;# 
  1887  049A                     	;# 
  1888  049B                     	;# 
  1889  049B                     	;# 
  1890  049C                     	;# 
  1891  049D                     	;# 
  1892  049E                     	;# 
  1893  049F                     	;# 
  1894  0617                     	;# 
  1895  0618                     	;# 
  1896  0619                     	;# 
  1897  0619                     	;# 
  1898  061A                     	;# 
  1899  061B                     	;# 
  1900  061C                     	;# 
  1901  061C                     	;# 
  1902  061F                     	;# 
  1903  0691                     	;# 
  1904  0692                     	;# 
  1905  0693                     	;# 
  1906  0694                     	;# 
  1907  0695                     	;# 
  1908  0696                     	;# 
  1909  0697                     	;# 
  1910  0698                     	;# 
  1911  0699                     	;# 
  1912  0711                     	;# 
  1913  0712                     	;# 
  1914  0713                     	;# 
  1915  0714                     	;# 
  1916  0715                     	;# 
  1917  0716                     	;# 
  1918  0717                     	;# 
  1919  0718                     	;# 
  1920  0719                     	;# 
  1921  0891                     	;# 
  1922  0891                     	;# 
  1923  0891                     	;# 
  1924  0891                     	;# 
  1925  0891                     	;# 
  1926  0891                     	;# 
  1927  0892                     	;# 
  1928  0892                     	;# 
  1929  0892                     	;# 
  1930  0893                     	;# 
  1931  0893                     	;# 
  1932  0893                     	;# 
  1933  0893                     	;# 
  1934  0893                     	;# 
  1935  0893                     	;# 
  1936  0894                     	;# 
  1937  0894                     	;# 
  1938  0894                     	;# 
  1939  0895                     	;# 
  1940  0895                     	;# 
  1941  0895                     	;# 
  1942  0896                     	;# 
  1943  0896                     	;# 
  1944  0896                     	;# 
  1945  089B                     	;# 
  1946  0911                     	;# 
  1947  0912                     	;# 
  1948  0913                     	;# 
  1949  0914                     	;# 
  1950  0915                     	;# 
  1951  0916                     	;# 
  1952  0918                     	;# 
  1953  0919                     	;# 
  1954  091A                     	;# 
  1955  091B                     	;# 
  1956  091C                     	;# 
  1957  091D                     	;# 
  1958  091E                     	;# 
  1959  091F                     	;# 
  1960  0E0F                     	;# 
  1961  0E10                     	;# 
  1962  0E11                     	;# 
  1963  0E12                     	;# 
  1964  0E13                     	;# 
  1965  0E14                     	;# 
  1966  0E15                     	;# 
  1967  0E16                     	;# 
  1968  0E17                     	;# 
  1969  0E18                     	;# 
  1970  0E19                     	;# 
  1971  0E1A                     	;# 
  1972  0E1B                     	;# 
  1973  0E1C                     	;# 
  1974  0E1D                     	;# 
  1975  0E1E                     	;# 
  1976  0E1F                     	;# 
  1977  0E20                     	;# 
  1978  0E21                     	;# 
  1979  0E22                     	;# 
  1980  0E24                     	;# 
  1981  0E25                     	;# 
  1982  0E28                     	;# 
  1983  0E29                     	;# 
  1984  0E2A                     	;# 
  1985  0E2B                     	;# 
  1986  0E2C                     	;# 
  1987  0E2D                     	;# 
  1988  0E2E                     	;# 
  1989  0E2F                     	;# 
  1990  0E90                     	;# 
  1991  0E91                     	;# 
  1992  0E92                     	;# 
  1993  0E94                     	;# 
  1994  0E95                     	;# 
  1995  0E9C                     	;# 
  1996  0E9D                     	;# 
  1997  0E9E                     	;# 
  1998  0E9F                     	;# 
  1999  0EA0                     	;# 
  2000  0EA1                     	;# 
  2001  0EA2                     	;# 
  2002  0EA3                     	;# 
  2003  0EA4                     	;# 
  2004  0EA5                     	;# 
  2005  0EA6                     	;# 
  2006  0EA7                     	;# 
  2007  0F0F                     	;# 
  2008  0F10                     	;# 
  2009  0F11                     	;# 
  2010  0F12                     	;# 
  2011  0F13                     	;# 
  2012  0F14                     	;# 
  2013  0F15                     	;# 
  2014  0F16                     	;# 
  2015  0F17                     	;# 
  2016  0F18                     	;# 
  2017  0F19                     	;# 
  2018  0F1A                     	;# 
  2019  0F1B                     	;# 
  2020  0F1C                     	;# 
  2021  0F1D                     	;# 
  2022  0F1E                     	;# 
  2023  0F1F                     	;# 
  2024  0F20                     	;# 
  2025  0F21                     	;# 
  2026  0F22                     	;# 
  2027  0F23                     	;# 
  2028  0F24                     	;# 
  2029  0F25                     	;# 
  2030  0F26                     	;# 
  2031  0F27                     	;# 
  2032  0F28                     	;# 
  2033  0F29                     	;# 
  2034  0F2A                     	;# 
  2035  0F2B                     	;# 
  2036  0F2C                     	;# 
  2037  0F2D                     	;# 
  2038  0F2E                     	;# 
  2039  0F2F                     	;# 
  2040  0F30                     	;# 
  2041  0F31                     	;# 
  2042  0F32                     	;# 
  2043  0F33                     	;# 
  2044  0F34                     	;# 
  2045  0F35                     	;# 
  2046  0F36                     	;# 
  2047  0F37                     	;# 
  2048  0FE4                     	;# 
  2049  0FE5                     	;# 
  2050  0FE6                     	;# 
  2051  0FE7                     	;# 
  2052  0FE8                     	;# 
  2053  0FE9                     	;# 
  2054  0FEA                     	;# 
  2055  0FEB                     	;# 
  2056  0FED                     	;# 
  2057  0FEE                     	;# 
  2058  0FEF                     	;# 
  2059  0000                     	;# 
  2060  0001                     	;# 
  2061  0002                     	;# 
  2062  0003                     	;# 
  2063  0004                     	;# 
  2064  0005                     	;# 
  2065  0006                     	;# 
  2066  0007                     	;# 
  2067  0008                     	;# 
  2068  0009                     	;# 
  2069  000A                     	;# 
  2070  000B                     	;# 
  2071  000C                     	;# 
  2072  000D                     	;# 
  2073  000E                     	;# 
  2074  0010                     	;# 
  2075  0011                     	;# 
  2076  0012                     	;# 
  2077  0013                     	;# 
  2078  0014                     	;# 
  2079  0015                     	;# 
  2080  0015                     	;# 
  2081  0016                     	;# 
  2082  0016                     	;# 
  2083  0017                     	;# 
  2084  0018                     	;# 
  2085  0019                     	;# 
  2086  0019                     	;# 
  2087  001A                     	;# 
  2088  001B                     	;# 
  2089  001C                     	;# 
  2090  001D                     	;# 
  2091  001E                     	;# 
  2092  001F                     	;# 
  2093  008C                     	;# 
  2094  008D                     	;# 
  2095  008E                     	;# 
  2096  0090                     	;# 
  2097  0091                     	;# 
  2098  0092                     	;# 
  2099  0093                     	;# 
  2100  0094                     	;# 
  2101  0097                     	;# 
  2102  009B                     	;# 
  2103  009B                     	;# 
  2104  009C                     	;# 
  2105  009D                     	;# 
  2106  009E                     	;# 
  2107  009F                     	;# 
  2108  010C                     	;# 
  2109  010D                     	;# 
  2110  010E                     	;# 
  2111  0111                     	;# 
  2112  0112                     	;# 
  2113  0113                     	;# 
  2114  0114                     	;# 
  2115  0115                     	;# 
  2116  0116                     	;# 
  2117  0117                     	;# 
  2118  0118                     	;# 
  2119  0119                     	;# 
  2120  018C                     	;# 
  2121  018D                     	;# 
  2122  018E                     	;# 
  2123  0197                     	;# 
  2124  0199                     	;# 
  2125  0199                     	;# 
  2126  0199                     	;# 
  2127  019A                     	;# 
  2128  019A                     	;# 
  2129  019A                     	;# 
  2130  019B                     	;# 
  2131  019B                     	;# 
  2132  019B                     	;# 
  2133  019B                     	;# 
  2134  019B                     	;# 
  2135  019C                     	;# 
  2136  019C                     	;# 
  2137  019C                     	;# 
  2138  019D                     	;# 
  2139  019D                     	;# 
  2140  019D                     	;# 
  2141  019E                     	;# 
  2142  019E                     	;# 
  2143  019E                     	;# 
  2144  019F                     	;# 
  2145  019F                     	;# 
  2146  019F                     	;# 
  2147  019F                     	;# 
  2148  019F                     	;# 
  2149  020C                     	;# 
  2150  020D                     	;# 
  2151  020E                     	;# 
  2152  0211                     	;# 
  2153  0211                     	;# 
  2154  0212                     	;# 
  2155  0212                     	;# 
  2156  0213                     	;# 
  2157  0213                     	;# 
  2158  0214                     	;# 
  2159  0214                     	;# 
  2160  0215                     	;# 
  2161  0215                     	;# 
  2162  0215                     	;# 
  2163  0215                     	;# 
  2164  0216                     	;# 
  2165  0216                     	;# 
  2166  0217                     	;# 
  2167  0217                     	;# 
  2168  0219                     	;# 
  2169  021A                     	;# 
  2170  021B                     	;# 
  2171  021C                     	;# 
  2172  021D                     	;# 
  2173  021D                     	;# 
  2174  021E                     	;# 
  2175  021F                     	;# 
  2176  028C                     	;# 
  2177  028D                     	;# 
  2178  028E                     	;# 
  2179  0291                     	;# 
  2180  0291                     	;# 
  2181  0292                     	;# 
  2182  0293                     	;# 
  2183  0294                     	;# 
  2184  0295                     	;# 
  2185  0295                     	;# 
  2186  0296                     	;# 
  2187  0297                     	;# 
  2188  0298                     	;# 
  2189  029F                     	;# 
  2190  030C                     	;# 
  2191  030D                     	;# 
  2192  030E                     	;# 
  2193  0311                     	;# 
  2194  0311                     	;# 
  2195  0312                     	;# 
  2196  0313                     	;# 
  2197  0314                     	;# 
  2198  0315                     	;# 
  2199  0315                     	;# 
  2200  0316                     	;# 
  2201  0317                     	;# 
  2202  0318                     	;# 
  2203  038C                     	;# 
  2204  038D                     	;# 
  2205  038E                     	;# 
  2206  0391                     	;# 
  2207  0392                     	;# 
  2208  0393                     	;# 
  2209  0394                     	;# 
  2210  0395                     	;# 
  2211  0396                     	;# 
  2212  0397                     	;# 
  2213  0398                     	;# 
  2214  0399                     	;# 
  2215  039A                     	;# 
  2216  039C                     	;# 
  2217  039D                     	;# 
  2218  039E                     	;# 
  2219  039F                     	;# 
  2220  0411                     	;# 
  2221  0411                     	;# 
  2222  0412                     	;# 
  2223  0413                     	;# 
  2224  0414                     	;# 
  2225  0415                     	;# 
  2226  0416                     	;# 
  2227  0417                     	;# 
  2228  0418                     	;# 
  2229  0418                     	;# 
  2230  0419                     	;# 
  2231  041A                     	;# 
  2232  041B                     	;# 
  2233  041C                     	;# 
  2234  041D                     	;# 
  2235  041E                     	;# 
  2236  041F                     	;# 
  2237  0498                     	;# 
  2238  0498                     	;# 
  2239  0499                     	;# 
  2240  049A                     	;# 
  2241  049B                     	;# 
  2242  049B                     	;# 
  2243  049C                     	;# 
  2244  049D                     	;# 
  2245  049E                     	;# 
  2246  049F                     	;# 
  2247  0617                     	;# 
  2248  0618                     	;# 
  2249  0619                     	;# 
  2250  0619                     	;# 
  2251  061A                     	;# 
  2252  061B                     	;# 
  2253  061C                     	;# 
  2254  061C                     	;# 
  2255  061F                     	;# 
  2256  0691                     	;# 
  2257  0692                     	;# 
  2258  0693                     	;# 
  2259  0694                     	;# 
  2260  0695                     	;# 
  2261  0696                     	;# 
  2262  0697                     	;# 
  2263  0698                     	;# 
  2264  0699                     	;# 
  2265  0711                     	;# 
  2266  0712                     	;# 
  2267  0713                     	;# 
  2268  0714                     	;# 
  2269  0715                     	;# 
  2270  0716                     	;# 
  2271  0717                     	;# 
  2272  0718                     	;# 
  2273  0719                     	;# 
  2274  0891                     	;# 
  2275  0891                     	;# 
  2276  0891                     	;# 
  2277  0891                     	;# 
  2278  0891                     	;# 
  2279  0891                     	;# 
  2280  0892                     	;# 
  2281  0892                     	;# 
  2282  0892                     	;# 
  2283  0893                     	;# 
  2284  0893                     	;# 
  2285  0893                     	;# 
  2286  0893                     	;# 
  2287  0893                     	;# 
  2288  0893                     	;# 
  2289  0894                     	;# 
  2290  0894                     	;# 
  2291  0894                     	;# 
  2292  0895                     	;# 
  2293  0895                     	;# 
  2294  0895                     	;# 
  2295  0896                     	;# 
  2296  0896                     	;# 
  2297  0896                     	;# 
  2298  089B                     	;# 
  2299  0911                     	;# 
  2300  0912                     	;# 
  2301  0913                     	;# 
  2302  0914                     	;# 
  2303  0915                     	;# 
  2304  0916                     	;# 
  2305  0918                     	;# 
  2306  0919                     	;# 
  2307  091A                     	;# 
  2308  091B                     	;# 
  2309  091C                     	;# 
  2310  091D                     	;# 
  2311  091E                     	;# 
  2312  091F                     	;# 
  2313  0E0F                     	;# 
  2314  0E10                     	;# 
  2315  0E11                     	;# 
  2316  0E12                     	;# 
  2317  0E13                     	;# 
  2318  0E14                     	;# 
  2319  0E15                     	;# 
  2320  0E16                     	;# 
  2321  0E17                     	;# 
  2322  0E18                     	;# 
  2323  0E19                     	;# 
  2324  0E1A                     	;# 
  2325  0E1B                     	;# 
  2326  0E1C                     	;# 
  2327  0E1D                     	;# 
  2328  0E1E                     	;# 
  2329  0E1F                     	;# 
  2330  0E20                     	;# 
  2331  0E21                     	;# 
  2332  0E22                     	;# 
  2333  0E24                     	;# 
  2334  0E25                     	;# 
  2335  0E28                     	;# 
  2336  0E29                     	;# 
  2337  0E2A                     	;# 
  2338  0E2B                     	;# 
  2339  0E2C                     	;# 
  2340  0E2D                     	;# 
  2341  0E2E                     	;# 
  2342  0E2F                     	;# 
  2343  0E90                     	;# 
  2344  0E91                     	;# 
  2345  0E92                     	;# 
  2346  0E94                     	;# 
  2347  0E95                     	;# 
  2348  0E9C                     	;# 
  2349  0E9D                     	;# 
  2350  0E9E                     	;# 
  2351  0E9F                     	;# 
  2352  0EA0                     	;# 
  2353  0EA1                     	;# 
  2354  0EA2                     	;# 
  2355  0EA3                     	;# 
  2356  0EA4                     	;# 
  2357  0EA5                     	;# 
  2358  0EA6                     	;# 
  2359  0EA7                     	;# 
  2360  0F0F                     	;# 
  2361  0F10                     	;# 
  2362  0F11                     	;# 
  2363  0F12                     	;# 
  2364  0F13                     	;# 
  2365  0F14                     	;# 
  2366  0F15                     	;# 
  2367  0F16                     	;# 
  2368  0F17                     	;# 
  2369  0F18                     	;# 
  2370  0F19                     	;# 
  2371  0F1A                     	;# 
  2372  0F1B                     	;# 
  2373  0F1C                     	;# 
  2374  0F1D                     	;# 
  2375  0F1E                     	;# 
  2376  0F1F                     	;# 
  2377  0F20                     	;# 
  2378  0F21                     	;# 
  2379  0F22                     	;# 
  2380  0F23                     	;# 
  2381  0F24                     	;# 
  2382  0F25                     	;# 
  2383  0F26                     	;# 
  2384  0F27                     	;# 
  2385  0F28                     	;# 
  2386  0F29                     	;# 
  2387  0F2A                     	;# 
  2388  0F2B                     	;# 
  2389  0F2C                     	;# 
  2390  0F2D                     	;# 
  2391  0F2E                     	;# 
  2392  0F2F                     	;# 
  2393  0F30                     	;# 
  2394  0F31                     	;# 
  2395  0F32                     	;# 
  2396  0F33                     	;# 
  2397  0F34                     	;# 
  2398  0F35                     	;# 
  2399  0F36                     	;# 
  2400  0F37                     	;# 
  2401  0FE4                     	;# 
  2402  0FE5                     	;# 
  2403  0FE6                     	;# 
  2404  0FE7                     	;# 
  2405  0FE8                     	;# 
  2406  0FE9                     	;# 
  2407  0FEA                     	;# 
  2408  0FEB                     	;# 
  2409  0FED                     	;# 
  2410  0FEE                     	;# 
  2411  0FEF                     	;# 
  2412  0000                     	;# 
  2413  0001                     	;# 
  2414  0002                     	;# 
  2415  0003                     	;# 
  2416  0004                     	;# 
  2417  0005                     	;# 
  2418  0006                     	;# 
  2419  0007                     	;# 
  2420  0008                     	;# 
  2421  0009                     	;# 
  2422  000A                     	;# 
  2423  000B                     	;# 
  2424  000C                     	;# 
  2425  000D                     	;# 
  2426  000E                     	;# 
  2427  0010                     	;# 
  2428  0011                     	;# 
  2429  0012                     	;# 
  2430  0013                     	;# 
  2431  0014                     	;# 
  2432  0015                     	;# 
  2433  0015                     	;# 
  2434  0016                     	;# 
  2435  0016                     	;# 
  2436  0017                     	;# 
  2437  0018                     	;# 
  2438  0019                     	;# 
  2439  0019                     	;# 
  2440  001A                     	;# 
  2441  001B                     	;# 
  2442  001C                     	;# 
  2443  001D                     	;# 
  2444  001E                     	;# 
  2445  001F                     	;# 
  2446  008C                     	;# 
  2447  008D                     	;# 
  2448  008E                     	;# 
  2449  0090                     	;# 
  2450  0091                     	;# 
  2451  0092                     	;# 
  2452  0093                     	;# 
  2453  0094                     	;# 
  2454  0097                     	;# 
  2455  009B                     	;# 
  2456  009B                     	;# 
  2457  009C                     	;# 
  2458  009D                     	;# 
  2459  009E                     	;# 
  2460  009F                     	;# 
  2461  010C                     	;# 
  2462  010D                     	;# 
  2463  010E                     	;# 
  2464  0111                     	;# 
  2465  0112                     	;# 
  2466  0113                     	;# 
  2467  0114                     	;# 
  2468  0115                     	;# 
  2469  0116                     	;# 
  2470  0117                     	;# 
  2471  0118                     	;# 
  2472  0119                     	;# 
  2473  018C                     	;# 
  2474  018D                     	;# 
  2475  018E                     	;# 
  2476  0197                     	;# 
  2477  0199                     	;# 
  2478  0199                     	;# 
  2479  0199                     	;# 
  2480  019A                     	;# 
  2481  019A                     	;# 
  2482  019A                     	;# 
  2483  019B                     	;# 
  2484  019B                     	;# 
  2485  019B                     	;# 
  2486  019B                     	;# 
  2487  019B                     	;# 
  2488  019C                     	;# 
  2489  019C                     	;# 
  2490  019C                     	;# 
  2491  019D                     	;# 
  2492  019D                     	;# 
  2493  019D                     	;# 
  2494  019E                     	;# 
  2495  019E                     	;# 
  2496  019E                     	;# 
  2497  019F                     	;# 
  2498  019F                     	;# 
  2499  019F                     	;# 
  2500  019F                     	;# 
  2501  019F                     	;# 
  2502  020C                     	;# 
  2503  020D                     	;# 
  2504  020E                     	;# 
  2505  0211                     	;# 
  2506  0211                     	;# 
  2507  0212                     	;# 
  2508  0212                     	;# 
  2509  0213                     	;# 
  2510  0213                     	;# 
  2511  0214                     	;# 
  2512  0214                     	;# 
  2513  0215                     	;# 
  2514  0215                     	;# 
  2515  0215                     	;# 
  2516  0215                     	;# 
  2517  0216                     	;# 
  2518  0216                     	;# 
  2519  0217                     	;# 
  2520  0217                     	;# 
  2521  0219                     	;# 
  2522  021A                     	;# 
  2523  021B                     	;# 
  2524  021C                     	;# 
  2525  021D                     	;# 
  2526  021D                     	;# 
  2527  021E                     	;# 
  2528  021F                     	;# 
  2529  028C                     	;# 
  2530  028D                     	;# 
  2531  028E                     	;# 
  2532  0291                     	;# 
  2533  0291                     	;# 
  2534  0292                     	;# 
  2535  0293                     	;# 
  2536  0294                     	;# 
  2537  0295                     	;# 
  2538  0295                     	;# 
  2539  0296                     	;# 
  2540  0297                     	;# 
  2541  0298                     	;# 
  2542  029F                     	;# 
  2543  030C                     	;# 
  2544  030D                     	;# 
  2545  030E                     	;# 
  2546  0311                     	;# 
  2547  0311                     	;# 
  2548  0312                     	;# 
  2549  0313                     	;# 
  2550  0314                     	;# 
  2551  0315                     	;# 
  2552  0315                     	;# 
  2553  0316                     	;# 
  2554  0317                     	;# 
  2555  0318                     	;# 
  2556  038C                     	;# 
  2557  038D                     	;# 
  2558  038E                     	;# 
  2559  0391                     	;# 
  2560  0392                     	;# 
  2561  0393                     	;# 
  2562  0394                     	;# 
  2563  0395                     	;# 
  2564  0396                     	;# 
  2565  0397                     	;# 
  2566  0398                     	;# 
  2567  0399                     	;# 
  2568  039A                     	;# 
  2569  039C                     	;# 
  2570  039D                     	;# 
  2571  039E                     	;# 
  2572  039F                     	;# 
  2573  0411                     	;# 
  2574  0411                     	;# 
  2575  0412                     	;# 
  2576  0413                     	;# 
  2577  0414                     	;# 
  2578  0415                     	;# 
  2579  0416                     	;# 
  2580  0417                     	;# 
  2581  0418                     	;# 
  2582  0418                     	;# 
  2583  0419                     	;# 
  2584  041A                     	;# 
  2585  041B                     	;# 
  2586  041C                     	;# 
  2587  041D                     	;# 
  2588  041E                     	;# 
  2589  041F                     	;# 
  2590  0498                     	;# 
  2591  0498                     	;# 
  2592  0499                     	;# 
  2593  049A                     	;# 
  2594  049B                     	;# 
  2595  049B                     	;# 
  2596  049C                     	;# 
  2597  049D                     	;# 
  2598  049E                     	;# 
  2599  049F                     	;# 
  2600  0617                     	;# 
  2601  0618                     	;# 
  2602  0619                     	;# 
  2603  0619                     	;# 
  2604  061A                     	;# 
  2605  061B                     	;# 
  2606  061C                     	;# 
  2607  061C                     	;# 
  2608  061F                     	;# 
  2609  0691                     	;# 
  2610  0692                     	;# 
  2611  0693                     	;# 
  2612  0694                     	;# 
  2613  0695                     	;# 
  2614  0696                     	;# 
  2615  0697                     	;# 
  2616  0698                     	;# 
  2617  0699                     	;# 
  2618  0711                     	;# 
  2619  0712                     	;# 
  2620  0713                     	;# 
  2621  0714                     	;# 
  2622  0715                     	;# 
  2623  0716                     	;# 
  2624  0717                     	;# 
  2625  0718                     	;# 
  2626  0719                     	;# 
  2627  0891                     	;# 
  2628  0891                     	;# 
  2629  0891                     	;# 
  2630  0891                     	;# 
  2631  0891                     	;# 
  2632  0891                     	;# 
  2633  0892                     	;# 
  2634  0892                     	;# 
  2635  0892                     	;# 
  2636  0893                     	;# 
  2637  0893                     	;# 
  2638  0893                     	;# 
  2639  0893                     	;# 
  2640  0893                     	;# 
  2641  0893                     	;# 
  2642  0894                     	;# 
  2643  0894                     	;# 
  2644  0894                     	;# 
  2645  0895                     	;# 
  2646  0895                     	;# 
  2647  0895                     	;# 
  2648  0896                     	;# 
  2649  0896                     	;# 
  2650  0896                     	;# 
  2651  089B                     	;# 
  2652  0911                     	;# 
  2653  0912                     	;# 
  2654  0913                     	;# 
  2655  0914                     	;# 
  2656  0915                     	;# 
  2657  0916                     	;# 
  2658  0918                     	;# 
  2659  0919                     	;# 
  2660  091A                     	;# 
  2661  091B                     	;# 
  2662  091C                     	;# 
  2663  091D                     	;# 
  2664  091E                     	;# 
  2665  091F                     	;# 
  2666  0E0F                     	;# 
  2667  0E10                     	;# 
  2668  0E11                     	;# 
  2669  0E12                     	;# 
  2670  0E13                     	;# 
  2671  0E14                     	;# 
  2672  0E15                     	;# 
  2673  0E16                     	;# 
  2674  0E17                     	;# 
  2675  0E18                     	;# 
  2676  0E19                     	;# 
  2677  0E1A                     	;# 
  2678  0E1B                     	;# 
  2679  0E1C                     	;# 
  2680  0E1D                     	;# 
  2681  0E1E                     	;# 
  2682  0E1F                     	;# 
  2683  0E20                     	;# 
  2684  0E21                     	;# 
  2685  0E22                     	;# 
  2686  0E24                     	;# 
  2687  0E25                     	;# 
  2688  0E28                     	;# 
  2689  0E29                     	;# 
  2690  0E2A                     	;# 
  2691  0E2B                     	;# 
  2692  0E2C                     	;# 
  2693  0E2D                     	;# 
  2694  0E2E                     	;# 
  2695  0E2F                     	;# 
  2696  0E90                     	;# 
  2697  0E91                     	;# 
  2698  0E92                     	;# 
  2699  0E94                     	;# 
  2700  0E95                     	;# 
  2701  0E9C                     	;# 
  2702  0E9D                     	;# 
  2703  0E9E                     	;# 
  2704  0E9F                     	;# 
  2705  0EA0                     	;# 
  2706  0EA1                     	;# 
  2707  0EA2                     	;# 
  2708  0EA3                     	;# 
  2709  0EA4                     	;# 
  2710  0EA5                     	;# 
  2711  0EA6                     	;# 
  2712  0EA7                     	;# 
  2713  0F0F                     	;# 
  2714  0F10                     	;# 
  2715  0F11                     	;# 
  2716  0F12                     	;# 
  2717  0F13                     	;# 
  2718  0F14                     	;# 
  2719  0F15                     	;# 
  2720  0F16                     	;# 
  2721  0F17                     	;# 
  2722  0F18                     	;# 
  2723  0F19                     	;# 
  2724  0F1A                     	;# 
  2725  0F1B                     	;# 
  2726  0F1C                     	;# 
  2727  0F1D                     	;# 
  2728  0F1E                     	;# 
  2729  0F1F                     	;# 
  2730  0F20                     	;# 
  2731  0F21                     	;# 
  2732  0F22                     	;# 
  2733  0F23                     	;# 
  2734  0F24                     	;# 
  2735  0F25                     	;# 
  2736  0F26                     	;# 
  2737  0F27                     	;# 
  2738  0F28                     	;# 
  2739  0F29                     	;# 
  2740  0F2A                     	;# 
  2741  0F2B                     	;# 
  2742  0F2C                     	;# 
  2743  0F2D                     	;# 
  2744  0F2E                     	;# 
  2745  0F2F                     	;# 
  2746  0F30                     	;# 
  2747  0F31                     	;# 
  2748  0F32                     	;# 
  2749  0F33                     	;# 
  2750  0F34                     	;# 
  2751  0F35                     	;# 
  2752  0F36                     	;# 
  2753  0F37                     	;# 
  2754  0FE4                     	;# 
  2755  0FE5                     	;# 
  2756  0FE6                     	;# 
  2757  0FE7                     	;# 
  2758  0FE8                     	;# 
  2759  0FE9                     	;# 
  2760  0FEA                     	;# 
  2761  0FEB                     	;# 
  2762  0FED                     	;# 
  2763  0FEE                     	;# 
  2764  0FEF                     	;# 
  2765  0000                     	;# 
  2766  0001                     	;# 
  2767  0002                     	;# 
  2768  0003                     	;# 
  2769  0004                     	;# 
  2770  0005                     	;# 
  2771  0006                     	;# 
  2772  0007                     	;# 
  2773  0008                     	;# 
  2774  0009                     	;# 
  2775  000A                     	;# 
  2776  000B                     	;# 
  2777  000C                     	;# 
  2778  000D                     	;# 
  2779  000E                     	;# 
  2780  0010                     	;# 
  2781  0011                     	;# 
  2782  0012                     	;# 
  2783  0013                     	;# 
  2784  0014                     	;# 
  2785  0015                     	;# 
  2786  0015                     	;# 
  2787  0016                     	;# 
  2788  0016                     	;# 
  2789  0017                     	;# 
  2790  0018                     	;# 
  2791  0019                     	;# 
  2792  0019                     	;# 
  2793  001A                     	;# 
  2794  001B                     	;# 
  2795  001C                     	;# 
  2796  001D                     	;# 
  2797  001E                     	;# 
  2798  001F                     	;# 
  2799  008C                     	;# 
  2800  008D                     	;# 
  2801  008E                     	;# 
  2802  0090                     	;# 
  2803  0091                     	;# 
  2804  0092                     	;# 
  2805  0093                     	;# 
  2806  0094                     	;# 
  2807  0097                     	;# 
  2808  009B                     	;# 
  2809  009B                     	;# 
  2810  009C                     	;# 
  2811  009D                     	;# 
  2812  009E                     	;# 
  2813  009F                     	;# 
  2814  010C                     	;# 
  2815  010D                     	;# 
  2816  010E                     	;# 
  2817  0111                     	;# 
  2818  0112                     	;# 
  2819  0113                     	;# 
  2820  0114                     	;# 
  2821  0115                     	;# 
  2822  0116                     	;# 
  2823  0117                     	;# 
  2824  0118                     	;# 
  2825  0119                     	;# 
  2826  018C                     	;# 
  2827  018D                     	;# 
  2828  018E                     	;# 
  2829  0197                     	;# 
  2830  0199                     	;# 
  2831  0199                     	;# 
  2832  0199                     	;# 
  2833  019A                     	;# 
  2834  019A                     	;# 
  2835  019A                     	;# 
  2836  019B                     	;# 
  2837  019B                     	;# 
  2838  019B                     	;# 
  2839  019B                     	;# 
  2840  019B                     	;# 
  2841  019C                     	;# 
  2842  019C                     	;# 
  2843  019C                     	;# 
  2844  019D                     	;# 
  2845  019D                     	;# 
  2846  019D                     	;# 
  2847  019E                     	;# 
  2848  019E                     	;# 
  2849  019E                     	;# 
  2850  019F                     	;# 
  2851  019F                     	;# 
  2852  019F                     	;# 
  2853  019F                     	;# 
  2854  019F                     	;# 
  2855  020C                     	;# 
  2856  020D                     	;# 
  2857  020E                     	;# 
  2858  0211                     	;# 
  2859  0211                     	;# 
  2860  0212                     	;# 
  2861  0212                     	;# 
  2862  0213                     	;# 
  2863  0213                     	;# 
  2864  0214                     	;# 
  2865  0214                     	;# 
  2866  0215                     	;# 
  2867  0215                     	;# 
  2868  0215                     	;# 
  2869  0215                     	;# 
  2870  0216                     	;# 
  2871  0216                     	;# 
  2872  0217                     	;# 
  2873  0217                     	;# 
  2874  0219                     	;# 
  2875  021A                     	;# 
  2876  021B                     	;# 
  2877  021C                     	;# 
  2878  021D                     	;# 
  2879  021D                     	;# 
  2880  021E                     	;# 
  2881  021F                     	;# 
  2882  028C                     	;# 
  2883  028D                     	;# 
  2884  028E                     	;# 
  2885  0291                     	;# 
  2886  0291                     	;# 
  2887  0292                     	;# 
  2888  0293                     	;# 
  2889  0294                     	;# 
  2890  0295                     	;# 
  2891  0295                     	;# 
  2892  0296                     	;# 
  2893  0297                     	;# 
  2894  0298                     	;# 
  2895  029F                     	;# 
  2896  030C                     	;# 
  2897  030D                     	;# 
  2898  030E                     	;# 
  2899  0311                     	;# 
  2900  0311                     	;# 
  2901  0312                     	;# 
  2902  0313                     	;# 
  2903  0314                     	;# 
  2904  0315                     	;# 
  2905  0315                     	;# 
  2906  0316                     	;# 
  2907  0317                     	;# 
  2908  0318                     	;# 
  2909  038C                     	;# 
  2910  038D                     	;# 
  2911  038E                     	;# 
  2912  0391                     	;# 
  2913  0392                     	;# 
  2914  0393                     	;# 
  2915  0394                     	;# 
  2916  0395                     	;# 
  2917  0396                     	;# 
  2918  0397                     	;# 
  2919  0398                     	;# 
  2920  0399                     	;# 
  2921  039A                     	;# 
  2922  039C                     	;# 
  2923  039D                     	;# 
  2924  039E                     	;# 
  2925  039F                     	;# 
  2926  0411                     	;# 
  2927  0411                     	;# 
  2928  0412                     	;# 
  2929  0413                     	;# 
  2930  0414                     	;# 
  2931  0415                     	;# 
  2932  0416                     	;# 
  2933  0417                     	;# 
  2934  0418                     	;# 
  2935  0418                     	;# 
  2936  0419                     	;# 
  2937  041A                     	;# 
  2938  041B                     	;# 
  2939  041C                     	;# 
  2940  041D                     	;# 
  2941  041E                     	;# 
  2942  041F                     	;# 
  2943  0498                     	;# 
  2944  0498                     	;# 
  2945  0499                     	;# 
  2946  049A                     	;# 
  2947  049B                     	;# 
  2948  049B                     	;# 
  2949  049C                     	;# 
  2950  049D                     	;# 
  2951  049E                     	;# 
  2952  049F                     	;# 
  2953  0617                     	;# 
  2954  0618                     	;# 
  2955  0619                     	;# 
  2956  0619                     	;# 
  2957  061A                     	;# 
  2958  061B                     	;# 
  2959  061C                     	;# 
  2960  061C                     	;# 
  2961  061F                     	;# 
  2962  0691                     	;# 
  2963  0692                     	;# 
  2964  0693                     	;# 
  2965  0694                     	;# 
  2966  0695                     	;# 
  2967  0696                     	;# 
  2968  0697                     	;# 
  2969  0698                     	;# 
  2970  0699                     	;# 
  2971  0711                     	;# 
  2972  0712                     	;# 
  2973  0713                     	;# 
  2974  0714                     	;# 
  2975  0715                     	;# 
  2976  0716                     	;# 
  2977  0717                     	;# 
  2978  0718                     	;# 
  2979  0719                     	;# 
  2980  0891                     	;# 
  2981  0891                     	;# 
  2982  0891                     	;# 
  2983  0891                     	;# 
  2984  0891                     	;# 
  2985  0891                     	;# 
  2986  0892                     	;# 
  2987  0892                     	;# 
  2988  0892                     	;# 
  2989  0893                     	;# 
  2990  0893                     	;# 
  2991  0893                     	;# 
  2992  0893                     	;# 
  2993  0893                     	;# 
  2994  0893                     	;# 
  2995  0894                     	;# 
  2996  0894                     	;# 
  2997  0894                     	;# 
  2998  0895                     	;# 
  2999  0895                     	;# 
  3000  0895                     	;# 
  3001  0896                     	;# 
  3002  0896                     	;# 
  3003  0896                     	;# 
  3004  089B                     	;# 
  3005  0911                     	;# 
  3006  0912                     	;# 
  3007  0913                     	;# 
  3008  0914                     	;# 
  3009  0915                     	;# 
  3010  0916                     	;# 
  3011  0918                     	;# 
  3012  0919                     	;# 
  3013  091A                     	;# 
  3014  091B                     	;# 
  3015  091C                     	;# 
  3016  091D                     	;# 
  3017  091E                     	;# 
  3018  091F                     	;# 
  3019  0E0F                     	;# 
  3020  0E10                     	;# 
  3021  0E11                     	;# 
  3022  0E12                     	;# 
  3023  0E13                     	;# 
  3024  0E14                     	;# 
  3025  0E15                     	;# 
  3026  0E16                     	;# 
  3027  0E17                     	;# 
  3028  0E18                     	;# 
  3029  0E19                     	;# 
  3030  0E1A                     	;# 
  3031  0E1B                     	;# 
  3032  0E1C                     	;# 
  3033  0E1D                     	;# 
  3034  0E1E                     	;# 
  3035  0E1F                     	;# 
  3036  0E20                     	;# 
  3037  0E21                     	;# 
  3038  0E22                     	;# 
  3039  0E24                     	;# 
  3040  0E25                     	;# 
  3041  0E28                     	;# 
  3042  0E29                     	;# 
  3043  0E2A                     	;# 
  3044  0E2B                     	;# 
  3045  0E2C                     	;# 
  3046  0E2D                     	;# 
  3047  0E2E                     	;# 
  3048  0E2F                     	;# 
  3049  0E90                     	;# 
  3050  0E91                     	;# 
  3051  0E92                     	;# 
  3052  0E94                     	;# 
  3053  0E95                     	;# 
  3054  0E9C                     	;# 
  3055  0E9D                     	;# 
  3056  0E9E                     	;# 
  3057  0E9F                     	;# 
  3058  0EA0                     	;# 
  3059  0EA1                     	;# 
  3060  0EA2                     	;# 
  3061  0EA3                     	;# 
  3062  0EA4                     	;# 
  3063  0EA5                     	;# 
  3064  0EA6                     	;# 
  3065  0EA7                     	;# 
  3066  0F0F                     	;# 
  3067  0F10                     	;# 
  3068  0F11                     	;# 
  3069  0F12                     	;# 
  3070  0F13                     	;# 
  3071  0F14                     	;# 
  3072  0F15                     	;# 
  3073  0F16                     	;# 
  3074  0F17                     	;# 
  3075  0F18                     	;# 
  3076  0F19                     	;# 
  3077  0F1A                     	;# 
  3078  0F1B                     	;# 
  3079  0F1C                     	;# 
  3080  0F1D                     	;# 
  3081  0F1E                     	;# 
  3082  0F1F                     	;# 
  3083  0F20                     	;# 
  3084  0F21                     	;# 
  3085  0F22                     	;# 
  3086  0F23                     	;# 
  3087  0F24                     	;# 
  3088  0F25                     	;# 
  3089  0F26                     	;# 
  3090  0F27                     	;# 
  3091  0F28                     	;# 
  3092  0F29                     	;# 
  3093  0F2A                     	;# 
  3094  0F2B                     	;# 
  3095  0F2C                     	;# 
  3096  0F2D                     	;# 
  3097  0F2E                     	;# 
  3098  0F2F                     	;# 
  3099  0F30                     	;# 
  3100  0F31                     	;# 
  3101  0F32                     	;# 
  3102  0F33                     	;# 
  3103  0F34                     	;# 
  3104  0F35                     	;# 
  3105  0F36                     	;# 
  3106  0F37                     	;# 
  3107  0FE4                     	;# 
  3108  0FE5                     	;# 
  3109  0FE6                     	;# 
  3110  0FE7                     	;# 
  3111  0FE8                     	;# 
  3112  0FE9                     	;# 
  3113  0FEA                     	;# 
  3114  0FEB                     	;# 
  3115  0FED                     	;# 
  3116  0FEE                     	;# 
  3117  0FEF                     	;# 
  3118  0000                     	;# 
  3119  0001                     	;# 
  3120  0002                     	;# 
  3121  0003                     	;# 
  3122  0004                     	;# 
  3123  0005                     	;# 
  3124  0006                     	;# 
  3125  0007                     	;# 
  3126  0008                     	;# 
  3127  0009                     	;# 
  3128  000A                     	;# 
  3129  000B                     	;# 
  3130  000C                     	;# 
  3131  000D                     	;# 
  3132  000E                     	;# 
  3133  0010                     	;# 
  3134  0011                     	;# 
  3135  0012                     	;# 
  3136  0013                     	;# 
  3137  0014                     	;# 
  3138  0015                     	;# 
  3139  0015                     	;# 
  3140  0016                     	;# 
  3141  0016                     	;# 
  3142  0017                     	;# 
  3143  0018                     	;# 
  3144  0019                     	;# 
  3145  0019                     	;# 
  3146  001A                     	;# 
  3147  001B                     	;# 
  3148  001C                     	;# 
  3149  001D                     	;# 
  3150  001E                     	;# 
  3151  001F                     	;# 
  3152  008C                     	;# 
  3153  008D                     	;# 
  3154  008E                     	;# 
  3155  0090                     	;# 
  3156  0091                     	;# 
  3157  0092                     	;# 
  3158  0093                     	;# 
  3159  0094                     	;# 
  3160  0097                     	;# 
  3161  009B                     	;# 
  3162  009B                     	;# 
  3163  009C                     	;# 
  3164  009D                     	;# 
  3165  009E                     	;# 
  3166  009F                     	;# 
  3167  010C                     	;# 
  3168  010D                     	;# 
  3169  010E                     	;# 
  3170  0111                     	;# 
  3171  0112                     	;# 
  3172  0113                     	;# 
  3173  0114                     	;# 
  3174  0115                     	;# 
  3175  0116                     	;# 
  3176  0117                     	;# 
  3177  0118                     	;# 
  3178  0119                     	;# 
  3179  018C                     	;# 
  3180  018D                     	;# 
  3181  018E                     	;# 
  3182  0197                     	;# 
  3183  0199                     	;# 
  3184  0199                     	;# 
  3185  0199                     	;# 
  3186  019A                     	;# 
  3187  019A                     	;# 
  3188  019A                     	;# 
  3189  019B                     	;# 
  3190  019B                     	;# 
  3191  019B                     	;# 
  3192  019B                     	;# 
  3193  019B                     	;# 
  3194  019C                     	;# 
  3195  019C                     	;# 
  3196  019C                     	;# 
  3197  019D                     	;# 
  3198  019D                     	;# 
  3199  019D                     	;# 
  3200  019E                     	;# 
  3201  019E                     	;# 
  3202  019E                     	;# 
  3203  019F                     	;# 
  3204  019F                     	;# 
  3205  019F                     	;# 
  3206  019F                     	;# 
  3207  019F                     	;# 
  3208  020C                     	;# 
  3209  020D                     	;# 
  3210  020E                     	;# 
  3211  0211                     	;# 
  3212  0211                     	;# 
  3213  0212                     	;# 
  3214  0212                     	;# 
  3215  0213                     	;# 
  3216  0213                     	;# 
  3217  0214                     	;# 
  3218  0214                     	;# 
  3219  0215                     	;# 
  3220  0215                     	;# 
  3221  0215                     	;# 
  3222  0215                     	;# 
  3223  0216                     	;# 
  3224  0216                     	;# 
  3225  0217                     	;# 
  3226  0217                     	;# 
  3227  0219                     	;# 
  3228  021A                     	;# 
  3229  021B                     	;# 
  3230  021C                     	;# 
  3231  021D                     	;# 
  3232  021D                     	;# 
  3233  021E                     	;# 
  3234  021F                     	;# 
  3235  028C                     	;# 
  3236  028D                     	;# 
  3237  028E                     	;# 
  3238  0291                     	;# 
  3239  0291                     	;# 
  3240  0292                     	;# 
  3241  0293                     	;# 
  3242  0294                     	;# 
  3243  0295                     	;# 
  3244  0295                     	;# 
  3245  0296                     	;# 
  3246  0297                     	;# 
  3247  0298                     	;# 
  3248  029F                     	;# 
  3249  030C                     	;# 
  3250  030D                     	;# 
  3251  030E                     	;# 
  3252  0311                     	;# 
  3253  0311                     	;# 
  3254  0312                     	;# 
  3255  0313                     	;# 
  3256  0314                     	;# 
  3257  0315                     	;# 
  3258  0315                     	;# 
  3259  0316                     	;# 
  3260  0317                     	;# 
  3261  0318                     	;# 
  3262  038C                     	;# 
  3263  038D                     	;# 
  3264  038E                     	;# 
  3265  0391                     	;# 
  3266  0392                     	;# 
  3267  0393                     	;# 
  3268  0394                     	;# 
  3269  0395                     	;# 
  3270  0396                     	;# 
  3271  0397                     	;# 
  3272  0398                     	;# 
  3273  0399                     	;# 
  3274  039A                     	;# 
  3275  039C                     	;# 
  3276  039D                     	;# 
  3277  039E                     	;# 
  3278  039F                     	;# 
  3279  0411                     	;# 
  3280  0411                     	;# 
  3281  0412                     	;# 
  3282  0413                     	;# 
  3283  0414                     	;# 
  3284  0415                     	;# 
  3285  0416                     	;# 
  3286  0417                     	;# 
  3287  0418                     	;# 
  3288  0418                     	;# 
  3289  0419                     	;# 
  3290  041A                     	;# 
  3291  041B                     	;# 
  3292  041C                     	;# 
  3293  041D                     	;# 
  3294  041E                     	;# 
  3295  041F                     	;# 
  3296  0498                     	;# 
  3297  0498                     	;# 
  3298  0499                     	;# 
  3299  049A                     	;# 
  3300  049B                     	;# 
  3301  049B                     	;# 
  3302  049C                     	;# 
  3303  049D                     	;# 
  3304  049E                     	;# 
  3305  049F                     	;# 
  3306  0617                     	;# 
  3307  0618                     	;# 
  3308  0619                     	;# 
  3309  0619                     	;# 
  3310  061A                     	;# 
  3311  061B                     	;# 
  3312  061C                     	;# 
  3313  061C                     	;# 
  3314  061F                     	;# 
  3315  0691                     	;# 
  3316  0692                     	;# 
  3317  0693                     	;# 
  3318  0694                     	;# 
  3319  0695                     	;# 
  3320  0696                     	;# 
  3321  0697                     	;# 
  3322  0698                     	;# 
  3323  0699                     	;# 
  3324  0711                     	;# 
  3325  0712                     	;# 
  3326  0713                     	;# 
  3327  0714                     	;# 
  3328  0715                     	;# 
  3329  0716                     	;# 
  3330  0717                     	;# 
  3331  0718                     	;# 
  3332  0719                     	;# 
  3333  0891                     	;# 
  3334  0891                     	;# 
  3335  0891                     	;# 
  3336  0891                     	;# 
  3337  0891                     	;# 
  3338  0891                     	;# 
  3339  0892                     	;# 
  3340  0892                     	;# 
  3341  0892                     	;# 
  3342  0893                     	;# 
  3343  0893                     	;# 
  3344  0893                     	;# 
  3345  0893                     	;# 
  3346  0893                     	;# 
  3347  0893                     	;# 
  3348  0894                     	;# 
  3349  0894                     	;# 
  3350  0894                     	;# 
  3351  0895                     	;# 
  3352  0895                     	;# 
  3353  0895                     	;# 
  3354  0896                     	;# 
  3355  0896                     	;# 
  3356  0896                     	;# 
  3357  089B                     	;# 
  3358  0911                     	;# 
  3359  0912                     	;# 
  3360  0913                     	;# 
  3361  0914                     	;# 
  3362  0915                     	;# 
  3363  0916                     	;# 
  3364  0918                     	;# 
  3365  0919                     	;# 
  3366  091A                     	;# 
  3367  091B                     	;# 
  3368  091C                     	;# 
  3369  091D                     	;# 
  3370  091E                     	;# 
  3371  091F                     	;# 
  3372  0E0F                     	;# 
  3373  0E10                     	;# 
  3374  0E11                     	;# 
  3375  0E12                     	;# 
  3376  0E13                     	;# 
  3377  0E14                     	;# 
  3378  0E15                     	;# 
  3379  0E16                     	;# 
  3380  0E17                     	;# 
  3381  0E18                     	;# 
  3382  0E19                     	;# 
  3383  0E1A                     	;# 
  3384  0E1B                     	;# 
  3385  0E1C                     	;# 
  3386  0E1D                     	;# 
  3387  0E1E                     	;# 
  3388  0E1F                     	;# 
  3389  0E20                     	;# 
  3390  0E21                     	;# 
  3391  0E22                     	;# 
  3392  0E24                     	;# 
  3393  0E25                     	;# 
  3394  0E28                     	;# 
  3395  0E29                     	;# 
  3396  0E2A                     	;# 
  3397  0E2B                     	;# 
  3398  0E2C                     	;# 
  3399  0E2D                     	;# 
  3400  0E2E                     	;# 
  3401  0E2F                     	;# 
  3402  0E90                     	;# 
  3403  0E91                     	;# 
  3404  0E92                     	;# 
  3405  0E94                     	;# 
  3406  0E95                     	;# 
  3407  0E9C                     	;# 
  3408  0E9D                     	;# 
  3409  0E9E                     	;# 
  3410  0E9F                     	;# 
  3411  0EA0                     	;# 
  3412  0EA1                     	;# 
  3413  0EA2                     	;# 
  3414  0EA3                     	;# 
  3415  0EA4                     	;# 
  3416  0EA5                     	;# 
  3417  0EA6                     	;# 
  3418  0EA7                     	;# 
  3419  0F0F                     	;# 
  3420  0F10                     	;# 
  3421  0F11                     	;# 
  3422  0F12                     	;# 
  3423  0F13                     	;# 
  3424  0F14                     	;# 
  3425  0F15                     	;# 
  3426  0F16                     	;# 
  3427  0F17                     	;# 
  3428  0F18                     	;# 
  3429  0F19                     	;# 
  3430  0F1A                     	;# 
  3431  0F1B                     	;# 
  3432  0F1C                     	;# 
  3433  0F1D                     	;# 
  3434  0F1E                     	;# 
  3435  0F1F                     	;# 
  3436  0F20                     	;# 
  3437  0F21                     	;# 
  3438  0F22                     	;# 
  3439  0F23                     	;# 
  3440  0F24                     	;# 
  3441  0F25                     	;# 
  3442  0F26                     	;# 
  3443  0F27                     	;# 
  3444  0F28                     	;# 
  3445  0F29                     	;# 
  3446  0F2A                     	;# 
  3447  0F2B                     	;# 
  3448  0F2C                     	;# 
  3449  0F2D                     	;# 
  3450  0F2E                     	;# 
  3451  0F2F                     	;# 
  3452  0F30                     	;# 
  3453  0F31                     	;# 
  3454  0F32                     	;# 
  3455  0F33                     	;# 
  3456  0F34                     	;# 
  3457  0F35                     	;# 
  3458  0F36                     	;# 
  3459  0F37                     	;# 
  3460  0FE4                     	;# 
  3461  0FE5                     	;# 
  3462  0FE6                     	;# 
  3463  0FE7                     	;# 
  3464  0FE8                     	;# 
  3465  0FE9                     	;# 
  3466  0FEA                     	;# 
  3467  0FEB                     	;# 
  3468  0FED                     	;# 
  3469  0FEE                     	;# 
  3470  0FEF                     	;# 
  3471  0000                     	;# 
  3472  0001                     	;# 
  3473  0002                     	;# 
  3474  0003                     	;# 
  3475  0004                     	;# 
  3476  0005                     	;# 
  3477  0006                     	;# 
  3478  0007                     	;# 
  3479  0008                     	;# 
  3480  0009                     	;# 
  3481  000A                     	;# 
  3482  000B                     	;# 
  3483  000C                     	;# 
  3484  000D                     	;# 
  3485  000E                     	;# 
  3486  0010                     	;# 
  3487  0011                     	;# 
  3488  0012                     	;# 
  3489  0013                     	;# 
  3490  0014                     	;# 
  3491  0015                     	;# 
  3492  0015                     	;# 
  3493  0016                     	;# 
  3494  0016                     	;# 
  3495  0017                     	;# 
  3496  0018                     	;# 
  3497  0019                     	;# 
  3498  0019                     	;# 
  3499  001A                     	;# 
  3500  001B                     	;# 
  3501  001C                     	;# 
  3502  001D                     	;# 
  3503  001E                     	;# 
  3504  001F                     	;# 
  3505  008C                     	;# 
  3506  008D                     	;# 
  3507  008E                     	;# 
  3508  0090                     	;# 
  3509  0091                     	;# 
  3510  0092                     	;# 
  3511  0093                     	;# 
  3512  0094                     	;# 
  3513  0097                     	;# 
  3514  009B                     	;# 
  3515  009B                     	;# 
  3516  009C                     	;# 
  3517  009D                     	;# 
  3518  009E                     	;# 
  3519  009F                     	;# 
  3520  010C                     	;# 
  3521  010D                     	;# 
  3522  010E                     	;# 
  3523  0111                     	;# 
  3524  0112                     	;# 
  3525  0113                     	;# 
  3526  0114                     	;# 
  3527  0115                     	;# 
  3528  0116                     	;# 
  3529  0117                     	;# 
  3530  0118                     	;# 
  3531  0119                     	;# 
  3532  018C                     	;# 
  3533  018D                     	;# 
  3534  018E                     	;# 
  3535  0197                     	;# 
  3536  0199                     	;# 
  3537  0199                     	;# 
  3538  0199                     	;# 
  3539  019A                     	;# 
  3540  019A                     	;# 
  3541  019A                     	;# 
  3542  019B                     	;# 
  3543  019B                     	;# 
  3544  019B                     	;# 
  3545  019B                     	;# 
  3546  019B                     	;# 
  3547  019C                     	;# 
  3548  019C                     	;# 
  3549  019C                     	;# 
  3550  019D                     	;# 
  3551  019D                     	;# 
  3552  019D                     	;# 
  3553  019E                     	;# 
  3554  019E                     	;# 
  3555  019E                     	;# 
  3556  019F                     	;# 
  3557  019F                     	;# 
  3558  019F                     	;# 
  3559  019F                     	;# 
  3560  019F                     	;# 
  3561  020C                     	;# 
  3562  020D                     	;# 
  3563  020E                     	;# 
  3564  0211                     	;# 
  3565  0211                     	;# 
  3566  0212                     	;# 
  3567  0212                     	;# 
  3568  0213                     	;# 
  3569  0213                     	;# 
  3570  0214                     	;# 
  3571  0214                     	;# 
  3572  0215                     	;# 
  3573  0215                     	;# 
  3574  0215                     	;# 
  3575  0215                     	;# 
  3576  0216                     	;# 
  3577  0216                     	;# 
  3578  0217                     	;# 
  3579  0217                     	;# 
  3580  0219                     	;# 
  3581  021A                     	;# 
  3582  021B                     	;# 
  3583  021C                     	;# 
  3584  021D                     	;# 
  3585  021D                     	;# 
  3586  021E                     	;# 
  3587  021F                     	;# 
  3588  028C                     	;# 
  3589  028D                     	;# 
  3590  028E                     	;# 
  3591  0291                     	;# 
  3592  0291                     	;# 
  3593  0292                     	;# 
  3594  0293                     	;# 
  3595  0294                     	;# 
  3596  0295                     	;# 
  3597  0295                     	;# 
  3598  0296                     	;# 
  3599  0297                     	;# 
  3600  0298                     	;# 
  3601  029F                     	;# 
  3602  030C                     	;# 
  3603  030D                     	;# 
  3604  030E                     	;# 
  3605  0311                     	;# 
  3606  0311                     	;# 
  3607  0312                     	;# 
  3608  0313                     	;# 
  3609  0314                     	;# 
  3610  0315                     	;# 
  3611  0315                     	;# 
  3612  0316                     	;# 
  3613  0317                     	;# 
  3614  0318                     	;# 
  3615  038C                     	;# 
  3616  038D                     	;# 
  3617  038E                     	;# 
  3618  0391                     	;# 
  3619  0392                     	;# 
  3620  0393                     	;# 
  3621  0394                     	;# 
  3622  0395                     	;# 
  3623  0396                     	;# 
  3624  0397                     	;# 
  3625  0398                     	;# 
  3626  0399                     	;# 
  3627  039A                     	;# 
  3628  039C                     	;# 
  3629  039D                     	;# 
  3630  039E                     	;# 
  3631  039F                     	;# 
  3632  0411                     	;# 
  3633  0411                     	;# 
  3634  0412                     	;# 
  3635  0413                     	;# 
  3636  0414                     	;# 
  3637  0415                     	;# 
  3638  0416                     	;# 
  3639  0417                     	;# 
  3640  0418                     	;# 
  3641  0418                     	;# 
  3642  0419                     	;# 
  3643  041A                     	;# 
  3644  041B                     	;# 
  3645  041C                     	;# 
  3646  041D                     	;# 
  3647  041E                     	;# 
  3648  041F                     	;# 
  3649  0498                     	;# 
  3650  0498                     	;# 
  3651  0499                     	;# 
  3652  049A                     	;# 
  3653  049B                     	;# 
  3654  049B                     	;# 
  3655  049C                     	;# 
  3656  049D                     	;# 
  3657  049E                     	;# 
  3658  049F                     	;# 
  3659  0617                     	;# 
  3660  0618                     	;# 
  3661  0619                     	;# 
  3662  0619                     	;# 
  3663  061A                     	;# 
  3664  061B                     	;# 
  3665  061C                     	;# 
  3666  061C                     	;# 
  3667  061F                     	;# 
  3668  0691                     	;# 
  3669  0692                     	;# 
  3670  0693                     	;# 
  3671  0694                     	;# 
  3672  0695                     	;# 
  3673  0696                     	;# 
  3674  0697                     	;# 
  3675  0698                     	;# 
  3676  0699                     	;# 
  3677  0711                     	;# 
  3678  0712                     	;# 
  3679  0713                     	;# 
  3680  0714                     	;# 
  3681  0715                     	;# 
  3682  0716                     	;# 
  3683  0717                     	;# 
  3684  0718                     	;# 
  3685  0719                     	;# 
  3686  0891                     	;# 
  3687  0891                     	;# 
  3688  0891                     	;# 
  3689  0891                     	;# 
  3690  0891                     	;# 
  3691  0891                     	;# 
  3692  0892                     	;# 
  3693  0892                     	;# 
  3694  0892                     	;# 
  3695  0893                     	;# 
  3696  0893                     	;# 
  3697  0893                     	;# 
  3698  0893                     	;# 
  3699  0893                     	;# 
  3700  0893                     	;# 
  3701  0894                     	;# 
  3702  0894                     	;# 
  3703  0894                     	;# 
  3704  0895                     	;# 
  3705  0895                     	;# 
  3706  0895                     	;# 
  3707  0896                     	;# 
  3708  0896                     	;# 
  3709  0896                     	;# 
  3710  089B                     	;# 
  3711  0911                     	;# 
  3712  0912                     	;# 
  3713  0913                     	;# 
  3714  0914                     	;# 
  3715  0915                     	;# 
  3716  0916                     	;# 
  3717  0918                     	;# 
  3718  0919                     	;# 
  3719  091A                     	;# 
  3720  091B                     	;# 
  3721  091C                     	;# 
  3722  091D                     	;# 
  3723  091E                     	;# 
  3724  091F                     	;# 
  3725  0E0F                     	;# 
  3726  0E10                     	;# 
  3727  0E11                     	;# 
  3728  0E12                     	;# 
  3729  0E13                     	;# 
  3730  0E14                     	;# 
  3731  0E15                     	;# 
  3732  0E16                     	;# 
  3733  0E17                     	;# 
  3734  0E18                     	;# 
  3735  0E19                     	;# 
  3736  0E1A                     	;# 
  3737  0E1B                     	;# 
  3738  0E1C                     	;# 
  3739  0E1D                     	;# 
  3740  0E1E                     	;# 
  3741  0E1F                     	;# 
  3742  0E20                     	;# 
  3743  0E21                     	;# 
  3744  0E22                     	;# 
  3745  0E24                     	;# 
  3746  0E25                     	;# 
  3747  0E28                     	;# 
  3748  0E29                     	;# 
  3749  0E2A                     	;# 
  3750  0E2B                     	;# 
  3751  0E2C                     	;# 
  3752  0E2D                     	;# 
  3753  0E2E                     	;# 
  3754  0E2F                     	;# 
  3755  0E90                     	;# 
  3756  0E91                     	;# 
  3757  0E92                     	;# 
  3758  0E94                     	;# 
  3759  0E95                     	;# 
  3760  0E9C                     	;# 
  3761  0E9D                     	;# 
  3762  0E9E                     	;# 
  3763  0E9F                     	;# 
  3764  0EA0                     	;# 
  3765  0EA1                     	;# 
  3766  0EA2                     	;# 
  3767  0EA3                     	;# 
  3768  0EA4                     	;# 
  3769  0EA5                     	;# 
  3770  0EA6                     	;# 
  3771  0EA7                     	;# 
  3772  0F0F                     	;# 
  3773  0F10                     	;# 
  3774  0F11                     	;# 
  3775  0F12                     	;# 
  3776  0F13                     	;# 
  3777  0F14                     	;# 
  3778  0F15                     	;# 
  3779  0F16                     	;# 
  3780  0F17                     	;# 
  3781  0F18                     	;# 
  3782  0F19                     	;# 
  3783  0F1A                     	;# 
  3784  0F1B                     	;# 
  3785  0F1C                     	;# 
  3786  0F1D                     	;# 
  3787  0F1E                     	;# 
  3788  0F1F                     	;# 
  3789  0F20                     	;# 
  3790  0F21                     	;# 
  3791  0F22                     	;# 
  3792  0F23                     	;# 
  3793  0F24                     	;# 
  3794  0F25                     	;# 
  3795  0F26                     	;# 
  3796  0F27                     	;# 
  3797  0F28                     	;# 
  3798  0F29                     	;# 
  3799  0F2A                     	;# 
  3800  0F2B                     	;# 
  3801  0F2C                     	;# 
  3802  0F2D                     	;# 
  3803  0F2E                     	;# 
  3804  0F2F                     	;# 
  3805  0F30                     	;# 
  3806  0F31                     	;# 
  3807  0F32                     	;# 
  3808  0F33                     	;# 
  3809  0F34                     	;# 
  3810  0F35                     	;# 
  3811  0F36                     	;# 
  3812  0F37                     	;# 
  3813  0FE4                     	;# 
  3814  0FE5                     	;# 
  3815  0FE6                     	;# 
  3816  0FE7                     	;# 
  3817  0FE8                     	;# 
  3818  0FE9                     	;# 
  3819  0FEA                     	;# 
  3820  0FEB                     	;# 
  3821  0FED                     	;# 
  3822  0FEE                     	;# 
  3823  0FEF                     	;# 
  3824  0000                     	;# 
  3825  0001                     	;# 
  3826  0002                     	;# 
  3827  0003                     	;# 
  3828  0004                     	;# 
  3829  0005                     	;# 
  3830  0006                     	;# 
  3831  0007                     	;# 
  3832  0008                     	;# 
  3833  0009                     	;# 
  3834  000A                     	;# 
  3835  000B                     	;# 
  3836  000C                     	;# 
  3837  000D                     	;# 
  3838  000E                     	;# 
  3839  0010                     	;# 
  3840  0011                     	;# 
  3841  0012                     	;# 
  3842  0013                     	;# 
  3843  0014                     	;# 
  3844  0015                     	;# 
  3845  0015                     	;# 
  3846  0016                     	;# 
  3847  0016                     	;# 
  3848  0017                     	;# 
  3849  0018                     	;# 
  3850  0019                     	;# 
  3851  0019                     	;# 
  3852  001A                     	;# 
  3853  001B                     	;# 
  3854  001C                     	;# 
  3855  001D                     	;# 
  3856  001E                     	;# 
  3857  001F                     	;# 
  3858  008C                     	;# 
  3859  008D                     	;# 
  3860  008E                     	;# 
  3861  0090                     	;# 
  3862  0091                     	;# 
  3863  0092                     	;# 
  3864  0093                     	;# 
  3865  0094                     	;# 
  3866  0097                     	;# 
  3867  009B                     	;# 
  3868  009B                     	;# 
  3869  009C                     	;# 
  3870  009D                     	;# 
  3871  009E                     	;# 
  3872  009F                     	;# 
  3873  010C                     	;# 
  3874  010D                     	;# 
  3875  010E                     	;# 
  3876  0111                     	;# 
  3877  0112                     	;# 
  3878  0113                     	;# 
  3879  0114                     	;# 
  3880  0115                     	;# 
  3881  0116                     	;# 
  3882  0117                     	;# 
  3883  0118                     	;# 
  3884  0119                     	;# 
  3885  018C                     	;# 
  3886  018D                     	;# 
  3887  018E                     	;# 
  3888  0197                     	;# 
  3889  0199                     	;# 
  3890  0199                     	;# 
  3891  0199                     	;# 
  3892  019A                     	;# 
  3893  019A                     	;# 
  3894  019A                     	;# 
  3895  019B                     	;# 
  3896  019B                     	;# 
  3897  019B                     	;# 
  3898  019B                     	;# 
  3899  019B                     	;# 
  3900  019C                     	;# 
  3901  019C                     	;# 
  3902  019C                     	;# 
  3903  019D                     	;# 
  3904  019D                     	;# 
  3905  019D                     	;# 
  3906  019E                     	;# 
  3907  019E                     	;# 
  3908  019E                     	;# 
  3909  019F                     	;# 
  3910  019F                     	;# 
  3911  019F                     	;# 
  3912  019F                     	;# 
  3913  019F                     	;# 
  3914  020C                     	;# 
  3915  020D                     	;# 
  3916  020E                     	;# 
  3917  0211                     	;# 
  3918  0211                     	;# 
  3919  0212                     	;# 
  3920  0212                     	;# 
  3921  0213                     	;# 
  3922  0213                     	;# 
  3923  0214                     	;# 
  3924  0214                     	;# 
  3925  0215                     	;# 
  3926  0215                     	;# 
  3927  0215                     	;# 
  3928  0215                     	;# 
  3929  0216                     	;# 
  3930  0216                     	;# 
  3931  0217                     	;# 
  3932  0217                     	;# 
  3933  0219                     	;# 
  3934  021A                     	;# 
  3935  021B                     	;# 
  3936  021C                     	;# 
  3937  021D                     	;# 
  3938  021D                     	;# 
  3939  021E                     	;# 
  3940  021F                     	;# 
  3941  028C                     	;# 
  3942  028D                     	;# 
  3943  028E                     	;# 
  3944  0291                     	;# 
  3945  0291                     	;# 
  3946  0292                     	;# 
  3947  0293                     	;# 
  3948  0294                     	;# 
  3949  0295                     	;# 
  3950  0295                     	;# 
  3951  0296                     	;# 
  3952  0297                     	;# 
  3953  0298                     	;# 
  3954  029F                     	;# 
  3955  030C                     	;# 
  3956  030D                     	;# 
  3957  030E                     	;# 
  3958  0311                     	;# 
  3959  0311                     	;# 
  3960  0312                     	;# 
  3961  0313                     	;# 
  3962  0314                     	;# 
  3963  0315                     	;# 
  3964  0315                     	;# 
  3965  0316                     	;# 
  3966  0317                     	;# 
  3967  0318                     	;# 
  3968  038C                     	;# 
  3969  038D                     	;# 
  3970  038E                     	;# 
  3971  0391                     	;# 
  3972  0392                     	;# 
  3973  0393                     	;# 
  3974  0394                     	;# 
  3975  0395                     	;# 
  3976  0396                     	;# 
  3977  0397                     	;# 
  3978  0398                     	;# 
  3979  0399                     	;# 
  3980  039A                     	;# 
  3981  039C                     	;# 
  3982  039D                     	;# 
  3983  039E                     	;# 
  3984  039F                     	;# 
  3985  0411                     	;# 
  3986  0411                     	;# 
  3987  0412                     	;# 
  3988  0413                     	;# 
  3989  0414                     	;# 
  3990  0415                     	;# 
  3991  0416                     	;# 
  3992  0417                     	;# 
  3993  0418                     	;# 
  3994  0418                     	;# 
  3995  0419                     	;# 
  3996  041A                     	;# 
  3997  041B                     	;# 
  3998  041C                     	;# 
  3999  041D                     	;# 
  4000  041E                     	;# 
  4001  041F                     	;# 
  4002  0498                     	;# 
  4003  0498                     	;# 
  4004  0499                     	;# 
  4005  049A                     	;# 
  4006  049B                     	;# 
  4007  049B                     	;# 
  4008  049C                     	;# 
  4009  049D                     	;# 
  4010  049E                     	;# 
  4011  049F                     	;# 
  4012  0617                     	;# 
  4013  0618                     	;# 
  4014  0619                     	;# 
  4015  0619                     	;# 
  4016  061A                     	;# 
  4017  061B                     	;# 
  4018  061C                     	;# 
  4019  061C                     	;# 
  4020  061F                     	;# 
  4021  0691                     	;# 
  4022  0692                     	;# 
  4023  0693                     	;# 
  4024  0694                     	;# 
  4025  0695                     	;# 
  4026  0696                     	;# 
  4027  0697                     	;# 
  4028  0698                     	;# 
  4029  0699                     	;# 
  4030  0711                     	;# 
  4031  0712                     	;# 
  4032  0713                     	;# 
  4033  0714                     	;# 
  4034  0715                     	;# 
  4035  0716                     	;# 
  4036  0717                     	;# 
  4037  0718                     	;# 
  4038  0719                     	;# 
  4039  0891                     	;# 
  4040  0891                     	;# 
  4041  0891                     	;# 
  4042  0891                     	;# 
  4043  0891                     	;# 
  4044  0891                     	;# 
  4045  0892                     	;# 
  4046  0892                     	;# 
  4047  0892                     	;# 
  4048  0893                     	;# 
  4049  0893                     	;# 
  4050  0893                     	;# 
  4051  0893                     	;# 
  4052  0893                     	;# 
  4053  0893                     	;# 
  4054  0894                     	;# 
  4055  0894                     	;# 
  4056  0894                     	;# 
  4057  0895                     	;# 
  4058  0895                     	;# 
  4059  0895                     	;# 
  4060  0896                     	;# 
  4061  0896                     	;# 
  4062  0896                     	;# 
  4063  089B                     	;# 
  4064  0911                     	;# 
  4065  0912                     	;# 
  4066  0913                     	;# 
  4067  0914                     	;# 
  4068  0915                     	;# 
  4069  0916                     	;# 
  4070  0918                     	;# 
  4071  0919                     	;# 
  4072  091A                     	;# 
  4073  091B                     	;# 
  4074  091C                     	;# 
  4075  091D                     	;# 
  4076  091E                     	;# 
  4077  091F                     	;# 
  4078  0E0F                     	;# 
  4079  0E10                     	;# 
  4080  0E11                     	;# 
  4081  0E12                     	;# 
  4082  0E13                     	;# 
  4083  0E14                     	;# 
  4084  0E15                     	;# 
  4085  0E16                     	;# 
  4086  0E17                     	;# 
  4087  0E18                     	;# 
  4088  0E19                     	;# 
  4089  0E1A                     	;# 
  4090  0E1B                     	;# 
  4091  0E1C                     	;# 
  4092  0E1D                     	;# 
  4093  0E1E                     	;# 
  4094  0E1F                     	;# 
  4095  0E20                     	;# 
  4096  0E21                     	;# 
  4097  0E22                     	;# 
  4098  0E24                     	;# 
  4099  0E25                     	;# 
  4100  0E28                     	;# 
  4101  0E29                     	;# 
  4102  0E2A                     	;# 
  4103  0E2B                     	;# 
  4104  0E2C                     	;# 
  4105  0E2D                     	;# 
  4106  0E2E                     	;# 
  4107  0E2F                     	;# 
  4108  0E90                     	;# 
  4109  0E91                     	;# 
  4110  0E92                     	;# 
  4111  0E94                     	;# 
  4112  0E95                     	;# 
  4113  0E9C                     	;# 
  4114  0E9D                     	;# 
  4115  0E9E                     	;# 
  4116  0E9F                     	;# 
  4117  0EA0                     	;# 
  4118  0EA1                     	;# 
  4119  0EA2                     	;# 
  4120  0EA3                     	;# 
  4121  0EA4                     	;# 
  4122  0EA5                     	;# 
  4123  0EA6                     	;# 
  4124  0EA7                     	;# 
  4125  0F0F                     	;# 
  4126  0F10                     	;# 
  4127  0F11                     	;# 
  4128  0F12                     	;# 
  4129  0F13                     	;# 
  4130  0F14                     	;# 
  4131  0F15                     	;# 
  4132  0F16                     	;# 
  4133  0F17                     	;# 
  4134  0F18                     	;# 
  4135  0F19                     	;# 
  4136  0F1A                     	;# 
  4137  0F1B                     	;# 
  4138  0F1C                     	;# 
  4139  0F1D                     	;# 
  4140  0F1E                     	;# 
  4141  0F1F                     	;# 
  4142  0F20                     	;# 
  4143  0F21                     	;# 
  4144  0F22                     	;# 
  4145  0F23                     	;# 
  4146  0F24                     	;# 
  4147  0F25                     	;# 
  4148  0F26                     	;# 
  4149  0F27                     	;# 
  4150  0F28                     	;# 
  4151  0F29                     	;# 
  4152  0F2A                     	;# 
  4153  0F2B                     	;# 
  4154  0F2C                     	;# 
  4155  0F2D                     	;# 
  4156  0F2E                     	;# 
  4157  0F2F                     	;# 
  4158  0F30                     	;# 
  4159  0F31                     	;# 
  4160  0F32                     	;# 
  4161  0F33                     	;# 
  4162  0F34                     	;# 
  4163  0F35                     	;# 
  4164  0F36                     	;# 
  4165  0F37                     	;# 
  4166  0FE4                     	;# 
  4167  0FE5                     	;# 
  4168  0FE6                     	;# 
  4169  0FE7                     	;# 
  4170  0FE8                     	;# 
  4171  0FE9                     	;# 
  4172  0FEA                     	;# 
  4173  0FEB                     	;# 
  4174  0FED                     	;# 
  4175  0FEE                     	;# 
  4176  0FEF                     	;# 
  4177  0000                     	;# 
  4178  0001                     	;# 
  4179  0002                     	;# 
  4180  0003                     	;# 
  4181  0004                     	;# 
  4182  0005                     	;# 
  4183  0006                     	;# 
  4184  0007                     	;# 
  4185  0008                     	;# 
  4186  0009                     	;# 
  4187  000A                     	;# 
  4188  000B                     	;# 
  4189  000C                     	;# 
  4190  000D                     	;# 
  4191  000E                     	;# 
  4192  0010                     	;# 
  4193  0011                     	;# 
  4194  0012                     	;# 
  4195  0013                     	;# 
  4196  0014                     	;# 
  4197  0015                     	;# 
  4198  0015                     	;# 
  4199  0016                     	;# 
  4200  0016                     	;# 
  4201  0017                     	;# 
  4202  0018                     	;# 
  4203  0019                     	;# 
  4204  0019                     	;# 
  4205  001A                     	;# 
  4206  001B                     	;# 
  4207  001C                     	;# 
  4208  001D                     	;# 
  4209  001E                     	;# 
  4210  001F                     	;# 
  4211  008C                     	;# 
  4212  008D                     	;# 
  4213  008E                     	;# 
  4214  0090                     	;# 
  4215  0091                     	;# 
  4216  0092                     	;# 
  4217  0093                     	;# 
  4218  0094                     	;# 
  4219  0097                     	;# 
  4220  009B                     	;# 
  4221  009B                     	;# 
  4222  009C                     	;# 
  4223  009D                     	;# 
  4224  009E                     	;# 
  4225  009F                     	;# 
  4226  010C                     	;# 
  4227  010D                     	;# 
  4228  010E                     	;# 
  4229  0111                     	;# 
  4230  0112                     	;# 
  4231  0113                     	;# 
  4232  0114                     	;# 
  4233  0115                     	;# 
  4234  0116                     	;# 
  4235  0117                     	;# 
  4236  0118                     	;# 
  4237  0119                     	;# 
  4238  018C                     	;# 
  4239  018D                     	;# 
  4240  018E                     	;# 
  4241  0197                     	;# 
  4242  0199                     	;# 
  4243  0199                     	;# 
  4244  0199                     	;# 
  4245  019A                     	;# 
  4246  019A                     	;# 
  4247  019A                     	;# 
  4248  019B                     	;# 
  4249  019B                     	;# 
  4250  019B                     	;# 
  4251  019B                     	;# 
  4252  019B                     	;# 
  4253  019C                     	;# 
  4254  019C                     	;# 
  4255  019C                     	;# 
  4256  019D                     	;# 
  4257  019D                     	;# 
  4258  019D                     	;# 
  4259  019E                     	;# 
  4260  019E                     	;# 
  4261  019E                     	;# 
  4262  019F                     	;# 
  4263  019F                     	;# 
  4264  019F                     	;# 
  4265  019F                     	;# 
  4266  019F                     	;# 
  4267  020C                     	;# 
  4268  020D                     	;# 
  4269  020E                     	;# 
  4270  0211                     	;# 
  4271  0211                     	;# 
  4272  0212                     	;# 
  4273  0212                     	;# 
  4274  0213                     	;# 
  4275  0213                     	;# 
  4276  0214                     	;# 
  4277  0214                     	;# 
  4278  0215                     	;# 
  4279  0215                     	;# 
  4280  0215                     	;# 
  4281  0215                     	;# 
  4282  0216                     	;# 
  4283  0216                     	;# 
  4284  0217                     	;# 
  4285  0217                     	;# 
  4286  0219                     	;# 
  4287  021A                     	;# 
  4288  021B                     	;# 
  4289  021C                     	;# 
  4290  021D                     	;# 
  4291  021D                     	;# 
  4292  021E                     	;# 
  4293  021F                     	;# 
  4294  028C                     	;# 
  4295  028D                     	;# 
  4296  028E                     	;# 
  4297  0291                     	;# 
  4298  0291                     	;# 
  4299  0292                     	;# 
  4300  0293                     	;# 
  4301  0294                     	;# 
  4302  0295                     	;# 
  4303  0295                     	;# 
  4304  0296                     	;# 
  4305  0297                     	;# 
  4306  0298                     	;# 
  4307  029F                     	;# 
  4308  030C                     	;# 
  4309  030D                     	;# 
  4310  030E                     	;# 
  4311  0311                     	;# 
  4312  0311                     	;# 
  4313  0312                     	;# 
  4314  0313                     	;# 
  4315  0314                     	;# 
  4316  0315                     	;# 
  4317  0315                     	;# 
  4318  0316                     	;# 
  4319  0317                     	;# 
  4320  0318                     	;# 
  4321  038C                     	;# 
  4322  038D                     	;# 
  4323  038E                     	;# 
  4324  0391                     	;# 
  4325  0392                     	;# 
  4326  0393                     	;# 
  4327  0394                     	;# 
  4328  0395                     	;# 
  4329  0396                     	;# 
  4330  0397                     	;# 
  4331  0398                     	;# 
  4332  0399                     	;# 
  4333  039A                     	;# 
  4334  039C                     	;# 
  4335  039D                     	;# 
  4336  039E                     	;# 
  4337  039F                     	;# 
  4338  0411                     	;# 
  4339  0411                     	;# 
  4340  0412                     	;# 
  4341  0413                     	;# 
  4342  0414                     	;# 
  4343  0415                     	;# 
  4344  0416                     	;# 
  4345  0417                     	;# 
  4346  0418                     	;# 
  4347  0418                     	;# 
  4348  0419                     	;# 
  4349  041A                     	;# 
  4350  041B                     	;# 
  4351  041C                     	;# 
  4352  041D                     	;# 
  4353  041E                     	;# 
  4354  041F                     	;# 
  4355  0498                     	;# 
  4356  0498                     	;# 
  4357  0499                     	;# 
  4358  049A                     	;# 
  4359  049B                     	;# 
  4360  049B                     	;# 
  4361  049C                     	;# 
  4362  049D                     	;# 
  4363  049E                     	;# 
  4364  049F                     	;# 
  4365  0617                     	;# 
  4366  0618                     	;# 
  4367  0619                     	;# 
  4368  0619                     	;# 
  4369  061A                     	;# 
  4370  061B                     	;# 
  4371  061C                     	;# 
  4372  061C                     	;# 
  4373  061F                     	;# 
  4374  0691                     	;# 
  4375  0692                     	;# 
  4376  0693                     	;# 
  4377  0694                     	;# 
  4378  0695                     	;# 
  4379  0696                     	;# 
  4380  0697                     	;# 
  4381  0698                     	;# 
  4382  0699                     	;# 
  4383  0711                     	;# 
  4384  0712                     	;# 
  4385  0713                     	;# 
  4386  0714                     	;# 
  4387  0715                     	;# 
  4388  0716                     	;# 
  4389  0717                     	;# 
  4390  0718                     	;# 
  4391  0719                     	;# 
  4392  0891                     	;# 
  4393  0891                     	;# 
  4394  0891                     	;# 
  4395  0891                     	;# 
  4396  0891                     	;# 
  4397  0891                     	;# 
  4398  0892                     	;# 
  4399  0892                     	;# 
  4400  0892                     	;# 
  4401  0893                     	;# 
  4402  0893                     	;# 
  4403  0893                     	;# 
  4404  0893                     	;# 
  4405  0893                     	;# 
  4406  0893                     	;# 
  4407  0894                     	;# 
  4408  0894                     	;# 
  4409  0894                     	;# 
  4410  0895                     	;# 
  4411  0895                     	;# 
  4412  0895                     	;# 
  4413  0896                     	;# 
  4414  0896                     	;# 
  4415  0896                     	;# 
  4416  089B                     	;# 
  4417  0911                     	;# 
  4418  0912                     	;# 
  4419  0913                     	;# 
  4420  0914                     	;# 
  4421  0915                     	;# 
  4422  0916                     	;# 
  4423  0918                     	;# 
  4424  0919                     	;# 
  4425  091A                     	;# 
  4426  091B                     	;# 
  4427  091C                     	;# 
  4428  091D                     	;# 
  4429  091E                     	;# 
  4430  091F                     	;# 
  4431  0E0F                     	;# 
  4432  0E10                     	;# 
  4433  0E11                     	;# 
  4434  0E12                     	;# 
  4435  0E13                     	;# 
  4436  0E14                     	;# 
  4437  0E15                     	;# 
  4438  0E16                     	;# 
  4439  0E17                     	;# 
  4440  0E18                     	;# 
  4441  0E19                     	;# 
  4442  0E1A                     	;# 
  4443  0E1B                     	;# 
  4444  0E1C                     	;# 
  4445  0E1D                     	;# 
  4446  0E1E                     	;# 
  4447  0E1F                     	;# 
  4448  0E20                     	;# 
  4449  0E21                     	;# 
  4450  0E22                     	;# 
  4451  0E24                     	;# 
  4452  0E25                     	;# 
  4453  0E28                     	;# 
  4454  0E29                     	;# 
  4455  0E2A                     	;# 
  4456  0E2B                     	;# 
  4457  0E2C                     	;# 
  4458  0E2D                     	;# 
  4459  0E2E                     	;# 
  4460  0E2F                     	;# 
  4461  0E90                     	;# 
  4462  0E91                     	;# 
  4463  0E92                     	;# 
  4464  0E94                     	;# 
  4465  0E95                     	;# 
  4466  0E9C                     	;# 
  4467  0E9D                     	;# 
  4468  0E9E                     	;# 
  4469  0E9F                     	;# 
  4470  0EA0                     	;# 
  4471  0EA1                     	;# 
  4472  0EA2                     	;# 
  4473  0EA3                     	;# 
  4474  0EA4                     	;# 
  4475  0EA5                     	;# 
  4476  0EA6                     	;# 
  4477  0EA7                     	;# 
  4478  0F0F                     	;# 
  4479  0F10                     	;# 
  4480  0F11                     	;# 
  4481  0F12                     	;# 
  4482  0F13                     	;# 
  4483  0F14                     	;# 
  4484  0F15                     	;# 
  4485  0F16                     	;# 
  4486  0F17                     	;# 
  4487  0F18                     	;# 
  4488  0F19                     	;# 
  4489  0F1A                     	;# 
  4490  0F1B                     	;# 
  4491  0F1C                     	;# 
  4492  0F1D                     	;# 
  4493  0F1E                     	;# 
  4494  0F1F                     	;# 
  4495  0F20                     	;# 
  4496  0F21                     	;# 
  4497  0F22                     	;# 
  4498  0F23                     	;# 
  4499  0F24                     	;# 
  4500  0F25                     	;# 
  4501  0F26                     	;# 
  4502  0F27                     	;# 
  4503  0F28                     	;# 
  4504  0F29                     	;# 
  4505  0F2A                     	;# 
  4506  0F2B                     	;# 
  4507  0F2C                     	;# 
  4508  0F2D                     	;# 
  4509  0F2E                     	;# 
  4510  0F2F                     	;# 
  4511  0F30                     	;# 
  4512  0F31                     	;# 
  4513  0F32                     	;# 
  4514  0F33                     	;# 
  4515  0F34                     	;# 
  4516  0F35                     	;# 
  4517  0F36                     	;# 
  4518  0F37                     	;# 
  4519  0FE4                     	;# 
  4520  0FE5                     	;# 
  4521  0FE6                     	;# 
  4522  0FE7                     	;# 
  4523  0FE8                     	;# 
  4524  0FE9                     	;# 
  4525  0FEA                     	;# 
  4526  0FEB                     	;# 
  4527  0FED                     	;# 
  4528  0FEE                     	;# 
  4529  0FEF                     	;_currentPositions_steps
  4530                           
  4531                           	psect	idataBANK0
  4532  2240                     __pidataBANK0:	
  4533                           
  4534                           ;initializer for _demoLong
  4535  2240  3401               	retlw	1
  4536  2241  3400               	retlw	0
  4537  2242  3400               	retlw	0
  4538  2243  3400               	retlw	0
  4539                           
  4540                           	psect	idataBANK1
  4541  2280                     __pidataBANK1:	
  4542                           
  4543                           ;initializer for _piezo_on_time_ms
  4544  2280  34E8               	retlw	232
  4545  2281  3403               	retlw	3
  4546                           
  4547                           ;initializer for _heater_post_time_ms
  4548  2282  340A               	retlw	10
  4549  2283  3400               	retlw	0
  4550                           
  4551                           ;initializer for _heater_pre_time_ms
  4552  2284  340A               	retlw	10
  4553  2285  3400               	retlw	0
  4554                           
  4555                           	psect	idataBANK2
  4556  0002                     __pidataBANK2:	
  4557                           
  4558                           ;initializer for _drv_peak_val
  4559  0002  347F               	retlw	127
  4560  0003  3400               	retlw	0
  4561                           
  4562                           	psect	idataBANK4
  4563  259B                     __pidataBANK4:	
  4564                           
  4565                           ;initializer for _fsmStateTable
  4566  259B  34FF               	retlw	low _do_I2C_IDLE
  4567  259C  3422               	retlw	high _do_I2C_IDLE
  4568  259D  3479               	retlw	low _do_I2C_SEND_ADR_READ
  4569  259E  3423               	retlw	high _do_I2C_SEND_ADR_READ
  4570  259F  3457               	retlw	low _do_I2C_SEND_ADR_WRITE
  4571  25A0  3423               	retlw	high _do_I2C_SEND_ADR_WRITE
  4572  25A1  34CF               	retlw	low _do_I2C_TX
  4573  25A2  341D               	retlw	high _do_I2C_TX
  4574  25A3  34DD               	retlw	low _do_I2C_RX
  4575  25A4  3419               	retlw	high _do_I2C_RX
  4576  25A5  3424               	retlw	low _do_I2C_RCEN
  4577  25A6  3423               	retlw	high _do_I2C_RCEN
  4578  25A7  3471               	retlw	low _do_I2C_TX_EMPTY
  4579  25A8  3427               	retlw	high _do_I2C_TX_EMPTY
  4580  25A9  34A4               	retlw	low _do_I2C_SEND_RESTART_READ
  4581  25AA  3422               	retlw	high _do_I2C_SEND_RESTART_READ
  4582  25AB  34AC               	retlw	low _do_I2C_SEND_RESTART_WRITE
  4583  25AC  3422               	retlw	high _do_I2C_SEND_RESTART_WRITE
  4584  25AD  34B4               	retlw	low _do_I2C_SEND_RESTART
  4585  25AE  3422               	retlw	high _do_I2C_SEND_RESTART
  4586  25AF  34BC               	retlw	low _do_I2C_SEND_STOP
  4587  25B0  3422               	retlw	high _do_I2C_SEND_STOP
  4588  25B1  34C4               	retlw	low _do_I2C_DO_ACK
  4589  25B2  3422               	retlw	high _do_I2C_DO_ACK
  4590  25B3  34CC               	retlw	low _do_I2C_DO_NACK_STOP
  4591  25B4  3422               	retlw	high _do_I2C_DO_NACK_STOP
  4592  25B5  34D4               	retlw	low _do_I2C_DO_NACK_RESTART
  4593  25B6  3422               	retlw	high _do_I2C_DO_NACK_RESTART
  4594  25B7  344C               	retlw	low _do_I2C_RESET
  4595  25B8  3423               	retlw	high _do_I2C_RESET
  4596  25B9  3446               	retlw	low _do_I2C_DO_ADDRESS_NACK
  4597  25BA  3427               	retlw	high _do_I2C_DO_ADDRESS_NACK
  4598                           
  4599                           	psect	stringtext1
  4600  1000                     __pstringtext1:	
  4601  1000                     _drv_fifo_sine:	
  4602  1000  340B               	retlw	11
  4603  1001  3400               	retlw	0
  4604  1002  3400               	retlw	0
  4605  1003  3400               	retlw	0
  4606  1004  3410               	retlw	16
  4607  1005  3400               	retlw	0
  4608  1006  3420               	retlw	32
  4609  1007  3400               	retlw	0
  4610  1008  342E               	retlw	46
  4611  1009  3400               	retlw	0
  4612  100A  343C               	retlw	60
  4613  100B  3400               	retlw	0
  4614  100C  3448               	retlw	72
  4615  100D  3400               	retlw	0
  4616  100E  3453               	retlw	83
  4617  100F  3400               	retlw	0
  4618  1010  345B               	retlw	91
  4619  1011  3400               	retlw	0
  4620  1012  3461               	retlw	97
  4621  1013  3400               	retlw	0
  4622  1014  3465               	retlw	101
  4623  1015  3400               	retlw	0
  4624  1016  3466               	retlw	102
  4625  1017  3400               	retlw	0
  4626  1018  3465               	retlw	101
  4627  1019  3400               	retlw	0
  4628  101A  3461               	retlw	97
  4629  101B  3400               	retlw	0
  4630  101C  345B               	retlw	91
  4631  101D  3400               	retlw	0
  4632  101E  3453               	retlw	83
  4633  101F  3400               	retlw	0
  4634  1020  3448               	retlw	72
  4635  1021  3400               	retlw	0
  4636  1022  343C               	retlw	60
  4637  1023  3400               	retlw	0
  4638  1024  342E               	retlw	46
  4639  1025  3400               	retlw	0
  4640  1026  3420               	retlw	32
  4641  1027  3400               	retlw	0
  4642  1028  3410               	retlw	16
  4643  1029  3400               	retlw	0
  4644  102A  3400               	retlw	0
  4645  102B  3400               	retlw	0
  4646  102C  34F0               	retlw	240
  4647  102D  3400               	retlw	0
  4648  102E  34E0               	retlw	224
  4649  102F  3400               	retlw	0
  4650  1030  34D2               	retlw	210
  4651  1031  3400               	retlw	0
  4652  1032  34C4               	retlw	196
  4653  1033  3400               	retlw	0
  4654  1034  34B8               	retlw	184
  4655  1035  3400               	retlw	0
  4656  1036  34AD               	retlw	173
  4657  1037  3400               	retlw	0
  4658  1038  34A5               	retlw	165
  4659  1039  3400               	retlw	0
  4660  103A  349F               	retlw	159
  4661  103B  3400               	retlw	0
  4662  103C  349B               	retlw	155
  4663  103D  3400               	retlw	0
  4664  103E  349A               	retlw	154
  4665  103F  3400               	retlw	0
  4666  1040  349B               	retlw	155
  4667  1041  3400               	retlw	0
  4668  1042  349F               	retlw	159
  4669  1043  3400               	retlw	0
  4670  1044  34A5               	retlw	165
  4671  1045  3400               	retlw	0
  4672  1046  34AD               	retlw	173
  4673  1047  3400               	retlw	0
  4674  1048  34B8               	retlw	184
  4675  1049  3400               	retlw	0
  4676  104A  34C4               	retlw	196
  4677  104B  3400               	retlw	0
  4678  104C  34D2               	retlw	210
  4679  104D  3400               	retlw	0
  4680  104E  34E0               	retlw	224
  4681  104F  3400               	retlw	0
  4682  1050  34F0               	retlw	240
  4683  1051  3400               	retlw	0
  4684  1052  3400               	retlw	0
  4685  1053  3400               	retlw	0
  4686  1054  3410               	retlw	16
  4687  1055  3400               	retlw	0
  4688  1056  3420               	retlw	32
  4689  1057  3400               	retlw	0
  4690  1058  342E               	retlw	46
  4691  1059  3400               	retlw	0
  4692  105A  343C               	retlw	60
  4693  105B  3400               	retlw	0
  4694  105C  3448               	retlw	72
  4695  105D  3400               	retlw	0
  4696  105E  3453               	retlw	83
  4697  105F  3400               	retlw	0
  4698  1060  345B               	retlw	91
  4699  1061  3400               	retlw	0
  4700  1062  3461               	retlw	97
  4701  1063  3400               	retlw	0
  4702  1064  3465               	retlw	101
  4703  1065  3400               	retlw	0
  4704  1066  3466               	retlw	102
  4705  1067  3400               	retlw	0
  4706  1068  3465               	retlw	101
  4707  1069  3400               	retlw	0
  4708  106A  3461               	retlw	97
  4709  106B  3400               	retlw	0
  4710  106C  345B               	retlw	91
  4711  106D  3400               	retlw	0
  4712  106E  3453               	retlw	83
  4713  106F  3400               	retlw	0
  4714  1070  3448               	retlw	72
  4715  1071  3400               	retlw	0
  4716  1072  343C               	retlw	60
  4717  1073  3400               	retlw	0
  4718  1074  342E               	retlw	46
  4719  1075  3400               	retlw	0
  4720  1076  3420               	retlw	32
  4721  1077  3400               	retlw	0
  4722  1078  3410               	retlw	16
  4723  1079  3400               	retlw	0
  4724  107A  3400               	retlw	0
  4725  107B  3400               	retlw	0
  4726  107C  34F0               	retlw	240
  4727  107D  3400               	retlw	0
  4728  107E  34E0               	retlw	224
  4729  107F  3400               	retlw	0
  4730  1080  34D2               	retlw	210
  4731  1081  3400               	retlw	0
  4732  1082  34C4               	retlw	196
  4733  1083  3400               	retlw	0
  4734  1084  34B8               	retlw	184
  4735  1085  3400               	retlw	0
  4736  1086  34AD               	retlw	173
  4737  1087  3400               	retlw	0
  4738  1088  34A5               	retlw	165
  4739  1089  3400               	retlw	0
  4740  108A  349F               	retlw	159
  4741  108B  3400               	retlw	0
  4742  108C  349B               	retlw	155
  4743  108D  3400               	retlw	0
  4744  108E  349A               	retlw	154
  4745  108F  3400               	retlw	0
  4746  1090  349B               	retlw	155
  4747  1091  3400               	retlw	0
  4748  1092  349F               	retlw	159
  4749  1093  3400               	retlw	0
  4750  1094  34A5               	retlw	165
  4751  1095  3400               	retlw	0
  4752  1096  34AD               	retlw	173
  4753  1097  3400               	retlw	0
  4754  1098  34B8               	retlw	184
  4755  1099  3400               	retlw	0
  4756  109A  34C4               	retlw	196
  4757  109B  3400               	retlw	0
  4758  109C  34D2               	retlw	210
  4759  109D  3400               	retlw	0
  4760  109E  34E0               	retlw	224
  4761  109F  3400               	retlw	0
  4762  10A0  34F0               	retlw	240
  4763  10A1  3400               	retlw	0
  4764  10A2  3400               	retlw	0
  4765  10A3  3400               	retlw	0
  4766  10A4  3410               	retlw	16
  4767  10A5  3400               	retlw	0
  4768  10A6  3420               	retlw	32
  4769  10A7  3400               	retlw	0
  4770  10A8  342E               	retlw	46
  4771  10A9  3400               	retlw	0
  4772  10AA  343C               	retlw	60
  4773  10AB  3400               	retlw	0
  4774  10AC  3448               	retlw	72
  4775  10AD  3400               	retlw	0
  4776  10AE  3453               	retlw	83
  4777  10AF  3400               	retlw	0
  4778  10B0  345B               	retlw	91
  4779  10B1  3400               	retlw	0
  4780  10B2  3461               	retlw	97
  4781  10B3  3400               	retlw	0
  4782  10B4  3465               	retlw	101
  4783  10B5  3400               	retlw	0
  4784  10B6  3466               	retlw	102
  4785  10B7  3400               	retlw	0
  4786  10B8  3465               	retlw	101
  4787  10B9  3400               	retlw	0
  4788  10BA  3461               	retlw	97
  4789  10BB  3400               	retlw	0
  4790  10BC  345B               	retlw	91
  4791  10BD  3400               	retlw	0
  4792  10BE  3453               	retlw	83
  4793  10BF  3400               	retlw	0
  4794  10C0  3448               	retlw	72
  4795  10C1  3400               	retlw	0
  4796  10C2  343C               	retlw	60
  4797  10C3  3400               	retlw	0
  4798  10C4  342E               	retlw	46
  4799  10C5  3400               	retlw	0
  4800  10C6  3420               	retlw	32
  4801  10C7  3400               	retlw	0
  4802  10C8  3410               	retlw	16
  4803  10C9  3400               	retlw	0
  4804  10CA  3400               	retlw	0
  4805  10CB  3400               	retlw	0
  4806  10CC  34F0               	retlw	240
  4807  10CD  3400               	retlw	0
  4808  10CE  34E0               	retlw	224
  4809  10CF  3400               	retlw	0
  4810  10D0  34D2               	retlw	210
  4811  10D1  3400               	retlw	0
  4812  10D2  34C4               	retlw	196
  4813  10D3  3400               	retlw	0
  4814  10D4  34B8               	retlw	184
  4815  10D5  3400               	retlw	0
  4816  10D6  34AD               	retlw	173
  4817  10D7  3400               	retlw	0
  4818  10D8  34A5               	retlw	165
  4819  10D9  3400               	retlw	0
  4820  10DA  349F               	retlw	159
  4821  10DB  3400               	retlw	0
  4822  10DC  349B               	retlw	155
  4823  10DD  3400               	retlw	0
  4824  10DE  349A               	retlw	154
  4825  10DF  3400               	retlw	0
  4826  10E0  349B               	retlw	155
  4827  10E1  3400               	retlw	0
  4828  10E2  349F               	retlw	159
  4829  10E3  3400               	retlw	0
  4830  10E4  34A5               	retlw	165
  4831  10E5  3400               	retlw	0
  4832  10E6  34AD               	retlw	173
  4833  10E7  3400               	retlw	0
  4834  10E8  34B8               	retlw	184
  4835  10E9  3400               	retlw	0
  4836  10EA  34C4               	retlw	196
  4837  10EB  3400               	retlw	0
  4838  10EC  34D2               	retlw	210
  4839  10ED  3400               	retlw	0
  4840  10EE  34E0               	retlw	224
  4841  10EF  3400               	retlw	0
  4842  10F0  34F0               	retlw	240
  4843  10F1  3400               	retlw	0
  4844  10F2  3400               	retlw	0
  4845  10F3  3400               	retlw	0
  4846  10F4                     __end_of_drv_fifo_sine:	
  4847                           
  4848                           	psect	stringtext2
  4849  11E8                     __pstringtext2:	
  4850  11E8                     drv2665@drv_sine:	
  4851  11E8  3400               	retlw	0
  4852  11E9  3400               	retlw	0
  4853  11EA  3410               	retlw	16
  4854  11EB  3400               	retlw	0
  4855  11EC  3420               	retlw	32
  4856  11ED  3400               	retlw	0
  4857  11EE  342E               	retlw	46
  4858  11EF  3400               	retlw	0
  4859  11F0  343C               	retlw	60
  4860  11F1  3400               	retlw	0
  4861  11F2  3448               	retlw	72
  4862  11F3  3400               	retlw	0
  4863  11F4  3453               	retlw	83
  4864  11F5  3400               	retlw	0
  4865  11F6  345B               	retlw	91
  4866  11F7  3400               	retlw	0
  4867  11F8  3461               	retlw	97
  4868  11F9  3400               	retlw	0
  4869  11FA  3465               	retlw	101
  4870  11FB  3400               	retlw	0
  4871  11FC  3466               	retlw	102
  4872  11FD  3400               	retlw	0
  4873  11FE  3465               	retlw	101
  4874  11FF  3400               	retlw	0
  4875  1200  3461               	retlw	97
  4876  1201  3400               	retlw	0
  4877  1202  345B               	retlw	91
  4878  1203  3400               	retlw	0
  4879  1204  3453               	retlw	83
  4880  1205  3400               	retlw	0
  4881  1206  3448               	retlw	72
  4882  1207  3400               	retlw	0
  4883  1208  343C               	retlw	60
  4884  1209  3400               	retlw	0
  4885  120A  342E               	retlw	46
  4886  120B  3400               	retlw	0
  4887  120C  3420               	retlw	32
  4888  120D  3400               	retlw	0
  4889  120E  3410               	retlw	16
  4890  120F  3400               	retlw	0
  4891  1210  3400               	retlw	0
  4892  1211  3400               	retlw	0
  4893  1212  34F0               	retlw	240
  4894  1213  3400               	retlw	0
  4895  1214  34E0               	retlw	224
  4896  1215  3400               	retlw	0
  4897  1216  34D2               	retlw	210
  4898  1217  3400               	retlw	0
  4899  1218  34C4               	retlw	196
  4900  1219  3400               	retlw	0
  4901  121A  34B8               	retlw	184
  4902  121B  3400               	retlw	0
  4903  121C  34AD               	retlw	173
  4904  121D  3400               	retlw	0
  4905  121E  34A5               	retlw	165
  4906  121F  3400               	retlw	0
  4907  1220  349F               	retlw	159
  4908  1221  3400               	retlw	0
  4909  1222  349B               	retlw	155
  4910  1223  3400               	retlw	0
  4911  1224  349A               	retlw	154
  4912  1225  3400               	retlw	0
  4913  1226  349B               	retlw	155
  4914  1227  3400               	retlw	0
  4915  1228  349F               	retlw	159
  4916  1229  3400               	retlw	0
  4917  122A  34A5               	retlw	165
  4918  122B  3400               	retlw	0
  4919  122C  34AD               	retlw	173
  4920  122D  3400               	retlw	0
  4921  122E  34B8               	retlw	184
  4922  122F  3400               	retlw	0
  4923  1230  34C4               	retlw	196
  4924  1231  3400               	retlw	0
  4925  1232  34D2               	retlw	210
  4926  1233  3400               	retlw	0
  4927  1234  34E0               	retlw	224
  4928  1235  3400               	retlw	0
  4929  1236  34F0               	retlw	240
  4930  1237  3400               	retlw	0
  4931  1238  3400               	retlw	0
  4932  1239  3400               	retlw	0
  4933  123A  3410               	retlw	16
  4934  123B  3400               	retlw	0
  4935  123C  3420               	retlw	32
  4936  123D  3400               	retlw	0
  4937  123E  342E               	retlw	46
  4938  123F  3400               	retlw	0
  4939  1240  343C               	retlw	60
  4940  1241  3400               	retlw	0
  4941  1242  3448               	retlw	72
  4942  1243  3400               	retlw	0
  4943  1244  3453               	retlw	83
  4944  1245  3400               	retlw	0
  4945  1246  345B               	retlw	91
  4946  1247  3400               	retlw	0
  4947  1248  3461               	retlw	97
  4948  1249  3400               	retlw	0
  4949  124A  3465               	retlw	101
  4950  124B  3400               	retlw	0
  4951  124C  3466               	retlw	102
  4952  124D  3400               	retlw	0
  4953  124E  3465               	retlw	101
  4954  124F  3400               	retlw	0
  4955  1250  3461               	retlw	97
  4956  1251  3400               	retlw	0
  4957  1252  345B               	retlw	91
  4958  1253  3400               	retlw	0
  4959  1254  3453               	retlw	83
  4960  1255  3400               	retlw	0
  4961  1256  3448               	retlw	72
  4962  1257  3400               	retlw	0
  4963  1258  343C               	retlw	60
  4964  1259  3400               	retlw	0
  4965  125A  342E               	retlw	46
  4966  125B  3400               	retlw	0
  4967  125C  3420               	retlw	32
  4968  125D  3400               	retlw	0
  4969  125E  3410               	retlw	16
  4970  125F  3400               	retlw	0
  4971  1260  3400               	retlw	0
  4972  1261  3400               	retlw	0
  4973  1262  34F0               	retlw	240
  4974  1263  3400               	retlw	0
  4975  1264  34E0               	retlw	224
  4976  1265  3400               	retlw	0
  4977  1266  34D2               	retlw	210
  4978  1267  3400               	retlw	0
  4979  1268  34C4               	retlw	196
  4980  1269  3400               	retlw	0
  4981  126A  34B8               	retlw	184
  4982  126B  3400               	retlw	0
  4983  126C  34AD               	retlw	173
  4984  126D  3400               	retlw	0
  4985  126E  34A5               	retlw	165
  4986  126F  3400               	retlw	0
  4987  1270  349F               	retlw	159
  4988  1271  3400               	retlw	0
  4989  1272  349B               	retlw	155
  4990  1273  3400               	retlw	0
  4991  1274  349A               	retlw	154
  4992  1275  3400               	retlw	0
  4993  1276  349B               	retlw	155
  4994  1277  3400               	retlw	0
  4995  1278  349F               	retlw	159
  4996  1279  3400               	retlw	0
  4997  127A  34A5               	retlw	165
  4998  127B  3400               	retlw	0
  4999  127C  34AD               	retlw	173
  5000  127D  3400               	retlw	0
  5001  127E  34B8               	retlw	184
  5002  127F  3400               	retlw	0
  5003  1280  34C4               	retlw	196
  5004  1281  3400               	retlw	0
  5005  1282  34D2               	retlw	210
  5006  1283  3400               	retlw	0
  5007  1284  34E0               	retlw	224
  5008  1285  3400               	retlw	0
  5009  1286  34F0               	retlw	240
  5010  1287  3400               	retlw	0
  5011  1288  3400               	retlw	0
  5012  1289  3400               	retlw	0
  5013  128A  3410               	retlw	16
  5014  128B  3400               	retlw	0
  5015  128C  3420               	retlw	32
  5016  128D  3400               	retlw	0
  5017  128E  342E               	retlw	46
  5018  128F  3400               	retlw	0
  5019  1290  343C               	retlw	60
  5020  1291  3400               	retlw	0
  5021  1292  3448               	retlw	72
  5022  1293  3400               	retlw	0
  5023  1294  3453               	retlw	83
  5024  1295  3400               	retlw	0
  5025  1296  345B               	retlw	91
  5026  1297  3400               	retlw	0
  5027  1298  3461               	retlw	97
  5028  1299  3400               	retlw	0
  5029  129A  3465               	retlw	101
  5030  129B  3400               	retlw	0
  5031  129C  3466               	retlw	102
  5032  129D  3400               	retlw	0
  5033  129E  3465               	retlw	101
  5034  129F  3400               	retlw	0
  5035  12A0  3461               	retlw	97
  5036  12A1  3400               	retlw	0
  5037  12A2  345B               	retlw	91
  5038  12A3  3400               	retlw	0
  5039  12A4  3453               	retlw	83
  5040  12A5  3400               	retlw	0
  5041  12A6  3448               	retlw	72
  5042  12A7  3400               	retlw	0
  5043  12A8  343C               	retlw	60
  5044  12A9  3400               	retlw	0
  5045  12AA  342E               	retlw	46
  5046  12AB  3400               	retlw	0
  5047  12AC  3420               	retlw	32
  5048  12AD  3400               	retlw	0
  5049  12AE  3410               	retlw	16
  5050  12AF  3400               	retlw	0
  5051  12B0  3400               	retlw	0
  5052  12B1  3400               	retlw	0
  5053  12B2  34F0               	retlw	240
  5054  12B3  3400               	retlw	0
  5055  12B4  34E0               	retlw	224
  5056  12B5  3400               	retlw	0
  5057  12B6  34D2               	retlw	210
  5058  12B7  3400               	retlw	0
  5059  12B8  34C4               	retlw	196
  5060  12B9  3400               	retlw	0
  5061  12BA  34B8               	retlw	184
  5062  12BB  3400               	retlw	0
  5063  12BC  34AD               	retlw	173
  5064  12BD  3400               	retlw	0
  5065  12BE  34A5               	retlw	165
  5066  12BF  3400               	retlw	0
  5067  12C0  349F               	retlw	159
  5068  12C1  3400               	retlw	0
  5069  12C2  349B               	retlw	155
  5070  12C3  3400               	retlw	0
  5071  12C4  349A               	retlw	154
  5072  12C5  3400               	retlw	0
  5073  12C6  349B               	retlw	155
  5074  12C7  3400               	retlw	0
  5075  12C8  349F               	retlw	159
  5076  12C9  3400               	retlw	0
  5077  12CA  34A5               	retlw	165
  5078  12CB  3400               	retlw	0
  5079  12CC  34AD               	retlw	173
  5080  12CD  3400               	retlw	0
  5081  12CE  34B8               	retlw	184
  5082  12CF  3400               	retlw	0
  5083  12D0  34C4               	retlw	196
  5084  12D1  3400               	retlw	0
  5085  12D2  34D2               	retlw	210
  5086  12D3  3400               	retlw	0
  5087  12D4  34E0               	retlw	224
  5088  12D5  3400               	retlw	0
  5089  12D6  34F0               	retlw	240
  5090  12D7  3400               	retlw	0
  5091  12D8  3400               	retlw	0
  5092  12D9  3400               	retlw	0
  5093  12DA                     __end_ofdrv2665@drv_sine:	
  5094                           
  5095                           	psect	stringtext3
  5096  12DA                     __pstringtext3:	
  5097  12DA                     _drv_sine:	
  5098  12DA  3400               	retlw	0
  5099  12DB  3400               	retlw	0
  5100  12DC  3410               	retlw	16
  5101  12DD  3400               	retlw	0
  5102  12DE  3420               	retlw	32
  5103  12DF  3400               	retlw	0
  5104  12E0  342E               	retlw	46
  5105  12E1  3400               	retlw	0
  5106  12E2  343C               	retlw	60
  5107  12E3  3400               	retlw	0
  5108  12E4  3448               	retlw	72
  5109  12E5  3400               	retlw	0
  5110  12E6  3453               	retlw	83
  5111  12E7  3400               	retlw	0
  5112  12E8  345B               	retlw	91
  5113  12E9  3400               	retlw	0
  5114  12EA  3461               	retlw	97
  5115  12EB  3400               	retlw	0
  5116  12EC  3465               	retlw	101
  5117  12ED  3400               	retlw	0
  5118  12EE  3466               	retlw	102
  5119  12EF  3400               	retlw	0
  5120  12F0  3465               	retlw	101
  5121  12F1  3400               	retlw	0
  5122  12F2  3461               	retlw	97
  5123  12F3  3400               	retlw	0
  5124  12F4  345B               	retlw	91
  5125  12F5  3400               	retlw	0
  5126  12F6  3453               	retlw	83
  5127  12F7  3400               	retlw	0
  5128  12F8  3448               	retlw	72
  5129  12F9  3400               	retlw	0
  5130  12FA  343C               	retlw	60
  5131  12FB  3400               	retlw	0
  5132  12FC  342E               	retlw	46
  5133  12FD  3400               	retlw	0
  5134  12FE  3420               	retlw	32
  5135  12FF  3400               	retlw	0
  5136  1300  3410               	retlw	16
  5137  1301  3400               	retlw	0
  5138  1302  3400               	retlw	0
  5139  1303  3400               	retlw	0
  5140  1304  34F0               	retlw	240
  5141  1305  3400               	retlw	0
  5142  1306  34E0               	retlw	224
  5143  1307  3400               	retlw	0
  5144  1308  34D2               	retlw	210
  5145  1309  3400               	retlw	0
  5146  130A  34C4               	retlw	196
  5147  130B  3400               	retlw	0
  5148  130C  34B8               	retlw	184
  5149  130D  3400               	retlw	0
  5150  130E  34AD               	retlw	173
  5151  130F  3400               	retlw	0
  5152  1310  34A5               	retlw	165
  5153  1311  3400               	retlw	0
  5154  1312  349F               	retlw	159
  5155  1313  3400               	retlw	0
  5156  1314  349B               	retlw	155
  5157  1315  3400               	retlw	0
  5158  1316  349A               	retlw	154
  5159  1317  3400               	retlw	0
  5160  1318  349B               	retlw	155
  5161  1319  3400               	retlw	0
  5162  131A  349F               	retlw	159
  5163  131B  3400               	retlw	0
  5164  131C  34A5               	retlw	165
  5165  131D  3400               	retlw	0
  5166  131E  34AD               	retlw	173
  5167  131F  3400               	retlw	0
  5168  1320  34B8               	retlw	184
  5169  1321  3400               	retlw	0
  5170  1322  34C4               	retlw	196
  5171  1323  3400               	retlw	0
  5172  1324  34D2               	retlw	210
  5173  1325  3400               	retlw	0
  5174  1326  34E0               	retlw	224
  5175  1327  3400               	retlw	0
  5176  1328  34F0               	retlw	240
  5177  1329  3400               	retlw	0
  5178  132A  3400               	retlw	0
  5179  132B  3400               	retlw	0
  5180  132C  3410               	retlw	16
  5181  132D  3400               	retlw	0
  5182  132E  3420               	retlw	32
  5183  132F  3400               	retlw	0
  5184  1330  342E               	retlw	46
  5185  1331  3400               	retlw	0
  5186  1332  343C               	retlw	60
  5187  1333  3400               	retlw	0
  5188  1334  3448               	retlw	72
  5189  1335  3400               	retlw	0
  5190  1336  3453               	retlw	83
  5191  1337  3400               	retlw	0
  5192  1338  345B               	retlw	91
  5193  1339  3400               	retlw	0
  5194  133A  3461               	retlw	97
  5195  133B  3400               	retlw	0
  5196  133C  3465               	retlw	101
  5197  133D  3400               	retlw	0
  5198  133E  3466               	retlw	102
  5199  133F  3400               	retlw	0
  5200  1340  3465               	retlw	101
  5201  1341  3400               	retlw	0
  5202  1342  3461               	retlw	97
  5203  1343  3400               	retlw	0
  5204  1344  345B               	retlw	91
  5205  1345  3400               	retlw	0
  5206  1346  3453               	retlw	83
  5207  1347  3400               	retlw	0
  5208  1348  3448               	retlw	72
  5209  1349  3400               	retlw	0
  5210  134A  343C               	retlw	60
  5211  134B  3400               	retlw	0
  5212  134C  342E               	retlw	46
  5213  134D  3400               	retlw	0
  5214  134E  3420               	retlw	32
  5215  134F  3400               	retlw	0
  5216  1350  3410               	retlw	16
  5217  1351  3400               	retlw	0
  5218  1352  3400               	retlw	0
  5219  1353  3400               	retlw	0
  5220  1354  34F0               	retlw	240
  5221  1355  3400               	retlw	0
  5222  1356  34E0               	retlw	224
  5223  1357  3400               	retlw	0
  5224  1358  34D2               	retlw	210
  5225  1359  3400               	retlw	0
  5226  135A  34C4               	retlw	196
  5227  135B  3400               	retlw	0
  5228  135C  34B8               	retlw	184
  5229  135D  3400               	retlw	0
  5230  135E  34AD               	retlw	173
  5231  135F  3400               	retlw	0
  5232  1360  34A5               	retlw	165
  5233  1361  3400               	retlw	0
  5234  1362  349F               	retlw	159
  5235  1363  3400               	retlw	0
  5236  1364  349B               	retlw	155
  5237  1365  3400               	retlw	0
  5238  1366  349A               	retlw	154
  5239  1367  3400               	retlw	0
  5240  1368  349B               	retlw	155
  5241  1369  3400               	retlw	0
  5242  136A  349F               	retlw	159
  5243  136B  3400               	retlw	0
  5244  136C  34A5               	retlw	165
  5245  136D  3400               	retlw	0
  5246  136E  34AD               	retlw	173
  5247  136F  3400               	retlw	0
  5248  1370  34B8               	retlw	184
  5249  1371  3400               	retlw	0
  5250  1372  34C4               	retlw	196
  5251  1373  3400               	retlw	0
  5252  1374  34D2               	retlw	210
  5253  1375  3400               	retlw	0
  5254  1376  34E0               	retlw	224
  5255  1377  3400               	retlw	0
  5256  1378  34F0               	retlw	240
  5257  1379  3400               	retlw	0
  5258  137A  3400               	retlw	0
  5259  137B  3400               	retlw	0
  5260  137C  3410               	retlw	16
  5261  137D  3400               	retlw	0
  5262  137E  3420               	retlw	32
  5263  137F  3400               	retlw	0
  5264  1380  342E               	retlw	46
  5265  1381  3400               	retlw	0
  5266  1382  343C               	retlw	60
  5267  1383  3400               	retlw	0
  5268  1384  3448               	retlw	72
  5269  1385  3400               	retlw	0
  5270  1386  3453               	retlw	83
  5271  1387  3400               	retlw	0
  5272  1388  345B               	retlw	91
  5273  1389  3400               	retlw	0
  5274  138A  3461               	retlw	97
  5275  138B  3400               	retlw	0
  5276  138C  3465               	retlw	101
  5277  138D  3400               	retlw	0
  5278  138E  3466               	retlw	102
  5279  138F  3400               	retlw	0
  5280  1390  3465               	retlw	101
  5281  1391  3400               	retlw	0
  5282  1392  3461               	retlw	97
  5283  1393  3400               	retlw	0
  5284  1394  345B               	retlw	91
  5285  1395  3400               	retlw	0
  5286  1396  3453               	retlw	83
  5287  1397  3400               	retlw	0
  5288  1398  3448               	retlw	72
  5289  1399  3400               	retlw	0
  5290  139A  343C               	retlw	60
  5291  139B  3400               	retlw	0
  5292  139C  342E               	retlw	46
  5293  139D  3400               	retlw	0
  5294  139E  3420               	retlw	32
  5295  139F  3400               	retlw	0
  5296  13A0  3410               	retlw	16
  5297  13A1  3400               	retlw	0
  5298  13A2  3400               	retlw	0
  5299  13A3  3400               	retlw	0
  5300  13A4  34F0               	retlw	240
  5301  13A5  3400               	retlw	0
  5302  13A6  34E0               	retlw	224
  5303  13A7  3400               	retlw	0
  5304  13A8  34D2               	retlw	210
  5305  13A9  3400               	retlw	0
  5306  13AA  34C4               	retlw	196
  5307  13AB  3400               	retlw	0
  5308  13AC  34B8               	retlw	184
  5309  13AD  3400               	retlw	0
  5310  13AE  34AD               	retlw	173
  5311  13AF  3400               	retlw	0
  5312  13B0  34A5               	retlw	165
  5313  13B1  3400               	retlw	0
  5314  13B2  349F               	retlw	159
  5315  13B3  3400               	retlw	0
  5316  13B4  349B               	retlw	155
  5317  13B5  3400               	retlw	0
  5318  13B6  349A               	retlw	154
  5319  13B7  3400               	retlw	0
  5320  13B8  349B               	retlw	155
  5321  13B9  3400               	retlw	0
  5322  13BA  349F               	retlw	159
  5323  13BB  3400               	retlw	0
  5324  13BC  34A5               	retlw	165
  5325  13BD  3400               	retlw	0
  5326  13BE  34AD               	retlw	173
  5327  13BF  3400               	retlw	0
  5328  13C0  34B8               	retlw	184
  5329  13C1  3400               	retlw	0
  5330  13C2  34C4               	retlw	196
  5331  13C3  3400               	retlw	0
  5332  13C4  34D2               	retlw	210
  5333  13C5  3400               	retlw	0
  5334  13C6  34E0               	retlw	224
  5335  13C7  3400               	retlw	0
  5336  13C8  34F0               	retlw	240
  5337  13C9  3400               	retlw	0
  5338  13CA  3400               	retlw	0
  5339  13CB  3400               	retlw	0
  5340  13CC                     __end_of_drv_sine:	
  5341                           
  5342                           	psect	stringtext4
  5343  2800                     __pstringtext4:	
  5344  2800                     _dpowers:	
  5345  2800  3401               	retlw	1
  5346  2801  3400               	retlw	0
  5347  2802  3400               	retlw	0
  5348  2803  3400               	retlw	0
  5349  2804  340A               	retlw	10
  5350  2805  3400               	retlw	0
  5351  2806  3400               	retlw	0
  5352  2807  3400               	retlw	0
  5353  2808  3464               	retlw	100
  5354  2809  3400               	retlw	0
  5355  280A  3400               	retlw	0
  5356  280B  3400               	retlw	0
  5357  280C  34E8               	retlw	232
  5358  280D  3403               	retlw	3
  5359  280E  3400               	retlw	0
  5360  280F  3400               	retlw	0
  5361  2810  3410               	retlw	16
  5362  2811  3427               	retlw	39
  5363  2812  3400               	retlw	0
  5364  2813  3400               	retlw	0
  5365  2814  34A0               	retlw	160
  5366  2815  3486               	retlw	134
  5367  2816  3401               	retlw	1
  5368  2817  3400               	retlw	0
  5369  2818  3440               	retlw	64
  5370  2819  3442               	retlw	66
  5371  281A  340F               	retlw	15
  5372  281B  3400               	retlw	0
  5373  281C  3480               	retlw	128
  5374  281D  3496               	retlw	150
  5375  281E  3498               	retlw	152
  5376  281F  3400               	retlw	0
  5377  2820  3400               	retlw	0
  5378  2821  34E1               	retlw	225
  5379  2822  34F5               	retlw	245
  5380  2823  3405               	retlw	5
  5381  2824  3400               	retlw	0
  5382  2825  34CA               	retlw	202
  5383  2826  349A               	retlw	154
  5384  2827  343B               	retlw	59
  5385  2828                     __end_of_dpowers:	
  5386                           
  5387                           	psect	stringtext5
  5388  2A53                     __pstringtext5:	
  5389  2A53                     _TMR2_RANGE:	
  5390  2A53  3400               	retlw	0
  5391  2A54  34C8               	retlw	200
  5392  2A55  343F               	retlw	63
  5393  2A56                     __end_of_TMR2_RANGE:	
  5394                           
  5395                           	psect	stringtext6
  5396  2A56                     __pstringtext6:	
  5397  2A56                     _TMR0_RANGE:	
  5398  2A56  3400               	retlw	0
  5399  2A57  34C8               	retlw	200
  5400  2A58  343D               	retlw	61
  5401  2A59                     __end_of_TMR0_RANGE:	
  5402                           
  5403                           	psect	stringtext7
  5404  2A5F                     __pstringtext7:	
  5405  2A5F                     _LEDpower:	
  5406  2A5F  343F               	retlw	63
  5407  2A60  3400               	retlw	0
  5408  2A61                     __end_of_LEDpower:	
  5409                           
  5410                           	psect	stringtext8
  5411  2A67                     __pstringtext8:	
  5412  2A67                     _drv_address:	
  5413  2A67  3459               	retlw	89
  5414  2A68                     __end_of_drv_address:	
  5415                           
  5416                           	psect	stringtext9
  5417  10F4                     __pstringtext9:	
  5418  10F4                     drv2665@drv_fifo_sine:	
  5419  10F4  340B               	retlw	11
  5420  10F5  3400               	retlw	0
  5421  10F6  3400               	retlw	0
  5422  10F7  3400               	retlw	0
  5423  10F8  3410               	retlw	16
  5424  10F9  3400               	retlw	0
  5425  10FA  3420               	retlw	32
  5426  10FB  3400               	retlw	0
  5427  10FC  342E               	retlw	46
  5428  10FD  3400               	retlw	0
  5429  10FE  343C               	retlw	60
  5430  10FF  3400               	retlw	0
  5431  1100  3448               	retlw	72
  5432  1101  3400               	retlw	0
  5433  1102  3453               	retlw	83
  5434  1103  3400               	retlw	0
  5435  1104  345B               	retlw	91
  5436  1105  3400               	retlw	0
  5437  1106  3461               	retlw	97
  5438  1107  3400               	retlw	0
  5439  1108  3465               	retlw	101
  5440  1109  3400               	retlw	0
  5441  110A  3466               	retlw	102
  5442  110B  3400               	retlw	0
  5443  110C  3465               	retlw	101
  5444  110D  3400               	retlw	0
  5445  110E  3461               	retlw	97
  5446  110F  3400               	retlw	0
  5447  1110  345B               	retlw	91
  5448  1111  3400               	retlw	0
  5449  1112  3453               	retlw	83
  5450  1113  3400               	retlw	0
  5451  1114  3448               	retlw	72
  5452  1115  3400               	retlw	0
  5453  1116  343C               	retlw	60
  5454  1117  3400               	retlw	0
  5455  1118  342E               	retlw	46
  5456  1119  3400               	retlw	0
  5457  111A  3420               	retlw	32
  5458  111B  3400               	retlw	0
  5459  111C  3410               	retlw	16
  5460  111D  3400               	retlw	0
  5461  111E  3400               	retlw	0
  5462  111F  3400               	retlw	0
  5463  1120  34F0               	retlw	240
  5464  1121  3400               	retlw	0
  5465  1122  34E0               	retlw	224
  5466  1123  3400               	retlw	0
  5467  1124  34D2               	retlw	210
  5468  1125  3400               	retlw	0
  5469  1126  34C4               	retlw	196
  5470  1127  3400               	retlw	0
  5471  1128  34B8               	retlw	184
  5472  1129  3400               	retlw	0
  5473  112A  34AD               	retlw	173
  5474  112B  3400               	retlw	0
  5475  112C  34A5               	retlw	165
  5476  112D  3400               	retlw	0
  5477  112E  349F               	retlw	159
  5478  112F  3400               	retlw	0
  5479  1130  349B               	retlw	155
  5480  1131  3400               	retlw	0
  5481  1132  349A               	retlw	154
  5482  1133  3400               	retlw	0
  5483  1134  349B               	retlw	155
  5484  1135  3400               	retlw	0
  5485  1136  349F               	retlw	159
  5486  1137  3400               	retlw	0
  5487  1138  34A5               	retlw	165
  5488  1139  3400               	retlw	0
  5489  113A  34AD               	retlw	173
  5490  113B  3400               	retlw	0
  5491  113C  34B8               	retlw	184
  5492  113D  3400               	retlw	0
  5493  113E  34C4               	retlw	196
  5494  113F  3400               	retlw	0
  5495  1140  34D2               	retlw	210
  5496  1141  3400               	retlw	0
  5497  1142  34E0               	retlw	224
  5498  1143  3400               	retlw	0
  5499  1144  34F0               	retlw	240
  5500  1145  3400               	retlw	0
  5501  1146  3400               	retlw	0
  5502  1147  3400               	retlw	0
  5503  1148  3410               	retlw	16
  5504  1149  3400               	retlw	0
  5505  114A  3420               	retlw	32
  5506  114B  3400               	retlw	0
  5507  114C  342E               	retlw	46
  5508  114D  3400               	retlw	0
  5509  114E  343C               	retlw	60
  5510  114F  3400               	retlw	0
  5511  1150  3448               	retlw	72
  5512  1151  3400               	retlw	0
  5513  1152  3453               	retlw	83
  5514  1153  3400               	retlw	0
  5515  1154  345B               	retlw	91
  5516  1155  3400               	retlw	0
  5517  1156  3461               	retlw	97
  5518  1157  3400               	retlw	0
  5519  1158  3465               	retlw	101
  5520  1159  3400               	retlw	0
  5521  115A  3466               	retlw	102
  5522  115B  3400               	retlw	0
  5523  115C  3465               	retlw	101
  5524  115D  3400               	retlw	0
  5525  115E  3461               	retlw	97
  5526  115F  3400               	retlw	0
  5527  1160  345B               	retlw	91
  5528  1161  3400               	retlw	0
  5529  1162  3453               	retlw	83
  5530  1163  3400               	retlw	0
  5531  1164  3448               	retlw	72
  5532  1165  3400               	retlw	0
  5533  1166  343C               	retlw	60
  5534  1167  3400               	retlw	0
  5535  1168  342E               	retlw	46
  5536  1169  3400               	retlw	0
  5537  116A  3420               	retlw	32
  5538  116B  3400               	retlw	0
  5539  116C  3410               	retlw	16
  5540  116D  3400               	retlw	0
  5541  116E  3400               	retlw	0
  5542  116F  3400               	retlw	0
  5543  1170  34F0               	retlw	240
  5544  1171  3400               	retlw	0
  5545  1172  34E0               	retlw	224
  5546  1173  3400               	retlw	0
  5547  1174  34D2               	retlw	210
  5548  1175  3400               	retlw	0
  5549  1176  34C4               	retlw	196
  5550  1177  3400               	retlw	0
  5551  1178  34B8               	retlw	184
  5552  1179  3400               	retlw	0
  5553  117A  34AD               	retlw	173
  5554  117B  3400               	retlw	0
  5555  117C  34A5               	retlw	165
  5556  117D  3400               	retlw	0
  5557  117E  349F               	retlw	159
  5558  117F  3400               	retlw	0
  5559  1180  349B               	retlw	155
  5560  1181  3400               	retlw	0
  5561  1182  349A               	retlw	154
  5562  1183  3400               	retlw	0
  5563  1184  349B               	retlw	155
  5564  1185  3400               	retlw	0
  5565  1186  349F               	retlw	159
  5566  1187  3400               	retlw	0
  5567  1188  34A5               	retlw	165
  5568  1189  3400               	retlw	0
  5569  118A  34AD               	retlw	173
  5570  118B  3400               	retlw	0
  5571  118C  34B8               	retlw	184
  5572  118D  3400               	retlw	0
  5573  118E  34C4               	retlw	196
  5574  118F  3400               	retlw	0
  5575  1190  34D2               	retlw	210
  5576  1191  3400               	retlw	0
  5577  1192  34E0               	retlw	224
  5578  1193  3400               	retlw	0
  5579  1194  34F0               	retlw	240
  5580  1195  3400               	retlw	0
  5581  1196  3400               	retlw	0
  5582  1197  3400               	retlw	0
  5583  1198  3410               	retlw	16
  5584  1199  3400               	retlw	0
  5585  119A  3420               	retlw	32
  5586  119B  3400               	retlw	0
  5587  119C  342E               	retlw	46
  5588  119D  3400               	retlw	0
  5589  119E  343C               	retlw	60
  5590  119F  3400               	retlw	0
  5591  11A0  3448               	retlw	72
  5592  11A1  3400               	retlw	0
  5593  11A2  3453               	retlw	83
  5594  11A3  3400               	retlw	0
  5595  11A4  345B               	retlw	91
  5596  11A5  3400               	retlw	0
  5597  11A6  3461               	retlw	97
  5598  11A7  3400               	retlw	0
  5599  11A8  3465               	retlw	101
  5600  11A9  3400               	retlw	0
  5601  11AA  3466               	retlw	102
  5602  11AB  3400               	retlw	0
  5603  11AC  3465               	retlw	101
  5604  11AD  3400               	retlw	0
  5605  11AE  3461               	retlw	97
  5606  11AF  3400               	retlw	0
  5607  11B0  345B               	retlw	91
  5608  11B1  3400               	retlw	0
  5609  11B2  3453               	retlw	83
  5610  11B3  3400               	retlw	0
  5611  11B4  3448               	retlw	72
  5612  11B5  3400               	retlw	0
  5613  11B6  343C               	retlw	60
  5614  11B7  3400               	retlw	0
  5615  11B8  342E               	retlw	46
  5616  11B9  3400               	retlw	0
  5617  11BA  3420               	retlw	32
  5618  11BB  3400               	retlw	0
  5619  11BC  3410               	retlw	16
  5620  11BD  3400               	retlw	0
  5621  11BE  3400               	retlw	0
  5622  11BF  3400               	retlw	0
  5623  11C0  34F0               	retlw	240
  5624  11C1  3400               	retlw	0
  5625  11C2  34E0               	retlw	224
  5626  11C3  3400               	retlw	0
  5627  11C4  34D2               	retlw	210
  5628  11C5  3400               	retlw	0
  5629  11C6  34C4               	retlw	196
  5630  11C7  3400               	retlw	0
  5631  11C8  34B8               	retlw	184
  5632  11C9  3400               	retlw	0
  5633  11CA  34AD               	retlw	173
  5634  11CB  3400               	retlw	0
  5635  11CC  34A5               	retlw	165
  5636  11CD  3400               	retlw	0
  5637  11CE  349F               	retlw	159
  5638  11CF  3400               	retlw	0
  5639  11D0  349B               	retlw	155
  5640  11D1  3400               	retlw	0
  5641  11D2  349A               	retlw	154
  5642  11D3  3400               	retlw	0
  5643  11D4  349B               	retlw	155
  5644  11D5  3400               	retlw	0
  5645  11D6  349F               	retlw	159
  5646  11D7  3400               	retlw	0
  5647  11D8  34A5               	retlw	165
  5648  11D9  3400               	retlw	0
  5649  11DA  34AD               	retlw	173
  5650  11DB  3400               	retlw	0
  5651  11DC  34B8               	retlw	184
  5652  11DD  3400               	retlw	0
  5653  11DE  34C4               	retlw	196
  5654  11DF  3400               	retlw	0
  5655  11E0  34D2               	retlw	210
  5656  11E1  3400               	retlw	0
  5657  11E2  34E0               	retlw	224
  5658  11E3  3400               	retlw	0
  5659  11E4  34F0               	retlw	240
  5660  11E5  3400               	retlw	0
  5661  11E6  3400               	retlw	0
  5662  11E7  3400               	retlw	0
  5663  11E8                     __end_ofdrv2665@drv_fifo_sine:	
  5664                           
  5665                           	psect	stringtext10
  5666  2940                     __pstringtext10:	
  5667  2940                     sin@coeff_a:	
  5668  2940  34F4               	retlw	244
  5669  2941  344A               	retlw	74
  5670  2942  3448               	retlw	72
  5671  2943  3495               	retlw	149
  5672  2944  3495               	retlw	149
  5673  2945  34C7               	retlw	199
  5674  2946  34C1               	retlw	193
  5675  2947  34DC               	retlw	220
  5676  2948  3445               	retlw	69
  5677  2949  34DC               	retlw	220
  5678  294A  346D               	retlw	109
  5679  294B  34C3               	retlw	195
  5680  294C  34B3               	retlw	179
  5681  294D  3433               	retlw	51
  5682  294E  3440               	retlw	64
  5683  294F                     __end_ofsin@coeff_a:	
  5684                           
  5685                           	psect	stringtext11
  5686  2988                     __pstringtext11:	
  5687  2988                     sin@coeff_b:	
  5688  2988  3434               	retlw	52
  5689  2989  3401               	retlw	1
  5690  298A  3448               	retlw	72
  5691  298B  349D               	retlw	157
  5692  298C  34B0               	retlw	176
  5693  298D  3445               	retlw	69
  5694  298E  3400               	retlw	0
  5695  298F  34DA               	retlw	218
  5696  2990  3442               	retlw	66
  5697  2991  3400               	retlw	0
  5698  2992  3480               	retlw	128
  5699  2993  343F               	retlw	63
  5700  2994                     __end_ofsin@coeff_b:	
  5701                           
  5702                           	psect	nvBANK0
  5703  005E                     __pnvBANK0:	
  5704  005E                     _eusartTxBufferRemaining:	
  5705  005E                     	ds	1
  5706                           
  5707                           	psect	nvBANK2
  5708  016C                     __pnvBANK2:	
  5709  016C                     _TMR0_InterruptHandler:	
  5710  016C                     	ds	2
  5711                           
  5712                           	psect	nvBANK3
  5713  01D9                     __pnvBANK3:	
  5714  01D9                     _TMR2_InterruptHandler:	
  5715  01D9                     	ds	2
  5716  001F                     _T2CONbits	set	31
  5717  001F                     _T2CON	set	31
  5718  001D                     _TMR2	set	29
  5719  001E                     _PR2	set	30
  5720  0017                     _T0CON0bits	set	23
  5721  0017                     _T0CON0	set	23
  5722  0015                     _TMR0L	set	21
  5723  0016                     _TMR0H	set	22
  5724  0018                     _T0CON1	set	24
  5725  0011                     _PIR1bits	set	17
  5726  0010                     _PIR0bits	set	16
  5727  000E                     _PORTCbits	set	14
  5728  000B                     _INTCONbits	set	11
  5729  0091                     _PIE1bits	set	145
  5730  0090                     _PIE0bits	set	144
  5731  008E                     _TRISC	set	142
  5732  008D                     _TRISB	set	141
  5733  008C                     _TRISA	set	140
  5734  0097                     _WDTCON	set	151
  5735  010C                     _LATAbits	set	268
  5736  010E                     _LATCbits	set	270
  5737  010D                     _LATBbits	set	269
  5738  010E                     _LATC	set	270
  5739  010D                     _LATB	set	269
  5740  010C                     _LATA	set	268
  5741  0199                     _RC1REG	set	409
  5742  019D                     _RC1STAbits	set	413
  5743  019A                     _TX1REG	set	410
  5744  019C                     _SP1BRGH	set	412
  5745  019B                     _SP1BRGL	set	411
  5746  019E                     _TX1STA	set	414
  5747  019D                     _RC1STA	set	413
  5748  019F                     _BAUD1CON	set	415
  5749  018C                     _ANSELA	set	396
  5750  018D                     _ANSELB	set	397
  5751  018E                     _ANSELC	set	398
  5752  0214                     _SSP1STATbits	set	532
  5753  0213                     _SSP1MSK	set	531
  5754  0211                     _SSP1BUF	set	529
  5755  0216                     _SSP1CON2bits	set	534
  5756  0212                     _SSP1ADD	set	530
  5757  0216                     _SSP1CON2	set	534
  5758  0215                     _SSP1CON1	set	533
  5759  0214                     _SSP1STAT	set	532
  5760  0215                     _SSP1CON1bits	set	533
  5761  020E                     _WPUC	set	526
  5762  020C                     _WPUA	set	524
  5763  020D                     _WPUB	set	525
  5764  028E                     _ODCONC	set	654
  5765  028D                     _ODCONB	set	653
  5766  028C                     _ODCONA	set	652
  5767  0896                     _NVMCON2	set	2198
  5768  0893                     _NVMDATL	set	2195
  5769  0894                     _NVMDATH	set	2196
  5770  0895                     _NVMCON1bits	set	2197
  5771  0892                     _NVMADRH	set	2194
  5772  0891                     _NVMADRL	set	2193
  5773  0916                     _PMD5	set	2326
  5774  0915                     _PMD4	set	2325
  5775  0914                     _PMD3	set	2324
  5776  0913                     _PMD2	set	2323
  5777  0912                     _PMD1	set	2322
  5778  0911                     _PMD0	set	2321
  5779  091E                     _OSCTUNE	set	2334
  5780  091F                     _OSCFRQ	set	2335
  5781  091D                     _OSCEN	set	2333
  5782  091B                     _OSCCON3	set	2331
  5783  0919                     _OSCCON1	set	2329
  5784  0E24                     _RXPPSbits	set	3620
  5785  0E20                     _SSP1CLKPPSbits	set	3616
  5786  0E21                     _SSP1DATPPSbits	set	3617
  5787  0E9D                     _RB5PPSbits	set	3741
  5788  0E9E                     _RB6PPSbits	set	3742
  5789  0E9F                     _RB7PPSbits	set	3743
  5790                           
  5791                           	psect	stringtext12
  5792  2828                     __pstringtext12:	
  5793  2828                     STR_42:	
  5794  2828  340A               	retlw	10
  5795  2829  3474               	retlw	116	;'t'
  5796  282A  3465               	retlw	101	;'e'
  5797  282B  3473               	retlw	115	;'s'
  5798  282C  3474               	retlw	116	;'t'
  5799  282D  3469               	retlw	105	;'i'
  5800  282E  346E               	retlw	110	;'n'
  5801  282F  3467               	retlw	103	;'g'
  5802  2830  3420               	retlw	32	;' '
  5803  2831  3462               	retlw	98	;'b'
  5804  2832  346F               	retlw	111	;'o'
  5805  2833  3474               	retlw	116	;'t'
  5806  2834  3474               	retlw	116	;'t'
  5807  2835  346F               	retlw	111	;'o'
  5808  2836  346D               	retlw	109	;'m'
  5809  2837  3420               	retlw	32	;' '
  5810  2838  344C               	retlw	76	;'L'
  5811  2839  3445               	retlw	69	;'E'
  5812  283A  3444               	retlw	68	;'D'
  5813  283B  3420               	retlw	32	;' '
  5814  283C  3464               	retlw	100	;'d'
  5815  283D  3472               	retlw	114	;'r'
  5816  283E  3469               	retlw	105	;'i'
  5817  283F  3476               	retlw	118	;'v'
  5818  2840  3465               	retlw	101	;'e'
  5819  2841  3472               	retlw	114	;'r'
  5820  2842  342E               	retlw	46	;'.'
  5821  2843  342E               	retlw	46	;'.'
  5822  2844  342E               	retlw	46	;'.'
  5823  2845  340A               	retlw	10
  5824  2846  3400               	retlw	0
  5825                           
  5826                           	psect	stringtext13
  5827  2847                     __pstringtext13:	
  5828  2847                     STR_36:	
  5829  2847  340A               	retlw	10
  5830  2848  342D               	retlw	45	;'-'
  5831  2849  342D               	retlw	45	;'-'
  5832  284A  342D               	retlw	45	;'-'
  5833  284B  342D               	retlw	45	;'-'
  5834  284C  3473               	retlw	115	;'s'
  5835  284D  3474               	retlw	116	;'t'
  5836  284E  3461               	retlw	97	;'a'
  5837  284F  3472               	retlw	114	;'r'
  5838  2850  3474               	retlw	116	;'t'
  5839  2851  3469               	retlw	105	;'i'
  5840  2852  346E               	retlw	110	;'n'
  5841  2853  3467               	retlw	103	;'g'
  5842  2854  3420               	retlw	32	;' '
  5843  2855  3463               	retlw	99	;'c'
  5844  2856  346F               	retlw	111	;'o'
  5845  2857  346D               	retlw	109	;'m'
  5846  2858  346D               	retlw	109	;'m'
  5847  2859  3420               	retlw	32	;' '
  5848  285A  3474               	retlw	116	;'t'
  5849  285B  3465               	retlw	101	;'e'
  5850  285C  3473               	retlw	115	;'s'
  5851  285D  3474               	retlw	116	;'t'
  5852  285E  342D               	retlw	45	;'-'
  5853  285F  342D               	retlw	45	;'-'
  5854  2860  342D               	retlw	45	;'-'
  5855  2861  342D               	retlw	45	;'-'
  5856  2862  340A               	retlw	10
  5857  2863  340A               	retlw	10
  5858  2864  3400               	retlw	0
  5859                           
  5860                           	psect	stringtext14
  5861  2865                     __pstringtext14:	
  5862  2865                     STR_50:	
  5863  2865  342D               	retlw	45	;'-'
  5864  2866  342D               	retlw	45	;'-'
  5865  2867  342D               	retlw	45	;'-'
  5866  2868  342D               	retlw	45	;'-'
  5867  2869  3466               	retlw	102	;'f'
  5868  286A  3469               	retlw	105	;'i'
  5869  286B  346E               	retlw	110	;'n'
  5870  286C  3469               	retlw	105	;'i'
  5871  286D  3473               	retlw	115	;'s'
  5872  286E  3468               	retlw	104	;'h'
  5873  286F  3465               	retlw	101	;'e'
  5874  2870  3464               	retlw	100	;'d'
  5875  2871  3420               	retlw	32	;' '
  5876  2872  3463               	retlw	99	;'c'
  5877  2873  346F               	retlw	111	;'o'
  5878  2874  346D               	retlw	109	;'m'
  5879  2875  346D               	retlw	109	;'m'
  5880  2876  3420               	retlw	32	;' '
  5881  2877  3474               	retlw	116	;'t'
  5882  2878  3465               	retlw	101	;'e'
  5883  2879  3473               	retlw	115	;'s'
  5884  287A  3474               	retlw	116	;'t'
  5885  287B  342D               	retlw	45	;'-'
  5886  287C  342D               	retlw	45	;'-'
  5887  287D  342D               	retlw	45	;'-'
  5888  287E  342D               	retlw	45	;'-'
  5889  287F  340A               	retlw	10
  5890  2880  3400               	retlw	0
  5891                           
  5892                           	psect	stringtext15
  5893  2881                     __pstringtext15:	
  5894  2881                     STR_37:	
  5895  2881  3474               	retlw	116	;'t'
  5896  2882  3465               	retlw	101	;'e'
  5897  2883  3473               	retlw	115	;'s'
  5898  2884  3474               	retlw	116	;'t'
  5899  2885  3469               	retlw	105	;'i'
  5900  2886  346E               	retlw	110	;'n'
  5901  2887  3467               	retlw	103	;'g'
  5902  2888  3420               	retlw	32	;' '
  5903  2889  3474               	retlw	116	;'t'
  5904  288A  346F               	retlw	111	;'o'
  5905  288B  3470               	retlw	112	;'p'
  5906  288C  3420               	retlw	32	;' '
  5907  288D  344C               	retlw	76	;'L'
  5908  288E  3445               	retlw	69	;'E'
  5909  288F  3444               	retlw	68	;'D'
  5910  2890  3420               	retlw	32	;' '
  5911  2891  3464               	retlw	100	;'d'
  5912  2892  3472               	retlw	114	;'r'
  5913  2893  3469               	retlw	105	;'i'
  5914  2894  3476               	retlw	118	;'v'
  5915  2895  3465               	retlw	101	;'e'
  5916  2896  3472               	retlw	114	;'r'
  5917  2897  342E               	retlw	46	;'.'
  5918  2898  342E               	retlw	46	;'.'
  5919  2899  342E               	retlw	46	;'.'
  5920  289A  3400               	retlw	0
  5921                           
  5922                           	psect	stringtext16
  5923  289B                     __pstringtext16:	
  5924  289B                     STR_47:	
  5925  289B  340A               	retlw	10
  5926  289C  3474               	retlw	116	;'t'
  5927  289D  3465               	retlw	101	;'e'
  5928  289E  3473               	retlw	115	;'s'
  5929  289F  3474               	retlw	116	;'t'
  5930  28A0  3469               	retlw	105	;'i'
  5931  28A1  346E               	retlw	110	;'n'
  5932  28A2  3467               	retlw	103	;'g'
  5933  28A3  3420               	retlw	32	;' '
  5934  28A4  3470               	retlw	112	;'p'
  5935  28A5  3469               	retlw	105	;'i'
  5936  28A6  3465               	retlw	101	;'e'
  5937  28A7  347A               	retlw	122	;'z'
  5938  28A8  346F               	retlw	111	;'o'
  5939  28A9  3420               	retlw	32	;' '
  5940  28AA  3464               	retlw	100	;'d'
  5941  28AB  3472               	retlw	114	;'r'
  5942  28AC  3469               	retlw	105	;'i'
  5943  28AD  3476               	retlw	118	;'v'
  5944  28AE  3465               	retlw	101	;'e'
  5945  28AF  3472               	retlw	114	;'r'
  5946  28B0  342E               	retlw	46	;'.'
  5947  28B1  342E               	retlw	46	;'.'
  5948  28B2  342E               	retlw	46	;'.'
  5949  28B3  3400               	retlw	0
  5950                           
  5951                           	psect	stringtext17
  5952  28B4                     __pstringtext17:	
  5953  28B4                     STR_81:	
  5954  28B4  3455               	retlw	85	;'U'
  5955  28B5  344E               	retlw	78	;'N'
  5956  28B6  3452               	retlw	82	;'R'
  5957  28B7  3445               	retlw	69	;'E'
  5958  28B8  3443               	retlw	67	;'C'
  5959  28B9  344F               	retlw	79	;'O'
  5960  28BA  3447               	retlw	71	;'G'
  5961  28BB  344E               	retlw	78	;'N'
  5962  28BC  3449               	retlw	73	;'I'
  5963  28BD  345A               	retlw	90	;'Z'
  5964  28BE  3445               	retlw	69	;'E'
  5965  28BF  3444               	retlw	68	;'D'
  5966  28C0  3420               	retlw	32	;' '
  5967  28C1  3443               	retlw	67	;'C'
  5968  28C2  344F               	retlw	79	;'O'
  5969  28C3  344D               	retlw	77	;'M'
  5970  28C4  344D               	retlw	77	;'M'
  5971  28C5  3441               	retlw	65	;'A'
  5972  28C6  344E               	retlw	78	;'N'
  5973  28C7  3444               	retlw	68	;'D'
  5974  28C8  3421               	retlw	33	;'!'
  5975  28C9  340A               	retlw	10
  5976  28CA  3400               	retlw	0
  5977                           
  5978                           	psect	stringtext18
  5979  28CB                     __pstringtext18:	
  5980  28CB                     STR_52:	
  5981  28CB  3464               	retlw	100	;'d'
  5982  28CC  3472               	retlw	114	;'r'
  5983  28CD  3476               	retlw	118	;'v'
  5984  28CE  345F               	retlw	95	;'_'
  5985  28CF  3477               	retlw	119	;'w'
  5986  28D0  3472               	retlw	114	;'r'
  5987  28D1  3469               	retlw	105	;'i'
  5988  28D2  3474               	retlw	116	;'t'
  5989  28D3  3465               	retlw	101	;'e'
  5990  28D4  3420               	retlw	32	;' '
  5991  28D5  3465               	retlw	101	;'e'
  5992  28D6  3472               	retlw	114	;'r'
  5993  28D7  3472               	retlw	114	;'r'
  5994  28D8  346F               	retlw	111	;'o'
  5995  28D9  3472               	retlw	114	;'r'
  5996  28DA  3421               	retlw	33	;'!'
  5997  28DB  340A               	retlw	10
  5998  28DC  3400               	retlw	0
  5999                           
  6000                           	psect	stringtext19
  6001  28DD                     __pstringtext19:	
  6002  28DD                     STR_54:	
  6003  28DD  3464               	retlw	100	;'d'
  6004  28DE  3472               	retlw	114	;'r'
  6005  28DF  3476               	retlw	118	;'v'
  6006  28E0  345F               	retlw	95	;'_'
  6007  28E1  3472               	retlw	114	;'r'
  6008  28E2  3465               	retlw	101	;'e'
  6009  28E3  3461               	retlw	97	;'a'
  6010  28E4  3464               	retlw	100	;'d'
  6011  28E5  3420               	retlw	32	;' '
  6012  28E6  3465               	retlw	101	;'e'
  6013  28E7  3472               	retlw	114	;'r'
  6014  28E8  3472               	retlw	114	;'r'
  6015  28E9  346F               	retlw	111	;'o'
  6016  28EA  3472               	retlw	114	;'r'
  6017  28EB  3421               	retlw	33	;'!'
  6018  28EC  340A               	retlw	10
  6019  28ED  3400               	retlw	0
  6020                           
  6021                           	psect	stringtext20
  6022  28EE                     __pstringtext20:	
  6023  28EE                     STR_55:	
  6024  28EE  3466               	retlw	102	;'f'
  6025  28EF  3469               	retlw	105	;'i'
  6026  28F0  3466               	retlw	102	;'f'
  6027  28F1  346F               	retlw	111	;'o'
  6028  28F2  3420               	retlw	32	;' '
  6029  28F3  346E               	retlw	110	;'n'
  6030  28F4  346F               	retlw	111	;'o'
  6031  28F5  3474               	retlw	116	;'t'
  6032  28F6  3420               	retlw	32	;' '
  6033  28F7  3472               	retlw	114	;'r'
  6034  28F8  3465               	retlw	101	;'e'
  6035  28F9  3461               	retlw	97	;'a'
  6036  28FA  3464               	retlw	100	;'d'
  6037  28FB  3479               	retlw	121	;'y'
  6038  28FC  3421               	retlw	33	;'!'
  6039  28FD  340A               	retlw	10
  6040  28FE  3400               	retlw	0
  6041                           
  6042                           	psect	stringtext21
  6043  28FF                     __pstringtext21:	
  6044  28FF                     STR_51:	
  6045  28FF  3464               	retlw	100	;'d'
  6046  2900  3472               	retlw	114	;'r'
  6047  2901  3476               	retlw	118	;'v'
  6048  2902  3420               	retlw	32	;' '
  6049  2903  3469               	retlw	105	;'i'
  6050  2904  346E               	retlw	110	;'n'
  6051  2905  3469               	retlw	105	;'i'
  6052  2906  3474               	retlw	116	;'t'
  6053  2907  3469               	retlw	105	;'i'
  6054  2908  3461               	retlw	97	;'a'
  6055  2909  346C               	retlw	108	;'l'
  6056  290A  3469               	retlw	105	;'i'
  6057  290B  347A               	retlw	122	;'z'
  6058  290C  3465               	retlw	101	;'e'
  6059  290D  3464               	retlw	100	;'d'
  6060  290E  340A               	retlw	10
  6061  290F  3400               	retlw	0
  6062                           
  6063                           	psect	stringtext22
  6064  2910                     __pstringtext22:	
  6065  2910                     STR_12:	
  6066  2910  3472               	retlw	114	;'r'
  6067  2911  3465               	retlw	101	;'e'
  6068  2912  346C               	retlw	108	;'l'
  6069  2913  343A               	retlw	58	;':'
  6070  2914  3420               	retlw	32	;' '
  6071  2915  3461               	retlw	97	;'a'
  6072  2916  346C               	retlw	108	;'l'
  6073  2917  346C               	retlw	108	;'l'
  6074  2918  3420               	retlw	32	;' '
  6075  2919  3474               	retlw	116	;'t'
  6076  291A  3468               	retlw	104	;'h'
  6077  291B  3465               	retlw	101	;'e'
  6078  291C  3472               	retlw	114	;'r'
  6079  291D  3465               	retlw	101	;'e'
  6080  291E  340A               	retlw	10
  6081  291F  3400               	retlw	0
  6082                           
  6083                           	psect	stringtext23
  6084  2920                     __pstringtext23:	
  6085  2920                     STR_10:	
  6086  2920  3461               	retlw	97	;'a'
  6087  2921  3462               	retlw	98	;'b'
  6088  2922  3473               	retlw	115	;'s'
  6089  2923  343A               	retlw	58	;':'
  6090  2924  3420               	retlw	32	;' '
  6091  2925  3461               	retlw	97	;'a'
  6092  2926  346C               	retlw	108	;'l'
  6093  2927  346C               	retlw	108	;'l'
  6094  2928  3420               	retlw	32	;' '
  6095  2929  3474               	retlw	116	;'t'
  6096  292A  3468               	retlw	104	;'h'
  6097  292B  3465               	retlw	101	;'e'
  6098  292C  3472               	retlw	114	;'r'
  6099  292D  3465               	retlw	101	;'e'
  6100  292E  340A               	retlw	10
  6101  292F  3400               	retlw	0
  6102                           
  6103                           	psect	stringtext24
  6104  2930                     __pstringtext24:	
  6105  2930                     STR_3:	
  6106  2930  3472               	retlw	114	;'r'
  6107  2931  3465               	retlw	101	;'e'
  6108  2932  3461               	retlw	97	;'a'
  6109  2933  3464               	retlw	100	;'d'
  6110  2934  3420               	retlw	32	;' '
  6111  2935  3464               	retlw	100	;'d'
  6112  2936  3461               	retlw	97	;'a'
  6113  2937  3474               	retlw	116	;'t'
  6114  2938  3461               	retlw	97	;'a'
  6115  2939  343A               	retlw	58	;':'
  6116  293A  3420               	retlw	32	;' '
  6117  293B  3425               	retlw	37	;'%'
  6118  293C  346C               	retlw	108	;'l'
  6119  293D  3475               	retlw	117	;'u'
  6120  293E  340A               	retlw	10
  6121  293F  3400               	retlw	0
  6122                           
  6123                           	psect	stringtext25
  6124  294F                     __pstringtext25:	
  6125  294F                     STR_69:	
  6126  294F  3468               	retlw	104	;'h'
  6127  2950  3465               	retlw	101	;'e'
  6128  2951  3461               	retlw	97	;'a'
  6129  2952  3474               	retlw	116	;'t'
  6130  2953  3465               	retlw	101	;'e'
  6131  2954  3472               	retlw	114	;'r'
  6132  2955  3470               	retlw	112	;'p'
  6133  2956  346F               	retlw	111	;'o'
  6134  2957  3473               	retlw	115	;'s'
  6135  2958  3474               	retlw	116	;'t'
  6136  2959  3474               	retlw	116	;'t'
  6137  295A  3469               	retlw	105	;'i'
  6138  295B  346D               	retlw	109	;'m'
  6139  295C  3465               	retlw	101	;'e'
  6140  295D  3400               	retlw	0
  6141                           
  6142                           	psect	stringtext26
  6143  295E                     __pstringtext26:	
  6144  295E                     STR_4:	
  6145  295E  340A               	retlw	10
  6146  295F  340A               	retlw	10
  6147  2960  3473               	retlw	115	;'s'
  6148  2961  3479               	retlw	121	;'y'
  6149  2962  3473               	retlw	115	;'s'
  6150  2963  3474               	retlw	116	;'t'
  6151  2964  3465               	retlw	101	;'e'
  6152  2965  346D               	retlw	109	;'m'
  6153  2966  3420               	retlw	32	;' '
  6154  2967  3464               	retlw	100	;'d'
  6155  2968  346F               	retlw	111	;'o'
  6156  2969  346E               	retlw	110	;'n'
  6157  296A  3465               	retlw	101	;'e'
  6158  296B  340A               	retlw	10
  6159  296C  3400               	retlw	0
  6160                           
  6161                           	psect	stringtext27
  6162  296D                     __pstringtext27:	
  6163  296D                     STR_68:	
  6164  296D  3468               	retlw	104	;'h'
  6165  296E  3465               	retlw	101	;'e'
  6166  296F  3461               	retlw	97	;'a'
  6167  2970  3474               	retlw	116	;'t'
  6168  2971  3465               	retlw	101	;'e'
  6169  2972  3472               	retlw	114	;'r'
  6170  2973  3470               	retlw	112	;'p'
  6171  2974  3472               	retlw	114	;'r'
  6172  2975  3465               	retlw	101	;'e'
  6173  2976  3474               	retlw	116	;'t'
  6174  2977  3469               	retlw	105	;'i'
  6175  2978  346D               	retlw	109	;'m'
  6176  2979  3465               	retlw	101	;'e'
  6177  297A  3400               	retlw	0
  6178                           
  6179                           	psect	stringtext28
  6180  297B                     __pstringtext28:	
  6181  297B                     STR_72:	
  6182  297B  3474               	retlw	116	;'t'
  6183  297C  346F               	retlw	111	;'o'
  6184  297D  3467               	retlw	103	;'g'
  6185  297E  3467               	retlw	103	;'g'
  6186  297F  346C               	retlw	108	;'l'
  6187  2980  3465               	retlw	101	;'e'
  6188  2981  3468               	retlw	104	;'h'
  6189  2982  3465               	retlw	101	;'e'
  6190  2983  3461               	retlw	97	;'a'
  6191  2984  3474               	retlw	116	;'t'
  6192  2985  3465               	retlw	101	;'e'
  6193  2986  3472               	retlw	114	;'r'
  6194  2987  3400               	retlw	0
  6195                           
  6196                           	psect	stringtext29
  6197  2994                     __pstringtext29:	
  6198  2994                     STR_67:	
  6199  2994  3470               	retlw	112	;'p'
  6200  2995  3469               	retlw	105	;'i'
  6201  2996  3465               	retlw	101	;'e'
  6202  2997  347A               	retlw	122	;'z'
  6203  2998  346F               	retlw	111	;'o'
  6204  2999  346F               	retlw	111	;'o'
  6205  299A  346E               	retlw	110	;'n'
  6206  299B  3474               	retlw	116	;'t'
  6207  299C  3469               	retlw	105	;'i'
  6208  299D  346D               	retlw	109	;'m'
  6209  299E  3465               	retlw	101	;'e'
  6210  299F  3400               	retlw	0
  6211                           
  6212                           	psect	stringtext30
  6213  29A0                     __pstringtext30:	
  6214  29A0                     STR_73:	
  6215  29A0  3474               	retlw	116	;'t'
  6216  29A1  3469               	retlw	105	;'i'
  6217  29A2  346D               	retlw	109	;'m'
  6218  29A3  3465               	retlw	101	;'e'
  6219  29A4  3468               	retlw	104	;'h'
  6220  29A5  3465               	retlw	101	;'e'
  6221  29A6  3461               	retlw	97	;'a'
  6222  29A7  3474               	retlw	116	;'t'
  6223  29A8  3465               	retlw	101	;'e'
  6224  29A9  3472               	retlw	114	;'r'
  6225  29AA  3400               	retlw	0
  6226                           
  6227                           	psect	stringtext31
  6228  29AB                     __pstringtext31:	
  6229  29AB                     STR_11:	
  6230  29AB  3464               	retlw	100	;'d'
  6231  29AC  346F               	retlw	111	;'o'
  6232  29AD  3452               	retlw	82	;'R'
  6233  29AE  3465               	retlw	101	;'e'
  6234  29AF  346C               	retlw	108	;'l'
  6235  29B0  344D               	retlw	77	;'M'
  6236  29B1  346F               	retlw	111	;'o'
  6237  29B2  3476               	retlw	118	;'v'
  6238  29B3  3465               	retlw	101	;'e'
  6239  29B4  340A               	retlw	10
  6240  29B5  3400               	retlw	0
  6241                           
  6242                           	psect	stringtext32
  6243  29B6                     __pstringtext32:	
  6244  29B6                     STR_41:	
  6245  29B6  340A               	retlw	10
  6246  29B7  340A               	retlw	10
  6247  29B8  3473               	retlw	115	;'s'
  6248  29B9  3468               	retlw	104	;'h'
  6249  29BA  346F               	retlw	111	;'o'
  6250  29BB  3472               	retlw	114	;'r'
  6251  29BC  3474               	retlw	116	;'t'
  6252  29BD  3473               	retlw	115	;'s'
  6253  29BE  343A               	retlw	58	;':'
  6254  29BF  3420               	retlw	32	;' '
  6255  29C0  3400               	retlw	0
  6256                           
  6257                           	psect	stringtext33
  6258  29C1                     __pstringtext33:	
  6259  29C1                     STR_49:	
  6260  29C1  3446               	retlw	70	;'F'
  6261  29C2  3441               	retlw	65	;'A'
  6262  29C3  3449               	retlw	73	;'I'
  6263  29C4  344C               	retlw	76	;'L'
  6264  29C5  3445               	retlw	69	;'E'
  6265  29C6  3444               	retlw	68	;'D'
  6266  29C7  340A               	retlw	10
  6267  29C8  340A               	retlw	10
  6268  29C9  3400               	retlw	0
  6269                           
  6270                           	psect	stringtext34
  6271  29CA                     __pstringtext34:	
  6272  29CA                     STR_48:	
  6273  29CA  3470               	retlw	112	;'p'
  6274  29CB  3461               	retlw	97	;'a'
  6275  29CC  3473               	retlw	115	;'s'
  6276  29CD  3473               	retlw	115	;'s'
  6277  29CE  3465               	retlw	101	;'e'
  6278  29CF  3464               	retlw	100	;'d'
  6279  29D0  340A               	retlw	10
  6280  29D1  340A               	retlw	10
  6281  29D2  3400               	retlw	0
  6282                           
  6283                           	psect	stringtext35
  6284  29D3                     __pstringtext35:	
  6285  29D3                     STR_65:	
  6286  29D3  3464               	retlw	100	;'d'
  6287  29D4  3472               	retlw	114	;'r'
  6288  29D5  3476               	retlw	118	;'v'
  6289  29D6  3450               	retlw	80	;'P'
  6290  29D7  3465               	retlw	101	;'e'
  6291  29D8  3461               	retlw	97	;'a'
  6292  29D9  346B               	retlw	107	;'k'
  6293  29DA  3400               	retlw	0
  6294                           
  6295                           	psect	stringtext36
  6296  29DB                     __pstringtext36:	
  6297  29DB                     STR_66:	
  6298  29DB  3464               	retlw	100	;'d'
  6299  29DC  3472               	retlw	114	;'r'
  6300  29DD  3476               	retlw	118	;'v'
  6301  29DE  3447               	retlw	71	;'G'
  6302  29DF  3461               	retlw	97	;'a'
  6303  29E0  3469               	retlw	105	;'i'
  6304  29E1  346E               	retlw	110	;'n'
  6305  29E2  3400               	retlw	0
  6306                           
  6307                           	psect	stringtext37
  6308  29E3                     __pstringtext37:	
  6309  29E3                     STR_70:	
  6310  29E3  346C               	retlw	108	;'l'
  6311  29E4  3465               	retlw	101	;'e'
  6312  29E5  3464               	retlw	100	;'d'
  6313  29E6  3467               	retlw	103	;'g'
  6314  29E7  3461               	retlw	97	;'a'
  6315  29E8  3469               	retlw	105	;'i'
  6316  29E9  346E               	retlw	110	;'n'
  6317  29EA  3400               	retlw	0
  6318                           
  6319                           	psect	stringtext38
  6320  29EB                     __pstringtext38:	
  6321  29EB                     STR_76:	
  6322  29EB  346D               	retlw	109	;'m'
  6323  29EC  3473               	retlw	115	;'s'
  6324  29ED  3474               	retlw	116	;'t'
  6325  29EE  3461               	retlw	97	;'a'
  6326  29EF  3474               	retlw	116	;'t'
  6327  29F0  3475               	retlw	117	;'u'
  6328  29F1  3473               	retlw	115	;'s'
  6329  29F2  3400               	retlw	0
  6330                           
  6331                           	psect	stringtext39
  6332  29F3                     __pstringtext39:	
  6333  29F3                     STR_39:	
  6334  29F3  3446               	retlw	70	;'F'
  6335  29F4  3441               	retlw	65	;'A'
  6336  29F5  3449               	retlw	73	;'I'
  6337  29F6  344C               	retlw	76	;'L'
  6338  29F7  3445               	retlw	69	;'E'
  6339  29F8  3444               	retlw	68	;'D'
  6340  29F9  340A               	retlw	10
  6341  29FA  3400               	retlw	0
  6342                           
  6343                           	psect	stringtext40
  6344  29FB                     __pstringtext40:	
  6345  29FB                     STR_38:	
  6346  29FB  3470               	retlw	112	;'p'
  6347  29FC  3461               	retlw	97	;'a'
  6348  29FD  3473               	retlw	115	;'s'
  6349  29FE  3473               	retlw	115	;'s'
  6350  29FF  3465               	retlw	101	;'e'
  6351  2A00  3464               	retlw	100	;'d'
  6352  2A01  340A               	retlw	10
  6353  2A02  3400               	retlw	0
  6354                           
  6355                           	psect	stringtext41
  6356  2A03                     __pstringtext41:	
  6357  2A03                     STR_6:	
  6358  2A03  3464               	retlw	100	;'d'
  6359  2A04  346F               	retlw	111	;'o'
  6360  2A05  344D               	retlw	77	;'M'
  6361  2A06  346F               	retlw	111	;'o'
  6362  2A07  3476               	retlw	118	;'v'
  6363  2A08  3465               	retlw	101	;'e'
  6364  2A09  340A               	retlw	10
  6365  2A0A  3400               	retlw	0
  6366                           
  6367                           	psect	stringtext42
  6368  2A0B                     __pstringtext42:	
  6369  2A0B                     STR_40:	
  6370  2A0B  346F               	retlw	111	;'o'
  6371  2A0C  3470               	retlw	112	;'p'
  6372  2A0D  3465               	retlw	101	;'e'
  6373  2A0E  346E               	retlw	110	;'n'
  6374  2A0F  3473               	retlw	115	;'s'
  6375  2A10  343A               	retlw	58	;':'
  6376  2A11  3420               	retlw	32	;' '
  6377  2A12  3400               	retlw	0
  6378                           
  6379                           	psect	stringtext43
  6380  2A13                     __pstringtext43:	
  6381  2A13                     STR_77:	
  6382  2A13  3464               	retlw	100	;'d'
  6383  2A14  346F               	retlw	111	;'o'
  6384  2A15  346D               	retlw	109	;'m'
  6385  2A16  346F               	retlw	111	;'o'
  6386  2A17  3476               	retlw	118	;'v'
  6387  2A18  3465               	retlw	101	;'e'
  6388  2A19  3400               	retlw	0
  6389                           
  6390                           	psect	stringtext44
  6391  2A1A                     __pstringtext44:	
  6392  2A1A                     STR_71:	
  6393  2A1A  346C               	retlw	108	;'l'
  6394  2A1B  3465               	retlw	101	;'e'
  6395  2A1C  3464               	retlw	100	;'d'
  6396  2A1D  3470               	retlw	112	;'p'
  6397  2A1E  3477               	retlw	119	;'w'
  6398  2A1F  3472               	retlw	114	;'r'
  6399  2A20  3400               	retlw	0
  6400                           
  6401                           	psect	stringtext45
  6402  2A21                     __pstringtext45:	
  6403  2A21                     STR_74:	
  6404  2A21  3467               	retlw	103	;'g'
  6405  2A22  3465               	retlw	101	;'e'
  6406  2A23  3474               	retlw	116	;'t'
  6407  2A24  3441               	retlw	65	;'A'
  6408  2A25  3400               	retlw	0
  6409                           
  6410                           	psect	stringtext46
  6411  2A26                     __pstringtext46:	
  6412  2A26                     STR_62:	
  6413  2A26  3473               	retlw	115	;'s'
  6414  2A27  3465               	retlw	101	;'e'
  6415  2A28  3474               	retlw	116	;'t'
  6416  2A29  3441               	retlw	65	;'A'
  6417  2A2A  3400               	retlw	0
  6418                           
  6419                           	psect	stringtext47
  6420  2A2B                     __pstringtext47:	
  6421  2A2B                     STR_75:	
  6422  2A2B  3467               	retlw	103	;'g'
  6423  2A2C  3465               	retlw	101	;'e'
  6424  2A2D  3474               	retlw	116	;'t'
  6425  2A2E  344D               	retlw	77	;'M'
  6426  2A2F  3400               	retlw	0
  6427                           
  6428                           	psect	stringtext48
  6429  2A30                     __pstringtext48:	
  6430  2A30                     STR_63:	
  6431  2A30  3473               	retlw	115	;'s'
  6432  2A31  3465               	retlw	101	;'e'
  6433  2A32  3474               	retlw	116	;'t'
  6434  2A33  344D               	retlw	77	;'M'
  6435  2A34  3400               	retlw	0
  6436                           
  6437                           	psect	stringtext49
  6438  2A35                     __pstringtext49:	
  6439  2A35                     STR_79:	
  6440  2A35  3470               	retlw	112	;'p'
  6441  2A36  3469               	retlw	105	;'i'
  6442  2A37  346E               	retlw	110	;'n'
  6443  2A38  3467               	retlw	103	;'g'
  6444  2A39  3400               	retlw	0
  6445                           
  6446                           	psect	stringtext50
  6447  2A3A                     __pstringtext50:	
  6448  2A3A                     STR_78:	
  6449  2A3A  3463               	retlw	99	;'c'
  6450  2A3B  346F               	retlw	111	;'o'
  6451  2A3C  346D               	retlw	109	;'m'
  6452  2A3D  346D               	retlw	109	;'m'
  6453  2A3E  3400               	retlw	0
  6454                           
  6455                           	psect	stringtext51
  6456  2A3F                     __pstringtext51:	
  6457  2A3F                     STR_58:	
  6458  2A3F  3472               	retlw	114	;'r'
  6459  2A40  3465               	retlw	101	;'e'
  6460  2A41  346C               	retlw	108	;'l'
  6461  2A42  3400               	retlw	0
  6462                           
  6463                           	psect	stringtext52
  6464  2A43                     __pstringtext52:	
  6465  2A43                     STR_59:	
  6466  2A43  3461               	retlw	97	;'a'
  6467  2A44  3462               	retlw	98	;'b'
  6468  2A45  3473               	retlw	115	;'s'
  6469  2A46  3400               	retlw	0
  6470                           
  6471                           	psect	stringtext53
  6472  2A47                     __pstringtext53:	
  6473  2A47                     STR_60:	
  6474  2A47  3470               	retlw	112	;'p'
  6475  2A48  346F               	retlw	111	;'o'
  6476  2A49  3473               	retlw	115	;'s'
  6477  2A4A  3400               	retlw	0
  6478                           
  6479                           	psect	stringtext54
  6480  2A4B                     __pstringtext54:	
  6481  2A4B                     STR_14:	
  6482  2A4B  3425               	retlw	37	;'%'
  6483  2A4C  3464               	retlw	100	;'d'
  6484  2A4D  340A               	retlw	10
  6485  2A4E  3400               	retlw	0
  6486                           
  6487                           	psect	stringtext55
  6488  2A4F                     __pstringtext55:	
  6489  2A4F                     STR_1:	
  6490  2A4F  3425               	retlw	37	;'%'
  6491  2A50  3464               	retlw	100	;'d'
  6492  2A51  3420               	retlw	32	;' '
  6493  2A52  3400               	retlw	0
  6494                           
  6495                           	psect	stringtext56
  6496  2A59                     __pstringtext56:	
  6497  2A59                     STR_7:	
  6498  2A59  3441               	retlw	65	;'A'
  6499  2A5A  340A               	retlw	10
  6500  2A5B  3400               	retlw	0
  6501                           
  6502                           	psect	stringtext57
  6503  2A5C                     __pstringtext57:	
  6504  2A5C                     STR_16:	
  6505  2A5C  3445               	retlw	69	;'E'
  6506  2A5D  340A               	retlw	10
  6507  2A5E  3400               	retlw	0
  6508                           
  6509                           	psect	stringtext58
  6510  2A61                     __pstringtext58:	
  6511  2A61                     STR_64:	
  6512  2A61  347A               	retlw	122	;'z'
  6513  2A62  3400               	retlw	0
  6514                           
  6515                           	psect	stringtext59
  6516  2A63                     __pstringtext59:	
  6517  2A63                     STR_35:	
  6518  2A63  344E               	retlw	78	;'N'
  6519  2A64  3400               	retlw	0
  6520                           
  6521                           	psect	stringtext60
  6522  2A65                     __pstringtext60:	
  6523  2A65                     STR_33:	
  6524  2A65  3452               	retlw	82	;'R'
  6525  2A66  3400               	retlw	0
  6526                           
  6527                           	psect	stringtext61
  6528  0000                     __pstringtext61:	
  6529  2863                     
  6530                           ; #config settings
  6531  0000                     
  6532                           	psect	cinit
  6533  0052                     start_initialization:	
  6534  0052                     __initialization:		;BIGRAM
  6535                           
  6536                           ; Initialize objects allocated to BANK0
  6537  0052  3040               	movlw	low __pidataBANK0
  6538  0053  0084               	movwf	4
  6539  0054  30A2               	movlw	(high __pidataBANK0)| (0+128)
  6540  0055  0085               	movwf	5
  6541  0056  305A               	movlw	low __pdataBANK0
  6542  0057  0086               	movwf	6
  6543  0058  3000               	movlw	high __pdataBANK0
  6544  0059  0087               	movwf	7
  6545  005A  3000               	movlw	0
  6546  005B  00FF               	movwf	btemp+1
  6547  005C  3004               	movlw	4
  6548  005D  31A3  2391  3180   	fcall	init_ram
  6549                           
  6550                           ; Initialize objects allocated to BANK1
  6551  0060  3080               	movlw	low __pidataBANK1
  6552  0061  0084               	movwf	4
  6553  0062  30A2               	movlw	(high __pidataBANK1)| (0+128)
  6554  0063  0085               	movwf	5
  6555  0064  30E9               	movlw	low __pdataBANK1
  6556  0065  0086               	movwf	6
  6557  0066  3000               	movlw	high __pdataBANK1
  6558  0067  0087               	movwf	7
  6559  0068  3000               	movlw	0
  6560  0069  00FF               	movwf	btemp+1
  6561  006A  3006               	movlw	6
  6562  006B  31A3  2391  3180   	fcall	init_ram
  6563                           
  6564                           ; Initialize objects allocated to BANK2
  6565  006E  0022               	movlb	2	; select bank2
  6566  006F  3180  2002  3180   	fcall	__pidataBANK2	;fetch initializer
  6567  0072  00EE               	movwf	__pdataBANK2& (0+127)
  6568  0073  3180  2003  3180   	fcall	__pidataBANK2+1	;fetch initializer
  6569  0076  00EF               	movwf	(__pdataBANK2+1)& (0+127)
  6570                           
  6571                           ; Initialize objects allocated to BANK4
  6572  0077  309B               	movlw	low __pidataBANK4
  6573  0078  0084               	movwf	4
  6574  0079  30A5               	movlw	(high __pidataBANK4)| (0+128)
  6575  007A  0085               	movwf	5
  6576  007B  3020               	movlw	low __pdataBANK4
  6577  007C  0086               	movwf	6
  6578  007D  3002               	movlw	high __pdataBANK4
  6579  007E  0087               	movwf	7
  6580  007F  3000               	movlw	0
  6581  0080  00FF               	movwf	btemp+1
  6582  0081  3020               	movlw	32
  6583  0082  31A3  2391  3180   	fcall	init_ram
  6584                           
  6585                           ; Clear objects allocated to BIGRAM
  6586  0085  3090               	movlw	low (0+10128)
  6587  0086  0084               	movwf	4
  6588  0087  3027               	movlw	high (0+10128)
  6589  0088  0085               	movwf	5
  6590  0089  3060               	movlw	96
  6591  008A  00FE               	movwf	btemp
  6592  008B  3000               	movlw	0
  6593  008C  00FF               	movwf	btemp+1
  6594  008D  31A3  2385  3180   	fcall	clear_ram0
  6595                           
  6596                           ; Clear objects allocated to COMMON
  6597  0090  01FD               	clrf	__pbssCOMMON& (0+127)
  6598                           
  6599                           ; Clear objects allocated to BANK0
  6600  0091  304E               	movlw	low __pbssBANK0
  6601  0092  0084               	movwf	4
  6602  0093  3000               	movlw	high __pbssBANK0
  6603  0094  0085               	movwf	5
  6604  0095  300C               	movlw	12
  6605  0096  00FE               	movwf	btemp
  6606  0097  3000               	movlw	0
  6607  0098  00FF               	movwf	btemp+1
  6608  0099  31A3  2385  3180   	fcall	clear_ram0
  6609                           
  6610                           ; Clear objects allocated to BANK1
  6611  009C  30D9               	movlw	low __pbssBANK1
  6612  009D  0084               	movwf	4
  6613  009E  3000               	movlw	high __pbssBANK1
  6614  009F  0085               	movwf	5
  6615  00A0  3010               	movlw	16
  6616  00A1  00FE               	movwf	btemp
  6617  00A2  3000               	movlw	0
  6618  00A3  00FF               	movwf	btemp+1
  6619  00A4  31A3  2385  3180   	fcall	clear_ram0
  6620                           
  6621                           ; Clear objects allocated to BANK2
  6622  00A7  3020               	movlw	low __pbssBANK2
  6623  00A8  0084               	movwf	4
  6624  00A9  3001               	movlw	high __pbssBANK2
  6625  00AA  0085               	movwf	5
  6626  00AB  304C               	movlw	76
  6627  00AC  00FE               	movwf	btemp
  6628  00AD  3000               	movlw	0
  6629  00AE  00FF               	movwf	btemp+1
  6630  00AF  31A3  2385  3180   	fcall	clear_ram0
  6631                           
  6632                           ; Clear objects allocated to BANK3
  6633  00B2  30A0               	movlw	low __pbssBANK3
  6634  00B3  0084               	movwf	4
  6635  00B4  3001               	movlw	high __pbssBANK3
  6636  00B5  0085               	movwf	5
  6637  00B6  3039               	movlw	57
  6638  00B7  00FE               	movwf	btemp
  6639  00B8  3000               	movlw	0
  6640  00B9  00FF               	movwf	btemp+1
  6641  00BA  31A3  2385         	fcall	clear_ram0
  6642  00BC                     end_of_initialization:	
  6643                           ;End of C runtime variable initialization code
  6644                           
  6645  00BC                     __end_of__initialization:	
  6646  00BC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6647  00BD  0020               	movlb	0
  6648  00BE  3194  2C5B         	ljmp	_main	;jump to C main() function
  6649                           
  6650                           	psect	bssCOMMON
  6651  007D                     __pbssCOMMON:	
  6652  007D                     _eusartTxHead:	
  6653  007D                     	ds	1
  6654                           
  6655                           	psect	bssBANK0
  6656  004E                     __pbssBANK0:	
  6657  004E                     _absCommand:	
  6658  004E                     	ds	4
  6659  0052                     _readIdx:	
  6660  0052                     	ds	2
  6661  0054                     strtok@sp:	
  6662  0054                     	ds	1
  6663  0055                     _motionType:	
  6664  0055                     	ds	1
  6665  0056                     _eusartRxCount:	
  6666  0056                     	ds	1
  6667  0057                     _eusartRxTail:	
  6668  0057                     	ds	1
  6669  0058                     _eusartRxHead:	
  6670  0058                     	ds	1
  6671  0059                     _eusartTxTail:	
  6672  0059                     	ds	1
  6673                           
  6674                           	psect	dataBANK0
  6675  005A                     __pdataBANK0:	
  6676  005A                     _demoLong:	
  6677  005A                     	ds	4
  6678                           
  6679                           	psect	bssBANK1
  6680  00D9                     __pbssBANK1:	
  6681  00D9                     _moveMask:	
  6682  00D9                     	ds	4
  6683  00DD                     _activeMask:	
  6684  00DD                     	ds	4
  6685  00E1                     _moveVector_downs:	
  6686  00E1                     	ds	4
  6687  00E5                     _moveVector_ups:	
  6688  00E5                     	ds	4
  6689                           
  6690                           	psect	dataBANK1
  6691  00E9                     __pdataBANK1:	
  6692  00E9                     _piezo_on_time_ms:	
  6693  00E9                     	ds	2
  6694  00EB                     _heater_post_time_ms:	
  6695  00EB                     	ds	2
  6696  00ED                     _heater_pre_time_ms:	
  6697  00ED                     	ds	2
  6698                           
  6699                           	psect	bssBANK2
  6700  0120                     __pbssBANK2:	
  6701  0120                     _i2c_status:	
  6702  0120                     	ds	30
  6703  013E                     _remainingSteps:	
  6704  013E                     	ds	4
  6705  0142                     _demoHeaterToggle_bot:	
  6706  0142                     	ds	4
  6707  0146                     _demoHeaterToggle_top:	
  6708  0146                     	ds	4
  6709  014A                     _LED_configReg_bot:	
  6710  014A                     	ds	4
  6711  014E                     _LED_configReg_top:	
  6712  014E                     	ds	4
  6713  0152                     _second_bottom:	
  6714  0152                     	ds	4
  6715  0156                     _first_top:	
  6716  0156                     	ds	4
  6717  015A                     _first_bottom:	
  6718  015A                     	ds	4
  6719  015E                     _second_top:	
  6720  015E                     	ds	4
  6721  0162                     _errno:	
  6722  0162                     	ds	2
  6723  0164                     _cmdRead:	
  6724  0164                     	ds	2
  6725  0166                     _errorOut:	
  6726  0166                     	ds	2
  6727  0168                     _i2c1_driver_i2cISR:	
  6728  0168                     	ds	2
  6729  016A                     _i2c1_driver_busCollisionISR:	
  6730  016A                     	ds	2
  6731                           
  6732                           	psect	dataBANK2
  6733  016E                     __pdataBANK2:	
  6734  016E                     _drv_peak_val:	
  6735  016E                     	ds	2
  6736                           
  6737                           	psect	bssBANK3
  6738  01A0                     __pbssBANK3:	
  6739  01A0                     _eusartRxBuffer:	
  6740  01A0                     	ds	8
  6741  01A8                     _eusartTxBuffer:	
  6742  01A8                     	ds	8
  6743  01B0                     _cmd_struct:	
  6744  01B0                     	ds	21
  6745  01C5                     _readdata:	
  6746  01C5                     	ds	20
  6747                           
  6748                           	psect	dataBANK4
  6749  0220                     __pdataBANK4:	
  6750  0220                     _fsmStateTable:	
  6751  0220                     	ds	32
  6752                           
  6753                           	psect	inittext
  6754  2391                     init_ram:	
  6755  2391  00FE               	movwf	126
  6756  2392                     initloop:	
  6757  2392  0012               	moviw fsr0++
  6758  2393  001E               	movwi fsr1++
  6759  2394  3001               	movlw	1
  6760  2395  02FE               	subwf	126,f
  6761  2396  3000               	movlw	0
  6762  2397  3BFF               	subwfb	127,f
  6763  2398  087F               	movf	127,w
  6764  2399  047E               	iorwf	126,w
  6765  239A  1903               	btfsc	3,2
  6766  239B  3400               	retlw	0
  6767  239C  2B92               	goto	initloop
  6768                           
  6769                           	psect	clrtext
  6770  2385                     clear_ram0:	
  6771                           ;	Called with FSR0 containing the base address, and
  6772                           ;	btemp/btemp+1 has the size to clear
  6773                           
  6774  2385  0064               	clrwdt	;clear the watchdog before getting into this loop
  6775  2386                     clrloop0:	
  6776  2386  0180               	clrf	0	;clear RAM location pointed to by FSR
  6777  2387  3101               	addfsr 0,1
  6778  2388  3001               	movlw	1
  6779  2389  02FE               	subwf	126,f
  6780  238A  3000               	movlw	0
  6781  238B  3BFF               	subwfb	127,f
  6782  238C  087F               	movf	127,w
  6783  238D  047E               	iorwf	126,w
  6784  238E  1903               	btfsc	3,2
  6785  238F  3400               	retlw	0	;all done for this memory range, return
  6786  2390  2B86               	goto	clrloop0	;have we reached the end yet?
  6787                           
  6788                           	psect	cstackBANK4
  6789  0240                     __pcstackBANK4:	
  6790  0240                     ??_doAbsMove:	
  6791                           
  6792                           ; 1 bytes @ 0x0
  6793  0240                     	ds	28
  6794                           
  6795                           	psect	cstackBANK1
  6796  00A0                     __pcstackBANK1:	
  6797  00A0                     ??_LED_setBrightnessRange:	
  6798  00A0                     ?_printf:	
  6799                           ; 1 bytes @ 0x0
  6800                           
  6801  00A0                     ___ftmul@exp:	
  6802                           ; 2 bytes @ 0x0
  6803                           
  6804  00A0                     printf@f:	
  6805                           ; 1 bytes @ 0x0
  6806                           
  6807  00A0                     LEDsPwr@pwrAll:	
  6808                           ; 2 bytes @ 0x0
  6809                           
  6810                           
  6811                           ; 4 bytes @ 0x0
  6812  00A0                     	ds	1
  6813  00A1                     ___ftmul@f3_as_product:	
  6814                           
  6815                           ; 3 bytes @ 0x1
  6816  00A1                     	ds	3
  6817  00A4                     ___ftmul@cntr:	
  6818                           
  6819                           ; 1 bytes @ 0x4
  6820  00A4                     	ds	1
  6821  00A5                     ___ftmul@sign:	
  6822                           
  6823                           ; 1 bytes @ 0x5
  6824  00A5                     	ds	1
  6825  00A6                     ??_printf:	
  6826  00A6                     ?___ftadd:	
  6827                           ; 1 bytes @ 0x6
  6828                           
  6829  00A6                     ___ftadd@f1:	
  6830                           ; 3 bytes @ 0x6
  6831                           
  6832                           
  6833                           ; 3 bytes @ 0x6
  6834  00A6                     	ds	3
  6835  00A9                     ___ftadd@f2:	
  6836                           
  6837                           ; 3 bytes @ 0x9
  6838  00A9                     	ds	3
  6839  00AC                     ___ftadd@sign:	
  6840  00AC                     printf@prec:	
  6841                           ; 1 bytes @ 0xC
  6842                           
  6843                           
  6844                           ; 2 bytes @ 0xC
  6845  00AC                     	ds	1
  6846  00AD                     ___ftadd@exp2:	
  6847                           
  6848                           ; 1 bytes @ 0xD
  6849  00AD                     	ds	1
  6850  00AE                     ___ftadd@exp1:	
  6851  00AE                     printf@val:	
  6852                           ; 1 bytes @ 0xE
  6853                           
  6854                           
  6855                           ; 4 bytes @ 0xE
  6856  00AE                     	ds	1
  6857  00AF                     ?___fttol:	
  6858  00AF                     ___fttol@f1:	
  6859                           ; 4 bytes @ 0xF
  6860                           
  6861                           
  6862                           ; 3 bytes @ 0xF
  6863  00AF                     	ds	3
  6864  00B2                     printf@flag:	
  6865                           
  6866                           ; 1 bytes @ 0x12
  6867  00B2                     	ds	1
  6868  00B3                     ??___fttol:	
  6869  00B3                     printf@ap:	
  6870                           ; 1 bytes @ 0x13
  6871                           
  6872                           
  6873                           ; 1 bytes @ 0x13
  6874  00B3                     	ds	1
  6875  00B4                     printf@c:	
  6876                           
  6877                           ; 1 bytes @ 0x14
  6878  00B4                     	ds	1
  6879  00B5                     ??_drv_reset:	
  6880  00B5                     ?_LED_test_openshort:	
  6881                           ; 1 bytes @ 0x15
  6882                           
  6883  00B5                     ?_drv_read:	
  6884                           ; 1 bytes @ 0x15
  6885                           
  6886  00B5                     ?_startRelMove:	
  6887                           ; 2 bytes @ 0x15
  6888                           
  6889  00B5                     ?_startAbsMove:	
  6890                           ; 2 bytes @ 0x15
  6891                           
  6892  00B5                     ?_zeroPosition:	
  6893                           ; 2 bytes @ 0x15
  6894                           
  6895  00B5                     ?_getPosition:	
  6896                           ; 2 bytes @ 0x15
  6897                           
  6898  00B5                     ?_setDrvPeak:	
  6899                           ; 2 bytes @ 0x15
  6900                           
  6901  00B5                     ?_setDrvGain:	
  6902                           ; 2 bytes @ 0x15
  6903                           
  6904  00B5                     ?_setLEDBrightnessRange:	
  6905                           ; 2 bytes @ 0x15
  6906                           
  6907  00B5                     ?_setLEDPwr:	
  6908                           ; 2 bytes @ 0x15
  6909                           
  6910  00B5                     ?_setHeaterToggle:	
  6911                           ; 2 bytes @ 0x15
  6912                           
  6913  00B5                     ?_timedActiveHeatOn:	
  6914                           ; 2 bytes @ 0x15
  6915                           
  6916  00B5                     ?_setActive:	
  6917                           ; 2 bytes @ 0x15
  6918                           
  6919  00B5                     ?_setMoveMask:	
  6920                           ; 2 bytes @ 0x15
  6921                           
  6922  00B5                     ?_getActive:	
  6923                           ; 2 bytes @ 0x15
  6924                           
  6925  00B5                     ?_getMoveMask:	
  6926                           ; 2 bytes @ 0x15
  6927                           
  6928  00B5                     ?_getMotionStatus:	
  6929                           ; 2 bytes @ 0x15
  6930                           
  6931  00B5                     ?_LED_getData:	
  6932                           ; 2 bytes @ 0x15
  6933                           
  6934  00B5                     LED_test_openshort@type:	
  6935                           ; 4 bytes @ 0x15
  6936                           
  6937  00B5                     startRelMove@steps:	
  6938                           ; 2 bytes @ 0x15
  6939                           
  6940  00B5                     startAbsMove@steps:	
  6941                           ; 2 bytes @ 0x15
  6942                           
  6943  00B5                     getPosition@a:	
  6944                           ; 2 bytes @ 0x15
  6945                           
  6946  00B5                     setDrvPeak@pk:	
  6947                           ; 2 bytes @ 0x15
  6948                           
  6949  00B5                     setDrvGain@gain:	
  6950                           ; 2 bytes @ 0x15
  6951                           
  6952  00B5                     setLEDBrightnessRange@r:	
  6953                           ; 2 bytes @ 0x15
  6954                           
  6955  00B5                     setLEDPwr@pwr:	
  6956                           ; 2 bytes @ 0x15
  6957                           
  6958  00B5                     setHeaterToggle@num:	
  6959                           ; 2 bytes @ 0x15
  6960                           
  6961  00B5                     setActive@probeNum:	
  6962                           ; 2 bytes @ 0x15
  6963                           
  6964  00B5                     setMoveMask@probeNum:	
  6965                           ; 2 bytes @ 0x15
  6966                           
  6967  00B5                     timedActiveHeatOn@onTime:	
  6968                           ; 2 bytes @ 0x15
  6969                           
  6970                           
  6971                           ; 4 bytes @ 0x15
  6972  00B5                     	ds	1
  6973  00B6                     ?_drv_init:	
  6974  00B6                     drv_init@output_gain:	
  6975                           ; 1 bytes @ 0x16
  6976                           
  6977                           
  6978                           ; 2 bytes @ 0x16
  6979  00B6                     	ds	1
  6980  00B7                     ??_zeroPosition:	
  6981  00B7                     ??_setDrvGain:	
  6982                           ; 1 bytes @ 0x17
  6983                           
  6984  00B7                     fifo_check@reply:	
  6985                           ; 1 bytes @ 0x17
  6986                           
  6987  00B7                     ___fttol@sign1:	
  6988                           ; 1 bytes @ 0x17
  6989                           
  6990  00B7                     LED_test_openshort@topOrBottom:	
  6991                           ; 1 bytes @ 0x17
  6992                           
  6993  00B7                     setLEDBrightnessRange@tOB:	
  6994                           ; 2 bytes @ 0x17
  6995                           
  6996  00B7                     setLEDPwr@topOrBottom:	
  6997                           ; 2 bytes @ 0x17
  6998                           
  6999  00B7                     setHeaterToggle@topOrB:	
  7000                           ; 2 bytes @ 0x17
  7001                           
  7002  00B7                     setActive@onOff:	
  7003                           ; 2 bytes @ 0x17
  7004                           
  7005  00B7                     setMoveMask@onOff:	
  7006                           ; 2 bytes @ 0x17
  7007                           
  7008  00B7                     getActive@i:	
  7009                           ; 2 bytes @ 0x17
  7010                           
  7011  00B7                     getMoveMask@i:	
  7012                           ; 2 bytes @ 0x17
  7013                           
  7014                           
  7015                           ; 2 bytes @ 0x17
  7016  00B7                     	ds	1
  7017  00B8                     ?_drv_write_DC:	
  7018  00B8                     setDrvGain@setGain:	
  7019                           ; 1 bytes @ 0x18
  7020                           
  7021  00B8                     drv_init@idle_timeout:	
  7022                           ; 2 bytes @ 0x18
  7023                           
  7024  00B8                     drv_write_DC@val:	
  7025                           ; 2 bytes @ 0x18
  7026                           
  7027  00B8                     ___fttol@lval:	
  7028                           ; 2 bytes @ 0x18
  7029                           
  7030                           
  7031                           ; 4 bytes @ 0x18
  7032  00B8                     	ds	1
  7033  00B9                     ??_LED_getData:	
  7034  00B9                     ??_LED_test_openshort:	
  7035                           ; 1 bytes @ 0x19
  7036                           
  7037  00B9                     ??_setHeaterToggle:	
  7038                           ; 1 bytes @ 0x19
  7039                           
  7040  00B9                     ??_setActive:	
  7041                           ; 1 bytes @ 0x19
  7042                           
  7043  00B9                     timedActiveHeatOn@topOrB:	
  7044                           ; 1 bytes @ 0x19
  7045                           
  7046                           
  7047                           ; 2 bytes @ 0x19
  7048  00B9                     	ds	1
  7049  00BA                     ??_drv_init:	
  7050  00BA                     LED_test_openshort@j:	
  7051                           ; 1 bytes @ 0x1A
  7052                           
  7053  00BA                     drv_write_DC@duration_ms:	
  7054                           ; 2 bytes @ 0x1A
  7055                           
  7056                           
  7057                           ; 2 bytes @ 0x1A
  7058  00BA                     	ds	1
  7059  00BB                     ??_timedActiveHeatOn:	
  7060                           
  7061                           ; 1 bytes @ 0x1B
  7062  00BB                     	ds	1
  7063  00BC                     ??_drv_write_DC:	
  7064  00BC                     ___fttol@exp1:	
  7065                           ; 1 bytes @ 0x1C
  7066                           
  7067                           
  7068                           ; 1 bytes @ 0x1C
  7069  00BC                     	ds	1
  7070  00BD                     ??_main_initialize:	
  7071  00BD                     ?_setDrvPiezoOnTime:	
  7072                           ; 1 bytes @ 0x1D
  7073                           
  7074  00BD                     ?_setHeaterPreTime:	
  7075                           ; 2 bytes @ 0x1D
  7076                           
  7077  00BD                     ?_setHeaterPostTime:	
  7078                           ; 2 bytes @ 0x1D
  7079                           
  7080  00BD                     setDrvPiezoOnTime@t:	
  7081                           ; 2 bytes @ 0x1D
  7082                           
  7083  00BD                     setHeaterPreTime@t:	
  7084                           ; 2 bytes @ 0x1D
  7085                           
  7086  00BD                     setHeaterPostTime@t:	
  7087                           ; 2 bytes @ 0x1D
  7088                           
  7089  00BD                     drv_write_DC@i:	
  7090                           ; 2 bytes @ 0x1D
  7091                           
  7092                           
  7093                           ; 2 bytes @ 0x1D
  7094  00BD                     	ds	2
  7095  00BF                     ??_setDrvPiezoOnTime:	
  7096  00BF                     ??_setHeaterPreTime:	
  7097                           ; 1 bytes @ 0x1F
  7098                           
  7099  00BF                     ?_doMove:	
  7100                           ; 1 bytes @ 0x1F
  7101                           
  7102  00BF                     LED_getData@readData:	
  7103                           ; 2 bytes @ 0x1F
  7104                           
  7105                           
  7106                           ; 4 bytes @ 0x1F
  7107  00BF                     	ds	1
  7108  00C0                     timedActiveHeatOn@t:	
  7109                           
  7110                           ; 2 bytes @ 0x20
  7111  00C0                     	ds	1
  7112  00C1                     ??_doMove:	
  7113                           
  7114                           ; 1 bytes @ 0x21
  7115  00C1                     	ds	1
  7116  00C2                     doMove@t:	
  7117                           
  7118                           ; 2 bytes @ 0x22
  7119  00C2                     	ds	1
  7120  00C3                     LED_getData@j:	
  7121                           
  7122                           ; 2 bytes @ 0x23
  7123  00C3                     	ds	1
  7124  00C4                     doMove@t_1562:	
  7125                           
  7126                           ; 2 bytes @ 0x24
  7127  00C4                     	ds	1
  7128  00C5                     ?_LED_readConfig:	
  7129  00C5                     LED_readConfig@topOrBottom:	
  7130                           ; 4 bytes @ 0x25
  7131                           
  7132                           
  7133                           ; 2 bytes @ 0x25
  7134  00C5                     	ds	1
  7135  00C6                     ??_doRelMove:	
  7136  00C6                     doAbsMove@allThere:	
  7137                           ; 1 bytes @ 0x26
  7138                           
  7139                           
  7140                           ; 2 bytes @ 0x26
  7141  00C6                     	ds	2
  7142  00C8                     doAbsMove@i:	
  7143                           
  7144                           ; 2 bytes @ 0x28
  7145  00C8                     	ds	1
  7146  00C9                     ?_LED_testComm:	
  7147  00C9                     LED_testComm@topOrBottom:	
  7148                           ; 2 bytes @ 0x29
  7149                           
  7150                           
  7151                           ; 2 bytes @ 0x29
  7152  00C9                     	ds	1
  7153  00CA                     doAbsMove@i_1579:	
  7154                           
  7155                           ; 2 bytes @ 0x2A
  7156  00CA                     	ds	1
  7157  00CB                     LED_testComm@readResult:	
  7158                           
  7159                           ; 2 bytes @ 0x2B
  7160  00CB                     	ds	1
  7161  00CC                     doAbsMove@i_1577:	
  7162                           
  7163                           ; 2 bytes @ 0x2C
  7164  00CC                     	ds	1
  7165  00CD                     LED_testComm@oldConfigReg:	
  7166                           
  7167                           ; 4 bytes @ 0x2D
  7168  00CD                     	ds	4
  7169  00D1                     ?_commCheck:	
  7170                           
  7171                           ; 2 bytes @ 0x31
  7172  00D1                     	ds	2
  7173  00D3                     ??_commCheck:	
  7174                           
  7175                           ; 1 bytes @ 0x33
  7176  00D3                     	ds	1
  7177  00D4                     execCmd@s:	
  7178                           
  7179                           ; 1 bytes @ 0x34
  7180  00D4                     	ds	2
  7181  00D6                     doRelMove@j:	
  7182                           
  7183                           ; 2 bytes @ 0x36
  7184  00D6                     	ds	2
  7185  00D8                     ??_main:	
  7186                           
  7187                           ; 1 bytes @ 0x38
  7188  00D8                     	ds	1
  7189                           
  7190                           	psect	cstackCOMMON
  7191  0070                     __pcstackCOMMON:	
  7192  0070                     ?_fifo_check:	
  7193  0070                     ?_isdigit:	
  7194                           ; 1 bit 
  7195                           
  7196  0070                     ?_mssp1_IRQisEnabled:	
  7197                           ; 1 bit 
  7198                           
  7199  0070                     ?_i2c1_driver_open:	
  7200                           ; 1 bit 
  7201                           
  7202  0070                     ?_i2c1_driver_isNACK:	
  7203                           ; 1 bit 
  7204                           
  7205  0070                     ?i1_i2c1_driver_isNACK:	
  7206                           ; 1 bit 
  7207                           
  7208  0070                     ?_PMD_Initialize:	
  7209                           ; 1 bit 
  7210                           
  7211  0070                     ?_PIN_MANAGER_Initialize:	
  7212                           ; 1 bytes @ 0x0
  7213                           
  7214  0070                     ?_OSCILLATOR_Initialize:	
  7215                           ; 1 bytes @ 0x0
  7216                           
  7217  0070                     ?_WDT_Initialize:	
  7218                           ; 1 bytes @ 0x0
  7219                           
  7220  0070                     ?_TMR2_Initialize:	
  7221                           ; 1 bytes @ 0x0
  7222                           
  7223  0070                     ?_TMR0_Initialize:	
  7224                           ; 1 bytes @ 0x0
  7225                           
  7226  0070                     ?_EUSART_Initialize:	
  7227                           ; 1 bytes @ 0x0
  7228                           
  7229  0070                     ?_TMR0_ISR:	
  7230                           ; 1 bytes @ 0x0
  7231                           
  7232  0070                     ?_TMR2_ISR:	
  7233                           ; 1 bytes @ 0x0
  7234                           
  7235  0070                     ?_EUSART_Receive_ISR:	
  7236                           ; 1 bytes @ 0x0
  7237                           
  7238  0070                     ??_EUSART_Receive_ISR:	
  7239                           ; 1 bytes @ 0x0
  7240                           
  7241  0070                     ?_EUSART_Transmit_ISR:	
  7242                           ; 1 bytes @ 0x0
  7243                           
  7244  0070                     ??_EUSART_Transmit_ISR:	
  7245                           ; 1 bytes @ 0x0
  7246                           
  7247  0070                     ?_i2c_busCollisionISR:	
  7248                           ; 1 bytes @ 0x0
  7249                           
  7250  0070                     ??_i2c_busCollisionISR:	
  7251                           ; 1 bytes @ 0x0
  7252                           
  7253  0070                     ?_i2c_ISR:	
  7254                           ; 1 bytes @ 0x0
  7255                           
  7256  0070                     ?_i2c_poller:	
  7257                           ; 1 bytes @ 0x0
  7258                           
  7259  0070                     ?_TMR0_DefaultInterruptHandler:	
  7260                           ; 1 bytes @ 0x0
  7261                           
  7262  0070                     ?_TMR2_DefaultInterruptHandler:	
  7263                           ; 1 bytes @ 0x0
  7264                           
  7265  0070                     ?_main_initialize:	
  7266                           ; 1 bytes @ 0x0
  7267                           
  7268  0070                     ?_doRelMove:	
  7269                           ; 1 bytes @ 0x0
  7270                           
  7271  0070                     ?_doAbsMove:	
  7272                           ; 1 bytes @ 0x0
  7273                           
  7274  0070                     ?_calcHeaterPins:	
  7275                           ; 1 bytes @ 0x0
  7276                           
  7277  0070                     ?_drv_reset:	
  7278                           ; 1 bytes @ 0x0
  7279                           
  7280  0070                     ?_toupper:	
  7281                           ; 1 bytes @ 0x0
  7282                           
  7283  0070                     ?_SYSTEM_Initialize:	
  7284                           ; 1 bytes @ 0x0
  7285                           
  7286  0070                     ?_INTERRUPT_InterruptManager:	
  7287                           ; 1 bytes @ 0x0
  7288                           
  7289  0070                     ?_EUSART_Read:	
  7290                           ; 1 bytes @ 0x0
  7291                           
  7292  0070                     ?_EUSART_Write:	
  7293                           ; 1 bytes @ 0x0
  7294                           
  7295  0070                     ?_putch:	
  7296                           ; 1 bytes @ 0x0
  7297                           
  7298  0070                     ?_mssp1_clearIRQ:	
  7299                           ; 1 bytes @ 0x0
  7300                           
  7301  0070                     ?_mssp1_setIRQ:	
  7302                           ; 1 bytes @ 0x0
  7303                           
  7304  0070                     ?_mssp1_waitForEvent:	
  7305                           ; 1 bytes @ 0x0
  7306                           
  7307  0070                     ?_i2c1_driver_resetBus:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310  0070                     ?_i2c1_driver_start:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313  0070                     ?_i2c1_driver_restart:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316  0070                     ?_i2c1_driver_stop:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319  0070                     ?_i2c1_driver_startRX:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322  0070                     ?_i2c1_driver_getRXData:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325  0070                     ?_i2c1_driver_TXData:	
  7326                           ; 1 bytes @ 0x0
  7327                           
  7328  0070                     ?_i2c1_driver_sendACK:	
  7329                           ; 1 bytes @ 0x0
  7330                           
  7331  0070                     ?_i2c1_driver_sendNACK:	
  7332                           ; 1 bytes @ 0x0
  7333                           
  7334  0070                     ?_i2c1_driver_clearBusCollision:	
  7335                           ; 1 bytes @ 0x0
  7336                           
  7337  0070                     ??_i2c1_driver_clearBusCollision:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340  0070                     ?_i2c_open:	
  7341                           ; 1 bytes @ 0x0
  7342                           
  7343  0070                     ?_i2c_setAddress:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346  0070                     ?_i2c_masterOperation:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349  0070                     ?_do_I2C_RESET:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352  0070                     ?_do_I2C_IDLE:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355  0070                     ?_do_I2C_SEND_RESTART_READ:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361  0070                     ?_do_I2C_SEND_RESTART:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364  0070                     ?_do_I2C_SEND_STOP:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367  0070                     ?_do_I2C_SEND_ADR_READ:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373  0070                     ?_do_I2C_RCEN:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376  0070                     ?_do_I2C_DO_ACK:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379  0070                     ?_do_I2C_DO_NACK_STOP:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382  0070                     ?_do_I2C_DO_NACK_RESTART:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388  0070                     ?_do_I2C_TX:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391  0070                     ?_do_I2C_RX:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394  0070                     ?_do_I2C_TX_EMPTY:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397  0070                     ?_TMR0_StartTimer:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400  0070                     ?_TMR0_StopTimer:	
  7401                           ; 1 bytes @ 0x0
  7402                           
  7403  0070                     ??_TMR0_StopTimer:	
  7404                           ; 1 bytes @ 0x0
  7405                           
  7406  0070                     ?_TMR0_Write8bitTimer:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409  0070                     ??_TMR0_Write8bitTimer:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412  0070                     ?_TMR0_Load8bitPeriod:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415  0070                     ?_TMR2_StartTimer:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418  0070                     ?_TMR2_StopTimer:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421  0070                     ??_TMR2_StopTimer:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424  0070                     ?_TMR2_WriteTimer:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427  0070                     ??_TMR2_WriteTimer:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430  0070                     ?_TMR2_LoadPeriodRegister:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433  0070                     ?_main:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436  0070                     ?i1_send_last_2bytes_IK:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439  0070                     ?i1_send_2bytes_latchless_IK:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442  0070                     ?i1_mssp1_clearIRQ:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445  0070                     ??i1_mssp1_clearIRQ:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448  0070                     ?i1_mssp1_setIRQ:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451  0070                     ??i1_mssp1_setIRQ:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454  0070                     ?i1_i2c1_driver_resetBus:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457  0070                     ??i1_i2c1_driver_resetBus:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460  0070                     ?i1_i2c1_driver_restart:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463  0070                     ??i1_i2c1_driver_restart:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466  0070                     ?i1_i2c1_driver_stop:	
  7467                           ; 1 bytes @ 0x0
  7468                           
  7469  0070                     ??i1_i2c1_driver_stop:	
  7470                           ; 1 bytes @ 0x0
  7471                           
  7472  0070                     ??i1_i2c1_driver_isNACK:	
  7473                           ; 1 bytes @ 0x0
  7474                           
  7475  0070                     ?i1_i2c1_driver_startRX:	
  7476                           ; 1 bytes @ 0x0
  7477                           
  7478  0070                     ??i1_i2c1_driver_startRX:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481  0070                     ?i1_i2c1_driver_getRXData:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484  0070                     ??i1_i2c1_driver_getRXData:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487  0070                     ?i1_i2c1_driver_TXData:	
  7488                           ; 1 bytes @ 0x0
  7489                           
  7490  0070                     ??i1_i2c1_driver_TXData:	
  7491                           ; 1 bytes @ 0x0
  7492                           
  7493  0070                     ?i1_i2c1_driver_sendACK:	
  7494                           ; 1 bytes @ 0x0
  7495                           
  7496  0070                     ??i1_i2c1_driver_sendACK:	
  7497                           ; 1 bytes @ 0x0
  7498                           
  7499  0070                     ?i1_i2c1_driver_sendNACK:	
  7500                           ; 1 bytes @ 0x0
  7501                           
  7502  0070                     ??i1_i2c1_driver_sendNACK:	
  7503                           ; 1 bytes @ 0x0
  7504                           
  7505  0070                     ?i1_do_I2C_RESET:	
  7506                           ; 1 bytes @ 0x0
  7507                           
  7508  0070                     ??i1_do_I2C_RESET:	
  7509                           ; 1 bytes @ 0x0
  7510                           
  7511  0070                     ?i1_do_I2C_IDLE:	
  7512                           ; 1 bytes @ 0x0
  7513                           
  7514  0070                     ??i1_do_I2C_IDLE:	
  7515                           ; 1 bytes @ 0x0
  7516                           
  7517  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  7518                           ; 1 bytes @ 0x0
  7519                           
  7520  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  7521                           ; 1 bytes @ 0x0
  7522                           
  7523  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  7524                           ; 1 bytes @ 0x0
  7525                           
  7526  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  7527                           ; 1 bytes @ 0x0
  7528                           
  7529  0070                     ?i1_do_I2C_SEND_RESTART:	
  7530                           ; 1 bytes @ 0x0
  7531                           
  7532  0070                     ??i1_do_I2C_SEND_RESTART:	
  7533                           ; 1 bytes @ 0x0
  7534                           
  7535  0070                     ?i1_do_I2C_SEND_STOP:	
  7536                           ; 1 bytes @ 0x0
  7537                           
  7538  0070                     ??i1_do_I2C_SEND_STOP:	
  7539                           ; 1 bytes @ 0x0
  7540                           
  7541  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  7542                           ; 1 bytes @ 0x0
  7543                           
  7544  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  7545                           ; 1 bytes @ 0x0
  7546                           
  7547  0070                     ?i1_do_I2C_RCEN:	
  7548                           ; 1 bytes @ 0x0
  7549                           
  7550  0070                     ??i1_do_I2C_RCEN:	
  7551                           ; 1 bytes @ 0x0
  7552                           
  7553  0070                     ?i1_do_I2C_DO_ACK:	
  7554                           ; 1 bytes @ 0x0
  7555                           
  7556  0070                     ??i1_do_I2C_DO_ACK:	
  7557                           ; 1 bytes @ 0x0
  7558                           
  7559  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  7560                           ; 1 bytes @ 0x0
  7561                           
  7562  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  7563                           ; 1 bytes @ 0x0
  7564                           
  7565  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  7566                           ; 1 bytes @ 0x0
  7567                           
  7568  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  7569                           ; 1 bytes @ 0x0
  7570                           
  7571  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  7572                           ; 1 bytes @ 0x0
  7573                           
  7574  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  7575                           ; 1 bytes @ 0x0
  7576                           
  7577  0070                     ?i1_do_I2C_TX:	
  7578                           ; 1 bytes @ 0x0
  7579                           
  7580  0070                     ?i1_do_I2C_RX:	
  7581                           ; 1 bytes @ 0x0
  7582                           
  7583  0070                     ??i1_do_I2C_RX:	
  7584                           ; 1 bytes @ 0x0
  7585                           
  7586  0070                     ?i1_do_I2C_TX_EMPTY:	
  7587                           ; 1 bytes @ 0x0
  7588                           
  7589  0070                     ??i1_do_I2C_TX_EMPTY:	
  7590                           ; 1 bytes @ 0x0
  7591                           
  7592  0070                     ?i1_i2c_ISR:	
  7593                           ; 1 bytes @ 0x0
  7594                           
  7595  0070                     ?i1_returnStop:	
  7596                           ; 1 bytes @ 0x0
  7597                           
  7598  0070                     ?i1_returnReset:	
  7599                           ; 1 bytes @ 0x0
  7600                           
  7601  0070                     ?_execCmd:	
  7602                           ; 1 bytes @ 0x0
  7603                           
  7604  0070                     TMR0_Write8bitTimer@timerVal:	
  7605                           ; 2 bytes @ 0x0
  7606                           
  7607  0070                     TMR2_WriteTimer@timerVal:	
  7608                           ; 1 bytes @ 0x0
  7609                           
  7610  0070                     i1i2c1_driver_TXData@d:	
  7611                           ; 1 bytes @ 0x0
  7612                           
  7613  0070                     i1returnStop@p:	
  7614                           ; 1 bytes @ 0x0
  7615                           
  7616  0070                     i1returnReset@p:	
  7617                           ; 1 bytes @ 0x0
  7618                           
  7619  0070                     i1send_last_2bytes_IK@data:	
  7620                           ; 1 bytes @ 0x0
  7621                           
  7622  0070                     i1send_2bytes_latchless_IK@data:	
  7623                           ; 2 bytes @ 0x0
  7624                           
  7625                           
  7626                           ; 2 bytes @ 0x0
  7627  0070                     	ds	1
  7628  0071                     ??_TMR2_ISR:	
  7629  0071                     ??_TMR2_DefaultInterruptHandler:	
  7630                           ; 1 bytes @ 0x1
  7631                           
  7632  0071                     ??i1_do_I2C_SEND_ADR_READ:	
  7633                           ; 1 bytes @ 0x1
  7634                           
  7635  0071                     ??i1_do_I2C_SEND_ADR_WRITE:	
  7636                           ; 1 bytes @ 0x1
  7637                           
  7638  0071                     ??i1_do_I2C_TX:	
  7639                           ; 1 bytes @ 0x1
  7640                           
  7641  0071                     ??i1_returnStop:	
  7642                           ; 1 bytes @ 0x1
  7643                           
  7644  0071                     ??i1_returnReset:	
  7645                           ; 1 bytes @ 0x1
  7646                           
  7647                           
  7648                           ; 1 bytes @ 0x1
  7649  0071                     	ds	1
  7650  0072                     ??i1_send_2bytes_latchless_IK:	
  7651  0072                     i1send_last_2bytes_IK@latch_start:	
  7652                           ; 1 bytes @ 0x2
  7653                           
  7654                           
  7655                           ; 1 bytes @ 0x2
  7656  0072                     	ds	1
  7657  0073                     i1send_last_2bytes_IK@topOrBottom:	
  7658  0073                     i1_do_I2C_TX$1131:	
  7659                           ; 2 bytes @ 0x3
  7660                           
  7661                           
  7662                           ; 2 bytes @ 0x3
  7663  0073                     	ds	2
  7664  0075                     ??i1_send_last_2bytes_IK:	
  7665  0075                     ??i1_i2c_ISR:	
  7666                           ; 1 bytes @ 0x5
  7667                           
  7668                           
  7669                           ; 1 bytes @ 0x5
  7670  0075                     	ds	1
  7671  0076                     i1send_2bytes_latchless_IK@j:	
  7672                           
  7673                           ; 2 bytes @ 0x6
  7674  0076                     	ds	3
  7675  0079                     i1send_last_2bytes_IK@j:	
  7676                           
  7677                           ; 2 bytes @ 0x9
  7678  0079                     	ds	2
  7679  007B                     ??i1_send_2length_2bytes_IK:	
  7680                           
  7681                           ; 1 bytes @ 0xB
  7682  007B                     	ds	1
  7683  007C                     ??_TMR0_ISR:	
  7684  007C                     ??_TMR0_DefaultInterruptHandler:	
  7685                           ; 1 bytes @ 0xC
  7686                           
  7687  007C                     ??_INTERRUPT_InterruptManager:	
  7688                           ; 1 bytes @ 0xC
  7689                           
  7690                           
  7691                           ; 1 bytes @ 0xC
  7692  007C                     	ds	1
  7693                           
  7694                           	psect	cstackBANK0
  7695  0020                     __pcstackBANK0:	
  7696  0020                     ?i1_send_2length_2bytes_IK:	
  7697  0020                     i1send_2length_2bytes_IK@data1:	
  7698                           ; 1 bytes @ 0x0
  7699                           
  7700                           
  7701                           ; 2 bytes @ 0x0
  7702  0020                     	ds	2
  7703  0022                     i1send_2length_2bytes_IK@data2:	
  7704                           
  7705                           ; 2 bytes @ 0x2
  7706  0022                     	ds	2
  7707  0024                     i1send_2length_2bytes_IK@latch_start:	
  7708                           
  7709                           ; 1 bytes @ 0x4
  7710  0024                     	ds	1
  7711  0025                     i1send_2length_2bytes_IK@topOrBottom:	
  7712                           
  7713                           ; 2 bytes @ 0x5
  7714  0025                     	ds	2
  7715  0027                     ?i1_LEDsOn:	
  7716  0027                     i1LEDsOn@LEDpins:	
  7717                           ; 1 bytes @ 0x7
  7718                           
  7719                           
  7720                           ; 4 bytes @ 0x7
  7721  0027                     	ds	4
  7722  002B                     i1LEDsOn@topOrBottom:	
  7723                           
  7724                           ; 2 bytes @ 0xB
  7725  002B                     	ds	2
  7726  002D                     ??i1_LEDsOn:	
  7727                           
  7728                           ; 1 bytes @ 0xD
  7729  002D                     	ds	4
  7730  0031                     ??_PMD_Initialize:	
  7731  0031                     ??_PIN_MANAGER_Initialize:	
  7732                           ; 1 bytes @ 0x11
  7733                           
  7734  0031                     ??_OSCILLATOR_Initialize:	
  7735                           ; 1 bytes @ 0x11
  7736                           
  7737  0031                     ??_WDT_Initialize:	
  7738                           ; 1 bytes @ 0x11
  7739                           
  7740  0031                     ??_EUSART_Initialize:	
  7741                           ; 1 bytes @ 0x11
  7742                           
  7743  0031                     ?_returnStop:	
  7744                           ; 1 bytes @ 0x11
  7745                           
  7746  0031                     ?_returnReset:	
  7747                           ; 1 bytes @ 0x11
  7748                           
  7749  0031                     ?_TMR0_SetInterruptHandler:	
  7750                           ; 1 bytes @ 0x11
  7751                           
  7752  0031                     ?_TMR2_SetInterruptHandler:	
  7753                           ; 1 bytes @ 0x11
  7754                           
  7755  0031                     ??_calcHeaterPins:	
  7756                           ; 1 bytes @ 0x11
  7757                           
  7758  0031                     ??_isdigit:	
  7759                           ; 1 bytes @ 0x11
  7760                           
  7761  0031                     ??_toupper:	
  7762                           ; 1 bytes @ 0x11
  7763                           
  7764  0031                     ?_send_last_2bytes_IK:	
  7765                           ; 1 bytes @ 0x11
  7766                           
  7767  0031                     ?_send_2bytes_latchless_IK:	
  7768                           ; 1 bytes @ 0x11
  7769                           
  7770  0031                     ??_EUSART_Read:	
  7771                           ; 1 bytes @ 0x11
  7772                           
  7773  0031                     ??_EUSART_Write:	
  7774                           ; 1 bytes @ 0x11
  7775                           
  7776  0031                     ??_mssp1_IRQisEnabled:	
  7777                           ; 1 bytes @ 0x11
  7778                           
  7779  0031                     ??_mssp1_clearIRQ:	
  7780                           ; 1 bytes @ 0x11
  7781                           
  7782  0031                     ??_mssp1_setIRQ:	
  7783                           ; 1 bytes @ 0x11
  7784                           
  7785  0031                     ??_mssp1_waitForEvent:	
  7786                           ; 1 bytes @ 0x11
  7787                           
  7788  0031                     ??_i2c1_driver_open:	
  7789                           ; 1 bytes @ 0x11
  7790                           
  7791  0031                     ??_i2c1_driver_resetBus:	
  7792                           ; 1 bytes @ 0x11
  7793                           
  7794  0031                     ??_i2c1_driver_start:	
  7795                           ; 1 bytes @ 0x11
  7796                           
  7797  0031                     ??_i2c1_driver_restart:	
  7798                           ; 1 bytes @ 0x11
  7799                           
  7800  0031                     ??_i2c1_driver_stop:	
  7801                           ; 1 bytes @ 0x11
  7802                           
  7803  0031                     ??_i2c1_driver_isNACK:	
  7804                           ; 1 bytes @ 0x11
  7805                           
  7806  0031                     ??_i2c1_driver_startRX:	
  7807                           ; 1 bytes @ 0x11
  7808                           
  7809  0031                     ??_i2c1_driver_getRXData:	
  7810                           ; 1 bytes @ 0x11
  7811                           
  7812  0031                     ??_i2c1_driver_TXData:	
  7813                           ; 1 bytes @ 0x11
  7814                           
  7815  0031                     ??_i2c1_driver_sendACK:	
  7816                           ; 1 bytes @ 0x11
  7817                           
  7818  0031                     ??_i2c1_driver_sendNACK:	
  7819                           ; 1 bytes @ 0x11
  7820                           
  7821  0031                     ?_i2c1_driver_setBusCollisionISR:	
  7822                           ; 1 bytes @ 0x11
  7823                           
  7824  0031                     ?_i2c1_driver_setI2cISR:	
  7825                           ; 1 bytes @ 0x11
  7826                           
  7827  0031                     ??_i2c_setAddress:	
  7828                           ; 1 bytes @ 0x11
  7829                           
  7830  0031                     ?_i2c_setBuffer:	
  7831                           ; 1 bytes @ 0x11
  7832                           
  7833  0031                     ??_do_I2C_RESET:	
  7834                           ; 1 bytes @ 0x11
  7835                           
  7836  0031                     ??_do_I2C_IDLE:	
  7837                           ; 1 bytes @ 0x11
  7838                           
  7839  0031                     ??_do_I2C_SEND_RESTART_READ:	
  7840                           ; 1 bytes @ 0x11
  7841                           
  7842  0031                     ??_do_I2C_SEND_RESTART_WRITE:	
  7843                           ; 1 bytes @ 0x11
  7844                           
  7845  0031                     ??_do_I2C_SEND_RESTART:	
  7846                           ; 1 bytes @ 0x11
  7847                           
  7848  0031                     ??_do_I2C_SEND_STOP:	
  7849                           ; 1 bytes @ 0x11
  7850                           
  7851  0031                     ??_do_I2C_RCEN:	
  7852                           ; 1 bytes @ 0x11
  7853                           
  7854  0031                     ??_do_I2C_DO_ACK:	
  7855                           ; 1 bytes @ 0x11
  7856                           
  7857  0031                     ??_do_I2C_DO_NACK_STOP:	
  7858                           ; 1 bytes @ 0x11
  7859                           
  7860  0031                     ??_do_I2C_DO_NACK_RESTART:	
  7861                           ; 1 bytes @ 0x11
  7862                           
  7863  0031                     ??_do_I2C_DO_ADDRESS_NACK:	
  7864                           ; 1 bytes @ 0x11
  7865                           
  7866  0031                     ??_do_I2C_RX:	
  7867                           ; 1 bytes @ 0x11
  7868                           
  7869  0031                     ??_do_I2C_TX_EMPTY:	
  7870                           ; 1 bytes @ 0x11
  7871                           
  7872  0031                     ??_TMR0_StartTimer:	
  7873                           ; 1 bytes @ 0x11
  7874                           
  7875  0031                     ??_TMR0_Load8bitPeriod:	
  7876                           ; 1 bytes @ 0x11
  7877                           
  7878  0031                     ??_TMR2_StartTimer:	
  7879                           ; 1 bytes @ 0x11
  7880                           
  7881  0031                     ??_TMR2_LoadPeriodRegister:	
  7882                           ; 1 bytes @ 0x11
  7883                           
  7884  0031                     ?_strchr:	
  7885                           ; 1 bytes @ 0x11
  7886                           
  7887  0031                     ?___wmul:	
  7888                           ; 2 bytes @ 0x11
  7889                           
  7890  0031                     ?___awdiv:	
  7891                           ; 2 bytes @ 0x11
  7892                           
  7893  0031                     ?___ftpack:	
  7894                           ; 2 bytes @ 0x11
  7895                           
  7896  0031                     ?___lldiv:	
  7897                           ; 3 bytes @ 0x11
  7898                           
  7899  0031                     mssp1_waitForEvent@timeout:	
  7900                           ; 4 bytes @ 0x11
  7901                           
  7902  0031                     i2c1_driver_TXData@d:	
  7903                           ; 1 bytes @ 0x11
  7904                           
  7905  0031                     returnStop@p:	
  7906                           ; 1 bytes @ 0x11
  7907                           
  7908  0031                     returnReset@p:	
  7909                           ; 1 bytes @ 0x11
  7910                           
  7911  0031                     TMR0_Load8bitPeriod@periodVal:	
  7912                           ; 1 bytes @ 0x11
  7913                           
  7914  0031                     TMR2_LoadPeriodRegister@periodVal:	
  7915                           ; 1 bytes @ 0x11
  7916                           
  7917  0031                     _isdigit$2150:	
  7918                           ; 1 bytes @ 0x11
  7919                           
  7920  0031                     send_last_2bytes_IK@data:	
  7921                           ; 1 bytes @ 0x11
  7922                           
  7923  0031                     send_2bytes_latchless_IK@data:	
  7924                           ; 2 bytes @ 0x11
  7925                           
  7926  0031                     i2c1_driver_setBusCollisionISR@f:	
  7927                           ; 2 bytes @ 0x11
  7928                           
  7929  0031                     i2c1_driver_setI2cISR@f:	
  7930                           ; 2 bytes @ 0x11
  7931                           
  7932  0031                     i2c_setBuffer@buffer:	
  7933                           ; 2 bytes @ 0x11
  7934                           
  7935  0031                     TMR0_SetInterruptHandler@InterruptHandler:	
  7936                           ; 2 bytes @ 0x11
  7937                           
  7938  0031                     TMR2_SetInterruptHandler@InterruptHandler:	
  7939                           ; 2 bytes @ 0x11
  7940                           
  7941  0031                     ___wmul@multiplier:	
  7942                           ; 2 bytes @ 0x11
  7943                           
  7944  0031                     ___awdiv@divisor:	
  7945                           ; 2 bytes @ 0x11
  7946                           
  7947  0031                     strchr@ptr:	
  7948                           ; 2 bytes @ 0x11
  7949                           
  7950  0031                     ___ftpack@arg:	
  7951                           ; 2 bytes @ 0x11
  7952                           
  7953  0031                     ___lldiv@divisor:	
  7954                           ; 3 bytes @ 0x11
  7955                           
  7956                           
  7957                           ; 4 bytes @ 0x11
  7958  0031                     	ds	1
  7959  0032                     ??_returnStop:	
  7960  0032                     ??_returnReset:	
  7961                           ; 1 bytes @ 0x12
  7962                           
  7963  0032                     ??_do_I2C_SEND_ADR_READ:	
  7964                           ; 1 bytes @ 0x12
  7965                           
  7966  0032                     ??_do_I2C_SEND_ADR_WRITE:	
  7967                           ; 1 bytes @ 0x12
  7968                           
  7969  0032                     ??_do_I2C_TX:	
  7970                           ; 1 bytes @ 0x12
  7971                           
  7972  0032                     EUSART_Read@readValue:	
  7973                           ; 1 bytes @ 0x12
  7974                           
  7975  0032                     EUSART_Write@txData:	
  7976                           ; 1 bytes @ 0x12
  7977                           
  7978  0032                     i2c_setAddress@address:	
  7979                           ; 1 bytes @ 0x12
  7980                           
  7981  0032                     isdigit@c:	
  7982                           ; 1 bytes @ 0x12
  7983                           
  7984  0032                     toupper@c:	
  7985                           ; 1 bytes @ 0x12
  7986                           
  7987                           
  7988                           ; 1 bytes @ 0x12
  7989  0032                     	ds	1
  7990  0033                     ??_TMR2_Initialize:	
  7991  0033                     ??_TMR0_Initialize:	
  7992                           ; 1 bytes @ 0x13
  7993                           
  7994  0033                     ??_TMR0_SetInterruptHandler:	
  7995                           ; 1 bytes @ 0x13
  7996                           
  7997  0033                     ??_TMR2_SetInterruptHandler:	
  7998                           ; 1 bytes @ 0x13
  7999                           
  8000  0033                     ??_SYSTEM_Initialize:	
  8001                           ; 1 bytes @ 0x13
  8002                           
  8003  0033                     ??_send_2bytes_latchless_IK:	
  8004                           ; 1 bytes @ 0x13
  8005                           
  8006  0033                     ??_putch:	
  8007                           ; 1 bytes @ 0x13
  8008                           
  8009  0033                     ??_i2c1_driver_setBusCollisionISR:	
  8010                           ; 1 bytes @ 0x13
  8011                           
  8012  0033                     ??_i2c1_driver_setI2cISR:	
  8013                           ; 1 bytes @ 0x13
  8014                           
  8015  0033                     ??_i2c_open:	
  8016                           ; 1 bytes @ 0x13
  8017                           
  8018  0033                     ?_stricmp:	
  8019                           ; 1 bytes @ 0x13
  8020                           
  8021  0033                     send_last_2bytes_IK@latch_start:	
  8022                           ; 2 bytes @ 0x13
  8023                           
  8024  0033                     putch@txData:	
  8025                           ; 1 bytes @ 0x13
  8026                           
  8027  0033                     i2c_setBuffer@bufferSize:	
  8028                           ; 1 bytes @ 0x13
  8029                           
  8030  0033                     ___wmul@multiplicand:	
  8031                           ; 2 bytes @ 0x13
  8032                           
  8033  0033                     ___awdiv@dividend:	
  8034                           ; 2 bytes @ 0x13
  8035                           
  8036  0033                     stricmp@s2:	
  8037                           ; 2 bytes @ 0x13
  8038                           
  8039  0033                     strchr@chr:	
  8040                           ; 2 bytes @ 0x13
  8041                           
  8042                           
  8043                           ; 2 bytes @ 0x13
  8044  0033                     	ds	1
  8045  0034                     i2c_open@ret:	
  8046  0034                     ___ftpack@exp:	
  8047                           ; 1 bytes @ 0x14
  8048                           
  8049  0034                     send_last_2bytes_IK@topOrBottom:	
  8050                           ; 1 bytes @ 0x14
  8051                           
  8052  0034                     _do_I2C_TX$1131:	
  8053                           ; 2 bytes @ 0x14
  8054                           
  8055                           
  8056                           ; 2 bytes @ 0x14
  8057  0034                     	ds	1
  8058  0035                     ??_stricmp:	
  8059  0035                     ??_strchr:	
  8060                           ; 1 bytes @ 0x15
  8061                           
  8062  0035                     ??_i2c_setBuffer:	
  8063                           ; 1 bytes @ 0x15
  8064                           
  8065  0035                     ??___wmul:	
  8066                           ; 1 bytes @ 0x15
  8067                           
  8068  0035                     ??___awdiv:	
  8069                           ; 1 bytes @ 0x15
  8070                           
  8071  0035                     i2c_open@address:	
  8072                           ; 1 bytes @ 0x15
  8073                           
  8074  0035                     ___ftpack@sign:	
  8075                           ; 1 bytes @ 0x15
  8076                           
  8077  0035                     ___wmul@product:	
  8078                           ; 1 bytes @ 0x15
  8079                           
  8080  0035                     ___lldiv@dividend:	
  8081                           ; 2 bytes @ 0x15
  8082                           
  8083                           
  8084                           ; 4 bytes @ 0x15
  8085  0035                     	ds	1
  8086  0036                     ??_i2c_ISR:	
  8087  0036                     ??___ftpack:	
  8088                           ; 1 bytes @ 0x16
  8089                           
  8090  0036                     ??_send_last_2bytes_IK:	
  8091                           ; 1 bytes @ 0x16
  8092                           
  8093  0036                     ___awdiv@counter:	
  8094                           ; 1 bytes @ 0x16
  8095                           
  8096                           
  8097                           ; 1 bytes @ 0x16
  8098  0036                     	ds	1
  8099  0037                     ??_i2c_poller:	
  8100  0037                     ??_i2c_masterOperation:	
  8101                           ; 1 bytes @ 0x17
  8102                           
  8103  0037                     ?_atoi:	
  8104                           ; 1 bytes @ 0x17
  8105                           
  8106  0037                     ___awdiv@sign:	
  8107                           ; 2 bytes @ 0x17
  8108                           
  8109  0037                     stricmp@r:	
  8110                           ; 1 bytes @ 0x17
  8111                           
  8112  0037                     send_2bytes_latchless_IK@j:	
  8113                           ; 1 bytes @ 0x17
  8114                           
  8115                           
  8116                           ; 2 bytes @ 0x17
  8117  0037                     	ds	1
  8118  0038                     ?_strspn:	
  8119  0038                     ?_strcspn:	
  8120                           ; 2 bytes @ 0x18
  8121                           
  8122  0038                     i2c_masterOperation@read:	
  8123                           ; 2 bytes @ 0x18
  8124                           
  8125  0038                     stricmp@s1:	
  8126                           ; 1 bytes @ 0x18
  8127                           
  8128  0038                     ___awdiv@quotient:	
  8129                           ; 1 bytes @ 0x18
  8130                           
  8131  0038                     strcspn@s2:	
  8132                           ; 2 bytes @ 0x18
  8133                           
  8134  0038                     strspn@s2:	
  8135                           ; 2 bytes @ 0x18
  8136                           
  8137                           
  8138                           ; 2 bytes @ 0x18
  8139  0038                     	ds	1
  8140  0039                     ??_atoi:	
  8141  0039                     ??___lldiv:	
  8142                           ; 1 bytes @ 0x19
  8143                           
  8144  0039                     ?___awtoft:	
  8145                           ; 1 bytes @ 0x19
  8146                           
  8147  0039                     i2c_masterOperation@ret:	
  8148                           ; 3 bytes @ 0x19
  8149                           
  8150  0039                     ___awtoft@c:	
  8151                           ; 1 bytes @ 0x19
  8152                           
  8153                           
  8154                           ; 2 bytes @ 0x19
  8155  0039                     	ds	1
  8156  003A                     ??_strspn:	
  8157  003A                     ??_strcspn:	
  8158                           ; 1 bytes @ 0x1A
  8159                           
  8160  003A                     send_last_2bytes_IK@j:	
  8161                           ; 1 bytes @ 0x1A
  8162                           
  8163  003A                     ___lldiv@quotient:	
  8164                           ; 2 bytes @ 0x1A
  8165                           
  8166                           
  8167                           ; 4 bytes @ 0x1A
  8168  003A                     	ds	1
  8169  003B                     atoi@sign:	
  8170                           
  8171                           ; 1 bytes @ 0x1B
  8172  003B                     	ds	1
  8173  003C                     ?_send_2length_2bytes_IK:	
  8174  003C                     ??___awtoft:	
  8175                           ; 1 bytes @ 0x1C
  8176                           
  8177  003C                     send_2length_2bytes_IK@data1:	
  8178                           ; 1 bytes @ 0x1C
  8179                           
  8180  003C                     atoi@a:	
  8181                           ; 2 bytes @ 0x1C
  8182                           
  8183  003C                     strcspn@i:	
  8184                           ; 2 bytes @ 0x1C
  8185                           
  8186  003C                     strspn@i:	
  8187                           ; 2 bytes @ 0x1C
  8188                           
  8189                           
  8190                           ; 2 bytes @ 0x1C
  8191  003C                     	ds	2
  8192  003E                     atoi@s:	
  8193  003E                     ___awtoft@sign:	
  8194                           ; 1 bytes @ 0x1E
  8195                           
  8196  003E                     ___lldiv@counter:	
  8197                           ; 1 bytes @ 0x1E
  8198                           
  8199  003E                     strcspn@s1:	
  8200                           ; 1 bytes @ 0x1E
  8201                           
  8202  003E                     strspn@s1:	
  8203                           ; 1 bytes @ 0x1E
  8204                           
  8205  003E                     send_2length_2bytes_IK@data2:	
  8206                           ; 1 bytes @ 0x1E
  8207                           
  8208                           
  8209                           ; 2 bytes @ 0x1E
  8210  003E                     	ds	1
  8211  003F                     ?_strtok:	
  8212  003F                     ?___ftmul:	
  8213                           ; 1 bytes @ 0x1F
  8214                           
  8215  003F                     ?___llmod:	
  8216                           ; 3 bytes @ 0x1F
  8217                           
  8218  003F                     strtok@s2:	
  8219                           ; 4 bytes @ 0x1F
  8220                           
  8221  003F                     ___ftmul@f1:	
  8222                           ; 2 bytes @ 0x1F
  8223                           
  8224  003F                     ___llmod@divisor:	
  8225                           ; 3 bytes @ 0x1F
  8226                           
  8227                           
  8228                           ; 4 bytes @ 0x1F
  8229  003F                     	ds	1
  8230  0040                     send_2length_2bytes_IK@latch_start:	
  8231                           
  8232                           ; 1 bytes @ 0x20
  8233  0040                     	ds	1
  8234  0041                     ??_strtok:	
  8235  0041                     send_2length_2bytes_IK@topOrBottom:	
  8236                           ; 1 bytes @ 0x21
  8237                           
  8238                           
  8239                           ; 2 bytes @ 0x21
  8240  0041                     	ds	1
  8241  0042                     ___ftmul@f2:	
  8242                           
  8243                           ; 3 bytes @ 0x22
  8244  0042                     	ds	1
  8245  0043                     ??_send_2length_2bytes_IK:	
  8246  0043                     ___llmod@dividend:	
  8247                           ; 1 bytes @ 0x23
  8248                           
  8249                           
  8250                           ; 4 bytes @ 0x23
  8251  0043                     	ds	1
  8252  0044                     ?_LEDsOn:	
  8253  0044                     ?_LEDsPwr:	
  8254                           ; 1 bytes @ 0x24
  8255                           
  8256  0044                     ?_LED_setBrightnessRange:	
  8257                           ; 1 bytes @ 0x24
  8258                           
  8259  0044                     strtok@s1:	
  8260                           ; 1 bytes @ 0x24
  8261                           
  8262  0044                     LEDsPwr@pwr:	
  8263                           ; 1 bytes @ 0x24
  8264                           
  8265  0044                     LED_setBrightnessRange@range:	
  8266                           ; 2 bytes @ 0x24
  8267                           
  8268  0044                     LEDsOn@LEDpins:	
  8269                           ; 2 bytes @ 0x24
  8270                           
  8271                           
  8272                           ; 4 bytes @ 0x24
  8273  0044                     	ds	1
  8274  0045                     ?_parseCmd:	
  8275  0045                     ??___ftmul:	
  8276                           ; 1 bytes @ 0x25
  8277                           
  8278  0045                     parseCmd@s:	
  8279                           ; 1 bytes @ 0x25
  8280                           
  8281                           
  8282                           ; 1 bytes @ 0x25
  8283  0045                     	ds	1
  8284  0046                     ??_parseCmd:	
  8285  0046                     LEDsPwr@topOrBottom:	
  8286                           ; 1 bytes @ 0x26
  8287                           
  8288  0046                     LED_setBrightnessRange@topOrBottom:	
  8289                           ; 2 bytes @ 0x26
  8290                           
  8291                           
  8292                           ; 2 bytes @ 0x26
  8293  0046                     	ds	1
  8294  0047                     ??___llmod:	
  8295  0047                     parseCmd@cmdString:	
  8296                           ; 1 bytes @ 0x27
  8297                           
  8298                           
  8299                           ; 1 bytes @ 0x27
  8300  0047                     	ds	1
  8301  0048                     ??_LEDsPwr:	
  8302  0048                     ___llmod@counter:	
  8303                           ; 1 bytes @ 0x28
  8304                           
  8305  0048                     LEDsOn@topOrBottom:	
  8306                           ; 1 bytes @ 0x28
  8307                           
  8308  0048                     parseCmd@paramIter:	
  8309                           ; 2 bytes @ 0x28
  8310                           
  8311  0048                     LED_setBrightnessRange@LED_configReg:	
  8312                           ; 2 bytes @ 0x28
  8313                           
  8314                           
  8315                           ; 4 bytes @ 0x28
  8316  0048                     	ds	1
  8317  0049                     ?_drv_write:	
  8318  0049                     ??_drv_read:	
  8319                           ; 1 bytes @ 0x29
  8320                           
  8321  0049                     ??_LED_readConfig:	
  8322                           ; 1 bytes @ 0x29
  8323                           
  8324  0049                     ??_startRelMove:	
  8325                           ; 1 bytes @ 0x29
  8326                           
  8327  0049                     ??_startAbsMove:	
  8328                           ; 1 bytes @ 0x29
  8329                           
  8330  0049                     ??_getPosition:	
  8331                           ; 1 bytes @ 0x29
  8332                           
  8333  0049                     ??_setDrvPeak:	
  8334                           ; 1 bytes @ 0x29
  8335                           
  8336  0049                     ??_setMoveMask:	
  8337                           ; 1 bytes @ 0x29
  8338                           
  8339  0049                     ??_getActive:	
  8340                           ; 1 bytes @ 0x29
  8341                           
  8342  0049                     ??_getMoveMask:	
  8343                           ; 1 bytes @ 0x29
  8344                           
  8345  0049                     ??_getMotionStatus:	
  8346                           ; 1 bytes @ 0x29
  8347                           
  8348  0049                     ??___ftadd:	
  8349                           ; 1 bytes @ 0x29
  8350                           
  8351  0049                     drv_write@data:	
  8352                           ; 1 bytes @ 0x29
  8353                           
  8354  0049                     zeroPosition@i:	
  8355                           ; 1 bytes @ 0x29
  8356                           
  8357                           
  8358                           ; 2 bytes @ 0x29
  8359  0049                     	ds	1
  8360  004A                     ??_drv_write:	
  8361  004A                     ??_LEDsOn:	
  8362                           ; 1 bytes @ 0x2A
  8363                           
  8364  004A                     parseCmd@p:	
  8365                           ; 1 bytes @ 0x2A
  8366                           
  8367                           
  8368                           ; 1 bytes @ 0x2A
  8369  004A                     	ds	1
  8370  004B                     drv_write@reg:	
  8371  004B                     drv_read@reg:	
  8372                           ; 1 bytes @ 0x2B
  8373                           
  8374                           
  8375                           ; 1 bytes @ 0x2B
  8376  004B                     	ds	1
  8377  004C                     ??_LED_testComm:	
  8378  004C                     ??_setLEDBrightnessRange:	
  8379                           ; 1 bytes @ 0x2C
  8380                           
  8381  004C                     drv_read@buff:	
  8382                           ; 1 bytes @ 0x2C
  8383                           
  8384  004C                     drv_write@buff:	
  8385                           ; 1 bytes @ 0x2C
  8386                           
  8387                           
  8388                           ; 2 bytes @ 0x2C
  8389  004C                     	ds	1
  8390  004D                     ??_fifo_check:	
  8391  004D                     ??_setHeaterPostTime:	
  8392                           ; 1 bytes @ 0x2D
  8393                           
  8394                           
  8395                           ; 1 bytes @ 0x2D
  8396  004D                     	ds	1
  8397  004E                     ??_execCmd:	
  8398  004E                     ??_setLEDPwr:	
  8399                           ; 1 bytes @ 0x2E
  8400                           
  8401                           
  8402                           	psect	maintext
  8403  145B                     __pmaintext:	
  8404                           ; 1 bytes @ 0x2E
  8405 ;;
  8406 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8407 ;;
  8408 ;; *************** function _main *****************
  8409 ;; Defined at:
  8410 ;;		line 130 in file "main.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;		None
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  1    wreg      void 
  8417 ;; Registers used:
  8418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8419 ;; Tracked objects:
  8420 ;;		On entry : B1F/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8426 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8427 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8428 ;;Total ram usage:        1 bytes
  8429 ;; Hardware stack levels required when called:   17
  8430 ;; This function calls:
  8431 ;;		_EUSART_Read
  8432 ;;		_SYSTEM_Initialize
  8433 ;;		_doAbsMove
  8434 ;;		_doRelMove
  8435 ;;		_execCmd
  8436 ;;		_main_initialize
  8437 ;;		_parseCmd
  8438 ;;		_printf
  8439 ;; This function is called by:
  8440 ;;		Startup code after reset
  8441 ;; This function uses a non-reentrant model
  8442 ;;
  8443                           
  8444                           
  8445                           ;psect for function _main
  8446  145B                     _main:	
  8447                           
  8448                           ;main.c: 133: SYSTEM_Initialize();
  8449                           
  8450                           ;incstack = 0
  8451 ;; hardware stack exceeded
  8452                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8453  145B  3188  2000  3194   	fcall	_SYSTEM_Initialize
  8454                           
  8455                           ;main.c: 134: _delay((unsigned long)((500)*(1000000/4000.0)));
  8456  145E  30A3               	movlw	163
  8457  145F  0021               	movlb	1	; select bank1
  8458  1460  00D8               	movwf	??_main^(0+128)
  8459  1461  3055               	movlw	85
  8460  1462                     u8897:	
  8461  1462  0B89               	decfsz	9,f
  8462  1463  2C62               	goto	u8897
  8463  1464  0BD8               	decfsz	??_main^(0+128),f
  8464  1465  2C62               	goto	u8897
  8465                           
  8466                           ;main.c: 140: (INTCONbits.GIE = 1);
  8467  1466  178B               	bsf	11,7	;volatile
  8468                           
  8469                           ;main.c: 143: (INTCONbits.PEIE = 1);
  8470  1467  170B               	bsf	11,6	;volatile
  8471                           
  8472                           ;main.c: 144: printf("\n\nsystem done\n");
  8473  1468  305E               	movlw	low (STR_4| (0+32768))
  8474  1469  0021               	movlb	1	; select bank1
  8475  146A  00A0               	movwf	printf@f^(0+128)
  8476  146B  30A9               	movlw	high (STR_4| (0+32768))
  8477  146C  00A1               	movwf	(printf@f^(0+128)+1)
  8478  146D  318E  26CE  3194   	fcall	_printf
  8479                           
  8480                           ;main.c: 150: main_initialize();
  8481  1470  318B  2301  3194   	fcall	_main_initialize
  8482                           
  8483                           ;main.c: 173: }
  8484                           ;main.c: 176: switch(motionType){
  8485  1473  2C7B               	goto	l8578
  8486  1474                     l8598:	
  8487                           ;main.c: 177: case REL_MOVE: doRelMove(); break;
  8488                           
  8489  1474  318D  259D  3194   	fcall	_doRelMove
  8490  1477  2C7B               	goto	l8578
  8491  1478                     l8600:	
  8492                           ;main.c: 178: case ABS_MOVE: doAbsMove(); break;
  8493                           
  8494  1478  3180  20C0  3194   	fcall	_doAbsMove
  8495  147B                     l8578:	
  8496                           ;main.c: 152: while (1)
  8497                           
  8498                           ;main.c: 180: }
  8499                           
  8500                           ;main.c: 179: default: break;
  8501                           
  8502                           
  8503                           ;main.c: 153: {
  8504                           ;main.c: 155: if (eusartRxCount!=0) {
  8505  147B  0020               	movlb	0	; select bank0
  8506  147C  0856               	movf	_eusartRxCount,w	;volatile
  8507  147D  1903               	btfsc	3,2
  8508  147E  2CA7               	goto	l8590
  8509                           
  8510                           ;main.c: 156: readdata[readIdx] = EUSART_Read();
  8511  147F  31A5  257B  3194   	fcall	_EUSART_Read
  8512  1482  0021               	movlb	1	; select bank1
  8513  1483  00D8               	movwf	??_main^(0+128)
  8514  1484  0020               	movlb	0	; select bank0
  8515  1485  0852               	movf	_readIdx,w
  8516  1486  3EC5               	addlw	(low (_readdata| (0+256)))& (0+255)
  8517  1487  0086               	movwf	6
  8518  1488  3001               	movlw	1	; select bank3/4
  8519  1489  0087               	movwf	7
  8520  148A  0021               	movlb	1	; select bank1
  8521  148B  0858               	movf	??_main^(0+128),w
  8522  148C  0081               	movwf	1
  8523                           
  8524                           ;main.c: 157: if(readdata[readIdx] == '\n'){
  8525  148D  0020               	movlb	0	; select bank0
  8526  148E  0852               	movf	_readIdx,w
  8527  148F  3EC5               	addlw	(low (_readdata| (0+256)))& (0+255)
  8528  1490  0086               	movwf	6
  8529  1491  3001               	movlw	1	; select bank3/4
  8530  1492  0087               	movwf	7
  8531  1493  300A               	movlw	10
  8532  1494  0601               	xorwf	1,w
  8533  1495  1D03               	btfss	3,2
  8534  1496  2CA2               	goto	l8588
  8535                           
  8536                           ;main.c: 158: readdata[readIdx] = 0;
  8537  1497  0852               	movf	_readIdx,w
  8538  1498  3EC5               	addlw	(low (_readdata| (0+256)))& (0+255)
  8539  1499  0086               	movwf	6
  8540  149A  3001               	movlw	1	; select bank3/4
  8541  149B  0087               	movwf	7
  8542  149C  0181               	clrf	1
  8543                           
  8544                           ;main.c: 159: cmdRead = 1;
  8545  149D  3001               	movlw	1
  8546  149E  0022               	movlb	2	; select bank2
  8547  149F  00E4               	movwf	_cmdRead^(0+256)
  8548  14A0  3000               	movlw	0
  8549  14A1  00E5               	movwf	(_cmdRead^(0+256)+1)
  8550  14A2                     l8588:	
  8551                           
  8552                           ;main.c: 160: }
  8553                           ;main.c: 161: readIdx++;
  8554  14A2  3001               	movlw	1
  8555  14A3  0020               	movlb	0	; select bank0
  8556  14A4  07D2               	addwf	_readIdx,f
  8557  14A5  3000               	movlw	0
  8558  14A6  3DD3               	addwfc	_readIdx+1,f
  8559  14A7                     l8590:	
  8560                           
  8561                           ;main.c: 162: }
  8562                           ;main.c: 165: if(cmdRead){
  8563  14A7  0022               	movlb	2	; select bank2
  8564  14A8  0864               	movf	_cmdRead^(0+256),w
  8565  14A9  0465               	iorwf	(_cmdRead+1)^(0+256),w
  8566  14AA  1903               	btfsc	3,2
  8567  14AB  2CC0               	goto	l8604
  8568                           
  8569                           ;main.c: 167: parseCmd(readdata, &cmd_struct);
  8570  14AC  30B0               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8571  14AD  0021               	movlb	1	; select bank1
  8572  14AE  00D8               	movwf	??_main^(0+128)
  8573  14AF  0858               	movf	??_main^(0+128),w
  8574  14B0  0020               	movlb	0	; select bank0
  8575  14B1  00C5               	movwf	parseCmd@s
  8576  14B2  30C5               	movlw	(low (_readdata| (0+256)))& (0+255)
  8577  14B3  3185  252F  3194   	fcall	_parseCmd
  8578                           
  8579                           ;main.c: 169: cmdRead = 0;
  8580  14B6  0022               	movlb	2	; select bank2
  8581  14B7  01E4               	clrf	_cmdRead^(0+256)
  8582  14B8  01E5               	clrf	(_cmdRead+1)^(0+256)
  8583                           
  8584                           ;main.c: 170: readIdx=0;
  8585  14B9  0020               	movlb	0	; select bank0
  8586  14BA  01D2               	clrf	_readIdx
  8587  14BB  01D3               	clrf	_readIdx+1
  8588                           
  8589                           ;main.c: 171: execCmd(&cmd_struct);
  8590  14BC  30B0               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8591  14BD  3183  2370  3194   	fcall	_execCmd
  8592  14C0                     l8604:	
  8593  14C0  0020               	movlb	0	; select bank0
  8594  14C1  0855               	movf	_motionType,w
  8595                           
  8596                           ; Switch size 1, requested type "space"
  8597                           ; Number of cases is 2, Range of values is 1 to 2
  8598                           ; switch strategies available:
  8599                           ; Name         Instructions Cycles
  8600                           ; simple_byte            7     4 (average)
  8601                           ; direct_byte           13     9 (fixed)
  8602                           ; jumptable            263     9 (fixed)
  8603                           ;	Chosen strategy is simple_byte
  8604  14C2  3A01               	xorlw	1	; case 1
  8605  14C3  1903               	skipnz
  8606  14C4  2C74               	goto	l8598
  8607  14C5  3A03               	xorlw	3	; case 2
  8608  14C6  1903               	skipnz
  8609  14C7  2C78               	goto	l8600
  8610  14C8  2C7B               	goto	l8578
  8611  14C9  2C7B               	goto	l8578
  8612  14CA                     __end_of_main:	
  8613                           
  8614                           	psect	text1
  8615  052F                     __ptext1:	
  8616 ;; *************** function _parseCmd *****************
  8617 ;; Defined at:
  8618 ;;		line 5 in file "cmd_parser.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;  cmdString       1    wreg     PTR unsigned char 
  8621 ;;		 -> readdata(20), 
  8622 ;;  s               1   37[BANK0 ] PTR struct CMD_STRUCT
  8623 ;;		 -> cmd_struct(21), 
  8624 ;; Auto vars:     Size  Location     Type
  8625 ;;  cmdString       1   39[BANK0 ] PTR unsigned char 
  8626 ;;		 -> readdata(20), 
  8627 ;;  p               1   42[BANK0 ] PTR unsigned char 
  8628 ;;		 -> readdata(20), NULL(0), 
  8629 ;;  paramIter       2   40[BANK0 ] int 
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1    wreg      void 
  8632 ;; Registers used:
  8633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8639 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8640 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8641 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8642 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8643 ;;Total ram usage:        6 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:    9
  8646 ;; This function calls:
  8647 ;;		_atoi
  8648 ;;		_stricmp
  8649 ;;		_strtok
  8650 ;; This function is called by:
  8651 ;;		_main
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           
  8656                           ;psect for function _parseCmd
  8657  052F                     _parseCmd:	
  8658                           
  8659                           ;incstack = 0
  8660                           ; Regs used in _parseCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8661                           ;parseCmd@cmdString stored from wreg
  8662  052F  0020               	movlb	0	; select bank0
  8663  0530  00C7               	movwf	parseCmd@cmdString
  8664                           
  8665                           ;cmd_parser.c: 6: int paramIter = 0;
  8666  0531  01C8               	clrf	parseCmd@paramIter
  8667  0532  01C9               	clrf	parseCmd@paramIter+1
  8668                           
  8669                           ;cmd_parser.c: 7: for (char *p = strtok(cmdString," "); p != (0); p = strtok((0), " ")){
  8670  0533  3011               	movlw	low ((STR_40+6)| (0+32768))
  8671  0534  00BF               	movwf	strtok@s2
  8672  0535  30AA               	movlw	high ((STR_40+6)| (0+32768))
  8673  0536  00C0               	movwf	strtok@s2+1
  8674  0537  0847               	movf	parseCmd@cmdString,w
  8675  0538                     L21:	
  8676  0538  319A  22B1  3185   	fcall	_strtok
  8677  053B  0020               	movlb	0	; select bank0
  8678  053C  00C6               	movwf	??_parseCmd
  8679  053D  0846               	movf	??_parseCmd,w
  8680  053E  00CA               	movwf	parseCmd@p
  8681  053F  084A               	movf	parseCmd@p,w
  8682  0540  1903               	btfsc	3,2
  8683  0541  0008               	return
  8684                           
  8685                           ;cmd_parser.c: 9: if (paramIter == 0){
  8686  0542  0848               	movf	parseCmd@paramIter,w
  8687  0543  0449               	iorwf	parseCmd@paramIter+1,w
  8688  0544  1D03               	btfss	3,2
  8689  0545  2EA2               	goto	l6624
  8690                           
  8691                           ;cmd_parser.c: 10: if(stricmp(p, "rel") == 0)
  8692  0546  303F               	movlw	low (STR_58| (0+32768))
  8693  0547  00B3               	movwf	stricmp@s2
  8694  0548  30AA               	movlw	high (STR_58| (0+32768))
  8695  0549  00B4               	movwf	stricmp@s2+1
  8696  054A  084A               	movf	parseCmd@p,w
  8697  054B  3198  206E  3185   	fcall	_stricmp
  8698  054E  0020               	movlb	0	; select bank0
  8699  054F  0833               	movf	?_stricmp,w
  8700  0550  0434               	iorwf	?_stricmp+1,w
  8701  0551  1D03               	btfss	3,2
  8702  0552  2D55               	goto	l6538
  8703                           
  8704                           ;cmd_parser.c: 11: s->c = CMD_REL;
  8705  0553  3002               	movlw	2
  8706  0554  2E94               	goto	L20
  8707  0555                     l6538:	
  8708                           
  8709                           ;cmd_parser.c: 12: else if(stricmp(p, "abs") == 0)
  8710  0555  3043               	movlw	low (STR_59| (0+32768))
  8711  0556  00B3               	movwf	stricmp@s2
  8712  0557  30AA               	movlw	high (STR_59| (0+32768))
  8713  0558  00B4               	movwf	stricmp@s2+1
  8714  0559  084A               	movf	parseCmd@p,w
  8715  055A  3198  206E  3185   	fcall	_stricmp
  8716  055D  0020               	movlb	0	; select bank0
  8717  055E  0833               	movf	?_stricmp,w
  8718  055F  0434               	iorwf	?_stricmp+1,w
  8719  0560  1D03               	btfss	3,2
  8720  0561  2D69               	goto	l6542
  8721                           
  8722                           ;cmd_parser.c: 13: s->c = CMD_ABS;
  8723  0562  0845               	movf	parseCmd@s,w
  8724  0563  0086               	movwf	6
  8725  0564  3001               	movlw	1	; select bank2/3
  8726  0565  0087               	movwf	7
  8727  0566  0181               	clrf	1
  8728  0567  0A81               	incf	1,f
  8729  0568  2EC7               	goto	l6632
  8730  0569                     l6542:	
  8731                           
  8732                           ;cmd_parser.c: 14: else if(stricmp(p, "pos") == 0)
  8733  0569  3047               	movlw	low (STR_60| (0+32768))
  8734  056A  00B3               	movwf	stricmp@s2
  8735  056B  30AA               	movlw	high (STR_60| (0+32768))
  8736  056C  00B4               	movwf	stricmp@s2+1
  8737  056D  084A               	movf	parseCmd@p,w
  8738  056E  3198  206E  3185   	fcall	_stricmp
  8739  0571  0020               	movlb	0	; select bank0
  8740  0572  0833               	movf	?_stricmp,w
  8741  0573  0434               	iorwf	?_stricmp+1,w
  8742  0574  1D03               	btfss	3,2
  8743  0575  2D78               	goto	l6546
  8744                           
  8745                           ;cmd_parser.c: 15: s->c = CMD_P;
  8746  0576  3003               	movlw	3
  8747  0577  2E94               	goto	L20
  8748  0578                     l6546:	
  8749                           
  8750                           ;cmd_parser.c: 16: else if(stricmp(p,"s") == 0)
  8751  0578  3045               	movlw	low ((STR_59+2)| (0+32768))
  8752  0579  00B3               	movwf	stricmp@s2
  8753  057A  30AA               	movlw	high ((STR_59+2)| (0+32768))
  8754  057B  00B4               	movwf	stricmp@s2+1
  8755  057C  084A               	movf	parseCmd@p,w
  8756  057D  3198  206E  3185   	fcall	_stricmp
  8757  0580  0020               	movlb	0	; select bank0
  8758  0581  0833               	movf	?_stricmp,w
  8759  0582  0434               	iorwf	?_stricmp+1,w
  8760  0583  1D03               	btfss	3,2
  8761  0584  2D87               	goto	l6550
  8762                           
  8763                           ;cmd_parser.c: 17: s->c = CMD_S;
  8764  0585  3004               	movlw	4
  8765  0586  2E94               	goto	L20
  8766  0587                     l6550:	
  8767                           
  8768                           ;cmd_parser.c: 18: else if(stricmp(p,"setA") == 0)
  8769  0587  3026               	movlw	low (STR_62| (0+32768))
  8770  0588  00B3               	movwf	stricmp@s2
  8771  0589  30AA               	movlw	high (STR_62| (0+32768))
  8772  058A  00B4               	movwf	stricmp@s2+1
  8773  058B  084A               	movf	parseCmd@p,w
  8774  058C  3198  206E  3185   	fcall	_stricmp
  8775  058F  0020               	movlb	0	; select bank0
  8776  0590  0833               	movf	?_stricmp,w
  8777  0591  0434               	iorwf	?_stricmp+1,w
  8778  0592  1D03               	btfss	3,2
  8779  0593  2D96               	goto	l6554
  8780                           
  8781                           ;cmd_parser.c: 19: s->c = CMD_SETA;
  8782  0594  3005               	movlw	5
  8783  0595  2E94               	goto	L20
  8784  0596                     l6554:	
  8785                           
  8786                           ;cmd_parser.c: 20: else if(stricmp(p,"setM") == 0)
  8787  0596  3030               	movlw	low (STR_63| (0+32768))
  8788  0597  00B3               	movwf	stricmp@s2
  8789  0598  30AA               	movlw	high (STR_63| (0+32768))
  8790  0599  00B4               	movwf	stricmp@s2+1
  8791  059A  084A               	movf	parseCmd@p,w
  8792  059B  3198  206E  3185   	fcall	_stricmp
  8793  059E  0020               	movlb	0	; select bank0
  8794  059F  0833               	movf	?_stricmp,w
  8795  05A0  0434               	iorwf	?_stricmp+1,w
  8796  05A1  1D03               	btfss	3,2
  8797  05A2  2DA5               	goto	l6558
  8798                           
  8799                           ;cmd_parser.c: 21: s->c = CMD_SETM;
  8800  05A3  3006               	movlw	6
  8801  05A4  2E94               	goto	L20
  8802  05A5                     l6558:	
  8803                           
  8804                           ;cmd_parser.c: 22: else if(stricmp(p,"z") == 0)
  8805  05A5  3061               	movlw	low (STR_64| (0+32768))
  8806  05A6  00B3               	movwf	stricmp@s2
  8807  05A7  30AA               	movlw	high (STR_64| (0+32768))
  8808  05A8  00B4               	movwf	stricmp@s2+1
  8809  05A9  084A               	movf	parseCmd@p,w
  8810  05AA  3198  206E  3185   	fcall	_stricmp
  8811  05AD  0020               	movlb	0	; select bank0
  8812  05AE  0833               	movf	?_stricmp,w
  8813  05AF  0434               	iorwf	?_stricmp+1,w
  8814  05B0  1D03               	btfss	3,2
  8815  05B1  2DB4               	goto	l6562
  8816                           
  8817                           ;cmd_parser.c: 23: s->c = CMD_ZERO;
  8818  05B2  3007               	movlw	7
  8819  05B3  2E94               	goto	L20
  8820  05B4                     l6562:	
  8821                           
  8822                           ;cmd_parser.c: 24: else if(stricmp(p,"drvPeak") == 0)
  8823  05B4  30D3               	movlw	low (STR_65| (0+32768))
  8824  05B5  00B3               	movwf	stricmp@s2
  8825  05B6  30A9               	movlw	high (STR_65| (0+32768))
  8826  05B7  00B4               	movwf	stricmp@s2+1
  8827  05B8  084A               	movf	parseCmd@p,w
  8828  05B9  3198  206E  3185   	fcall	_stricmp
  8829  05BC  0020               	movlb	0	; select bank0
  8830  05BD  0833               	movf	?_stricmp,w
  8831  05BE  0434               	iorwf	?_stricmp+1,w
  8832  05BF  1D03               	btfss	3,2
  8833  05C0  2DC3               	goto	l6566
  8834                           
  8835                           ;cmd_parser.c: 25: s->c = CMD_DRV_PEAK;
  8836  05C1  3008               	movlw	8
  8837  05C2  2E94               	goto	L20
  8838  05C3                     l6566:	
  8839                           
  8840                           ;cmd_parser.c: 26: else if(stricmp(p,"drvGain") == 0)
  8841  05C3  30DB               	movlw	low (STR_66| (0+32768))
  8842  05C4  00B3               	movwf	stricmp@s2
  8843  05C5  30A9               	movlw	high (STR_66| (0+32768))
  8844  05C6  00B4               	movwf	stricmp@s2+1
  8845  05C7  084A               	movf	parseCmd@p,w
  8846  05C8  3198  206E  3185   	fcall	_stricmp
  8847  05CB  0020               	movlb	0	; select bank0
  8848  05CC  0833               	movf	?_stricmp,w
  8849  05CD  0434               	iorwf	?_stricmp+1,w
  8850  05CE  1D03               	btfss	3,2
  8851  05CF  2DD2               	goto	l6570
  8852                           
  8853                           ;cmd_parser.c: 27: s->c = CMD_DRV_GAIN;
  8854  05D0  3009               	movlw	9
  8855  05D1  2E94               	goto	L20
  8856  05D2                     l6570:	
  8857                           
  8858                           ;cmd_parser.c: 28: else if(stricmp(p,"piezoontime") == 0)
  8859  05D2  3094               	movlw	low (STR_67| (0+32768))
  8860  05D3  00B3               	movwf	stricmp@s2
  8861  05D4  30A9               	movlw	high (STR_67| (0+32768))
  8862  05D5  00B4               	movwf	stricmp@s2+1
  8863  05D6  084A               	movf	parseCmd@p,w
  8864  05D7  3198  206E  3185   	fcall	_stricmp
  8865  05DA  0020               	movlb	0	; select bank0
  8866  05DB  0833               	movf	?_stricmp,w
  8867  05DC  0434               	iorwf	?_stricmp+1,w
  8868  05DD  1D03               	btfss	3,2
  8869  05DE  2DE1               	goto	l6574
  8870                           
  8871                           ;cmd_parser.c: 29: s->c = CMD_DRV_PIEZOONTIME;
  8872  05DF  300A               	movlw	10
  8873  05E0  2E94               	goto	L20
  8874  05E1                     l6574:	
  8875                           
  8876                           ;cmd_parser.c: 30: else if(stricmp(p,"heaterpretime") == 0)
  8877  05E1  306D               	movlw	low (STR_68| (0+32768))
  8878  05E2  00B3               	movwf	stricmp@s2
  8879  05E3  30A9               	movlw	high (STR_68| (0+32768))
  8880  05E4  00B4               	movwf	stricmp@s2+1
  8881  05E5  084A               	movf	parseCmd@p,w
  8882  05E6  3198  206E  3185   	fcall	_stricmp
  8883  05E9  0020               	movlb	0	; select bank0
  8884  05EA  0833               	movf	?_stricmp,w
  8885  05EB  0434               	iorwf	?_stricmp+1,w
  8886  05EC  1D03               	btfss	3,2
  8887  05ED  2DF0               	goto	l6578
  8888                           
  8889                           ;cmd_parser.c: 31: s->c = CMD_HEATER_PRETIME;
  8890  05EE  300B               	movlw	11
  8891  05EF  2E94               	goto	L20
  8892  05F0                     l6578:	
  8893                           
  8894                           ;cmd_parser.c: 32: else if(stricmp(p,"heaterposttime") == 0)
  8895  05F0  304F               	movlw	low (STR_69| (0+32768))
  8896  05F1  00B3               	movwf	stricmp@s2
  8897  05F2  30A9               	movlw	high (STR_69| (0+32768))
  8898  05F3  00B4               	movwf	stricmp@s2+1
  8899  05F4  084A               	movf	parseCmd@p,w
  8900  05F5  3198  206E  3185   	fcall	_stricmp
  8901  05F8  0020               	movlb	0	; select bank0
  8902  05F9  0833               	movf	?_stricmp,w
  8903  05FA  0434               	iorwf	?_stricmp+1,w
  8904  05FB  1D03               	btfss	3,2
  8905  05FC  2DFF               	goto	l6582
  8906                           
  8907                           ;cmd_parser.c: 33: s->c = CMD_HEATER_POSTTIME;
  8908  05FD  300C               	movlw	12
  8909  05FE  2E94               	goto	L20
  8910  05FF                     l6582:	
  8911                           
  8912                           ;cmd_parser.c: 34: else if(stricmp(p,"ledgain") == 0)
  8913  05FF  30E3               	movlw	low (STR_70| (0+32768))
  8914  0600  00B3               	movwf	stricmp@s2
  8915  0601  30A9               	movlw	high (STR_70| (0+32768))
  8916  0602  00B4               	movwf	stricmp@s2+1
  8917  0603  084A               	movf	parseCmd@p,w
  8918  0604  3198  206E  3185   	fcall	_stricmp
  8919  0607  0020               	movlb	0	; select bank0
  8920  0608  0833               	movf	?_stricmp,w
  8921  0609  0434               	iorwf	?_stricmp+1,w
  8922  060A  1D03               	btfss	3,2
  8923  060B  2E0E               	goto	l6586
  8924                           
  8925                           ;cmd_parser.c: 35: s->c = CMD_HEATER_GAIN;
  8926  060C  300D               	movlw	13
  8927  060D  2E94               	goto	L20
  8928  060E                     l6586:	
  8929                           
  8930                           ;cmd_parser.c: 36: else if(stricmp(p,"ledpwr") == 0)
  8931  060E  301A               	movlw	low (STR_71| (0+32768))
  8932  060F  00B3               	movwf	stricmp@s2
  8933  0610  30AA               	movlw	high (STR_71| (0+32768))
  8934  0611  00B4               	movwf	stricmp@s2+1
  8935  0612  084A               	movf	parseCmd@p,w
  8936  0613  3198  206E  3185   	fcall	_stricmp
  8937  0616  0020               	movlb	0	; select bank0
  8938  0617  0833               	movf	?_stricmp,w
  8939  0618  0434               	iorwf	?_stricmp+1,w
  8940  0619  1D03               	btfss	3,2
  8941  061A  2E1D               	goto	l6590
  8942                           
  8943                           ;cmd_parser.c: 37: s->c = CMD_HEATER_PWR;
  8944  061B  300E               	movlw	14
  8945  061C  2E94               	goto	L20
  8946  061D                     l6590:	
  8947                           
  8948                           ;cmd_parser.c: 38: else if(stricmp(p,"toggleheater") == 0)
  8949  061D  307B               	movlw	low (STR_72| (0+32768))
  8950  061E  00B3               	movwf	stricmp@s2
  8951  061F  30A9               	movlw	high (STR_72| (0+32768))
  8952  0620  00B4               	movwf	stricmp@s2+1
  8953  0621  084A               	movf	parseCmd@p,w
  8954  0622  3198  206E  3185   	fcall	_stricmp
  8955  0625  0020               	movlb	0	; select bank0
  8956  0626  0833               	movf	?_stricmp,w
  8957  0627  0434               	iorwf	?_stricmp+1,w
  8958  0628  1D03               	btfss	3,2
  8959  0629  2E2C               	goto	l6594
  8960                           
  8961                           ;cmd_parser.c: 39: s->c = CMD_HEATER_TOGGLE;
  8962  062A  300F               	movlw	15
  8963  062B  2E94               	goto	L20
  8964  062C                     l6594:	
  8965                           
  8966                           ;cmd_parser.c: 40: else if(stricmp(p,"timeheater") == 0)
  8967  062C  30A0               	movlw	low (STR_73| (0+32768))
  8968  062D  00B3               	movwf	stricmp@s2
  8969  062E  30A9               	movlw	high (STR_73| (0+32768))
  8970  062F  00B4               	movwf	stricmp@s2+1
  8971  0630  084A               	movf	parseCmd@p,w
  8972  0631  3198  206E  3185   	fcall	_stricmp
  8973  0634  0020               	movlb	0	; select bank0
  8974  0635  0833               	movf	?_stricmp,w
  8975  0636  0434               	iorwf	?_stricmp+1,w
  8976  0637  1D03               	btfss	3,2
  8977  0638  2E3B               	goto	l6598
  8978                           
  8979                           ;cmd_parser.c: 41: s->c = CMD_HEATER_TIMED;
  8980  0639  3010               	movlw	16
  8981  063A  2E94               	goto	L20
  8982  063B                     l6598:	
  8983                           
  8984                           ;cmd_parser.c: 42: else if(stricmp(p,"getA") == 0)
  8985  063B  3021               	movlw	low (STR_74| (0+32768))
  8986  063C  00B3               	movwf	stricmp@s2
  8987  063D  30AA               	movlw	high (STR_74| (0+32768))
  8988  063E  00B4               	movwf	stricmp@s2+1
  8989  063F  084A               	movf	parseCmd@p,w
  8990  0640  3198  206E  3185   	fcall	_stricmp
  8991  0643  0020               	movlb	0	; select bank0
  8992  0644  0833               	movf	?_stricmp,w
  8993  0645  0434               	iorwf	?_stricmp+1,w
  8994  0646  1D03               	btfss	3,2
  8995  0647  2E4A               	goto	l6602
  8996                           
  8997                           ;cmd_parser.c: 43: s->c = CMD_GET_ACTIVE;
  8998  0648  3011               	movlw	17
  8999  0649  2E94               	goto	L20
  9000  064A                     l6602:	
  9001                           
  9002                           ;cmd_parser.c: 44: else if(stricmp(p,"getM") == 0)
  9003  064A  302B               	movlw	low (STR_75| (0+32768))
  9004  064B  00B3               	movwf	stricmp@s2
  9005  064C  30AA               	movlw	high (STR_75| (0+32768))
  9006  064D  00B4               	movwf	stricmp@s2+1
  9007  064E  084A               	movf	parseCmd@p,w
  9008  064F  3198  206E  3185   	fcall	_stricmp
  9009  0652  0020               	movlb	0	; select bank0
  9010  0653  0833               	movf	?_stricmp,w
  9011  0654  0434               	iorwf	?_stricmp+1,w
  9012  0655  1D03               	btfss	3,2
  9013  0656  2E59               	goto	l6606
  9014                           
  9015                           ;cmd_parser.c: 45: s->c = CMD_GET_MOVABLE;
  9016  0657  3012               	movlw	18
  9017  0658  2E94               	goto	L20
  9018  0659                     l6606:	
  9019                           
  9020                           ;cmd_parser.c: 46: else if(stricmp(p,"mstatus") == 0)
  9021  0659  30EB               	movlw	low (STR_76| (0+32768))
  9022  065A  00B3               	movwf	stricmp@s2
  9023  065B  30A9               	movlw	high (STR_76| (0+32768))
  9024  065C  00B4               	movwf	stricmp@s2+1
  9025  065D  084A               	movf	parseCmd@p,w
  9026  065E  3198  206E  3185   	fcall	_stricmp
  9027  0661  0020               	movlb	0	; select bank0
  9028  0662  0833               	movf	?_stricmp,w
  9029  0663  0434               	iorwf	?_stricmp+1,w
  9030  0664  1D03               	btfss	3,2
  9031  0665  2E68               	goto	l6610
  9032                           
  9033                           ;cmd_parser.c: 47: s->c = CMD_MOTION_STATUS;
  9034  0666  3013               	movlw	19
  9035  0667  2E94               	goto	L20
  9036  0668                     l6610:	
  9037                           
  9038                           ;cmd_parser.c: 48: else if(stricmp(p,"domove") == 0)
  9039  0668  3013               	movlw	low (STR_77| (0+32768))
  9040  0669  00B3               	movwf	stricmp@s2
  9041  066A  30AA               	movlw	high (STR_77| (0+32768))
  9042  066B  00B4               	movwf	stricmp@s2+1
  9043  066C  084A               	movf	parseCmd@p,w
  9044  066D  3198  206E  3185   	fcall	_stricmp
  9045  0670  0020               	movlb	0	; select bank0
  9046  0671  0833               	movf	?_stricmp,w
  9047  0672  0434               	iorwf	?_stricmp+1,w
  9048  0673  1D03               	btfss	3,2
  9049  0674  2E77               	goto	l6614
  9050                           
  9051                           ;cmd_parser.c: 49: s->c = CMD_DOMOVE;
  9052  0675  3014               	movlw	20
  9053  0676  2E94               	goto	L20
  9054  0677                     l6614:	
  9055                           
  9056                           ;cmd_parser.c: 50: else if(stricmp(p,"comm") == 0)
  9057  0677  303A               	movlw	low (STR_78| (0+32768))
  9058  0678  00B3               	movwf	stricmp@s2
  9059  0679  30AA               	movlw	high (STR_78| (0+32768))
  9060  067A  00B4               	movwf	stricmp@s2+1
  9061  067B  084A               	movf	parseCmd@p,w
  9062  067C  3198  206E  3185   	fcall	_stricmp
  9063  067F  0020               	movlb	0	; select bank0
  9064  0680  0833               	movf	?_stricmp,w
  9065  0681  0434               	iorwf	?_stricmp+1,w
  9066  0682  1D03               	btfss	3,2
  9067  0683  2E86               	goto	l6618
  9068                           
  9069                           ;cmd_parser.c: 51: s->c = CMD_COMM_CHECK;
  9070  0684  3015               	movlw	21
  9071  0685  2E94               	goto	L20
  9072  0686                     l6618:	
  9073                           
  9074                           ;cmd_parser.c: 52: else if(stricmp(p,"ping") == 0)
  9075  0686  3035               	movlw	low (STR_79| (0+32768))
  9076  0687  00B3               	movwf	stricmp@s2
  9077  0688  30AA               	movlw	high (STR_79| (0+32768))
  9078  0689  00B4               	movwf	stricmp@s2+1
  9079  068A  084A               	movf	parseCmd@p,w
  9080  068B  3198  206E  3185   	fcall	_stricmp
  9081  068E  0020               	movlb	0	; select bank0
  9082  068F  0833               	movf	?_stricmp,w
  9083  0690  0434               	iorwf	?_stricmp+1,w
  9084  0691  1D03               	btfss	3,2
  9085  0692  2E9C               	goto	l6622
  9086                           
  9087                           ;cmd_parser.c: 53: s->c = CMD_PING;
  9088  0693  3016               	movlw	22
  9089  0694                     L20:	
  9090  0694  00C6               	movwf	??_parseCmd
  9091  0695  0845               	movf	parseCmd@s,w
  9092  0696  0086               	movwf	6
  9093  0697  3001               	movlw	1	; select bank2/3
  9094  0698  0087               	movwf	7
  9095  0699  0846               	movf	??_parseCmd,w
  9096  069A  0081               	movwf	1
  9097  069B  2EC7               	goto	l6632
  9098  069C                     l6622:	
  9099                           
  9100                           ;cmd_parser.c: 56: else
  9101                           ;cmd_parser.c: 57: s->c = CMD_NONE;
  9102  069C  0845               	movf	parseCmd@s,w
  9103  069D  0086               	movwf	6
  9104  069E  3001               	movlw	1	; select bank2/3
  9105  069F  0087               	movwf	7
  9106  06A0  0181               	clrf	1
  9107                           
  9108                           ;cmd_parser.c: 58: }
  9109  06A1  2EC7               	goto	l6632
  9110  06A2                     l6624:	
  9111                           
  9112                           ;cmd_parser.c: 59: else if(paramIter == 1){
  9113  06A2  0348               	decf	parseCmd@paramIter,w
  9114  06A3  0449               	iorwf	parseCmd@paramIter+1,w
  9115  06A4  1D03               	btfss	3,2
  9116  06A5  2EB4               	goto	l6628
  9117                           
  9118                           ;cmd_parser.c: 60: s->p1.paramI = atoi(p);
  9119  06A6  084A               	movf	parseCmd@p,w
  9120  06A7  3194  24CA  3185   	fcall	_atoi
  9121  06AA  0020               	movlb	0	; select bank0
  9122  06AB  0A45               	incf	parseCmd@s,w
  9123  06AC  0086               	movwf	6
  9124  06AD  3001               	movlw	1	; select bank2/3
  9125  06AE  0087               	movwf	7
  9126  06AF  0837               	movf	?_atoi,w
  9127  06B0  3FC0               	movwi [0]fsr1
  9128  06B1  0838               	movf	?_atoi+1,w
  9129  06B2  3FC1               	movwi [1]fsr1
  9130                           
  9131                           ;cmd_parser.c: 61: }
  9132  06B3  2EC7               	goto	l6632
  9133  06B4                     l6628:	
  9134                           
  9135                           ;cmd_parser.c: 62: else if(paramIter == 2){
  9136  06B4  3002               	movlw	2
  9137  06B5  0648               	xorwf	parseCmd@paramIter,w
  9138  06B6  0449               	iorwf	parseCmd@paramIter+1,w
  9139  06B7  1D03               	btfss	3,2
  9140  06B8  2EC7               	goto	l6632
  9141                           
  9142                           ;cmd_parser.c: 64: s->p2.paramI = atoi(p);
  9143  06B9  084A               	movf	parseCmd@p,w
  9144  06BA  3194  24CA  3185   	fcall	_atoi
  9145  06BD  0020               	movlb	0	; select bank0
  9146  06BE  0845               	movf	parseCmd@s,w
  9147  06BF  3E0B               	addlw	11
  9148  06C0  0086               	movwf	6
  9149  06C1  3001               	movlw	1	; select bank2/3
  9150  06C2  0087               	movwf	7
  9151  06C3  0837               	movf	?_atoi,w
  9152  06C4  3FC0               	movwi [0]fsr1
  9153  06C5  0838               	movf	?_atoi+1,w
  9154  06C6  3FC1               	movwi [1]fsr1
  9155  06C7                     l6632:	
  9156                           
  9157                           ;cmd_parser.c: 65: }
  9158                           ;cmd_parser.c: 67: paramIter++;
  9159  06C7  3001               	movlw	1
  9160  06C8  07C8               	addwf	parseCmd@paramIter,f
  9161  06C9  3000               	movlw	0
  9162  06CA  3DC9               	addwfc	parseCmd@paramIter+1,f
  9163  06CB  3011               	movlw	low ((STR_40+6)| (0+32768))
  9164  06CC  00BF               	movwf	strtok@s2
  9165  06CD  30AA               	movlw	high ((STR_40+6)| (0+32768))
  9166  06CE  00C0               	movwf	strtok@s2+1
  9167  06CF  3000               	movlw	0
  9168  06D0  2D38               	goto	L21
  9169  06D1                     __end_of_parseCmd:	
  9170                           
  9171                           	psect	text2
  9172  1AB1                     __ptext2:	
  9173 ;; *************** function _strtok *****************
  9174 ;; Defined at:
  9175 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtok.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;  s1              1    wreg     PTR unsigned char 
  9178 ;;		 -> readdata(20), NULL(0), 
  9179 ;;  s2              2   31[BANK0 ] PTR const unsigned char 
  9180 ;;		 -> STR_57(2), STR_56(2), 
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;  s1              1   36[BANK0 ] PTR unsigned char 
  9183 ;;		 -> readdata(20), NULL(0), 
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  1    wreg      PTR unsigned char 
  9186 ;; Registers used:
  9187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9193 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9195 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9196 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9197 ;;Total ram usage:        6 bytes
  9198 ;; Hardware stack levels used:    1
  9199 ;; Hardware stack levels required when called:    8
  9200 ;; This function calls:
  9201 ;;		_strcspn
  9202 ;;		_strspn
  9203 ;; This function is called by:
  9204 ;;		_parseCmd
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           
  9209                           ;psect for function _strtok
  9210  1AB1                     _strtok:	
  9211                           
  9212                           ;incstack = 0
  9213                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9214                           ;strtok@s1 stored from wreg
  9215  1AB1  0020               	movlb	0	; select bank0
  9216  1AB2  00C4               	movwf	strtok@s1
  9217  1AB3  0844               	movf	strtok@s1,w
  9218  1AB4  1D03               	btfss	3,2
  9219  1AB5  2ABA               	goto	l6216
  9220  1AB6  0854               	movf	strtok@sp,w
  9221  1AB7  00C1               	movwf	??_strtok
  9222  1AB8  0841               	movf	??_strtok,w
  9223  1AB9  00C4               	movwf	strtok@s1
  9224  1ABA                     l6216:	
  9225  1ABA  0844               	movf	strtok@s1,w
  9226  1ABB  1D03               	btfss	3,2
  9227  1ABC  2ABF               	goto	l6222
  9228  1ABD  3000               	movlw	0
  9229  1ABE  0008               	return
  9230  1ABF                     l6222:	
  9231  1ABF  0840               	movf	strtok@s2+1,w
  9232  1AC0  00B9               	movwf	strspn@s2+1
  9233  1AC1  083F               	movf	strtok@s2,w
  9234  1AC2  00B8               	movwf	strspn@s2
  9235  1AC3  0844               	movf	strtok@s1,w
  9236  1AC4  3198  200B  319A   	fcall	_strspn
  9237  1AC7  0020               	movlb	0	; select bank0
  9238  1AC8  0838               	movf	?_strspn,w
  9239  1AC9  00C1               	movwf	??_strtok
  9240  1ACA  0841               	movf	??_strtok,w
  9241  1ACB  07C4               	addwf	strtok@s1,f
  9242  1ACC  0844               	movf	strtok@s1,w
  9243  1ACD  0086               	movwf	6
  9244  1ACE  3001               	movlw	1	; select bank2/3
  9245  1ACF  0087               	movwf	7
  9246  1AD0  0801               	movf	1,w
  9247  1AD1  1D03               	btfss	3,2
  9248  1AD2  2AD6               	goto	l6230
  9249  1AD3  01D4               	clrf	strtok@sp
  9250  1AD4  3000               	movlw	0
  9251  1AD5  0008               	return
  9252  1AD6                     l6230:	
  9253  1AD6  0840               	movf	strtok@s2+1,w
  9254  1AD7  00B9               	movwf	strcspn@s2+1
  9255  1AD8  083F               	movf	strtok@s2,w
  9256  1AD9  00B8               	movwf	strcspn@s2
  9257  1ADA  0844               	movf	strtok@s1,w
  9258  1ADB  31A7  27D0  319A   	fcall	_strcspn
  9259  1ADE  0020               	movlb	0	; select bank0
  9260  1ADF  0838               	movf	?_strcspn,w
  9261  1AE0  00C1               	movwf	??_strtok
  9262  1AE1  0839               	movf	?_strcspn+1,w
  9263  1AE2  00C2               	movwf	??_strtok+1
  9264  1AE3  0844               	movf	strtok@s1,w
  9265  1AE4  0741               	addwf	??_strtok,w
  9266  1AE5  00C3               	movwf	??_strtok+2
  9267  1AE6  0843               	movf	??_strtok+2,w
  9268  1AE7  00D4               	movwf	strtok@sp
  9269  1AE8  0854               	movf	strtok@sp,w
  9270  1AE9  0086               	movwf	6
  9271  1AEA  3001               	movlw	1	; select bank2/3
  9272  1AEB  0087               	movwf	7
  9273  1AEC  0801               	movf	1,w
  9274  1AED  1903               	btfsc	3,2
  9275  1AEE  2AF9               	goto	l6238
  9276  1AEF  0854               	movf	strtok@sp,w
  9277  1AF0  0086               	movwf	6
  9278  1AF1  3001               	movlw	1	; select bank2/3
  9279  1AF2  0087               	movwf	7
  9280  1AF3  0181               	clrf	1
  9281  1AF4  3001               	movlw	1
  9282  1AF5  00C1               	movwf	??_strtok
  9283  1AF6  0841               	movf	??_strtok,w
  9284  1AF7  07D4               	addwf	strtok@sp,f
  9285  1AF8  2AFA               	goto	l6240
  9286  1AF9                     l6238:	
  9287  1AF9  01D4               	clrf	strtok@sp
  9288  1AFA                     l6240:	
  9289  1AFA  0844               	movf	strtok@s1,w
  9290  1AFB  0008               	return
  9291  1AFC                     __end_of_strtok:	
  9292                           
  9293                           	psect	text3
  9294  180B                     __ptext3:	
  9295 ;; *************** function _strspn *****************
  9296 ;; Defined at:
  9297 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strspn.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;  s1              1    wreg     PTR const unsigned char 
  9300 ;;		 -> readdata(20), NULL(0), 
  9301 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9302 ;;		 -> STR_57(2), STR_56(2), 
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9305 ;;		 -> readdata(20), NULL(0), 
  9306 ;;  i               2   28[BANK0 ] unsigned int 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  2   24[BANK0 ] unsigned int 
  9309 ;; Registers used:
  9310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9316 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9317 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9318 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9319 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9320 ;;Total ram usage:        7 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:    7
  9323 ;; This function calls:
  9324 ;;		_strchr
  9325 ;; This function is called by:
  9326 ;;		_strtok
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330                           
  9331                           ;psect for function _strspn
  9332  180B                     _strspn:	
  9333                           
  9334                           ;incstack = 0
  9335                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9336                           ;strspn@s1 stored from wreg
  9337  180B  0020               	movlb	0	; select bank0
  9338  180C  00BE               	movwf	strspn@s1
  9339  180D  01BC               	clrf	strspn@i
  9340  180E  01BD               	clrf	strspn@i+1
  9341  180F  2818               	goto	l5702
  9342  1810                     l5700:	
  9343  1810  3001               	movlw	1
  9344  1811  00BA               	movwf	??_strspn
  9345  1812  083A               	movf	??_strspn,w
  9346  1813  07BE               	addwf	strspn@s1,f
  9347  1814  3001               	movlw	1
  9348  1815  07BC               	addwf	strspn@i,f
  9349  1816  3000               	movlw	0
  9350  1817  3DBD               	addwfc	strspn@i+1,f
  9351  1818                     l5702:	
  9352  1818  083E               	movf	strspn@s1,w
  9353  1819  0086               	movwf	6
  9354  181A  3001               	movlw	1	; select bank2/3
  9355  181B  0087               	movwf	7
  9356  181C  0801               	movf	1,w
  9357  181D  1903               	btfsc	3,2
  9358  181E  2836               	goto	l5706
  9359  181F  0839               	movf	strspn@s2+1,w
  9360  1820  00B2               	movwf	strchr@ptr+1
  9361  1821  0838               	movf	strspn@s2,w
  9362  1822  00B1               	movwf	strchr@ptr
  9363  1823  083E               	movf	strspn@s1,w
  9364  1824  0086               	movwf	6
  9365  1825  3001               	movlw	1	; select bank2/3
  9366  1826  0087               	movwf	7
  9367  1827  0801               	movf	1,w
  9368  1828  00BA               	movwf	??_strspn
  9369  1829  01BB               	clrf	??_strspn+1
  9370  182A  083A               	movf	??_strspn,w
  9371  182B  00B3               	movwf	strchr@chr
  9372  182C  083B               	movf	??_strspn+1,w
  9373  182D  00B4               	movwf	strchr@chr+1
  9374  182E  31A4  2477  3198   	fcall	_strchr
  9375  1831  0020               	movlb	0	; select bank0
  9376  1832  0831               	movf	?_strchr,w
  9377  1833  0432               	iorwf	?_strchr+1,w
  9378  1834  1D03               	btfss	3,2
  9379  1835  2810               	goto	l5700
  9380  1836                     l5706:	
  9381  1836  083D               	movf	strspn@i+1,w
  9382  1837  00B9               	movwf	?_strspn+1
  9383  1838  083C               	movf	strspn@i,w
  9384  1839  00B8               	movwf	?_strspn
  9385  183A  0008               	return
  9386  183B                     __end_of_strspn:	
  9387                           
  9388                           	psect	text4
  9389  27D0                     __ptext4:	
  9390 ;; *************** function _strcspn *****************
  9391 ;; Defined at:
  9392 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcspn.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;  s1              1    wreg     PTR const unsigned char 
  9395 ;;		 -> readdata(20), NULL(0), 
  9396 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9397 ;;		 -> STR_57(2), STR_56(2), 
  9398 ;; Auto vars:     Size  Location     Type
  9399 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9400 ;;		 -> readdata(20), NULL(0), 
  9401 ;;  i               2   28[BANK0 ] unsigned int 
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  2   24[BANK0 ] unsigned int 
  9404 ;; Registers used:
  9405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/0
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9411 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9412 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9413 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9414 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9415 ;;Total ram usage:        7 bytes
  9416 ;; Hardware stack levels used:    1
  9417 ;; Hardware stack levels required when called:    7
  9418 ;; This function calls:
  9419 ;;		_strchr
  9420 ;; This function is called by:
  9421 ;;		_strtok
  9422 ;; This function uses a non-reentrant model
  9423 ;;
  9424                           
  9425                           
  9426                           ;psect for function _strcspn
  9427  27D0                     _strcspn:	
  9428                           
  9429                           ;incstack = 0
  9430                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9431                           ;strcspn@s1 stored from wreg
  9432  27D0  0020               	movlb	0	; select bank0
  9433  27D1  00BE               	movwf	strcspn@s1
  9434  27D2  01BC               	clrf	strcspn@i
  9435  27D3  01BD               	clrf	strcspn@i+1
  9436  27D4  2FDD               	goto	l5714
  9437  27D5                     l5712:	
  9438  27D5  3001               	movlw	1
  9439  27D6  00BA               	movwf	??_strcspn
  9440  27D7  083A               	movf	??_strcspn,w
  9441  27D8  07BE               	addwf	strcspn@s1,f
  9442  27D9  3001               	movlw	1
  9443  27DA  07BC               	addwf	strcspn@i,f
  9444  27DB  3000               	movlw	0
  9445  27DC  3DBD               	addwfc	strcspn@i+1,f
  9446  27DD                     l5714:	
  9447  27DD  083E               	movf	strcspn@s1,w
  9448  27DE  0086               	movwf	6
  9449  27DF  3001               	movlw	1	; select bank2/3
  9450  27E0  0087               	movwf	7
  9451  27E1  0801               	movf	1,w
  9452  27E2  1903               	btfsc	3,2
  9453  27E3  2FFB               	goto	l5718
  9454  27E4  0839               	movf	strcspn@s2+1,w
  9455  27E5  00B2               	movwf	strchr@ptr+1
  9456  27E6  0838               	movf	strcspn@s2,w
  9457  27E7  00B1               	movwf	strchr@ptr
  9458  27E8  083E               	movf	strcspn@s1,w
  9459  27E9  0086               	movwf	6
  9460  27EA  3001               	movlw	1	; select bank2/3
  9461  27EB  0087               	movwf	7
  9462  27EC  0801               	movf	1,w
  9463  27ED  00BA               	movwf	??_strcspn
  9464  27EE  01BB               	clrf	??_strcspn+1
  9465  27EF  083A               	movf	??_strcspn,w
  9466  27F0  00B3               	movwf	strchr@chr
  9467  27F1  083B               	movf	??_strcspn+1,w
  9468  27F2  00B4               	movwf	strchr@chr+1
  9469  27F3  31A4  2477  31A7   	fcall	_strchr
  9470  27F6  0020               	movlb	0	; select bank0
  9471  27F7  0831               	movf	?_strchr,w
  9472  27F8  0432               	iorwf	?_strchr+1,w
  9473  27F9  1903               	btfsc	3,2
  9474  27FA  2FD5               	goto	l5712
  9475  27FB                     l5718:	
  9476  27FB  083D               	movf	strcspn@i+1,w
  9477  27FC  00B9               	movwf	?_strcspn+1
  9478  27FD  083C               	movf	strcspn@i,w
  9479  27FE  00B8               	movwf	?_strcspn
  9480  27FF  0008               	return
  9481  2800                     __end_of_strcspn:	
  9482                           
  9483                           	psect	text5
  9484  2477                     __ptext5:	
  9485 ;; *************** function _strchr *****************
  9486 ;; Defined at:
  9487 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  9488 ;; Parameters:    Size  Location     Type
  9489 ;;  ptr             2   17[BANK0 ] PTR const unsigned char 
  9490 ;;		 -> STR_57(2), STR_56(2), 
  9491 ;;  chr             2   19[BANK0 ] int 
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;		None
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  2   17[BANK0 ] PTR unsigned char 
  9496 ;; Registers used:
  9497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9503 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9505 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9506 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9507 ;;Total ram usage:        7 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:    6
  9510 ;; This function calls:
  9511 ;;		Nothing
  9512 ;; This function is called by:
  9513 ;;		_strcspn
  9514 ;;		_strspn
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           
  9519                           ;psect for function _strchr
  9520  2477                     _strchr:	
  9521  2477                     l2053:	
  9522                           ;incstack = 0
  9523                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  9524                           
  9525  2477  0020               	movlb	0	; select bank0
  9526  2478  0831               	movf	strchr@ptr,w
  9527  2479  0084               	movwf	4
  9528  247A  0832               	movf	strchr@ptr+1,w
  9529  247B  0085               	movwf	5
  9530  247C  0800               	movf	0,w	;code access
  9531  247D  0633               	xorwf	strchr@chr,w
  9532  247E  1903               	btfsc	3,2
  9533  247F  0008               	return
  9534  2480  0832               	movf	strchr@ptr+1,w
  9535  2481  00B6               	movwf	??_strchr+1
  9536  2482  0831               	movf	strchr@ptr,w
  9537  2483  00B5               	movwf	??_strchr
  9538  2484  0AB1               	incf	strchr@ptr,f
  9539  2485  1903               	skipnz
  9540  2486  0AB2               	incf	strchr@ptr+1,f
  9541  2487  0835               	movf	??_strchr,w
  9542  2488  0084               	movwf	4
  9543  2489  0836               	movf	??_strchr+1,w
  9544  248A  0085               	movwf	5
  9545  248B  0012               	moviw fsr0++
  9546  248C  1D03               	btfss	3,2
  9547  248D  2C77               	goto	l2053
  9548  248E  01B1               	clrf	?_strchr
  9549  248F  01B2               	clrf	?_strchr+1
  9550  2490  0008               	return
  9551  2491                     __end_of_strchr:	
  9552                           
  9553                           	psect	text6
  9554  186E                     __ptext6:	
  9555 ;; *************** function _stricmp *****************
  9556 ;; Defined at:
  9557 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\stricmp.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;  s1              1    wreg     PTR const unsigned char 
  9560 ;;		 -> readdata(20), NULL(0), 
  9561 ;;  s2              2   19[BANK0 ] PTR const unsigned char 
  9562 ;;		 -> STR_79(5), STR_78(5), STR_77(7), STR_76(8), 
  9563 ;;		 -> STR_75(5), STR_74(5), STR_73(11), STR_72(13), 
  9564 ;;		 -> STR_71(7), STR_70(8), STR_69(15), STR_68(14), 
  9565 ;;		 -> STR_67(12), STR_66(8), STR_65(8), STR_64(2), 
  9566 ;;		 -> STR_63(5), STR_62(5), STR_61(2), STR_60(4), 
  9567 ;;		 -> STR_59(4), STR_58(4), 
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;  s1              1   24[BANK0 ] PTR const unsigned char 
  9570 ;;		 -> readdata(20), NULL(0), 
  9571 ;;  r               1   23[BANK0 ] char 
  9572 ;; Return value:  Size  Location     Type
  9573 ;;                  2   19[BANK0 ] int 
  9574 ;; Registers used:
  9575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9581 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9582 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9583 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9584 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9585 ;;Total ram usage:        6 bytes
  9586 ;; Hardware stack levels used:    1
  9587 ;; Hardware stack levels required when called:    7
  9588 ;; This function calls:
  9589 ;;		_toupper
  9590 ;; This function is called by:
  9591 ;;		_parseCmd
  9592 ;; This function uses a non-reentrant model
  9593 ;;
  9594                           
  9595                           
  9596                           ;psect for function _stricmp
  9597  186E                     _stricmp:	
  9598                           
  9599                           ;incstack = 0
  9600                           ; Regs used in _stricmp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9601                           ;stricmp@s1 stored from wreg
  9602  186E  0020               	movlb	0	; select bank0
  9603  186F  00B8               	movwf	stricmp@s1
  9604  1870  2879               	goto	l6248
  9605  1871                     l6246:	
  9606  1871  3001               	movlw	1
  9607  1872  00B5               	movwf	??_stricmp
  9608  1873  0835               	movf	??_stricmp,w
  9609  1874  07B8               	addwf	stricmp@s1,f
  9610  1875  3001               	movlw	1
  9611  1876  07B3               	addwf	stricmp@s2,f
  9612  1877  3000               	movlw	0
  9613  1878  3DB4               	addwfc	stricmp@s2+1,f
  9614  1879                     l6248:	
  9615  1879  0833               	movf	stricmp@s2,w
  9616  187A  0084               	movwf	4
  9617  187B  0834               	movf	stricmp@s2+1,w
  9618  187C  0085               	movwf	5
  9619  187D  0800               	movf	0,w	;code access
  9620  187E  31A3  23D3  3198   	fcall	_toupper
  9621  1881  3AFF               	xorlw	255
  9622  1882  3E01               	addlw	1
  9623  1883  0020               	movlb	0	; select bank0
  9624  1884  00B5               	movwf	??_stricmp
  9625  1885  0838               	movf	stricmp@s1,w
  9626  1886  0086               	movwf	6
  9627  1887  3001               	movlw	1	; select bank2/3
  9628  1888  0087               	movwf	7
  9629  1889  0801               	movf	1,w
  9630  188A  31A3  23D3  3198   	fcall	_toupper
  9631  188D  0020               	movlb	0	; select bank0
  9632  188E  0735               	addwf	??_stricmp,w
  9633  188F  00B6               	movwf	??_stricmp+1
  9634  1890  0836               	movf	??_stricmp+1,w
  9635  1891  00B7               	movwf	stricmp@r
  9636  1892  0837               	movf	stricmp@r,w
  9637  1893  1D03               	btfss	3,2
  9638  1894  289C               	goto	l6252
  9639  1895  0838               	movf	stricmp@s1,w
  9640  1896  0086               	movwf	6
  9641  1897  3001               	movlw	1	; select bank2/3
  9642  1898  0087               	movwf	7
  9643  1899  0801               	movf	1,w
  9644  189A  1D03               	btfss	3,2
  9645  189B  2871               	goto	l6246
  9646  189C                     l6252:	
  9647  189C  0837               	movf	stricmp@r,w
  9648  189D  00B3               	movwf	?_stricmp
  9649  189E  01B4               	clrf	?_stricmp+1
  9650  189F  1BB3               	btfsc	?_stricmp,7
  9651  18A0  03B4               	decf	?_stricmp+1,f
  9652  18A1  0008               	return
  9653  18A2                     __end_of_stricmp:	
  9654                           
  9655                           	psect	text7
  9656  23D3                     __ptext7:	
  9657 ;; *************** function _toupper *****************
  9658 ;; Defined at:
  9659 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;  c               1    wreg     unsigned char 
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;  c               1   18[BANK0 ] unsigned char 
  9664 ;; Return value:  Size  Location     Type
  9665 ;;                  1    wreg      unsigned char 
  9666 ;; Registers used:
  9667 ;;		wreg, status,2, status,0
  9668 ;; Tracked objects:
  9669 ;;		On entry : 0/0
  9670 ;;		On exit  : 0/0
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9674 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9675 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9676 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9677 ;;Total ram usage:        2 bytes
  9678 ;; Hardware stack levels used:    1
  9679 ;; Hardware stack levels required when called:    6
  9680 ;; This function calls:
  9681 ;;		Nothing
  9682 ;; This function is called by:
  9683 ;;		_stricmp
  9684 ;; This function uses a non-reentrant model
  9685 ;;
  9686                           
  9687                           
  9688                           ;psect for function _toupper
  9689  23D3                     _toupper:	
  9690                           
  9691                           ;incstack = 0
  9692                           ; Regs used in _toupper: [wreg+status,2+status,0]
  9693                           ;toupper@c stored from wreg
  9694  23D3  0020               	movlb	0	; select bank0
  9695  23D4  00B2               	movwf	toupper@c
  9696  23D5  307B               	movlw	123
  9697  23D6  0232               	subwf	toupper@c,w
  9698  23D7  1803               	skipnc
  9699  23D8  2BE1               	goto	l5694
  9700  23D9  3061               	movlw	97
  9701  23DA  0232               	subwf	toupper@c,w
  9702  23DB  1C03               	skipc
  9703  23DC  2BE1               	goto	l5694
  9704  23DD  30DF               	movlw	223
  9705  23DE  00B1               	movwf	??_toupper
  9706  23DF  0831               	movf	??_toupper,w
  9707  23E0  05B2               	andwf	toupper@c,f
  9708  23E1                     l5694:	
  9709  23E1  0832               	movf	toupper@c,w
  9710  23E2  0008               	return
  9711  23E3                     __end_of_toupper:	
  9712                           
  9713                           	psect	text8
  9714  14CA                     __ptext8:	
  9715 ;; *************** function _atoi *****************
  9716 ;; Defined at:
  9717 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  s               1    wreg     PTR const unsigned char 
  9720 ;;		 -> readdata(20), NULL(0), 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  s               1   30[BANK0 ] PTR const unsigned char 
  9723 ;;		 -> readdata(20), NULL(0), 
  9724 ;;  a               2   28[BANK0 ] int 
  9725 ;;  sign            1   27[BANK0 ] unsigned char 
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  2   23[BANK0 ] int 
  9728 ;; Registers used:
  9729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9735 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9736 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9737 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9738 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9739 ;;Total ram usage:        8 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:    7
  9742 ;; This function calls:
  9743 ;;		___wmul
  9744 ;;		_isdigit
  9745 ;; This function is called by:
  9746 ;;		_parseCmd
  9747 ;; This function uses a non-reentrant model
  9748 ;;
  9749                           
  9750                           
  9751                           ;psect for function _atoi
  9752  14CA                     _atoi:	
  9753                           
  9754                           ;incstack = 0
  9755                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9756                           ;atoi@s stored from wreg
  9757  14CA  0020               	movlb	0	; select bank0
  9758  14CB  00BE               	movwf	atoi@s
  9759  14CC                     l6260:	
  9760  14CC  083E               	movf	atoi@s,w
  9761  14CD  0086               	movwf	6
  9762  14CE  3001               	movlw	1	; select bank2/3
  9763  14CF  0087               	movwf	7
  9764  14D0  3020               	movlw	32
  9765  14D1  0601               	xorwf	1,w
  9766  14D2  1D03               	btfss	3,2
  9767  14D3  2CD9               	goto	l6262
  9768  14D4                     l6258:	
  9769  14D4  3001               	movlw	1
  9770  14D5  00B9               	movwf	??_atoi
  9771  14D6  0839               	movf	??_atoi,w
  9772  14D7  07BE               	addwf	atoi@s,f
  9773  14D8  2CCC               	goto	l6260
  9774  14D9                     l6262:	
  9775  14D9  083E               	movf	atoi@s,w
  9776  14DA  0086               	movwf	6
  9777  14DB  3001               	movlw	1	; select bank2/3
  9778  14DC  0087               	movwf	7
  9779  14DD  3009               	movlw	9
  9780  14DE  0601               	xorwf	1,w
  9781  14DF  1903               	btfsc	3,2
  9782  14E0  2CD4               	goto	l6258
  9783  14E1  01BC               	clrf	atoi@a
  9784  14E2  01BD               	clrf	atoi@a+1
  9785  14E3  01BB               	clrf	atoi@sign
  9786  14E4  083E               	movf	atoi@s,w
  9787  14E5  0086               	movwf	6
  9788  14E6  3001               	movlw	1	; select bank2/3
  9789  14E7  0087               	movwf	7
  9790  14E8  302D               	movlw	45
  9791  14E9  0601               	xorwf	1,w
  9792  14EA  1D03               	btfss	3,2
  9793  14EB  2CF1               	goto	l6270
  9794  14EC  3001               	movlw	1
  9795  14ED  00B9               	movwf	??_atoi
  9796  14EE  0839               	movf	??_atoi,w
  9797  14EF  07BB               	addwf	atoi@sign,f
  9798  14F0  2CF9               	goto	l6276
  9799  14F1                     l6270:	
  9800  14F1  083E               	movf	atoi@s,w
  9801  14F2  0086               	movwf	6
  9802  14F3  3001               	movlw	1	; select bank2/3
  9803  14F4  0087               	movwf	7
  9804  14F5  302B               	movlw	43
  9805  14F6  0601               	xorwf	1,w
  9806  14F7  1D03               	btfss	3,2
  9807  14F8  2CFD               	goto	l6278
  9808  14F9                     l6276:	
  9809  14F9  3001               	movlw	1
  9810  14FA  00B9               	movwf	??_atoi
  9811  14FB  0839               	movf	??_atoi,w
  9812  14FC  07BE               	addwf	atoi@s,f
  9813  14FD                     l6278:	
  9814  14FD  083E               	movf	atoi@s,w
  9815  14FE  0086               	movwf	6
  9816  14FF  3001               	movlw	1	; select bank2/3
  9817  1500  0087               	movwf	7
  9818  1501  0801               	movf	1,w
  9819  1502  31A3  23C4  3194   	fcall	_isdigit
  9820  1505  1C03               	btfss	3,0
  9821  1506  2D26               	goto	l6280
  9822  1507  0020               	movlb	0	; select bank0
  9823  1508  083D               	movf	atoi@a+1,w
  9824  1509  00B2               	movwf	___wmul@multiplier+1
  9825  150A  083C               	movf	atoi@a,w
  9826  150B  00B1               	movwf	___wmul@multiplier
  9827  150C  300A               	movlw	10
  9828  150D  00B3               	movwf	___wmul@multiplicand
  9829  150E  3000               	movlw	0
  9830  150F  00B4               	movwf	___wmul@multiplicand+1
  9831  1510  31A4  24C8  3194   	fcall	___wmul
  9832  1513  0020               	movlb	0	; select bank0
  9833  1514  083E               	movf	atoi@s,w
  9834  1515  0086               	movwf	6
  9835  1516  3001               	movlw	1	; select bank2/3
  9836  1517  0087               	movwf	7
  9837  1518  0801               	movf	1,w
  9838  1519  0731               	addwf	?___wmul,w
  9839  151A  00B9               	movwf	??_atoi
  9840  151B  0832               	movf	?___wmul+1,w
  9841  151C  1803               	skipnc
  9842  151D  0A32               	incf	?___wmul+1,w
  9843  151E  00BA               	movwf	??_atoi+1
  9844  151F  0839               	movf	??_atoi,w
  9845  1520  3ED0               	addlw	208
  9846  1521  00BC               	movwf	atoi@a
  9847  1522  30FF               	movlw	255
  9848  1523  3D3A               	addwfc	??_atoi+1,w
  9849  1524  00BD               	movwf	atoi@a+1
  9850  1525  2CF9               	goto	l6276
  9851  1526                     l6280:	
  9852  1526  0020               	movlb	0	; select bank0
  9853  1527  083B               	movf	atoi@sign,w
  9854  1528  1903               	btfsc	3,2
  9855  1529  2D36               	goto	l6286
  9856  152A  093C               	comf	atoi@a,w
  9857  152B  00B9               	movwf	??_atoi
  9858  152C  093D               	comf	atoi@a+1,w
  9859  152D  00BA               	movwf	??_atoi+1
  9860  152E  0AB9               	incf	??_atoi,f
  9861  152F  1903               	skipnz
  9862  1530  0ABA               	incf	??_atoi+1,f
  9863  1531  0839               	movf	??_atoi,w
  9864  1532  00B7               	movwf	?_atoi
  9865  1533  083A               	movf	??_atoi+1,w
  9866  1534  00B8               	movwf	?_atoi+1
  9867  1535  0008               	return
  9868  1536                     l6286:	
  9869  1536  083D               	movf	atoi@a+1,w
  9870  1537  00B8               	movwf	?_atoi+1
  9871  1538  083C               	movf	atoi@a,w
  9872  1539  00B7               	movwf	?_atoi
  9873  153A  0008               	return
  9874  153B                     __end_of_atoi:	
  9875                           
  9876                           	psect	text9
  9877  23C4                     __ptext9:	
  9878 ;; *************** function _isdigit *****************
  9879 ;; Defined at:
  9880 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  9881 ;; Parameters:    Size  Location     Type
  9882 ;;  c               1    wreg     unsigned char 
  9883 ;; Auto vars:     Size  Location     Type
  9884 ;;  c               1   18[BANK0 ] unsigned char 
  9885 ;; Return value:  Size  Location     Type
  9886 ;;		None               void
  9887 ;; Registers used:
  9888 ;;		wreg, status,2, status,0
  9889 ;; Tracked objects:
  9890 ;;		On entry : 0/0
  9891 ;;		On exit  : 0/0
  9892 ;;		Unchanged: 0/0
  9893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9895 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9897 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9898 ;;Total ram usage:        2 bytes
  9899 ;; Hardware stack levels used:    1
  9900 ;; Hardware stack levels required when called:    6
  9901 ;; This function calls:
  9902 ;;		Nothing
  9903 ;; This function is called by:
  9904 ;;		_atoi
  9905 ;; This function uses a non-reentrant model
  9906 ;;
  9907                           
  9908                           
  9909                           ;psect for function _isdigit
  9910  23C4                     _isdigit:	
  9911                           
  9912                           ;incstack = 0
  9913                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9914                           ;isdigit@c stored from wreg
  9915  23C4  0020               	movlb	0	; select bank0
  9916  23C5  00B2               	movwf	isdigit@c
  9917  23C6  01B1               	clrf	_isdigit$2150
  9918  23C7  303A               	movlw	58
  9919  23C8  0232               	subwf	isdigit@c,w
  9920  23C9  1803               	skipnc
  9921  23CA  2BD1               	goto	l5510
  9922  23CB  3030               	movlw	48
  9923  23CC  0232               	subwf	isdigit@c,w
  9924  23CD  1C03               	skipc
  9925  23CE  2BD1               	goto	l5510
  9926  23CF  01B1               	clrf	_isdigit$2150
  9927  23D0  0AB1               	incf	_isdigit$2150,f
  9928  23D1                     l5510:	
  9929  23D1  0C31               	rrf	_isdigit$2150,w
  9930  23D2  0008               	return
  9931  23D3                     __end_of_isdigit:	
  9932                           
  9933                           	psect	text10
  9934  24C8                     __ptext10:	
  9935 ;; *************** function ___wmul *****************
  9936 ;; Defined at:
  9937 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  9938 ;; Parameters:    Size  Location     Type
  9939 ;;  multiplier      2   17[BANK0 ] unsigned int 
  9940 ;;  multiplicand    2   19[BANK0 ] unsigned int 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;  product         2   21[BANK0 ] unsigned int 
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  2   17[BANK0 ] unsigned int 
  9945 ;; Registers used:
  9946 ;;		wreg, status,2, status,0
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9952 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9953 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9955 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9956 ;;Total ram usage:        6 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:    6
  9959 ;; This function calls:
  9960 ;;		Nothing
  9961 ;; This function is called by:
  9962 ;;		_atoi
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           
  9966                           
  9967                           ;psect for function ___wmul
  9968  24C8                     ___wmul:	
  9969                           
  9970                           ;incstack = 0
  9971                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9972  24C8  0020               	movlb	0	; select bank0
  9973  24C9  01B5               	clrf	___wmul@product
  9974  24CA  01B6               	clrf	___wmul@product+1
  9975  24CB                     l5490:	
  9976  24CB  1C31               	btfss	___wmul@multiplier,0
  9977  24CC  2CD1               	goto	l1580
  9978  24CD  0833               	movf	___wmul@multiplicand,w
  9979  24CE  07B5               	addwf	___wmul@product,f
  9980  24CF  0834               	movf	___wmul@multiplicand+1,w
  9981  24D0  3DB6               	addwfc	___wmul@product+1,f
  9982  24D1                     l1580:	
  9983  24D1  3001               	movlw	1
  9984  24D2                     u4555:	
  9985  24D2  35B3               	lslf	___wmul@multiplicand,f
  9986  24D3  0DB4               	rlf	___wmul@multiplicand+1,f
  9987  24D4  0B89               	decfsz	9,f
  9988  24D5  2CD2               	goto	u4555
  9989  24D6  3001               	movlw	1
  9990  24D7                     u4565:	
  9991  24D7  36B2               	lsrf	___wmul@multiplier+1,f
  9992  24D8  0CB1               	rrf	___wmul@multiplier,f
  9993  24D9  0B89               	decfsz	9,f
  9994  24DA  2CD7               	goto	u4565
  9995  24DB  0831               	movf	___wmul@multiplier,w
  9996  24DC  0432               	iorwf	___wmul@multiplier+1,w
  9997  24DD  1D03               	btfss	3,2
  9998  24DE  2CCB               	goto	l5490
  9999  24DF  0836               	movf	___wmul@product+1,w
 10000  24E0  00B2               	movwf	?___wmul+1
 10001  24E1  0835               	movf	___wmul@product,w
 10002  24E2  00B1               	movwf	?___wmul
 10003  24E3  0008               	return
 10004  24E4                     __end_of___wmul:	
 10005                           
 10006                           	psect	text11
 10007  0B01                     __ptext11:	
 10008 ;; *************** function _main_initialize *****************
 10009 ;; Defined at:
 10010 ;;		line 185 in file "main.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;		None
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;		None
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      void 
 10017 ;; Registers used:
 10018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10026 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10027 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10028 ;;Total ram usage:        2 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; Hardware stack levels required when called:   15
 10031 ;; This function calls:
 10032 ;;		_LED_setBrightnessRange
 10033 ;;		_LEDsPwr
 10034 ;;		_TMR0_Load8bitPeriod
 10035 ;;		_TMR2_LoadPeriodRegister
 10036 ;;		___awtoft
 10037 ;;		___ftadd
 10038 ;;		___ftmul
 10039 ;;		___fttol
 10040 ;;		_drv_init
 10041 ;;		_printf
 10042 ;; This function is called by:
 10043 ;;		_main
 10044 ;; This function uses a non-reentrant model
 10045 ;;
 10046                           
 10047                           
 10048                           ;psect for function _main_initialize
 10049  0B01                     _main_initialize:	
 10050                           
 10051                           ;main.c: 187: LEDsPwr(LEDpower, 1);
 10052                           
 10053                           ;incstack = 0
 10054                           ; Regs used in _main_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10055  0B01  305F               	movlw	low (_LEDpower| (0+32768))
 10056  0B02  0084               	movwf	4
 10057  0B03  30AA               	movlw	high (_LEDpower| (0+32768))
 10058  0B04  0085               	movwf	5
 10059  0B05  3F00               	moviw [0]fsr0
 10060  0B06  0020               	movlb	0	; select bank0
 10061  0B07  00C4               	movwf	LEDsPwr@pwr
 10062  0B08  3F01               	moviw [1]fsr0
 10063  0B09  00C5               	movwf	LEDsPwr@pwr+1
 10064  0B0A  3001               	movlw	1
 10065  0B0B  00C6               	movwf	LEDsPwr@topOrBottom
 10066  0B0C  3000               	movlw	0
 10067  0B0D  00C7               	movwf	LEDsPwr@topOrBottom+1
 10068  0B0E  319F  279C  318B   	fcall	_LEDsPwr
 10069                           
 10070                           ;main.c: 188: LEDsPwr(LEDpower, 2);
 10071  0B11  305F               	movlw	low (_LEDpower| (0+32768))
 10072  0B12  0084               	movwf	4
 10073  0B13  30AA               	movlw	high (_LEDpower| (0+32768))
 10074  0B14  0085               	movwf	5
 10075  0B15  3F00               	moviw [0]fsr0
 10076  0B16  0020               	movlb	0	; select bank0
 10077  0B17  00C4               	movwf	LEDsPwr@pwr
 10078  0B18  3F01               	moviw [1]fsr0
 10079  0B19  00C5               	movwf	LEDsPwr@pwr+1
 10080  0B1A  3002               	movlw	2
 10081  0B1B  00C6               	movwf	LEDsPwr@topOrBottom
 10082  0B1C  3000               	movlw	0
 10083  0B1D  00C7               	movwf	LEDsPwr@topOrBottom+1
 10084  0B1E  319F  279C  318B   	fcall	_LEDsPwr
 10085                           
 10086                           ;main.c: 190: LED_setBrightnessRange(1, 1);
 10087  0B21  3001               	movlw	1
 10088  0B22  0020               	movlb	0	; select bank0
 10089  0B23  00C4               	movwf	LED_setBrightnessRange@range
 10090  0B24  3000               	movlw	0
 10091  0B25  00C5               	movwf	LED_setBrightnessRange@range+1
 10092  0B26  3001               	movlw	1
 10093  0B27  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10094  0B28  3000               	movlw	0
 10095  0B29  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10096  0B2A  318B  23DE  318B   	fcall	_LED_setBrightnessRange
 10097                           
 10098                           ;main.c: 191: LED_setBrightnessRange(1, 2);
 10099  0B2D  3001               	movlw	1
 10100  0B2E  0020               	movlb	0	; select bank0
 10101  0B2F  00C4               	movwf	LED_setBrightnessRange@range
 10102  0B30  3000               	movlw	0
 10103  0B31  00C5               	movwf	LED_setBrightnessRange@range+1
 10104  0B32  3002               	movlw	2
 10105  0B33  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10106  0B34  3000               	movlw	0
 10107  0B35  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10108  0B36  318B  23DE  318B   	fcall	_LED_setBrightnessRange
 10109                           
 10110                           ;main.c: 192: do { LATCbits.LATC1 = 1; } while(0);
 10111  0B39  0022               	movlb	2	; select bank2
 10112  0B3A  148E               	bsf	14,1	;volatile
 10113                           
 10114                           ;main.c: 195: TMR2_LoadPeriodRegister((heater_post_time_ms*TMR2_RANGE)-1);
 10115  0B3B  0021               	movlb	1	; select bank1
 10116  0B3C  086C               	movf	(_heater_post_time_ms+1)^(0+128),w
 10117  0B3D  0020               	movlb	0	; select bank0
 10118  0B3E  00BA               	movwf	___awtoft@c+1
 10119  0B3F  0021               	movlb	1	; select bank1
 10120  0B40  086B               	movf	_heater_post_time_ms^(0+128),w
 10121  0B41  0020               	movlb	0	; select bank0
 10122  0B42  00B9               	movwf	___awtoft@c
 10123  0B43  31A5  25FD  318B   	fcall	___awtoft
 10124  0B46  0020               	movlb	0	; select bank0
 10125  0B47  0839               	movf	?___awtoft,w
 10126  0B48  00C2               	movwf	___ftmul@f2
 10127  0B49  083A               	movf	?___awtoft+1,w
 10128  0B4A  00C3               	movwf	___ftmul@f2+1
 10129  0B4B  083B               	movf	?___awtoft+2,w
 10130  0B4C  00C4               	movwf	___ftmul@f2+2
 10131  0B4D  3053               	movlw	low (_TMR2_RANGE| (0+32768))
 10132  0B4E  0084               	movwf	4
 10133  0B4F  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
 10134  0B50  0085               	movwf	5
 10135  0B51  3F00               	moviw [0]fsr0
 10136  0B52  00BF               	movwf	___ftmul@f1
 10137  0B53  3F01               	moviw [1]fsr0
 10138  0B54  00C0               	movwf	___ftmul@f1+1
 10139  0B55  3F02               	moviw [2]fsr0
 10140  0B56  00C1               	movwf	___ftmul@f1+2
 10141  0B57  318C  24BC  318B   	fcall	___ftmul
 10142  0B5A  0020               	movlb	0	; select bank0
 10143  0B5B  083F               	movf	?___ftmul,w
 10144  0B5C  0021               	movlb	1	; select bank1
 10145  0B5D  00A9               	movwf	___ftadd@f2^(0+128)
 10146  0B5E  0020               	movlb	0	; select bank0
 10147  0B5F  0840               	movf	?___ftmul+1,w
 10148  0B60  0021               	movlb	1	; select bank1
 10149  0B61  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 10150  0B62  0020               	movlb	0	; select bank0
 10151  0B63  0841               	movf	?___ftmul+2,w
 10152  0B64  0021               	movlb	1	; select bank1
 10153  0B65  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 10154  0B66  3000               	movlw	0
 10155  0B67  00A6               	movwf	___ftadd@f1^(0+128)
 10156  0B68  3080               	movlw	128
 10157  0B69  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 10158  0B6A  30BF               	movlw	191
 10159  0B6B  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 10160  0B6C  3186  26D1  318B   	fcall	___ftadd
 10161  0B6F  0021               	movlb	1	; select bank1
 10162  0B70  0826               	movf	?___ftadd^(0+128),w
 10163  0B71  00AF               	movwf	___fttol@f1^(0+128)
 10164  0B72  0827               	movf	(?___ftadd+1)^(0+128),w
 10165  0B73  00B0               	movwf	(___fttol@f1+1)^(0+128)
 10166  0B74  0828               	movf	(?___ftadd+2)^(0+128),w
 10167  0B75  00B1               	movwf	(___fttol@f1+2)^(0+128)
 10168  0B76  3188  2092  318B   	fcall	___fttol
 10169  0B79  0021               	movlb	1	; select bank1
 10170  0B7A  082F               	movf	?___fttol^(0+128),w
 10171  0B7B  31A2  225D  318B   	fcall	_TMR2_LoadPeriodRegister
 10172                           
 10173                           ;main.c: 196: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 10174  0B7E  0021               	movlb	1	; select bank1
 10175  0B7F  096D               	comf	_heater_pre_time_ms^(0+128),w
 10176  0B80  00BD               	movwf	??_main_initialize^(0+128)
 10177  0B81  096E               	comf	(_heater_pre_time_ms+1)^(0+128),w
 10178  0B82  00BE               	movwf	(??_main_initialize^(0+128)+1)
 10179  0B83  0ABD               	incf	??_main_initialize^(0+128),f
 10180  0B84  1903               	skipnz
 10181  0B85  0ABE               	incf	(??_main_initialize^(0+128)+1),f
 10182  0B86  0869               	movf	_piezo_on_time_ms^(0+128),w
 10183  0B87  073D               	addwf	??_main_initialize^(0+128),w
 10184  0B88  0020               	movlb	0	; select bank0
 10185  0B89  00B9               	movwf	___awtoft@c
 10186  0B8A  0021               	movlb	1	; select bank1
 10187  0B8B  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 10188  0B8C  3D3E               	addwfc	(??_main_initialize+1)^(0+128),w
 10189  0B8D  0020               	movlb	0	; select bank0
 10190  0B8E  00BA               	movwf	___awtoft@c+1
 10191  0B8F  31A5  25FD  318B   	fcall	___awtoft
 10192  0B92  0020               	movlb	0	; select bank0
 10193  0B93  0839               	movf	?___awtoft,w
 10194  0B94  00C2               	movwf	___ftmul@f2
 10195  0B95  083A               	movf	?___awtoft+1,w
 10196  0B96  00C3               	movwf	___ftmul@f2+1
 10197  0B97  083B               	movf	?___awtoft+2,w
 10198  0B98  00C4               	movwf	___ftmul@f2+2
 10199  0B99  3056               	movlw	low (_TMR0_RANGE| (0+32768))
 10200  0B9A  0084               	movwf	4
 10201  0B9B  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 10202  0B9C  0085               	movwf	5
 10203  0B9D  3F00               	moviw [0]fsr0
 10204  0B9E  00BF               	movwf	___ftmul@f1
 10205  0B9F  3F01               	moviw [1]fsr0
 10206  0BA0  00C0               	movwf	___ftmul@f1+1
 10207  0BA1  3F02               	moviw [2]fsr0
 10208  0BA2  00C1               	movwf	___ftmul@f1+2
 10209  0BA3  318C  24BC  318B   	fcall	___ftmul
 10210  0BA6  0020               	movlb	0	; select bank0
 10211  0BA7  083F               	movf	?___ftmul,w
 10212  0BA8  0021               	movlb	1	; select bank1
 10213  0BA9  00A9               	movwf	___ftadd@f2^(0+128)
 10214  0BAA  0020               	movlb	0	; select bank0
 10215  0BAB  0840               	movf	?___ftmul+1,w
 10216  0BAC  0021               	movlb	1	; select bank1
 10217  0BAD  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 10218  0BAE  0020               	movlb	0	; select bank0
 10219  0BAF  0841               	movf	?___ftmul+2,w
 10220  0BB0  0021               	movlb	1	; select bank1
 10221  0BB1  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 10222  0BB2  3000               	movlw	0
 10223  0BB3  00A6               	movwf	___ftadd@f1^(0+128)
 10224  0BB4  3080               	movlw	128
 10225  0BB5  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 10226  0BB6  30BF               	movlw	191
 10227  0BB7  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 10228  0BB8  3186  26D1  318B   	fcall	___ftadd
 10229  0BBB  0021               	movlb	1	; select bank1
 10230  0BBC  0826               	movf	?___ftadd^(0+128),w
 10231  0BBD  00AF               	movwf	___fttol@f1^(0+128)
 10232  0BBE  0827               	movf	(?___ftadd+1)^(0+128),w
 10233  0BBF  00B0               	movwf	(___fttol@f1+1)^(0+128)
 10234  0BC0  0828               	movf	(?___ftadd+2)^(0+128),w
 10235  0BC1  00B1               	movwf	(___fttol@f1+2)^(0+128)
 10236  0BC2  3188  2092  318B   	fcall	___fttol
 10237  0BC5  0021               	movlb	1	; select bank1
 10238  0BC6  082F               	movf	?___fttol^(0+128),w
 10239  0BC7  31A2  2258  318B   	fcall	_TMR0_Load8bitPeriod
 10240                           
 10241                           ;main.c: 199: drv_init(0x03, 0x0c);
 10242  0BCA  3003               	movlw	3
 10243  0BCB  0021               	movlb	1	; select bank1
 10244  0BCC  00B6               	movwf	drv_init@output_gain^(0+128)
 10245  0BCD  3000               	movlw	0
 10246  0BCE  00B7               	movwf	(drv_init@output_gain^(0+128)+1)
 10247  0BCF  300C               	movlw	12
 10248  0BD0  00B8               	movwf	drv_init@idle_timeout^(0+128)
 10249  0BD1  3000               	movlw	0
 10250  0BD2  00B9               	movwf	(drv_init@idle_timeout^(0+128)+1)
 10251  0BD3  319F  2739  318B   	fcall	_drv_init
 10252                           
 10253                           ;main.c: 200: printf("initialized\n");
 10254  0BD6  3003               	movlw	low ((STR_51+4)| (0+32768))
 10255  0BD7  0021               	movlb	1	; select bank1
 10256  0BD8  00A0               	movwf	printf@f^(0+128)
 10257  0BD9  30A9               	movlw	high ((STR_51+4)| (0+32768))
 10258  0BDA  00A1               	movwf	(printf@f^(0+128)+1)
 10259  0BDB  318E  26CE         	fcall	_printf
 10260  0BDD  0008               	return
 10261  0BDE                     __end_of_main_initialize:	
 10262                           
 10263                           	psect	text12
 10264  1F39                     __ptext12:	
 10265 ;; *************** function _drv_init *****************
 10266 ;; Defined at:
 10267 ;;		line 3 in file "drv2665.c"
 10268 ;; Parameters:    Size  Location     Type
 10269 ;;  output_gain     2   22[BANK1 ] int 
 10270 ;;  idle_timeout    2   24[BANK1 ] int 
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;		None
 10273 ;; Return value:  Size  Location     Type
 10274 ;;                  1    wreg      void 
 10275 ;; Registers used:
 10276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10277 ;; Tracked objects:
 10278 ;;		On entry : 0/0
 10279 ;;		On exit  : 0/0
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10282 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10284 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10285 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10286 ;;Total ram usage:        5 bytes
 10287 ;; Hardware stack levels used:    1
 10288 ;; Hardware stack levels required when called:   14
 10289 ;; This function calls:
 10290 ;;		_drv_reset
 10291 ;;		_drv_write
 10292 ;;		_i2c_open
 10293 ;;		_i2c_setAddress
 10294 ;;		_printf
 10295 ;; This function is called by:
 10296 ;;		_main_initialize
 10297 ;; This function uses a non-reentrant model
 10298 ;;
 10299                           
 10300                           
 10301                           ;psect for function _drv_init
 10302  1F39                     _drv_init:	
 10303                           
 10304                           ;drv2665.c: 5: i2c_setAddress(drv_address);
 10305                           
 10306                           ;incstack = 0
 10307                           ; Regs used in _drv_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10308  1F39  3067               	movlw	low (_drv_address| (0+32768))
 10309  1F3A  0084               	movwf	4
 10310  1F3B  30AA               	movlw	high (_drv_address| (0+32768))
 10311  1F3C  0085               	movwf	5
 10312  1F3D  0800               	movf	0,w	;code access
 10313  1F3E  31A2  22DC  319F   	fcall	_i2c_setAddress
 10314                           
 10315                           ;drv2665.c: 6: i2c_open(drv_address);
 10316  1F41  3067               	movlw	low (_drv_address| (0+32768))
 10317  1F42  0084               	movwf	4
 10318  1F43  30AA               	movlw	high (_drv_address| (0+32768))
 10319  1F44  0085               	movwf	5
 10320  1F45  0800               	movf	0,w	;code access
 10321  1F46  319A  22FC  319F   	fcall	_i2c_open
 10322                           
 10323                           ;drv2665.c: 7: _delay((unsigned long)((10)*(1000000/4000.0)));
 10324  1F49  3004               	movlw	4
 10325  1F4A  0021               	movlb	1	; select bank1
 10326  1F4B  00BA               	movwf	??_drv_init^(0+128)
 10327  1F4C  303D               	movlw	61
 10328  1F4D                     u8907:	
 10329  1F4D  0B89               	decfsz	9,f
 10330  1F4E  2F4D               	goto	u8907
 10331  1F4F  0BBA               	decfsz	??_drv_init^(0+128),f
 10332  1F50  2F4D               	goto	u8907
 10333  1F51  3200               	nop2
 10334                           
 10335                           ;drv2665.c: 9: drv_reset();
 10336  1F52  31A3  2338  319F   	fcall	_drv_reset
 10337                           
 10338                           ;drv2665.c: 10: _delay((unsigned long)((10)*(1000000/4000.0)));
 10339  1F55  3004               	movlw	4
 10340  1F56  0021               	movlb	1	; select bank1
 10341  1F57  00BA               	movwf	??_drv_init^(0+128)
 10342  1F58  303D               	movlw	61
 10343  1F59                     u8917:	
 10344  1F59  0B89               	decfsz	9,f
 10345  1F5A  2F59               	goto	u8917
 10346  1F5B  0BBA               	decfsz	??_drv_init^(0+128),f
 10347  1F5C  2F59               	goto	u8917
 10348  1F5D  3200               	nop2
 10349                           
 10350                           ;drv2665.c: 11: drv_write(0x02, 0);
 10351  1F5E  0020               	movlb	0	; select bank0
 10352  1F5F  01C9               	clrf	drv_write@data
 10353  1F60  3002               	movlw	2
 10354  1F61  31A6  268A  319F   	fcall	_drv_write
 10355                           
 10356                           ;drv2665.c: 12: _delay((unsigned long)((10)*(1000000/4000.0)));
 10357  1F64  3004               	movlw	4
 10358  1F65  0021               	movlb	1	; select bank1
 10359  1F66  00BA               	movwf	??_drv_init^(0+128)
 10360  1F67  303D               	movlw	61
 10361  1F68                     u8927:	
 10362  1F68  0B89               	decfsz	9,f
 10363  1F69  2F68               	goto	u8927
 10364  1F6A  0BBA               	decfsz	??_drv_init^(0+128),f
 10365  1F6B  2F68               	goto	u8927
 10366  1F6C  3200               	nop2
 10367                           
 10368                           ;drv2665.c: 13: drv_write(0x01, 0x38 | output_gain);
 10369  1F6D  0021               	movlb	1	; select bank1
 10370  1F6E  0836               	movf	drv_init@output_gain^(0+128),w
 10371  1F6F  3838               	iorlw	56
 10372  1F70  00BA               	movwf	??_drv_init^(0+128)
 10373  1F71  083A               	movf	??_drv_init^(0+128),w
 10374  1F72  0020               	movlb	0	; select bank0
 10375  1F73  00C9               	movwf	drv_write@data
 10376  1F74  3001               	movlw	1
 10377  1F75  31A6  268A  319F   	fcall	_drv_write
 10378                           
 10379                           ;drv2665.c: 15: _delay((unsigned long)((10)*(1000000/4000.0)));
 10380  1F78  3004               	movlw	4
 10381  1F79  0021               	movlb	1	; select bank1
 10382  1F7A  00BA               	movwf	??_drv_init^(0+128)
 10383  1F7B  303D               	movlw	61
 10384  1F7C                     u8937:	
 10385  1F7C  0B89               	decfsz	9,f
 10386  1F7D  2F7C               	goto	u8937
 10387  1F7E  0BBA               	decfsz	??_drv_init^(0+128),f
 10388  1F7F  2F7C               	goto	u8937
 10389  1F80  3200               	nop2
 10390                           
 10391                           ;drv2665.c: 16: drv_write(0x02, idle_timeout);
 10392  1F81  0021               	movlb	1	; select bank1
 10393  1F82  0838               	movf	drv_init@idle_timeout^(0+128),w
 10394  1F83  00BA               	movwf	??_drv_init^(0+128)
 10395  1F84  083A               	movf	??_drv_init^(0+128),w
 10396  1F85  0020               	movlb	0	; select bank0
 10397  1F86  00C9               	movwf	drv_write@data
 10398  1F87  3002               	movlw	2
 10399  1F88  31A6  268A  319F   	fcall	_drv_write
 10400                           
 10401                           ;drv2665.c: 18: _delay((unsigned long)((10)*(1000000/4000.0)));
 10402  1F8B  3004               	movlw	4
 10403  1F8C  0021               	movlb	1	; select bank1
 10404  1F8D  00BA               	movwf	??_drv_init^(0+128)
 10405  1F8E  303D               	movlw	61
 10406  1F8F                     u8947:	
 10407  1F8F  0B89               	decfsz	9,f
 10408  1F90  2F8F               	goto	u8947
 10409  1F91  0BBA               	decfsz	??_drv_init^(0+128),f
 10410  1F92  2F8F               	goto	u8947
 10411  1F93  3200               	nop2
 10412                           
 10413                           ;drv2665.c: 20: printf("drv initialized\n");
 10414  1F94  30FF               	movlw	low (STR_51| (0+32768))
 10415  1F95  0021               	movlb	1	; select bank1
 10416  1F96  00A0               	movwf	printf@f^(0+128)
 10417  1F97  30A8               	movlw	high (STR_51| (0+32768))
 10418  1F98  00A1               	movwf	(printf@f^(0+128)+1)
 10419  1F99  318E  26CE         	fcall	_printf
 10420  1F9B  0008               	return
 10421  1F9C                     __end_of_drv_init:	
 10422                           
 10423                           	psect	text13
 10424  22DC                     __ptext13:	
 10425 ;; *************** function _i2c_setAddress *****************
 10426 ;; Defined at:
 10427 ;;		line 156 in file "mcc_generated_files/drivers/i2c_master.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;  address         1    wreg     unsigned char 
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;  address         1   18[BANK0 ] unsigned char 
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  1    wreg      void 
 10434 ;; Registers used:
 10435 ;;		wreg
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10443 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10444 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10445 ;;Total ram usage:        2 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; Hardware stack levels required when called:    6
 10448 ;; This function calls:
 10449 ;;		Nothing
 10450 ;; This function is called by:
 10451 ;;		_drv_init
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           
 10456                           ;psect for function _i2c_setAddress
 10457  22DC                     _i2c_setAddress:	
 10458                           
 10459                           ;incstack = 0
 10460                           ; Regs used in _i2c_setAddress: [wreg]
 10461                           ;i2c_setAddress@address stored from wreg
 10462  22DC  0020               	movlb	0	; select bank0
 10463  22DD  00B2               	movwf	i2c_setAddress@address
 10464                           
 10465                           ;i2c_master.c: 158: i2c_status.address = address;
 10466  22DE  0832               	movf	i2c_setAddress@address,w
 10467  22DF  00B1               	movwf	??_i2c_setAddress
 10468  22E0  0831               	movf	??_i2c_setAddress,w
 10469  22E1  0022               	movlb	2	; select bank2
 10470  22E2  00A1               	movwf	(_i2c_status^(0+256)+1)
 10471  22E3  0008               	return
 10472  22E4                     __end_of_i2c_setAddress:	
 10473                           
 10474                           	psect	text14
 10475  1AFC                     __ptext14:	
 10476 ;; *************** function _i2c_open *****************
 10477 ;; Defined at:
 10478 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
 10479 ;; Parameters:    Size  Location     Type
 10480 ;;  address         1    wreg     unsigned char 
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;  address         1   21[BANK0 ] unsigned char 
 10483 ;;  ret             1   20[BANK0 ] enum E8193
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  1    wreg      enum E8193
 10486 ;; Registers used:
 10487 ;;		wreg, status,2, status,0, pclath, cstack
 10488 ;; Tracked objects:
 10489 ;;		On entry : 0/0
 10490 ;;		On exit  : 0/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10494 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10495 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10496 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10497 ;;Total ram usage:        3 bytes
 10498 ;; Hardware stack levels used:    1
 10499 ;; Hardware stack levels required when called:    7
 10500 ;; This function calls:
 10501 ;;		_i2c1_driver_open
 10502 ;;		_i2c1_driver_setBusCollisionISR
 10503 ;;		_i2c1_driver_setI2cISR
 10504 ;;		_mssp1_clearIRQ
 10505 ;; This function is called by:
 10506 ;;		_drv_init
 10507 ;; This function uses a non-reentrant model
 10508 ;;
 10509                           
 10510                           
 10511                           ;psect for function _i2c_open
 10512  1AFC                     _i2c_open:	
 10513                           
 10514                           ;incstack = 0
 10515                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
 10516                           ;i2c_open@address stored from wreg
 10517  1AFC  0020               	movlb	0	; select bank0
 10518  1AFD  00B5               	movwf	i2c_open@address
 10519                           
 10520                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
 10521  1AFE  01B4               	clrf	i2c_open@ret
 10522  1AFF  0AB4               	incf	i2c_open@ret,f
 10523                           
 10524                           ;i2c_master.c: 120: if(!i2c_status.inUse)
 10525  1B00  0022               	movlb	2	; select bank2
 10526  1B01  18A0               	btfsc	_i2c_status^(0+256),1
 10527  1B02  0008               	return
 10528                           
 10529                           ;i2c_master.c: 121: {
 10530                           ;i2c_master.c: 122: i2c_status.address = address;
 10531  1B03  0020               	movlb	0	; select bank0
 10532  1B04  0835               	movf	i2c_open@address,w
 10533  1B05  00B3               	movwf	??_i2c_open
 10534  1B06  0833               	movf	??_i2c_open,w
 10535  1B07  0022               	movlb	2	; select bank2
 10536  1B08  00A1               	movwf	(_i2c_status^(0+256)+1)
 10537                           
 10538                           ;i2c_master.c: 123: i2c_status.busy = 0;
 10539  1B09  1020               	bcf	_i2c_status^(0+256),0
 10540                           
 10541                           ;i2c_master.c: 124: i2c_status.inUse = 1;
 10542  1B0A  14A0               	bsf	_i2c_status^(0+256),1
 10543                           
 10544                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
 10545  1B0B  11A0               	bcf	_i2c_status^(0+256),3
 10546                           
 10547                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
 10548  1B0C  300E               	movlw	14
 10549  1B0D  0020               	movlb	0	; select bank0
 10550  1B0E  00B3               	movwf	??_i2c_open
 10551  1B0F  0833               	movf	??_i2c_open,w
 10552  1B10  0022               	movlb	2	; select bank2
 10553  1B11  00AA               	movwf	(_i2c_status^(0+256)+10)
 10554                           
 10555                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
 10556  1B12  30F4               	movlw	244
 10557  1B13  00A8               	movwf	(_i2c_status^(0+256)+8)
 10558  1B14  3001               	movlw	1
 10559  1B15  00A9               	movwf	(_i2c_status^(0+256)+9)
 10560                           
 10561                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
 10562  1B16  1520               	bsf	_i2c_status^(0+256),2
 10563                           
 10564                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
 10565  1B17  3068               	movlw	low _returnStop
 10566  1B18  00AC               	movwf	(low ((_i2c_status| (0+256)+12)))^0
 10567  1B19  3022               	movlw	high _returnStop
 10568  1B1A  00AD               	movwf	((low ((_i2c_status| (0+256)+12)))^0+1)
 10569                           
 10570                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
 10571  1B1B  01B8               	clrf	(low ((_i2c_status| (0+256)+24)))^0
 10572                           
 10573                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
 10574  1B1C  3068               	movlw	low _returnStop
 10575  1B1D  00AE               	movwf	(low ((_i2c_status| (0+256)+14)))^0
 10576  1B1E  3022               	movlw	high _returnStop
 10577  1B1F  00AF               	movwf	((low ((_i2c_status| (0+256)+14)))^0+1)
 10578                           
 10579                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
 10580  1B20  01B9               	clrf	(low ((_i2c_status| (0+256)+25)))^0
 10581                           
 10582                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
 10583  1B21  3068               	movlw	low _returnStop
 10584  1B22  00B0               	movwf	(low ((_i2c_status| (0+256)+16)))^0
 10585  1B23  3022               	movlw	high _returnStop
 10586  1B24  00B1               	movwf	((low ((_i2c_status| (0+256)+16)))^0+1)
 10587                           
 10588                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
 10589  1B25  01BA               	clrf	(low ((_i2c_status| (0+256)+26)))^0
 10590                           
 10591                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
 10592  1B26  3068               	movlw	low _returnStop
 10593  1B27  00B2               	movwf	(low ((_i2c_status| (0+256)+18)))^0
 10594  1B28  3022               	movlw	high _returnStop
 10595  1B29  00B3               	movwf	((low ((_i2c_status| (0+256)+18)))^0+1)
 10596                           
 10597                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
 10598  1B2A  01BB               	clrf	(low ((_i2c_status| (0+256)+27)))^0
 10599                           
 10600                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
 10601  1B2B  306E               	movlw	low _returnReset
 10602  1B2C  00B4               	movwf	(low ((_i2c_status| (0+256)+20)))^0
 10603  1B2D  3022               	movlw	high _returnReset
 10604  1B2E  00B5               	movwf	((low ((_i2c_status| (0+256)+20)))^0+1)
 10605                           
 10606                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
 10607  1B2F  01BC               	clrf	(low ((_i2c_status| (0+256)+28)))^0
 10608                           
 10609                           ;i2c_master.c: 142: i2c1_driver_open();
 10610  1B30  31A3  2342  319A   	fcall	_i2c1_driver_open
 10611                           
 10612                           ;i2c_master.c: 143: mssp1_clearIRQ();
 10613  1B33  31A2  220D  319A   	fcall	_mssp1_clearIRQ
 10614                           
 10615                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
 10616  1B36  30E0               	movlw	low _i2c_busCollisionISR
 10617  1B37  0020               	movlb	0	; select bank0
 10618  1B38  00B1               	movwf	i2c1_driver_setBusCollisionISR@f
 10619  1B39  3021               	movlw	high _i2c_busCollisionISR
 10620  1B3A  00B2               	movwf	i2c1_driver_setBusCollisionISR@f+1
 10621  1B3B  31A3  2308  319A   	fcall	_i2c1_driver_setBusCollisionISR
 10622                           
 10623                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
 10624  1B3E  30F7               	movlw	low _i2c_ISR
 10625  1B3F  0020               	movlb	0	; select bank0
 10626  1B40  00B1               	movwf	i2c1_driver_setI2cISR@f
 10627  1B41  3026               	movlw	high _i2c_ISR
 10628  1B42  00B2               	movwf	i2c1_driver_setI2cISR@f+1
 10629  1B43  31A3  2311         	fcall	_i2c1_driver_setI2cISR
 10630                           
 10631                           ;i2c_master.c: 151: ret = I2C_NOERR;
 10632  1B45  0020               	movlb	0	; select bank0
 10633  1B46  01B4               	clrf	i2c_open@ret
 10634  1B47  0008               	return
 10635  1B48                     __end_of_i2c_open:	
 10636                           ;i2c_master.c: 152: }
 10637                           ;i2c_master.c: 153: return ret;
 10638                           ;	Return value of _i2c_open is never used
 10639                           
 10640                           
 10641                           	psect	text15
 10642  2311                     __ptext15:	
 10643 ;; *************** function _i2c1_driver_setI2cISR *****************
 10644 ;; Defined at:
 10645 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;  f               2   17[BANK0 ] PTR void 
 10648 ;;		 -> i2c_ISR(1), 
 10649 ;; Auto vars:     Size  Location     Type
 10650 ;;		None
 10651 ;; Return value:  Size  Location     Type
 10652 ;;                  1    wreg      void 
 10653 ;; Registers used:
 10654 ;;		wreg
 10655 ;; Tracked objects:
 10656 ;;		On entry : 0/0
 10657 ;;		On exit  : 0/0
 10658 ;;		Unchanged: 0/0
 10659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10660 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10663 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10664 ;;Total ram usage:        2 bytes
 10665 ;; Hardware stack levels used:    1
 10666 ;; Hardware stack levels required when called:    6
 10667 ;; This function calls:
 10668 ;;		Nothing
 10669 ;; This function is called by:
 10670 ;;		_i2c_open
 10671 ;; This function uses a non-reentrant model
 10672 ;;
 10673                           
 10674                           
 10675                           ;psect for function _i2c1_driver_setI2cISR
 10676  2311                     _i2c1_driver_setI2cISR:	
 10677                           
 10678                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
 10679                           
 10680                           ;incstack = 0
 10681                           ; Regs used in _i2c1_driver_setI2cISR: [wreg]
 10682  2311  0020               	movlb	0	; select bank0
 10683  2312  0832               	movf	i2c1_driver_setI2cISR@f+1,w
 10684  2313  0022               	movlb	2	; select bank2
 10685  2314  00E9               	movwf	(_i2c1_driver_i2cISR+1)^(0+256)
 10686  2315  0020               	movlb	0	; select bank0
 10687  2316  0831               	movf	i2c1_driver_setI2cISR@f,w
 10688  2317  0022               	movlb	2	; select bank2
 10689  2318  00E8               	movwf	_i2c1_driver_i2cISR^(0+256)
 10690  2319  0008               	return
 10691  231A                     __end_of_i2c1_driver_setI2cISR:	
 10692                           
 10693                           	psect	text16
 10694  2308                     __ptext16:	
 10695 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
 10696 ;; Defined at:
 10697 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
 10698 ;; Parameters:    Size  Location     Type
 10699 ;;  f               2   17[BANK0 ] PTR void 
 10700 ;;		 -> i2c_busCollisionISR(1), 
 10701 ;; Auto vars:     Size  Location     Type
 10702 ;;		None
 10703 ;; Return value:  Size  Location     Type
 10704 ;;                  1    wreg      void 
 10705 ;; Registers used:
 10706 ;;		wreg
 10707 ;; Tracked objects:
 10708 ;;		On entry : 0/0
 10709 ;;		On exit  : 0/0
 10710 ;;		Unchanged: 0/0
 10711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10712 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10715 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10716 ;;Total ram usage:        2 bytes
 10717 ;; Hardware stack levels used:    1
 10718 ;; Hardware stack levels required when called:    6
 10719 ;; This function calls:
 10720 ;;		Nothing
 10721 ;; This function is called by:
 10722 ;;		_i2c_open
 10723 ;; This function uses a non-reentrant model
 10724 ;;
 10725                           
 10726                           
 10727                           ;psect for function _i2c1_driver_setBusCollisionISR
 10728  2308                     _i2c1_driver_setBusCollisionISR:	
 10729                           
 10730                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
 10731                           
 10732                           ;incstack = 0
 10733                           ; Regs used in _i2c1_driver_setBusCollisionISR: [wreg]
 10734  2308  0020               	movlb	0	; select bank0
 10735  2309  0832               	movf	i2c1_driver_setBusCollisionISR@f+1,w
 10736  230A  0022               	movlb	2	; select bank2
 10737  230B  00EB               	movwf	(_i2c1_driver_busCollisionISR+1)^(0+256)
 10738  230C  0020               	movlb	0	; select bank0
 10739  230D  0831               	movf	i2c1_driver_setBusCollisionISR@f,w
 10740  230E  0022               	movlb	2	; select bank2
 10741  230F  00EA               	movwf	_i2c1_driver_busCollisionISR^(0+256)
 10742  2310  0008               	return
 10743  2311                     __end_of_i2c1_driver_setBusCollisionISR:	
 10744                           
 10745                           	psect	text17
 10746  2342                     __ptext17:	
 10747 ;; *************** function _i2c1_driver_open *****************
 10748 ;; Defined at:
 10749 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;		None
 10752 ;; Auto vars:     Size  Location     Type
 10753 ;;		None
 10754 ;; Return value:  Size  Location     Type
 10755 ;;		None               void
 10756 ;; Registers used:
 10757 ;;		wreg, status,2
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/0
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10767 ;;Total ram usage:        0 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:    6
 10770 ;; This function calls:
 10771 ;;		Nothing
 10772 ;; This function is called by:
 10773 ;;		_i2c_open
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           
 10778                           ;psect for function _i2c1_driver_open
 10779  2342                     _i2c1_driver_open:	
 10780                           
 10781                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 10782                           
 10783                           ;incstack = 0
 10784                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 10785  2342  0024               	movlb	4	; select bank4
 10786  2343  1A95               	btfsc	21,5	;volatile
 10787  2344  0008               	return
 10788                           
 10789                           ;i2c1_driver.c: 86: {
 10790                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
 10791  2345  0194               	clrf	20	;volatile
 10792                           
 10793                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 10794  2346  3028               	movlw	40
 10795  2347  0095               	movwf	21	;volatile
 10796                           
 10797                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 10798  2348  0196               	clrf	22	;volatile
 10799                           
 10800                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 10801  2349  3003               	movlw	3
 10802  234A  0092               	movwf	18	;volatile
 10803                           
 10804                           ;i2c1_driver.c: 93: else
 10805                           ;i2c1_driver.c: 94: return 0;
 10806                           ;	Return value of _i2c1_driver_open is never used
 10807                           
 10808                           ;i2c1_driver.c: 92: }
 10809                           
 10810                           ;i2c1_driver.c: 91: return 1;
 10811                           ;	Return value of _i2c1_driver_open is never used
 10812  234B  0008               	return
 10813  234C                     __end_of_i2c1_driver_open:	
 10814                           
 10815                           	psect	text18
 10816  2338                     __ptext18:	
 10817 ;; *************** function _drv_reset *****************
 10818 ;; Defined at:
 10819 ;;		line 23 in file "drv2665.c"
 10820 ;; Parameters:    Size  Location     Type
 10821 ;;		None
 10822 ;; Auto vars:     Size  Location     Type
 10823 ;;		None
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  1    wreg      void 
 10826 ;; Registers used:
 10827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/0
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10835 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10836 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10837 ;;Total ram usage:        1 bytes
 10838 ;; Hardware stack levels used:    1
 10839 ;; Hardware stack levels required when called:   13
 10840 ;; This function calls:
 10841 ;;		_drv_write
 10842 ;; This function is called by:
 10843 ;;		_drv_init
 10844 ;; This function uses a non-reentrant model
 10845 ;;
 10846                           
 10847                           
 10848                           ;psect for function _drv_reset
 10849  2338                     _drv_reset:	
 10850                           
 10851                           ;drv2665.c: 24: drv_write(0x02, 0x80);
 10852                           
 10853                           ;incstack = 0
 10854                           ; Regs used in _drv_reset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10855  2338  3080               	movlw	128
 10856  2339  0021               	movlb	1	; select bank1
 10857  233A  00B5               	movwf	??_drv_reset^(0+128)
 10858  233B  0835               	movf	??_drv_reset^(0+128),w
 10859  233C  0020               	movlb	0	; select bank0
 10860  233D  00C9               	movwf	drv_write@data
 10861  233E  3002               	movlw	2
 10862  233F  31A6  268A         	fcall	_drv_write
 10863  2341  0008               	return
 10864  2342                     __end_of_drv_reset:	
 10865                           
 10866                           	psect	text19
 10867  0370                     __ptext19:	
 10868 ;; *************** function _execCmd *****************
 10869 ;; Defined at:
 10870 ;;		line 72 in file "cmd_parser.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;  s               1    wreg     PTR struct CMD_STRUCT
 10873 ;;		 -> cmd_struct(21), 
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;  s               1   52[BANK1 ] PTR struct CMD_STRUCT
 10876 ;;		 -> cmd_struct(21), 
 10877 ;; Return value:  Size  Location     Type
 10878 ;;                  2  958[None  ] int 
 10879 ;; Registers used:
 10880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10881 ;; Tracked objects:
 10882 ;;		On entry : 0/0
 10883 ;;		On exit  : 0/0
 10884 ;;		Unchanged: 0/0
 10885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10887 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10889 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10890 ;;Total ram usage:        1 bytes
 10891 ;; Hardware stack levels used:    1
 10892 ;; Hardware stack levels required when called:   16
 10893 ;; This function calls:
 10894 ;;		_commCheck
 10895 ;;		_doMove
 10896 ;;		_getActive
 10897 ;;		_getMotionStatus
 10898 ;;		_getMoveMask
 10899 ;;		_getPosition
 10900 ;;		_printf
 10901 ;;		_setActive
 10902 ;;		_setDrvGain
 10903 ;;		_setDrvPeak
 10904 ;;		_setDrvPiezoOnTime
 10905 ;;		_setHeaterPostTime
 10906 ;;		_setHeaterPreTime
 10907 ;;		_setHeaterToggle
 10908 ;;		_setLEDBrightnessRange
 10909 ;;		_setLEDPwr
 10910 ;;		_setMoveMask
 10911 ;;		_startAbsMove
 10912 ;;		_startRelMove
 10913 ;;		_timedActiveHeatOn
 10914 ;;		_zeroPosition
 10915 ;; This function is called by:
 10916 ;;		_main
 10917 ;; This function uses a non-reentrant model
 10918 ;;
 10919                           
 10920                           
 10921                           ;psect for function _execCmd
 10922  0370                     _execCmd:	
 10923                           
 10924                           ;incstack = 0
 10925 ;; hardware stack exceeded
 10926                           ; Regs used in _execCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10927                           ;execCmd@s stored from wreg
 10928  0370  0021               	movlb	1	; select bank1
 10929  0371  00D4               	movwf	execCmd@s^(0+128)
 10930                           
 10931                           ;cmd_parser.c: 73: errorOut = 1;
 10932  0372  3001               	movlw	1
 10933  0373  0022               	movlb	2	; select bank2
 10934  0374  00E6               	movwf	_errorOut^(0+256)
 10935  0375  3000               	movlw	0
 10936  0376  00E7               	movwf	(_errorOut^(0+256)+1)
 10937                           
 10938                           ;cmd_parser.c: 75: switch(s->c){
 10939  0377  2D1C               	goto	l8376
 10940  0378                     l8332:	
 10941                           ;cmd_parser.c: 76: case CMD_REL: errorOut = startRelMove(s->p1.paramI); break;
 10942                           
 10943  0378  0021               	movlb	1	; select bank1
 10944  0379  0A54               	incf	execCmd@s^(0+128),w
 10945  037A  0086               	movwf	6
 10946  037B  3001               	movlw	1	; select bank2/3
 10947  037C  0087               	movwf	7
 10948  037D  3F40               	moviw [0]fsr1
 10949  037E  00B5               	movwf	startRelMove@steps^(0+128)
 10950  037F  3F41               	moviw [1]fsr1
 10951  0380  00B6               	movwf	(startRelMove@steps+1)^(0+128)
 10952  0381  31A4  2491         	fcall	_startRelMove
 10953  0383  0021               	movlb	1	; select bank1
 10954  0384  0836               	movf	(?_startRelMove+1)^(0+128),w
 10955  0385  0022               	movlb	2	; select bank2
 10956  0386  00E7               	movwf	(_errorOut+1)^(0+256)
 10957  0387  0021               	movlb	1	; select bank1
 10958  0388  0835               	movf	?_startRelMove^(0+128),w
 10959  0389  0022               	movlb	2	; select bank2
 10960  038A  00E6               	movwf	_errorOut^(0+256)
 10961  038B  0008               	return
 10962  038C                     l8334:	
 10963                           ;cmd_parser.c: 77: case CMD_ABS: errorOut = startAbsMove(s->p1.paramI); break;
 10964                           
 10965  038C  0021               	movlb	1	; select bank1
 10966  038D  0A54               	incf	execCmd@s^(0+128),w
 10967  038E  0086               	movwf	6
 10968  038F  3001               	movlw	1	; select bank2/3
 10969  0390  0087               	movwf	7
 10970  0391  3F40               	moviw [0]fsr1
 10971  0392  00B5               	movwf	startAbsMove@steps^(0+128)
 10972  0393  3F41               	moviw [1]fsr1
 10973  0394  00B6               	movwf	(startAbsMove@steps+1)^(0+128)
 10974  0395  31A4  24E4         	fcall	_startAbsMove
 10975  0397  0021               	movlb	1	; select bank1
 10976  0398  0836               	movf	(?_startAbsMove+1)^(0+128),w
 10977  0399  0022               	movlb	2	; select bank2
 10978  039A  00E7               	movwf	(_errorOut+1)^(0+256)
 10979  039B  0021               	movlb	1	; select bank1
 10980  039C  0835               	movf	?_startAbsMove^(0+128),w
 10981  039D  0022               	movlb	2	; select bank2
 10982  039E  00E6               	movwf	_errorOut^(0+256)
 10983  039F  0008               	return
 10984  03A0                     l8336:	
 10985                           ;cmd_parser.c: 78: case CMD_P: errorOut = getPosition(s->p1.paramI); break;
 10986                           
 10987  03A0  0021               	movlb	1	; select bank1
 10988  03A1  0A54               	incf	execCmd@s^(0+128),w
 10989  03A2  0086               	movwf	6
 10990  03A3  3001               	movlw	1	; select bank2/3
 10991  03A4  0087               	movwf	7
 10992  03A5  3F40               	moviw [0]fsr1
 10993  03A6  00B5               	movwf	getPosition@a^(0+128)
 10994  03A7  3F41               	moviw [1]fsr1
 10995  03A8  00B6               	movwf	(getPosition@a+1)^(0+128)
 10996  03A9  3199  2118         	fcall	_getPosition
 10997  03AB  0021               	movlb	1	; select bank1
 10998  03AC  0836               	movf	(?_getPosition+1)^(0+128),w
 10999  03AD  0022               	movlb	2	; select bank2
 11000  03AE  00E7               	movwf	(_errorOut+1)^(0+256)
 11001  03AF  0021               	movlb	1	; select bank1
 11002  03B0  0835               	movf	?_getPosition^(0+128),w
 11003  03B1  0022               	movlb	2	; select bank2
 11004  03B2  00E6               	movwf	_errorOut^(0+256)
 11005  03B3  0008               	return
 11006  03B4                     l8338:	
 11007                           ;cmd_parser.c: 79: case CMD_ZERO: errorOut = zeroPosition(); break;
 11008                           
 11009  03B4  3196  2623         	fcall	_zeroPosition
 11010  03B6  0021               	movlb	1	; select bank1
 11011  03B7  0836               	movf	(?_zeroPosition+1)^(0+128),w
 11012  03B8  0022               	movlb	2	; select bank2
 11013  03B9  00E7               	movwf	(_errorOut+1)^(0+256)
 11014  03BA  0021               	movlb	1	; select bank1
 11015  03BB  0835               	movf	?_zeroPosition^(0+128),w
 11016  03BC  0022               	movlb	2	; select bank2
 11017  03BD  00E6               	movwf	_errorOut^(0+256)
 11018  03BE  0008               	return
 11019  03BF                     l8340:	
 11020                           ;cmd_parser.c: 82: case CMD_DRV_PEAK: errorOut = setDrvPeak(s->p1.paramI); break;
 11021                           
 11022  03BF  0021               	movlb	1	; select bank1
 11023  03C0  0A54               	incf	execCmd@s^(0+128),w
 11024  03C1  0086               	movwf	6
 11025  03C2  3001               	movlw	1	; select bank2/3
 11026  03C3  0087               	movwf	7
 11027  03C4  3F40               	moviw [0]fsr1
 11028  03C5  00B5               	movwf	setDrvPeak@pk^(0+128)
 11029  03C6  3F41               	moviw [1]fsr1
 11030  03C7  00B6               	movwf	(setDrvPeak@pk+1)^(0+128)
 11031  03C8  31A4  2406         	fcall	_setDrvPeak
 11032  03CA  0021               	movlb	1	; select bank1
 11033  03CB  0836               	movf	(?_setDrvPeak+1)^(0+128),w
 11034  03CC  0022               	movlb	2	; select bank2
 11035  03CD  00E7               	movwf	(_errorOut+1)^(0+256)
 11036  03CE  0021               	movlb	1	; select bank1
 11037  03CF  0835               	movf	?_setDrvPeak^(0+128),w
 11038  03D0  0022               	movlb	2	; select bank2
 11039  03D1  00E6               	movwf	_errorOut^(0+256)
 11040  03D2  0008               	return
 11041  03D3                     l8342:	
 11042                           ;cmd_parser.c: 83: case CMD_DRV_GAIN: errorOut = setDrvGain(s->p1.paramI); break;
 11043                           
 11044  03D3  0021               	movlb	1	; select bank1
 11045  03D4  0A54               	incf	execCmd@s^(0+128),w
 11046  03D5  0086               	movwf	6
 11047  03D6  3001               	movlw	1	; select bank2/3
 11048  03D7  0087               	movwf	7
 11049  03D8  3F40               	moviw [0]fsr1
 11050  03D9  00B5               	movwf	setDrvGain@gain^(0+128)
 11051  03DA  3F41               	moviw [1]fsr1
 11052  03DB  00B6               	movwf	(setDrvGain@gain+1)^(0+128)
 11053  03DC  3199  219A         	fcall	_setDrvGain
 11054  03DE  0021               	movlb	1	; select bank1
 11055  03DF  0836               	movf	(?_setDrvGain+1)^(0+128),w
 11056  03E0  0022               	movlb	2	; select bank2
 11057  03E1  00E7               	movwf	(_errorOut+1)^(0+256)
 11058  03E2  0021               	movlb	1	; select bank1
 11059  03E3  0835               	movf	?_setDrvGain^(0+128),w
 11060  03E4  0022               	movlb	2	; select bank2
 11061  03E5  00E6               	movwf	_errorOut^(0+256)
 11062  03E6  0008               	return
 11063  03E7                     l8344:	
 11064                           ;cmd_parser.c: 84: case CMD_DRV_PIEZOONTIME: errorOut = setDrvPiezoOnTime(s->p1.paramI);
      +                           break;
 11065                           
 11066  03E7  0021               	movlb	1	; select bank1
 11067  03E8  0A54               	incf	execCmd@s^(0+128),w
 11068  03E9  0086               	movwf	6
 11069  03EA  3001               	movlw	1	; select bank2/3
 11070  03EB  0087               	movwf	7
 11071  03EC  3F40               	moviw [0]fsr1
 11072  03ED  00BD               	movwf	setDrvPiezoOnTime@t^(0+128)
 11073  03EE  3F41               	moviw [1]fsr1
 11074  03EF  00BE               	movwf	(setDrvPiezoOnTime@t+1)^(0+128)
 11075  03F0  319E  2683         	fcall	_setDrvPiezoOnTime
 11076  03F2  0021               	movlb	1	; select bank1
 11077  03F3  083E               	movf	(?_setDrvPiezoOnTime+1)^(0+128),w
 11078  03F4  0022               	movlb	2	; select bank2
 11079  03F5  00E7               	movwf	(_errorOut+1)^(0+256)
 11080  03F6  0021               	movlb	1	; select bank1
 11081  03F7  083D               	movf	?_setDrvPiezoOnTime^(0+128),w
 11082  03F8  0022               	movlb	2	; select bank2
 11083  03F9  00E6               	movwf	_errorOut^(0+256)
 11084  03FA  0008               	return
 11085  03FB                     l8346:	
 11086                           ;cmd_parser.c: 87: case CMD_HEATER_PRETIME: errorOut = setHeaterPreTime(s->p1.paramI); b
      +                          reak;
 11087                           
 11088  03FB  0021               	movlb	1	; select bank1
 11089  03FC  0A54               	incf	execCmd@s^(0+128),w
 11090  03FD  0086               	movwf	6
 11091  03FE  3001               	movlw	1	; select bank2/3
 11092  03FF  0087               	movwf	7
 11093  0400  3F40               	moviw [0]fsr1
 11094  0401  00BD               	movwf	setHeaterPreTime@t^(0+128)
 11095  0402  3F41               	moviw [1]fsr1
 11096  0403  00BE               	movwf	(setHeaterPreTime@t+1)^(0+128)
 11097  0404  319E  26DE         	fcall	_setHeaterPreTime
 11098  0406  0021               	movlb	1	; select bank1
 11099  0407  083E               	movf	(?_setHeaterPreTime+1)^(0+128),w
 11100  0408  0022               	movlb	2	; select bank2
 11101  0409  00E7               	movwf	(_errorOut+1)^(0+256)
 11102  040A  0021               	movlb	1	; select bank1
 11103  040B  083D               	movf	?_setHeaterPreTime^(0+128),w
 11104  040C  0022               	movlb	2	; select bank2
 11105  040D  00E6               	movwf	_errorOut^(0+256)
 11106  040E  0008               	return
 11107  040F                     l8348:	
 11108                           ;cmd_parser.c: 88: case CMD_HEATER_POSTTIME: errorOut = setHeaterPostTime(s->p1.paramI);
      +                           break;
 11109                           
 11110  040F  0021               	movlb	1	; select bank1
 11111  0410  0A54               	incf	execCmd@s^(0+128),w
 11112  0411  0086               	movwf	6
 11113  0412  3001               	movlw	1	; select bank2/3
 11114  0413  0087               	movwf	7
 11115  0414  3F40               	moviw [0]fsr1
 11116  0415  00BD               	movwf	setHeaterPostTime@t^(0+128)
 11117  0416  3F41               	moviw [1]fsr1
 11118  0417  00BE               	movwf	(setHeaterPostTime@t+1)^(0+128)
 11119  0418  319C  24D2         	fcall	_setHeaterPostTime
 11120  041A  0021               	movlb	1	; select bank1
 11121  041B  083E               	movf	(?_setHeaterPostTime+1)^(0+128),w
 11122  041C  0022               	movlb	2	; select bank2
 11123  041D  00E7               	movwf	(_errorOut+1)^(0+256)
 11124  041E  0021               	movlb	1	; select bank1
 11125  041F  083D               	movf	?_setHeaterPostTime^(0+128),w
 11126  0420  0022               	movlb	2	; select bank2
 11127  0421  00E6               	movwf	_errorOut^(0+256)
 11128  0422  0008               	return
 11129  0423                     l8350:	
 11130                           ;cmd_parser.c: 89: case CMD_HEATER_GAIN: errorOut = setLEDBrightnessRange(s->p1.paramI, 
      +                          s->p2.paramI); break;
 11131                           
 11132  0423  0021               	movlb	1	; select bank1
 11133  0424  0A54               	incf	execCmd@s^(0+128),w
 11134  0425  0086               	movwf	6
 11135  0426  3001               	movlw	1	; select bank2/3
 11136  0427  0087               	movwf	7
 11137  0428  3F40               	moviw [0]fsr1
 11138  0429  00B5               	movwf	setLEDBrightnessRange@r^(0+128)
 11139  042A  3F41               	moviw [1]fsr1
 11140  042B  00B6               	movwf	(setLEDBrightnessRange@r+1)^(0+128)
 11141  042C  0854               	movf	execCmd@s^(0+128),w
 11142  042D  3E0B               	addlw	11
 11143  042E  0086               	movwf	6
 11144  042F  3001               	movlw	1	; select bank2/3
 11145  0430  0087               	movwf	7
 11146  0431  3F40               	moviw [0]fsr1
 11147  0432  00B7               	movwf	setLEDBrightnessRange@tOB^(0+128)
 11148  0433  3F41               	moviw [1]fsr1
 11149  0434  00B8               	movwf	(setLEDBrightnessRange@tOB+1)^(0+128)
 11150  0435  31A5  251F         	fcall	_setLEDBrightnessRange
 11151  0437  0021               	movlb	1	; select bank1
 11152  0438  0836               	movf	(?_setLEDBrightnessRange+1)^(0+128),w
 11153  0439  0022               	movlb	2	; select bank2
 11154  043A  00E7               	movwf	(_errorOut+1)^(0+256)
 11155  043B  0021               	movlb	1	; select bank1
 11156  043C  0835               	movf	?_setLEDBrightnessRange^(0+128),w
 11157  043D  0022               	movlb	2	; select bank2
 11158  043E  00E6               	movwf	_errorOut^(0+256)
 11159  043F  0008               	return
 11160  0440                     l8352:	
 11161                           ;cmd_parser.c: 90: case CMD_HEATER_PWR: errorOut = setLEDPwr(s->p1.paramI, s->p2.paramI)
      +                          ; break;
 11162                           
 11163  0440  0021               	movlb	1	; select bank1
 11164  0441  0A54               	incf	execCmd@s^(0+128),w
 11165  0442  0086               	movwf	6
 11166  0443  3001               	movlw	1	; select bank2/3
 11167  0444  0087               	movwf	7
 11168  0445  3F40               	moviw [0]fsr1
 11169  0446  00B5               	movwf	setLEDPwr@pwr^(0+128)
 11170  0447  3F41               	moviw [1]fsr1
 11171  0448  00B6               	movwf	(setLEDPwr@pwr+1)^(0+128)
 11172  0449  0854               	movf	execCmd@s^(0+128),w
 11173  044A  3E0B               	addlw	11
 11174  044B  0086               	movwf	6
 11175  044C  3001               	movlw	1	; select bank2/3
 11176  044D  0087               	movwf	7
 11177  044E  3F40               	moviw [0]fsr1
 11178  044F  00B7               	movwf	setLEDPwr@topOrBottom^(0+128)
 11179  0450  3F41               	moviw [1]fsr1
 11180  0451  00B8               	movwf	(setLEDPwr@topOrBottom+1)^(0+128)
 11181  0452  31A5  253D         	fcall	_setLEDPwr
 11182  0454  0021               	movlb	1	; select bank1
 11183  0455  0836               	movf	(?_setLEDPwr+1)^(0+128),w
 11184  0456  0022               	movlb	2	; select bank2
 11185  0457  00E7               	movwf	(_errorOut+1)^(0+256)
 11186  0458  0021               	movlb	1	; select bank1
 11187  0459  0835               	movf	?_setLEDPwr^(0+128),w
 11188  045A  0022               	movlb	2	; select bank2
 11189  045B  00E6               	movwf	_errorOut^(0+256)
 11190  045C  0008               	return
 11191  045D                     l8354:	
 11192                           ;cmd_parser.c: 91: case CMD_HEATER_TOGGLE: errorOut = setHeaterToggle(s->p1.paramI, s->p
      +                          2.paramI); break;
 11193                           
 11194  045D  0021               	movlb	1	; select bank1
 11195  045E  0A54               	incf	execCmd@s^(0+128),w
 11196  045F  0086               	movwf	6
 11197  0460  3001               	movlw	1	; select bank2/3
 11198  0461  0087               	movwf	7
 11199  0462  3F40               	moviw [0]fsr1
 11200  0463  00B5               	movwf	setHeaterToggle@num^(0+128)
 11201  0464  3F41               	moviw [1]fsr1
 11202  0465  00B6               	movwf	(setHeaterToggle@num+1)^(0+128)
 11203  0466  0854               	movf	execCmd@s^(0+128),w
 11204  0467  3E0B               	addlw	11
 11205  0468  0086               	movwf	6
 11206  0469  3001               	movlw	1	; select bank2/3
 11207  046A  0087               	movwf	7
 11208  046B  3F40               	moviw [0]fsr1
 11209  046C  00B7               	movwf	setHeaterToggle@topOrB^(0+128)
 11210  046D  3F41               	moviw [1]fsr1
 11211  046E  00B8               	movwf	(setHeaterToggle@topOrB+1)^(0+128)
 11212  046F  3188  2015         	fcall	_setHeaterToggle
 11213  0471  0021               	movlb	1	; select bank1
 11214  0472  0836               	movf	(?_setHeaterToggle+1)^(0+128),w
 11215  0473  0022               	movlb	2	; select bank2
 11216  0474  00E7               	movwf	(_errorOut+1)^(0+256)
 11217  0475  0021               	movlb	1	; select bank1
 11218  0476  0835               	movf	?_setHeaterToggle^(0+128),w
 11219  0477  0022               	movlb	2	; select bank2
 11220  0478  00E6               	movwf	_errorOut^(0+256)
 11221  0479  0008               	return
 11222  047A                     l8356:	
 11223                           ;cmd_parser.c: 92: case CMD_HEATER_TIMED: errorOut = timedActiveHeatOn(s->p1.paramL, s->
      +                          p2.paramI); break;
 11224                           
 11225  047A  0021               	movlb	1	; select bank1
 11226  047B  0A54               	incf	execCmd@s^(0+128),w
 11227  047C  0086               	movwf	6
 11228  047D  3001               	movlw	1	; select bank2/3
 11229  047E  0087               	movwf	7
 11230  047F  3F40               	moviw [0]fsr1
 11231  0480  00B5               	movwf	timedActiveHeatOn@onTime^(0+128)
 11232  0481  3F41               	moviw [1]fsr1
 11233  0482  00B6               	movwf	(timedActiveHeatOn@onTime+1)^(0+128)
 11234  0483  3F42               	moviw [2]fsr1
 11235  0484  00B7               	movwf	(timedActiveHeatOn@onTime+2)^(0+128)
 11236  0485  3F43               	moviw [3]fsr1
 11237  0486  00B8               	movwf	(timedActiveHeatOn@onTime+3)^(0+128)
 11238  0487  0854               	movf	execCmd@s^(0+128),w
 11239  0488  3E0B               	addlw	11
 11240  0489  0086               	movwf	6
 11241  048A  3001               	movlw	1	; select bank2/3
 11242  048B  0087               	movwf	7
 11243  048C  3F40               	moviw [0]fsr1
 11244  048D  00B9               	movwf	timedActiveHeatOn@topOrB^(0+128)
 11245  048E  3F41               	moviw [1]fsr1
 11246  048F  00BA               	movwf	(timedActiveHeatOn@topOrB+1)^(0+128)
 11247  0490  3189  21A2         	fcall	_timedActiveHeatOn
 11248  0492  0021               	movlb	1	; select bank1
 11249  0493  0836               	movf	(?_timedActiveHeatOn+1)^(0+128),w
 11250  0494  0022               	movlb	2	; select bank2
 11251  0495  00E7               	movwf	(_errorOut+1)^(0+256)
 11252  0496  0021               	movlb	1	; select bank1
 11253  0497  0835               	movf	?_timedActiveHeatOn^(0+128),w
 11254  0498  0022               	movlb	2	; select bank2
 11255  0499  00E6               	movwf	_errorOut^(0+256)
 11256  049A  0008               	return
 11257  049B                     l8358:	
 11258                           ;cmd_parser.c: 95: case CMD_SETA: errorOut = setActive(s->p1.paramI, s->p2.paramI); brea
      +                          k;
 11259                           
 11260  049B  0021               	movlb	1	; select bank1
 11261  049C  0A54               	incf	execCmd@s^(0+128),w
 11262  049D  0086               	movwf	6
 11263  049E  3001               	movlw	1	; select bank2/3
 11264  049F  0087               	movwf	7
 11265  04A0  3F40               	moviw [0]fsr1
 11266  04A1  00B5               	movwf	setActive@probeNum^(0+128)
 11267  04A2  3F41               	moviw [1]fsr1
 11268  04A3  00B6               	movwf	(setActive@probeNum+1)^(0+128)
 11269  04A4  0854               	movf	execCmd@s^(0+128),w
 11270  04A5  3E0B               	addlw	11
 11271  04A6  0086               	movwf	6
 11272  04A7  3001               	movlw	1	; select bank2/3
 11273  04A8  0087               	movwf	7
 11274  04A9  3F40               	moviw [0]fsr1
 11275  04AA  00B7               	movwf	setActive@onOff^(0+128)
 11276  04AB  3F41               	moviw [1]fsr1
 11277  04AC  00B8               	movwf	(setActive@onOff+1)^(0+128)
 11278  04AD  3196  2698         	fcall	_setActive
 11279  04AF  0021               	movlb	1	; select bank1
 11280  04B0  0836               	movf	(?_setActive+1)^(0+128),w
 11281  04B1  0022               	movlb	2	; select bank2
 11282  04B2  00E7               	movwf	(_errorOut+1)^(0+256)
 11283  04B3  0021               	movlb	1	; select bank1
 11284  04B4  0835               	movf	?_setActive^(0+128),w
 11285  04B5  0022               	movlb	2	; select bank2
 11286  04B6  00E6               	movwf	_errorOut^(0+256)
 11287  04B7  0008               	return
 11288  04B8                     l8360:	
 11289                           ;cmd_parser.c: 96: case CMD_SETM: errorOut = setMoveMask(s->p1.paramI, s->p2.paramI); br
      +                          eak;
 11290                           
 11291  04B8  0021               	movlb	1	; select bank1
 11292  04B9  0A54               	incf	execCmd@s^(0+128),w
 11293  04BA  0086               	movwf	6
 11294  04BB  3001               	movlw	1	; select bank2/3
 11295  04BC  0087               	movwf	7
 11296  04BD  3F40               	moviw [0]fsr1
 11297  04BE  00B5               	movwf	setMoveMask@probeNum^(0+128)
 11298  04BF  3F41               	moviw [1]fsr1
 11299  04C0  00B6               	movwf	(setMoveMask@probeNum+1)^(0+128)
 11300  04C1  0854               	movf	execCmd@s^(0+128),w
 11301  04C2  3E0B               	addlw	11
 11302  04C3  0086               	movwf	6
 11303  04C4  3001               	movlw	1	; select bank2/3
 11304  04C5  0087               	movwf	7
 11305  04C6  3F40               	moviw [0]fsr1
 11306  04C7  00B7               	movwf	setMoveMask@onOff^(0+128)
 11307  04C8  3F41               	moviw [1]fsr1
 11308  04C9  00B8               	movwf	(setMoveMask@onOff+1)^(0+128)
 11309  04CA  3195  253B         	fcall	_setMoveMask
 11310  04CC  0021               	movlb	1	; select bank1
 11311  04CD  0836               	movf	(?_setMoveMask+1)^(0+128),w
 11312  04CE  0022               	movlb	2	; select bank2
 11313  04CF  00E7               	movwf	(_errorOut+1)^(0+256)
 11314  04D0  0021               	movlb	1	; select bank1
 11315  04D1  0835               	movf	?_setMoveMask^(0+128),w
 11316  04D2  0022               	movlb	2	; select bank2
 11317  04D3  00E6               	movwf	_errorOut^(0+256)
 11318  04D4  0008               	return
 11319  04D5                     l8362:	
 11320                           ;cmd_parser.c: 97: case CMD_GET_ACTIVE: errorOut = getActive(); break;
 11321                           
 11322  04D5  319B  2348         	fcall	_getActive
 11323  04D7  0021               	movlb	1	; select bank1
 11324  04D8  0836               	movf	(?_getActive+1)^(0+128),w
 11325  04D9  0022               	movlb	2	; select bank2
 11326  04DA  00E7               	movwf	(_errorOut+1)^(0+256)
 11327  04DB  0021               	movlb	1	; select bank1
 11328  04DC  0835               	movf	?_getActive^(0+128),w
 11329  04DD  0022               	movlb	2	; select bank2
 11330  04DE  00E6               	movwf	_errorOut^(0+256)
 11331  04DF  0008               	return
 11332  04E0                     l8364:	
 11333                           ;cmd_parser.c: 98: case CMD_GET_MOVABLE: errorOut = getMoveMask(); break;
 11334                           
 11335  04E0  319B  2395         	fcall	_getMoveMask
 11336  04E2  0021               	movlb	1	; select bank1
 11337  04E3  0836               	movf	(?_getMoveMask+1)^(0+128),w
 11338  04E4  0022               	movlb	2	; select bank2
 11339  04E5  00E7               	movwf	(_errorOut+1)^(0+256)
 11340  04E6  0021               	movlb	1	; select bank1
 11341  04E7  0835               	movf	?_getMoveMask^(0+128),w
 11342  04E8  0022               	movlb	2	; select bank2
 11343  04E9  00E6               	movwf	_errorOut^(0+256)
 11344  04EA  0008               	return
 11345  04EB                     l8366:	
 11346                           ;cmd_parser.c: 99: case CMD_MOTION_STATUS: errorOut = getMotionStatus(); break;
 11347                           
 11348  04EB  31A6  261F         	fcall	_getMotionStatus
 11349  04ED  0021               	movlb	1	; select bank1
 11350  04EE  0836               	movf	(?_getMotionStatus+1)^(0+128),w
 11351  04EF  0022               	movlb	2	; select bank2
 11352  04F0  00E7               	movwf	(_errorOut+1)^(0+256)
 11353  04F1  0021               	movlb	1	; select bank1
 11354  04F2  0835               	movf	?_getMotionStatus^(0+128),w
 11355  04F3  0022               	movlb	2	; select bank2
 11356  04F4  00E6               	movwf	_errorOut^(0+256)
 11357  04F5  0008               	return
 11358  04F6                     l8368:	
 11359                           ;cmd_parser.c: 100: case CMD_DOMOVE: errorOut = doMove(); break;
 11360                           
 11361  04F6  3189  2119         	fcall	_doMove
 11362  04F8  0021               	movlb	1	; select bank1
 11363  04F9  0840               	movf	(?_doMove+1)^(0+128),w
 11364  04FA  0022               	movlb	2	; select bank2
 11365  04FB  00E7               	movwf	(_errorOut+1)^(0+256)
 11366  04FC  0021               	movlb	1	; select bank1
 11367  04FD  083F               	movf	?_doMove^(0+128),w
 11368  04FE  0022               	movlb	2	; select bank2
 11369  04FF  00E6               	movwf	_errorOut^(0+256)
 11370  0500  0008               	return
 11371  0501                     l8370:	
 11372                           ;cmd_parser.c: 101: case CMD_COMM_CHECK: errorOut = commCheck(); break;
 11373                           
 11374  0501  318A  223A         	fcall	_commCheck
 11375  0503  0021               	movlb	1	; select bank1
 11376  0504  0852               	movf	(?_commCheck+1)^(0+128),w
 11377  0505  0022               	movlb	2	; select bank2
 11378  0506  00E7               	movwf	(_errorOut+1)^(0+256)
 11379  0507  0021               	movlb	1	; select bank1
 11380  0508  0851               	movf	?_commCheck^(0+128),w
 11381  0509  0022               	movlb	2	; select bank2
 11382  050A  00E6               	movwf	_errorOut^(0+256)
 11383  050B  0008               	return
 11384  050C                     l8372:	
 11385                           ;cmd_parser.c: 102: case CMD_PING: printf("!\n"); break;
 11386                           
 11387  050C  30C8               	movlw	low ((STR_81+20)| (0+32768))
 11388  050D  0021               	movlb	1	; select bank1
 11389  050E  00A0               	movwf	printf@f^(0+128)
 11390  050F  30A8               	movlw	high ((STR_81+20)| (0+32768))
 11391  0510  00A1               	movwf	(printf@f^(0+128)+1)
 11392  0511  318E  26CE         	fcall	_printf
 11393  0513  0008               	return
 11394  0514                     l8374:	
 11395                           ;cmd_parser.c: 103: default: printf("UNRECOGNIZED COMMAND!\n");
 11396                           
 11397  0514  30B4               	movlw	low (STR_81| (0+32768))
 11398  0515  0021               	movlb	1	; select bank1
 11399  0516  00A0               	movwf	printf@f^(0+128)
 11400  0517  30A8               	movlw	high (STR_81| (0+32768))
 11401  0518  00A1               	movwf	(printf@f^(0+128)+1)
 11402  0519  318E  26CE         	fcall	_printf
 11403                           
 11404                           ;cmd_parser.c: 110: }
 11405  051B  0008               	return
 11406  051C                     l8376:	
 11407  051C  0021               	movlb	1	; select bank1
 11408  051D  0854               	movf	execCmd@s^(0+128),w
 11409  051E  0086               	movwf	6
 11410  051F  3001               	movlw	1	; select bank2/3
 11411  0520  0087               	movwf	7
 11412  0521  0801               	movf	1,w
 11413                           
 11414                           ; Switch size 1, requested type "space"
 11415                           ; Number of cases is 21, Range of values is 1 to 22
 11416                           ; switch strategies available:
 11417                           ; Name         Instructions Cycles
 11418                           ; direct_byte           53     9 (fixed)
 11419                           ; simple_byte           64    33 (average)
 11420                           ; jumptable            263     9 (fixed)
 11421                           ;	Chosen strategy is direct_byte
 11422  0522  3EFF               	addlw	-1
 11423  0523  1C03               	skipc
 11424  0524  2D14               	goto	l8374
 11425  0525  0084               	movwf	4
 11426  0526  3016               	movlw	22
 11427  0527  0204               	subwf	4,w
 11428  0528  1803               	skipnc
 11429  0529  2D14               	goto	l8374
 11430  052A  31A0               	movlp	high S8716
 11431  052B  3504               	lslf	4,w
 11432  052C  3E00               	addlw	low S8716
 11433  052D  0082               	movwf	2
 11434                           
 11435                           ;cmd_parser.c: 112: return errorOut;
 11436                           ;	Return value of _execCmd is never used
 11437  052E  0008               	return
 11438  052F                     __end_of_execCmd:	
 11439                           
 11440                           	psect	swtext1
 11441  2000                     __pswtext1:	
 11442  2000                     S8716:	
 11443  2000  3183  2B8C         	ljmp	l8334
 11444  2002  3183  2B78         	ljmp	l8332
 11445  2004  3183  2BA0         	ljmp	l8336
 11446  2006  3185  2D14         	ljmp	l8374
 11447  2008  3184  2C9B         	ljmp	l8358
 11448  200A  3184  2CB8         	ljmp	l8360
 11449  200C  3183  2BB4         	ljmp	l8338
 11450  200E  3183  2BBF         	ljmp	l8340
 11451  2010  3183  2BD3         	ljmp	l8342
 11452  2012  3183  2BE7         	ljmp	l8344
 11453  2014  3183  2BFB         	ljmp	l8346
 11454  2016  3184  2C0F         	ljmp	l8348
 11455  2018  3184  2C23         	ljmp	l8350
 11456  201A  3184  2C40         	ljmp	l8352
 11457  201C  3184  2C5D         	ljmp	l8354
 11458  201E  3184  2C7A         	ljmp	l8356
 11459  2020  3184  2CD5         	ljmp	l8362
 11460  2022  3184  2CE0         	ljmp	l8364
 11461  2024  3184  2CEB         	ljmp	l8366
 11462  2026  3184  2CF6         	ljmp	l8368
 11463  2028  3185  2D01         	ljmp	l8370
 11464  202A  3185  2D0C         	ljmp	l8372
 11465                           
 11466                           	psect	text20
 11467  1623                     __ptext20:	
 11468 ;; *************** function _zeroPosition *****************
 11469 ;; Defined at:
 11470 ;;		line 373 in file "main.c"
 11471 ;; Parameters:    Size  Location     Type
 11472 ;;		None
 11473 ;; Auto vars:     Size  Location     Type
 11474 ;;  i               2   41[BANK0 ] int 
 11475 ;; Return value:  Size  Location     Type
 11476 ;;                  2   21[BANK1 ] int 
 11477 ;; Registers used:
 11478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11479 ;; Tracked objects:
 11480 ;;		On entry : 0/0
 11481 ;;		On exit  : 0/0
 11482 ;;		Unchanged: 0/0
 11483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11484 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11485 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11486 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11487 ;;      Totals:         0       2      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11488 ;;Total ram usage:       12 bytes
 11489 ;; Hardware stack levels used:    1
 11490 ;; Hardware stack levels required when called:    9
 11491 ;; This function calls:
 11492 ;;		_printf
 11493 ;; This function is called by:
 11494 ;;		_execCmd
 11495 ;; This function uses a non-reentrant model
 11496 ;;
 11497                           
 11498                           
 11499                           ;psect for function _zeroPosition
 11500  1623                     _zeroPosition:	
 11501                           
 11502                           ;main.c: 374: for(int i = 0; i<24; i++){
 11503                           
 11504                           ;incstack = 0
 11505                           ; Regs used in _zeroPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11506  1623  0020               	movlb	0	; select bank0
 11507  1624  01C9               	clrf	zeroPosition@i
 11508  1625  01CA               	clrf	zeroPosition@i+1
 11509  1626  084A               	movf	zeroPosition@i+1,w
 11510  1627  3A80               	xorlw	128
 11511  1628  0021               	movlb	1	; select bank1
 11512  1629  00B7               	movwf	??_zeroPosition^(0+128)
 11513  162A  3080               	movlw	128
 11514  162B  0237               	subwf	??_zeroPosition^(0+128),w
 11515  162C  1D03               	skipz
 11516  162D  2E31               	goto	u7925
 11517  162E  3018               	movlw	24
 11518  162F  0020               	movlb	0	; select bank0
 11519  1630  0249               	subwf	zeroPosition@i,w
 11520  1631                     u7925:	
 11521  1631  1803               	btfsc	3,0
 11522  1632  2E8D               	goto	l7956
 11523  1633                     l7948:	
 11524                           
 11525                           ;main.c: 375: if((activeMask & (1UL << i)) > 0)
 11526  1633  0021               	movlb	1	; select bank1
 11527  1634  085D               	movf	_activeMask^(0+128),w
 11528  1635  00B7               	movwf	??_zeroPosition^(0+128)
 11529  1636  085E               	movf	(_activeMask+1)^(0+128),w
 11530  1637  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 11531  1638  085F               	movf	(_activeMask+2)^(0+128),w
 11532  1639  00B9               	movwf	(??_zeroPosition^(0+128)+2)
 11533  163A  0860               	movf	(_activeMask+3)^(0+128),w
 11534  163B  00BA               	movwf	(??_zeroPosition^(0+128)+3)
 11535  163C  3001               	movlw	1
 11536  163D  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 11537  163E  3000               	movlw	0
 11538  163F  00BC               	movwf	((??_zeroPosition+4)^(0+128)+1)
 11539  1640  3000               	movlw	0
 11540  1641  00BD               	movwf	((??_zeroPosition+4)^(0+128)+2)
 11541  1642  3000               	movlw	0
 11542  1643  00BE               	movwf	((??_zeroPosition+4)^(0+128)+3)
 11543  1644  0020               	movlb	0	; select bank0
 11544  1645  0A49               	incf	zeroPosition@i,w
 11545  1646  0021               	movlb	1	; select bank1
 11546  1647  2E4C               	goto	u7930
 11547  1648                     u7935:	
 11548  1648  35BB               	lslf	(??_zeroPosition+4)^(0+128),f
 11549  1649  0DBC               	rlf	((??_zeroPosition+4)^(0+128)+1),f
 11550  164A  0DBD               	rlf	((??_zeroPosition+4)^(0+128)+2),f
 11551  164B  0DBE               	rlf	((??_zeroPosition+4)^(0+128)+3),f
 11552  164C                     u7930:	
 11553  164C  0B89               	decfsz	9,f
 11554  164D  2E48               	goto	u7935
 11555  164E  083B               	movf	(??_zeroPosition+4)^(0+128),w
 11556  164F  05B7               	andwf	??_zeroPosition^(0+128),f
 11557  1650  083C               	movf	(??_zeroPosition+5)^(0+128),w
 11558  1651  05B8               	andwf	(??_zeroPosition^(0+128)+1),f
 11559  1652  083D               	movf	(??_zeroPosition+6)^(0+128),w
 11560  1653  05B9               	andwf	(??_zeroPosition^(0+128)+2),f
 11561  1654  083E               	movf	(??_zeroPosition+7)^(0+128),w
 11562  1655  05BA               	andwf	(??_zeroPosition^(0+128)+3),f
 11563  1656  083A               	movf	(??_zeroPosition+3)^(0+128),w
 11564  1657  0439               	iorwf	(??_zeroPosition+2)^(0+128),w
 11565  1658  0438               	iorwf	(??_zeroPosition+1)^(0+128),w
 11566  1659  0437               	iorwf	??_zeroPosition^(0+128),w
 11567  165A  1903               	skipnz
 11568  165B  2E7B               	goto	l7952
 11569                           
 11570                           ;main.c: 376: currentPositions_steps[i]=0;
 11571  165C  0020               	movlb	0	; select bank0
 11572  165D  084A               	movf	zeroPosition@i+1,w
 11573  165E  0021               	movlb	1	; select bank1
 11574  165F  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 11575  1660  0020               	movlb	0	; select bank0
 11576  1661  0849               	movf	zeroPosition@i,w
 11577  1662  0021               	movlb	1	; select bank1
 11578  1663  00B7               	movwf	??_zeroPosition^(0+128)
 11579  1664  35B7               	lslf	??_zeroPosition^(0+128),f
 11580  1665  0DB8               	rlf	(??_zeroPosition^(0+128)+1),f
 11581  1666  35B7               	lslf	??_zeroPosition^(0+128),f
 11582  1667  0DB8               	rlf	(??_zeroPosition^(0+128)+1),f
 11583  1668  3090               	movlw	144
 11584  1669  00B9               	movwf	(??_zeroPosition+2)^(0+128)
 11585  166A  3027               	movlw	39
 11586  166B  00BA               	movwf	((??_zeroPosition+2)^(0+128)+1)
 11587  166C  0837               	movf	??_zeroPosition^(0+128),w
 11588  166D  0739               	addwf	(??_zeroPosition+2)^(0+128),w
 11589  166E  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 11590  166F  0838               	movf	(??_zeroPosition+1)^(0+128),w
 11591  1670  3D3A               	addwfc	(??_zeroPosition+3)^(0+128),w
 11592  1671  00BC               	movwf	(??_zeroPosition+5)^(0+128)
 11593  1672  083B               	movf	(??_zeroPosition+4)^(0+128),w
 11594  1673  0086               	movwf	6
 11595  1674  083C               	movf	(??_zeroPosition+5)^(0+128),w
 11596  1675  0087               	movwf	7
 11597  1676  3000               	movlw	0
 11598  1677  3FC0               	movwi [0]fsr1
 11599  1678  3FC1               	movwi [1]fsr1
 11600  1679  3FC2               	movwi [2]fsr1
 11601  167A  3FC3               	movwi [3]fsr1
 11602  167B                     l7952:	
 11603  167B  3001               	movlw	1
 11604  167C  0020               	movlb	0	; select bank0
 11605  167D  07C9               	addwf	zeroPosition@i,f
 11606  167E  3000               	movlw	0
 11607  167F  3DCA               	addwfc	zeroPosition@i+1,f
 11608  1680  084A               	movf	zeroPosition@i+1,w
 11609  1681  3A80               	xorlw	128
 11610  1682  0021               	movlb	1	; select bank1
 11611  1683  00B7               	movwf	??_zeroPosition^(0+128)
 11612  1684  3080               	movlw	128
 11613  1685  0237               	subwf	??_zeroPosition^(0+128),w
 11614  1686  1D03               	skipz
 11615  1687  2E8B               	goto	u7955
 11616  1688  3018               	movlw	24
 11617  1689  0020               	movlb	0	; select bank0
 11618  168A  0249               	subwf	zeroPosition@i,w
 11619  168B                     u7955:	
 11620  168B  1C03               	skipc
 11621  168C  2E33               	goto	l7948
 11622  168D                     l7956:	
 11623                           
 11624                           ;main.c: 377: }
 11625                           ;main.c: 378: printf("A\n");
 11626  168D  3059               	movlw	low (STR_7| (0+32768))
 11627  168E  0021               	movlb	1	; select bank1
 11628  168F  00A0               	movwf	printf@f^(0+128)
 11629  1690  30AA               	movlw	high (STR_7| (0+32768))
 11630  1691  00A1               	movwf	(printf@f^(0+128)+1)
 11631  1692  318E  26CE         	fcall	_printf
 11632                           
 11633                           ;main.c: 379: return 0;
 11634  1694  0021               	movlb	1	; select bank1
 11635  1695  01B5               	clrf	?_zeroPosition^(0+128)
 11636  1696  01B6               	clrf	(?_zeroPosition+1)^(0+128)
 11637  1697  0008               	return
 11638  1698                     __end_of_zeroPosition:	
 11639                           
 11640                           	psect	text21
 11641  09A2                     __ptext21:	
 11642 ;; *************** function _timedActiveHeatOn *****************
 11643 ;; Defined at:
 11644 ;;		line 477 in file "main.c"
 11645 ;; Parameters:    Size  Location     Type
 11646 ;;  onTime          4   21[BANK1 ] long 
 11647 ;;  topOrB          2   25[BANK1 ] int 
 11648 ;; Auto vars:     Size  Location     Type
 11649 ;;  t               2   32[BANK1 ] int 
 11650 ;; Return value:  Size  Location     Type
 11651 ;;                  2   21[BANK1 ] int 
 11652 ;; Registers used:
 11653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11654 ;; Tracked objects:
 11655 ;;		On entry : 0/0
 11656 ;;		On exit  : 0/0
 11657 ;;		Unchanged: 0/0
 11658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11659 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11660 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11661 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11662 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11663 ;;Total ram usage:       13 bytes
 11664 ;; Hardware stack levels used:    1
 11665 ;; Hardware stack levels required when called:    9
 11666 ;; This function calls:
 11667 ;;		_LEDsOn
 11668 ;;		_printf
 11669 ;; This function is called by:
 11670 ;;		_execCmd
 11671 ;; This function uses a non-reentrant model
 11672 ;;
 11673                           
 11674                           
 11675                           ;psect for function _timedActiveHeatOn
 11676  09A2                     _timedActiveHeatOn:	
 11677                           
 11678                           ;main.c: 478: _delay((unsigned long)((2000)*(1000000/4000.0)));
 11679                           
 11680                           ;incstack = 0
 11681                           ; Regs used in _timedActiveHeatOn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11682  09A2  3003               	movlw	3
 11683  09A3  0021               	movlb	1	; select bank1
 11684  09A4  00BC               	movwf	(??_timedActiveHeatOn^(0+128)+1)
 11685  09A5  308A               	movlw	138
 11686  09A6  00BB               	movwf	??_timedActiveHeatOn^(0+128)
 11687  09A7  3055               	movlw	85
 11688  09A8                     u8957:	
 11689  09A8  0B89               	decfsz	9,f
 11690  09A9  29A8               	goto	u8957
 11691  09AA  0BBB               	decfsz	??_timedActiveHeatOn^(0+128),f
 11692  09AB  29A8               	goto	u8957
 11693  09AC  0BBC               	decfsz	(??_timedActiveHeatOn^(0+128)+1),f
 11694  09AD  29A8               	goto	u8957
 11695  09AE  3200               	nop2
 11696                           
 11697                           ;main.c: 479: do { LATCbits.LATC1 = 0; } while(0);
 11698  09AF  0022               	movlb	2	; select bank2
 11699  09B0  108E               	bcf	14,1	;volatile
 11700                           
 11701                           ;main.c: 480: if(topOrB == 1){
 11702  09B1  0021               	movlb	1	; select bank1
 11703  09B2  0339               	decf	timedActiveHeatOn@topOrB^(0+128),w
 11704  09B3  043A               	iorwf	(timedActiveHeatOn@topOrB+1)^(0+128),w
 11705  09B4  1D03               	btfss	3,2
 11706  09B5  29C7               	goto	l8086
 11707                           
 11708                           ;main.c: 481: LEDsOn(activeMask, 1);
 11709  09B6  0860               	movf	(_activeMask+3)^(0+128),w
 11710  09B7  0020               	movlb	0	; select bank0
 11711  09B8  00C7               	movwf	LEDsOn@LEDpins+3
 11712  09B9  0021               	movlb	1	; select bank1
 11713  09BA  085F               	movf	(_activeMask+2)^(0+128),w
 11714  09BB  0020               	movlb	0	; select bank0
 11715  09BC  00C6               	movwf	LEDsOn@LEDpins+2
 11716  09BD  0021               	movlb	1	; select bank1
 11717  09BE  085E               	movf	(_activeMask+1)^(0+128),w
 11718  09BF  0020               	movlb	0	; select bank0
 11719  09C0  00C5               	movwf	LEDsOn@LEDpins+1
 11720  09C1  0021               	movlb	1	; select bank1
 11721  09C2  085D               	movf	_activeMask^(0+128),w
 11722  09C3  0020               	movlb	0	; select bank0
 11723  09C4  00C4               	movwf	LEDsOn@LEDpins
 11724  09C5  3001               	movlw	1
 11725  09C6  29DD               	goto	L22
 11726  09C7                     l8086:	
 11727                           ;main.c: 482: }
 11728                           
 11729                           
 11730                           ;main.c: 483: else if (topOrB == 2){
 11731  09C7  3002               	movlw	2
 11732  09C8  0021               	movlb	1	; select bank1
 11733  09C9  0639               	xorwf	timedActiveHeatOn@topOrB^(0+128),w
 11734  09CA  043A               	iorwf	(timedActiveHeatOn@topOrB+1)^(0+128),w
 11735  09CB  1D03               	btfss	3,2
 11736  09CC  29E3               	goto	l8090
 11737                           
 11738                           ;main.c: 484: LEDsOn(activeMask, 2);
 11739  09CD  0860               	movf	(_activeMask+3)^(0+128),w
 11740  09CE  0020               	movlb	0	; select bank0
 11741  09CF  00C7               	movwf	LEDsOn@LEDpins+3
 11742  09D0  0021               	movlb	1	; select bank1
 11743  09D1  085F               	movf	(_activeMask+2)^(0+128),w
 11744  09D2  0020               	movlb	0	; select bank0
 11745  09D3  00C6               	movwf	LEDsOn@LEDpins+2
 11746  09D4  0021               	movlb	1	; select bank1
 11747  09D5  085E               	movf	(_activeMask+1)^(0+128),w
 11748  09D6  0020               	movlb	0	; select bank0
 11749  09D7  00C5               	movwf	LEDsOn@LEDpins+1
 11750  09D8  0021               	movlb	1	; select bank1
 11751  09D9  085D               	movf	_activeMask^(0+128),w
 11752  09DA  0020               	movlb	0	; select bank0
 11753  09DB  00C4               	movwf	LEDsOn@LEDpins
 11754  09DC  3002               	movlw	2
 11755  09DD                     L22:	
 11756  09DD  00C8               	movwf	LEDsOn@topOrBottom
 11757  09DE  3000               	movlw	0
 11758  09DF  00C9               	movwf	LEDsOn@topOrBottom+1
 11759  09E0  31A5  25DC  3189   	fcall	_LEDsOn
 11760  09E3                     l8090:	
 11761                           
 11762                           ;main.c: 485: }
 11763                           ;main.c: 486: for(int t=0; t<onTime; t++) _delay((unsigned long)((1)*(1000000/4000.0)));
 11764  09E3  0021               	movlb	1	; select bank1
 11765  09E4  01C0               	clrf	timedActiveHeatOn@t^(0+128)
 11766  09E5  01C1               	clrf	(timedActiveHeatOn@t+1)^(0+128)
 11767  09E6                     l1194:	
 11768  09E6  0840               	movf	timedActiveHeatOn@t^(0+128),w
 11769  09E7  00BB               	movwf	??_timedActiveHeatOn^(0+128)
 11770  09E8  0841               	movf	(timedActiveHeatOn@t+1)^(0+128),w
 11771  09E9  00BC               	movwf	(??_timedActiveHeatOn^(0+128)+1)
 11772  09EA  3000               	movlw	0
 11773  09EB  1BBC               	btfsc	(??_timedActiveHeatOn^(0+128)+1),7
 11774  09EC  30FF               	movlw	255
 11775  09ED  00BD               	movwf	(??_timedActiveHeatOn^(0+128)+2)
 11776  09EE  00BE               	movwf	(??_timedActiveHeatOn^(0+128)+3)
 11777  09EF  083E               	movf	(??_timedActiveHeatOn+3)^(0+128),w
 11778  09F0  3A80               	xorlw	128
 11779  09F1  00BF               	movwf	(??_timedActiveHeatOn+4)^(0+128)
 11780  09F2  0838               	movf	(timedActiveHeatOn@onTime+3)^(0+128),w
 11781  09F3  3A80               	xorlw	128
 11782  09F4  023F               	subwf	(??_timedActiveHeatOn+4)^(0+128),w
 11783  09F5  1D03               	skipz
 11784  09F6  2A01               	goto	u8043
 11785  09F7  0837               	movf	(timedActiveHeatOn@onTime+2)^(0+128),w
 11786  09F8  023D               	subwf	(??_timedActiveHeatOn+2)^(0+128),w
 11787  09F9  1D03               	skipz
 11788  09FA  2A01               	goto	u8043
 11789  09FB  0836               	movf	(timedActiveHeatOn@onTime+1)^(0+128),w
 11790  09FC  023C               	subwf	(??_timedActiveHeatOn+1)^(0+128),w
 11791  09FD  1D03               	skipz
 11792  09FE  2A01               	goto	u8043
 11793  09FF  0835               	movf	timedActiveHeatOn@onTime^(0+128),w
 11794  0A00  023B               	subwf	??_timedActiveHeatOn^(0+128),w
 11795  0A01                     u8043:	
 11796  0A01  1803               	btfsc	3,0
 11797  0A02  2A0D               	goto	l1197
 11798  0A03  3053               	movlw	83
 11799  0A04                     u8967:	
 11800  0A04  0B89               	decfsz	9,f
 11801  0A05  2A04               	goto	u8967
 11802  0A06  0000               	nop
 11803  0A07  3001               	movlw	1
 11804  0A08  0021               	movlb	1	; select bank1
 11805  0A09  07C0               	addwf	timedActiveHeatOn@t^(0+128),f
 11806  0A0A  3000               	movlw	0
 11807  0A0B  3DC1               	addwfc	(timedActiveHeatOn@t+1)^(0+128),f
 11808  0A0C  29E6               	goto	l1194
 11809  0A0D                     l1197:	
 11810                           ;main.c: 487: do { LATCbits.LATC1 = 1; } while(0);
 11811                           
 11812  0A0D  0022               	movlb	2	; select bank2
 11813  0A0E  148E               	bsf	14,1	;volatile
 11814                           
 11815                           ;main.c: 488: LEDsOn(0, 1);
 11816  0A0F  3000               	movlw	0
 11817  0A10  0020               	movlb	0	; select bank0
 11818  0A11  00C7               	movwf	LEDsOn@LEDpins+3
 11819  0A12  3000               	movlw	0
 11820  0A13  00C6               	movwf	LEDsOn@LEDpins+2
 11821  0A14  3000               	movlw	0
 11822  0A15  00C5               	movwf	LEDsOn@LEDpins+1
 11823  0A16  3000               	movlw	0
 11824  0A17  00C4               	movwf	LEDsOn@LEDpins
 11825  0A18  3001               	movlw	1
 11826  0A19  00C8               	movwf	LEDsOn@topOrBottom
 11827  0A1A  3000               	movlw	0
 11828  0A1B  00C9               	movwf	LEDsOn@topOrBottom+1
 11829  0A1C  31A5  25DC  3189   	fcall	_LEDsOn
 11830                           
 11831                           ;main.c: 489: LEDsOn(0, 2);
 11832  0A1F  3000               	movlw	0
 11833  0A20  0020               	movlb	0	; select bank0
 11834  0A21  00C7               	movwf	LEDsOn@LEDpins+3
 11835  0A22  3000               	movlw	0
 11836  0A23  00C6               	movwf	LEDsOn@LEDpins+2
 11837  0A24  3000               	movlw	0
 11838  0A25  00C5               	movwf	LEDsOn@LEDpins+1
 11839  0A26  3000               	movlw	0
 11840  0A27  00C4               	movwf	LEDsOn@LEDpins
 11841  0A28  3002               	movlw	2
 11842  0A29  00C8               	movwf	LEDsOn@topOrBottom
 11843  0A2A  3000               	movlw	0
 11844  0A2B  00C9               	movwf	LEDsOn@topOrBottom+1
 11845  0A2C  31A5  25DC  3189   	fcall	_LEDsOn
 11846                           
 11847                           ;main.c: 490: printf("A\n");
 11848  0A2F  3059               	movlw	low (STR_7| (0+32768))
 11849  0A30  0021               	movlb	1	; select bank1
 11850  0A31  00A0               	movwf	printf@f^(0+128)
 11851  0A32  30AA               	movlw	high (STR_7| (0+32768))
 11852  0A33  00A1               	movwf	(printf@f^(0+128)+1)
 11853  0A34  318E  26CE         	fcall	_printf
 11854                           
 11855                           ;main.c: 491: return 0;
 11856  0A36  0021               	movlb	1	; select bank1
 11857  0A37  01B5               	clrf	?_timedActiveHeatOn^(0+128)
 11858  0A38  01B6               	clrf	(?_timedActiveHeatOn+1)^(0+128)
 11859  0A39  0008               	return
 11860  0A3A                     __end_of_timedActiveHeatOn:	
 11861                           
 11862                           	psect	text22
 11863  2491                     __ptext22:	
 11864 ;; *************** function _startRelMove *****************
 11865 ;; Defined at:
 11866 ;;		line 280 in file "main.c"
 11867 ;; Parameters:    Size  Location     Type
 11868 ;;  steps           2   21[BANK1 ] int 
 11869 ;; Auto vars:     Size  Location     Type
 11870 ;;		None
 11871 ;; Return value:  Size  Location     Type
 11872 ;;                  2   21[BANK1 ] int 
 11873 ;; Registers used:
 11874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11875 ;; Tracked objects:
 11876 ;;		On entry : 0/0
 11877 ;;		On exit  : 0/0
 11878 ;;		Unchanged: 0/0
 11879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11880 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11883 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11884 ;;Total ram usage:        2 bytes
 11885 ;; Hardware stack levels used:    1
 11886 ;; Hardware stack levels required when called:    9
 11887 ;; This function calls:
 11888 ;;		_printf
 11889 ;; This function is called by:
 11890 ;;		_execCmd
 11891 ;; This function uses a non-reentrant model
 11892 ;;
 11893                           
 11894                           
 11895                           ;psect for function _startRelMove
 11896  2491                     _startRelMove:	
 11897                           
 11898                           ;main.c: 281: motionType = REL_MOVE;
 11899                           
 11900                           ;incstack = 0
 11901                           ; Regs used in _startRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11902  2491  0020               	movlb	0	; select bank0
 11903  2492  01D5               	clrf	_motionType
 11904  2493  0AD5               	incf	_motionType,f
 11905                           
 11906                           ;main.c: 282: remainingSteps = steps;
 11907  2494  0021               	movlb	1	; select bank1
 11908  2495  0835               	movf	startRelMove@steps^(0+128),w
 11909  2496  0022               	movlb	2	; select bank2
 11910  2497  00BE               	movwf	_remainingSteps^(0+256)
 11911  2498  0021               	movlb	1	; select bank1
 11912  2499  0836               	movf	(startRelMove@steps+1)^(0+128),w
 11913  249A  0022               	movlb	2	; select bank2
 11914  249B  00BF               	movwf	(_remainingSteps+1)^(0+256)
 11915  249C  0D89               	rlf	9,f
 11916  249D  3B89               	subwfb	9,f
 11917  249E  0989               	comf	9,f
 11918  249F  00C0               	movwf	(_remainingSteps+2)^(0+256)
 11919  24A0  00C1               	movwf	(_remainingSteps+3)^(0+256)
 11920                           
 11921                           ;main.c: 283: printf("A\n");
 11922  24A1  3059               	movlw	low (STR_7| (0+32768))
 11923  24A2  0021               	movlb	1	; select bank1
 11924  24A3  00A0               	movwf	printf@f^(0+128)
 11925  24A4  30AA               	movlw	high (STR_7| (0+32768))
 11926  24A5  00A1               	movwf	(printf@f^(0+128)+1)
 11927  24A6  318E  26CE         	fcall	_printf
 11928                           
 11929                           ;main.c: 284: return 0;
 11930  24A8  0021               	movlb	1	; select bank1
 11931  24A9  01B5               	clrf	?_startRelMove^(0+128)
 11932  24AA  01B6               	clrf	(?_startRelMove+1)^(0+128)
 11933  24AB  0008               	return
 11934  24AC                     __end_of_startRelMove:	
 11935                           
 11936                           	psect	text23
 11937  24E4                     __ptext23:	
 11938 ;; *************** function _startAbsMove *****************
 11939 ;; Defined at:
 11940 ;;		line 286 in file "main.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;  steps           2   21[BANK1 ] int 
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;		None
 11945 ;; Return value:  Size  Location     Type
 11946 ;;                  2   21[BANK1 ] int 
 11947 ;; Registers used:
 11948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11949 ;; Tracked objects:
 11950 ;;		On entry : 0/0
 11951 ;;		On exit  : 0/0
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11954 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11956 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11957 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11958 ;;Total ram usage:        3 bytes
 11959 ;; Hardware stack levels used:    1
 11960 ;; Hardware stack levels required when called:    9
 11961 ;; This function calls:
 11962 ;;		_printf
 11963 ;; This function is called by:
 11964 ;;		_execCmd
 11965 ;; This function uses a non-reentrant model
 11966 ;;
 11967                           
 11968                           
 11969                           ;psect for function _startAbsMove
 11970  24E4                     _startAbsMove:	
 11971                           
 11972                           ;main.c: 287: motionType = ABS_MOVE;
 11973                           
 11974                           ;incstack = 0
 11975                           ; Regs used in _startAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11976  24E4  3002               	movlw	2
 11977  24E5  0020               	movlb	0	; select bank0
 11978  24E6  00C9               	movwf	??_startAbsMove
 11979  24E7  0849               	movf	??_startAbsMove,w
 11980  24E8  00D5               	movwf	_motionType
 11981                           
 11982                           ;main.c: 288: absCommand = steps;
 11983  24E9  0021               	movlb	1	; select bank1
 11984  24EA  0835               	movf	startAbsMove@steps^(0+128),w
 11985  24EB  0020               	movlb	0	; select bank0
 11986  24EC  00CE               	movwf	_absCommand
 11987  24ED  0021               	movlb	1	; select bank1
 11988  24EE  0836               	movf	(startAbsMove@steps+1)^(0+128),w
 11989  24EF  0020               	movlb	0	; select bank0
 11990  24F0  00CF               	movwf	_absCommand+1
 11991  24F1  0D89               	rlf	9,f
 11992  24F2  3B89               	subwfb	9,f
 11993  24F3  0989               	comf	9,f
 11994  24F4  00D0               	movwf	_absCommand+2
 11995  24F5  00D1               	movwf	_absCommand+3
 11996                           
 11997                           ;main.c: 289: printf("A\n");
 11998  24F6  3059               	movlw	low (STR_7| (0+32768))
 11999  24F7  0021               	movlb	1	; select bank1
 12000  24F8  00A0               	movwf	printf@f^(0+128)
 12001  24F9  30AA               	movlw	high (STR_7| (0+32768))
 12002  24FA  00A1               	movwf	(printf@f^(0+128)+1)
 12003  24FB  318E  26CE         	fcall	_printf
 12004                           
 12005                           ;main.c: 290: return 0;
 12006  24FD  0021               	movlb	1	; select bank1
 12007  24FE  01B5               	clrf	?_startAbsMove^(0+128)
 12008  24FF  01B6               	clrf	(?_startAbsMove+1)^(0+128)
 12009  2500  0008               	return
 12010  2501                     __end_of_startAbsMove:	
 12011                           
 12012                           	psect	text24
 12013  153B                     __ptext24:	
 12014 ;; *************** function _setMoveMask *****************
 12015 ;; Defined at:
 12016 ;;		line 514 in file "main.c"
 12017 ;; Parameters:    Size  Location     Type
 12018 ;;  probeNum        2   21[BANK1 ] int 
 12019 ;;  onOff           2   23[BANK1 ] int 
 12020 ;; Auto vars:     Size  Location     Type
 12021 ;;		None
 12022 ;; Return value:  Size  Location     Type
 12023 ;;                  2   21[BANK1 ] int 
 12024 ;; Registers used:
 12025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12026 ;; Tracked objects:
 12027 ;;		On entry : 0/0
 12028 ;;		On exit  : 0/0
 12029 ;;		Unchanged: 0/0
 12030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12031 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12033 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12034 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12035 ;;Total ram usage:        8 bytes
 12036 ;; Hardware stack levels used:    1
 12037 ;; Hardware stack levels required when called:    9
 12038 ;; This function calls:
 12039 ;;		_printf
 12040 ;; This function is called by:
 12041 ;;		_execCmd
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           
 12046                           ;psect for function _setMoveMask
 12047  153B                     _setMoveMask:	
 12048                           
 12049                           ;main.c: 518: if (probeNum < 24){
 12050                           
 12051                           ;incstack = 0
 12052                           ; Regs used in _setMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12053  153B  0021               	movlb	1	; select bank1
 12054  153C  0836               	movf	(setMoveMask@probeNum+1)^(0+128),w
 12055  153D  3A80               	xorlw	128
 12056  153E  0020               	movlb	0	; select bank0
 12057  153F  00C9               	movwf	??_setMoveMask
 12058  1540  3080               	movlw	128
 12059  1541  0249               	subwf	??_setMoveMask,w
 12060  1542  1D03               	skipz
 12061  1543  2D47               	goto	u8105
 12062  1544  3018               	movlw	24
 12063  1545  0021               	movlb	1	; select bank1
 12064  1546  0235               	subwf	setMoveMask@probeNum^(0+128),w
 12065  1547                     u8105:	
 12066  1547  1803               	skipnc
 12067  1548  2DA1               	goto	l8136
 12068                           
 12069                           ;main.c: 519: if (onOff)
 12070  1549  0021               	movlb	1	; select bank1
 12071  154A  0837               	movf	setMoveMask@onOff^(0+128),w
 12072  154B  0438               	iorwf	(setMoveMask@onOff+1)^(0+128),w
 12073  154C  1903               	btfsc	3,2
 12074  154D  2D71               	goto	l8128
 12075                           
 12076                           ;main.c: 520: moveMask |= (1UL<<probeNum);
 12077  154E  3001               	movlw	1
 12078  154F  0020               	movlb	0	; select bank0
 12079  1550  00C9               	movwf	??_setMoveMask
 12080  1551  3000               	movlw	0
 12081  1552  00CA               	movwf	??_setMoveMask+1
 12082  1553  3000               	movlw	0
 12083  1554  00CB               	movwf	??_setMoveMask+2
 12084  1555  3000               	movlw	0
 12085  1556  00CC               	movwf	??_setMoveMask+3
 12086  1557  0021               	movlb	1	; select bank1
 12087  1558  0A35               	incf	setMoveMask@probeNum^(0+128),w
 12088  1559  0020               	movlb	0	; select bank0
 12089  155A  2D5F               	goto	u8120
 12090  155B                     u8125:	
 12091  155B  35C9               	lslf	??_setMoveMask,f
 12092  155C  0DCA               	rlf	??_setMoveMask+1,f
 12093  155D  0DCB               	rlf	??_setMoveMask+2,f
 12094  155E  0DCC               	rlf	??_setMoveMask+3,f
 12095  155F                     u8120:	
 12096  155F  0B89               	decfsz	9,f
 12097  1560  2D5B               	goto	u8125
 12098  1561  0849               	movf	??_setMoveMask,w
 12099  1562  0021               	movlb	1	; select bank1
 12100  1563  04D9               	iorwf	_moveMask^(0+128),f
 12101  1564  0020               	movlb	0	; select bank0
 12102  1565  084A               	movf	??_setMoveMask+1,w
 12103  1566  0021               	movlb	1	; select bank1
 12104  1567  04DA               	iorwf	(_moveMask+1)^(0+128),f
 12105  1568  0020               	movlb	0	; select bank0
 12106  1569  084B               	movf	??_setMoveMask+2,w
 12107  156A  0021               	movlb	1	; select bank1
 12108  156B  04DB               	iorwf	(_moveMask+2)^(0+128),f
 12109  156C  0020               	movlb	0	; select bank0
 12110  156D  084C               	movf	??_setMoveMask+3,w
 12111  156E  0021               	movlb	1	; select bank1
 12112  156F  04DC               	iorwf	(_moveMask+3)^(0+128),f
 12113  1570  2D97               	goto	l8130
 12114  1571                     l8128:	
 12115                           
 12116                           ;main.c: 521: else
 12117                           ;main.c: 522: moveMask &= ~(1UL<< probeNum);
 12118  1571  3001               	movlw	1
 12119  1572  0020               	movlb	0	; select bank0
 12120  1573  00C9               	movwf	??_setMoveMask
 12121  1574  3000               	movlw	0
 12122  1575  00CA               	movwf	??_setMoveMask+1
 12123  1576  3000               	movlw	0
 12124  1577  00CB               	movwf	??_setMoveMask+2
 12125  1578  3000               	movlw	0
 12126  1579  00CC               	movwf	??_setMoveMask+3
 12127  157A  0021               	movlb	1	; select bank1
 12128  157B  0A35               	incf	setMoveMask@probeNum^(0+128),w
 12129  157C  0020               	movlb	0	; select bank0
 12130  157D  2D82               	goto	u8130
 12131  157E                     u8135:	
 12132  157E  35C9               	lslf	??_setMoveMask,f
 12133  157F  0DCA               	rlf	??_setMoveMask+1,f
 12134  1580  0DCB               	rlf	??_setMoveMask+2,f
 12135  1581  0DCC               	rlf	??_setMoveMask+3,f
 12136  1582                     u8130:	
 12137  1582  0B89               	decfsz	9,f
 12138  1583  2D7E               	goto	u8135
 12139  1584  09C9               	comf	??_setMoveMask,f
 12140  1585  09CA               	comf	??_setMoveMask+1,f
 12141  1586  09CB               	comf	??_setMoveMask+2,f
 12142  1587  09CC               	comf	??_setMoveMask+3,f
 12143  1588  0849               	movf	??_setMoveMask,w
 12144  1589  0021               	movlb	1	; select bank1
 12145  158A  05D9               	andwf	_moveMask^(0+128),f
 12146  158B  0020               	movlb	0	; select bank0
 12147  158C  084A               	movf	??_setMoveMask+1,w
 12148  158D  0021               	movlb	1	; select bank1
 12149  158E  05DA               	andwf	(_moveMask+1)^(0+128),f
 12150  158F  0020               	movlb	0	; select bank0
 12151  1590  084B               	movf	??_setMoveMask+2,w
 12152  1591  0021               	movlb	1	; select bank1
 12153  1592  05DB               	andwf	(_moveMask+2)^(0+128),f
 12154  1593  0020               	movlb	0	; select bank0
 12155  1594  084C               	movf	??_setMoveMask+3,w
 12156  1595  0021               	movlb	1	; select bank1
 12157  1596  05DC               	andwf	(_moveMask+3)^(0+128),f
 12158  1597                     l8130:	
 12159                           
 12160                           ;main.c: 523: printf("A\n");
 12161  1597  3059               	movlw	low (STR_7| (0+32768))
 12162  1598  00A0               	movwf	printf@f^(0+128)
 12163  1599  30AA               	movlw	high (STR_7| (0+32768))
 12164  159A  00A1               	movwf	(printf@f^(0+128)+1)
 12165  159B  318E  26CE         	fcall	_printf
 12166                           
 12167                           ;main.c: 524: return 0;
 12168  159D  0021               	movlb	1	; select bank1
 12169  159E  01B5               	clrf	?_setMoveMask^(0+128)
 12170  159F  01B6               	clrf	(?_setMoveMask+1)^(0+128)
 12171  15A0  0008               	return
 12172  15A1                     l8136:	
 12173                           
 12174                           ;main.c: 525: }
 12175                           ;main.c: 526: printf("E\n");
 12176  15A1  305C               	movlw	low (STR_16| (0+32768))
 12177  15A2  0021               	movlb	1	; select bank1
 12178  15A3  00A0               	movwf	printf@f^(0+128)
 12179  15A4  30AA               	movlw	high (STR_16| (0+32768))
 12180  15A5  00A1               	movwf	(printf@f^(0+128)+1)
 12181  15A6  318E  26CE         	fcall	_printf
 12182                           
 12183                           ;main.c: 527: return 1;
 12184  15A8  3001               	movlw	1
 12185  15A9  0021               	movlb	1	; select bank1
 12186  15AA  00B5               	movwf	?_setMoveMask^(0+128)
 12187  15AB  3000               	movlw	0
 12188  15AC  00B6               	movwf	(?_setMoveMask^(0+128)+1)
 12189  15AD  0008               	return
 12190  15AE                     __end_of_setMoveMask:	
 12191                           
 12192                           	psect	text25
 12193  253D                     __ptext25:	
 12194 ;; *************** function _setLEDPwr *****************
 12195 ;; Defined at:
 12196 ;;		line 450 in file "main.c"
 12197 ;; Parameters:    Size  Location     Type
 12198 ;;  pwr             2   21[BANK1 ] int 
 12199 ;;  topOrBottom     2   23[BANK1 ] int 
 12200 ;; Auto vars:     Size  Location     Type
 12201 ;;		None
 12202 ;; Return value:  Size  Location     Type
 12203 ;;                  2   21[BANK1 ] int 
 12204 ;; Registers used:
 12205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12206 ;; Tracked objects:
 12207 ;;		On entry : 0/0
 12208 ;;		On exit  : 0/0
 12209 ;;		Unchanged: 0/0
 12210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12211 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12214 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12215 ;;Total ram usage:        4 bytes
 12216 ;; Hardware stack levels used:    1
 12217 ;; Hardware stack levels required when called:    9
 12218 ;; This function calls:
 12219 ;;		_LEDsPwr
 12220 ;;		_printf
 12221 ;; This function is called by:
 12222 ;;		_execCmd
 12223 ;; This function uses a non-reentrant model
 12224 ;;
 12225                           
 12226                           
 12227                           ;psect for function _setLEDPwr
 12228  253D                     _setLEDPwr:	
 12229                           
 12230                           ;main.c: 451: LEDsPwr(pwr, topOrBottom);
 12231                           
 12232                           ;incstack = 0
 12233                           ; Regs used in _setLEDPwr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12234  253D  0021               	movlb	1	; select bank1
 12235  253E  0836               	movf	(setLEDPwr@pwr+1)^(0+128),w
 12236  253F  0020               	movlb	0	; select bank0
 12237  2540  00C5               	movwf	LEDsPwr@pwr+1
 12238  2541  0021               	movlb	1	; select bank1
 12239  2542  0835               	movf	setLEDPwr@pwr^(0+128),w
 12240  2543  0020               	movlb	0	; select bank0
 12241  2544  00C4               	movwf	LEDsPwr@pwr
 12242  2545  0021               	movlb	1	; select bank1
 12243  2546  0838               	movf	(setLEDPwr@topOrBottom+1)^(0+128),w
 12244  2547  0020               	movlb	0	; select bank0
 12245  2548  00C7               	movwf	LEDsPwr@topOrBottom+1
 12246  2549  0021               	movlb	1	; select bank1
 12247  254A  0837               	movf	setLEDPwr@topOrBottom^(0+128),w
 12248  254B  0020               	movlb	0	; select bank0
 12249  254C  00C6               	movwf	LEDsPwr@topOrBottom
 12250  254D  319F  279C  31A5   	fcall	_LEDsPwr
 12251                           
 12252                           ;main.c: 452: printf("A\n");
 12253  2550  3059               	movlw	low (STR_7| (0+32768))
 12254  2551  0021               	movlb	1	; select bank1
 12255  2552  00A0               	movwf	printf@f^(0+128)
 12256  2553  30AA               	movlw	high (STR_7| (0+32768))
 12257  2554  00A1               	movwf	(printf@f^(0+128)+1)
 12258  2555  318E  26CE         	fcall	_printf
 12259                           
 12260                           ;main.c: 453: return 0;
 12261  2557  0021               	movlb	1	; select bank1
 12262  2558  01B5               	clrf	?_setLEDPwr^(0+128)
 12263  2559  01B6               	clrf	(?_setLEDPwr+1)^(0+128)
 12264  255A  0008               	return
 12265  255B                     __end_of_setLEDPwr:	
 12266                           
 12267                           	psect	text26
 12268  1F9C                     __ptext26:	
 12269 ;; *************** function _LEDsPwr *****************
 12270 ;; Defined at:
 12271 ;;		line 12 in file "LEDcomm.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;  pwr             2   36[BANK0 ] int 
 12274 ;;  topOrBottom     2   38[BANK0 ] int 
 12275 ;; Auto vars:     Size  Location     Type
 12276 ;;  pwrAll          4    0[BANK1 ] unsigned long 
 12277 ;; Return value:  Size  Location     Type
 12278 ;;                  1    wreg      void 
 12279 ;; Registers used:
 12280 ;;		wreg, status,2, status,0, pclath, cstack
 12281 ;; Tracked objects:
 12282 ;;		On entry : 0/0
 12283 ;;		On exit  : 0/0
 12284 ;;		Unchanged: 0/0
 12285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12286 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12287 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12288 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12289 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12290 ;;Total ram usage:       14 bytes
 12291 ;; Hardware stack levels used:    1
 12292 ;; Hardware stack levels required when called:    8
 12293 ;; This function calls:
 12294 ;;		_send_2length_2bytes_IK
 12295 ;; This function is called by:
 12296 ;;		_main_initialize
 12297 ;;		_setLEDPwr
 12298 ;; This function uses a non-reentrant model
 12299 ;;
 12300                           
 12301                           
 12302                           ;psect for function _LEDsPwr
 12303  1F9C                     _LEDsPwr:	
 12304                           
 12305                           ;LEDcomm.c: 13: pwr = (pwr>63) ? 63 : pwr;
 12306                           
 12307                           ;incstack = 0
 12308                           ; Regs used in _LEDsPwr: [wreg+status,2+status,0+pclath+cstack]
 12309  1F9C  0020               	movlb	0	; select bank0
 12310  1F9D  0845               	movf	LEDsPwr@pwr+1,w
 12311  1F9E  3A80               	xorlw	128
 12312  1F9F  00C8               	movwf	??_LEDsPwr
 12313  1FA0  3080               	movlw	128
 12314  1FA1  0248               	subwf	??_LEDsPwr,w
 12315  1FA2  1D03               	skipz
 12316  1FA3  2FA6               	goto	u7395
 12317  1FA4  3040               	movlw	64
 12318  1FA5  0244               	subwf	LEDsPwr@pwr,w
 12319  1FA6                     u7395:	
 12320  1FA6  1C03               	btfss	3,0
 12321  1FA7  2FAD               	goto	l202
 12322  1FA8  303F               	movlw	63
 12323  1FA9  0020               	movlb	0	; select bank0
 12324  1FAA  00C4               	movwf	LEDsPwr@pwr
 12325  1FAB  3000               	movlw	0
 12326  1FAC  00C5               	movwf	LEDsPwr@pwr+1
 12327  1FAD                     l202:	
 12328                           
 12329                           ;LEDcomm.c: 14: unsigned long pwrAll = pwr | (pwr<<6) | (pwr<<12);
 12330  1FAD  0020               	movlb	0	; select bank0
 12331  1FAE  0845               	movf	LEDsPwr@pwr+1,w
 12332  1FAF  00C9               	movwf	??_LEDsPwr+1
 12333  1FB0  0844               	movf	LEDsPwr@pwr,w
 12334  1FB1  00C8               	movwf	??_LEDsPwr
 12335  1FB2  0E48               	swapf	??_LEDsPwr,w
 12336  1FB3  39F0               	andlw	240
 12337  1FB4  00C9               	movwf	??_LEDsPwr+1
 12338  1FB5  01C8               	clrf	??_LEDsPwr
 12339  1FB6  0845               	movf	LEDsPwr@pwr+1,w
 12340  1FB7  00CB               	movwf	??_LEDsPwr+3
 12341  1FB8  0844               	movf	LEDsPwr@pwr,w
 12342  1FB9  00CA               	movwf	??_LEDsPwr+2
 12343  1FBA  3006               	movlw	6
 12344  1FBB                     u7405:	
 12345  1FBB  35CA               	lslf	??_LEDsPwr+2,f
 12346  1FBC  0DCB               	rlf	??_LEDsPwr+3,f
 12347  1FBD  0B89               	decfsz	9,f
 12348  1FBE  2FBB               	goto	u7405
 12349  1FBF  0848               	movf	??_LEDsPwr,w
 12350  1FC0  044A               	iorwf	??_LEDsPwr+2,w
 12351  1FC1  00CC               	movwf	??_LEDsPwr+4
 12352  1FC2  0849               	movf	??_LEDsPwr+1,w
 12353  1FC3  044B               	iorwf	??_LEDsPwr+3,w
 12354  1FC4  00CD               	movwf	??_LEDsPwr+5
 12355  1FC5  0844               	movf	LEDsPwr@pwr,w
 12356  1FC6  044C               	iorwf	??_LEDsPwr+4,w
 12357  1FC7  0021               	movlb	1	; select bank1
 12358  1FC8  00A0               	movwf	LEDsPwr@pwrAll^(0+128)
 12359  1FC9  0020               	movlb	0	; select bank0
 12360  1FCA  0845               	movf	LEDsPwr@pwr+1,w
 12361  1FCB  044D               	iorwf	??_LEDsPwr+5,w
 12362  1FCC  0021               	movlb	1	; select bank1
 12363  1FCD  00A1               	movwf	(LEDsPwr@pwrAll+1)^(0+128)
 12364  1FCE  01A2               	clrf	(LEDsPwr@pwrAll^(0+128)+2)
 12365  1FCF  1BA1               	btfsc	(LEDsPwr@pwrAll^(0+128)+1),7
 12366  1FD0  03A2               	decf	(LEDsPwr@pwrAll+2)^(0+128),f
 12367  1FD1  0822               	movf	(LEDsPwr@pwrAll^(0+128)+2),w
 12368  1FD2  00A3               	movwf	(LEDsPwr@pwrAll+3)^(0+128)
 12369                           
 12370                           ;LEDcomm.c: 15: send_2length_2bytes_IK((unsigned int)((pwrAll>>16) & 0xFFFF),(unsigned i
      +                          nt)pwrAll, 7, topOrBottom);
 12371  1FD3  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12372  1FD4  0020               	movlb	0	; select bank0
 12373  1FD5  00C8               	movwf	??_LEDsPwr
 12374  1FD6  0021               	movlb	1	; select bank1
 12375  1FD7  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12376  1FD8  0020               	movlb	0	; select bank0
 12377  1FD9  00C9               	movwf	??_LEDsPwr+1
 12378  1FDA  0021               	movlb	1	; select bank1
 12379  1FDB  0822               	movf	(LEDsPwr@pwrAll+2)^(0+128),w
 12380  1FDC  0020               	movlb	0	; select bank0
 12381  1FDD  00CA               	movwf	??_LEDsPwr+2
 12382  1FDE  0021               	movlb	1	; select bank1
 12383  1FDF  0823               	movf	(LEDsPwr@pwrAll+3)^(0+128),w
 12384  1FE0  0020               	movlb	0	; select bank0
 12385  1FE1  00CB               	movwf	??_LEDsPwr+3
 12386  1FE2  3010               	movlw	16
 12387  1FE3                     u7415:	
 12388  1FE3  36CB               	lsrf	??_LEDsPwr+3,f
 12389  1FE4  0CCA               	rrf	??_LEDsPwr+2,f
 12390  1FE5  0CC9               	rrf	??_LEDsPwr+1,f
 12391  1FE6  0CC8               	rrf	??_LEDsPwr,f
 12392  1FE7  0B89               	decfsz	9,f
 12393  1FE8  2FE3               	goto	u7415
 12394  1FE9  0849               	movf	??_LEDsPwr+1,w
 12395  1FEA  00BD               	movwf	send_2length_2bytes_IK@data1+1
 12396  1FEB  0848               	movf	??_LEDsPwr,w
 12397  1FEC  00BC               	movwf	send_2length_2bytes_IK@data1
 12398  1FED  0021               	movlb	1	; select bank1
 12399  1FEE  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12400  1FEF  0020               	movlb	0	; select bank0
 12401  1FF0  00BF               	movwf	send_2length_2bytes_IK@data2+1
 12402  1FF1  0021               	movlb	1	; select bank1
 12403  1FF2  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12404  1FF3  0020               	movlb	0	; select bank0
 12405  1FF4  00BE               	movwf	send_2length_2bytes_IK@data2
 12406  1FF5  3007               	movlw	7
 12407  1FF6  00CC               	movwf	??_LEDsPwr+4
 12408  1FF7  084C               	movf	??_LEDsPwr+4,w
 12409  1FF8  00C0               	movwf	send_2length_2bytes_IK@latch_start
 12410  1FF9  0847               	movf	LEDsPwr@topOrBottom+1,w
 12411  1FFA  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 12412  1FFB  0846               	movf	LEDsPwr@topOrBottom,w
 12413  1FFC  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 12414  1FFD  31A4  2445         	fcall	_send_2length_2bytes_IK
 12415  1FFF  0008               	return
 12416  2000                     __end_of_LEDsPwr:	
 12417                           
 12418                           	psect	text27
 12419  251F                     __ptext27:	
 12420 ;; *************** function _setLEDBrightnessRange *****************
 12421 ;; Defined at:
 12422 ;;		line 442 in file "main.c"
 12423 ;; Parameters:    Size  Location     Type
 12424 ;;  r               2   21[BANK1 ] int 
 12425 ;;  tOB             2   23[BANK1 ] int 
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;		None
 12428 ;; Return value:  Size  Location     Type
 12429 ;;                  2   21[BANK1 ] int 
 12430 ;; Registers used:
 12431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12432 ;; Tracked objects:
 12433 ;;		On entry : 0/0
 12434 ;;		On exit  : 0/0
 12435 ;;		Unchanged: 0/0
 12436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12437 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12440 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12441 ;;Total ram usage:        4 bytes
 12442 ;; Hardware stack levels used:    1
 12443 ;; Hardware stack levels required when called:    9
 12444 ;; This function calls:
 12445 ;;		_LED_setBrightnessRange
 12446 ;;		_printf
 12447 ;; This function is called by:
 12448 ;;		_execCmd
 12449 ;; This function uses a non-reentrant model
 12450 ;;
 12451                           
 12452                           
 12453                           ;psect for function _setLEDBrightnessRange
 12454  251F                     _setLEDBrightnessRange:	
 12455                           
 12456                           ;main.c: 443: LED_setBrightnessRange(r, tOB);
 12457                           
 12458                           ;incstack = 0
 12459                           ; Regs used in _setLEDBrightnessRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12460  251F  0021               	movlb	1	; select bank1
 12461  2520  0836               	movf	(setLEDBrightnessRange@r+1)^(0+128),w
 12462  2521  0020               	movlb	0	; select bank0
 12463  2522  00C5               	movwf	LED_setBrightnessRange@range+1
 12464  2523  0021               	movlb	1	; select bank1
 12465  2524  0835               	movf	setLEDBrightnessRange@r^(0+128),w
 12466  2525  0020               	movlb	0	; select bank0
 12467  2526  00C4               	movwf	LED_setBrightnessRange@range
 12468  2527  0021               	movlb	1	; select bank1
 12469  2528  0838               	movf	(setLEDBrightnessRange@tOB+1)^(0+128),w
 12470  2529  0020               	movlb	0	; select bank0
 12471  252A  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 12472  252B  0021               	movlb	1	; select bank1
 12473  252C  0837               	movf	setLEDBrightnessRange@tOB^(0+128),w
 12474  252D  0020               	movlb	0	; select bank0
 12475  252E  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 12476  252F  318B  23DE  31A5   	fcall	_LED_setBrightnessRange
 12477                           
 12478                           ;main.c: 444: printf("A\n");
 12479  2532  3059               	movlw	low (STR_7| (0+32768))
 12480  2533  0021               	movlb	1	; select bank1
 12481  2534  00A0               	movwf	printf@f^(0+128)
 12482  2535  30AA               	movlw	high (STR_7| (0+32768))
 12483  2536  00A1               	movwf	(printf@f^(0+128)+1)
 12484  2537  318E  26CE         	fcall	_printf
 12485                           
 12486                           ;main.c: 445: return 0;
 12487  2539  0021               	movlb	1	; select bank1
 12488  253A  01B5               	clrf	?_setLEDBrightnessRange^(0+128)
 12489  253B  01B6               	clrf	(?_setLEDBrightnessRange+1)^(0+128)
 12490  253C  0008               	return
 12491  253D                     __end_of_setLEDBrightnessRange:	
 12492                           
 12493                           	psect	text28
 12494  0815                     __ptext28:	
 12495 ;; *************** function _setHeaterToggle *****************
 12496 ;; Defined at:
 12497 ;;		line 459 in file "main.c"
 12498 ;; Parameters:    Size  Location     Type
 12499 ;;  num             2   21[BANK1 ] int 
 12500 ;;  topOrB          2   23[BANK1 ] int 
 12501 ;; Auto vars:     Size  Location     Type
 12502 ;;		None
 12503 ;; Return value:  Size  Location     Type
 12504 ;;                  2   21[BANK1 ] int 
 12505 ;; Registers used:
 12506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12507 ;; Tracked objects:
 12508 ;;		On entry : 0/0
 12509 ;;		On exit  : 0/0
 12510 ;;		Unchanged: 0/0
 12511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12512 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12514 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12515 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12516 ;;Total ram usage:        8 bytes
 12517 ;; Hardware stack levels used:    1
 12518 ;; Hardware stack levels required when called:    9
 12519 ;; This function calls:
 12520 ;;		_LEDsOn
 12521 ;;		_printf
 12522 ;; This function is called by:
 12523 ;;		_execCmd
 12524 ;; This function uses a non-reentrant model
 12525 ;;
 12526                           
 12527                           
 12528                           ;psect for function _setHeaterToggle
 12529  0815                     _setHeaterToggle:	
 12530                           
 12531                           ;incstack = 0
 12532                           ; Regs used in _setHeaterToggle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12533                           ;main.c: 460: do { LATCbits.LATC1 = 0; } while(0);
 12534  0815  0022               	movlb	2	; select bank2
 12535  0816  108E               	bcf	14,1	;volatile
 12536                           
 12537                           ;main.c: 461: if(topOrB == 1){
 12538  0817  0021               	movlb	1	; select bank1
 12539  0818  0337               	decf	setHeaterToggle@topOrB^(0+128),w
 12540  0819  0438               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12541  081A  1D03               	btfss	3,2
 12542  081B  284C               	goto	l8066
 12543                           
 12544                           ;main.c: 462: demoHeaterToggle_top ^= 1UL << num;
 12545  081C  3001               	movlw	1
 12546  081D  00B9               	movwf	??_setHeaterToggle^(0+128)
 12547  081E  3000               	movlw	0
 12548  081F  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 12549  0820  3000               	movlw	0
 12550  0821  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 12551  0822  3000               	movlw	0
 12552  0823  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 12553  0824  0A35               	incf	setHeaterToggle@num^(0+128),w
 12554  0825  282A               	goto	u7990
 12555  0826                     u7995:	
 12556  0826  35B9               	lslf	??_setHeaterToggle^(0+128),f
 12557  0827  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12558  0828  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12559  0829  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12560  082A                     u7990:	
 12561  082A  0B89               	decfsz	9,f
 12562  082B  2826               	goto	u7995
 12563  082C  0839               	movf	??_setHeaterToggle^(0+128),w
 12564  082D  0022               	movlb	2	; select bank2
 12565  082E  06C6               	xorwf	_demoHeaterToggle_top^(0+256),f
 12566  082F  0021               	movlb	1	; select bank1
 12567  0830  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 12568  0831  0022               	movlb	2	; select bank2
 12569  0832  06C7               	xorwf	(_demoHeaterToggle_top+1)^(0+256),f
 12570  0833  0021               	movlb	1	; select bank1
 12571  0834  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 12572  0835  0022               	movlb	2	; select bank2
 12573  0836  06C8               	xorwf	(_demoHeaterToggle_top+2)^(0+256),f
 12574  0837  0021               	movlb	1	; select bank1
 12575  0838  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 12576  0839  0022               	movlb	2	; select bank2
 12577  083A  06C9               	xorwf	(_demoHeaterToggle_top+3)^(0+256),f
 12578                           
 12579                           ;main.c: 463: LEDsOn(demoHeaterToggle_top, 1);
 12580  083B  0849               	movf	(_demoHeaterToggle_top+3)^(0+256),w
 12581  083C  0020               	movlb	0	; select bank0
 12582  083D  00C7               	movwf	LEDsOn@LEDpins+3
 12583  083E  0022               	movlb	2	; select bank2
 12584  083F  0848               	movf	(_demoHeaterToggle_top+2)^(0+256),w
 12585  0840  0020               	movlb	0	; select bank0
 12586  0841  00C6               	movwf	LEDsOn@LEDpins+2
 12587  0842  0022               	movlb	2	; select bank2
 12588  0843  0847               	movf	(_demoHeaterToggle_top+1)^(0+256),w
 12589  0844  0020               	movlb	0	; select bank0
 12590  0845  00C5               	movwf	LEDsOn@LEDpins+1
 12591  0846  0022               	movlb	2	; select bank2
 12592  0847  0846               	movf	_demoHeaterToggle_top^(0+256),w
 12593  0848  0020               	movlb	0	; select bank0
 12594  0849  00C4               	movwf	LEDsOn@LEDpins
 12595  084A  3001               	movlw	1
 12596  084B  2881               	goto	L23
 12597  084C                     l8066:	
 12598                           ;main.c: 464: }
 12599                           
 12600                           
 12601                           ;main.c: 465: else if (topOrB == 2){
 12602  084C  3002               	movlw	2
 12603  084D  0021               	movlb	1	; select bank1
 12604  084E  0637               	xorwf	setHeaterToggle@topOrB^(0+128),w
 12605  084F  0438               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12606  0850  1D03               	btfss	3,2
 12607  0851  2887               	goto	l8072
 12608                           
 12609                           ;main.c: 466: demoHeaterToggle_bot ^= 1UL << num;
 12610  0852  3001               	movlw	1
 12611  0853  00B9               	movwf	??_setHeaterToggle^(0+128)
 12612  0854  3000               	movlw	0
 12613  0855  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 12614  0856  3000               	movlw	0
 12615  0857  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 12616  0858  3000               	movlw	0
 12617  0859  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 12618  085A  0A35               	incf	setHeaterToggle@num^(0+128),w
 12619  085B  2860               	goto	u8010
 12620  085C                     u8015:	
 12621  085C  35B9               	lslf	??_setHeaterToggle^(0+128),f
 12622  085D  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12623  085E  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12624  085F  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12625  0860                     u8010:	
 12626  0860  0B89               	decfsz	9,f
 12627  0861  285C               	goto	u8015
 12628  0862  0839               	movf	??_setHeaterToggle^(0+128),w
 12629  0863  0022               	movlb	2	; select bank2
 12630  0864  06C2               	xorwf	_demoHeaterToggle_bot^(0+256),f
 12631  0865  0021               	movlb	1	; select bank1
 12632  0866  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 12633  0867  0022               	movlb	2	; select bank2
 12634  0868  06C3               	xorwf	(_demoHeaterToggle_bot+1)^(0+256),f
 12635  0869  0021               	movlb	1	; select bank1
 12636  086A  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 12637  086B  0022               	movlb	2	; select bank2
 12638  086C  06C4               	xorwf	(_demoHeaterToggle_bot+2)^(0+256),f
 12639  086D  0021               	movlb	1	; select bank1
 12640  086E  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 12641  086F  0022               	movlb	2	; select bank2
 12642  0870  06C5               	xorwf	(_demoHeaterToggle_bot+3)^(0+256),f
 12643                           
 12644                           ;main.c: 467: LEDsOn(demoHeaterToggle_bot, 2);
 12645  0871  0845               	movf	(_demoHeaterToggle_bot+3)^(0+256),w
 12646  0872  0020               	movlb	0	; select bank0
 12647  0873  00C7               	movwf	LEDsOn@LEDpins+3
 12648  0874  0022               	movlb	2	; select bank2
 12649  0875  0844               	movf	(_demoHeaterToggle_bot+2)^(0+256),w
 12650  0876  0020               	movlb	0	; select bank0
 12651  0877  00C6               	movwf	LEDsOn@LEDpins+2
 12652  0878  0022               	movlb	2	; select bank2
 12653  0879  0843               	movf	(_demoHeaterToggle_bot+1)^(0+256),w
 12654  087A  0020               	movlb	0	; select bank0
 12655  087B  00C5               	movwf	LEDsOn@LEDpins+1
 12656  087C  0022               	movlb	2	; select bank2
 12657  087D  0842               	movf	_demoHeaterToggle_bot^(0+256),w
 12658  087E  0020               	movlb	0	; select bank0
 12659  087F  00C4               	movwf	LEDsOn@LEDpins
 12660  0880  3002               	movlw	2
 12661  0881                     L23:	
 12662  0881  00C8               	movwf	LEDsOn@topOrBottom
 12663  0882  3000               	movlw	0
 12664  0883  00C9               	movwf	LEDsOn@topOrBottom+1
 12665  0884  31A5  25DC  3188   	fcall	_LEDsOn
 12666  0887                     l8072:	
 12667                           
 12668                           ;main.c: 468: }
 12669                           ;main.c: 470: printf("A\n");
 12670  0887  3059               	movlw	low (STR_7| (0+32768))
 12671  0888  0021               	movlb	1	; select bank1
 12672  0889  00A0               	movwf	printf@f^(0+128)
 12673  088A  30AA               	movlw	high (STR_7| (0+32768))
 12674  088B  00A1               	movwf	(printf@f^(0+128)+1)
 12675  088C  318E  26CE         	fcall	_printf
 12676                           
 12677                           ;main.c: 471: return 0;
 12678  088E  0021               	movlb	1	; select bank1
 12679  088F  01B5               	clrf	?_setHeaterToggle^(0+128)
 12680  0890  01B6               	clrf	(?_setHeaterToggle+1)^(0+128)
 12681  0891  0008               	return
 12682  0892                     __end_of_setHeaterToggle:	
 12683                           
 12684                           	psect	text29
 12685  1EDE                     __ptext29:	
 12686 ;; *************** function _setHeaterPreTime *****************
 12687 ;; Defined at:
 12688 ;;		line 426 in file "main.c"
 12689 ;; Parameters:    Size  Location     Type
 12690 ;;  t               2   29[BANK1 ] int 
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;		None
 12693 ;; Return value:  Size  Location     Type
 12694 ;;                  2   29[BANK1 ] int 
 12695 ;; Registers used:
 12696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12697 ;; Tracked objects:
 12698 ;;		On entry : 0/0
 12699 ;;		On exit  : 0/0
 12700 ;;		Unchanged: 0/0
 12701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12702 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12704 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12705 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12706 ;;Total ram usage:        4 bytes
 12707 ;; Hardware stack levels used:    1
 12708 ;; Hardware stack levels required when called:    9
 12709 ;; This function calls:
 12710 ;;		_TMR0_Load8bitPeriod
 12711 ;;		___awtoft
 12712 ;;		___ftadd
 12713 ;;		___ftmul
 12714 ;;		___fttol
 12715 ;;		_printf
 12716 ;; This function is called by:
 12717 ;;		_execCmd
 12718 ;; This function uses a non-reentrant model
 12719 ;;
 12720                           
 12721                           
 12722                           ;psect for function _setHeaterPreTime
 12723  1EDE                     _setHeaterPreTime:	
 12724                           
 12725                           ;main.c: 427: heater_pre_time_ms = t;
 12726                           
 12727                           ;incstack = 0
 12728                           ; Regs used in _setHeaterPreTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12729  1EDE  0021               	movlb	1	; select bank1
 12730  1EDF  083E               	movf	(setHeaterPreTime@t+1)^(0+128),w
 12731  1EE0  00EE               	movwf	(_heater_pre_time_ms+1)^(0+128)
 12732  1EE1  083D               	movf	setHeaterPreTime@t^(0+128),w
 12733  1EE2  00ED               	movwf	_heater_pre_time_ms^(0+128)
 12734                           
 12735                           ;main.c: 428: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 12736  1EE3  096D               	comf	_heater_pre_time_ms^(0+128),w
 12737  1EE4  00BF               	movwf	??_setHeaterPreTime^(0+128)
 12738  1EE5  096E               	comf	(_heater_pre_time_ms+1)^(0+128),w
 12739  1EE6  00C0               	movwf	(??_setHeaterPreTime^(0+128)+1)
 12740  1EE7  0ABF               	incf	??_setHeaterPreTime^(0+128),f
 12741  1EE8  1903               	skipnz
 12742  1EE9  0AC0               	incf	(??_setHeaterPreTime^(0+128)+1),f
 12743  1EEA  0869               	movf	_piezo_on_time_ms^(0+128),w
 12744  1EEB  073F               	addwf	??_setHeaterPreTime^(0+128),w
 12745  1EEC  0020               	movlb	0	; select bank0
 12746  1EED  00B9               	movwf	___awtoft@c
 12747  1EEE  0021               	movlb	1	; select bank1
 12748  1EEF  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 12749  1EF0  3D40               	addwfc	(??_setHeaterPreTime+1)^(0+128),w
 12750  1EF1  0020               	movlb	0	; select bank0
 12751  1EF2  00BA               	movwf	___awtoft@c+1
 12752  1EF3  31A5  25FD  319E   	fcall	___awtoft
 12753  1EF6  0020               	movlb	0	; select bank0
 12754  1EF7  0839               	movf	?___awtoft,w
 12755  1EF8  00C2               	movwf	___ftmul@f2
 12756  1EF9  083A               	movf	?___awtoft+1,w
 12757  1EFA  00C3               	movwf	___ftmul@f2+1
 12758  1EFB  083B               	movf	?___awtoft+2,w
 12759  1EFC  00C4               	movwf	___ftmul@f2+2
 12760  1EFD  3056               	movlw	low (_TMR0_RANGE| (0+32768))
 12761  1EFE  0084               	movwf	4
 12762  1EFF  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 12763  1F00  0085               	movwf	5
 12764  1F01  3F00               	moviw [0]fsr0
 12765  1F02  00BF               	movwf	___ftmul@f1
 12766  1F03  3F01               	moviw [1]fsr0
 12767  1F04  00C0               	movwf	___ftmul@f1+1
 12768  1F05  3F02               	moviw [2]fsr0
 12769  1F06  00C1               	movwf	___ftmul@f1+2
 12770  1F07  318C  24BC  319E   	fcall	___ftmul
 12771  1F0A  0020               	movlb	0	; select bank0
 12772  1F0B  083F               	movf	?___ftmul,w
 12773  1F0C  0021               	movlb	1	; select bank1
 12774  1F0D  00A9               	movwf	___ftadd@f2^(0+128)
 12775  1F0E  0020               	movlb	0	; select bank0
 12776  1F0F  0840               	movf	?___ftmul+1,w
 12777  1F10  0021               	movlb	1	; select bank1
 12778  1F11  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 12779  1F12  0020               	movlb	0	; select bank0
 12780  1F13  0841               	movf	?___ftmul+2,w
 12781  1F14  0021               	movlb	1	; select bank1
 12782  1F15  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 12783  1F16  3000               	movlw	0
 12784  1F17  00A6               	movwf	___ftadd@f1^(0+128)
 12785  1F18  3080               	movlw	128
 12786  1F19  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 12787  1F1A  30BF               	movlw	191
 12788  1F1B  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 12789  1F1C  3186  26D1  319E   	fcall	___ftadd
 12790  1F1F  0021               	movlb	1	; select bank1
 12791  1F20  0826               	movf	?___ftadd^(0+128),w
 12792  1F21  00AF               	movwf	___fttol@f1^(0+128)
 12793  1F22  0827               	movf	(?___ftadd+1)^(0+128),w
 12794  1F23  00B0               	movwf	(___fttol@f1+1)^(0+128)
 12795  1F24  0828               	movf	(?___ftadd+2)^(0+128),w
 12796  1F25  00B1               	movwf	(___fttol@f1+2)^(0+128)
 12797  1F26  3188  2092  319E   	fcall	___fttol
 12798  1F29  0021               	movlb	1	; select bank1
 12799  1F2A  082F               	movf	?___fttol^(0+128),w
 12800  1F2B  31A2  2258  319E   	fcall	_TMR0_Load8bitPeriod
 12801                           
 12802                           ;main.c: 429: printf("A\n");
 12803  1F2E  3059               	movlw	low (STR_7| (0+32768))
 12804  1F2F  0021               	movlb	1	; select bank1
 12805  1F30  00A0               	movwf	printf@f^(0+128)
 12806  1F31  30AA               	movlw	high (STR_7| (0+32768))
 12807  1F32  00A1               	movwf	(printf@f^(0+128)+1)
 12808  1F33  318E  26CE         	fcall	_printf
 12809                           
 12810                           ;main.c: 430: return 0;
 12811  1F35  0021               	movlb	1	; select bank1
 12812  1F36  01BD               	clrf	?_setHeaterPreTime^(0+128)
 12813  1F37  01BE               	clrf	(?_setHeaterPreTime+1)^(0+128)
 12814  1F38  0008               	return
 12815  1F39                     __end_of_setHeaterPreTime:	
 12816                           
 12817                           	psect	text30
 12818  1CD2                     __ptext30:	
 12819 ;; *************** function _setHeaterPostTime *****************
 12820 ;; Defined at:
 12821 ;;		line 432 in file "main.c"
 12822 ;; Parameters:    Size  Location     Type
 12823 ;;  t               2   29[BANK1 ] int 
 12824 ;; Auto vars:     Size  Location     Type
 12825 ;;		None
 12826 ;; Return value:  Size  Location     Type
 12827 ;;                  2   29[BANK1 ] int 
 12828 ;; Registers used:
 12829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12830 ;; Tracked objects:
 12831 ;;		On entry : 0/0
 12832 ;;		On exit  : 0/0
 12833 ;;		Unchanged: 0/0
 12834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12835 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12838 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12839 ;;Total ram usage:        2 bytes
 12840 ;; Hardware stack levels used:    1
 12841 ;; Hardware stack levels required when called:    9
 12842 ;; This function calls:
 12843 ;;		_TMR2_LoadPeriodRegister
 12844 ;;		___awtoft
 12845 ;;		___ftadd
 12846 ;;		___ftmul
 12847 ;;		___fttol
 12848 ;;		_printf
 12849 ;; This function is called by:
 12850 ;;		_execCmd
 12851 ;; This function uses a non-reentrant model
 12852 ;;
 12853                           
 12854                           
 12855                           ;psect for function _setHeaterPostTime
 12856  1CD2                     _setHeaterPostTime:	
 12857                           
 12858                           ;main.c: 433: heater_post_time_ms = t;
 12859                           
 12860                           ;incstack = 0
 12861                           ; Regs used in _setHeaterPostTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12862  1CD2  0021               	movlb	1	; select bank1
 12863  1CD3  083E               	movf	(setHeaterPostTime@t+1)^(0+128),w
 12864  1CD4  00EC               	movwf	(_heater_post_time_ms+1)^(0+128)
 12865  1CD5  083D               	movf	setHeaterPostTime@t^(0+128),w
 12866  1CD6  00EB               	movwf	_heater_post_time_ms^(0+128)
 12867                           
 12868                           ;main.c: 434: TMR2_LoadPeriodRegister((heater_post_time_ms*TMR2_RANGE)-1);
 12869  1CD7  086C               	movf	(_heater_post_time_ms+1)^(0+128),w
 12870  1CD8  0020               	movlb	0	; select bank0
 12871  1CD9  00BA               	movwf	___awtoft@c+1
 12872  1CDA  0021               	movlb	1	; select bank1
 12873  1CDB  086B               	movf	_heater_post_time_ms^(0+128),w
 12874  1CDC  0020               	movlb	0	; select bank0
 12875  1CDD  00B9               	movwf	___awtoft@c
 12876  1CDE  31A5  25FD  319C   	fcall	___awtoft
 12877  1CE1  0020               	movlb	0	; select bank0
 12878  1CE2  0839               	movf	?___awtoft,w
 12879  1CE3  00C2               	movwf	___ftmul@f2
 12880  1CE4  083A               	movf	?___awtoft+1,w
 12881  1CE5  00C3               	movwf	___ftmul@f2+1
 12882  1CE6  083B               	movf	?___awtoft+2,w
 12883  1CE7  00C4               	movwf	___ftmul@f2+2
 12884  1CE8  3053               	movlw	low (_TMR2_RANGE| (0+32768))
 12885  1CE9  0084               	movwf	4
 12886  1CEA  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
 12887  1CEB  0085               	movwf	5
 12888  1CEC  3F00               	moviw [0]fsr0
 12889  1CED  00BF               	movwf	___ftmul@f1
 12890  1CEE  3F01               	moviw [1]fsr0
 12891  1CEF  00C0               	movwf	___ftmul@f1+1
 12892  1CF0  3F02               	moviw [2]fsr0
 12893  1CF1  00C1               	movwf	___ftmul@f1+2
 12894  1CF2  318C  24BC  319C   	fcall	___ftmul
 12895  1CF5  0020               	movlb	0	; select bank0
 12896  1CF6  083F               	movf	?___ftmul,w
 12897  1CF7  0021               	movlb	1	; select bank1
 12898  1CF8  00A9               	movwf	___ftadd@f2^(0+128)
 12899  1CF9  0020               	movlb	0	; select bank0
 12900  1CFA  0840               	movf	?___ftmul+1,w
 12901  1CFB  0021               	movlb	1	; select bank1
 12902  1CFC  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 12903  1CFD  0020               	movlb	0	; select bank0
 12904  1CFE  0841               	movf	?___ftmul+2,w
 12905  1CFF  0021               	movlb	1	; select bank1
 12906  1D00  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 12907  1D01  3000               	movlw	0
 12908  1D02  00A6               	movwf	___ftadd@f1^(0+128)
 12909  1D03  3080               	movlw	128
 12910  1D04  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 12911  1D05  30BF               	movlw	191
 12912  1D06  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 12913  1D07  3186  26D1  319C   	fcall	___ftadd
 12914  1D0A  0021               	movlb	1	; select bank1
 12915  1D0B  0826               	movf	?___ftadd^(0+128),w
 12916  1D0C  00AF               	movwf	___fttol@f1^(0+128)
 12917  1D0D  0827               	movf	(?___ftadd+1)^(0+128),w
 12918  1D0E  00B0               	movwf	(___fttol@f1+1)^(0+128)
 12919  1D0F  0828               	movf	(?___ftadd+2)^(0+128),w
 12920  1D10  00B1               	movwf	(___fttol@f1+2)^(0+128)
 12921  1D11  3188  2092  319C   	fcall	___fttol
 12922  1D14  0021               	movlb	1	; select bank1
 12923  1D15  082F               	movf	?___fttol^(0+128),w
 12924  1D16  31A2  225D  319C   	fcall	_TMR2_LoadPeriodRegister
 12925                           
 12926                           ;main.c: 435: printf("A\n");
 12927  1D19  3059               	movlw	low (STR_7| (0+32768))
 12928  1D1A  0021               	movlb	1	; select bank1
 12929  1D1B  00A0               	movwf	printf@f^(0+128)
 12930  1D1C  30AA               	movlw	high (STR_7| (0+32768))
 12931  1D1D  00A1               	movwf	(printf@f^(0+128)+1)
 12932  1D1E  318E  26CE         	fcall	_printf
 12933                           
 12934                           ;main.c: 436: return 0;
 12935  1D20  0021               	movlb	1	; select bank1
 12936  1D21  01BD               	clrf	?_setHeaterPostTime^(0+128)
 12937  1D22  01BE               	clrf	(?_setHeaterPostTime+1)^(0+128)
 12938  1D23  0008               	return
 12939  1D24                     __end_of_setHeaterPostTime:	
 12940                           
 12941                           	psect	text31
 12942  225D                     __ptext31:	
 12943 ;; *************** function _TMR2_LoadPeriodRegister *****************
 12944 ;; Defined at:
 12945 ;;		line 112 in file "mcc_generated_files/tmr2.c"
 12946 ;; Parameters:    Size  Location     Type
 12947 ;;  periodVal       1    wreg     unsigned char 
 12948 ;; Auto vars:     Size  Location     Type
 12949 ;;  periodVal       1   17[BANK0 ] unsigned char 
 12950 ;; Return value:  Size  Location     Type
 12951 ;;                  1    wreg      void 
 12952 ;; Registers used:
 12953 ;;		wreg
 12954 ;; Tracked objects:
 12955 ;;		On entry : 0/0
 12956 ;;		On exit  : 0/0
 12957 ;;		Unchanged: 0/0
 12958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12962 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12963 ;;Total ram usage:        1 bytes
 12964 ;; Hardware stack levels used:    1
 12965 ;; Hardware stack levels required when called:    6
 12966 ;; This function calls:
 12967 ;;		Nothing
 12968 ;; This function is called by:
 12969 ;;		_main_initialize
 12970 ;;		_setHeaterPostTime
 12971 ;; This function uses a non-reentrant model
 12972 ;;
 12973                           
 12974                           
 12975                           ;psect for function _TMR2_LoadPeriodRegister
 12976  225D                     _TMR2_LoadPeriodRegister:	
 12977                           
 12978                           ;incstack = 0
 12979                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
 12980                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
 12981  225D  0020               	movlb	0	; select bank0
 12982  225E  00B1               	movwf	TMR2_LoadPeriodRegister@periodVal
 12983                           
 12984                           ;tmr2.c: 114: PR2 = periodVal;
 12985  225F  0831               	movf	TMR2_LoadPeriodRegister@periodVal,w
 12986  2260  009E               	movwf	30	;volatile
 12987  2261  0008               	return
 12988  2262                     __end_of_TMR2_LoadPeriodRegister:	
 12989                           
 12990                           	psect	text32
 12991  1E83                     __ptext32:	
 12992 ;; *************** function _setDrvPiezoOnTime *****************
 12993 ;; Defined at:
 12994 ;;		line 415 in file "main.c"
 12995 ;; Parameters:    Size  Location     Type
 12996 ;;  t               2   29[BANK1 ] int 
 12997 ;; Auto vars:     Size  Location     Type
 12998 ;;		None
 12999 ;; Return value:  Size  Location     Type
 13000 ;;                  2   29[BANK1 ] int 
 13001 ;; Registers used:
 13002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13003 ;; Tracked objects:
 13004 ;;		On entry : 0/0
 13005 ;;		On exit  : 0/0
 13006 ;;		Unchanged: 0/0
 13007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13008 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13010 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13011 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13012 ;;Total ram usage:        4 bytes
 13013 ;; Hardware stack levels used:    1
 13014 ;; Hardware stack levels required when called:    9
 13015 ;; This function calls:
 13016 ;;		_TMR0_Load8bitPeriod
 13017 ;;		___awtoft
 13018 ;;		___ftadd
 13019 ;;		___ftmul
 13020 ;;		___fttol
 13021 ;;		_printf
 13022 ;; This function is called by:
 13023 ;;		_execCmd
 13024 ;; This function uses a non-reentrant model
 13025 ;;
 13026                           
 13027                           
 13028                           ;psect for function _setDrvPiezoOnTime
 13029  1E83                     _setDrvPiezoOnTime:	
 13030                           
 13031                           ;main.c: 416: piezo_on_time_ms = t;
 13032                           
 13033                           ;incstack = 0
 13034                           ; Regs used in _setDrvPiezoOnTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13035  1E83  0021               	movlb	1	; select bank1
 13036  1E84  083E               	movf	(setDrvPiezoOnTime@t+1)^(0+128),w
 13037  1E85  00EA               	movwf	(_piezo_on_time_ms+1)^(0+128)
 13038  1E86  083D               	movf	setDrvPiezoOnTime@t^(0+128),w
 13039  1E87  00E9               	movwf	_piezo_on_time_ms^(0+128)
 13040                           
 13041                           ;main.c: 417: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 13042  1E88  096D               	comf	_heater_pre_time_ms^(0+128),w
 13043  1E89  00BF               	movwf	??_setDrvPiezoOnTime^(0+128)
 13044  1E8A  096E               	comf	(_heater_pre_time_ms+1)^(0+128),w
 13045  1E8B  00C0               	movwf	(??_setDrvPiezoOnTime^(0+128)+1)
 13046  1E8C  0ABF               	incf	??_setDrvPiezoOnTime^(0+128),f
 13047  1E8D  1903               	skipnz
 13048  1E8E  0AC0               	incf	(??_setDrvPiezoOnTime^(0+128)+1),f
 13049  1E8F  0869               	movf	_piezo_on_time_ms^(0+128),w
 13050  1E90  073F               	addwf	??_setDrvPiezoOnTime^(0+128),w
 13051  1E91  0020               	movlb	0	; select bank0
 13052  1E92  00B9               	movwf	___awtoft@c
 13053  1E93  0021               	movlb	1	; select bank1
 13054  1E94  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 13055  1E95  3D40               	addwfc	(??_setDrvPiezoOnTime+1)^(0+128),w
 13056  1E96  0020               	movlb	0	; select bank0
 13057  1E97  00BA               	movwf	___awtoft@c+1
 13058  1E98  31A5  25FD  319E   	fcall	___awtoft
 13059  1E9B  0020               	movlb	0	; select bank0
 13060  1E9C  0839               	movf	?___awtoft,w
 13061  1E9D  00C2               	movwf	___ftmul@f2
 13062  1E9E  083A               	movf	?___awtoft+1,w
 13063  1E9F  00C3               	movwf	___ftmul@f2+1
 13064  1EA0  083B               	movf	?___awtoft+2,w
 13065  1EA1  00C4               	movwf	___ftmul@f2+2
 13066  1EA2  3056               	movlw	low (_TMR0_RANGE| (0+32768))
 13067  1EA3  0084               	movwf	4
 13068  1EA4  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 13069  1EA5  0085               	movwf	5
 13070  1EA6  3F00               	moviw [0]fsr0
 13071  1EA7  00BF               	movwf	___ftmul@f1
 13072  1EA8  3F01               	moviw [1]fsr0
 13073  1EA9  00C0               	movwf	___ftmul@f1+1
 13074  1EAA  3F02               	moviw [2]fsr0
 13075  1EAB  00C1               	movwf	___ftmul@f1+2
 13076  1EAC  318C  24BC  319E   	fcall	___ftmul
 13077  1EAF  0020               	movlb	0	; select bank0
 13078  1EB0  083F               	movf	?___ftmul,w
 13079  1EB1  0021               	movlb	1	; select bank1
 13080  1EB2  00A9               	movwf	___ftadd@f2^(0+128)
 13081  1EB3  0020               	movlb	0	; select bank0
 13082  1EB4  0840               	movf	?___ftmul+1,w
 13083  1EB5  0021               	movlb	1	; select bank1
 13084  1EB6  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 13085  1EB7  0020               	movlb	0	; select bank0
 13086  1EB8  0841               	movf	?___ftmul+2,w
 13087  1EB9  0021               	movlb	1	; select bank1
 13088  1EBA  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 13089  1EBB  3000               	movlw	0
 13090  1EBC  00A6               	movwf	___ftadd@f1^(0+128)
 13091  1EBD  3080               	movlw	128
 13092  1EBE  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 13093  1EBF  30BF               	movlw	191
 13094  1EC0  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 13095  1EC1  3186  26D1  319E   	fcall	___ftadd
 13096  1EC4  0021               	movlb	1	; select bank1
 13097  1EC5  0826               	movf	?___ftadd^(0+128),w
 13098  1EC6  00AF               	movwf	___fttol@f1^(0+128)
 13099  1EC7  0827               	movf	(?___ftadd+1)^(0+128),w
 13100  1EC8  00B0               	movwf	(___fttol@f1+1)^(0+128)
 13101  1EC9  0828               	movf	(?___ftadd+2)^(0+128),w
 13102  1ECA  00B1               	movwf	(___fttol@f1+2)^(0+128)
 13103  1ECB  3188  2092  319E   	fcall	___fttol
 13104  1ECE  0021               	movlb	1	; select bank1
 13105  1ECF  082F               	movf	?___fttol^(0+128),w
 13106  1ED0  31A2  2258  319E   	fcall	_TMR0_Load8bitPeriod
 13107                           
 13108                           ;main.c: 418: printf("A\n");
 13109  1ED3  3059               	movlw	low (STR_7| (0+32768))
 13110  1ED4  0021               	movlb	1	; select bank1
 13111  1ED5  00A0               	movwf	printf@f^(0+128)
 13112  1ED6  30AA               	movlw	high (STR_7| (0+32768))
 13113  1ED7  00A1               	movwf	(printf@f^(0+128)+1)
 13114  1ED8  318E  26CE         	fcall	_printf
 13115                           
 13116                           ;main.c: 419: return 0;
 13117  1EDA  0021               	movlb	1	; select bank1
 13118  1EDB  01BD               	clrf	?_setDrvPiezoOnTime^(0+128)
 13119  1EDC  01BE               	clrf	(?_setDrvPiezoOnTime+1)^(0+128)
 13120  1EDD  0008               	return
 13121  1EDE                     __end_of_setDrvPiezoOnTime:	
 13122                           
 13123                           	psect	text33
 13124  0892                     __ptext33:	
 13125 ;; *************** function ___fttol *****************
 13126 ;; Defined at:
 13127 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 13128 ;; Parameters:    Size  Location     Type
 13129 ;;  f1              3   15[BANK1 ] float 
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;  lval            4   24[BANK1 ] unsigned long 
 13132 ;;  exp1            1   28[BANK1 ] unsigned char 
 13133 ;;  sign1           1   23[BANK1 ] unsigned char 
 13134 ;; Return value:  Size  Location     Type
 13135 ;;                  4   15[BANK1 ] long 
 13136 ;; Registers used:
 13137 ;;		wreg, status,2, status,0
 13138 ;; Tracked objects:
 13139 ;;		On entry : 0/0
 13140 ;;		On exit  : 0/0
 13141 ;;		Unchanged: 0/0
 13142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13143 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13144 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13145 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13146 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13147 ;;Total ram usage:       14 bytes
 13148 ;; Hardware stack levels used:    1
 13149 ;; Hardware stack levels required when called:    6
 13150 ;; This function calls:
 13151 ;;		Nothing
 13152 ;; This function is called by:
 13153 ;;		_main_initialize
 13154 ;;		_setDrvPiezoOnTime
 13155 ;;		_setHeaterPreTime
 13156 ;;		_setHeaterPostTime
 13157 ;;		_drv_outputSine
 13158 ;; This function uses a non-reentrant model
 13159 ;;
 13160                           
 13161                           
 13162                           ;psect for function ___fttol
 13163  0892                     ___fttol:	
 13164                           
 13165                           ;incstack = 0
 13166                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 13167  0892  0021               	movlb	1	; select bank1
 13168  0893  082F               	movf	___fttol@f1^(0+128),w
 13169  0894  00B3               	movwf	??___fttol^(0+128)
 13170  0895  0830               	movf	(___fttol@f1+1)^(0+128),w
 13171  0896  00B4               	movwf	(??___fttol^(0+128)+1)
 13172  0897  0831               	movf	(___fttol@f1+2)^(0+128),w
 13173  0898  00B5               	movwf	(??___fttol^(0+128)+2)
 13174  0899  1003               	clrc
 13175  089A  0D34               	rlf	(??___fttol^(0+128)+1),w
 13176  089B  0D35               	rlf	(??___fttol^(0+128)+2),w
 13177  089C  00B6               	movwf	(??___fttol+3)^(0+128)
 13178  089D  0836               	movf	(??___fttol+3)^(0+128),w
 13179  089E  00BC               	movwf	___fttol@exp1^(0+128)
 13180  089F  083C               	movf	___fttol@exp1^(0+128),w
 13181  08A0  1D03               	btfss	3,2
 13182  08A1  28AB               	goto	l5652
 13183  08A2  3000               	movlw	0
 13184  08A3  00B2               	movwf	(?___fttol+3)^(0+128)
 13185  08A4  3000               	movlw	0
 13186  08A5  00B1               	movwf	(?___fttol+2)^(0+128)
 13187  08A6  3000               	movlw	0
 13188  08A7  00B0               	movwf	(?___fttol+1)^(0+128)
 13189  08A8  3000               	movlw	0
 13190  08A9  00AF               	movwf	?___fttol^(0+128)
 13191  08AA  0008               	return
 13192  08AB                     l5652:	
 13193  08AB  082F               	movf	___fttol@f1^(0+128),w
 13194  08AC  00B3               	movwf	??___fttol^(0+128)
 13195  08AD  0830               	movf	(___fttol@f1+1)^(0+128),w
 13196  08AE  00B4               	movwf	(??___fttol^(0+128)+1)
 13197  08AF  0831               	movf	(___fttol@f1+2)^(0+128),w
 13198  08B0  00B5               	movwf	(??___fttol^(0+128)+2)
 13199  08B1  3017               	movlw	23
 13200  08B2                     u4975:	
 13201  08B2  36B5               	lsrf	(??___fttol^(0+128)+2),f
 13202  08B3  0CB4               	rrf	(??___fttol^(0+128)+1),f
 13203  08B4  0CB3               	rrf	??___fttol^(0+128),f
 13204  08B5  0B89               	decfsz	9,f
 13205  08B6  28B2               	goto	u4975
 13206  08B7  0833               	movf	??___fttol^(0+128),w
 13207  08B8  00B6               	movwf	(??___fttol+3)^(0+128)
 13208  08B9  0836               	movf	(??___fttol+3)^(0+128),w
 13209  08BA  00B7               	movwf	___fttol@sign1^(0+128)
 13210  08BB  17B0               	bsf	(___fttol@f1^(0+128)+1),7
 13211  08BC  30FF               	movlw	255
 13212  08BD  05AF               	andwf	___fttol@f1^(0+128),f
 13213  08BE  30FF               	movlw	255
 13214  08BF  05B0               	andwf	(___fttol@f1+1)^(0+128),f
 13215  08C0  3000               	movlw	0
 13216  08C1  05B1               	andwf	(___fttol@f1+2)^(0+128),f
 13217  08C2  082F               	movf	___fttol@f1^(0+128),w
 13218  08C3  00B8               	movwf	___fttol@lval^(0+128)
 13219  08C4  0830               	movf	(___fttol@f1+1)^(0+128),w
 13220  08C5  00B9               	movwf	(___fttol@lval^(0+128)+1)
 13221  08C6  0831               	movf	(___fttol@f1+2)^(0+128),w
 13222  08C7  00BA               	movwf	(___fttol@lval^(0+128)+2)
 13223  08C8  01BB               	clrf	(___fttol@lval^(0+128)+3)
 13224  08C9  308E               	movlw	142
 13225  08CA  02BC               	subwf	___fttol@exp1^(0+128),f
 13226  08CB  1FBC               	btfss	___fttol@exp1^(0+128),7
 13227  08CC  28E9               	goto	l5672
 13228  08CD  083C               	movf	___fttol@exp1^(0+128),w
 13229  08CE  3A80               	xorlw	128
 13230  08CF  3E8F               	addlw	143
 13231  08D0  1803               	skipnc
 13232  08D1  28DB               	goto	l5670
 13233  08D2  3000               	movlw	0
 13234  08D3  00B2               	movwf	(?___fttol+3)^(0+128)
 13235  08D4  3000               	movlw	0
 13236  08D5  00B1               	movwf	(?___fttol+2)^(0+128)
 13237  08D6  3000               	movlw	0
 13238  08D7  00B0               	movwf	(?___fttol+1)^(0+128)
 13239  08D8  3000               	movlw	0
 13240  08D9  00AF               	movwf	?___fttol^(0+128)
 13241  08DA  0008               	return
 13242  08DB                     l5670:	
 13243  08DB  3001               	movlw	1
 13244  08DC                     u5005:	
 13245  08DC  36BB               	lsrf	(___fttol@lval+3)^(0+128),f
 13246  08DD  0CBA               	rrf	(___fttol@lval+2)^(0+128),f
 13247  08DE  0CB9               	rrf	(___fttol@lval+1)^(0+128),f
 13248  08DF  0CB8               	rrf	___fttol@lval^(0+128),f
 13249  08E0  0B89               	decfsz	9,f
 13250  08E1  28DC               	goto	u5005
 13251  08E2  3001               	movlw	1
 13252  08E3  00B3               	movwf	??___fttol^(0+128)
 13253  08E4  0833               	movf	??___fttol^(0+128),w
 13254  08E5  07BC               	addwf	___fttol@exp1^(0+128),f
 13255  08E6  1903               	btfsc	3,2
 13256  08E7  2902               	goto	l5680
 13257  08E8  28DB               	goto	l5670
 13258  08E9                     l5672:	
 13259  08E9  3018               	movlw	24
 13260  08EA  023C               	subwf	___fttol@exp1^(0+128),w
 13261  08EB  1C03               	skipc
 13262  08EC  28FF               	goto	l1847
 13263  08ED  3000               	movlw	0
 13264  08EE  00B2               	movwf	(?___fttol+3)^(0+128)
 13265  08EF  3000               	movlw	0
 13266  08F0  00B1               	movwf	(?___fttol+2)^(0+128)
 13267  08F1  3000               	movlw	0
 13268  08F2  00B0               	movwf	(?___fttol+1)^(0+128)
 13269  08F3  3000               	movlw	0
 13270  08F4  00AF               	movwf	?___fttol^(0+128)
 13271  08F5  0008               	return
 13272  08F6                     l5678:	
 13273  08F6  3001               	movlw	1
 13274  08F7                     u5035:	
 13275  08F7  35B8               	lslf	___fttol@lval^(0+128),f
 13276  08F8  0DB9               	rlf	(___fttol@lval+1)^(0+128),f
 13277  08F9  0DBA               	rlf	(___fttol@lval+2)^(0+128),f
 13278  08FA  0DBB               	rlf	(___fttol@lval+3)^(0+128),f
 13279  08FB  0B89               	decfsz	9,f
 13280  08FC  28F7               	goto	u5035
 13281  08FD  3001               	movlw	1
 13282  08FE  02BC               	subwf	___fttol@exp1^(0+128),f
 13283  08FF                     l1847:	
 13284  08FF  083C               	movf	___fttol@exp1^(0+128),w
 13285  0900  1D03               	btfss	3,2
 13286  0901  28F6               	goto	l5678
 13287  0902                     l5680:	
 13288  0902  0837               	movf	___fttol@sign1^(0+128),w
 13289  0903  1903               	btfsc	3,2
 13290  0904  2910               	goto	l5684
 13291  0905  09B8               	comf	___fttol@lval^(0+128),f
 13292  0906  09B9               	comf	(___fttol@lval+1)^(0+128),f
 13293  0907  09BA               	comf	(___fttol@lval+2)^(0+128),f
 13294  0908  09BB               	comf	(___fttol@lval+3)^(0+128),f
 13295  0909  0AB8               	incf	___fttol@lval^(0+128),f
 13296  090A  1903               	skipnz
 13297  090B  0AB9               	incf	(___fttol@lval+1)^(0+128),f
 13298  090C  1903               	skipnz
 13299  090D  0ABA               	incf	(___fttol@lval+2)^(0+128),f
 13300  090E  1903               	skipnz
 13301  090F  0ABB               	incf	(___fttol@lval+3)^(0+128),f
 13302  0910                     l5684:	
 13303  0910  083B               	movf	(___fttol@lval+3)^(0+128),w
 13304  0911  00B2               	movwf	(?___fttol+3)^(0+128)
 13305  0912  083A               	movf	(___fttol@lval+2)^(0+128),w
 13306  0913  00B1               	movwf	(?___fttol+2)^(0+128)
 13307  0914  0839               	movf	(___fttol@lval+1)^(0+128),w
 13308  0915  00B0               	movwf	(?___fttol+1)^(0+128)
 13309  0916  0838               	movf	___fttol@lval^(0+128),w
 13310  0917  00AF               	movwf	?___fttol^(0+128)
 13311  0918  0008               	return
 13312  0919                     __end_of___fttol:	
 13313                           
 13314                           	psect	text34
 13315  0CBC                     __ptext34:	
 13316 ;; *************** function ___ftmul *****************
 13317 ;; Defined at:
 13318 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 13319 ;; Parameters:    Size  Location     Type
 13320 ;;  f1              3   31[BANK0 ] float 
 13321 ;;  f2              3   34[BANK0 ] float 
 13322 ;; Auto vars:     Size  Location     Type
 13323 ;;  f3_as_produc    3    1[BANK1 ] unsigned um
 13324 ;;  sign            1    5[BANK1 ] unsigned char 
 13325 ;;  cntr            1    4[BANK1 ] unsigned char 
 13326 ;;  exp             1    0[BANK1 ] unsigned char 
 13327 ;; Return value:  Size  Location     Type
 13328 ;;                  3   31[BANK0 ] float 
 13329 ;; Registers used:
 13330 ;;		wreg, status,2, status,0, pclath, cstack
 13331 ;; Tracked objects:
 13332 ;;		On entry : 0/0
 13333 ;;		On exit  : 0/0
 13334 ;;		Unchanged: 0/0
 13335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13336 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13337 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13338 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13339 ;;      Totals:         0      10       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13340 ;;Total ram usage:       16 bytes
 13341 ;; Hardware stack levels used:    1
 13342 ;; Hardware stack levels required when called:    7
 13343 ;; This function calls:
 13344 ;;		___ftpack
 13345 ;; This function is called by:
 13346 ;;		_main_initialize
 13347 ;;		_setDrvPiezoOnTime
 13348 ;;		_setHeaterPreTime
 13349 ;;		_setHeaterPostTime
 13350 ;;		_drv_outputSine
 13351 ;; This function uses a non-reentrant model
 13352 ;;
 13353                           
 13354                           
 13355                           ;psect for function ___ftmul
 13356  0CBC                     ___ftmul:	
 13357                           
 13358                           ;incstack = 0
 13359                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 13360  0CBC  0020               	movlb	0	; select bank0
 13361  0CBD  083F               	movf	___ftmul@f1,w
 13362  0CBE  00C5               	movwf	??___ftmul
 13363  0CBF  0840               	movf	___ftmul@f1+1,w
 13364  0CC0  00C6               	movwf	??___ftmul+1
 13365  0CC1  0841               	movf	___ftmul@f1+2,w
 13366  0CC2  00C7               	movwf	??___ftmul+2
 13367  0CC3  1003               	clrc
 13368  0CC4  0D46               	rlf	??___ftmul+1,w
 13369  0CC5  0D47               	rlf	??___ftmul+2,w
 13370  0CC6  00C8               	movwf	??___ftmul+3
 13371  0CC7  0848               	movf	??___ftmul+3,w
 13372  0CC8  0021               	movlb	1	; select bank1
 13373  0CC9  00A0               	movwf	___ftmul@exp^(0+128)
 13374  0CCA  0820               	movf	___ftmul@exp^(0+128),w
 13375  0CCB  1D03               	btfss	3,2
 13376  0CCC  2CD5               	goto	l7774
 13377  0CCD  3000               	movlw	0
 13378  0CCE  0020               	movlb	0	; select bank0
 13379  0CCF  00BF               	movwf	?___ftmul
 13380  0CD0  3000               	movlw	0
 13381  0CD1  00C0               	movwf	?___ftmul+1
 13382  0CD2  3000               	movlw	0
 13383  0CD3  00C1               	movwf	?___ftmul+2
 13384  0CD4  0008               	return
 13385  0CD5                     l7774:	
 13386  0CD5  0020               	movlb	0	; select bank0
 13387  0CD6  0842               	movf	___ftmul@f2,w
 13388  0CD7  00C5               	movwf	??___ftmul
 13389  0CD8  0843               	movf	___ftmul@f2+1,w
 13390  0CD9  00C6               	movwf	??___ftmul+1
 13391  0CDA  0844               	movf	___ftmul@f2+2,w
 13392  0CDB  00C7               	movwf	??___ftmul+2
 13393  0CDC  1003               	clrc
 13394  0CDD  0D46               	rlf	??___ftmul+1,w
 13395  0CDE  0D47               	rlf	??___ftmul+2,w
 13396  0CDF  00C8               	movwf	??___ftmul+3
 13397  0CE0  0848               	movf	??___ftmul+3,w
 13398  0CE1  0021               	movlb	1	; select bank1
 13399  0CE2  00A5               	movwf	___ftmul@sign^(0+128)
 13400  0CE3  0825               	movf	___ftmul@sign^(0+128),w
 13401  0CE4  1D03               	btfss	3,2
 13402  0CE5  2CEE               	goto	l7780
 13403  0CE6  3000               	movlw	0
 13404  0CE7  0020               	movlb	0	; select bank0
 13405  0CE8  00BF               	movwf	?___ftmul
 13406  0CE9  3000               	movlw	0
 13407  0CEA  00C0               	movwf	?___ftmul+1
 13408  0CEB  3000               	movlw	0
 13409  0CEC  00C1               	movwf	?___ftmul+2
 13410  0CED  0008               	return
 13411  0CEE                     l7780:	
 13412  0CEE  0021               	movlb	1	; select bank1
 13413  0CEF  0825               	movf	___ftmul@sign^(0+128),w
 13414  0CF0  3E7B               	addlw	123
 13415  0CF1  0020               	movlb	0	; select bank0
 13416  0CF2  00C5               	movwf	??___ftmul
 13417  0CF3  0845               	movf	??___ftmul,w
 13418  0CF4  0021               	movlb	1	; select bank1
 13419  0CF5  07A0               	addwf	___ftmul@exp^(0+128),f
 13420  0CF6  0020               	movlb	0	; select bank0
 13421  0CF7  083F               	movf	___ftmul@f1,w
 13422  0CF8  00C5               	movwf	??___ftmul
 13423  0CF9  0840               	movf	___ftmul@f1+1,w
 13424  0CFA  00C6               	movwf	??___ftmul+1
 13425  0CFB  0841               	movf	___ftmul@f1+2,w
 13426  0CFC  00C7               	movwf	??___ftmul+2
 13427  0CFD  3010               	movlw	16
 13428  0CFE                     u7805:	
 13429  0CFE  36C7               	lsrf	??___ftmul+2,f
 13430  0CFF  0CC6               	rrf	??___ftmul+1,f
 13431  0D00  0CC5               	rrf	??___ftmul,f
 13432  0D01  0B89               	decfsz	9,f
 13433  0D02  2CFE               	goto	u7805
 13434  0D03  0845               	movf	??___ftmul,w
 13435  0D04  00C8               	movwf	??___ftmul+3
 13436  0D05  0848               	movf	??___ftmul+3,w
 13437  0D06  0021               	movlb	1	; select bank1
 13438  0D07  00A5               	movwf	___ftmul@sign^(0+128)
 13439  0D08  0020               	movlb	0	; select bank0
 13440  0D09  0842               	movf	___ftmul@f2,w
 13441  0D0A  00C5               	movwf	??___ftmul
 13442  0D0B  0843               	movf	___ftmul@f2+1,w
 13443  0D0C  00C6               	movwf	??___ftmul+1
 13444  0D0D  0844               	movf	___ftmul@f2+2,w
 13445  0D0E  00C7               	movwf	??___ftmul+2
 13446  0D0F  3010               	movlw	16
 13447  0D10                     u7815:	
 13448  0D10  36C7               	lsrf	??___ftmul+2,f
 13449  0D11  0CC6               	rrf	??___ftmul+1,f
 13450  0D12  0CC5               	rrf	??___ftmul,f
 13451  0D13  0B89               	decfsz	9,f
 13452  0D14  2D10               	goto	u7815
 13453  0D15  0845               	movf	??___ftmul,w
 13454  0D16  00C8               	movwf	??___ftmul+3
 13455  0D17  0848               	movf	??___ftmul+3,w
 13456  0D18  0021               	movlb	1	; select bank1
 13457  0D19  06A5               	xorwf	___ftmul@sign^(0+128),f
 13458  0D1A  3080               	movlw	128
 13459  0D1B  0020               	movlb	0	; select bank0
 13460  0D1C  00C5               	movwf	??___ftmul
 13461  0D1D  0845               	movf	??___ftmul,w
 13462  0D1E  0021               	movlb	1	; select bank1
 13463  0D1F  05A5               	andwf	___ftmul@sign^(0+128),f
 13464  0D20  0020               	movlb	0	; select bank0
 13465  0D21  17C0               	bsf	___ftmul@f1+1,7
 13466  0D22  17C3               	bsf	___ftmul@f2+1,7
 13467  0D23  30FF               	movlw	255
 13468  0D24  05C2               	andwf	___ftmul@f2,f
 13469  0D25  30FF               	movlw	255
 13470  0D26  05C3               	andwf	___ftmul@f2+1,f
 13471  0D27  3000               	movlw	0
 13472  0D28  05C4               	andwf	___ftmul@f2+2,f
 13473  0D29  3000               	movlw	0
 13474  0D2A  0021               	movlb	1	; select bank1
 13475  0D2B  00A1               	movwf	___ftmul@f3_as_product^(0+128)
 13476  0D2C  3000               	movlw	0
 13477  0D2D  00A2               	movwf	(___ftmul@f3_as_product+1)^(0+128)
 13478  0D2E  3000               	movlw	0
 13479  0D2F  00A3               	movwf	(___ftmul@f3_as_product+2)^(0+128)
 13480  0D30  3007               	movlw	7
 13481  0D31  0020               	movlb	0	; select bank0
 13482  0D32  00C5               	movwf	??___ftmul
 13483  0D33  0845               	movf	??___ftmul,w
 13484  0D34  0021               	movlb	1	; select bank1
 13485  0D35  00A4               	movwf	___ftmul@cntr^(0+128)
 13486  0D36                     l7792:	
 13487  0D36  0020               	movlb	0	; select bank0
 13488  0D37  1C3F               	btfss	___ftmul@f1,0
 13489  0D38  2D44               	goto	l7796
 13490  0D39  0842               	movf	___ftmul@f2,w
 13491  0D3A  0021               	movlb	1	; select bank1
 13492  0D3B  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 13493  0D3C  0020               	movlb	0	; select bank0
 13494  0D3D  0843               	movf	___ftmul@f2+1,w
 13495  0D3E  0021               	movlb	1	; select bank1
 13496  0D3F  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13497  0D40  0020               	movlb	0	; select bank0
 13498  0D41  0844               	movf	___ftmul@f2+2,w
 13499  0D42  0021               	movlb	1	; select bank1
 13500  0D43  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13501  0D44                     l7796:	
 13502  0D44  3001               	movlw	1
 13503  0D45                     u7835:	
 13504  0D45  0020               	movlb	0	; select bank0
 13505  0D46  36C1               	lsrf	___ftmul@f1+2,f
 13506  0D47  0CC0               	rrf	___ftmul@f1+1,f
 13507  0D48  0CBF               	rrf	___ftmul@f1,f
 13508  0D49  0B89               	decfsz	9,f
 13509  0D4A  2D45               	goto	u7835
 13510  0D4B  3001               	movlw	1
 13511  0D4C                     u7845:	
 13512  0D4C  35C2               	lslf	___ftmul@f2,f
 13513  0D4D  0DC3               	rlf	___ftmul@f2+1,f
 13514  0D4E  0DC4               	rlf	___ftmul@f2+2,f
 13515  0D4F  0B89               	decfsz	9,f
 13516  0D50  2D4C               	goto	u7845
 13517  0D51  3001               	movlw	1
 13518  0D52  0021               	movlb	1	; select bank1
 13519  0D53  02A4               	subwf	___ftmul@cntr^(0+128),f
 13520  0D54  1D03               	btfss	3,2
 13521  0D55  2D36               	goto	l7792
 13522  0D56  3009               	movlw	9
 13523  0D57  0020               	movlb	0	; select bank0
 13524  0D58  00C5               	movwf	??___ftmul
 13525  0D59  0845               	movf	??___ftmul,w
 13526  0D5A  0021               	movlb	1	; select bank1
 13527  0D5B  00A4               	movwf	___ftmul@cntr^(0+128)
 13528  0D5C                     l7804:	
 13529  0D5C  0020               	movlb	0	; select bank0
 13530  0D5D  1C3F               	btfss	___ftmul@f1,0
 13531  0D5E  2D6A               	goto	l7808
 13532  0D5F  0842               	movf	___ftmul@f2,w
 13533  0D60  0021               	movlb	1	; select bank1
 13534  0D61  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 13535  0D62  0020               	movlb	0	; select bank0
 13536  0D63  0843               	movf	___ftmul@f2+1,w
 13537  0D64  0021               	movlb	1	; select bank1
 13538  0D65  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13539  0D66  0020               	movlb	0	; select bank0
 13540  0D67  0844               	movf	___ftmul@f2+2,w
 13541  0D68  0021               	movlb	1	; select bank1
 13542  0D69  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13543  0D6A                     l7808:	
 13544  0D6A  3001               	movlw	1
 13545  0D6B                     u7875:	
 13546  0D6B  0020               	movlb	0	; select bank0
 13547  0D6C  36C1               	lsrf	___ftmul@f1+2,f
 13548  0D6D  0CC0               	rrf	___ftmul@f1+1,f
 13549  0D6E  0CBF               	rrf	___ftmul@f1,f
 13550  0D6F  0B89               	decfsz	9,f
 13551  0D70  2D6B               	goto	u7875
 13552  0D71  3001               	movlw	1
 13553  0D72                     u7885:	
 13554  0D72  0021               	movlb	1	; select bank1
 13555  0D73  36A3               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
 13556  0D74  0CA2               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
 13557  0D75  0CA1               	rrf	___ftmul@f3_as_product^(0+128),f
 13558  0D76  0B89               	decfsz	9,f
 13559  0D77  2D72               	goto	u7885
 13560  0D78  3001               	movlw	1
 13561  0D79  02A4               	subwf	___ftmul@cntr^(0+128),f
 13562  0D7A  1D03               	btfss	3,2
 13563  0D7B  2D5C               	goto	l7804
 13564  0D7C  0821               	movf	___ftmul@f3_as_product^(0+128),w
 13565  0D7D  0020               	movlb	0	; select bank0
 13566  0D7E  00B1               	movwf	___ftpack@arg
 13567  0D7F  0021               	movlb	1	; select bank1
 13568  0D80  0822               	movf	(___ftmul@f3_as_product+1)^(0+128),w
 13569  0D81  0020               	movlb	0	; select bank0
 13570  0D82  00B2               	movwf	___ftpack@arg+1
 13571  0D83  0021               	movlb	1	; select bank1
 13572  0D84  0823               	movf	(___ftmul@f3_as_product+2)^(0+128),w
 13573  0D85  0020               	movlb	0	; select bank0
 13574  0D86  00B3               	movwf	___ftpack@arg+2
 13575  0D87  0021               	movlb	1	; select bank1
 13576  0D88  0820               	movf	___ftmul@exp^(0+128),w
 13577  0D89  0020               	movlb	0	; select bank0
 13578  0D8A  00C5               	movwf	??___ftmul
 13579  0D8B  0845               	movf	??___ftmul,w
 13580  0D8C  00B4               	movwf	___ftpack@exp
 13581  0D8D  0021               	movlb	1	; select bank1
 13582  0D8E  0825               	movf	___ftmul@sign^(0+128),w
 13583  0D8F  0020               	movlb	0	; select bank0
 13584  0D90  00C6               	movwf	??___ftmul+1
 13585  0D91  0846               	movf	??___ftmul+1,w
 13586  0D92  00B5               	movwf	___ftpack@sign
 13587  0D93  3193  23F6         	fcall	___ftpack
 13588  0D95  0020               	movlb	0	; select bank0
 13589  0D96  0831               	movf	?___ftpack,w
 13590  0D97  00BF               	movwf	?___ftmul
 13591  0D98  0832               	movf	?___ftpack+1,w
 13592  0D99  00C0               	movwf	?___ftmul+1
 13593  0D9A  0833               	movf	?___ftpack+2,w
 13594  0D9B  00C1               	movwf	?___ftmul+2
 13595  0D9C  0008               	return
 13596  0D9D                     __end_of___ftmul:	
 13597                           
 13598                           	psect	text35
 13599  06D1                     __ptext35:	
 13600 ;; *************** function ___ftadd *****************
 13601 ;; Defined at:
 13602 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 13603 ;; Parameters:    Size  Location     Type
 13604 ;;  f1              3    6[BANK1 ] float 
 13605 ;;  f2              3    9[BANK1 ] float 
 13606 ;; Auto vars:     Size  Location     Type
 13607 ;;  exp1            1   14[BANK1 ] unsigned char 
 13608 ;;  exp2            1   13[BANK1 ] unsigned char 
 13609 ;;  sign            1   12[BANK1 ] unsigned char 
 13610 ;; Return value:  Size  Location     Type
 13611 ;;                  3    6[BANK1 ] float 
 13612 ;; Registers used:
 13613 ;;		wreg, status,2, status,0, pclath, cstack
 13614 ;; Tracked objects:
 13615 ;;		On entry : 0/0
 13616 ;;		On exit  : 0/0
 13617 ;;		Unchanged: 0/0
 13618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13619 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13620 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13621 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13622 ;;      Totals:         0       4       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13623 ;;Total ram usage:       13 bytes
 13624 ;; Hardware stack levels used:    1
 13625 ;; Hardware stack levels required when called:    7
 13626 ;; This function calls:
 13627 ;;		___ftpack
 13628 ;; This function is called by:
 13629 ;;		_main_initialize
 13630 ;;		_setDrvPiezoOnTime
 13631 ;;		_setHeaterPreTime
 13632 ;;		_setHeaterPostTime
 13633 ;; This function uses a non-reentrant model
 13634 ;;
 13635                           
 13636                           
 13637                           ;psect for function ___ftadd
 13638  06D1                     ___ftadd:	
 13639                           
 13640                           ;incstack = 0
 13641                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 13642  06D1  0021               	movlb	1	; select bank1
 13643  06D2  0826               	movf	___ftadd@f1^(0+128),w
 13644  06D3  0020               	movlb	0	; select bank0
 13645  06D4  00C9               	movwf	??___ftadd
 13646  06D5  0021               	movlb	1	; select bank1
 13647  06D6  0827               	movf	(___ftadd@f1+1)^(0+128),w
 13648  06D7  0020               	movlb	0	; select bank0
 13649  06D8  00CA               	movwf	??___ftadd+1
 13650  06D9  0021               	movlb	1	; select bank1
 13651  06DA  0828               	movf	(___ftadd@f1+2)^(0+128),w
 13652  06DB  0020               	movlb	0	; select bank0
 13653  06DC  00CB               	movwf	??___ftadd+2
 13654  06DD  1003               	clrc
 13655  06DE  0D4A               	rlf	??___ftadd+1,w
 13656  06DF  0D4B               	rlf	??___ftadd+2,w
 13657  06E0  00CC               	movwf	??___ftadd+3
 13658  06E1  084C               	movf	??___ftadd+3,w
 13659  06E2  0021               	movlb	1	; select bank1
 13660  06E3  00AE               	movwf	___ftadd@exp1^(0+128)
 13661  06E4  0829               	movf	___ftadd@f2^(0+128),w
 13662  06E5  0020               	movlb	0	; select bank0
 13663  06E6  00C9               	movwf	??___ftadd
 13664  06E7  0021               	movlb	1	; select bank1
 13665  06E8  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13666  06E9  0020               	movlb	0	; select bank0
 13667  06EA  00CA               	movwf	??___ftadd+1
 13668  06EB  0021               	movlb	1	; select bank1
 13669  06EC  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13670  06ED  0020               	movlb	0	; select bank0
 13671  06EE  00CB               	movwf	??___ftadd+2
 13672  06EF  1003               	clrc
 13673  06F0  0D4A               	rlf	??___ftadd+1,w
 13674  06F1  0D4B               	rlf	??___ftadd+2,w
 13675  06F2  00CC               	movwf	??___ftadd+3
 13676  06F3  084C               	movf	??___ftadd+3,w
 13677  06F4  0021               	movlb	1	; select bank1
 13678  06F5  00AD               	movwf	___ftadd@exp2^(0+128)
 13679  06F6  082E               	movf	___ftadd@exp1^(0+128),w
 13680  06F7  1903               	btfsc	3,2
 13681  06F8  2F06               	goto	l7704
 13682  06F9  082D               	movf	___ftadd@exp2^(0+128),w
 13683  06FA  022E               	subwf	___ftadd@exp1^(0+128),w
 13684  06FB  1803               	skipnc
 13685  06FC  2F0E               	goto	l7708
 13686  06FD  032E               	decf	___ftadd@exp1^(0+128),w
 13687  06FE  3AFF               	xorlw	255
 13688  06FF  072D               	addwf	___ftadd@exp2^(0+128),w
 13689  0700  0020               	movlb	0	; select bank0
 13690  0701  00C9               	movwf	??___ftadd
 13691  0702  3019               	movlw	25
 13692  0703  0249               	subwf	??___ftadd,w
 13693  0704  1C03               	skipc
 13694  0705  2F0E               	goto	l7708
 13695  0706                     l7704:	
 13696  0706  0021               	movlb	1	; select bank1
 13697  0707  0829               	movf	___ftadd@f2^(0+128),w
 13698  0708  00A6               	movwf	?___ftadd^(0+128)
 13699  0709  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13700  070A  00A7               	movwf	(?___ftadd+1)^(0+128)
 13701  070B  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13702  070C  00A8               	movwf	(?___ftadd+2)^(0+128)
 13703  070D  0008               	return
 13704  070E                     l7708:	
 13705  070E  0021               	movlb	1	; select bank1
 13706  070F  082D               	movf	___ftadd@exp2^(0+128),w
 13707  0710  1903               	btfsc	3,2
 13708  0711  0008               	return
 13709  0712  082E               	movf	___ftadd@exp1^(0+128),w
 13710  0713  022D               	subwf	___ftadd@exp2^(0+128),w
 13711  0714  1803               	skipnc
 13712  0715  2F1F               	goto	l7714
 13713  0716  032D               	decf	___ftadd@exp2^(0+128),w
 13714  0717  3AFF               	xorlw	255
 13715  0718  072E               	addwf	___ftadd@exp1^(0+128),w
 13716  0719  0020               	movlb	0	; select bank0
 13717  071A  00C9               	movwf	??___ftadd
 13718  071B  3019               	movlw	25
 13719  071C  0249               	subwf	??___ftadd,w
 13720  071D  1803               	btfsc	3,0
 13721  071E  0008               	return
 13722  071F                     l7714:	
 13723  071F  3006               	movlw	6
 13724  0720  0020               	movlb	0	; select bank0
 13725  0721  00C9               	movwf	??___ftadd
 13726  0722  0849               	movf	??___ftadd,w
 13727  0723  0021               	movlb	1	; select bank1
 13728  0724  00AC               	movwf	___ftadd@sign^(0+128)
 13729  0725  1BA8               	btfsc	(___ftadd@f1+2)^(0+128),7
 13730  0726  17AC               	bsf	___ftadd@sign^(0+128),7
 13731  0727  1BAB               	btfsc	(___ftadd@f2+2)^(0+128),7
 13732  0728  172C               	bsf	___ftadd@sign^(0+128),6
 13733  0729  17A7               	bsf	(___ftadd@f1^(0+128)+1),7
 13734  072A  30FF               	movlw	255
 13735  072B  05A6               	andwf	___ftadd@f1^(0+128),f
 13736  072C  30FF               	movlw	255
 13737  072D  05A7               	andwf	(___ftadd@f1+1)^(0+128),f
 13738  072E  3000               	movlw	0
 13739  072F  05A8               	andwf	(___ftadd@f1+2)^(0+128),f
 13740  0730  17AA               	bsf	(___ftadd@f2^(0+128)+1),7
 13741  0731  30FF               	movlw	255
 13742  0732  05A9               	andwf	___ftadd@f2^(0+128),f
 13743  0733  30FF               	movlw	255
 13744  0734  05AA               	andwf	(___ftadd@f2+1)^(0+128),f
 13745  0735  3000               	movlw	0
 13746  0736  05AB               	andwf	(___ftadd@f2+2)^(0+128),f
 13747  0737  082D               	movf	___ftadd@exp2^(0+128),w
 13748  0738  022E               	subwf	___ftadd@exp1^(0+128),w
 13749  0739  1803               	skipnc
 13750  073A  2F5F               	goto	l7736
 13751  073B                     l7726:	
 13752  073B  3001               	movlw	1
 13753  073C                     u7645:	
 13754  073C  35A9               	lslf	___ftadd@f2^(0+128),f
 13755  073D  0DAA               	rlf	(___ftadd@f2+1)^(0+128),f
 13756  073E  0DAB               	rlf	(___ftadd@f2+2)^(0+128),f
 13757  073F  0B89               	decfsz	9,f
 13758  0740  2F3C               	goto	u7645
 13759  0741  3001               	movlw	1
 13760  0742  02AD               	subwf	___ftadd@exp2^(0+128),f
 13761  0743  082D               	movf	___ftadd@exp2^(0+128),w
 13762  0744  062E               	xorwf	___ftadd@exp1^(0+128),w
 13763  0745  1903               	skipnz
 13764  0746  2F5A               	goto	l7734
 13765  0747  3001               	movlw	1
 13766  0748  02AC               	subwf	___ftadd@sign^(0+128),f
 13767  0749  082C               	movf	___ftadd@sign^(0+128),w
 13768  074A  3907               	andlw	7
 13769  074B  1903               	btfsc	3,2
 13770  074C  2F5A               	goto	l7734
 13771  074D  2F3B               	goto	l7726
 13772  074E                     l7732:	
 13773  074E  3001               	movlw	1
 13774  074F                     u7675:	
 13775  074F  36A8               	lsrf	(___ftadd@f1+2)^(0+128),f
 13776  0750  0CA7               	rrf	(___ftadd@f1+1)^(0+128),f
 13777  0751  0CA6               	rrf	___ftadd@f1^(0+128),f
 13778  0752  0B89               	decfsz	9,f
 13779  0753  2F4F               	goto	u7675
 13780  0754  3001               	movlw	1
 13781  0755  0020               	movlb	0	; select bank0
 13782  0756  00C9               	movwf	??___ftadd
 13783  0757  0849               	movf	??___ftadd,w
 13784  0758  0021               	movlb	1	; select bank1
 13785  0759  07AE               	addwf	___ftadd@exp1^(0+128),f
 13786  075A                     l7734:	
 13787  075A  082E               	movf	___ftadd@exp1^(0+128),w
 13788  075B  062D               	xorwf	___ftadd@exp2^(0+128),w
 13789  075C  1903               	btfsc	3,2
 13790  075D  2F86               	goto	l1787
 13791  075E  2F4E               	goto	l7732
 13792  075F                     l7736:	
 13793  075F  082E               	movf	___ftadd@exp1^(0+128),w
 13794  0760  022D               	subwf	___ftadd@exp2^(0+128),w
 13795  0761  1803               	skipnc
 13796  0762  2F86               	goto	l1787
 13797  0763                     l7738:	
 13798  0763  3001               	movlw	1
 13799  0764                     u7705:	
 13800  0764  35A6               	lslf	___ftadd@f1^(0+128),f
 13801  0765  0DA7               	rlf	(___ftadd@f1+1)^(0+128),f
 13802  0766  0DA8               	rlf	(___ftadd@f1+2)^(0+128),f
 13803  0767  0B89               	decfsz	9,f
 13804  0768  2F64               	goto	u7705
 13805  0769  3001               	movlw	1
 13806  076A  02AE               	subwf	___ftadd@exp1^(0+128),f
 13807  076B  082D               	movf	___ftadd@exp2^(0+128),w
 13808  076C  062E               	xorwf	___ftadd@exp1^(0+128),w
 13809  076D  1903               	skipnz
 13810  076E  2F82               	goto	l7746
 13811  076F  3001               	movlw	1
 13812  0770  02AC               	subwf	___ftadd@sign^(0+128),f
 13813  0771  082C               	movf	___ftadd@sign^(0+128),w
 13814  0772  3907               	andlw	7
 13815  0773  1903               	btfsc	3,2
 13816  0774  2F82               	goto	l7746
 13817  0775  2F63               	goto	l7738
 13818  0776                     l7744:	
 13819  0776  3001               	movlw	1
 13820  0777                     u7735:	
 13821  0777  36AB               	lsrf	(___ftadd@f2+2)^(0+128),f
 13822  0778  0CAA               	rrf	(___ftadd@f2+1)^(0+128),f
 13823  0779  0CA9               	rrf	___ftadd@f2^(0+128),f
 13824  077A  0B89               	decfsz	9,f
 13825  077B  2F77               	goto	u7735
 13826  077C  3001               	movlw	1
 13827  077D  0020               	movlb	0	; select bank0
 13828  077E  00C9               	movwf	??___ftadd
 13829  077F  0849               	movf	??___ftadd,w
 13830  0780  0021               	movlb	1	; select bank1
 13831  0781  07AD               	addwf	___ftadd@exp2^(0+128),f
 13832  0782                     l7746:	
 13833  0782  082E               	movf	___ftadd@exp1^(0+128),w
 13834  0783  062D               	xorwf	___ftadd@exp2^(0+128),w
 13835  0784  1D03               	skipz
 13836  0785  2F76               	goto	l7744
 13837  0786                     l1787:	
 13838  0786  1FAC               	btfss	___ftadd@sign^(0+128),7
 13839  0787  2F98               	goto	l7750
 13840  0788  30FF               	movlw	255
 13841  0789  06A6               	xorwf	___ftadd@f1^(0+128),f
 13842  078A  30FF               	movlw	255
 13843  078B  06A7               	xorwf	(___ftadd@f1+1)^(0+128),f
 13844  078C  30FF               	movlw	255
 13845  078D  06A8               	xorwf	(___ftadd@f1+2)^(0+128),f
 13846  078E  3001               	movlw	1
 13847  078F  07A6               	addwf	___ftadd@f1^(0+128),f
 13848  0790  3000               	movlw	0
 13849  0791  1803               	skipnc
 13850  0792  3001               	movlw	1
 13851  0793  07A7               	addwf	(___ftadd@f1+1)^(0+128),f
 13852  0794  3000               	movlw	0
 13853  0795  1803               	skipnc
 13854  0796  3001               	movlw	1
 13855  0797  07A8               	addwf	(___ftadd@f1+2)^(0+128),f
 13856  0798                     l7750:	
 13857  0798  1F2C               	btfss	___ftadd@sign^(0+128),6
 13858  0799  2FAA               	goto	l7754
 13859  079A  30FF               	movlw	255
 13860  079B  06A9               	xorwf	___ftadd@f2^(0+128),f
 13861  079C  30FF               	movlw	255
 13862  079D  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 13863  079E  30FF               	movlw	255
 13864  079F  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 13865  07A0  3001               	movlw	1
 13866  07A1  07A9               	addwf	___ftadd@f2^(0+128),f
 13867  07A2  3000               	movlw	0
 13868  07A3  1803               	skipnc
 13869  07A4  3001               	movlw	1
 13870  07A5  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 13871  07A6  3000               	movlw	0
 13872  07A7  1803               	skipnc
 13873  07A8  3001               	movlw	1
 13874  07A9  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 13875  07AA                     l7754:	
 13876  07AA  01AC               	clrf	___ftadd@sign^(0+128)
 13877  07AB  0826               	movf	___ftadd@f1^(0+128),w
 13878  07AC  07A9               	addwf	___ftadd@f2^(0+128),f
 13879  07AD  0827               	movf	(___ftadd@f1+1)^(0+128),w
 13880  07AE  3DAA               	addwfc	(___ftadd@f2+1)^(0+128),f
 13881  07AF  0828               	movf	(___ftadd@f1+2)^(0+128),w
 13882  07B0  3DAB               	addwfc	(___ftadd@f2+2)^(0+128),f
 13883  07B1  1FAB               	btfss	(___ftadd@f2+2)^(0+128),7
 13884  07B2  2FC5               	goto	l7764
 13885  07B3  30FF               	movlw	255
 13886  07B4  06A9               	xorwf	___ftadd@f2^(0+128),f
 13887  07B5  30FF               	movlw	255
 13888  07B6  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 13889  07B7  30FF               	movlw	255
 13890  07B8  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 13891  07B9  3001               	movlw	1
 13892  07BA  07A9               	addwf	___ftadd@f2^(0+128),f
 13893  07BB  3000               	movlw	0
 13894  07BC  1803               	skipnc
 13895  07BD  3001               	movlw	1
 13896  07BE  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 13897  07BF  3000               	movlw	0
 13898  07C0  1803               	skipnc
 13899  07C1  3001               	movlw	1
 13900  07C2  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 13901  07C3  01AC               	clrf	___ftadd@sign^(0+128)
 13902  07C4  0AAC               	incf	___ftadd@sign^(0+128),f
 13903  07C5                     l7764:	
 13904  07C5  0829               	movf	___ftadd@f2^(0+128),w
 13905  07C6  0020               	movlb	0	; select bank0
 13906  07C7  00B1               	movwf	___ftpack@arg
 13907  07C8  0021               	movlb	1	; select bank1
 13908  07C9  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13909  07CA  0020               	movlb	0	; select bank0
 13910  07CB  00B2               	movwf	___ftpack@arg+1
 13911  07CC  0021               	movlb	1	; select bank1
 13912  07CD  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13913  07CE  0020               	movlb	0	; select bank0
 13914  07CF  00B3               	movwf	___ftpack@arg+2
 13915  07D0  0021               	movlb	1	; select bank1
 13916  07D1  082E               	movf	___ftadd@exp1^(0+128),w
 13917  07D2  0020               	movlb	0	; select bank0
 13918  07D3  00C9               	movwf	??___ftadd
 13919  07D4  0849               	movf	??___ftadd,w
 13920  07D5  00B4               	movwf	___ftpack@exp
 13921  07D6  0021               	movlb	1	; select bank1
 13922  07D7  082C               	movf	___ftadd@sign^(0+128),w
 13923  07D8  0020               	movlb	0	; select bank0
 13924  07D9  00CA               	movwf	??___ftadd+1
 13925  07DA  084A               	movf	??___ftadd+1,w
 13926  07DB  00B5               	movwf	___ftpack@sign
 13927  07DC  3193  23F6         	fcall	___ftpack
 13928  07DE  0020               	movlb	0	; select bank0
 13929  07DF  0831               	movf	?___ftpack,w
 13930  07E0  0021               	movlb	1	; select bank1
 13931  07E1  00A6               	movwf	?___ftadd^(0+128)
 13932  07E2  0020               	movlb	0	; select bank0
 13933  07E3  0832               	movf	?___ftpack+1,w
 13934  07E4  0021               	movlb	1	; select bank1
 13935  07E5  00A7               	movwf	(?___ftadd+1)^(0+128)
 13936  07E6  0020               	movlb	0	; select bank0
 13937  07E7  0833               	movf	?___ftpack+2,w
 13938  07E8  0021               	movlb	1	; select bank1
 13939  07E9  00A8               	movwf	(?___ftadd+2)^(0+128)
 13940  07EA  0008               	return
 13941  07EB                     __end_of___ftadd:	
 13942                           
 13943                           	psect	text36
 13944  25FD                     __ptext36:	
 13945 ;; *************** function ___awtoft *****************
 13946 ;; Defined at:
 13947 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 13948 ;; Parameters:    Size  Location     Type
 13949 ;;  c               2   25[BANK0 ] int 
 13950 ;; Auto vars:     Size  Location     Type
 13951 ;;  sign            1   30[BANK0 ] unsigned char 
 13952 ;; Return value:  Size  Location     Type
 13953 ;;                  3   25[BANK0 ] float 
 13954 ;; Registers used:
 13955 ;;		wreg, status,2, status,0, pclath, cstack
 13956 ;; Tracked objects:
 13957 ;;		On entry : 0/0
 13958 ;;		On exit  : 0/0
 13959 ;;		Unchanged: 0/0
 13960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13961 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13962 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13963 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13964 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13965 ;;Total ram usage:        6 bytes
 13966 ;; Hardware stack levels used:    1
 13967 ;; Hardware stack levels required when called:    7
 13968 ;; This function calls:
 13969 ;;		___ftpack
 13970 ;; This function is called by:
 13971 ;;		_main_initialize
 13972 ;;		_setDrvPiezoOnTime
 13973 ;;		_setHeaterPreTime
 13974 ;;		_setHeaterPostTime
 13975 ;;		_drv_outputSine
 13976 ;; This function uses a non-reentrant model
 13977 ;;
 13978                           
 13979                           
 13980                           ;psect for function ___awtoft
 13981  25FD                     ___awtoft:	
 13982                           
 13983                           ;incstack = 0
 13984                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 13985  25FD  0020               	movlb	0	; select bank0
 13986  25FE  01BE               	clrf	___awtoft@sign
 13987  25FF  1FBA               	btfss	___awtoft@c+1,7
 13988  2600  2E08               	goto	l7694
 13989  2601  09B9               	comf	___awtoft@c,f
 13990  2602  09BA               	comf	___awtoft@c+1,f
 13991  2603  0AB9               	incf	___awtoft@c,f
 13992  2604  1903               	skipnz
 13993  2605  0ABA               	incf	___awtoft@c+1,f
 13994  2606  01BE               	clrf	___awtoft@sign
 13995  2607  0ABE               	incf	___awtoft@sign,f
 13996  2608                     l7694:	
 13997  2608  0839               	movf	___awtoft@c,w
 13998  2609  00B1               	movwf	___ftpack@arg
 13999  260A  083A               	movf	___awtoft@c+1,w
 14000  260B  00B2               	movwf	___ftpack@arg+1
 14001  260C  01B3               	clrf	___ftpack@arg+2
 14002  260D  308E               	movlw	142
 14003  260E  00BC               	movwf	??___awtoft
 14004  260F  083C               	movf	??___awtoft,w
 14005  2610  00B4               	movwf	___ftpack@exp
 14006  2611  083E               	movf	___awtoft@sign,w
 14007  2612  00BD               	movwf	??___awtoft+1
 14008  2613  083D               	movf	??___awtoft+1,w
 14009  2614  00B5               	movwf	___ftpack@sign
 14010  2615  3193  23F6         	fcall	___ftpack
 14011  2617  0020               	movlb	0	; select bank0
 14012  2618  0831               	movf	?___ftpack,w
 14013  2619  00B9               	movwf	?___awtoft
 14014  261A  0832               	movf	?___ftpack+1,w
 14015  261B  00BA               	movwf	?___awtoft+1
 14016  261C  0833               	movf	?___ftpack+2,w
 14017  261D  00BB               	movwf	?___awtoft+2
 14018  261E  0008               	return
 14019  261F                     __end_of___awtoft:	
 14020                           
 14021                           	psect	text37
 14022  13F6                     __ptext37:	
 14023 ;; *************** function ___ftpack *****************
 14024 ;; Defined at:
 14025 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;  arg             3   17[BANK0 ] unsigned um
 14028 ;;  exp             1   20[BANK0 ] unsigned char 
 14029 ;;  sign            1   21[BANK0 ] unsigned char 
 14030 ;; Auto vars:     Size  Location     Type
 14031 ;;		None
 14032 ;; Return value:  Size  Location     Type
 14033 ;;                  3   17[BANK0 ] float 
 14034 ;; Registers used:
 14035 ;;		wreg, status,2, status,0
 14036 ;; Tracked objects:
 14037 ;;		On entry : 0/0
 14038 ;;		On exit  : 0/0
 14039 ;;		Unchanged: 0/0
 14040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14041 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14043 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14044 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14045 ;;Total ram usage:        8 bytes
 14046 ;; Hardware stack levels used:    1
 14047 ;; Hardware stack levels required when called:    6
 14048 ;; This function calls:
 14049 ;;		Nothing
 14050 ;; This function is called by:
 14051 ;;		___awtoft
 14052 ;;		___ftadd
 14053 ;;		___ftmul
 14054 ;; This function uses a non-reentrant model
 14055 ;;
 14056                           
 14057                           
 14058                           ;psect for function ___ftpack
 14059  13F6                     ___ftpack:	
 14060                           
 14061                           ;incstack = 0
 14062                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 14063  13F6  0020               	movlb	0	; select bank0
 14064  13F7  0834               	movf	___ftpack@exp,w
 14065  13F8  1903               	btfsc	3,2
 14066  13F9  2BFF               	goto	l7552
 14067  13FA  0833               	movf	___ftpack@arg+2,w
 14068  13FB  0432               	iorwf	___ftpack@arg+1,w
 14069  13FC  0431               	iorwf	___ftpack@arg,w
 14070  13FD  1D03               	skipz
 14071  13FE  2C10               	goto	l7558
 14072  13FF                     l7552:	
 14073  13FF  3000               	movlw	0
 14074  1400  00B1               	movwf	?___ftpack
 14075  1401  3000               	movlw	0
 14076  1402  00B2               	movwf	?___ftpack+1
 14077  1403  3000               	movlw	0
 14078  1404  00B3               	movwf	?___ftpack+2
 14079  1405  0008               	return
 14080  1406                     l7556:	
 14081  1406  3001               	movlw	1
 14082  1407  00B6               	movwf	??___ftpack
 14083  1408  0836               	movf	??___ftpack,w
 14084  1409  07B4               	addwf	___ftpack@exp,f
 14085  140A  3001               	movlw	1
 14086  140B                     u7295:	
 14087  140B  36B3               	lsrf	___ftpack@arg+2,f
 14088  140C  0CB2               	rrf	___ftpack@arg+1,f
 14089  140D  0CB1               	rrf	___ftpack@arg,f
 14090  140E  0B89               	decfsz	9,f
 14091  140F  2C0B               	goto	u7295
 14092  1410                     l7558:	
 14093  1410  30FE               	movlw	254
 14094  1411  0533               	andwf	___ftpack@arg+2,w
 14095  1412  1903               	btfsc	3,2
 14096  1413  2C29               	goto	l1756
 14097  1414  2C06               	goto	l7556
 14098  1415                     l7560:	
 14099  1415  3001               	movlw	1
 14100  1416  00B6               	movwf	??___ftpack
 14101  1417  0836               	movf	??___ftpack,w
 14102  1418  07B4               	addwf	___ftpack@exp,f
 14103  1419  3001               	movlw	1
 14104  141A  07B1               	addwf	___ftpack@arg,f
 14105  141B  3000               	movlw	0
 14106  141C  1803               	skipnc
 14107  141D  3001               	movlw	1
 14108  141E  07B2               	addwf	___ftpack@arg+1,f
 14109  141F  3000               	movlw	0
 14110  1420  1803               	skipnc
 14111  1421  3001               	movlw	1
 14112  1422  07B3               	addwf	___ftpack@arg+2,f
 14113  1423  3001               	movlw	1
 14114  1424                     u7315:	
 14115  1424  36B3               	lsrf	___ftpack@arg+2,f
 14116  1425  0CB2               	rrf	___ftpack@arg+1,f
 14117  1426  0CB1               	rrf	___ftpack@arg,f
 14118  1427  0B89               	decfsz	9,f
 14119  1428  2C24               	goto	u7315
 14120  1429                     l1756:	
 14121  1429  30FF               	movlw	255
 14122  142A  0533               	andwf	___ftpack@arg+2,w
 14123  142B  1903               	btfsc	3,2
 14124  142C  2C36               	goto	l7568
 14125  142D  2C15               	goto	l7560
 14126  142E                     l7566:	
 14127  142E  3001               	movlw	1
 14128  142F  02B4               	subwf	___ftpack@exp,f
 14129  1430  3001               	movlw	1
 14130  1431                     u7335:	
 14131  1431  35B1               	lslf	___ftpack@arg,f
 14132  1432  0DB2               	rlf	___ftpack@arg+1,f
 14133  1433  0DB3               	rlf	___ftpack@arg+2,f
 14134  1434  0B89               	decfsz	9,f
 14135  1435  2C31               	goto	u7335
 14136  1436                     l7568:	
 14137  1436  1BB2               	btfsc	___ftpack@arg+1,7
 14138  1437  2C3C               	goto	l1763
 14139  1438  3002               	movlw	2
 14140  1439  0234               	subwf	___ftpack@exp,w
 14141  143A  1803               	skipnc
 14142  143B  2C2E               	goto	l7566
 14143  143C                     l1763:	
 14144  143C  1834               	btfsc	___ftpack@exp,0
 14145  143D  2C44               	goto	l1764
 14146  143E  30FF               	movlw	255
 14147  143F  05B1               	andwf	___ftpack@arg,f
 14148  1440  307F               	movlw	127
 14149  1441  05B2               	andwf	___ftpack@arg+1,f
 14150  1442  30FF               	movlw	255
 14151  1443  05B3               	andwf	___ftpack@arg+2,f
 14152  1444                     l1764:	
 14153  1444  1003               	clrc
 14154  1445  0CB4               	rrf	___ftpack@exp,f
 14155  1446  0834               	movf	___ftpack@exp,w
 14156  1447  00B6               	movwf	??___ftpack
 14157  1448  01B7               	clrf	??___ftpack+1
 14158  1449  01B8               	clrf	??___ftpack+2
 14159  144A  3010               	movlw	16
 14160  144B                     u7375:	
 14161  144B  35B6               	lslf	??___ftpack,f
 14162  144C  0DB7               	rlf	??___ftpack+1,f
 14163  144D  0DB8               	rlf	??___ftpack+2,f
 14164  144E  0B89               	decfsz	9,f
 14165  144F  2C4B               	goto	u7375
 14166  1450  0836               	movf	??___ftpack,w
 14167  1451  04B1               	iorwf	___ftpack@arg,f
 14168  1452  0837               	movf	??___ftpack+1,w
 14169  1453  04B2               	iorwf	___ftpack@arg+1,f
 14170  1454  0838               	movf	??___ftpack+2,w
 14171  1455  04B3               	iorwf	___ftpack@arg+2,f
 14172  1456  0835               	movf	___ftpack@sign,w
 14173  1457  1903               	btfsc	3,2
 14174  1458  0008               	return
 14175  1459  17B3               	bsf	___ftpack@arg+2,7
 14176  145A  0008               	return
 14177  145B                     __end_of___ftpack:	
 14178                           
 14179                           	psect	text38
 14180  2258                     __ptext38:	
 14181 ;; *************** function _TMR0_Load8bitPeriod *****************
 14182 ;; Defined at:
 14183 ;;		line 113 in file "mcc_generated_files/tmr0.c"
 14184 ;; Parameters:    Size  Location     Type
 14185 ;;  periodVal       1    wreg     unsigned char 
 14186 ;; Auto vars:     Size  Location     Type
 14187 ;;  periodVal       1   17[BANK0 ] unsigned char 
 14188 ;; Return value:  Size  Location     Type
 14189 ;;                  1    wreg      void 
 14190 ;; Registers used:
 14191 ;;		wreg
 14192 ;; Tracked objects:
 14193 ;;		On entry : 0/0
 14194 ;;		On exit  : 0/0
 14195 ;;		Unchanged: 0/0
 14196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14200 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14201 ;;Total ram usage:        1 bytes
 14202 ;; Hardware stack levels used:    1
 14203 ;; Hardware stack levels required when called:    6
 14204 ;; This function calls:
 14205 ;;		Nothing
 14206 ;; This function is called by:
 14207 ;;		_main_initialize
 14208 ;;		_setDrvPiezoOnTime
 14209 ;;		_setHeaterPreTime
 14210 ;; This function uses a non-reentrant model
 14211 ;;
 14212                           
 14213                           
 14214                           ;psect for function _TMR0_Load8bitPeriod
 14215  2258                     _TMR0_Load8bitPeriod:	
 14216                           
 14217                           ;incstack = 0
 14218                           ; Regs used in _TMR0_Load8bitPeriod: [wreg]
 14219                           ;TMR0_Load8bitPeriod@periodVal stored from wreg
 14220  2258  0020               	movlb	0	; select bank0
 14221  2259  00B1               	movwf	TMR0_Load8bitPeriod@periodVal
 14222                           
 14223                           ;tmr0.c: 116: TMR0H = periodVal;
 14224  225A  0831               	movf	TMR0_Load8bitPeriod@periodVal,w
 14225  225B  0096               	movwf	22	;volatile
 14226  225C  0008               	return
 14227  225D                     __end_of_TMR0_Load8bitPeriod:	
 14228                           
 14229                           	psect	text39
 14230  2406                     __ptext39:	
 14231 ;; *************** function _setDrvPeak *****************
 14232 ;; Defined at:
 14233 ;;		line 394 in file "main.c"
 14234 ;; Parameters:    Size  Location     Type
 14235 ;;  pk              2   21[BANK1 ] int 
 14236 ;; Auto vars:     Size  Location     Type
 14237 ;;		None
 14238 ;; Return value:  Size  Location     Type
 14239 ;;                  2   21[BANK1 ] int 
 14240 ;; Registers used:
 14241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14242 ;; Tracked objects:
 14243 ;;		On entry : 0/0
 14244 ;;		On exit  : 0/0
 14245 ;;		Unchanged: 0/0
 14246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14247 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14250 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14251 ;;Total ram usage:        2 bytes
 14252 ;; Hardware stack levels used:    1
 14253 ;; Hardware stack levels required when called:    9
 14254 ;; This function calls:
 14255 ;;		_printf
 14256 ;; This function is called by:
 14257 ;;		_execCmd
 14258 ;; This function uses a non-reentrant model
 14259 ;;
 14260                           
 14261                           
 14262                           ;psect for function _setDrvPeak
 14263  2406                     _setDrvPeak:	
 14264                           
 14265                           ;main.c: 395: drv_peak_val = pk;
 14266                           
 14267                           ;incstack = 0
 14268                           ; Regs used in _setDrvPeak: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14269  2406  0021               	movlb	1	; select bank1
 14270  2407  0836               	movf	(setDrvPeak@pk+1)^(0+128),w
 14271  2408  0022               	movlb	2	; select bank2
 14272  2409  00EF               	movwf	(_drv_peak_val+1)^(0+256)
 14273  240A  0021               	movlb	1	; select bank1
 14274  240B  0835               	movf	setDrvPeak@pk^(0+128),w
 14275  240C  0022               	movlb	2	; select bank2
 14276  240D  00EE               	movwf	_drv_peak_val^(0+256)
 14277                           
 14278                           ;main.c: 396: printf("A\n");
 14279  240E  3059               	movlw	low (STR_7| (0+32768))
 14280  240F  0021               	movlb	1	; select bank1
 14281  2410  00A0               	movwf	printf@f^(0+128)
 14282  2411  30AA               	movlw	high (STR_7| (0+32768))
 14283  2412  00A1               	movwf	(printf@f^(0+128)+1)
 14284  2413  318E  26CE         	fcall	_printf
 14285                           
 14286                           ;main.c: 397: return 0;
 14287  2415  0021               	movlb	1	; select bank1
 14288  2416  01B5               	clrf	?_setDrvPeak^(0+128)
 14289  2417  01B6               	clrf	(?_setDrvPeak+1)^(0+128)
 14290  2418  0008               	return
 14291  2419                     __end_of_setDrvPeak:	
 14292                           
 14293                           	psect	text40
 14294  199A                     __ptext40:	
 14295 ;; *************** function _setDrvGain *****************
 14296 ;; Defined at:
 14297 ;;		line 401 in file "main.c"
 14298 ;; Parameters:    Size  Location     Type
 14299 ;;  gain            2   21[BANK1 ] int 
 14300 ;; Auto vars:     Size  Location     Type
 14301 ;;  setGain         2   24[BANK1 ] int 
 14302 ;; Return value:  Size  Location     Type
 14303 ;;                  2   21[BANK1 ] int 
 14304 ;; Registers used:
 14305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14306 ;; Tracked objects:
 14307 ;;		On entry : 0/0
 14308 ;;		On exit  : 0/0
 14309 ;;		Unchanged: 0/0
 14310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14311 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14312 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14313 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14314 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14315 ;;Total ram usage:        5 bytes
 14316 ;; Hardware stack levels used:    1
 14317 ;; Hardware stack levels required when called:   13
 14318 ;; This function calls:
 14319 ;;		_drv_write
 14320 ;;		_printf
 14321 ;; This function is called by:
 14322 ;;		_execCmd
 14323 ;; This function uses a non-reentrant model
 14324 ;;
 14325                           
 14326                           
 14327                           ;psect for function _setDrvGain
 14328  199A                     _setDrvGain:	
 14329                           
 14330                           ;main.c: 402: int setGain = 0;
 14331                           
 14332                           ;incstack = 0
 14333                           ; Regs used in _setDrvGain: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14334  199A  0021               	movlb	1	; select bank1
 14335  199B  01B8               	clrf	setDrvGain@setGain^(0+128)
 14336  199C  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 14337                           
 14338                           ;main.c: 403: switch (gain){
 14339  199D  29B6               	goto	l8002
 14340  199E                     l7986:	
 14341                           ;main.c: 404: case 0: setGain = 0x00; break;
 14342                           
 14343  199E  01B8               	clrf	setDrvGain@setGain^(0+128)
 14344  199F  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 14345  19A0  29C9               	goto	l8004
 14346  19A1                     l7988:	
 14347                           ;main.c: 405: case 1: setGain = 0x01; break;
 14348                           
 14349  19A1  3001               	movlw	1
 14350  19A2  29A6               	goto	L25
 14351  19A3                     l7990:	
 14352                           ;main.c: 406: case 2: setGain = 0x02; break;
 14353                           
 14354  19A3  3002               	movlw	2
 14355  19A4  29A6               	goto	L25
 14356  19A5                     l7992:	
 14357                           ;main.c: 407: case 3: setGain = 0x03; break;
 14358                           
 14359  19A5  3003               	movlw	3
 14360  19A6                     L25:	
 14361  19A6  00B8               	movwf	setDrvGain@setGain^(0+128)
 14362  19A7  3000               	movlw	0
 14363  19A8  00B9               	movwf	(setDrvGain@setGain^(0+128)+1)
 14364  19A9  29C9               	goto	l8004
 14365  19AA                     l7994:	
 14366                           ;main.c: 408: default: printf("E\n"); return 1;
 14367                           
 14368  19AA  305C               	movlw	low (STR_16| (0+32768))
 14369  19AB  00A0               	movwf	printf@f^(0+128)
 14370  19AC  30AA               	movlw	high (STR_16| (0+32768))
 14371  19AD  00A1               	movwf	(printf@f^(0+128)+1)
 14372  19AE  318E  26CE         	fcall	_printf
 14373  19B0  3001               	movlw	1
 14374  19B1  0021               	movlb	1	; select bank1
 14375  19B2  00B5               	movwf	?_setDrvGain^(0+128)
 14376  19B3  3000               	movlw	0
 14377  19B4  00B6               	movwf	(?_setDrvGain^(0+128)+1)
 14378  19B5  0008               	return
 14379  19B6                     l8002:	
 14380                           ;main.c: 409: }
 14381                           
 14382                           
 14383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14384                           ; Switch size 1, requested type "space"
 14385                           ; Number of cases is 1, Range of values is 0 to 0
 14386                           ; switch strategies available:
 14387                           ; Name         Instructions Cycles
 14388                           ; simple_byte            4     3 (average)
 14389                           ; direct_byte            8     6 (fixed)
 14390                           ; jumptable            260     6 (fixed)
 14391                           ;	Chosen strategy is simple_byte
 14392  19B6  0836               	movf	(setDrvGain@gain+1)^(0+128),w
 14393  19B7  3A00               	xorlw	0	; case 0
 14394  19B8  1903               	skipnz
 14395  19B9  29BB               	goto	l8718
 14396  19BA  29AA               	goto	l7994
 14397  19BB                     l8718:	
 14398                           
 14399                           ; Switch size 1, requested type "space"
 14400                           ; Number of cases is 4, Range of values is 0 to 3
 14401                           ; switch strategies available:
 14402                           ; Name         Instructions Cycles
 14403                           ; simple_byte           13     7 (average)
 14404                           ; direct_byte           14     6 (fixed)
 14405                           ; jumptable            260     6 (fixed)
 14406                           ;	Chosen strategy is simple_byte
 14407  19BB  0835               	movf	setDrvGain@gain^(0+128),w
 14408  19BC  3A00               	xorlw	0	; case 0
 14409  19BD  1903               	skipnz
 14410  19BE  299E               	goto	l7986
 14411  19BF  3A01               	xorlw	1	; case 1
 14412  19C0  1903               	skipnz
 14413  19C1  29A1               	goto	l7988
 14414  19C2  3A03               	xorlw	3	; case 2
 14415  19C3  1903               	skipnz
 14416  19C4  29A3               	goto	l7990
 14417  19C5  3A01               	xorlw	1	; case 3
 14418  19C6  1903               	skipnz
 14419  19C7  29A5               	goto	l7992
 14420  19C8  29AA               	goto	l7994
 14421  19C9                     l8004:	
 14422                           
 14423                           ;main.c: 410: drv_write(0x01, setGain);
 14424  19C9  0838               	movf	setDrvGain@setGain^(0+128),w
 14425  19CA  00B7               	movwf	??_setDrvGain^(0+128)
 14426  19CB  0837               	movf	??_setDrvGain^(0+128),w
 14427  19CC  0020               	movlb	0	; select bank0
 14428  19CD  00C9               	movwf	drv_write@data
 14429  19CE  3001               	movlw	1
 14430  19CF  31A6  268A  3199   	fcall	_drv_write
 14431                           
 14432                           ;main.c: 411: printf("A\n");
 14433  19D2  3059               	movlw	low (STR_7| (0+32768))
 14434  19D3  0021               	movlb	1	; select bank1
 14435  19D4  00A0               	movwf	printf@f^(0+128)
 14436  19D5  30AA               	movlw	high (STR_7| (0+32768))
 14437  19D6  00A1               	movwf	(printf@f^(0+128)+1)
 14438  19D7  318E  26CE         	fcall	_printf
 14439                           
 14440                           ;main.c: 412: return 0;
 14441  19D9  0021               	movlb	1	; select bank1
 14442  19DA  01B5               	clrf	?_setDrvGain^(0+128)
 14443  19DB  01B6               	clrf	(?_setDrvGain+1)^(0+128)
 14444  19DC  0008               	return
 14445  19DD                     __end_of_setDrvGain:	
 14446                           
 14447                           	psect	text41
 14448  1698                     __ptext41:	
 14449 ;; *************** function _setActive *****************
 14450 ;; Defined at:
 14451 ;;		line 499 in file "main.c"
 14452 ;; Parameters:    Size  Location     Type
 14453 ;;  probeNum        2   21[BANK1 ] int 
 14454 ;;  onOff           2   23[BANK1 ] int 
 14455 ;; Auto vars:     Size  Location     Type
 14456 ;;		None
 14457 ;; Return value:  Size  Location     Type
 14458 ;;                  2   21[BANK1 ] int 
 14459 ;; Registers used:
 14460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14461 ;; Tracked objects:
 14462 ;;		On entry : 0/0
 14463 ;;		On exit  : 0/0
 14464 ;;		Unchanged: 0/0
 14465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14466 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14468 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14469 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14470 ;;Total ram usage:       12 bytes
 14471 ;; Hardware stack levels used:    1
 14472 ;; Hardware stack levels required when called:    9
 14473 ;; This function calls:
 14474 ;;		_printf
 14475 ;; This function is called by:
 14476 ;;		_execCmd
 14477 ;; This function uses a non-reentrant model
 14478 ;;
 14479                           
 14480                           
 14481                           ;psect for function _setActive
 14482  1698                     _setActive:	
 14483                           
 14484                           ;main.c: 502: if(moveMask & 1UL << probeNum){
 14485                           
 14486                           ;incstack = 0
 14487                           ; Regs used in _setActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14488  1698  0021               	movlb	1	; select bank1
 14489  1699  0859               	movf	_moveMask^(0+128),w
 14490  169A  00B9               	movwf	??_setActive^(0+128)
 14491  169B  085A               	movf	(_moveMask+1)^(0+128),w
 14492  169C  00BA               	movwf	(??_setActive^(0+128)+1)
 14493  169D  085B               	movf	(_moveMask+2)^(0+128),w
 14494  169E  00BB               	movwf	(??_setActive^(0+128)+2)
 14495  169F  085C               	movf	(_moveMask+3)^(0+128),w
 14496  16A0  00BC               	movwf	(??_setActive^(0+128)+3)
 14497  16A1  3001               	movlw	1
 14498  16A2  00BD               	movwf	(??_setActive+4)^(0+128)
 14499  16A3  3000               	movlw	0
 14500  16A4  00BE               	movwf	((??_setActive+4)^(0+128)+1)
 14501  16A5  3000               	movlw	0
 14502  16A6  00BF               	movwf	((??_setActive+4)^(0+128)+2)
 14503  16A7  3000               	movlw	0
 14504  16A8  00C0               	movwf	((??_setActive+4)^(0+128)+3)
 14505  16A9  0A35               	incf	setActive@probeNum^(0+128),w
 14506  16AA  2EAF               	goto	u8050
 14507  16AB                     u8055:	
 14508  16AB  35BD               	lslf	(??_setActive+4)^(0+128),f
 14509  16AC  0DBE               	rlf	((??_setActive+4)^(0+128)+1),f
 14510  16AD  0DBF               	rlf	((??_setActive+4)^(0+128)+2),f
 14511  16AE  0DC0               	rlf	((??_setActive+4)^(0+128)+3),f
 14512  16AF                     u8050:	
 14513  16AF  0B89               	decfsz	9,f
 14514  16B0  2EAB               	goto	u8055
 14515  16B1  083D               	movf	(??_setActive+4)^(0+128),w
 14516  16B2  05B9               	andwf	??_setActive^(0+128),f
 14517  16B3  083E               	movf	(??_setActive+5)^(0+128),w
 14518  16B4  05BA               	andwf	(??_setActive^(0+128)+1),f
 14519  16B5  083F               	movf	(??_setActive+6)^(0+128),w
 14520  16B6  05BB               	andwf	(??_setActive^(0+128)+2),f
 14521  16B7  0840               	movf	(??_setActive+7)^(0+128),w
 14522  16B8  05BC               	andwf	(??_setActive^(0+128)+3),f
 14523  16B9  083C               	movf	(??_setActive+3)^(0+128),w
 14524  16BA  043B               	iorwf	(??_setActive+2)^(0+128),w
 14525  16BB  043A               	iorwf	(??_setActive+1)^(0+128),w
 14526  16BC  0439               	iorwf	??_setActive^(0+128),w
 14527  16BD  1903               	skipnz
 14528  16BE  2F02               	goto	l8116
 14529                           
 14530                           ;main.c: 503: if (onOff)
 14531  16BF  0837               	movf	setActive@onOff^(0+128),w
 14532  16C0  0438               	iorwf	(setActive@onOff+1)^(0+128),w
 14533  16C1  1903               	btfsc	3,2
 14534  16C2  2EDC               	goto	l8108
 14535                           
 14536                           ;main.c: 504: activeMask |= 1UL << probeNum;
 14537  16C3  3001               	movlw	1
 14538  16C4  00B9               	movwf	??_setActive^(0+128)
 14539  16C5  3000               	movlw	0
 14540  16C6  00BA               	movwf	(??_setActive^(0+128)+1)
 14541  16C7  3000               	movlw	0
 14542  16C8  00BB               	movwf	(??_setActive^(0+128)+2)
 14543  16C9  3000               	movlw	0
 14544  16CA  00BC               	movwf	(??_setActive^(0+128)+3)
 14545  16CB  0A35               	incf	setActive@probeNum^(0+128),w
 14546  16CC  2ED1               	goto	u8080
 14547  16CD                     u8085:	
 14548  16CD  35B9               	lslf	??_setActive^(0+128),f
 14549  16CE  0DBA               	rlf	(??_setActive^(0+128)+1),f
 14550  16CF  0DBB               	rlf	(??_setActive^(0+128)+2),f
 14551  16D0  0DBC               	rlf	(??_setActive^(0+128)+3),f
 14552  16D1                     u8080:	
 14553  16D1  0B89               	decfsz	9,f
 14554  16D2  2ECD               	goto	u8085
 14555  16D3  0839               	movf	??_setActive^(0+128),w
 14556  16D4  04DD               	iorwf	_activeMask^(0+128),f
 14557  16D5  083A               	movf	(??_setActive+1)^(0+128),w
 14558  16D6  04DE               	iorwf	(_activeMask+1)^(0+128),f
 14559  16D7  083B               	movf	(??_setActive+2)^(0+128),w
 14560  16D8  04DF               	iorwf	(_activeMask+2)^(0+128),f
 14561  16D9  083C               	movf	(??_setActive+3)^(0+128),w
 14562  16DA  04E0               	iorwf	(_activeMask+3)^(0+128),f
 14563  16DB  2EF8               	goto	l8110
 14564  16DC                     l8108:	
 14565                           
 14566                           ;main.c: 505: else
 14567                           ;main.c: 506: activeMask &= ~(1UL << probeNum);
 14568  16DC  3001               	movlw	1
 14569  16DD  00B9               	movwf	??_setActive^(0+128)
 14570  16DE  3000               	movlw	0
 14571  16DF  00BA               	movwf	(??_setActive^(0+128)+1)
 14572  16E0  3000               	movlw	0
 14573  16E1  00BB               	movwf	(??_setActive^(0+128)+2)
 14574  16E2  3000               	movlw	0
 14575  16E3  00BC               	movwf	(??_setActive^(0+128)+3)
 14576  16E4  0A35               	incf	setActive@probeNum^(0+128),w
 14577  16E5  2EEA               	goto	u8090
 14578  16E6                     u8095:	
 14579  16E6  35B9               	lslf	??_setActive^(0+128),f
 14580  16E7  0DBA               	rlf	(??_setActive^(0+128)+1),f
 14581  16E8  0DBB               	rlf	(??_setActive^(0+128)+2),f
 14582  16E9  0DBC               	rlf	(??_setActive^(0+128)+3),f
 14583  16EA                     u8090:	
 14584  16EA  0B89               	decfsz	9,f
 14585  16EB  2EE6               	goto	u8095
 14586  16EC  09B9               	comf	??_setActive^(0+128),f
 14587  16ED  09BA               	comf	(??_setActive^(0+128)+1),f
 14588  16EE  09BB               	comf	(??_setActive^(0+128)+2),f
 14589  16EF  09BC               	comf	(??_setActive^(0+128)+3),f
 14590  16F0  0839               	movf	??_setActive^(0+128),w
 14591  16F1  05DD               	andwf	_activeMask^(0+128),f
 14592  16F2  083A               	movf	(??_setActive+1)^(0+128),w
 14593  16F3  05DE               	andwf	(_activeMask+1)^(0+128),f
 14594  16F4  083B               	movf	(??_setActive+2)^(0+128),w
 14595  16F5  05DF               	andwf	(_activeMask+2)^(0+128),f
 14596  16F6  083C               	movf	(??_setActive+3)^(0+128),w
 14597  16F7  05E0               	andwf	(_activeMask+3)^(0+128),f
 14598  16F8                     l8110:	
 14599                           
 14600                           ;main.c: 507: printf("A\n");
 14601  16F8  3059               	movlw	low (STR_7| (0+32768))
 14602  16F9  00A0               	movwf	printf@f^(0+128)
 14603  16FA  30AA               	movlw	high (STR_7| (0+32768))
 14604  16FB  00A1               	movwf	(printf@f^(0+128)+1)
 14605  16FC  318E  26CE         	fcall	_printf
 14606                           
 14607                           ;main.c: 508: return 0;
 14608  16FE  0021               	movlb	1	; select bank1
 14609  16FF  01B5               	clrf	?_setActive^(0+128)
 14610  1700  01B6               	clrf	(?_setActive+1)^(0+128)
 14611  1701  0008               	return
 14612  1702                     l8116:	
 14613                           
 14614                           ;main.c: 509: }
 14615                           ;main.c: 510: printf("E\n");
 14616  1702  305C               	movlw	low (STR_16| (0+32768))
 14617  1703  00A0               	movwf	printf@f^(0+128)
 14618  1704  30AA               	movlw	high (STR_16| (0+32768))
 14619  1705  00A1               	movwf	(printf@f^(0+128)+1)
 14620  1706  318E  26CE         	fcall	_printf
 14621                           
 14622                           ;main.c: 511: return 1;
 14623  1708  3001               	movlw	1
 14624  1709  0021               	movlb	1	; select bank1
 14625  170A  00B5               	movwf	?_setActive^(0+128)
 14626  170B  3000               	movlw	0
 14627  170C  00B6               	movwf	(?_setActive^(0+128)+1)
 14628  170D  0008               	return
 14629  170E                     __end_of_setActive:	
 14630                           
 14631                           	psect	text42
 14632  1918                     __ptext42:	
 14633 ;; *************** function _getPosition *****************
 14634 ;; Defined at:
 14635 ;;		line 383 in file "main.c"
 14636 ;; Parameters:    Size  Location     Type
 14637 ;;  a               2   21[BANK1 ] int 
 14638 ;; Auto vars:     Size  Location     Type
 14639 ;;		None
 14640 ;; Return value:  Size  Location     Type
 14641 ;;                  2   21[BANK1 ] int 
 14642 ;; Registers used:
 14643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14644 ;; Tracked objects:
 14645 ;;		On entry : 0/0
 14646 ;;		On exit  : 0/0
 14647 ;;		Unchanged: 0/0
 14648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14649 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14651 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14652 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14653 ;;Total ram usage:        6 bytes
 14654 ;; Hardware stack levels used:    1
 14655 ;; Hardware stack levels required when called:    9
 14656 ;; This function calls:
 14657 ;;		_printf
 14658 ;; This function is called by:
 14659 ;;		_execCmd
 14660 ;; This function uses a non-reentrant model
 14661 ;;
 14662                           
 14663                           
 14664                           ;psect for function _getPosition
 14665  1918                     _getPosition:	
 14666                           
 14667                           ;main.c: 385: if (a>=0 && a < 24){
 14668                           
 14669                           ;incstack = 0
 14670                           ; Regs used in _getPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14671  1918  0021               	movlb	1	; select bank1
 14672  1919  1BB6               	btfsc	(getPosition@a+1)^(0+128),7
 14673  191A  2951               	goto	l7972
 14674  191B  0836               	movf	(getPosition@a+1)^(0+128),w
 14675  191C  3A80               	xorlw	128
 14676  191D  0020               	movlb	0	; select bank0
 14677  191E  00C9               	movwf	??_getPosition
 14678  191F  3080               	movlw	128
 14679  1920  0249               	subwf	??_getPosition,w
 14680  1921  1D03               	skipz
 14681  1922  2926               	goto	u7975
 14682  1923  3018               	movlw	24
 14683  1924  0021               	movlb	1	; select bank1
 14684  1925  0235               	subwf	getPosition@a^(0+128),w
 14685  1926                     u7975:	
 14686  1926  1803               	skipnc
 14687  1927  2951               	goto	l7972
 14688                           
 14689                           ;main.c: 386: printf("%d\n", currentPositions_steps[a]);
 14690  1928  304B               	movlw	low (STR_14| (0+32768))
 14691  1929  0021               	movlb	1	; select bank1
 14692  192A  00A0               	movwf	printf@f^(0+128)
 14693  192B  30AA               	movlw	high (STR_14| (0+32768))
 14694  192C  00A1               	movwf	(printf@f^(0+128)+1)
 14695  192D  0836               	movf	(getPosition@a+1)^(0+128),w
 14696  192E  0020               	movlb	0	; select bank0
 14697  192F  00CA               	movwf	??_getPosition+1
 14698  1930  0021               	movlb	1	; select bank1
 14699  1931  0835               	movf	getPosition@a^(0+128),w
 14700  1932  0020               	movlb	0	; select bank0
 14701  1933  00C9               	movwf	??_getPosition
 14702  1934  35C9               	lslf	??_getPosition,f
 14703  1935  0DCA               	rlf	??_getPosition+1,f
 14704  1936  35C9               	lslf	??_getPosition,f
 14705  1937  0DCA               	rlf	??_getPosition+1,f
 14706  1938  3090               	movlw	144
 14707  1939  00CB               	movwf	??_getPosition+2
 14708  193A  3027               	movlw	39
 14709  193B  00CC               	movwf	??_getPosition+3
 14710  193C  0849               	movf	??_getPosition,w
 14711  193D  074B               	addwf	??_getPosition+2,w
 14712  193E  0086               	movwf	6
 14713  193F  084A               	movf	??_getPosition+1,w
 14714  1940  3D4C               	addwfc	??_getPosition+3,w
 14715  1941  0087               	movwf	7
 14716  1942  3F40               	moviw [0]fsr1
 14717  1943  0021               	movlb	1	; select bank1
 14718  1944  00A2               	movwf	(?_printf^(0+128)+2)
 14719  1945  3F41               	moviw [1]fsr1
 14720  1946  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14721  1947  3F42               	moviw [2]fsr1
 14722  1948  00A4               	movwf	((?_printf+2)^(0+128)+2)
 14723  1949  3F43               	moviw [3]fsr1
 14724  194A  00A5               	movwf	((?_printf+3)^(0+128)+2)
 14725  194B  318E  26CE         	fcall	_printf
 14726                           
 14727                           ;main.c: 387: return 0;
 14728  194D  0021               	movlb	1	; select bank1
 14729  194E  01B5               	clrf	?_getPosition^(0+128)
 14730  194F  01B6               	clrf	(?_getPosition+1)^(0+128)
 14731  1950  0008               	return
 14732  1951                     l7972:	
 14733                           
 14734                           ;main.c: 388: }
 14735                           ;main.c: 390: return 1;
 14736  1951  3001               	movlw	1
 14737  1952  0021               	movlb	1	; select bank1
 14738  1953  00B5               	movwf	?_getPosition^(0+128)
 14739  1954  3000               	movlw	0
 14740  1955  00B6               	movwf	(?_getPosition^(0+128)+1)
 14741  1956  0008               	return
 14742  1957                     __end_of_getPosition:	
 14743                           
 14744                           	psect	text43
 14745  1B95                     __ptext43:	
 14746 ;; *************** function _getMoveMask *****************
 14747 ;; Defined at:
 14748 ;;		line 539 in file "main.c"
 14749 ;; Parameters:    Size  Location     Type
 14750 ;;		None
 14751 ;; Auto vars:     Size  Location     Type
 14752 ;;  i               2   23[BANK1 ] int 
 14753 ;; Return value:  Size  Location     Type
 14754 ;;                  2   21[BANK1 ] int 
 14755 ;; Registers used:
 14756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14757 ;; Tracked objects:
 14758 ;;		On entry : 0/0
 14759 ;;		On exit  : 0/0
 14760 ;;		Unchanged: 0/0
 14761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14762 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14763 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14764 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14765 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14766 ;;Total ram usage:        8 bytes
 14767 ;; Hardware stack levels used:    1
 14768 ;; Hardware stack levels required when called:    9
 14769 ;; This function calls:
 14770 ;;		_printf
 14771 ;; This function is called by:
 14772 ;;		_execCmd
 14773 ;; This function uses a non-reentrant model
 14774 ;;
 14775                           
 14776                           
 14777                           ;psect for function _getMoveMask
 14778  1B95                     _getMoveMask:	
 14779                           
 14780                           ;main.c: 540: for(int i=24-1; i>=0; i--){
 14781                           
 14782                           ;incstack = 0
 14783                           ; Regs used in _getMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14784  1B95  3017               	movlw	23
 14785  1B96  0021               	movlb	1	; select bank1
 14786  1B97  00B7               	movwf	getMoveMask@i^(0+128)
 14787  1B98  3000               	movlw	0
 14788  1B99  00B8               	movwf	(getMoveMask@i^(0+128)+1)
 14789  1B9A  1BB8               	btfsc	(getMoveMask@i+1)^(0+128),7
 14790  1B9B  2BD8               	goto	l8172
 14791  1B9C                     l8166:	
 14792                           
 14793                           ;main.c: 541: printf("%d ", (moveMask >> i) & 1 );
 14794  1B9C  304F               	movlw	low (STR_1| (0+32768))
 14795  1B9D  00A0               	movwf	printf@f^(0+128)
 14796  1B9E  30AA               	movlw	high (STR_1| (0+32768))
 14797  1B9F  00A1               	movwf	(printf@f^(0+128)+1)
 14798  1BA0  0859               	movf	_moveMask^(0+128),w
 14799  1BA1  0020               	movlb	0	; select bank0
 14800  1BA2  00C9               	movwf	??_getMoveMask
 14801  1BA3  0021               	movlb	1	; select bank1
 14802  1BA4  085A               	movf	(_moveMask+1)^(0+128),w
 14803  1BA5  0020               	movlb	0	; select bank0
 14804  1BA6  00CA               	movwf	??_getMoveMask+1
 14805  1BA7  0021               	movlb	1	; select bank1
 14806  1BA8  085B               	movf	(_moveMask+2)^(0+128),w
 14807  1BA9  0020               	movlb	0	; select bank0
 14808  1BAA  00CB               	movwf	??_getMoveMask+2
 14809  1BAB  0021               	movlb	1	; select bank1
 14810  1BAC  085C               	movf	(_moveMask+3)^(0+128),w
 14811  1BAD  0020               	movlb	0	; select bank0
 14812  1BAE  00CC               	movwf	??_getMoveMask+3
 14813  1BAF  0021               	movlb	1	; select bank1
 14814  1BB0  0A37               	incf	getMoveMask@i^(0+128),w
 14815  1BB1  0020               	movlb	0	; select bank0
 14816  1BB2  2BB8               	goto	u8180
 14817  1BB3                     u8185:	
 14818  1BB3  1003               	clrc
 14819  1BB4  0CCC               	rrf	??_getMoveMask+3,f
 14820  1BB5  0CCB               	rrf	??_getMoveMask+2,f
 14821  1BB6  0CCA               	rrf	??_getMoveMask+1,f
 14822  1BB7  0CC9               	rrf	??_getMoveMask,f
 14823  1BB8                     u8180:	
 14824  1BB8  3EFF               	addlw	-1
 14825  1BB9  1D03               	skipz
 14826  1BBA  2BB3               	goto	u8185
 14827  1BBB  3001               	movlw	1
 14828  1BBC  0549               	andwf	??_getMoveMask,w
 14829  1BBD  0021               	movlb	1	; select bank1
 14830  1BBE  00A2               	movwf	(?_printf^(0+128)+2)
 14831  1BBF  3000               	movlw	0
 14832  1BC0  0020               	movlb	0	; select bank0
 14833  1BC1  054A               	andwf	??_getMoveMask+1,w
 14834  1BC2  0021               	movlb	1	; select bank1
 14835  1BC3  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14836  1BC4  3000               	movlw	0
 14837  1BC5  0020               	movlb	0	; select bank0
 14838  1BC6  054B               	andwf	??_getMoveMask+2,w
 14839  1BC7  0021               	movlb	1	; select bank1
 14840  1BC8  00A4               	movwf	((?_printf+2)^(0+128)+2)
 14841  1BC9  3000               	movlw	0
 14842  1BCA  0020               	movlb	0	; select bank0
 14843  1BCB  054C               	andwf	??_getMoveMask+3,w
 14844  1BCC  0021               	movlb	1	; select bank1
 14845  1BCD  00A5               	movwf	((?_printf+3)^(0+128)+2)
 14846  1BCE  318E  26CE  319B   	fcall	_printf
 14847  1BD1  30FF               	movlw	255
 14848  1BD2  0021               	movlb	1	; select bank1
 14849  1BD3  07B7               	addwf	getMoveMask@i^(0+128),f
 14850  1BD4  30FF               	movlw	255
 14851  1BD5  3DB8               	addwfc	(getMoveMask@i+1)^(0+128),f
 14852  1BD6  1FB8               	btfss	(getMoveMask@i+1)^(0+128),7
 14853  1BD7  2B9C               	goto	l8166
 14854  1BD8                     l8172:	
 14855                           
 14856                           ;main.c: 542: }
 14857                           ;main.c: 543: printf("\n");
 14858  1BD8  3063               	movlw	low ((STR_36+28)| (0+32768))
 14859  1BD9  00A0               	movwf	printf@f^(0+128)
 14860  1BDA  30A8               	movlw	high ((STR_36+28)| (0+32768))
 14861  1BDB  00A1               	movwf	(printf@f^(0+128)+1)
 14862  1BDC  318E  26CE         	fcall	_printf
 14863                           
 14864                           ;main.c: 544: return 0;
 14865  1BDE  0021               	movlb	1	; select bank1
 14866  1BDF  01B5               	clrf	?_getMoveMask^(0+128)
 14867  1BE0  01B6               	clrf	(?_getMoveMask+1)^(0+128)
 14868  1BE1  0008               	return
 14869  1BE2                     __end_of_getMoveMask:	
 14870                           
 14871                           	psect	text44
 14872  261F                     __ptext44:	
 14873 ;; *************** function _getMotionStatus *****************
 14874 ;; Defined at:
 14875 ;;		line 546 in file "main.c"
 14876 ;; Parameters:    Size  Location     Type
 14877 ;;		None
 14878 ;; Auto vars:     Size  Location     Type
 14879 ;;		None
 14880 ;; Return value:  Size  Location     Type
 14881 ;;                  2   21[BANK1 ] int 
 14882 ;; Registers used:
 14883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14884 ;; Tracked objects:
 14885 ;;		On entry : 0/0
 14886 ;;		On exit  : 0/0
 14887 ;;		Unchanged: 0/0
 14888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14889 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14892 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14893 ;;Total ram usage:        2 bytes
 14894 ;; Hardware stack levels used:    1
 14895 ;; Hardware stack levels required when called:    9
 14896 ;; This function calls:
 14897 ;;		_printf
 14898 ;; This function is called by:
 14899 ;;		_execCmd
 14900 ;; This function uses a non-reentrant model
 14901 ;;
 14902                           
 14903                           
 14904                           ;psect for function _getMotionStatus
 14905  261F                     _getMotionStatus:	
 14906                           
 14907                           ;main.c: 547: switch(motionType){
 14908                           
 14909                           ;incstack = 0
 14910                           ; Regs used in _getMotionStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14911  261F  2E38               	goto	l8188
 14912  2620                     l8180:	
 14913                           ;main.c: 548: case REL_MOVE: printf("R"); break;
 14914                           
 14915  2620  3065               	movlw	low (STR_33| (0+32768))
 14916  2621  0021               	movlb	1	; select bank1
 14917  2622  00A0               	movwf	printf@f^(0+128)
 14918  2623  30AA               	movlw	high (STR_33| (0+32768))
 14919  2624  00A1               	movwf	(printf@f^(0+128)+1)
 14920  2625  318E  26CE         	fcall	_printf
 14921  2627  0008               	return
 14922  2628                     l8182:	
 14923                           ;main.c: 549: case ABS_MOVE: printf("A"); break;
 14924                           
 14925  2628  3024               	movlw	low ((STR_74+3)| (0+32768))
 14926  2629  0021               	movlb	1	; select bank1
 14927  262A  00A0               	movwf	printf@f^(0+128)
 14928  262B  30AA               	movlw	high ((STR_74+3)| (0+32768))
 14929  262C  00A1               	movwf	(printf@f^(0+128)+1)
 14930  262D  318E  26CE         	fcall	_printf
 14931  262F  0008               	return
 14932  2630                     l8184:	
 14933                           ;main.c: 550: default: printf("N"); break;
 14934                           
 14935  2630  3063               	movlw	low (STR_35| (0+32768))
 14936  2631  0021               	movlb	1	; select bank1
 14937  2632  00A0               	movwf	printf@f^(0+128)
 14938  2633  30AA               	movlw	high (STR_35| (0+32768))
 14939  2634  00A1               	movwf	(printf@f^(0+128)+1)
 14940  2635  318E  26CE         	fcall	_printf
 14941                           
 14942                           ;main.c: 551: }
 14943  2637  0008               	return
 14944  2638                     l8188:	
 14945  2638  0020               	movlb	0	; select bank0
 14946  2639  0855               	movf	_motionType,w
 14947                           
 14948                           ; Switch size 1, requested type "space"
 14949                           ; Number of cases is 2, Range of values is 1 to 2
 14950                           ; switch strategies available:
 14951                           ; Name         Instructions Cycles
 14952                           ; simple_byte            7     4 (average)
 14953                           ; direct_byte           13     9 (fixed)
 14954                           ; jumptable            263     9 (fixed)
 14955                           ;	Chosen strategy is simple_byte
 14956  263A  3A01               	xorlw	1	; case 1
 14957  263B  1903               	skipnz
 14958  263C  2E20               	goto	l8180
 14959  263D  3A03               	xorlw	3	; case 2
 14960  263E  1903               	skipnz
 14961  263F  2E28               	goto	l8182
 14962  2640  2E30               	goto	l8184
 14963  2641  0008               	return
 14964  2642                     __end_of_getMotionStatus:	
 14965                           
 14966                           	psect	text45
 14967  1B48                     __ptext45:	
 14968 ;; *************** function _getActive *****************
 14969 ;; Defined at:
 14970 ;;		line 531 in file "main.c"
 14971 ;; Parameters:    Size  Location     Type
 14972 ;;		None
 14973 ;; Auto vars:     Size  Location     Type
 14974 ;;  i               2   23[BANK1 ] int 
 14975 ;; Return value:  Size  Location     Type
 14976 ;;                  2   21[BANK1 ] int 
 14977 ;; Registers used:
 14978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14979 ;; Tracked objects:
 14980 ;;		On entry : 0/0
 14981 ;;		On exit  : 0/0
 14982 ;;		Unchanged: 0/0
 14983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14984 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14985 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14986 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14987 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14988 ;;Total ram usage:        8 bytes
 14989 ;; Hardware stack levels used:    1
 14990 ;; Hardware stack levels required when called:    9
 14991 ;; This function calls:
 14992 ;;		_printf
 14993 ;; This function is called by:
 14994 ;;		_execCmd
 14995 ;; This function uses a non-reentrant model
 14996 ;;
 14997                           
 14998                           
 14999                           ;psect for function _getActive
 15000  1B48                     _getActive:	
 15001                           
 15002                           ;main.c: 532: for(int i=24-1; i>=0; i--){
 15003                           
 15004                           ;incstack = 0
 15005                           ; Regs used in _getActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15006  1B48  3017               	movlw	23
 15007  1B49  0021               	movlb	1	; select bank1
 15008  1B4A  00B7               	movwf	getActive@i^(0+128)
 15009  1B4B  3000               	movlw	0
 15010  1B4C  00B8               	movwf	(getActive@i^(0+128)+1)
 15011  1B4D  1BB8               	btfsc	(getActive@i+1)^(0+128),7
 15012  1B4E  2B8B               	goto	l8154
 15013  1B4F                     l8148:	
 15014                           
 15015                           ;main.c: 533: printf("%d ", (activeMask >> i) & 1 );
 15016  1B4F  304F               	movlw	low (STR_1| (0+32768))
 15017  1B50  00A0               	movwf	printf@f^(0+128)
 15018  1B51  30AA               	movlw	high (STR_1| (0+32768))
 15019  1B52  00A1               	movwf	(printf@f^(0+128)+1)
 15020  1B53  085D               	movf	_activeMask^(0+128),w
 15021  1B54  0020               	movlb	0	; select bank0
 15022  1B55  00C9               	movwf	??_getActive
 15023  1B56  0021               	movlb	1	; select bank1
 15024  1B57  085E               	movf	(_activeMask+1)^(0+128),w
 15025  1B58  0020               	movlb	0	; select bank0
 15026  1B59  00CA               	movwf	??_getActive+1
 15027  1B5A  0021               	movlb	1	; select bank1
 15028  1B5B  085F               	movf	(_activeMask+2)^(0+128),w
 15029  1B5C  0020               	movlb	0	; select bank0
 15030  1B5D  00CB               	movwf	??_getActive+2
 15031  1B5E  0021               	movlb	1	; select bank1
 15032  1B5F  0860               	movf	(_activeMask+3)^(0+128),w
 15033  1B60  0020               	movlb	0	; select bank0
 15034  1B61  00CC               	movwf	??_getActive+3
 15035  1B62  0021               	movlb	1	; select bank1
 15036  1B63  0A37               	incf	getActive@i^(0+128),w
 15037  1B64  0020               	movlb	0	; select bank0
 15038  1B65  2B6B               	goto	u8150
 15039  1B66                     u8155:	
 15040  1B66  1003               	clrc
 15041  1B67  0CCC               	rrf	??_getActive+3,f
 15042  1B68  0CCB               	rrf	??_getActive+2,f
 15043  1B69  0CCA               	rrf	??_getActive+1,f
 15044  1B6A  0CC9               	rrf	??_getActive,f
 15045  1B6B                     u8150:	
 15046  1B6B  3EFF               	addlw	-1
 15047  1B6C  1D03               	skipz
 15048  1B6D  2B66               	goto	u8155
 15049  1B6E  3001               	movlw	1
 15050  1B6F  0549               	andwf	??_getActive,w
 15051  1B70  0021               	movlb	1	; select bank1
 15052  1B71  00A2               	movwf	(?_printf^(0+128)+2)
 15053  1B72  3000               	movlw	0
 15054  1B73  0020               	movlb	0	; select bank0
 15055  1B74  054A               	andwf	??_getActive+1,w
 15056  1B75  0021               	movlb	1	; select bank1
 15057  1B76  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15058  1B77  3000               	movlw	0
 15059  1B78  0020               	movlb	0	; select bank0
 15060  1B79  054B               	andwf	??_getActive+2,w
 15061  1B7A  0021               	movlb	1	; select bank1
 15062  1B7B  00A4               	movwf	((?_printf+2)^(0+128)+2)
 15063  1B7C  3000               	movlw	0
 15064  1B7D  0020               	movlb	0	; select bank0
 15065  1B7E  054C               	andwf	??_getActive+3,w
 15066  1B7F  0021               	movlb	1	; select bank1
 15067  1B80  00A5               	movwf	((?_printf+3)^(0+128)+2)
 15068  1B81  318E  26CE  319B   	fcall	_printf
 15069  1B84  30FF               	movlw	255
 15070  1B85  0021               	movlb	1	; select bank1
 15071  1B86  07B7               	addwf	getActive@i^(0+128),f
 15072  1B87  30FF               	movlw	255
 15073  1B88  3DB8               	addwfc	(getActive@i+1)^(0+128),f
 15074  1B89  1FB8               	btfss	(getActive@i+1)^(0+128),7
 15075  1B8A  2B4F               	goto	l8148
 15076  1B8B                     l8154:	
 15077                           
 15078                           ;main.c: 534: }
 15079                           ;main.c: 535: printf("\n");
 15080  1B8B  3063               	movlw	low ((STR_36+28)| (0+32768))
 15081  1B8C  00A0               	movwf	printf@f^(0+128)
 15082  1B8D  30A8               	movlw	high ((STR_36+28)| (0+32768))
 15083  1B8E  00A1               	movwf	(printf@f^(0+128)+1)
 15084  1B8F  318E  26CE         	fcall	_printf
 15085                           
 15086                           ;main.c: 536: return 0;
 15087  1B91  0021               	movlb	1	; select bank1
 15088  1B92  01B5               	clrf	?_getActive^(0+128)
 15089  1B93  01B6               	clrf	(?_getActive+1)^(0+128)
 15090  1B94  0008               	return
 15091  1B95                     __end_of_getActive:	
 15092                           
 15093                           	psect	text46
 15094  0A3A                     __ptext46:	
 15095 ;; *************** function _commCheck *****************
 15096 ;; Defined at:
 15097 ;;		line 554 in file "main.c"
 15098 ;; Parameters:    Size  Location     Type
 15099 ;;		None
 15100 ;; Auto vars:     Size  Location     Type
 15101 ;;		None
 15102 ;; Return value:  Size  Location     Type
 15103 ;;                  2   49[BANK1 ] int 
 15104 ;; Registers used:
 15105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15106 ;; Tracked objects:
 15107 ;;		On entry : 0/0
 15108 ;;		On exit  : 0/0
 15109 ;;		Unchanged: 0/0
 15110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15111 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15113 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15114 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15115 ;;Total ram usage:        3 bytes
 15116 ;; Hardware stack levels used:    1
 15117 ;; Hardware stack levels required when called:   13
 15118 ;; This function calls:
 15119 ;;		_LED_testComm
 15120 ;;		_LED_test_openshort
 15121 ;;		_drv_read
 15122 ;;		_printf
 15123 ;; This function is called by:
 15124 ;;		_execCmd
 15125 ;; This function uses a non-reentrant model
 15126 ;;
 15127                           
 15128                           
 15129                           ;psect for function _commCheck
 15130  0A3A                     _commCheck:	
 15131                           
 15132                           ;main.c: 555: printf("\n----starting comm test----\n\n");
 15133                           
 15134                           ;incstack = 0
 15135                           ; Regs used in _commCheck: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15136  0A3A  3047               	movlw	low (STR_36| (0+32768))
 15137  0A3B  0021               	movlb	1	; select bank1
 15138  0A3C  00A0               	movwf	printf@f^(0+128)
 15139  0A3D  30A8               	movlw	high (STR_36| (0+32768))
 15140  0A3E  00A1               	movwf	(printf@f^(0+128)+1)
 15141  0A3F  318E  26CE  318A   	fcall	_printf
 15142                           
 15143                           ;main.c: 558: printf("testing top LED driver...");
 15144  0A42  3081               	movlw	low (STR_37| (0+32768))
 15145  0A43  0021               	movlb	1	; select bank1
 15146  0A44  00A0               	movwf	printf@f^(0+128)
 15147  0A45  30A8               	movlw	high (STR_37| (0+32768))
 15148  0A46  00A1               	movwf	(printf@f^(0+128)+1)
 15149  0A47  318E  26CE  318A   	fcall	_printf
 15150                           
 15151                           ;main.c: 559: if (!LED_testComm(1))
 15152  0A4A  3001               	movlw	1
 15153  0A4B  0021               	movlb	1	; select bank1
 15154  0A4C  00C9               	movwf	LED_testComm@topOrBottom^(0+128)
 15155  0A4D  3000               	movlw	0
 15156  0A4E  00CA               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 15157  0A4F  3197  2787  318A   	fcall	_LED_testComm
 15158  0A52  0021               	movlb	1	; select bank1
 15159  0A53  0849               	movf	?_LED_testComm^(0+128),w
 15160  0A54  044A               	iorwf	(?_LED_testComm+1)^(0+128),w
 15161  0A55  1D03               	btfss	3,2
 15162  0A56  2A5B               	goto	l8194
 15163                           
 15164                           ;main.c: 560: printf("passed\n");
 15165  0A57  30FB               	movlw	low (STR_38| (0+32768))
 15166  0A58  00A0               	movwf	printf@f^(0+128)
 15167  0A59  30A9               	movlw	high (STR_38| (0+32768))
 15168  0A5A  2A5F               	goto	L26
 15169  0A5B                     l8194:	
 15170                           
 15171                           ;main.c: 561: else
 15172                           ;main.c: 562: printf("FAILED\n");
 15173  0A5B  30F3               	movlw	low (STR_39| (0+32768))
 15174  0A5C  0021               	movlb	1	; select bank1
 15175  0A5D  00A0               	movwf	printf@f^(0+128)
 15176  0A5E  30A9               	movlw	high (STR_39| (0+32768))
 15177  0A5F                     L26:	
 15178  0A5F  00A1               	movwf	(printf@f^(0+128)+1)
 15179  0A60  318E  26CE  318A   	fcall	_printf
 15180                           
 15181                           ;main.c: 564: printf("opens: ");
 15182  0A63  300B               	movlw	low (STR_40| (0+32768))
 15183  0A64  0021               	movlb	1	; select bank1
 15184  0A65  00A0               	movwf	printf@f^(0+128)
 15185  0A66  30AA               	movlw	high (STR_40| (0+32768))
 15186  0A67  00A1               	movwf	(printf@f^(0+128)+1)
 15187  0A68  318E  26CE  318A   	fcall	_printf
 15188                           
 15189                           ;main.c: 565: LED_test_openshort(10, 1);
 15190  0A6B  300A               	movlw	10
 15191  0A6C  0021               	movlb	1	; select bank1
 15192  0A6D  00B5               	movwf	LED_test_openshort@type^(0+128)
 15193  0A6E  3000               	movlw	0
 15194  0A6F  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15195  0A70  3001               	movlw	1
 15196  0A71  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15197  0A72  3000               	movlw	0
 15198  0A73  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15199  0A74  3195  25AE  318A   	fcall	_LED_test_openshort
 15200                           
 15201                           ;main.c: 566: printf("\n\nshorts: ");
 15202  0A77  30B6               	movlw	low (STR_41| (0+32768))
 15203  0A78  0021               	movlb	1	; select bank1
 15204  0A79  00A0               	movwf	printf@f^(0+128)
 15205  0A7A  30A9               	movlw	high (STR_41| (0+32768))
 15206  0A7B  00A1               	movwf	(printf@f^(0+128)+1)
 15207  0A7C  318E  26CE  318A   	fcall	_printf
 15208                           
 15209                           ;main.c: 567: LED_test_openshort(11, 1);
 15210  0A7F  300B               	movlw	11
 15211  0A80  0021               	movlb	1	; select bank1
 15212  0A81  00B5               	movwf	LED_test_openshort@type^(0+128)
 15213  0A82  3000               	movlw	0
 15214  0A83  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15215  0A84  3001               	movlw	1
 15216  0A85  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15217  0A86  3000               	movlw	0
 15218  0A87  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15219  0A88  3195  25AE  318A   	fcall	_LED_test_openshort
 15220                           
 15221                           ;main.c: 570: printf("\ntesting bottom LED driver...\n");
 15222  0A8B  3028               	movlw	low (STR_42| (0+32768))
 15223  0A8C  0021               	movlb	1	; select bank1
 15224  0A8D  00A0               	movwf	printf@f^(0+128)
 15225  0A8E  30A8               	movlw	high (STR_42| (0+32768))
 15226  0A8F  00A1               	movwf	(printf@f^(0+128)+1)
 15227  0A90  318E  26CE  318A   	fcall	_printf
 15228                           
 15229                           ;main.c: 571: if (!LED_testComm(2))
 15230  0A93  3002               	movlw	2
 15231  0A94  0021               	movlb	1	; select bank1
 15232  0A95  00C9               	movwf	LED_testComm@topOrBottom^(0+128)
 15233  0A96  3000               	movlw	0
 15234  0A97  00CA               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 15235  0A98  3197  2787  318A   	fcall	_LED_testComm
 15236  0A9B  0021               	movlb	1	; select bank1
 15237  0A9C  0849               	movf	?_LED_testComm^(0+128),w
 15238  0A9D  044A               	iorwf	(?_LED_testComm+1)^(0+128),w
 15239  0A9E  1D03               	btfss	3,2
 15240  0A9F  2AA4               	goto	l8198
 15241                           
 15242                           ;main.c: 572: printf("passed\n");
 15243  0AA0  30FB               	movlw	low (STR_38| (0+32768))
 15244  0AA1  00A0               	movwf	printf@f^(0+128)
 15245  0AA2  30A9               	movlw	high (STR_38| (0+32768))
 15246  0AA3  2AA8               	goto	L27
 15247  0AA4                     l8198:	
 15248                           
 15249                           ;main.c: 573: else
 15250                           ;main.c: 574: printf("FAILED\n");
 15251  0AA4  30F3               	movlw	low (STR_39| (0+32768))
 15252  0AA5  0021               	movlb	1	; select bank1
 15253  0AA6  00A0               	movwf	printf@f^(0+128)
 15254  0AA7  30A9               	movlw	high (STR_39| (0+32768))
 15255  0AA8                     L27:	
 15256  0AA8  00A1               	movwf	(printf@f^(0+128)+1)
 15257  0AA9  318E  26CE  318A   	fcall	_printf
 15258                           
 15259                           ;main.c: 576: printf("opens: ");
 15260  0AAC  300B               	movlw	low (STR_40| (0+32768))
 15261  0AAD  0021               	movlb	1	; select bank1
 15262  0AAE  00A0               	movwf	printf@f^(0+128)
 15263  0AAF  30AA               	movlw	high (STR_40| (0+32768))
 15264  0AB0  00A1               	movwf	(printf@f^(0+128)+1)
 15265  0AB1  318E  26CE  318A   	fcall	_printf
 15266                           
 15267                           ;main.c: 577: LED_test_openshort(10, 2);
 15268  0AB4  300A               	movlw	10
 15269  0AB5  0021               	movlb	1	; select bank1
 15270  0AB6  00B5               	movwf	LED_test_openshort@type^(0+128)
 15271  0AB7  3000               	movlw	0
 15272  0AB8  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15273  0AB9  3002               	movlw	2
 15274  0ABA  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15275  0ABB  3000               	movlw	0
 15276  0ABC  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15277  0ABD  3195  25AE  318A   	fcall	_LED_test_openshort
 15278                           
 15279                           ;main.c: 578: printf("\n\nshorts: ");
 15280  0AC0  30B6               	movlw	low (STR_41| (0+32768))
 15281  0AC1  0021               	movlb	1	; select bank1
 15282  0AC2  00A0               	movwf	printf@f^(0+128)
 15283  0AC3  30A9               	movlw	high (STR_41| (0+32768))
 15284  0AC4  00A1               	movwf	(printf@f^(0+128)+1)
 15285  0AC5  318E  26CE  318A   	fcall	_printf
 15286                           
 15287                           ;main.c: 579: LED_test_openshort(11, 2);
 15288  0AC8  300B               	movlw	11
 15289  0AC9  0021               	movlb	1	; select bank1
 15290  0ACA  00B5               	movwf	LED_test_openshort@type^(0+128)
 15291  0ACB  3000               	movlw	0
 15292  0ACC  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15293  0ACD  3002               	movlw	2
 15294  0ACE  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15295  0ACF  3000               	movlw	0
 15296  0AD0  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15297  0AD1  3195  25AE  318A   	fcall	_LED_test_openshort
 15298                           
 15299                           ;main.c: 581: printf("\ntesting piezo driver...");
 15300  0AD4  309B               	movlw	low (STR_47| (0+32768))
 15301  0AD5  0021               	movlb	1	; select bank1
 15302  0AD6  00A0               	movwf	printf@f^(0+128)
 15303  0AD7  30A8               	movlw	high (STR_47| (0+32768))
 15304  0AD8  00A1               	movwf	(printf@f^(0+128)+1)
 15305  0AD9  318E  26CE  318A   	fcall	_printf
 15306                           
 15307                           ;main.c: 582: if(drv_read(0x01) > 0)
 15308  0ADC  3001               	movlw	1
 15309  0ADD  319A  2221  318A   	fcall	_drv_read
 15310  0AE0  0021               	movlb	1	; select bank1
 15311  0AE1  0836               	movf	(?_drv_read+1)^(0+128),w
 15312  0AE2  3A80               	xorlw	128
 15313  0AE3  00D3               	movwf	??_commCheck^(0+128)
 15314  0AE4  3080               	movlw	128
 15315  0AE5  0253               	subwf	??_commCheck^(0+128),w
 15316  0AE6  1D03               	skipz
 15317  0AE7  2AEA               	goto	u8225
 15318  0AE8  3001               	movlw	1
 15319  0AE9  0235               	subwf	?_drv_read^(0+128),w
 15320  0AEA                     u8225:	
 15321  0AEA  1C03               	skipc
 15322  0AEB  2AF1               	goto	l8202
 15323                           
 15324                           ;main.c: 583: printf("passed\n\n");
 15325  0AEC  30CA               	movlw	low (STR_48| (0+32768))
 15326  0AED  0021               	movlb	1	; select bank1
 15327  0AEE  00A0               	movwf	printf@f^(0+128)
 15328  0AEF  30A9               	movlw	high (STR_48| (0+32768))
 15329  0AF0  2AF5               	goto	L28
 15330  0AF1                     l8202:	
 15331                           
 15332                           ;main.c: 584: else
 15333                           ;main.c: 585: printf("FAILED\n\n");
 15334  0AF1  30C1               	movlw	low (STR_49| (0+32768))
 15335  0AF2  0021               	movlb	1	; select bank1
 15336  0AF3  00A0               	movwf	printf@f^(0+128)
 15337  0AF4  30A9               	movlw	high (STR_49| (0+32768))
 15338  0AF5                     L28:	
 15339  0AF5  00A1               	movwf	(printf@f^(0+128)+1)
 15340  0AF6  318E  26CE  318A   	fcall	_printf
 15341                           
 15342                           ;main.c: 586: printf("----finished comm test----\n");
 15343  0AF9  3065               	movlw	low (STR_50| (0+32768))
 15344  0AFA  0021               	movlb	1	; select bank1
 15345  0AFB  00A0               	movwf	printf@f^(0+128)
 15346  0AFC  30A8               	movlw	high (STR_50| (0+32768))
 15347  0AFD  00A1               	movwf	(printf@f^(0+128)+1)
 15348  0AFE  318E  26CE         	fcall	_printf
 15349  0B00  0008               	return
 15350  0B01                     __end_of_commCheck:	
 15351                           
 15352                           	psect	text47
 15353  15AE                     __ptext47:	
 15354 ;; *************** function _LED_test_openshort *****************
 15355 ;; Defined at:
 15356 ;;		line 95 in file "LEDcomm.c"
 15357 ;; Parameters:    Size  Location     Type
 15358 ;;  type            2   21[BANK1 ] int 
 15359 ;;  topOrBottom     2   23[BANK1 ] int 
 15360 ;; Auto vars:     Size  Location     Type
 15361 ;;  j               2   26[BANK1 ] int 
 15362 ;; Return value:  Size  Location     Type
 15363 ;;                  1    wreg      void 
 15364 ;; Registers used:
 15365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15366 ;; Tracked objects:
 15367 ;;		On entry : 0/0
 15368 ;;		On exit  : 0/0
 15369 ;;		Unchanged: 0/0
 15370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15371 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15372 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15373 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15374 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15375 ;;Total ram usage:        7 bytes
 15376 ;; Hardware stack levels used:    1
 15377 ;; Hardware stack levels required when called:    9
 15378 ;; This function calls:
 15379 ;;		_LEDsOn
 15380 ;;		_printf
 15381 ;;		_send_2length_2bytes_IK
 15382 ;; This function is called by:
 15383 ;;		_commCheck
 15384 ;; This function uses a non-reentrant model
 15385 ;;
 15386                           
 15387                           
 15388                           ;psect for function _LED_test_openshort
 15389  15AE                     _LED_test_openshort:	
 15390                           
 15391                           ;incstack = 0
 15392                           ; Regs used in _LED_test_openshort: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15393                           ;LEDcomm.c: 97: do { LATCbits.LATC1 = 1; } while(0);
 15394  15AE  0022               	movlb	2	; select bank2
 15395  15AF  148E               	bsf	14,1	;volatile
 15396                           
 15397                           ;LEDcomm.c: 98: LEDsOn(0xFFFFFFFF, topOrBottom);
 15398  15B0  30FF               	movlw	255
 15399  15B1  0020               	movlb	0	; select bank0
 15400  15B2  00C7               	movwf	LEDsOn@LEDpins+3
 15401  15B3  30FF               	movlw	255
 15402  15B4  00C6               	movwf	LEDsOn@LEDpins+2
 15403  15B5  30FF               	movlw	255
 15404  15B6  00C5               	movwf	LEDsOn@LEDpins+1
 15405  15B7  30FF               	movlw	255
 15406  15B8  00C4               	movwf	LEDsOn@LEDpins
 15407  15B9  0021               	movlb	1	; select bank1
 15408  15BA  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15409  15BB  0020               	movlb	0	; select bank0
 15410  15BC  00C9               	movwf	LEDsOn@topOrBottom+1
 15411  15BD  0021               	movlb	1	; select bank1
 15412  15BE  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15413  15BF  0020               	movlb	0	; select bank0
 15414  15C0  00C8               	movwf	LEDsOn@topOrBottom
 15415  15C1  31A5  25DC  3195   	fcall	_LEDsOn
 15416                           
 15417                           ;LEDcomm.c: 99: send_2length_2bytes_IK(0,0,type,topOrBottom);
 15418  15C4  3000               	movlw	0
 15419  15C5  0020               	movlb	0	; select bank0
 15420  15C6  00BC               	movwf	send_2length_2bytes_IK@data1
 15421  15C7  00BD               	movwf	send_2length_2bytes_IK@data1+1
 15422  15C8  3000               	movlw	0
 15423  15C9  00BE               	movwf	send_2length_2bytes_IK@data2
 15424  15CA  00BF               	movwf	send_2length_2bytes_IK@data2+1
 15425  15CB  0021               	movlb	1	; select bank1
 15426  15CC  0835               	movf	LED_test_openshort@type^(0+128),w
 15427  15CD  00B9               	movwf	??_LED_test_openshort^(0+128)
 15428  15CE  0839               	movf	??_LED_test_openshort^(0+128),w
 15429  15CF  0020               	movlb	0	; select bank0
 15430  15D0  00C0               	movwf	send_2length_2bytes_IK@latch_start
 15431  15D1  0021               	movlb	1	; select bank1
 15432  15D2  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15433  15D3  0020               	movlb	0	; select bank0
 15434  15D4  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 15435  15D5  0021               	movlb	1	; select bank1
 15436  15D6  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15437  15D7  0020               	movlb	0	; select bank0
 15438  15D8  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 15439  15D9  31A4  2445  3195   	fcall	_send_2length_2bytes_IK
 15440                           
 15441                           ;LEDcomm.c: 101: do { LATCbits.LATC1 = 0; } while(0);
 15442  15DC  0022               	movlb	2	; select bank2
 15443  15DD  108E               	bcf	14,1	;volatile
 15444                           
 15445                           ;LEDcomm.c: 103: for(int j = 23; j>=0; j--){
 15446  15DE  3017               	movlw	23
 15447  15DF  0021               	movlb	1	; select bank1
 15448  15E0  00BA               	movwf	LED_test_openshort@j^(0+128)
 15449  15E1  3000               	movlw	0
 15450  15E2  00BB               	movwf	(LED_test_openshort@j^(0+128)+1)
 15451  15E3  1BBB               	btfsc	(LED_test_openshort@j+1)^(0+128),7
 15452  15E4  2E1C               	goto	l7614
 15453  15E5                     l279:	
 15454                           ;LEDcomm.c: 104: do { LATAbits.LATA2 = 1; } while(0);
 15455                           
 15456  15E5  0022               	movlb	2	; select bank2
 15457  15E6  150C               	bsf	12,2	;volatile
 15458                           
 15459                           ;LEDcomm.c: 105: _delay((unsigned long)((10)*(1000000/4000000.0)));
 15460  15E7  3200               	nop2	;2 cycle nop
 15461                           
 15462                           ;LEDcomm.c: 106: do { LATAbits.LATA2 = 0; } while(0);
 15463  15E8  0022               	movlb	2	; select bank2
 15464  15E9  110C               	bcf	12,2	;volatile
 15465                           
 15466                           ;LEDcomm.c: 108: if (PORTCbits.RC6) printf("%d ", j);
 15467  15EA  0020               	movlb	0	; select bank0
 15468  15EB  1F0E               	btfss	14,6	;volatile
 15469  15EC  2DF9               	goto	l7606
 15470  15ED  304F               	movlw	low (STR_1| (0+32768))
 15471  15EE  0021               	movlb	1	; select bank1
 15472  15EF  00A0               	movwf	printf@f^(0+128)
 15473  15F0  30AA               	movlw	high (STR_1| (0+32768))
 15474  15F1  00A1               	movwf	(printf@f^(0+128)+1)
 15475  15F2  083B               	movf	(LED_test_openshort@j+1)^(0+128),w
 15476  15F3  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15477  15F4  083A               	movf	LED_test_openshort@j^(0+128),w
 15478  15F5  00A2               	movwf	(?_printf^(0+128)+2)
 15479  15F6  318E  26CE  3195   	fcall	_printf
 15480  15F9                     l7606:	
 15481                           
 15482                           ;LEDcomm.c: 114: if (j == 23) {do { LATCbits.LATC1 = 1; } while(0); LEDsOn(0, topOrBotto
      +                          m); }
 15483  15F9  3017               	movlw	23
 15484  15FA  0021               	movlb	1	; select bank1
 15485  15FB  063A               	xorwf	LED_test_openshort@j^(0+128),w
 15486  15FC  043B               	iorwf	(LED_test_openshort@j+1)^(0+128),w
 15487  15FD  1D03               	btfss	3,2
 15488  15FE  2E15               	goto	l7610
 15489  15FF  0022               	movlb	2	; select bank2
 15490  1600  148E               	bsf	14,1	;volatile
 15491  1601  3000               	movlw	0
 15492  1602  0020               	movlb	0	; select bank0
 15493  1603  00C7               	movwf	LEDsOn@LEDpins+3
 15494  1604  3000               	movlw	0
 15495  1605  00C6               	movwf	LEDsOn@LEDpins+2
 15496  1606  3000               	movlw	0
 15497  1607  00C5               	movwf	LEDsOn@LEDpins+1
 15498  1608  3000               	movlw	0
 15499  1609  00C4               	movwf	LEDsOn@LEDpins
 15500  160A  0021               	movlb	1	; select bank1
 15501  160B  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15502  160C  0020               	movlb	0	; select bank0
 15503  160D  00C9               	movwf	LEDsOn@topOrBottom+1
 15504  160E  0021               	movlb	1	; select bank1
 15505  160F  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15506  1610  0020               	movlb	0	; select bank0
 15507  1611  00C8               	movwf	LEDsOn@topOrBottom
 15508  1612  31A5  25DC  3195   	fcall	_LEDsOn
 15509  1615                     l7610:	
 15510  1615  30FF               	movlw	255
 15511  1616  0021               	movlb	1	; select bank1
 15512  1617  07BA               	addwf	LED_test_openshort@j^(0+128),f
 15513  1618  30FF               	movlw	255
 15514  1619  3DBB               	addwfc	(LED_test_openshort@j+1)^(0+128),f
 15515  161A  1FBB               	btfss	(LED_test_openshort@j+1)^(0+128),7
 15516  161B  2DE5               	goto	l279
 15517  161C                     l7614:	
 15518                           
 15519                           ;LEDcomm.c: 115: }
 15520                           ;LEDcomm.c: 116: printf("\n");
 15521  161C  3063               	movlw	low ((STR_36+28)| (0+32768))
 15522  161D  00A0               	movwf	printf@f^(0+128)
 15523  161E  30A8               	movlw	high ((STR_36+28)| (0+32768))
 15524  161F  00A1               	movwf	(printf@f^(0+128)+1)
 15525  1620  318E  26CE         	fcall	_printf
 15526  1622  0008               	return
 15527  1623                     __end_of_LED_test_openshort:	
 15528                           
 15529                           	psect	text48
 15530  1787                     __ptext48:	
 15531 ;; *************** function _LED_testComm *****************
 15532 ;; Defined at:
 15533 ;;		line 149 in file "LEDcomm.c"
 15534 ;; Parameters:    Size  Location     Type
 15535 ;;  topOrBottom     2   41[BANK1 ] int 
 15536 ;; Auto vars:     Size  Location     Type
 15537 ;;  oldConfigReg    4   45[BANK1 ] long 
 15538 ;;  readResult      2   43[BANK1 ] int 
 15539 ;; Return value:  Size  Location     Type
 15540 ;;                  2   41[BANK1 ] int 
 15541 ;; Registers used:
 15542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15543 ;; Tracked objects:
 15544 ;;		On entry : 0/0
 15545 ;;		On exit  : 0/0
 15546 ;;		Unchanged: 0/0
 15547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15548 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15549 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15550 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15551 ;;      Totals:         0       2       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15552 ;;Total ram usage:       10 bytes
 15553 ;; Hardware stack levels used:    1
 15554 ;; Hardware stack levels required when called:   11
 15555 ;; This function calls:
 15556 ;;		_LED_readConfig
 15557 ;;		_LED_setBrightnessRange
 15558 ;; This function is called by:
 15559 ;;		_commCheck
 15560 ;; This function uses a non-reentrant model
 15561 ;;
 15562                           
 15563                           
 15564                           ;psect for function _LED_testComm
 15565  1787                     _LED_testComm:	
 15566                           
 15567                           ;LEDcomm.c: 151: long oldConfigReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 15568                           
 15569                           ;incstack = 0
 15570                           ; Regs used in _LED_testComm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15571  1787  0021               	movlb	1	; select bank1
 15572  1788  0349               	decf	LED_testComm@topOrBottom^(0+128),w
 15573  1789  044A               	iorwf	(LED_testComm@topOrBottom+1)^(0+128),w
 15574  178A  1903               	btfsc	3,2
 15575  178B  2F9B               	goto	l7620
 15576  178C  0022               	movlb	2	; select bank2
 15577  178D  084D               	movf	(_LED_configReg_bot+3)^(0+256),w
 15578  178E  0021               	movlb	1	; select bank1
 15579  178F  00D0               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 15580  1790  0022               	movlb	2	; select bank2
 15581  1791  084C               	movf	(_LED_configReg_bot+2)^(0+256),w
 15582  1792  0021               	movlb	1	; select bank1
 15583  1793  00CF               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 15584  1794  0022               	movlb	2	; select bank2
 15585  1795  084B               	movf	(_LED_configReg_bot+1)^(0+256),w
 15586  1796  0021               	movlb	1	; select bank1
 15587  1797  00CE               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 15588  1798  0022               	movlb	2	; select bank2
 15589  1799  084A               	movf	_LED_configReg_bot^(0+256),w
 15590  179A  2FA9               	goto	L29
 15591  179B                     l7620:	
 15592  179B  0022               	movlb	2	; select bank2
 15593  179C  0851               	movf	(_LED_configReg_top+3)^(0+256),w
 15594  179D  0021               	movlb	1	; select bank1
 15595  179E  00D0               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 15596  179F  0022               	movlb	2	; select bank2
 15597  17A0  0850               	movf	(_LED_configReg_top+2)^(0+256),w
 15598  17A1  0021               	movlb	1	; select bank1
 15599  17A2  00CF               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 15600  17A3  0022               	movlb	2	; select bank2
 15601  17A4  084F               	movf	(_LED_configReg_top+1)^(0+256),w
 15602  17A5  0021               	movlb	1	; select bank1
 15603  17A6  00CE               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 15604  17A7  0022               	movlb	2	; select bank2
 15605  17A8  084E               	movf	_LED_configReg_top^(0+256),w
 15606  17A9                     L29:	
 15607  17A9  0021               	movlb	1	; select bank1
 15608  17AA  00CD               	movwf	LED_testComm@oldConfigReg^(0+128)
 15609                           
 15610                           ;LEDcomm.c: 152: LED_setBrightnessRange(1, topOrBottom);
 15611  17AB  3001               	movlw	1
 15612  17AC  0020               	movlb	0	; select bank0
 15613  17AD  00C4               	movwf	LED_setBrightnessRange@range
 15614  17AE  3000               	movlw	0
 15615  17AF  00C5               	movwf	LED_setBrightnessRange@range+1
 15616  17B0  0021               	movlb	1	; select bank1
 15617  17B1  084A               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15618  17B2  0020               	movlb	0	; select bank0
 15619  17B3  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 15620  17B4  0021               	movlb	1	; select bank1
 15621  17B5  0849               	movf	LED_testComm@topOrBottom^(0+128),w
 15622  17B6  0020               	movlb	0	; select bank0
 15623  17B7  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 15624  17B8  318B  23DE  3197   	fcall	_LED_setBrightnessRange
 15625                           
 15626                           ;LEDcomm.c: 153: int readResult = LED_readConfig(topOrBottom);
 15627  17BB  0021               	movlb	1	; select bank1
 15628  17BC  084A               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15629  17BD  00C6               	movwf	(LED_readConfig@topOrBottom+1)^(0+128)
 15630  17BE  0849               	movf	LED_testComm@topOrBottom^(0+128),w
 15631  17BF  00C5               	movwf	LED_readConfig@topOrBottom^(0+128)
 15632  17C0  31A6  26AE  3197   	fcall	_LED_readConfig
 15633  17C3  0021               	movlb	1	; select bank1
 15634  17C4  0846               	movf	(?_LED_readConfig+1)^(0+128),w
 15635  17C5  00CC               	movwf	(LED_testComm@readResult+1)^(0+128)
 15636  17C6  0845               	movf	?_LED_readConfig^(0+128),w
 15637  17C7  00CB               	movwf	LED_testComm@readResult^(0+128)
 15638                           
 15639                           ;LEDcomm.c: 155: LED_setBrightnessRange(oldConfigReg > 0, topOrBottom);
 15640  17C8  1BD0               	btfsc	(LED_testComm@oldConfigReg+3)^(0+128),7
 15641  17C9  2FD9               	goto	u7470
 15642  17CA  0850               	movf	(LED_testComm@oldConfigReg+3)^(0+128),w
 15643  17CB  1D03               	btfss	3,2
 15644  17CC  2FD7               	goto	u7471
 15645  17CD  084F               	movf	(LED_testComm@oldConfigReg+2)^(0+128),w
 15646  17CE  1D03               	btfss	3,2
 15647  17CF  2FD7               	goto	u7471
 15648  17D0  084E               	movf	(LED_testComm@oldConfigReg+1)^(0+128),w
 15649  17D1  1D03               	btfss	3,2
 15650  17D2  2FD7               	goto	u7471
 15651  17D3  3001               	movlw	1
 15652  17D4  024D               	subwf	LED_testComm@oldConfigReg^(0+128),w
 15653  17D5  1C03               	btfss	3,0
 15654  17D6  2FD9               	goto	u7470
 15655  17D7                     u7471:	
 15656  17D7  3001               	movlw	1
 15657  17D8  2FDA               	goto	u7480
 15658  17D9                     u7470:	
 15659  17D9  3000               	movlw	0
 15660  17DA                     u7480:	
 15661  17DA  0020               	movlb	0	; select bank0
 15662  17DB  00CC               	movwf	??_LED_testComm
 15663  17DC  01CD               	clrf	??_LED_testComm+1
 15664  17DD  084C               	movf	??_LED_testComm,w
 15665  17DE  00C4               	movwf	LED_setBrightnessRange@range
 15666  17DF  084D               	movf	??_LED_testComm+1,w
 15667  17E0  00C5               	movwf	LED_setBrightnessRange@range+1
 15668  17E1  0021               	movlb	1	; select bank1
 15669  17E2  084A               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15670  17E3  0020               	movlb	0	; select bank0
 15671  17E4  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 15672  17E5  0021               	movlb	1	; select bank1
 15673  17E6  0849               	movf	LED_testComm@topOrBottom^(0+128),w
 15674  17E7  0020               	movlb	0	; select bank0
 15675  17E8  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 15676  17E9  318B  23DE  3197   	fcall	_LED_setBrightnessRange
 15677                           
 15678                           ;LEDcomm.c: 157: return (readResult != 7);
 15679  17EC  3007               	movlw	7
 15680  17ED  0021               	movlb	1	; select bank1
 15681  17EE  064B               	xorwf	LED_testComm@readResult^(0+128),w
 15682  17EF  044C               	iorwf	(LED_testComm@readResult+1)^(0+128),w
 15683  17F0  1903               	btfsc	3,2
 15684  17F1  2FF4               	goto	u7490
 15685  17F2  3001               	movlw	1
 15686  17F3  2FF5               	goto	u7500
 15687  17F4                     u7490:	
 15688  17F4  3000               	movlw	0
 15689  17F5                     u7500:	
 15690  17F5  0020               	movlb	0	; select bank0
 15691  17F6  00CC               	movwf	??_LED_testComm
 15692  17F7  01CD               	clrf	??_LED_testComm+1
 15693  17F8  084C               	movf	??_LED_testComm,w
 15694  17F9  0021               	movlb	1	; select bank1
 15695  17FA  00C9               	movwf	?_LED_testComm^(0+128)
 15696  17FB  0020               	movlb	0	; select bank0
 15697  17FC  084D               	movf	??_LED_testComm+1,w
 15698  17FD  0021               	movlb	1	; select bank1
 15699  17FE  00CA               	movwf	(?_LED_testComm+1)^(0+128)
 15700  17FF  0008               	return
 15701  1800                     __end_of_LED_testComm:	
 15702                           
 15703                           	psect	text49
 15704  0BDE                     __ptext49:	
 15705 ;; *************** function _LED_setBrightnessRange *****************
 15706 ;; Defined at:
 15707 ;;		line 77 in file "LEDcomm.c"
 15708 ;; Parameters:    Size  Location     Type
 15709 ;;  range           2   36[BANK0 ] int 
 15710 ;;  topOrBottom     2   38[BANK0 ] int 
 15711 ;; Auto vars:     Size  Location     Type
 15712 ;;  LED_configRe    4   40[BANK0 ] long 
 15713 ;; Return value:  Size  Location     Type
 15714 ;;                  1    wreg      void 
 15715 ;; Registers used:
 15716 ;;		wreg, status,2, status,0, pclath, cstack
 15717 ;; Tracked objects:
 15718 ;;		On entry : 0/0
 15719 ;;		On exit  : 0/0
 15720 ;;		Unchanged: 0/0
 15721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15722 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15723 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15724 ;;      Temps:          0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15725 ;;      Totals:         0       8      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15726 ;;Total ram usage:       25 bytes
 15727 ;; Hardware stack levels used:    1
 15728 ;; Hardware stack levels required when called:    8
 15729 ;; This function calls:
 15730 ;;		_send_2length_2bytes_IK
 15731 ;; This function is called by:
 15732 ;;		_LED_testComm
 15733 ;;		_main_initialize
 15734 ;;		_setLEDBrightnessRange
 15735 ;; This function uses a non-reentrant model
 15736 ;;
 15737                           
 15738                           
 15739                           ;psect for function _LED_setBrightnessRange
 15740  0BDE                     _LED_setBrightnessRange:	
 15741                           
 15742                           ;LEDcomm.c: 79: long LED_configReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 15743                           
 15744                           ;incstack = 0
 15745                           ; Regs used in _LED_setBrightnessRange: [wreg+status,2+status,0+pclath+cstack]
 15746  0BDE  0020               	movlb	0	; select bank0
 15747  0BDF  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 15748  0BE0  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 15749  0BE1  1903               	btfsc	3,2
 15750  0BE2  2BF2               	goto	l7512
 15751  0BE3  0022               	movlb	2	; select bank2
 15752  0BE4  084D               	movf	(_LED_configReg_bot+3)^(0+256),w
 15753  0BE5  0020               	movlb	0	; select bank0
 15754  0BE6  00CB               	movwf	LED_setBrightnessRange@LED_configReg+3
 15755  0BE7  0022               	movlb	2	; select bank2
 15756  0BE8  084C               	movf	(_LED_configReg_bot+2)^(0+256),w
 15757  0BE9  0020               	movlb	0	; select bank0
 15758  0BEA  00CA               	movwf	LED_setBrightnessRange@LED_configReg+2
 15759  0BEB  0022               	movlb	2	; select bank2
 15760  0BEC  084B               	movf	(_LED_configReg_bot+1)^(0+256),w
 15761  0BED  0020               	movlb	0	; select bank0
 15762  0BEE  00C9               	movwf	LED_setBrightnessRange@LED_configReg+1
 15763  0BEF  0022               	movlb	2	; select bank2
 15764  0BF0  084A               	movf	_LED_configReg_bot^(0+256),w
 15765  0BF1  2C00               	goto	L30
 15766  0BF2                     l7512:	
 15767  0BF2  0022               	movlb	2	; select bank2
 15768  0BF3  0851               	movf	(_LED_configReg_top+3)^(0+256),w
 15769  0BF4  0020               	movlb	0	; select bank0
 15770  0BF5  00CB               	movwf	LED_setBrightnessRange@LED_configReg+3
 15771  0BF6  0022               	movlb	2	; select bank2
 15772  0BF7  0850               	movf	(_LED_configReg_top+2)^(0+256),w
 15773  0BF8  0020               	movlb	0	; select bank0
 15774  0BF9  00CA               	movwf	LED_setBrightnessRange@LED_configReg+2
 15775  0BFA  0022               	movlb	2	; select bank2
 15776  0BFB  084F               	movf	(_LED_configReg_top+1)^(0+256),w
 15777  0BFC  0020               	movlb	0	; select bank0
 15778  0BFD  00C9               	movwf	LED_setBrightnessRange@LED_configReg+1
 15779  0BFE  0022               	movlb	2	; select bank2
 15780  0BFF  084E               	movf	_LED_configReg_top^(0+256),w
 15781  0C00                     L30:	
 15782  0C00  0020               	movlb	0	; select bank0
 15783  0C01  00C8               	movwf	LED_setBrightnessRange@LED_configReg
 15784                           
 15785                           ;LEDcomm.c: 80: LED_configReg |= ((range>0) | (range>0)<<1 | (range>0) << 2);
 15786  0C02  0845               	movf	LED_setBrightnessRange@range+1,w
 15787  0C03  3A80               	xorlw	128
 15788  0C04  0021               	movlb	1	; select bank1
 15789  0C05  00A0               	movwf	??_LED_setBrightnessRange^(0+128)
 15790  0C06  3080               	movlw	128
 15791  0C07  0220               	subwf	??_LED_setBrightnessRange^(0+128),w
 15792  0C08  1D03               	skipz
 15793  0C09  2C0D               	goto	u7175
 15794  0C0A  3001               	movlw	1
 15795  0C0B  0020               	movlb	0	; select bank0
 15796  0C0C  0244               	subwf	LED_setBrightnessRange@range,w
 15797  0C0D                     u7175:	
 15798  0C0D  1C03               	btfss	3,0
 15799  0C0E  2C11               	goto	u7170
 15800  0C0F  3001               	movlw	1
 15801  0C10  2C12               	goto	u7180
 15802  0C11                     u7170:	
 15803  0C11  3000               	movlw	0
 15804  0C12                     u7180:	
 15805  0C12  0021               	movlb	1	; select bank1
 15806  0C13  00A1               	movwf	(??_LED_setBrightnessRange+1)^(0+128)
 15807  0C14  01A2               	clrf	((??_LED_setBrightnessRange+1)^(0+128)+1)
 15808  0C15  35A1               	lslf	(??_LED_setBrightnessRange+1)^(0+128),f
 15809  0C16  0DA2               	rlf	((??_LED_setBrightnessRange+1)^(0+128)+1),f
 15810  0C17  35A1               	lslf	(??_LED_setBrightnessRange+1)^(0+128),f
 15811  0C18  0DA2               	rlf	((??_LED_setBrightnessRange+1)^(0+128)+1),f
 15812  0C19  0020               	movlb	0	; select bank0
 15813  0C1A  0845               	movf	LED_setBrightnessRange@range+1,w
 15814  0C1B  3A80               	xorlw	128
 15815  0C1C  0021               	movlb	1	; select bank1
 15816  0C1D  00A3               	movwf	(??_LED_setBrightnessRange+3)^(0+128)
 15817  0C1E  3080               	movlw	128
 15818  0C1F  0223               	subwf	(??_LED_setBrightnessRange+3)^(0+128),w
 15819  0C20  1D03               	skipz
 15820  0C21  2C25               	goto	u7195
 15821  0C22  3001               	movlw	1
 15822  0C23  0020               	movlb	0	; select bank0
 15823  0C24  0244               	subwf	LED_setBrightnessRange@range,w
 15824  0C25                     u7195:	
 15825  0C25  1C03               	btfss	3,0
 15826  0C26  2C29               	goto	u7190
 15827  0C27  3001               	movlw	1
 15828  0C28  2C2A               	goto	u7200
 15829  0C29                     u7190:	
 15830  0C29  3000               	movlw	0
 15831  0C2A                     u7200:	
 15832  0C2A  0021               	movlb	1	; select bank1
 15833  0C2B  00A4               	movwf	(??_LED_setBrightnessRange+4)^(0+128)
 15834  0C2C  01A5               	clrf	((??_LED_setBrightnessRange+4)^(0+128)+1)
 15835  0C2D  35A4               	lslf	(??_LED_setBrightnessRange+4)^(0+128),f
 15836  0C2E  0DA5               	rlf	((??_LED_setBrightnessRange+4)^(0+128)+1),f
 15837  0C2F  0020               	movlb	0	; select bank0
 15838  0C30  0845               	movf	LED_setBrightnessRange@range+1,w
 15839  0C31  3A80               	xorlw	128
 15840  0C32  0021               	movlb	1	; select bank1
 15841  0C33  00A6               	movwf	(??_LED_setBrightnessRange+6)^(0+128)
 15842  0C34  3080               	movlw	128
 15843  0C35  0226               	subwf	(??_LED_setBrightnessRange+6)^(0+128),w
 15844  0C36  1D03               	skipz
 15845  0C37  2C3B               	goto	u7215
 15846  0C38  3001               	movlw	1
 15847  0C39  0020               	movlb	0	; select bank0
 15848  0C3A  0244               	subwf	LED_setBrightnessRange@range,w
 15849  0C3B                     u7215:	
 15850  0C3B  1C03               	btfss	3,0
 15851  0C3C  2C3F               	goto	u7210
 15852  0C3D  3001               	movlw	1
 15853  0C3E  2C40               	goto	u7220
 15854  0C3F                     u7210:	
 15855  0C3F  3000               	movlw	0
 15856  0C40                     u7220:	
 15857  0C40  0021               	movlb	1	; select bank1
 15858  0C41  00A7               	movwf	(??_LED_setBrightnessRange+7)^(0+128)
 15859  0C42  01A8               	clrf	((??_LED_setBrightnessRange+7)^(0+128)+1)
 15860  0C43  0824               	movf	(??_LED_setBrightnessRange+4)^(0+128),w
 15861  0C44  0427               	iorwf	(??_LED_setBrightnessRange+7)^(0+128),w
 15862  0C45  00A9               	movwf	(??_LED_setBrightnessRange+9)^(0+128)
 15863  0C46  0825               	movf	(??_LED_setBrightnessRange+5)^(0+128),w
 15864  0C47  0428               	iorwf	(??_LED_setBrightnessRange+8)^(0+128),w
 15865  0C48  00AA               	movwf	(??_LED_setBrightnessRange+10)^(0+128)
 15866  0C49  0821               	movf	(??_LED_setBrightnessRange+1)^(0+128),w
 15867  0C4A  0429               	iorwf	(??_LED_setBrightnessRange+9)^(0+128),w
 15868  0C4B  00AB               	movwf	(??_LED_setBrightnessRange+11)^(0+128)
 15869  0C4C  0822               	movf	(??_LED_setBrightnessRange+2)^(0+128),w
 15870  0C4D  042A               	iorwf	(??_LED_setBrightnessRange+10)^(0+128),w
 15871  0C4E  00AC               	movwf	(??_LED_setBrightnessRange+12)^(0+128)
 15872  0C4F  082B               	movf	(??_LED_setBrightnessRange+11)^(0+128),w
 15873  0C50  00AD               	movwf	(??_LED_setBrightnessRange+13)^(0+128)
 15874  0C51  082C               	movf	(??_LED_setBrightnessRange+12)^(0+128),w
 15875  0C52  00AE               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+1)
 15876  0C53  3000               	movlw	0
 15877  0C54  1BAE               	btfsc	((??_LED_setBrightnessRange+13)^(0+128)+1),7
 15878  0C55  30FF               	movlw	255
 15879  0C56  00AF               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+2)
 15880  0C57  00B0               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+3)
 15881  0C58  082D               	movf	(??_LED_setBrightnessRange+13)^(0+128),w
 15882  0C59  0020               	movlb	0	; select bank0
 15883  0C5A  04C8               	iorwf	LED_setBrightnessRange@LED_configReg,f
 15884  0C5B  0021               	movlb	1	; select bank1
 15885  0C5C  082E               	movf	(??_LED_setBrightnessRange+14)^(0+128),w
 15886  0C5D  0020               	movlb	0	; select bank0
 15887  0C5E  04C9               	iorwf	LED_setBrightnessRange@LED_configReg+1,f
 15888  0C5F  0021               	movlb	1	; select bank1
 15889  0C60  082F               	movf	(??_LED_setBrightnessRange+15)^(0+128),w
 15890  0C61  0020               	movlb	0	; select bank0
 15891  0C62  04CA               	iorwf	LED_setBrightnessRange@LED_configReg+2,f
 15892  0C63  0021               	movlb	1	; select bank1
 15893  0C64  0830               	movf	(??_LED_setBrightnessRange+16)^(0+128),w
 15894  0C65  0020               	movlb	0	; select bank0
 15895  0C66  04CB               	iorwf	LED_setBrightnessRange@LED_configReg+3,f
 15896                           
 15897                           ;LEDcomm.c: 81: send_2length_2bytes_IK((unsigned int)((LED_configReg>>16) & 0xFFFF),(uns
      +                          igned int)LED_configReg, 3, topOrBottom);
 15898  0C67  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15899  0C68  0021               	movlb	1	; select bank1
 15900  0C69  00A0               	movwf	??_LED_setBrightnessRange^(0+128)
 15901  0C6A  0020               	movlb	0	; select bank0
 15902  0C6B  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15903  0C6C  0021               	movlb	1	; select bank1
 15904  0C6D  00A1               	movwf	(??_LED_setBrightnessRange^(0+128)+1)
 15905  0C6E  0020               	movlb	0	; select bank0
 15906  0C6F  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 15907  0C70  0021               	movlb	1	; select bank1
 15908  0C71  00A2               	movwf	(??_LED_setBrightnessRange^(0+128)+2)
 15909  0C72  0020               	movlb	0	; select bank0
 15910  0C73  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 15911  0C74  0021               	movlb	1	; select bank1
 15912  0C75  00A3               	movwf	(??_LED_setBrightnessRange^(0+128)+3)
 15913  0C76  3010               	movlw	16
 15914  0C77  00A4               	movwf	(??_LED_setBrightnessRange+4)^(0+128)
 15915  0C78                     u7235:	
 15916  0C78  37A3               	asrf	(??_LED_setBrightnessRange^(0+128)+3),f
 15917  0C79  0CA2               	rrf	(??_LED_setBrightnessRange^(0+128)+2),f
 15918  0C7A  0CA1               	rrf	(??_LED_setBrightnessRange^(0+128)+1),f
 15919  0C7B  0CA0               	rrf	??_LED_setBrightnessRange^(0+128),f
 15920  0C7C  0BA4               	decfsz	(??_LED_setBrightnessRange+4)^(0+128),f
 15921  0C7D  2C78               	goto	u7235
 15922  0C7E  0821               	movf	(??_LED_setBrightnessRange+1)^(0+128),w
 15923  0C7F  0020               	movlb	0	; select bank0
 15924  0C80  00BD               	movwf	send_2length_2bytes_IK@data1+1
 15925  0C81  0021               	movlb	1	; select bank1
 15926  0C82  0820               	movf	??_LED_setBrightnessRange^(0+128),w
 15927  0C83  0020               	movlb	0	; select bank0
 15928  0C84  00BC               	movwf	send_2length_2bytes_IK@data1
 15929  0C85  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15930  0C86  00BF               	movwf	send_2length_2bytes_IK@data2+1
 15931  0C87  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15932  0C88  00BE               	movwf	send_2length_2bytes_IK@data2
 15933  0C89  3003               	movlw	3
 15934  0C8A  0021               	movlb	1	; select bank1
 15935  0C8B  00A5               	movwf	(??_LED_setBrightnessRange+5)^(0+128)
 15936  0C8C  0825               	movf	(??_LED_setBrightnessRange+5)^(0+128),w
 15937  0C8D  0020               	movlb	0	; select bank0
 15938  0C8E  00C0               	movwf	send_2length_2bytes_IK@latch_start
 15939  0C8F  0847               	movf	LED_setBrightnessRange@topOrBottom+1,w
 15940  0C90  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 15941  0C91  0846               	movf	LED_setBrightnessRange@topOrBottom,w
 15942  0C92  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 15943  0C93  31A4  2445  318B   	fcall	_send_2length_2bytes_IK
 15944                           
 15945                           ;LEDcomm.c: 84: if (topOrBottom == 1)
 15946  0C96  0020               	movlb	0	; select bank0
 15947  0C97  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 15948  0C98  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 15949  0C99  1D03               	btfss	3,2
 15950  0C9A  2CAB               	goto	l7522
 15951                           
 15952                           ;LEDcomm.c: 85: LED_configReg_top = LED_configReg;
 15953  0C9B  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 15954  0C9C  0022               	movlb	2	; select bank2
 15955  0C9D  00D1               	movwf	(_LED_configReg_top+3)^(0+256)
 15956  0C9E  0020               	movlb	0	; select bank0
 15957  0C9F  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 15958  0CA0  0022               	movlb	2	; select bank2
 15959  0CA1  00D0               	movwf	(_LED_configReg_top+2)^(0+256)
 15960  0CA2  0020               	movlb	0	; select bank0
 15961  0CA3  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15962  0CA4  0022               	movlb	2	; select bank2
 15963  0CA5  00CF               	movwf	(_LED_configReg_top+1)^(0+256)
 15964  0CA6  0020               	movlb	0	; select bank0
 15965  0CA7  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15966  0CA8  0022               	movlb	2	; select bank2
 15967  0CA9  00CE               	movwf	_LED_configReg_top^(0+256)
 15968  0CAA  0008               	return
 15969  0CAB                     l7522:	
 15970                           
 15971                           ;LEDcomm.c: 86: else
 15972                           ;LEDcomm.c: 87: LED_configReg_bot = LED_configReg;
 15973  0CAB  0020               	movlb	0	; select bank0
 15974  0CAC  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 15975  0CAD  0022               	movlb	2	; select bank2
 15976  0CAE  00CD               	movwf	(_LED_configReg_bot+3)^(0+256)
 15977  0CAF  0020               	movlb	0	; select bank0
 15978  0CB0  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 15979  0CB1  0022               	movlb	2	; select bank2
 15980  0CB2  00CC               	movwf	(_LED_configReg_bot+2)^(0+256)
 15981  0CB3  0020               	movlb	0	; select bank0
 15982  0CB4  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15983  0CB5  0022               	movlb	2	; select bank2
 15984  0CB6  00CB               	movwf	(_LED_configReg_bot+1)^(0+256)
 15985  0CB7  0020               	movlb	0	; select bank0
 15986  0CB8  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15987  0CB9  0022               	movlb	2	; select bank2
 15988  0CBA  00CA               	movwf	_LED_configReg_bot^(0+256)
 15989  0CBB  0008               	return
 15990  0CBC                     __end_of_LED_setBrightnessRange:	
 15991                           
 15992                           	psect	text50
 15993  26AE                     __ptext50:	
 15994 ;; *************** function _LED_readConfig *****************
 15995 ;; Defined at:
 15996 ;;		line 121 in file "LEDcomm.c"
 15997 ;; Parameters:    Size  Location     Type
 15998 ;;  topOrBottom     2   37[BANK1 ] int 
 15999 ;; Auto vars:     Size  Location     Type
 16000 ;;		None
 16001 ;; Return value:  Size  Location     Type
 16002 ;;                  4   37[BANK1 ] long 
 16003 ;; Registers used:
 16004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16005 ;; Tracked objects:
 16006 ;;		On entry : 0/0
 16007 ;;		On exit  : 0/0
 16008 ;;		Unchanged: 0/0
 16009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16010 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16012 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16013 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16014 ;;Total ram usage:        5 bytes
 16015 ;; Hardware stack levels used:    1
 16016 ;; Hardware stack levels required when called:   10
 16017 ;; This function calls:
 16018 ;;		_LED_getData
 16019 ;;		_send_2length_2bytes_IK
 16020 ;; This function is called by:
 16021 ;;		_LED_testComm
 16022 ;; This function uses a non-reentrant model
 16023 ;;
 16024                           
 16025                           
 16026                           ;psect for function _LED_readConfig
 16027  26AE                     _LED_readConfig:	
 16028                           
 16029                           ;incstack = 0
 16030                           ; Regs used in _LED_readConfig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16031                           ;LEDcomm.c: 122: do { LATCbits.LATC1 = 1; } while(0);
 16032  26AE  0022               	movlb	2	; select bank2
 16033  26AF  148E               	bsf	14,1	;volatile
 16034                           
 16035                           ;LEDcomm.c: 123: send_2length_2bytes_IK(0,0,5,topOrBottom);
 16036  26B0  3000               	movlw	0
 16037  26B1  0020               	movlb	0	; select bank0
 16038  26B2  00BC               	movwf	send_2length_2bytes_IK@data1
 16039  26B3  00BD               	movwf	send_2length_2bytes_IK@data1+1
 16040  26B4  3000               	movlw	0
 16041  26B5  00BE               	movwf	send_2length_2bytes_IK@data2
 16042  26B6  00BF               	movwf	send_2length_2bytes_IK@data2+1
 16043  26B7  3005               	movlw	5
 16044  26B8  00C9               	movwf	??_LED_readConfig
 16045  26B9  0849               	movf	??_LED_readConfig,w
 16046  26BA  00C0               	movwf	send_2length_2bytes_IK@latch_start
 16047  26BB  0021               	movlb	1	; select bank1
 16048  26BC  0846               	movf	(LED_readConfig@topOrBottom+1)^(0+128),w
 16049  26BD  0020               	movlb	0	; select bank0
 16050  26BE  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 16051  26BF  0021               	movlb	1	; select bank1
 16052  26C0  0845               	movf	LED_readConfig@topOrBottom^(0+128),w
 16053  26C1  0020               	movlb	0	; select bank0
 16054  26C2  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 16055  26C3  31A4  2445  31A6   	fcall	_send_2length_2bytes_IK
 16056                           
 16057                           ;LEDcomm.c: 124: return LED_getData();
 16058  26C6  319E  2628         	fcall	_LED_getData
 16059  26C8  0021               	movlb	1	; select bank1
 16060  26C9  0838               	movf	(?_LED_getData+3)^(0+128),w
 16061  26CA  00C8               	movwf	(?_LED_readConfig+3)^(0+128)
 16062  26CB  0837               	movf	(?_LED_getData+2)^(0+128),w
 16063  26CC  00C7               	movwf	(?_LED_readConfig+2)^(0+128)
 16064  26CD  0836               	movf	(?_LED_getData+1)^(0+128),w
 16065  26CE  00C6               	movwf	(?_LED_readConfig+1)^(0+128)
 16066  26CF  0835               	movf	?_LED_getData^(0+128),w
 16067  26D0  00C5               	movwf	?_LED_readConfig^(0+128)
 16068  26D1  0008               	return
 16069  26D2                     __end_of_LED_readConfig:	
 16070                           
 16071                           	psect	text51
 16072  1E28                     __ptext51:	
 16073 ;; *************** function _LED_getData *****************
 16074 ;; Defined at:
 16075 ;;		line 127 in file "LEDcomm.c"
 16076 ;; Parameters:    Size  Location     Type
 16077 ;;		None
 16078 ;; Auto vars:     Size  Location     Type
 16079 ;;  j               2   35[BANK1 ] int 
 16080 ;;  readData        4   31[BANK1 ] long 
 16081 ;; Return value:  Size  Location     Type
 16082 ;;                  4   21[BANK1 ] long 
 16083 ;; Registers used:
 16084 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16085 ;; Tracked objects:
 16086 ;;		On entry : 0/0
 16087 ;;		On exit  : 0/0
 16088 ;;		Unchanged: 0/0
 16089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16090 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16091 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16092 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16093 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16094 ;;Total ram usage:       16 bytes
 16095 ;; Hardware stack levels used:    1
 16096 ;; Hardware stack levels required when called:    9
 16097 ;; This function calls:
 16098 ;;		_printf
 16099 ;; This function is called by:
 16100 ;;		_LED_readConfig
 16101 ;; This function uses a non-reentrant model
 16102 ;;
 16103                           
 16104                           
 16105                           ;psect for function _LED_getData
 16106  1E28                     _LED_getData:	
 16107                           
 16108                           ;LEDcomm.c: 129: long readData = 0;
 16109                           
 16110                           ;incstack = 0
 16111                           ; Regs used in _LED_getData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16112  1E28  3000               	movlw	0
 16113  1E29  0021               	movlb	1	; select bank1
 16114  1E2A  00C2               	movwf	(LED_getData@readData+3)^(0+128)
 16115  1E2B  3000               	movlw	0
 16116  1E2C  00C1               	movwf	(LED_getData@readData+2)^(0+128)
 16117  1E2D  3000               	movlw	0
 16118  1E2E  00C0               	movwf	(LED_getData@readData+1)^(0+128)
 16119  1E2F  3000               	movlw	0
 16120  1E30  00BF               	movwf	LED_getData@readData^(0+128)
 16121                           
 16122                           ;LEDcomm.c: 130: do { LATBbits.LATB4 = 0; } while(0);
 16123  1E31  0022               	movlb	2	; select bank2
 16124  1E32  120D               	bcf	13,4	;volatile
 16125                           
 16126                           ;LEDcomm.c: 132: for(int j = 23; j>=0; j--){
 16127  1E33  3017               	movlw	23
 16128  1E34  0021               	movlb	1	; select bank1
 16129  1E35  00C3               	movwf	LED_getData@j^(0+128)
 16130  1E36  3000               	movlw	0
 16131  1E37  00C4               	movwf	(LED_getData@j^(0+128)+1)
 16132  1E38  1BC4               	btfsc	(LED_getData@j+1)^(0+128),7
 16133  1E39  2E68               	goto	l303
 16134  1E3A                     l299:	
 16135                           ;LEDcomm.c: 133: do { LATAbits.LATA2 = 1; } while(0);
 16136                           
 16137  1E3A  0022               	movlb	2	; select bank2
 16138  1E3B  150C               	bsf	12,2	;volatile
 16139                           
 16140                           ;LEDcomm.c: 134: readData |= (PORTCbits.RC6 << j);
 16141  1E3C  0020               	movlb	0	; select bank0
 16142  1E3D  0E0E               	swapf	14,w	;volatile
 16143  1E3E  0C89               	rrf	9,f
 16144  1E3F  0C89               	rrf	9,f
 16145  1E40  3901               	andlw	1
 16146  1E41  0021               	movlb	1	; select bank1
 16147  1E42  00B9               	movwf	??_LED_getData^(0+128)
 16148  1E43  01BA               	clrf	(??_LED_getData^(0+128)+1)
 16149  1E44  0A43               	incf	LED_getData@j^(0+128),w
 16150  1E45  2E48               	goto	u7114
 16151  1E46                     u7115:	
 16152  1E46  35B9               	lslf	??_LED_getData^(0+128),f
 16153  1E47  0DBA               	rlf	(??_LED_getData^(0+128)+1),f
 16154  1E48                     u7114:	
 16155  1E48  0B89               	decfsz	9,f
 16156  1E49  2E46               	goto	u7115
 16157  1E4A  0839               	movf	??_LED_getData^(0+128),w
 16158  1E4B  00BB               	movwf	(??_LED_getData+2)^(0+128)
 16159  1E4C  083A               	movf	(??_LED_getData+1)^(0+128),w
 16160  1E4D  00BC               	movwf	((??_LED_getData+2)^(0+128)+1)
 16161  1E4E  3000               	movlw	0
 16162  1E4F  1BBC               	btfsc	((??_LED_getData+2)^(0+128)+1),7
 16163  1E50  30FF               	movlw	255
 16164  1E51  00BD               	movwf	((??_LED_getData+2)^(0+128)+2)
 16165  1E52  00BE               	movwf	((??_LED_getData+2)^(0+128)+3)
 16166  1E53  083B               	movf	(??_LED_getData+2)^(0+128),w
 16167  1E54  04BF               	iorwf	LED_getData@readData^(0+128),f
 16168  1E55  083C               	movf	(??_LED_getData+3)^(0+128),w
 16169  1E56  04C0               	iorwf	(LED_getData@readData+1)^(0+128),f
 16170  1E57  083D               	movf	(??_LED_getData+4)^(0+128),w
 16171  1E58  04C1               	iorwf	(LED_getData@readData+2)^(0+128),f
 16172  1E59  083E               	movf	(??_LED_getData+5)^(0+128),w
 16173  1E5A  04C2               	iorwf	(LED_getData@readData+3)^(0+128),f
 16174                           
 16175                           ;LEDcomm.c: 136: do { LATAbits.LATA2 = 0; } while(0);
 16176  1E5B  0022               	movlb	2	; select bank2
 16177  1E5C  110C               	bcf	12,2	;volatile
 16178                           
 16179                           ;LEDcomm.c: 137: _delay((unsigned long)((100)*(1000000/4000000.0)));
 16180  1E5D  3008               	movlw	8
 16181  1E5E                     u8977:	
 16182  1E5E  0B89               	decfsz	9,f
 16183  1E5F  2E5E               	goto	u8977
 16184  1E60  0000               	nop
 16185  1E61  30FF               	movlw	255
 16186  1E62  0021               	movlb	1	; select bank1
 16187  1E63  07C3               	addwf	LED_getData@j^(0+128),f
 16188  1E64  30FF               	movlw	255
 16189  1E65  3DC4               	addwfc	(LED_getData@j+1)^(0+128),f
 16190  1E66  1FC4               	btfss	(LED_getData@j+1)^(0+128),7
 16191  1E67  2E3A               	goto	l299
 16192  1E68                     l303:	
 16193                           ;LEDcomm.c: 139: }
 16194                           ;LEDcomm.c: 141: do { LATAbits.LATA2 = 0; } while(0);
 16195                           
 16196  1E68  0022               	movlb	2	; select bank2
 16197  1E69  110C               	bcf	12,2	;volatile
 16198                           
 16199                           ;LEDcomm.c: 142: printf("read data: %lu\n", readData);
 16200  1E6A  3030               	movlw	low (STR_3| (0+32768))
 16201  1E6B  0021               	movlb	1	; select bank1
 16202  1E6C  00A0               	movwf	printf@f^(0+128)
 16203  1E6D  30A9               	movlw	high (STR_3| (0+32768))
 16204  1E6E  00A1               	movwf	(printf@f^(0+128)+1)
 16205  1E6F  0842               	movf	(LED_getData@readData+3)^(0+128),w
 16206  1E70  00A5               	movwf	((?_printf+3)^(0+128)+2)
 16207  1E71  0841               	movf	(LED_getData@readData+2)^(0+128),w
 16208  1E72  00A4               	movwf	((?_printf+2)^(0+128)+2)
 16209  1E73  0840               	movf	(LED_getData@readData+1)^(0+128),w
 16210  1E74  00A3               	movwf	((?_printf+1)^(0+128)+2)
 16211  1E75  083F               	movf	LED_getData@readData^(0+128),w
 16212  1E76  00A2               	movwf	(?_printf^(0+128)+2)
 16213  1E77  318E  26CE         	fcall	_printf
 16214                           
 16215                           ;LEDcomm.c: 143: return readData;
 16216  1E79  0021               	movlb	1	; select bank1
 16217  1E7A  0842               	movf	(LED_getData@readData+3)^(0+128),w
 16218  1E7B  00B8               	movwf	(?_LED_getData+3)^(0+128)
 16219  1E7C  0841               	movf	(LED_getData@readData+2)^(0+128),w
 16220  1E7D  00B7               	movwf	(?_LED_getData+2)^(0+128)
 16221  1E7E  0840               	movf	(LED_getData@readData+1)^(0+128),w
 16222  1E7F  00B6               	movwf	(?_LED_getData+1)^(0+128)
 16223  1E80  083F               	movf	LED_getData@readData^(0+128),w
 16224  1E81  00B5               	movwf	?_LED_getData^(0+128)
 16225  1E82  0008               	return
 16226  1E83                     __end_of_LED_getData:	
 16227                           
 16228                           	psect	text52
 16229  0D9D                     __ptext52:	
 16230 ;; *************** function _doRelMove *****************
 16231 ;; Defined at:
 16232 ;;		line 336 in file "main.c"
 16233 ;; Parameters:    Size  Location     Type
 16234 ;;		None
 16235 ;; Auto vars:     Size  Location     Type
 16236 ;;  j               2   54[BANK1 ] int 
 16237 ;; Return value:  Size  Location     Type
 16238 ;;                  1    wreg      void 
 16239 ;; Registers used:
 16240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16241 ;; Tracked objects:
 16242 ;;		On entry : 0/0
 16243 ;;		On exit  : 0/0
 16244 ;;		Unchanged: 0/0
 16245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16247 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16248 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16249 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16250 ;;Total ram usage:       18 bytes
 16251 ;; Hardware stack levels used:    1
 16252 ;; Hardware stack levels required when called:   16
 16253 ;; This function calls:
 16254 ;;		_doMove
 16255 ;;		_printf
 16256 ;; This function is called by:
 16257 ;;		_main
 16258 ;; This function uses a non-reentrant model
 16259 ;;
 16260                           
 16261                           
 16262                           ;psect for function _doRelMove
 16263  0D9D                     _doRelMove:	
 16264                           
 16265                           ;main.c: 337: printf("doRelMove\n");
 16266                           
 16267                           ;incstack = 0
 16268 ;; hardware stack exceeded
 16269                           ; Regs used in _doRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16270  0D9D  30AB               	movlw	low (STR_11| (0+32768))
 16271  0D9E  0021               	movlb	1	; select bank1
 16272  0D9F  00A0               	movwf	printf@f^(0+128)
 16273  0DA0  30A9               	movlw	high (STR_11| (0+32768))
 16274  0DA1  00A1               	movwf	(printf@f^(0+128)+1)
 16275  0DA2  318E  26CE  318D   	fcall	_printf
 16276                           
 16277                           ;main.c: 338: if(remainingSteps == 0){
 16278  0DA5  0022               	movlb	2	; select bank2
 16279  0DA6  0841               	movf	(_remainingSteps+3)^(0+256),w
 16280  0DA7  0440               	iorwf	(_remainingSteps+2)^(0+256),w
 16281  0DA8  043F               	iorwf	(_remainingSteps+1)^(0+256),w
 16282  0DA9  043E               	iorwf	_remainingSteps^(0+256),w
 16283  0DAA  1D03               	skipz
 16284  0DAB  2DC7               	goto	l8398
 16285                           
 16286                           ;main.c: 339: printf("rel: all there\n");
 16287  0DAC  3010               	movlw	low (STR_12| (0+32768))
 16288  0DAD  0021               	movlb	1	; select bank1
 16289  0DAE  00A0               	movwf	printf@f^(0+128)
 16290  0DAF  30A9               	movlw	high (STR_12| (0+32768))
 16291  0DB0  00A1               	movwf	(printf@f^(0+128)+1)
 16292  0DB1  318E  26CE         	fcall	_printf
 16293                           
 16294                           ;main.c: 340: motionType = NONE;
 16295  0DB3  0020               	movlb	0	; select bank0
 16296  0DB4  01D5               	clrf	_motionType
 16297                           
 16298                           ;main.c: 341: moveVector_ups = 0;
 16299  0DB5  3000               	movlw	0
 16300  0DB6  0021               	movlb	1	; select bank1
 16301  0DB7  00E8               	movwf	(_moveVector_ups+3)^(0+128)
 16302  0DB8  3000               	movlw	0
 16303  0DB9  00E7               	movwf	(_moveVector_ups+2)^(0+128)
 16304  0DBA  3000               	movlw	0
 16305  0DBB  00E6               	movwf	(_moveVector_ups+1)^(0+128)
 16306  0DBC  3000               	movlw	0
 16307  0DBD  00E5               	movwf	_moveVector_ups^(0+128)
 16308                           
 16309                           ;main.c: 342: moveVector_downs = 0;
 16310  0DBE  3000               	movlw	0
 16311  0DBF  00E4               	movwf	(_moveVector_downs+3)^(0+128)
 16312  0DC0  3000               	movlw	0
 16313  0DC1  00E3               	movwf	(_moveVector_downs+2)^(0+128)
 16314  0DC2  3000               	movlw	0
 16315  0DC3  00E2               	movwf	(_moveVector_downs+1)^(0+128)
 16316  0DC4  3000               	movlw	0
 16317  0DC5  00E1               	movwf	_moveVector_downs^(0+128)
 16318                           
 16319                           ;main.c: 344: }
 16320                           
 16321                           ;main.c: 343: return;
 16322  0DC6  0008               	return
 16323  0DC7                     l8398:	
 16324                           
 16325                           ;main.c: 345: else{
 16326                           ;main.c: 346: int j;
 16327                           ;main.c: 347: if (remainingSteps > 0){
 16328  0DC7  0022               	movlb	2	; select bank2
 16329  0DC8  1BC1               	btfsc	(_remainingSteps+3)^(0+256),7
 16330  0DC9  2E52               	goto	l8418
 16331  0DCA  0841               	movf	(_remainingSteps+3)^(0+256),w
 16332  0DCB  1D03               	btfss	3,2
 16333  0DCC  2DD7               	goto	l8400
 16334  0DCD  0840               	movf	(_remainingSteps+2)^(0+256),w
 16335  0DCE  1D03               	btfss	3,2
 16336  0DCF  2DD7               	goto	l8400
 16337  0DD0  083F               	movf	(_remainingSteps+1)^(0+256),w
 16338  0DD1  1D03               	btfss	3,2
 16339  0DD2  2DD7               	goto	l8400
 16340  0DD3  3001               	movlw	1
 16341  0DD4  023E               	subwf	_remainingSteps^(0+256),w
 16342  0DD5  1C03               	btfss	3,0
 16343  0DD6  2E52               	goto	l8418
 16344  0DD7                     l8400:	
 16345                           
 16346                           ;main.c: 348: moveVector_ups = 0;
 16347  0DD7  3000               	movlw	0
 16348  0DD8  0021               	movlb	1	; select bank1
 16349  0DD9  00E8               	movwf	(_moveVector_ups+3)^(0+128)
 16350  0DDA  3000               	movlw	0
 16351  0DDB  00E7               	movwf	(_moveVector_ups+2)^(0+128)
 16352  0DDC  3000               	movlw	0
 16353  0DDD  00E6               	movwf	(_moveVector_ups+1)^(0+128)
 16354  0DDE  3000               	movlw	0
 16355  0DDF  00E5               	movwf	_moveVector_ups^(0+128)
 16356                           
 16357                           ;main.c: 349: moveVector_downs = activeMask;
 16358  0DE0  0860               	movf	(_activeMask+3)^(0+128),w
 16359  0DE1  00E4               	movwf	(_moveVector_downs+3)^(0+128)
 16360  0DE2  085F               	movf	(_activeMask+2)^(0+128),w
 16361  0DE3  00E3               	movwf	(_moveVector_downs+2)^(0+128)
 16362  0DE4  085E               	movf	(_activeMask+1)^(0+128),w
 16363  0DE5  00E2               	movwf	(_moveVector_downs+1)^(0+128)
 16364  0DE6  085D               	movf	_activeMask^(0+128),w
 16365  0DE7  00E1               	movwf	_moveVector_downs^(0+128)
 16366                           
 16367                           ;main.c: 351: doMove();
 16368  0DE8  3189  2119  318D   	fcall	_doMove
 16369                           
 16370                           ;main.c: 352: remainingSteps--;
 16371  0DEB  30FF               	movlw	255
 16372  0DEC  0022               	movlb	2	; select bank2
 16373  0DED  07BE               	addwf	_remainingSteps^(0+256),f
 16374  0DEE  30FF               	movlw	255
 16375  0DEF  3DBF               	addwfc	(_remainingSteps+1)^(0+256),f
 16376  0DF0  30FF               	movlw	255
 16377  0DF1  3DC0               	addwfc	(_remainingSteps+2)^(0+256),f
 16378  0DF2  30FF               	movlw	255
 16379  0DF3  3DC1               	addwfc	(_remainingSteps+3)^(0+256),f
 16380                           
 16381                           ;main.c: 355: for(j = 0; j<24; j++)
 16382  0DF4  0021               	movlb	1	; select bank1
 16383  0DF5  01D6               	clrf	doRelMove@j^(0+128)
 16384  0DF6  01D7               	clrf	(doRelMove@j+1)^(0+128)
 16385  0DF7                     L31:	
 16386  0DF7  0857               	movf	(doRelMove@j+1)^(0+128),w
 16387  0DF8  3A80               	xorlw	128
 16388  0DF9  00C6               	movwf	??_doRelMove^(0+128)
 16389  0DFA  3080               	movlw	128
 16390  0DFB  0246               	subwf	??_doRelMove^(0+128),w
 16391  0DFC  1D03               	skipz
 16392  0DFD  2E00               	goto	u8285
 16393  0DFE  3018               	movlw	24
 16394  0DFF  0256               	subwf	doRelMove@j^(0+128),w
 16395  0E00                     u8285:	
 16396  0E00  1803               	btfsc	3,0
 16397  0E01  0008               	return
 16398                           
 16399                           ;main.c: 356: currentPositions_steps[j] += (activeMask & (1UL<<j) > 0);
 16400  0E02  0021               	movlb	1	; select bank1
 16401  0E03  085D               	movf	_activeMask^(0+128),w
 16402  0E04  00C6               	movwf	??_doRelMove^(0+128)
 16403  0E05  085E               	movf	(_activeMask+1)^(0+128),w
 16404  0E06  00C7               	movwf	(??_doRelMove^(0+128)+1)
 16405  0E07  085F               	movf	(_activeMask+2)^(0+128),w
 16406  0E08  00C8               	movwf	(??_doRelMove^(0+128)+2)
 16407  0E09  0860               	movf	(_activeMask+3)^(0+128),w
 16408  0E0A  00C9               	movwf	(??_doRelMove^(0+128)+3)
 16409  0E0B  3001               	movlw	1
 16410  0E0C  00CA               	movwf	(??_doRelMove+4)^(0+128)
 16411  0E0D  3000               	movlw	0
 16412  0E0E  00CB               	movwf	((??_doRelMove+4)^(0+128)+1)
 16413  0E0F  3000               	movlw	0
 16414  0E10  00CC               	movwf	((??_doRelMove+4)^(0+128)+2)
 16415  0E11  3000               	movlw	0
 16416  0E12  00CD               	movwf	((??_doRelMove+4)^(0+128)+3)
 16417  0E13  0A56               	incf	doRelMove@j^(0+128),w
 16418  0E14  2E19               	goto	u8290
 16419  0E15                     u8295:	
 16420  0E15  35CA               	lslf	(??_doRelMove+4)^(0+128),f
 16421  0E16  0DCB               	rlf	((??_doRelMove+4)^(0+128)+1),f
 16422  0E17  0DCC               	rlf	((??_doRelMove+4)^(0+128)+2),f
 16423  0E18  0DCD               	rlf	((??_doRelMove+4)^(0+128)+3),f
 16424  0E19                     u8290:	
 16425  0E19  0B89               	decfsz	9,f
 16426  0E1A  2E15               	goto	u8295
 16427  0E1B  084D               	movf	(??_doRelMove+7)^(0+128),w
 16428  0E1C  044C               	iorwf	(??_doRelMove+6)^(0+128),w
 16429  0E1D  044B               	iorwf	(??_doRelMove+5)^(0+128),w
 16430  0E1E  044A               	iorwf	(??_doRelMove+4)^(0+128),w
 16431  0E1F  1903               	btfsc	3,2
 16432  0E20  2E23               	goto	u8300
 16433  0E21  3001               	movlw	1
 16434  0E22  2E24               	goto	u8310
 16435  0E23                     u8300:	
 16436  0E23  3000               	movlw	0
 16437  0E24                     u8310:	
 16438  0E24  00CE               	movwf	(??_doRelMove+8)^(0+128)
 16439  0E25  01CF               	clrf	((??_doRelMove+8)^(0+128)+1)
 16440  0E26  01D0               	clrf	((??_doRelMove+8)^(0+128)+2)
 16441  0E27  01D1               	clrf	((??_doRelMove+8)^(0+128)+3)
 16442  0E28  084E               	movf	(??_doRelMove+8)^(0+128),w
 16443  0E29  05C6               	andwf	??_doRelMove^(0+128),f
 16444  0E2A  084F               	movf	(??_doRelMove+9)^(0+128),w
 16445  0E2B  05C7               	andwf	(??_doRelMove^(0+128)+1),f
 16446  0E2C  0850               	movf	(??_doRelMove+10)^(0+128),w
 16447  0E2D  05C8               	andwf	(??_doRelMove^(0+128)+2),f
 16448  0E2E  0851               	movf	(??_doRelMove+11)^(0+128),w
 16449  0E2F  05C9               	andwf	(??_doRelMove^(0+128)+3),f
 16450  0E30  0857               	movf	(doRelMove@j+1)^(0+128),w
 16451  0E31  00D3               	movwf	((??_doRelMove+12)^(0+128)+1)
 16452  0E32  0856               	movf	doRelMove@j^(0+128),w
 16453  0E33  00D2               	movwf	(??_doRelMove+12)^(0+128)
 16454  0E34  35D2               	lslf	(??_doRelMove+12)^(0+128),f
 16455  0E35  0DD3               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16456  0E36  35D2               	lslf	(??_doRelMove+12)^(0+128),f
 16457  0E37  0DD3               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16458  0E38  3090               	movlw	144
 16459  0E39  00D4               	movwf	(??_doRelMove+14)^(0+128)
 16460  0E3A  3027               	movlw	39
 16461  0E3B  00D5               	movwf	((??_doRelMove+14)^(0+128)+1)
 16462  0E3C  0852               	movf	(??_doRelMove+12)^(0+128),w
 16463  0E3D  0754               	addwf	(??_doRelMove+14)^(0+128),w
 16464  0E3E  0086               	movwf	6
 16465  0E3F  0853               	movf	(??_doRelMove+13)^(0+128),w
 16466  0E40  3D55               	addwfc	(??_doRelMove+15)^(0+128),w
 16467  0E41  0087               	movwf	7
 16468  0E42  0846               	movf	??_doRelMove^(0+128),w
 16469  0E43  0781               	addwf	1,f
 16470  0E44  3141               	addfsr 1,1
 16471  0E45  0847               	movf	(??_doRelMove+1)^(0+128),w
 16472  0E46  3D81               	addwfc	1,f
 16473  0E47  3141               	addfsr 1,1
 16474  0E48  0848               	movf	(??_doRelMove+2)^(0+128),w
 16475  0E49  3D81               	addwfc	1,f
 16476  0E4A  3141               	addfsr 1,1
 16477  0E4B  0849               	movf	(??_doRelMove+3)^(0+128),w
 16478  0E4C  3D81               	addwfc	1,f
 16479  0E4D  3001               	movlw	1
 16480  0E4E  07D6               	addwf	doRelMove@j^(0+128),f
 16481  0E4F  3000               	movlw	0
 16482  0E50  3DD7               	addwfc	(doRelMove@j+1)^(0+128),f
 16483  0E51  2DF7               	goto	L31
 16484  0E52                     l8418:	
 16485                           ;main.c: 358: }
 16486                           
 16487                           
 16488                           ;main.c: 359: else{
 16489                           ;main.c: 360: moveVector_ups = activeMask;
 16490  0E52  0021               	movlb	1	; select bank1
 16491  0E53  0860               	movf	(_activeMask+3)^(0+128),w
 16492  0E54  00E8               	movwf	(_moveVector_ups+3)^(0+128)
 16493  0E55  085F               	movf	(_activeMask+2)^(0+128),w
 16494  0E56  00E7               	movwf	(_moveVector_ups+2)^(0+128)
 16495  0E57  085E               	movf	(_activeMask+1)^(0+128),w
 16496  0E58  00E6               	movwf	(_moveVector_ups+1)^(0+128)
 16497  0E59  085D               	movf	_activeMask^(0+128),w
 16498  0E5A  00E5               	movwf	_moveVector_ups^(0+128)
 16499                           
 16500                           ;main.c: 361: moveVector_downs = 0;
 16501  0E5B  3000               	movlw	0
 16502  0E5C  00E4               	movwf	(_moveVector_downs+3)^(0+128)
 16503  0E5D  3000               	movlw	0
 16504  0E5E  00E3               	movwf	(_moveVector_downs+2)^(0+128)
 16505  0E5F  3000               	movlw	0
 16506  0E60  00E2               	movwf	(_moveVector_downs+1)^(0+128)
 16507  0E61  3000               	movlw	0
 16508  0E62  00E1               	movwf	_moveVector_downs^(0+128)
 16509                           
 16510                           ;main.c: 363: doMove();
 16511  0E63  3189  2119  318D   	fcall	_doMove
 16512                           
 16513                           ;main.c: 364: remainingSteps++;
 16514  0E66  3001               	movlw	1
 16515  0E67  0022               	movlb	2	; select bank2
 16516  0E68  07BE               	addwf	_remainingSteps^(0+256),f
 16517  0E69  3000               	movlw	0
 16518  0E6A  3DBF               	addwfc	(_remainingSteps+1)^(0+256),f
 16519  0E6B  3000               	movlw	0
 16520  0E6C  3DC0               	addwfc	(_remainingSteps+2)^(0+256),f
 16521  0E6D  3000               	movlw	0
 16522  0E6E  3DC1               	addwfc	(_remainingSteps+3)^(0+256),f
 16523                           
 16524                           ;main.c: 365: for(j = 0; j<24; j++)
 16525  0E6F  0021               	movlb	1	; select bank1
 16526  0E70  01D6               	clrf	doRelMove@j^(0+128)
 16527  0E71  01D7               	clrf	(doRelMove@j+1)^(0+128)
 16528  0E72                     L32:	
 16529  0E72  0857               	movf	(doRelMove@j+1)^(0+128),w
 16530  0E73  3A80               	xorlw	128
 16531  0E74  00C6               	movwf	??_doRelMove^(0+128)
 16532  0E75  3080               	movlw	128
 16533  0E76  0246               	subwf	??_doRelMove^(0+128),w
 16534  0E77  1D03               	skipz
 16535  0E78  2E7B               	goto	u8335
 16536  0E79  3018               	movlw	24
 16537  0E7A  0256               	subwf	doRelMove@j^(0+128),w
 16538  0E7B                     u8335:	
 16539  0E7B  1803               	btfsc	3,0
 16540  0E7C  0008               	return
 16541                           
 16542                           ;main.c: 366: currentPositions_steps[j] -= (activeMask & (1UL<<j) > 0);
 16543  0E7D  0021               	movlb	1	; select bank1
 16544  0E7E  085D               	movf	_activeMask^(0+128),w
 16545  0E7F  00C6               	movwf	??_doRelMove^(0+128)
 16546  0E80  085E               	movf	(_activeMask+1)^(0+128),w
 16547  0E81  00C7               	movwf	(??_doRelMove^(0+128)+1)
 16548  0E82  085F               	movf	(_activeMask+2)^(0+128),w
 16549  0E83  00C8               	movwf	(??_doRelMove^(0+128)+2)
 16550  0E84  0860               	movf	(_activeMask+3)^(0+128),w
 16551  0E85  00C9               	movwf	(??_doRelMove^(0+128)+3)
 16552  0E86  3001               	movlw	1
 16553  0E87  00CA               	movwf	(??_doRelMove+4)^(0+128)
 16554  0E88  3000               	movlw	0
 16555  0E89  00CB               	movwf	((??_doRelMove+4)^(0+128)+1)
 16556  0E8A  3000               	movlw	0
 16557  0E8B  00CC               	movwf	((??_doRelMove+4)^(0+128)+2)
 16558  0E8C  3000               	movlw	0
 16559  0E8D  00CD               	movwf	((??_doRelMove+4)^(0+128)+3)
 16560  0E8E  0A56               	incf	doRelMove@j^(0+128),w
 16561  0E8F  2E94               	goto	u8340
 16562  0E90                     u8345:	
 16563  0E90  35CA               	lslf	(??_doRelMove+4)^(0+128),f
 16564  0E91  0DCB               	rlf	((??_doRelMove+4)^(0+128)+1),f
 16565  0E92  0DCC               	rlf	((??_doRelMove+4)^(0+128)+2),f
 16566  0E93  0DCD               	rlf	((??_doRelMove+4)^(0+128)+3),f
 16567  0E94                     u8340:	
 16568  0E94  0B89               	decfsz	9,f
 16569  0E95  2E90               	goto	u8345
 16570  0E96  084D               	movf	(??_doRelMove+7)^(0+128),w
 16571  0E97  044C               	iorwf	(??_doRelMove+6)^(0+128),w
 16572  0E98  044B               	iorwf	(??_doRelMove+5)^(0+128),w
 16573  0E99  044A               	iorwf	(??_doRelMove+4)^(0+128),w
 16574  0E9A  1903               	btfsc	3,2
 16575  0E9B  2E9E               	goto	u8350
 16576  0E9C  3001               	movlw	1
 16577  0E9D  2E9F               	goto	u8360
 16578  0E9E                     u8350:	
 16579  0E9E  3000               	movlw	0
 16580  0E9F                     u8360:	
 16581  0E9F  00CE               	movwf	(??_doRelMove+8)^(0+128)
 16582  0EA0  01CF               	clrf	((??_doRelMove+8)^(0+128)+1)
 16583  0EA1  01D0               	clrf	((??_doRelMove+8)^(0+128)+2)
 16584  0EA2  01D1               	clrf	((??_doRelMove+8)^(0+128)+3)
 16585  0EA3  084E               	movf	(??_doRelMove+8)^(0+128),w
 16586  0EA4  05C6               	andwf	??_doRelMove^(0+128),f
 16587  0EA5  084F               	movf	(??_doRelMove+9)^(0+128),w
 16588  0EA6  05C7               	andwf	(??_doRelMove^(0+128)+1),f
 16589  0EA7  0850               	movf	(??_doRelMove+10)^(0+128),w
 16590  0EA8  05C8               	andwf	(??_doRelMove^(0+128)+2),f
 16591  0EA9  0851               	movf	(??_doRelMove+11)^(0+128),w
 16592  0EAA  05C9               	andwf	(??_doRelMove^(0+128)+3),f
 16593  0EAB  0857               	movf	(doRelMove@j+1)^(0+128),w
 16594  0EAC  00D3               	movwf	((??_doRelMove+12)^(0+128)+1)
 16595  0EAD  0856               	movf	doRelMove@j^(0+128),w
 16596  0EAE  00D2               	movwf	(??_doRelMove+12)^(0+128)
 16597  0EAF  35D2               	lslf	(??_doRelMove+12)^(0+128),f
 16598  0EB0  0DD3               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16599  0EB1  35D2               	lslf	(??_doRelMove+12)^(0+128),f
 16600  0EB2  0DD3               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16601  0EB3  3090               	movlw	144
 16602  0EB4  00D4               	movwf	(??_doRelMove+14)^(0+128)
 16603  0EB5  3027               	movlw	39
 16604  0EB6  00D5               	movwf	((??_doRelMove+14)^(0+128)+1)
 16605  0EB7  0852               	movf	(??_doRelMove+12)^(0+128),w
 16606  0EB8  0754               	addwf	(??_doRelMove+14)^(0+128),w
 16607  0EB9  0086               	movwf	6
 16608  0EBA  0853               	movf	(??_doRelMove+13)^(0+128),w
 16609  0EBB  3D55               	addwfc	(??_doRelMove+15)^(0+128),w
 16610  0EBC  0087               	movwf	7
 16611  0EBD  0846               	movf	??_doRelMove^(0+128),w
 16612  0EBE  0281               	subwf	1,f
 16613  0EBF  3141               	addfsr 1,1
 16614  0EC0  0847               	movf	(??_doRelMove+1)^(0+128),w
 16615  0EC1  3B81               	subwfb	1,f
 16616  0EC2  3141               	addfsr 1,1
 16617  0EC3  0848               	movf	(??_doRelMove+2)^(0+128),w
 16618  0EC4  3B81               	subwfb	1,f
 16619  0EC5  3141               	addfsr 1,1
 16620  0EC6  0849               	movf	(??_doRelMove+3)^(0+128),w
 16621  0EC7  3B81               	subwfb	1,f
 16622  0EC8  317D               	addfsr 1,-3
 16623  0EC9  3001               	movlw	1
 16624  0ECA  07D6               	addwf	doRelMove@j^(0+128),f
 16625  0ECB  3000               	movlw	0
 16626  0ECC  3DD7               	addwfc	(doRelMove@j+1)^(0+128),f
 16627  0ECD  2E72               	goto	L32
 16628  0ECE                     __end_of_doRelMove:	
 16629                           
 16630                           	psect	text53
 16631  00C0                     __ptext53:	
 16632 ;; *************** function _doAbsMove *****************
 16633 ;; Defined at:
 16634 ;;		line 304 in file "main.c"
 16635 ;; Parameters:    Size  Location     Type
 16636 ;;		None
 16637 ;; Auto vars:     Size  Location     Type
 16638 ;;  i               2   42[BANK1 ] int 
 16639 ;;  i               2   44[BANK1 ] int 
 16640 ;;  i               2   40[BANK1 ] int 
 16641 ;;  allThere        2   38[BANK1 ] int 
 16642 ;; Return value:  Size  Location     Type
 16643 ;;                  1    wreg      void 
 16644 ;; Registers used:
 16645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16646 ;; Tracked objects:
 16647 ;;		On entry : 0/0
 16648 ;;		On exit  : 0/0
 16649 ;;		Unchanged: 0/0
 16650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16652 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16653 ;;      Temps:          0       0       0       0       0      28       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16654 ;;      Totals:         0       0       8       0       0      28       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16655 ;;Total ram usage:       36 bytes
 16656 ;; Hardware stack levels used:    1
 16657 ;; Hardware stack levels required when called:   16
 16658 ;; This function calls:
 16659 ;;		_doMove
 16660 ;;		_printf
 16661 ;; This function is called by:
 16662 ;;		_main
 16663 ;; This function uses a non-reentrant model
 16664 ;;
 16665                           
 16666                           
 16667                           ;psect for function _doAbsMove
 16668  00C0                     _doAbsMove:	
 16669                           
 16670                           ;main.c: 307: int allThere=1;
 16671                           
 16672                           ;incstack = 0
 16673 ;; hardware stack exceeded
 16674                           ; Regs used in _doAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16675  00C0  3001               	movlw	1
 16676  00C1  0021               	movlb	1	; select bank1
 16677  00C2  00C6               	movwf	doAbsMove@allThere^(0+128)
 16678  00C3  3000               	movlw	0
 16679  00C4  00C7               	movwf	(doAbsMove@allThere^(0+128)+1)
 16680                           
 16681                           ;main.c: 308: for(int i=0;i<24;i++){
 16682  00C5  01C8               	clrf	doAbsMove@i^(0+128)
 16683  00C6  01C9               	clrf	(doAbsMove@i+1)^(0+128)
 16684  00C7  0849               	movf	(doAbsMove@i+1)^(0+128),w
 16685  00C8  3A80               	xorlw	128
 16686  00C9  0024               	movlb	4	; select bank4
 16687  00CA  00C0               	movwf	??_doAbsMove^(0+512)
 16688  00CB  3080               	movlw	128
 16689  00CC  0240               	subwf	??_doAbsMove^(0+512),w
 16690  00CD  1D03               	skipz
 16691  00CE  28D2               	goto	u8385
 16692  00CF  3018               	movlw	24
 16693  00D0  0021               	movlb	1	; select bank1
 16694  00D1  0248               	subwf	doAbsMove@i^(0+128),w
 16695  00D2                     u8385:	
 16696  00D2  1803               	btfsc	3,0
 16697  00D3  2958               	goto	l8452
 16698  00D4                     l8444:	
 16699                           
 16700                           ;main.c: 309: if((activeMask & (1UL << i)) > 0)
 16701  00D4  0021               	movlb	1	; select bank1
 16702  00D5  085D               	movf	_activeMask^(0+128),w
 16703  00D6  0024               	movlb	4	; select bank4
 16704  00D7  00C0               	movwf	??_doAbsMove^(0+512)
 16705  00D8  0021               	movlb	1	; select bank1
 16706  00D9  085E               	movf	(_activeMask+1)^(0+128),w
 16707  00DA  0024               	movlb	4	; select bank4
 16708  00DB  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 16709  00DC  0021               	movlb	1	; select bank1
 16710  00DD  085F               	movf	(_activeMask+2)^(0+128),w
 16711  00DE  0024               	movlb	4	; select bank4
 16712  00DF  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 16713  00E0  0021               	movlb	1	; select bank1
 16714  00E1  0860               	movf	(_activeMask+3)^(0+128),w
 16715  00E2  0024               	movlb	4	; select bank4
 16716  00E3  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 16717  00E4  3001               	movlw	1
 16718  00E5  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 16719  00E6  3000               	movlw	0
 16720  00E7  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 16721  00E8  3000               	movlw	0
 16722  00E9  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 16723  00EA  3000               	movlw	0
 16724  00EB  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 16725  00EC  0021               	movlb	1	; select bank1
 16726  00ED  0A48               	incf	doAbsMove@i^(0+128),w
 16727  00EE  0024               	movlb	4	; select bank4
 16728  00EF  28F4               	goto	u8390
 16729  00F0                     u8395:	
 16730  00F0  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 16731  00F1  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 16732  00F2  0DC6               	rlf	((??_doAbsMove+4)^(0+512)+2),f
 16733  00F3  0DC7               	rlf	((??_doAbsMove+4)^(0+512)+3),f
 16734  00F4                     u8390:	
 16735  00F4  0B89               	decfsz	9,f
 16736  00F5  28F0               	goto	u8395
 16737  00F6  0844               	movf	(??_doAbsMove+4)^(0+512),w
 16738  00F7  05C0               	andwf	??_doAbsMove^(0+512),f
 16739  00F8  0845               	movf	(??_doAbsMove+5)^(0+512),w
 16740  00F9  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 16741  00FA  0846               	movf	(??_doAbsMove+6)^(0+512),w
 16742  00FB  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 16743  00FC  0847               	movf	(??_doAbsMove+7)^(0+512),w
 16744  00FD  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 16745  00FE  0843               	movf	(??_doAbsMove+3)^(0+512),w
 16746  00FF  0442               	iorwf	(??_doAbsMove+2)^(0+512),w
 16747  0100  0441               	iorwf	(??_doAbsMove+1)^(0+512),w
 16748  0101  0440               	iorwf	??_doAbsMove^(0+512),w
 16749  0102  1903               	skipnz
 16750  0103  2946               	goto	l8448
 16751                           
 16752                           ;main.c: 310: allThere &= (currentPositions_steps[i] == absCommand);
 16753  0104  0021               	movlb	1	; select bank1
 16754  0105  0849               	movf	(doAbsMove@i+1)^(0+128),w
 16755  0106  0024               	movlb	4	; select bank4
 16756  0107  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 16757  0108  0021               	movlb	1	; select bank1
 16758  0109  0848               	movf	doAbsMove@i^(0+128),w
 16759  010A  0024               	movlb	4	; select bank4
 16760  010B  00C0               	movwf	??_doAbsMove^(0+512)
 16761  010C  35C0               	lslf	??_doAbsMove^(0+512),f
 16762  010D  0DC1               	rlf	(??_doAbsMove^(0+512)+1),f
 16763  010E  35C0               	lslf	??_doAbsMove^(0+512),f
 16764  010F  0DC1               	rlf	(??_doAbsMove^(0+512)+1),f
 16765  0110  3090               	movlw	144
 16766  0111  00C2               	movwf	(??_doAbsMove+2)^(0+512)
 16767  0112  3027               	movlw	39
 16768  0113  00C3               	movwf	((??_doAbsMove+2)^(0+512)+1)
 16769  0114  0840               	movf	??_doAbsMove^(0+512),w
 16770  0115  0742               	addwf	(??_doAbsMove+2)^(0+512),w
 16771  0116  0086               	movwf	6
 16772  0117  0841               	movf	(??_doAbsMove+1)^(0+512),w
 16773  0118  3D43               	addwfc	(??_doAbsMove+3)^(0+512),w
 16774  0119  0087               	movwf	7
 16775  011A  3F40               	moviw [0]fsr1
 16776  011B  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 16777  011C  3F41               	moviw [1]fsr1
 16778  011D  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 16779  011E  3F42               	moviw [2]fsr1
 16780  011F  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 16781  0120  3F43               	moviw [3]fsr1
 16782  0121  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 16783  0122  0020               	movlb	0	; select bank0
 16784  0123  0851               	movf	_absCommand+3,w
 16785  0124  0024               	movlb	4	; select bank4
 16786  0125  0647               	xorwf	(??_doAbsMove+7)^(0+512),w
 16787  0126  1D03               	skipz
 16788  0127  2938               	goto	u8415
 16789  0128  0020               	movlb	0	; select bank0
 16790  0129  0850               	movf	_absCommand+2,w
 16791  012A  0024               	movlb	4	; select bank4
 16792  012B  0646               	xorwf	(??_doAbsMove+6)^(0+512),w
 16793  012C  1D03               	skipz
 16794  012D  2938               	goto	u8415
 16795  012E  0020               	movlb	0	; select bank0
 16796  012F  084F               	movf	_absCommand+1,w
 16797  0130  0024               	movlb	4	; select bank4
 16798  0131  0645               	xorwf	(??_doAbsMove+5)^(0+512),w
 16799  0132  1D03               	skipz
 16800  0133  2938               	goto	u8415
 16801  0134  0020               	movlb	0	; select bank0
 16802  0135  084E               	movf	_absCommand,w
 16803  0136  0024               	movlb	4	; select bank4
 16804  0137  0644               	xorwf	(??_doAbsMove+4)^(0+512),w
 16805  0138                     u8415:	
 16806  0138  1D03               	btfss	3,2
 16807  0139  293C               	goto	u8410
 16808  013A  3001               	movlw	1
 16809  013B  293D               	goto	u8420
 16810  013C                     u8410:	
 16811  013C  3000               	movlw	0
 16812  013D                     u8420:	
 16813  013D  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 16814  013E  01C9               	clrf	((??_doAbsMove+8)^(0+512)+1)
 16815  013F  0848               	movf	(??_doAbsMove+8)^(0+512),w
 16816  0140  0021               	movlb	1	; select bank1
 16817  0141  05C6               	andwf	doAbsMove@allThere^(0+128),f
 16818  0142  0024               	movlb	4	; select bank4
 16819  0143  0849               	movf	(??_doAbsMove+9)^(0+512),w
 16820  0144  0021               	movlb	1	; select bank1
 16821  0145  05C7               	andwf	(doAbsMove@allThere+1)^(0+128),f
 16822  0146                     l8448:	
 16823  0146  3001               	movlw	1
 16824  0147  0021               	movlb	1	; select bank1
 16825  0148  07C8               	addwf	doAbsMove@i^(0+128),f
 16826  0149  3000               	movlw	0
 16827  014A  3DC9               	addwfc	(doAbsMove@i+1)^(0+128),f
 16828  014B  0849               	movf	(doAbsMove@i+1)^(0+128),w
 16829  014C  3A80               	xorlw	128
 16830  014D  0024               	movlb	4	; select bank4
 16831  014E  00C0               	movwf	??_doAbsMove^(0+512)
 16832  014F  3080               	movlw	128
 16833  0150  0240               	subwf	??_doAbsMove^(0+512),w
 16834  0151  1D03               	skipz
 16835  0152  2956               	goto	u8435
 16836  0153  3018               	movlw	24
 16837  0154  0021               	movlb	1	; select bank1
 16838  0155  0248               	subwf	doAbsMove@i^(0+128),w
 16839  0156                     u8435:	
 16840  0156  1C03               	skipc
 16841  0157  28D4               	goto	l8444
 16842  0158                     l8452:	
 16843                           
 16844                           ;main.c: 311: }
 16845                           ;main.c: 313: if(allThere){
 16846  0158  0021               	movlb	1	; select bank1
 16847  0159  0846               	movf	doAbsMove@allThere^(0+128),w
 16848  015A  0447               	iorwf	(doAbsMove@allThere+1)^(0+128),w
 16849  015B  1903               	btfsc	3,2
 16850  015C  2977               	goto	l8466
 16851                           
 16852                           ;main.c: 314: printf("abs: all there\n");
 16853  015D  3020               	movlw	low (STR_10| (0+32768))
 16854  015E  00A0               	movwf	printf@f^(0+128)
 16855  015F  30A9               	movlw	high (STR_10| (0+32768))
 16856  0160  00A1               	movwf	(printf@f^(0+128)+1)
 16857  0161  318E  26CE         	fcall	_printf
 16858                           
 16859                           ;main.c: 315: motionType = NONE;
 16860  0163  0020               	movlb	0	; select bank0
 16861  0164  01D5               	clrf	_motionType
 16862                           
 16863                           ;main.c: 316: moveVector_ups = 0;
 16864  0165  3000               	movlw	0
 16865  0166  0021               	movlb	1	; select bank1
 16866  0167  00E8               	movwf	(_moveVector_ups+3)^(0+128)
 16867  0168  3000               	movlw	0
 16868  0169  00E7               	movwf	(_moveVector_ups+2)^(0+128)
 16869  016A  3000               	movlw	0
 16870  016B  00E6               	movwf	(_moveVector_ups+1)^(0+128)
 16871  016C  3000               	movlw	0
 16872  016D  00E5               	movwf	_moveVector_ups^(0+128)
 16873                           
 16874                           ;main.c: 317: moveVector_downs = 0;
 16875  016E  3000               	movlw	0
 16876  016F  00E4               	movwf	(_moveVector_downs+3)^(0+128)
 16877  0170  3000               	movlw	0
 16878  0171  00E3               	movwf	(_moveVector_downs+2)^(0+128)
 16879  0172  3000               	movlw	0
 16880  0173  00E2               	movwf	(_moveVector_downs+1)^(0+128)
 16881  0174  3000               	movlw	0
 16882  0175  00E1               	movwf	_moveVector_downs^(0+128)
 16883                           
 16884                           ;main.c: 319: }
 16885                           
 16886                           ;main.c: 318: return;
 16887  0176  0008               	return
 16888  0177                     l8466:	
 16889                           
 16890                           ;main.c: 320: else{
 16891                           ;main.c: 321: for(int i=0;i<24;i++){
 16892  0177  01CC               	clrf	doAbsMove@i_1577^(0+128)
 16893  0178  01CD               	clrf	(doAbsMove@i_1577+1)^(0+128)
 16894  0179  084D               	movf	(doAbsMove@i_1577+1)^(0+128),w
 16895  017A  3A80               	xorlw	128
 16896  017B  0024               	movlb	4	; select bank4
 16897  017C  00C0               	movwf	??_doAbsMove^(0+512)
 16898  017D  3080               	movlw	128
 16899  017E  0240               	subwf	??_doAbsMove^(0+512),w
 16900  017F  1D03               	skipz
 16901  0180  2984               	goto	u8455
 16902  0181  3018               	movlw	24
 16903  0182  0021               	movlb	1	; select bank1
 16904  0183  024C               	subwf	doAbsMove@i_1577^(0+128),w
 16905  0184                     u8455:	
 16906  0184  1803               	btfsc	3,0
 16907  0185  2ABA               	goto	l8478
 16908  0186                     l8472:	
 16909                           
 16910                           ;main.c: 323: moveVector_ups |= (activeMask & (1UL << i)) & ((currentPositions_steps[i] 
      +                          > absCommand)<<i);
 16911  0186  0021               	movlb	1	; select bank1
 16912  0187  085D               	movf	_activeMask^(0+128),w
 16913  0188  0024               	movlb	4	; select bank4
 16914  0189  00C0               	movwf	??_doAbsMove^(0+512)
 16915  018A  0021               	movlb	1	; select bank1
 16916  018B  085E               	movf	(_activeMask+1)^(0+128),w
 16917  018C  0024               	movlb	4	; select bank4
 16918  018D  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 16919  018E  0021               	movlb	1	; select bank1
 16920  018F  085F               	movf	(_activeMask+2)^(0+128),w
 16921  0190  0024               	movlb	4	; select bank4
 16922  0191  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 16923  0192  0021               	movlb	1	; select bank1
 16924  0193  0860               	movf	(_activeMask+3)^(0+128),w
 16925  0194  0024               	movlb	4	; select bank4
 16926  0195  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 16927  0196  0021               	movlb	1	; select bank1
 16928  0197  084D               	movf	(doAbsMove@i_1577+1)^(0+128),w
 16929  0198  0024               	movlb	4	; select bank4
 16930  0199  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 16931  019A  0021               	movlb	1	; select bank1
 16932  019B  084C               	movf	doAbsMove@i_1577^(0+128),w
 16933  019C  0024               	movlb	4	; select bank4
 16934  019D  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 16935  019E  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 16936  019F  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 16937  01A0  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 16938  01A1  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 16939  01A2  3090               	movlw	144
 16940  01A3  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 16941  01A4  3027               	movlw	39
 16942  01A5  00C7               	movwf	((??_doAbsMove+6)^(0+512)+1)
 16943  01A6  0844               	movf	(??_doAbsMove+4)^(0+512),w
 16944  01A7  0746               	addwf	(??_doAbsMove+6)^(0+512),w
 16945  01A8  0086               	movwf	6
 16946  01A9  0845               	movf	(??_doAbsMove+5)^(0+512),w
 16947  01AA  3D47               	addwfc	(??_doAbsMove+7)^(0+512),w
 16948  01AB  0087               	movwf	7
 16949  01AC  3F40               	moviw [0]fsr1
 16950  01AD  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 16951  01AE  3F41               	moviw [1]fsr1
 16952  01AF  00C9               	movwf	((??_doAbsMove+8)^(0+512)+1)
 16953  01B0  3F42               	moviw [2]fsr1
 16954  01B1  00CA               	movwf	((??_doAbsMove+8)^(0+512)+2)
 16955  01B2  3F43               	moviw [3]fsr1
 16956  01B3  00CB               	movwf	((??_doAbsMove+8)^(0+512)+3)
 16957  01B4  0020               	movlb	0	; select bank0
 16958  01B5  0851               	movf	_absCommand+3,w
 16959  01B6  3A80               	xorlw	128
 16960  01B7  0024               	movlb	4	; select bank4
 16961  01B8  00CC               	movwf	(??_doAbsMove+12)^(0+512)
 16962  01B9  084B               	movf	(??_doAbsMove+11)^(0+512),w
 16963  01BA  3A80               	xorlw	128
 16964  01BB  024C               	subwf	(??_doAbsMove+12)^(0+512),w
 16965  01BC  0020               	movlb	0	; select bank0
 16966  01BD  1D03               	skipz
 16967  01BE  29CF               	goto	u8463
 16968  01BF  0024               	movlb	4	; select bank4
 16969  01C0  084A               	movf	(??_doAbsMove+10)^(0+512),w
 16970  01C1  0020               	movlb	0	; select bank0
 16971  01C2  0250               	subwf	_absCommand+2,w
 16972  01C3  1D03               	skipz
 16973  01C4  29CF               	goto	u8463
 16974  01C5  0024               	movlb	4	; select bank4
 16975  01C6  0849               	movf	(??_doAbsMove+9)^(0+512),w
 16976  01C7  0020               	movlb	0	; select bank0
 16977  01C8  024F               	subwf	_absCommand+1,w
 16978  01C9  1D03               	skipz
 16979  01CA  29CF               	goto	u8463
 16980  01CB  0024               	movlb	4	; select bank4
 16981  01CC  0848               	movf	(??_doAbsMove+8)^(0+512),w
 16982  01CD  0020               	movlb	0	; select bank0
 16983  01CE  024E               	subwf	_absCommand,w
 16984  01CF                     u8463:	
 16985  01CF  1803               	btfsc	3,0
 16986  01D0  29D3               	goto	u8460
 16987  01D1  3001               	movlw	1
 16988  01D2  29D4               	goto	u8470
 16989  01D3                     u8460:	
 16990  01D3  3000               	movlw	0
 16991  01D4                     u8470:	
 16992  01D4  0024               	movlb	4	; select bank4
 16993  01D5  00CD               	movwf	(??_doAbsMove+13)^(0+512)
 16994  01D6  01CE               	clrf	((??_doAbsMove+13)^(0+512)+1)
 16995  01D7  0021               	movlb	1	; select bank1
 16996  01D8  0A4C               	incf	doAbsMove@i_1577^(0+128),w
 16997  01D9  0024               	movlb	4	; select bank4
 16998  01DA  29DD               	goto	u8484
 16999  01DB                     u8485:	
 17000  01DB  35CD               	lslf	(??_doAbsMove+13)^(0+512),f
 17001  01DC  0DCE               	rlf	((??_doAbsMove+13)^(0+512)+1),f
 17002  01DD                     u8484:	
 17003  01DD  0B89               	decfsz	9,f
 17004  01DE  29DB               	goto	u8485
 17005  01DF  084D               	movf	(??_doAbsMove+13)^(0+512),w
 17006  01E0  00CF               	movwf	(??_doAbsMove+15)^(0+512)
 17007  01E1  084E               	movf	(??_doAbsMove+14)^(0+512),w
 17008  01E2  00D0               	movwf	((??_doAbsMove+15)^(0+512)+1)
 17009  01E3  3000               	movlw	0
 17010  01E4  1BD0               	btfsc	((??_doAbsMove+15)^(0+512)+1),7
 17011  01E5  30FF               	movlw	255
 17012  01E6  00D1               	movwf	((??_doAbsMove+15)^(0+512)+2)
 17013  01E7  00D2               	movwf	((??_doAbsMove+15)^(0+512)+3)
 17014  01E8  3001               	movlw	1
 17015  01E9  00D3               	movwf	(??_doAbsMove+19)^(0+512)
 17016  01EA  3000               	movlw	0
 17017  01EB  00D4               	movwf	((??_doAbsMove+19)^(0+512)+1)
 17018  01EC  3000               	movlw	0
 17019  01ED  00D5               	movwf	((??_doAbsMove+19)^(0+512)+2)
 17020  01EE  3000               	movlw	0
 17021  01EF  00D6               	movwf	((??_doAbsMove+19)^(0+512)+3)
 17022  01F0  0021               	movlb	1	; select bank1
 17023  01F1  0A4C               	incf	doAbsMove@i_1577^(0+128),w
 17024  01F2  0024               	movlb	4	; select bank4
 17025  01F3  29F8               	goto	u8490
 17026  01F4                     u8495:	
 17027  01F4  35D3               	lslf	(??_doAbsMove+19)^(0+512),f
 17028  01F5  0DD4               	rlf	((??_doAbsMove+19)^(0+512)+1),f
 17029  01F6  0DD5               	rlf	((??_doAbsMove+19)^(0+512)+2),f
 17030  01F7  0DD6               	rlf	((??_doAbsMove+19)^(0+512)+3),f
 17031  01F8                     u8490:	
 17032  01F8  0B89               	decfsz	9,f
 17033  01F9  29F4               	goto	u8495
 17034  01FA  0853               	movf	(??_doAbsMove+19)^(0+512),w
 17035  01FB  05CF               	andwf	(??_doAbsMove+15)^(0+512),f
 17036  01FC  0854               	movf	(??_doAbsMove+20)^(0+512),w
 17037  01FD  05D0               	andwf	((??_doAbsMove+15)^(0+512)+1),f
 17038  01FE  0855               	movf	(??_doAbsMove+21)^(0+512),w
 17039  01FF  05D1               	andwf	((??_doAbsMove+15)^(0+512)+2),f
 17040  0200  0856               	movf	(??_doAbsMove+22)^(0+512),w
 17041  0201  05D2               	andwf	((??_doAbsMove+15)^(0+512)+3),f
 17042  0202  084F               	movf	(??_doAbsMove+15)^(0+512),w
 17043  0203  05C0               	andwf	??_doAbsMove^(0+512),f
 17044  0204  0850               	movf	(??_doAbsMove+16)^(0+512),w
 17045  0205  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17046  0206  0851               	movf	(??_doAbsMove+17)^(0+512),w
 17047  0207  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17048  0208  0852               	movf	(??_doAbsMove+18)^(0+512),w
 17049  0209  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17050  020A  0840               	movf	??_doAbsMove^(0+512),w
 17051  020B  0021               	movlb	1	; select bank1
 17052  020C  04E5               	iorwf	_moveVector_ups^(0+128),f
 17053  020D  0024               	movlb	4	; select bank4
 17054  020E  0841               	movf	(??_doAbsMove+1)^(0+512),w
 17055  020F  0021               	movlb	1	; select bank1
 17056  0210  04E6               	iorwf	(_moveVector_ups+1)^(0+128),f
 17057  0211  0024               	movlb	4	; select bank4
 17058  0212  0842               	movf	(??_doAbsMove+2)^(0+512),w
 17059  0213  0021               	movlb	1	; select bank1
 17060  0214  04E7               	iorwf	(_moveVector_ups+2)^(0+128),f
 17061  0215  0024               	movlb	4	; select bank4
 17062  0216  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17063  0217  0021               	movlb	1	; select bank1
 17064  0218  04E8               	iorwf	(_moveVector_ups+3)^(0+128),f
 17065                           
 17066                           ;main.c: 324: moveVector_downs |= (activeMask & (1UL << i)) & ((currentPositions_steps[i
      +                          ] < absCommand)<<i);
 17067  0219  085D               	movf	_activeMask^(0+128),w
 17068  021A  0024               	movlb	4	; select bank4
 17069  021B  00C0               	movwf	??_doAbsMove^(0+512)
 17070  021C  0021               	movlb	1	; select bank1
 17071  021D  085E               	movf	(_activeMask+1)^(0+128),w
 17072  021E  0024               	movlb	4	; select bank4
 17073  021F  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 17074  0220  0021               	movlb	1	; select bank1
 17075  0221  085F               	movf	(_activeMask+2)^(0+128),w
 17076  0222  0024               	movlb	4	; select bank4
 17077  0223  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 17078  0224  0021               	movlb	1	; select bank1
 17079  0225  0860               	movf	(_activeMask+3)^(0+128),w
 17080  0226  0024               	movlb	4	; select bank4
 17081  0227  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 17082  0228  0021               	movlb	1	; select bank1
 17083  0229  084D               	movf	(doAbsMove@i_1577+1)^(0+128),w
 17084  022A  0024               	movlb	4	; select bank4
 17085  022B  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17086  022C  0021               	movlb	1	; select bank1
 17087  022D  084C               	movf	doAbsMove@i_1577^(0+128),w
 17088  022E  0024               	movlb	4	; select bank4
 17089  022F  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17090  0230  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17091  0231  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17092  0232  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17093  0233  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17094  0234  3090               	movlw	144
 17095  0235  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 17096  0236  3027               	movlw	39
 17097  0237  00C7               	movwf	((??_doAbsMove+6)^(0+512)+1)
 17098  0238  0844               	movf	(??_doAbsMove+4)^(0+512),w
 17099  0239  0746               	addwf	(??_doAbsMove+6)^(0+512),w
 17100  023A  0086               	movwf	6
 17101  023B  0845               	movf	(??_doAbsMove+5)^(0+512),w
 17102  023C  3D47               	addwfc	(??_doAbsMove+7)^(0+512),w
 17103  023D  0087               	movwf	7
 17104  023E  3F40               	moviw [0]fsr1
 17105  023F  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 17106  0240  3F41               	moviw [1]fsr1
 17107  0241  00C9               	movwf	((??_doAbsMove+8)^(0+512)+1)
 17108  0242  3F42               	moviw [2]fsr1
 17109  0243  00CA               	movwf	((??_doAbsMove+8)^(0+512)+2)
 17110  0244  3F43               	moviw [3]fsr1
 17111  0245  00CB               	movwf	((??_doAbsMove+8)^(0+512)+3)
 17112  0246  084B               	movf	(??_doAbsMove+11)^(0+512),w
 17113  0247  3A80               	xorlw	128
 17114  0248  00CC               	movwf	(??_doAbsMove+12)^(0+512)
 17115  0249  0020               	movlb	0	; select bank0
 17116  024A  0851               	movf	_absCommand+3,w
 17117  024B  3A80               	xorlw	128
 17118  024C  0024               	movlb	4	; select bank4
 17119  024D  024C               	subwf	(??_doAbsMove+12)^(0+512),w
 17120  024E  1D03               	skipz
 17121  024F  2A60               	goto	u8503
 17122  0250  0020               	movlb	0	; select bank0
 17123  0251  0850               	movf	_absCommand+2,w
 17124  0252  0024               	movlb	4	; select bank4
 17125  0253  024A               	subwf	(??_doAbsMove+10)^(0+512),w
 17126  0254  1D03               	skipz
 17127  0255  2A60               	goto	u8503
 17128  0256  0020               	movlb	0	; select bank0
 17129  0257  084F               	movf	_absCommand+1,w
 17130  0258  0024               	movlb	4	; select bank4
 17131  0259  0249               	subwf	(??_doAbsMove+9)^(0+512),w
 17132  025A  1D03               	skipz
 17133  025B  2A60               	goto	u8503
 17134  025C  0020               	movlb	0	; select bank0
 17135  025D  084E               	movf	_absCommand,w
 17136  025E  0024               	movlb	4	; select bank4
 17137  025F  0248               	subwf	(??_doAbsMove+8)^(0+512),w
 17138  0260                     u8503:	
 17139  0260  1803               	btfsc	3,0
 17140  0261  2A64               	goto	u8500
 17141  0262  3001               	movlw	1
 17142  0263  2A65               	goto	u8510
 17143  0264                     u8500:	
 17144  0264  3000               	movlw	0
 17145  0265                     u8510:	
 17146  0265  00CD               	movwf	(??_doAbsMove+13)^(0+512)
 17147  0266  01CE               	clrf	((??_doAbsMove+13)^(0+512)+1)
 17148  0267  0021               	movlb	1	; select bank1
 17149  0268  0A4C               	incf	doAbsMove@i_1577^(0+128),w
 17150  0269  0024               	movlb	4	; select bank4
 17151  026A  2A6D               	goto	u8524
 17152  026B                     u8525:	
 17153  026B  35CD               	lslf	(??_doAbsMove+13)^(0+512),f
 17154  026C  0DCE               	rlf	((??_doAbsMove+13)^(0+512)+1),f
 17155  026D                     u8524:	
 17156  026D  0B89               	decfsz	9,f
 17157  026E  2A6B               	goto	u8525
 17158  026F  084D               	movf	(??_doAbsMove+13)^(0+512),w
 17159  0270  00CF               	movwf	(??_doAbsMove+15)^(0+512)
 17160  0271  084E               	movf	(??_doAbsMove+14)^(0+512),w
 17161  0272  00D0               	movwf	((??_doAbsMove+15)^(0+512)+1)
 17162  0273  3000               	movlw	0
 17163  0274  1BD0               	btfsc	((??_doAbsMove+15)^(0+512)+1),7
 17164  0275  30FF               	movlw	255
 17165  0276  00D1               	movwf	((??_doAbsMove+15)^(0+512)+2)
 17166  0277  00D2               	movwf	((??_doAbsMove+15)^(0+512)+3)
 17167  0278  3001               	movlw	1
 17168  0279  00D3               	movwf	(??_doAbsMove+19)^(0+512)
 17169  027A  3000               	movlw	0
 17170  027B  00D4               	movwf	((??_doAbsMove+19)^(0+512)+1)
 17171  027C  3000               	movlw	0
 17172  027D  00D5               	movwf	((??_doAbsMove+19)^(0+512)+2)
 17173  027E  3000               	movlw	0
 17174  027F  00D6               	movwf	((??_doAbsMove+19)^(0+512)+3)
 17175  0280  0021               	movlb	1	; select bank1
 17176  0281  0A4C               	incf	doAbsMove@i_1577^(0+128),w
 17177  0282  0024               	movlb	4	; select bank4
 17178  0283  2A88               	goto	u8530
 17179  0284                     u8535:	
 17180  0284  35D3               	lslf	(??_doAbsMove+19)^(0+512),f
 17181  0285  0DD4               	rlf	((??_doAbsMove+19)^(0+512)+1),f
 17182  0286  0DD5               	rlf	((??_doAbsMove+19)^(0+512)+2),f
 17183  0287  0DD6               	rlf	((??_doAbsMove+19)^(0+512)+3),f
 17184  0288                     u8530:	
 17185  0288  0B89               	decfsz	9,f
 17186  0289  2A84               	goto	u8535
 17187  028A  0853               	movf	(??_doAbsMove+19)^(0+512),w
 17188  028B  05CF               	andwf	(??_doAbsMove+15)^(0+512),f
 17189  028C  0854               	movf	(??_doAbsMove+20)^(0+512),w
 17190  028D  05D0               	andwf	((??_doAbsMove+15)^(0+512)+1),f
 17191  028E  0855               	movf	(??_doAbsMove+21)^(0+512),w
 17192  028F  05D1               	andwf	((??_doAbsMove+15)^(0+512)+2),f
 17193  0290  0856               	movf	(??_doAbsMove+22)^(0+512),w
 17194  0291  05D2               	andwf	((??_doAbsMove+15)^(0+512)+3),f
 17195  0292  084F               	movf	(??_doAbsMove+15)^(0+512),w
 17196  0293  05C0               	andwf	??_doAbsMove^(0+512),f
 17197  0294  0850               	movf	(??_doAbsMove+16)^(0+512),w
 17198  0295  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17199  0296  0851               	movf	(??_doAbsMove+17)^(0+512),w
 17200  0297  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17201  0298  0852               	movf	(??_doAbsMove+18)^(0+512),w
 17202  0299  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17203  029A  0840               	movf	??_doAbsMove^(0+512),w
 17204  029B  0021               	movlb	1	; select bank1
 17205  029C  04E1               	iorwf	_moveVector_downs^(0+128),f
 17206  029D  0024               	movlb	4	; select bank4
 17207  029E  0841               	movf	(??_doAbsMove+1)^(0+512),w
 17208  029F  0021               	movlb	1	; select bank1
 17209  02A0  04E2               	iorwf	(_moveVector_downs+1)^(0+128),f
 17210  02A1  0024               	movlb	4	; select bank4
 17211  02A2  0842               	movf	(??_doAbsMove+2)^(0+512),w
 17212  02A3  0021               	movlb	1	; select bank1
 17213  02A4  04E3               	iorwf	(_moveVector_downs+2)^(0+128),f
 17214  02A5  0024               	movlb	4	; select bank4
 17215  02A6  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17216  02A7  0021               	movlb	1	; select bank1
 17217  02A8  04E4               	iorwf	(_moveVector_downs+3)^(0+128),f
 17218  02A9  3001               	movlw	1
 17219  02AA  07CC               	addwf	doAbsMove@i_1577^(0+128),f
 17220  02AB  3000               	movlw	0
 17221  02AC  3DCD               	addwfc	(doAbsMove@i_1577+1)^(0+128),f
 17222  02AD  084D               	movf	(doAbsMove@i_1577+1)^(0+128),w
 17223  02AE  3A80               	xorlw	128
 17224  02AF  0024               	movlb	4	; select bank4
 17225  02B0  00C0               	movwf	??_doAbsMove^(0+512)
 17226  02B1  3080               	movlw	128
 17227  02B2  0240               	subwf	??_doAbsMove^(0+512),w
 17228  02B3  1D03               	skipz
 17229  02B4  2AB8               	goto	u8545
 17230  02B5  3018               	movlw	24
 17231  02B6  0021               	movlb	1	; select bank1
 17232  02B7  024C               	subwf	doAbsMove@i_1577^(0+128),w
 17233  02B8                     u8545:	
 17234  02B8  1C03               	skipc
 17235  02B9  2986               	goto	l8472
 17236  02BA                     l8478:	
 17237                           
 17238                           ;main.c: 326: }
 17239                           ;main.c: 327: doMove();
 17240  02BA  3189  2119  3180   	fcall	_doMove
 17241                           
 17242                           ;main.c: 329: for(int i=0;i<24;i++)
 17243  02BD  0021               	movlb	1	; select bank1
 17244  02BE  01CA               	clrf	doAbsMove@i_1579^(0+128)
 17245  02BF  01CB               	clrf	(doAbsMove@i_1579+1)^(0+128)
 17246  02C0                     L33:	
 17247  02C0  084B               	movf	(doAbsMove@i_1579+1)^(0+128),w
 17248  02C1  3A80               	xorlw	128
 17249  02C2  0024               	movlb	4	; select bank4
 17250  02C3  00C0               	movwf	??_doAbsMove^(0+512)
 17251  02C4  3080               	movlw	128
 17252  02C5  0240               	subwf	??_doAbsMove^(0+512),w
 17253  02C6  1D03               	skipz
 17254  02C7  2ACB               	goto	u8555
 17255  02C8  3018               	movlw	24
 17256  02C9  0021               	movlb	1	; select bank1
 17257  02CA  024A               	subwf	doAbsMove@i_1579^(0+128),w
 17258  02CB                     u8555:	
 17259  02CB  1803               	btfsc	3,0
 17260  02CC  0008               	return
 17261                           
 17262                           ;main.c: 330: currentPositions_steps[i] += ((moveVector_downs & (1UL << i)) > 0) - ((mov
      +                          eVector_ups & (1UL << i)) > 0);
 17263  02CD  0021               	movlb	1	; select bank1
 17264  02CE  0865               	movf	_moveVector_ups^(0+128),w
 17265  02CF  0024               	movlb	4	; select bank4
 17266  02D0  00C0               	movwf	??_doAbsMove^(0+512)
 17267  02D1  0021               	movlb	1	; select bank1
 17268  02D2  0866               	movf	(_moveVector_ups+1)^(0+128),w
 17269  02D3  0024               	movlb	4	; select bank4
 17270  02D4  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 17271  02D5  0021               	movlb	1	; select bank1
 17272  02D6  0867               	movf	(_moveVector_ups+2)^(0+128),w
 17273  02D7  0024               	movlb	4	; select bank4
 17274  02D8  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 17275  02D9  0021               	movlb	1	; select bank1
 17276  02DA  0868               	movf	(_moveVector_ups+3)^(0+128),w
 17277  02DB  0024               	movlb	4	; select bank4
 17278  02DC  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 17279  02DD  3001               	movlw	1
 17280  02DE  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17281  02DF  3000               	movlw	0
 17282  02E0  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17283  02E1  3000               	movlw	0
 17284  02E2  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 17285  02E3  3000               	movlw	0
 17286  02E4  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 17287  02E5  0021               	movlb	1	; select bank1
 17288  02E6  0A4A               	incf	doAbsMove@i_1579^(0+128),w
 17289  02E7  0024               	movlb	4	; select bank4
 17290  02E8  2AED               	goto	u8560
 17291  02E9                     u8565:	
 17292  02E9  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17293  02EA  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17294  02EB  0DC6               	rlf	((??_doAbsMove+4)^(0+512)+2),f
 17295  02EC  0DC7               	rlf	((??_doAbsMove+4)^(0+512)+3),f
 17296  02ED                     u8560:	
 17297  02ED  0B89               	decfsz	9,f
 17298  02EE  2AE9               	goto	u8565
 17299  02EF  0844               	movf	(??_doAbsMove+4)^(0+512),w
 17300  02F0  05C0               	andwf	??_doAbsMove^(0+512),f
 17301  02F1  0845               	movf	(??_doAbsMove+5)^(0+512),w
 17302  02F2  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17303  02F3  0846               	movf	(??_doAbsMove+6)^(0+512),w
 17304  02F4  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17305  02F5  0847               	movf	(??_doAbsMove+7)^(0+512),w
 17306  02F6  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17307  02F7  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17308  02F8  0442               	iorwf	(??_doAbsMove+2)^(0+512),w
 17309  02F9  0441               	iorwf	(??_doAbsMove+1)^(0+512),w
 17310  02FA  0440               	iorwf	??_doAbsMove^(0+512),w
 17311  02FB  1903               	btfsc	3,2
 17312  02FC  2AFF               	goto	u8570
 17313  02FD  3001               	movlw	1
 17314  02FE  2B00               	goto	u8580
 17315  02FF                     u8570:	
 17316  02FF  3000               	movlw	0
 17317  0300                     u8580:	
 17318  0300  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 17319  0301  01C9               	clrf	((??_doAbsMove+8)^(0+512)+1)
 17320  0302  09C8               	comf	(??_doAbsMove+8)^(0+512),f
 17321  0303  09C9               	comf	((??_doAbsMove+8)^(0+512)+1),f
 17322  0304  0AC8               	incf	(??_doAbsMove+8)^(0+512),f
 17323  0305  1903               	skipnz
 17324  0306  0AC9               	incf	((??_doAbsMove+8)^(0+512)+1),f
 17325  0307  0021               	movlb	1	; select bank1
 17326  0308  0861               	movf	_moveVector_downs^(0+128),w
 17327  0309  0024               	movlb	4	; select bank4
 17328  030A  00CA               	movwf	(??_doAbsMove+10)^(0+512)
 17329  030B  0021               	movlb	1	; select bank1
 17330  030C  0862               	movf	(_moveVector_downs+1)^(0+128),w
 17331  030D  0024               	movlb	4	; select bank4
 17332  030E  00CB               	movwf	((??_doAbsMove+10)^(0+512)+1)
 17333  030F  0021               	movlb	1	; select bank1
 17334  0310  0863               	movf	(_moveVector_downs+2)^(0+128),w
 17335  0311  0024               	movlb	4	; select bank4
 17336  0312  00CC               	movwf	((??_doAbsMove+10)^(0+512)+2)
 17337  0313  0021               	movlb	1	; select bank1
 17338  0314  0864               	movf	(_moveVector_downs+3)^(0+128),w
 17339  0315  0024               	movlb	4	; select bank4
 17340  0316  00CD               	movwf	((??_doAbsMove+10)^(0+512)+3)
 17341  0317  3001               	movlw	1
 17342  0318  00CE               	movwf	(??_doAbsMove+14)^(0+512)
 17343  0319  3000               	movlw	0
 17344  031A  00CF               	movwf	((??_doAbsMove+14)^(0+512)+1)
 17345  031B  3000               	movlw	0
 17346  031C  00D0               	movwf	((??_doAbsMove+14)^(0+512)+2)
 17347  031D  3000               	movlw	0
 17348  031E  00D1               	movwf	((??_doAbsMove+14)^(0+512)+3)
 17349  031F  0021               	movlb	1	; select bank1
 17350  0320  0A4A               	incf	doAbsMove@i_1579^(0+128),w
 17351  0321  0024               	movlb	4	; select bank4
 17352  0322  2B27               	goto	u8590
 17353  0323                     u8595:	
 17354  0323  35CE               	lslf	(??_doAbsMove+14)^(0+512),f
 17355  0324  0DCF               	rlf	((??_doAbsMove+14)^(0+512)+1),f
 17356  0325  0DD0               	rlf	((??_doAbsMove+14)^(0+512)+2),f
 17357  0326  0DD1               	rlf	((??_doAbsMove+14)^(0+512)+3),f
 17358  0327                     u8590:	
 17359  0327  0B89               	decfsz	9,f
 17360  0328  2B23               	goto	u8595
 17361  0329  084E               	movf	(??_doAbsMove+14)^(0+512),w
 17362  032A  05CA               	andwf	(??_doAbsMove+10)^(0+512),f
 17363  032B  084F               	movf	(??_doAbsMove+15)^(0+512),w
 17364  032C  05CB               	andwf	((??_doAbsMove+10)^(0+512)+1),f
 17365  032D  0850               	movf	(??_doAbsMove+16)^(0+512),w
 17366  032E  05CC               	andwf	((??_doAbsMove+10)^(0+512)+2),f
 17367  032F  0851               	movf	(??_doAbsMove+17)^(0+512),w
 17368  0330  05CD               	andwf	((??_doAbsMove+10)^(0+512)+3),f
 17369  0331  084D               	movf	(??_doAbsMove+13)^(0+512),w
 17370  0332  044C               	iorwf	(??_doAbsMove+12)^(0+512),w
 17371  0333  044B               	iorwf	(??_doAbsMove+11)^(0+512),w
 17372  0334  044A               	iorwf	(??_doAbsMove+10)^(0+512),w
 17373  0335  1903               	btfsc	3,2
 17374  0336  2B39               	goto	u8600
 17375  0337  3001               	movlw	1
 17376  0338  2B3A               	goto	u8610
 17377  0339                     u8600:	
 17378  0339  3000               	movlw	0
 17379  033A                     u8610:	
 17380  033A  0748               	addwf	(??_doAbsMove+8)^(0+512),w
 17381  033B  00D2               	movwf	(??_doAbsMove+18)^(0+512)
 17382  033C  0849               	movf	(??_doAbsMove+9)^(0+512),w
 17383  033D  1803               	skipnc
 17384  033E  0A49               	incf	(??_doAbsMove+9)^(0+512),w
 17385  033F  00D3               	movwf	((??_doAbsMove+18)^(0+512)+1)
 17386  0340  0852               	movf	(??_doAbsMove+18)^(0+512),w
 17387  0341  00D4               	movwf	(??_doAbsMove+20)^(0+512)
 17388  0342  0853               	movf	(??_doAbsMove+19)^(0+512),w
 17389  0343  00D5               	movwf	((??_doAbsMove+20)^(0+512)+1)
 17390  0344  3000               	movlw	0
 17391  0345  1BD5               	btfsc	((??_doAbsMove+20)^(0+512)+1),7
 17392  0346  30FF               	movlw	255
 17393  0347  00D6               	movwf	((??_doAbsMove+20)^(0+512)+2)
 17394  0348  00D7               	movwf	((??_doAbsMove+20)^(0+512)+3)
 17395  0349  0021               	movlb	1	; select bank1
 17396  034A  084B               	movf	(doAbsMove@i_1579+1)^(0+128),w
 17397  034B  0024               	movlb	4	; select bank4
 17398  034C  00D9               	movwf	((??_doAbsMove+24)^(0+512)+1)
 17399  034D  0021               	movlb	1	; select bank1
 17400  034E  084A               	movf	doAbsMove@i_1579^(0+128),w
 17401  034F  0024               	movlb	4	; select bank4
 17402  0350  00D8               	movwf	(??_doAbsMove+24)^(0+512)
 17403  0351  35D8               	lslf	(??_doAbsMove+24)^(0+512),f
 17404  0352  0DD9               	rlf	((??_doAbsMove+24)^(0+512)+1),f
 17405  0353  35D8               	lslf	(??_doAbsMove+24)^(0+512),f
 17406  0354  0DD9               	rlf	((??_doAbsMove+24)^(0+512)+1),f
 17407  0355  3090               	movlw	144
 17408  0356  00DA               	movwf	(??_doAbsMove+26)^(0+512)
 17409  0357  3027               	movlw	39
 17410  0358  00DB               	movwf	((??_doAbsMove+26)^(0+512)+1)
 17411  0359  0858               	movf	(??_doAbsMove+24)^(0+512),w
 17412  035A  075A               	addwf	(??_doAbsMove+26)^(0+512),w
 17413  035B  0086               	movwf	6
 17414  035C  0859               	movf	(??_doAbsMove+25)^(0+512),w
 17415  035D  3D5B               	addwfc	(??_doAbsMove+27)^(0+512),w
 17416  035E  0087               	movwf	7
 17417  035F  0854               	movf	(??_doAbsMove+20)^(0+512),w
 17418  0360  0781               	addwf	1,f
 17419  0361  3141               	addfsr 1,1
 17420  0362  0855               	movf	(??_doAbsMove+21)^(0+512),w
 17421  0363  3D81               	addwfc	1,f
 17422  0364  3141               	addfsr 1,1
 17423  0365  0856               	movf	(??_doAbsMove+22)^(0+512),w
 17424  0366  3D81               	addwfc	1,f
 17425  0367  3141               	addfsr 1,1
 17426  0368  0857               	movf	(??_doAbsMove+23)^(0+512),w
 17427  0369  3D81               	addwfc	1,f
 17428  036A  3001               	movlw	1
 17429  036B  0021               	movlb	1	; select bank1
 17430  036C  07CA               	addwf	doAbsMove@i_1579^(0+128),f
 17431  036D  3000               	movlw	0
 17432  036E  3DCB               	addwfc	(doAbsMove@i_1579+1)^(0+128),f
 17433  036F  2AC0               	goto	L33
 17434  0370                     __end_of_doAbsMove:	
 17435                           
 17436                           	psect	text54
 17437  0919                     __ptext54:	
 17438 ;; *************** function _doMove *****************
 17439 ;; Defined at:
 17440 ;;		line 234 in file "main.c"
 17441 ;; Parameters:    Size  Location     Type
 17442 ;;		None
 17443 ;; Auto vars:     Size  Location     Type
 17444 ;;  t               2   36[BANK1 ] int 
 17445 ;;  t               2   34[BANK1 ] int 
 17446 ;; Return value:  Size  Location     Type
 17447 ;;                  2   31[BANK1 ] int 
 17448 ;; Registers used:
 17449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17450 ;; Tracked objects:
 17451 ;;		On entry : 0/0
 17452 ;;		On exit  : 0/0
 17453 ;;		Unchanged: 0/0
 17454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17455 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17456 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17457 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17458 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17459 ;;Total ram usage:        7 bytes
 17460 ;; Hardware stack levels used:    1
 17461 ;; Hardware stack levels required when called:   15
 17462 ;; This function calls:
 17463 ;;		_LEDsOn
 17464 ;;		_TMR0_StartTimer
 17465 ;;		_TMR2_StartTimer
 17466 ;;		_calcHeaterPins
 17467 ;;		_drv_write_DC
 17468 ;;		_printf
 17469 ;; This function is called by:
 17470 ;;		_doAbsMove
 17471 ;;		_doRelMove
 17472 ;;		_execCmd
 17473 ;; This function uses a non-reentrant model
 17474 ;;
 17475                           
 17476                           
 17477                           ;psect for function _doMove
 17478  0919                     _doMove:	
 17479                           
 17480                           ;main.c: 235: printf("doMove\n");
 17481                           
 17482                           ;incstack = 0
 17483 ;; hardware stack exceeded
 17484                           ; Regs used in _doMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17485  0919  3003               	movlw	low (STR_6| (0+32768))
 17486  091A  0021               	movlb	1	; select bank1
 17487  091B  00A0               	movwf	printf@f^(0+128)
 17488  091C  30AA               	movlw	high (STR_6| (0+32768))
 17489  091D  00A1               	movwf	(printf@f^(0+128)+1)
 17490  091E  318E  26CE  3189   	fcall	_printf
 17491                           
 17492                           ;main.c: 237: calcHeaterPins();
 17493  0921  3197  270E  3189   	fcall	_calcHeaterPins
 17494                           
 17495                           ;main.c: 238: do { LATCbits.LATC1 = 1; } while(0);
 17496  0924  0022               	movlb	2	; select bank2
 17497  0925  148E               	bsf	14,1	;volatile
 17498                           
 17499                           ;main.c: 239: LEDsOn(first_top, 1);
 17500  0926  0859               	movf	(_first_top+3)^(0+256),w
 17501  0927  0020               	movlb	0	; select bank0
 17502  0928  00C7               	movwf	LEDsOn@LEDpins+3
 17503  0929  0022               	movlb	2	; select bank2
 17504  092A  0858               	movf	(_first_top+2)^(0+256),w
 17505  092B  0020               	movlb	0	; select bank0
 17506  092C  00C6               	movwf	LEDsOn@LEDpins+2
 17507  092D  0022               	movlb	2	; select bank2
 17508  092E  0857               	movf	(_first_top+1)^(0+256),w
 17509  092F  0020               	movlb	0	; select bank0
 17510  0930  00C5               	movwf	LEDsOn@LEDpins+1
 17511  0931  0022               	movlb	2	; select bank2
 17512  0932  0856               	movf	_first_top^(0+256),w
 17513  0933  0020               	movlb	0	; select bank0
 17514  0934  00C4               	movwf	LEDsOn@LEDpins
 17515  0935  3001               	movlw	1
 17516  0936  00C8               	movwf	LEDsOn@topOrBottom
 17517  0937  3000               	movlw	0
 17518  0938  00C9               	movwf	LEDsOn@topOrBottom+1
 17519  0939  31A5  25DC  3189   	fcall	_LEDsOn
 17520                           
 17521                           ;main.c: 240: LEDsOn(first_bottom,2);
 17522  093C  0022               	movlb	2	; select bank2
 17523  093D  085D               	movf	(_first_bottom+3)^(0+256),w
 17524  093E  0020               	movlb	0	; select bank0
 17525  093F  00C7               	movwf	LEDsOn@LEDpins+3
 17526  0940  0022               	movlb	2	; select bank2
 17527  0941  085C               	movf	(_first_bottom+2)^(0+256),w
 17528  0942  0020               	movlb	0	; select bank0
 17529  0943  00C6               	movwf	LEDsOn@LEDpins+2
 17530  0944  0022               	movlb	2	; select bank2
 17531  0945  085B               	movf	(_first_bottom+1)^(0+256),w
 17532  0946  0020               	movlb	0	; select bank0
 17533  0947  00C5               	movwf	LEDsOn@LEDpins+1
 17534  0948  0022               	movlb	2	; select bank2
 17535  0949  085A               	movf	_first_bottom^(0+256),w
 17536  094A  0020               	movlb	0	; select bank0
 17537  094B  00C4               	movwf	LEDsOn@LEDpins
 17538  094C  3002               	movlw	2
 17539  094D  00C8               	movwf	LEDsOn@topOrBottom
 17540  094E  3000               	movlw	0
 17541  094F  00C9               	movwf	LEDsOn@topOrBottom+1
 17542  0950  31A5  25DC  3189   	fcall	_LEDsOn
 17543                           
 17544                           ;main.c: 241: do { LATCbits.LATC1 = 0; } while(0);
 17545  0953  0022               	movlb	2	; select bank2
 17546  0954  108E               	bcf	14,1	;volatile
 17547                           
 17548                           ;main.c: 242: for(int t=0; t<heater_pre_time_ms; t++) _delay((unsigned long)((1)*(100000
      +                          0/4000.0)));
 17549  0955  0021               	movlb	1	; select bank1
 17550  0956  01C2               	clrf	doMove@t^(0+128)
 17551  0957  01C3               	clrf	(doMove@t+1)^(0+128)
 17552  0958                     l1088:	
 17553  0958  0843               	movf	(doMove@t+1)^(0+128),w
 17554  0959  3A80               	xorlw	128
 17555  095A  00C1               	movwf	??_doMove^(0+128)
 17556  095B  086E               	movf	(_heater_pre_time_ms+1)^(0+128),w
 17557  095C  3A80               	xorlw	128
 17558  095D  0241               	subwf	??_doMove^(0+128),w
 17559  095E  1D03               	skipz
 17560  095F  2962               	goto	u7905
 17561  0960  086D               	movf	_heater_pre_time_ms^(0+128),w
 17562  0961  0242               	subwf	doMove@t^(0+128),w
 17563  0962                     u7905:	
 17564  0962  1803               	btfsc	3,0
 17565  0963  296E               	goto	l7912
 17566  0964  3053               	movlw	83
 17567  0965                     u8987:	
 17568  0965  0B89               	decfsz	9,f
 17569  0966  2965               	goto	u8987
 17570  0967  0000               	nop
 17571  0968  3001               	movlw	1
 17572  0969  0021               	movlb	1	; select bank1
 17573  096A  07C2               	addwf	doMove@t^(0+128),f
 17574  096B  3000               	movlw	0
 17575  096C  3DC3               	addwfc	(doMove@t+1)^(0+128),f
 17576  096D  2958               	goto	l1088
 17577  096E                     l7912:	
 17578                           
 17579                           ;main.c: 243: TMR2_StartTimer();
 17580  096E  31A1  21F8  3189   	fcall	_TMR2_StartTimer
 17581                           
 17582                           ;main.c: 244: TMR0_StartTimer();
 17583  0971  31A1  21F5  3189   	fcall	_TMR0_StartTimer
 17584                           
 17585                           ;main.c: 246: drv_write_DC(drv_peak_val, piezo_on_time_ms);
 17586  0974  0022               	movlb	2	; select bank2
 17587  0975  086F               	movf	(_drv_peak_val+1)^(0+256),w
 17588  0976  0021               	movlb	1	; select bank1
 17589  0977  00B9               	movwf	(drv_write_DC@val+1)^(0+128)
 17590  0978  0022               	movlb	2	; select bank2
 17591  0979  086E               	movf	_drv_peak_val^(0+256),w
 17592  097A  0021               	movlb	1	; select bank1
 17593  097B  00B8               	movwf	drv_write_DC@val^(0+128)
 17594  097C  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 17595  097D  00BB               	movwf	(drv_write_DC@duration_ms+1)^(0+128)
 17596  097E  0869               	movf	_piezo_on_time_ms^(0+128),w
 17597  097F  00BA               	movwf	drv_write_DC@duration_ms^(0+128)
 17598  0980  319C  2430  3189   	fcall	_drv_write_DC
 17599                           
 17600                           ;main.c: 248: for(int t=0; t<heater_post_time_ms; t++) _delay((unsigned long)((1)*(10000
      +                          00/4000.0)));
 17601  0983  0021               	movlb	1	; select bank1
 17602  0984  01C4               	clrf	doMove@t_1562^(0+128)
 17603  0985  01C5               	clrf	(doMove@t_1562+1)^(0+128)
 17604  0986                     l1091:	
 17605  0986  0845               	movf	(doMove@t_1562+1)^(0+128),w
 17606  0987  3A80               	xorlw	128
 17607  0988  00C1               	movwf	??_doMove^(0+128)
 17608  0989  086C               	movf	(_heater_post_time_ms+1)^(0+128),w
 17609  098A  3A80               	xorlw	128
 17610  098B  0241               	subwf	??_doMove^(0+128),w
 17611  098C  1D03               	skipz
 17612  098D  2990               	goto	u7915
 17613  098E  086B               	movf	_heater_post_time_ms^(0+128),w
 17614  098F  0244               	subwf	doMove@t_1562^(0+128),w
 17615  0990                     u7915:	
 17616  0990  1803               	btfsc	3,0
 17617  0991  299C               	goto	l1094
 17618  0992  3053               	movlw	83
 17619  0993                     u8997:	
 17620  0993  0B89               	decfsz	9,f
 17621  0994  2993               	goto	u8997
 17622  0995  0000               	nop
 17623  0996  3001               	movlw	1
 17624  0997  0021               	movlb	1	; select bank1
 17625  0998  07C4               	addwf	doMove@t_1562^(0+128),f
 17626  0999  3000               	movlw	0
 17627  099A  3DC5               	addwfc	(doMove@t_1562+1)^(0+128),f
 17628  099B  2986               	goto	l1091
 17629  099C                     l1094:	
 17630                           ;main.c: 250: do { LATCbits.LATC1 = 1; } while(0);
 17631                           
 17632  099C  0022               	movlb	2	; select bank2
 17633  099D  148E               	bsf	14,1	;volatile
 17634                           
 17635                           ;main.c: 252: return 0;
 17636  099E  0021               	movlb	1	; select bank1
 17637  099F  01BF               	clrf	?_doMove^(0+128)
 17638  09A0  01C0               	clrf	(?_doMove+1)^(0+128)
 17639  09A1  0008               	return
 17640  09A2                     __end_of_doMove:	
 17641                           
 17642                           	psect	text55
 17643  1C30                     __ptext55:	
 17644 ;; *************** function _drv_write_DC *****************
 17645 ;; Defined at:
 17646 ;;		line 106 in file "drv2665.c"
 17647 ;; Parameters:    Size  Location     Type
 17648 ;;  val             2   24[BANK1 ] int 
 17649 ;;  duration_ms     2   26[BANK1 ] int 
 17650 ;; Auto vars:     Size  Location     Type
 17651 ;;  i               2   29[BANK1 ] int 
 17652 ;; Return value:  Size  Location     Type
 17653 ;;                  1    wreg      void 
 17654 ;; Registers used:
 17655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17656 ;; Tracked objects:
 17657 ;;		On entry : 0/0
 17658 ;;		On exit  : 0/0
 17659 ;;		Unchanged: 0/0
 17660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17661 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17662 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17663 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17664 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17665 ;;Total ram usage:        7 bytes
 17666 ;; Hardware stack levels used:    1
 17667 ;; Hardware stack levels required when called:   14
 17668 ;; This function calls:
 17669 ;;		___awdiv
 17670 ;;		_drv_write
 17671 ;;		_fifo_check
 17672 ;;		_printf
 17673 ;; This function is called by:
 17674 ;;		_doMove
 17675 ;; This function uses a non-reentrant model
 17676 ;;
 17677                           
 17678                           
 17679                           ;psect for function _drv_write_DC
 17680  1C30                     _drv_write_DC:	
 17681                           
 17682                           ;drv2665.c: 108: drv_write(0x0b, 0x00);
 17683                           
 17684                           ;incstack = 0
 17685 ;; hardware stack exceeded
 17686                           ; Regs used in _drv_write_DC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17687  1C30  0020               	movlb	0	; select bank0
 17688  1C31  01C9               	clrf	drv_write@data
 17689  1C32  300B               	movlw	11
 17690  1C33  31A6  268A  319C   	fcall	_drv_write
 17691                           
 17692                           ;drv2665.c: 109: for(int i=0;i<duration_ms/5; i++){
 17693  1C36  0021               	movlb	1	; select bank1
 17694  1C37  01BD               	clrf	drv_write_DC@i^(0+128)
 17695  1C38  01BE               	clrf	(drv_write_DC@i+1)^(0+128)
 17696  1C39                     l7678:	
 17697  1C39  3005               	movlw	5
 17698  1C3A  0020               	movlb	0	; select bank0
 17699  1C3B  00B1               	movwf	___awdiv@divisor
 17700  1C3C  3000               	movlw	0
 17701  1C3D  00B2               	movwf	___awdiv@divisor+1
 17702  1C3E  0021               	movlb	1	; select bank1
 17703  1C3F  083B               	movf	(drv_write_DC@duration_ms+1)^(0+128),w
 17704  1C40  0020               	movlb	0	; select bank0
 17705  1C41  00B4               	movwf	___awdiv@dividend+1
 17706  1C42  0021               	movlb	1	; select bank1
 17707  1C43  083A               	movf	drv_write_DC@duration_ms^(0+128),w
 17708  1C44  0020               	movlb	0	; select bank0
 17709  1C45  00B3               	movwf	___awdiv@dividend
 17710  1C46  319C  2480  319C   	fcall	___awdiv
 17711  1C49  0021               	movlb	1	; select bank1
 17712  1C4A  083E               	movf	(drv_write_DC@i+1)^(0+128),w
 17713  1C4B  3A80               	xorlw	128
 17714  1C4C  00BC               	movwf	??_drv_write_DC^(0+128)
 17715  1C4D  0020               	movlb	0	; select bank0
 17716  1C4E  0832               	movf	?___awdiv+1,w
 17717  1C4F  3A80               	xorlw	128
 17718  1C50  0021               	movlb	1	; select bank1
 17719  1C51  023C               	subwf	??_drv_write_DC^(0+128),w
 17720  1C52  1D03               	skipz
 17721  1C53  2C58               	goto	u7525
 17722  1C54  0020               	movlb	0	; select bank0
 17723  1C55  0831               	movf	?___awdiv,w
 17724  1C56  0021               	movlb	1	; select bank1
 17725  1C57  023D               	subwf	drv_write_DC@i^(0+128),w
 17726  1C58                     u7525:	
 17727  1C58  1803               	btfsc	3,0
 17728  1C59  2C6D               	goto	l7680
 17729                           
 17730                           ;drv2665.c: 110: drv_write(0x0b, val);
 17731  1C5A  0021               	movlb	1	; select bank1
 17732  1C5B  0838               	movf	drv_write_DC@val^(0+128),w
 17733  1C5C  00BC               	movwf	??_drv_write_DC^(0+128)
 17734  1C5D  083C               	movf	??_drv_write_DC^(0+128),w
 17735  1C5E  0020               	movlb	0	; select bank0
 17736  1C5F  00C9               	movwf	drv_write@data
 17737  1C60  300B               	movlw	11
 17738  1C61  31A6  268A  319C   	fcall	_drv_write
 17739                           
 17740                           ;drv2665.c: 111: _delay((unsigned long)((20)*(1000000/4000000.0)));
 17741  1C64  3200               	nop2	;2 cycle nop
 17742  1C65  3200               	nop2	;2 cycle nop
 17743  1C66  0000               	nop
 17744  1C67  3001               	movlw	1
 17745  1C68  0021               	movlb	1	; select bank1
 17746  1C69  07BD               	addwf	drv_write_DC@i^(0+128),f
 17747  1C6A  3000               	movlw	0
 17748  1C6B  3DBE               	addwfc	(drv_write_DC@i+1)^(0+128),f
 17749  1C6C  2C39               	goto	l7678
 17750  1C6D                     l7680:	
 17751                           
 17752                           ;drv2665.c: 113: }
 17753                           ;drv2665.c: 116: if(!fifo_check()) printf("fifo not ready!\n");
 17754  1C6D  31A3  23E3  319C   	fcall	_fifo_check
 17755  1C70  1803               	btfsc	3,0
 17756  1C71  2C7A               	goto	l1324
 17757  1C72  30EE               	movlw	low (STR_55| (0+32768))
 17758  1C73  0021               	movlb	1	; select bank1
 17759  1C74  00A0               	movwf	printf@f^(0+128)
 17760  1C75  30A8               	movlw	high (STR_55| (0+32768))
 17761  1C76  00A1               	movwf	(printf@f^(0+128)+1)
 17762  1C77  318E  26CE  319C   	fcall	_printf
 17763  1C7A                     l1324:	
 17764                           
 17765                           ;drv2665.c: 118: drv_write(0x0b, 0x00);
 17766  1C7A  0020               	movlb	0	; select bank0
 17767  1C7B  01C9               	clrf	drv_write@data
 17768  1C7C  300B               	movlw	11
 17769  1C7D  31A6  268A         	fcall	_drv_write
 17770  1C7F  0008               	return
 17771  1C80                     __end_of_drv_write_DC:	
 17772                           
 17773                           	psect	text56
 17774  23E3                     __ptext56:	
 17775 ;; *************** function _fifo_check *****************
 17776 ;; Defined at:
 17777 ;;		line 124 in file "drv2665.c"
 17778 ;; Parameters:    Size  Location     Type
 17779 ;;		None
 17780 ;; Auto vars:     Size  Location     Type
 17781 ;;  reply           1   23[BANK1 ] unsigned char 
 17782 ;; Return value:  Size  Location     Type
 17783 ;;		None               void
 17784 ;; Registers used:
 17785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17786 ;; Tracked objects:
 17787 ;;		On entry : 0/0
 17788 ;;		On exit  : 0/0
 17789 ;;		Unchanged: 0/0
 17790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17792 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17793 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17794 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17795 ;;Total ram usage:        2 bytes
 17796 ;; Hardware stack levels used:    1
 17797 ;; Hardware stack levels required when called:   13
 17798 ;; This function calls:
 17799 ;;		_drv_read
 17800 ;; This function is called by:
 17801 ;;		_drv_write_DC
 17802 ;; This function uses a non-reentrant model
 17803 ;;
 17804                           
 17805                           
 17806                           ;psect for function _fifo_check
 17807  23E3                     _fifo_check:	
 17808                           
 17809                           ;drv2665.c: 126: uint8_t reply;
 17810                           ;drv2665.c: 127: reply = drv_read(0x00);
 17811                           
 17812                           ;incstack = 0
 17813 ;; hardware stack exceeded
 17814                           ; Regs used in _fifo_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17815  23E3  3000               	movlw	0
 17816  23E4  319A  2221  31A3   	fcall	_drv_read
 17817  23E7  0021               	movlb	1	; select bank1
 17818  23E8  0835               	movf	?_drv_read^(0+128),w
 17819  23E9  0020               	movlb	0	; select bank0
 17820  23EA  00CD               	movwf	??_fifo_check
 17821  23EB  084D               	movf	??_fifo_check,w
 17822  23EC  0021               	movlb	1	; select bank1
 17823  23ED  00B7               	movwf	fifo_check@reply^(0+128)
 17824                           
 17825                           ;drv2665.c: 129: return !(reply & 0x01);
 17826  23EE  1C37               	btfss	fifo_check@reply^(0+128),0
 17827  23EF  2BF2               	goto	l7544
 17828  23F0  1003               	clrc
 17829  23F1  0008               	return
 17830  23F2                     l7544:	
 17831  23F2  1403               	setc
 17832  23F3  0008               	return
 17833  23F4                     __end_of_fifo_check:	
 17834                           
 17835                           	psect	text57
 17836  1A21                     __ptext57:	
 17837 ;; *************** function _drv_read *****************
 17838 ;; Defined at:
 17839 ;;		line 84 in file "drv2665.c"
 17840 ;; Parameters:    Size  Location     Type
 17841 ;;  reg             1    wreg     unsigned char 
 17842 ;; Auto vars:     Size  Location     Type
 17843 ;;  reg             1   43[BANK0 ] unsigned char 
 17844 ;;  buff            1   44[BANK0 ] unsigned char 
 17845 ;; Return value:  Size  Location     Type
 17846 ;;                  2   21[BANK1 ] int 
 17847 ;; Registers used:
 17848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17849 ;; Tracked objects:
 17850 ;;		On entry : 0/0
 17851 ;;		On exit  : 0/0
 17852 ;;		Unchanged: 0/0
 17853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17854 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17855 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17856 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17857 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17858 ;;Total ram usage:        6 bytes
 17859 ;; Hardware stack levels used:    1
 17860 ;; Hardware stack levels required when called:   12
 17861 ;; This function calls:
 17862 ;;		_i2c_masterOperation
 17863 ;;		_i2c_setBuffer
 17864 ;;		_printf
 17865 ;; This function is called by:
 17866 ;;		_commCheck
 17867 ;;		_fifo_check
 17868 ;; This function uses a non-reentrant model
 17869 ;;
 17870                           
 17871                           
 17872                           ;psect for function _drv_read
 17873  1A21                     _drv_read:	
 17874                           
 17875                           ;incstack = 0
 17876 ;; hardware stack exceeded
 17877                           ; Regs used in _drv_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17878                           ;drv_read@reg stored from wreg
 17879  1A21  0020               	movlb	0	; select bank0
 17880  1A22  00CB               	movwf	drv_read@reg
 17881                           
 17882                           ;drv2665.c: 86: char buff=0;
 17883  1A23  01CC               	clrf	drv_read@buff
 17884                           
 17885                           ;drv2665.c: 89: i2c_setBuffer(&reg, 1);
 17886  1A24  304B               	movlw	low drv_read@reg
 17887  1A25  00B1               	movwf	i2c_setBuffer@buffer
 17888  1A26  3000               	movlw	high drv_read@reg
 17889  1A27  00B2               	movwf	i2c_setBuffer@buffer+1
 17890  1A28  3001               	movlw	1
 17891  1A29  00B3               	movwf	i2c_setBuffer@bufferSize
 17892  1A2A  3000               	movlw	0
 17893  1A2B  00B4               	movwf	i2c_setBuffer@bufferSize+1
 17894  1A2C  3187  27EB  319A   	fcall	_i2c_setBuffer
 17895                           
 17896                           ;drv2665.c: 90: if(i2c_masterOperation(0) != I2C_NOERR)
 17897  1A2F  3000               	movlw	0
 17898  1A30  31A6  2666  319A   	fcall	_i2c_masterOperation
 17899  1A33  3A00               	xorlw	0
 17900  1A34  1903               	skipnz
 17901  1A35  2A3E               	goto	l7494
 17902                           
 17903                           ;drv2665.c: 91: printf("drv_write error!\n");
 17904  1A36  30CB               	movlw	low (STR_52| (0+32768))
 17905  1A37  0021               	movlb	1	; select bank1
 17906  1A38  00A0               	movwf	printf@f^(0+128)
 17907  1A39  30A8               	movlw	high (STR_52| (0+32768))
 17908  1A3A  00A1               	movwf	(printf@f^(0+128)+1)
 17909  1A3B  318E  26CE  319A   	fcall	_printf
 17910  1A3E                     l7494:	
 17911                           
 17912                           ;drv2665.c: 94: _delay((unsigned long)((100)*(1000000/4000000.0)));
 17913  1A3E  3008               	movlw	8
 17914  1A3F                     u9007:	
 17915  1A3F  0B89               	decfsz	9,f
 17916  1A40  2A3F               	goto	u9007
 17917  1A41  0000               	nop
 17918                           
 17919                           ;drv2665.c: 97: i2c_setBuffer(&buff, 1);
 17920  1A42  304C               	movlw	low drv_read@buff
 17921  1A43  0020               	movlb	0	; select bank0
 17922  1A44  00B1               	movwf	i2c_setBuffer@buffer
 17923  1A45  3000               	movlw	high drv_read@buff
 17924  1A46  00B2               	movwf	i2c_setBuffer@buffer+1
 17925  1A47  3001               	movlw	1
 17926  1A48  00B3               	movwf	i2c_setBuffer@bufferSize
 17927  1A49  3000               	movlw	0
 17928  1A4A  00B4               	movwf	i2c_setBuffer@bufferSize+1
 17929  1A4B  3187  27EB  319A   	fcall	_i2c_setBuffer
 17930                           
 17931                           ;drv2665.c: 99: if(i2c_masterOperation(1) != I2C_NOERR)
 17932  1A4E  3001               	movlw	1
 17933  1A4F  31A6  2666  319A   	fcall	_i2c_masterOperation
 17934  1A52  3A00               	xorlw	0
 17935  1A53  1903               	skipnz
 17936  1A54  2A5C               	goto	l7502
 17937                           
 17938                           ;drv2665.c: 100: printf("drv_read error!\n");
 17939  1A55  30DD               	movlw	low (STR_54| (0+32768))
 17940  1A56  0021               	movlb	1	; select bank1
 17941  1A57  00A0               	movwf	printf@f^(0+128)
 17942  1A58  30A8               	movlw	high (STR_54| (0+32768))
 17943  1A59  00A1               	movwf	(printf@f^(0+128)+1)
 17944  1A5A  318E  26CE         	fcall	_printf
 17945  1A5C                     l7502:	
 17946                           
 17947                           ;drv2665.c: 102: return buff;
 17948  1A5C  0020               	movlb	0	; select bank0
 17949  1A5D  084C               	movf	drv_read@buff,w
 17950  1A5E  00C9               	movwf	??_drv_read
 17951  1A5F  01CA               	clrf	??_drv_read+1
 17952  1A60  0849               	movf	??_drv_read,w
 17953  1A61  0021               	movlb	1	; select bank1
 17954  1A62  00B5               	movwf	?_drv_read^(0+128)
 17955  1A63  0020               	movlb	0	; select bank0
 17956  1A64  084A               	movf	??_drv_read+1,w
 17957  1A65  0021               	movlb	1	; select bank1
 17958  1A66  00B6               	movwf	(?_drv_read+1)^(0+128)
 17959  1A67  0008               	return
 17960  1A68                     __end_of_drv_read:	
 17961                           
 17962                           	psect	text58
 17963  268A                     __ptext58:	
 17964 ;; *************** function _drv_write *****************
 17965 ;; Defined at:
 17966 ;;		line 57 in file "drv2665.c"
 17967 ;; Parameters:    Size  Location     Type
 17968 ;;  reg             1    wreg     unsigned char 
 17969 ;;  data            1   41[BANK0 ] unsigned char 
 17970 ;; Auto vars:     Size  Location     Type
 17971 ;;  reg             1   43[BANK0 ] unsigned char 
 17972 ;;  buff            2   44[BANK0 ] unsigned char [2]
 17973 ;; Return value:  Size  Location     Type
 17974 ;;                  1    wreg      void 
 17975 ;; Registers used:
 17976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17977 ;; Tracked objects:
 17978 ;;		On entry : 0/0
 17979 ;;		On exit  : 0/0
 17980 ;;		Unchanged: 0/0
 17981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17982 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17983 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17984 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17985 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17986 ;;Total ram usage:        5 bytes
 17987 ;; Hardware stack levels used:    1
 17988 ;; Hardware stack levels required when called:   12
 17989 ;; This function calls:
 17990 ;;		_i2c_masterOperation
 17991 ;;		_i2c_setBuffer
 17992 ;;		_printf
 17993 ;; This function is called by:
 17994 ;;		_setDrvGain
 17995 ;;		_drv_init
 17996 ;;		_drv_reset
 17997 ;;		_drv_write_DC
 17998 ;;		_drv_outputSine
 17999 ;;		_drv_outputWave
 18000 ;; This function uses a non-reentrant model
 18001 ;;
 18002                           
 18003                           
 18004                           ;psect for function _drv_write
 18005  268A                     _drv_write:	
 18006                           
 18007                           ;incstack = 0
 18008                           ; Regs used in _drv_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18009                           ;drv_write@reg stored from wreg
 18010  268A  0020               	movlb	0	; select bank0
 18011  268B  00CB               	movwf	drv_write@reg
 18012                           
 18013                           ;drv2665.c: 62: uint8_t buff[2];
 18014                           ;drv2665.c: 64: buff[0] = reg;
 18015  268C  084B               	movf	drv_write@reg,w
 18016  268D  00CA               	movwf	??_drv_write
 18017  268E  084A               	movf	??_drv_write,w
 18018  268F  00CC               	movwf	drv_write@buff
 18019                           
 18020                           ;drv2665.c: 65: buff[1] = data;
 18021  2690  0849               	movf	drv_write@data,w
 18022  2691  00CA               	movwf	??_drv_write
 18023  2692  084A               	movf	??_drv_write,w
 18024  2693  00CD               	movwf	drv_write@buff+1
 18025                           
 18026                           ;drv2665.c: 68: i2c_setBuffer(buff, 2);
 18027  2694  304C               	movlw	low drv_write@buff
 18028  2695  00B1               	movwf	i2c_setBuffer@buffer
 18029  2696  3000               	movlw	high drv_write@buff
 18030  2697  00B2               	movwf	i2c_setBuffer@buffer+1
 18031  2698  3002               	movlw	2
 18032  2699  00B3               	movwf	i2c_setBuffer@bufferSize
 18033  269A  3000               	movlw	0
 18034  269B  00B4               	movwf	i2c_setBuffer@bufferSize+1
 18035  269C  3187  27EB  31A6   	fcall	_i2c_setBuffer
 18036                           
 18037                           ;drv2665.c: 69: if(i2c_masterOperation(0) != I2C_NOERR)
 18038  269F  3000               	movlw	0
 18039  26A0  31A6  2666  31A6   	fcall	_i2c_masterOperation
 18040  26A3  3A00               	xorlw	0
 18041  26A4  1903               	skipnz
 18042  26A5  0008               	return
 18043                           
 18044                           ;drv2665.c: 70: printf("drv_write error!\n");
 18045  26A6  30CB               	movlw	low (STR_52| (0+32768))
 18046  26A7  0021               	movlb	1	; select bank1
 18047  26A8  00A0               	movwf	printf@f^(0+128)
 18048  26A9  30A8               	movlw	high (STR_52| (0+32768))
 18049  26AA  00A1               	movwf	(printf@f^(0+128)+1)
 18050  26AB  318E  26CE         	fcall	_printf
 18051  26AD  0008               	return
 18052  26AE                     __end_of_drv_write:	
 18053                           
 18054                           	psect	text59
 18055  0ECE                     __ptext59:	
 18056 ;; *************** function _printf *****************
 18057 ;; Defined at:
 18058 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 18059 ;; Parameters:    Size  Location     Type
 18060 ;;  f               2    0[BANK1 ] PTR const unsigned char 
 18061 ;;		 -> STR_81(23), STR_80(3), STR_55(17), STR_54(17), 
 18062 ;;		 -> STR_53(18), STR_52(18), STR_51(17), STR_50(28), 
 18063 ;;		 -> STR_49(9), STR_48(9), STR_47(25), STR_46(11), 
 18064 ;;		 -> STR_45(8), STR_44(8), STR_43(8), STR_42(31), 
 18065 ;;		 -> STR_41(11), STR_40(8), STR_39(8), STR_38(8), 
 18066 ;;		 -> STR_37(26), STR_36(30), STR_35(2), STR_34(2), 
 18067 ;;		 -> STR_33(2), STR_32(2), STR_31(4), STR_30(2), 
 18068 ;;		 -> STR_29(4), STR_28(3), STR_27(3), STR_26(3), 
 18069 ;;		 -> STR_25(3), STR_24(3), STR_23(3), STR_22(3), 
 18070 ;;		 -> STR_21(3), STR_20(3), STR_19(3), STR_18(3), 
 18071 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(4), 
 18072 ;;		 -> STR_13(3), STR_12(16), STR_11(11), STR_10(16), 
 18073 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(8), 
 18074 ;;		 -> STR_5(13), STR_4(15), STR_3(16), STR_2(2), 
 18075 ;;		 -> STR_1(4), 
 18076 ;; Auto vars:     Size  Location     Type
 18077 ;;  val             4   14[BANK1 ] unsigned long 
 18078 ;;  tmpval          4    0        struct .
 18079 ;;  prec            2   12[BANK1 ] int 
 18080 ;;  cp              2    0        PTR const unsigned char 
 18081 ;;  len             2    0        unsigned int 
 18082 ;;  c               1   20[BANK1 ] char 
 18083 ;;  ap              1   19[BANK1 ] PTR void [1]
 18084 ;;		 -> ?_printf(2), 
 18085 ;;  flag            1   18[BANK1 ] unsigned char 
 18086 ;; Return value:  Size  Location     Type
 18087 ;;                  2    0[BANK1 ] int 
 18088 ;; Registers used:
 18089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18090 ;; Tracked objects:
 18091 ;;		On entry : 0/0
 18092 ;;		On exit  : 0/0
 18093 ;;		Unchanged: 0/0
 18094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18095 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18096 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18097 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18098 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18099 ;;Total ram usage:       21 bytes
 18100 ;; Hardware stack levels used:    1
 18101 ;; Hardware stack levels required when called:    8
 18102 ;; This function calls:
 18103 ;;		___lldiv
 18104 ;;		___llmod
 18105 ;;		_putch
 18106 ;; This function is called by:
 18107 ;;		_LED_test_openshort
 18108 ;;		_LED_getData
 18109 ;;		_main
 18110 ;;		_main_initialize
 18111 ;;		_doMove
 18112 ;;		_startRelMove
 18113 ;;		_startAbsMove
 18114 ;;		_doAbsMove
 18115 ;;		_doRelMove
 18116 ;;		_zeroPosition
 18117 ;;		_getPosition
 18118 ;;		_setDrvPeak
 18119 ;;		_setDrvGain
 18120 ;;		_setDrvPiezoOnTime
 18121 ;;		_setHeaterPreTime
 18122 ;;		_setHeaterPostTime
 18123 ;;		_setLEDBrightnessRange
 18124 ;;		_setLEDPwr
 18125 ;;		_setHeaterToggle
 18126 ;;		_timedActiveHeatOn
 18127 ;;		_setActive
 18128 ;;		_setMoveMask
 18129 ;;		_getActive
 18130 ;;		_getMoveMask
 18131 ;;		_getMotionStatus
 18132 ;;		_commCheck
 18133 ;;		_drv_init
 18134 ;;		_drv_write
 18135 ;;		_drv_read
 18136 ;;		_drv_write_DC
 18137 ;;		_execCmd
 18138 ;;		_stop
 18139 ;; This function uses a non-reentrant model
 18140 ;;
 18141                           
 18142                           
 18143                           ;psect for function _printf
 18144  0ECE                     _printf:	
 18145                           
 18146                           ;doprnt.c: 466: va_list ap;
 18147                           ;doprnt.c: 499: signed char c;
 18148                           ;doprnt.c: 504: int prec;
 18149                           ;doprnt.c: 508: unsigned char flag;
 18150                           ;doprnt.c: 523: union {
 18151                           ;doprnt.c: 524: unsigned long vd;
 18152                           ;doprnt.c: 525: double integ;
 18153                           ;doprnt.c: 526: } tmpval;
 18154                           ;doprnt.c: 528: unsigned long val;
 18155                           ;doprnt.c: 529: unsigned len;
 18156                           ;doprnt.c: 530: const char * cp;
 18157                           ;doprnt.c: 533: *ap = __va_start();
 18158                           
 18159                           ;incstack = 0
 18160                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18161  0ECE  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 18162  0ECF  0021               	movlb	1	; select bank1
 18163  0ED0  00A6               	movwf	??_printf^(0+128)
 18164  0ED1  0826               	movf	??_printf^(0+128),w
 18165  0ED2  00B3               	movwf	printf@ap^(0+128)
 18166  0ED3                     l7432:	
 18167                           ;doprnt.c: 536: while(c = *f++) {
 18168                           
 18169  0ED3  0021               	movlb	1	; select bank1
 18170  0ED4  0821               	movf	(printf@f+1)^(0+128),w
 18171  0ED5  00A7               	movwf	(??_printf^(0+128)+1)
 18172  0ED6  0820               	movf	printf@f^(0+128),w
 18173  0ED7  00A6               	movwf	??_printf^(0+128)
 18174  0ED8  0AA0               	incf	printf@f^(0+128),f
 18175  0ED9  1903               	skipnz
 18176  0EDA  0AA1               	incf	(printf@f+1)^(0+128),f
 18177  0EDB  0826               	movf	??_printf^(0+128),w
 18178  0EDC  0084               	movwf	4
 18179  0EDD  0827               	movf	(??_printf+1)^(0+128),w
 18180  0EDE  0085               	movwf	5
 18181  0EDF  0800               	movf	0,w	;code access
 18182  0EE0  00A8               	movwf	(??_printf+2)^(0+128)
 18183  0EE1  0828               	movf	(??_printf+2)^(0+128),w
 18184  0EE2  00B4               	movwf	printf@c^(0+128)
 18185  0EE3  0834               	movf	printf@c^(0+128),w
 18186  0EE4  1903               	btfsc	3,2
 18187  0EE5  0008               	return
 18188                           
 18189                           ;doprnt.c: 538: if(c != '%')
 18190  0EE6  3025               	movlw	37
 18191  0EE7  0634               	xorwf	printf@c^(0+128),w
 18192  0EE8  1903               	btfsc	3,2
 18193  0EE9  2EEF               	goto	l7378
 18194                           
 18195                           ;doprnt.c: 540: {
 18196                           ;doprnt.c: 541: (putch(c) );
 18197  0EEA  0834               	movf	printf@c^(0+128),w
 18198  0EEB  31A2  227A  318E   	fcall	_putch
 18199                           
 18200                           ;doprnt.c: 542: continue;
 18201  0EEE  2ED3               	goto	l7432
 18202  0EEF                     l7378:	
 18203                           
 18204                           ;doprnt.c: 543: }
 18205                           ;doprnt.c: 548: flag = 0;
 18206  0EEF  0021               	movlb	1	; select bank1
 18207  0EF0  01B2               	clrf	printf@flag^(0+128)
 18208                           
 18209                           ;doprnt.c: 635: switch(c = *f++) {
 18210                           
 18211                           ;doprnt.c: 633: loop:
 18212  0EF1  2EF6               	goto	l7382
 18213  0EF2                     l1477:	
 18214                           ;doprnt.c: 641: case 'l':
 18215                           
 18216                           ;doprnt.c: 638: goto alldone;
 18217                           
 18218                           ;doprnt.c: 637: case 0:
 18219                           
 18220                           
 18221                           ;doprnt.c: 643: flag |= 0x10;
 18222  0EF2  1632               	bsf	printf@flag^(0+128),4
 18223                           
 18224                           ;doprnt.c: 644: goto loop;
 18225  0EF3  2EF6               	goto	l7382
 18226  0EF4                     l1482:	
 18227                           ;doprnt.c: 817: case 'u':
 18228                           
 18229                           ;doprnt.c: 813: continue;
 18230                           
 18231                           ;doprnt.c: 802: default:
 18232                           
 18233                           ;doprnt.c: 698: case 'i':
 18234                           ;doprnt.c: 699: break;
 18235                           
 18236                           ;doprnt.c: 697: case 'd':
 18237                           
 18238                           
 18239                           ;doprnt.c: 818: flag |= 0x40;
 18240  0EF4  1732               	bsf	printf@flag^(0+128),6
 18241                           
 18242                           ;doprnt.c: 822: }
 18243                           
 18244                           ;doprnt.c: 819: break;
 18245  0EF5  2F13               	goto	l1480
 18246  0EF6                     l7382:	
 18247  0EF6  0821               	movf	(printf@f+1)^(0+128),w
 18248  0EF7  00A7               	movwf	(??_printf^(0+128)+1)
 18249  0EF8  0820               	movf	printf@f^(0+128),w
 18250  0EF9  00A6               	movwf	??_printf^(0+128)
 18251  0EFA  0AA0               	incf	printf@f^(0+128),f
 18252  0EFB  1903               	skipnz
 18253  0EFC  0AA1               	incf	(printf@f+1)^(0+128),f
 18254  0EFD  0826               	movf	??_printf^(0+128),w
 18255  0EFE  0084               	movwf	4
 18256  0EFF  0827               	movf	(??_printf+1)^(0+128),w
 18257  0F00  0085               	movwf	5
 18258  0F01  0800               	movf	0,w	;code access
 18259  0F02  00B4               	movwf	printf@c^(0+128)
 18260                           
 18261                           ; Switch size 1, requested type "space"
 18262                           ; Number of cases is 5, Range of values is 0 to 117
 18263                           ; switch strategies available:
 18264                           ; Name         Instructions Cycles
 18265                           ; simple_byte           16     9 (average)
 18266                           ; direct_byte          242     6 (fixed)
 18267                           ; jumptable            260     6 (fixed)
 18268                           ;	Chosen strategy is simple_byte
 18269  0F03  3A00               	xorlw	0	; case 0
 18270  0F04  1903               	skipnz
 18271  0F05  2FFF               	goto	l1498
 18272  0F06  3A64               	xorlw	100	; case 100
 18273  0F07  1903               	skipnz
 18274  0F08  2F13               	goto	l1480
 18275  0F09  3A0D               	xorlw	13	; case 105
 18276  0F0A  1903               	skipnz
 18277  0F0B  2F13               	goto	l1480
 18278  0F0C  3A05               	xorlw	5	; case 108
 18279  0F0D  1903               	skipnz
 18280  0F0E  2EF2               	goto	l1477
 18281  0F0F  3A19               	xorlw	25	; case 117
 18282  0F10  1903               	skipnz
 18283  0F11  2EF4               	goto	l1482
 18284  0F12  2ED3               	goto	l7432
 18285  0F13                     l1480:	
 18286                           
 18287                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 18288  0F13  1B32               	btfsc	printf@flag^(0+128),6
 18289  0F14  2F4A               	goto	l1483
 18290                           
 18291                           ;doprnt.c: 1253: {
 18292                           ;doprnt.c: 1255: if(flag & 0x10)
 18293  0F15  1E32               	btfss	printf@flag^(0+128),4
 18294  0F16  2F24               	goto	l7390
 18295                           
 18296                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 18297  0F17  0833               	movf	printf@ap^(0+128),w
 18298  0F18  0086               	movwf	6
 18299  0F19  0187               	clrf	7
 18300  0F1A  3F40               	moviw [0]fsr1
 18301  0F1B  00AE               	movwf	printf@val^(0+128)
 18302  0F1C  3F41               	moviw [1]fsr1
 18303  0F1D  00AF               	movwf	(printf@val+1)^(0+128)
 18304  0F1E  3F42               	moviw [2]fsr1
 18305  0F1F  00B0               	movwf	(printf@val+2)^(0+128)
 18306  0F20  3F43               	moviw [3]fsr1
 18307  0F21  00B1               	movwf	(printf@val+3)^(0+128)
 18308  0F22  3004               	movlw	4
 18309  0F23  2F35               	goto	L34
 18310  0F24                     l7390:	
 18311                           
 18312                           ;doprnt.c: 1257: else
 18313                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 18314  0F24  0833               	movf	printf@ap^(0+128),w
 18315  0F25  0086               	movwf	6
 18316  0F26  0187               	clrf	7
 18317  0F27  3F40               	moviw [0]fsr1
 18318  0F28  00A6               	movwf	??_printf^(0+128)
 18319  0F29  3F41               	moviw [1]fsr1
 18320  0F2A  00A7               	movwf	(??_printf^(0+128)+1)
 18321  0F2B  0826               	movf	??_printf^(0+128),w
 18322  0F2C  00AE               	movwf	printf@val^(0+128)
 18323  0F2D  0827               	movf	(??_printf+1)^(0+128),w
 18324  0F2E  00AF               	movwf	(printf@val+1)^(0+128)
 18325  0F2F  0D89               	rlf	9,f
 18326  0F30  3B89               	subwfb	9,f
 18327  0F31  0989               	comf	9,f
 18328  0F32  00B0               	movwf	(printf@val+2)^(0+128)
 18329  0F33  00B1               	movwf	(printf@val+3)^(0+128)
 18330  0F34  3002               	movlw	2
 18331  0F35                     L34:	
 18332  0F35  00A6               	movwf	??_printf^(0+128)
 18333  0F36  0826               	movf	??_printf^(0+128),w
 18334  0F37  07B3               	addwf	printf@ap^(0+128),f
 18335                           
 18336                           ;doprnt.c: 1261: if((long)val < 0) {
 18337  0F38  1FB1               	btfss	(printf@val+3)^(0+128),7
 18338  0F39  2F6A               	goto	l7408
 18339                           
 18340                           ;doprnt.c: 1262: flag |= 0x03;
 18341  0F3A  3003               	movlw	3
 18342  0F3B  00A6               	movwf	??_printf^(0+128)
 18343  0F3C  0826               	movf	??_printf^(0+128),w
 18344  0F3D  04B2               	iorwf	printf@flag^(0+128),f
 18345                           
 18346                           ;doprnt.c: 1263: val = -val;
 18347  0F3E  09AE               	comf	printf@val^(0+128),f
 18348  0F3F  09AF               	comf	(printf@val+1)^(0+128),f
 18349  0F40  09B0               	comf	(printf@val+2)^(0+128),f
 18350  0F41  09B1               	comf	(printf@val+3)^(0+128),f
 18351  0F42  0AAE               	incf	printf@val^(0+128),f
 18352  0F43  1903               	skipnz
 18353  0F44  0AAF               	incf	(printf@val+1)^(0+128),f
 18354  0F45  1903               	skipnz
 18355  0F46  0AB0               	incf	(printf@val+2)^(0+128),f
 18356  0F47  1903               	skipnz
 18357  0F48  0AB1               	incf	(printf@val+3)^(0+128),f
 18358                           
 18359                           ;doprnt.c: 1264: }
 18360                           ;doprnt.c: 1266: }
 18361  0F49  2F6A               	goto	l7408
 18362  0F4A                     l1483:	
 18363                           
 18364                           ;doprnt.c: 1268: else
 18365                           ;doprnt.c: 1273: {
 18366                           ;doprnt.c: 1281: if(flag & 0x10)
 18367  0F4A  1E32               	btfss	printf@flag^(0+128),4
 18368  0F4B  2F59               	goto	l7404
 18369                           
 18370                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 18371  0F4C  0833               	movf	printf@ap^(0+128),w
 18372  0F4D  0086               	movwf	6
 18373  0F4E  0187               	clrf	7
 18374  0F4F  3F40               	moviw [0]fsr1
 18375  0F50  00AE               	movwf	printf@val^(0+128)
 18376  0F51  3F41               	moviw [1]fsr1
 18377  0F52  00AF               	movwf	(printf@val+1)^(0+128)
 18378  0F53  3F42               	moviw [2]fsr1
 18379  0F54  00B0               	movwf	(printf@val+2)^(0+128)
 18380  0F55  3F43               	moviw [3]fsr1
 18381  0F56  00B1               	movwf	(printf@val+3)^(0+128)
 18382  0F57  3004               	movlw	4
 18383  0F58  2F67               	goto	L35
 18384  0F59                     l7404:	
 18385                           
 18386                           ;doprnt.c: 1283: else
 18387                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 18388  0F59  0833               	movf	printf@ap^(0+128),w
 18389  0F5A  0086               	movwf	6
 18390  0F5B  0187               	clrf	7
 18391  0F5C  3F40               	moviw [0]fsr1
 18392  0F5D  00A6               	movwf	??_printf^(0+128)
 18393  0F5E  3F41               	moviw [1]fsr1
 18394  0F5F  00A7               	movwf	(??_printf^(0+128)+1)
 18395  0F60  0826               	movf	??_printf^(0+128),w
 18396  0F61  00AE               	movwf	printf@val^(0+128)
 18397  0F62  0827               	movf	(??_printf+1)^(0+128),w
 18398  0F63  00AF               	movwf	(printf@val^(0+128)+1)
 18399  0F64  01B0               	clrf	(printf@val^(0+128)+2)
 18400  0F65  01B1               	clrf	(printf@val^(0+128)+3)
 18401  0F66  3002               	movlw	2
 18402  0F67                     L35:	
 18403  0F67  00A6               	movwf	??_printf^(0+128)
 18404  0F68  0826               	movf	??_printf^(0+128),w
 18405  0F69  07B3               	addwf	printf@ap^(0+128),f
 18406  0F6A                     l7408:	
 18407                           
 18408                           ;doprnt.c: 1287: }
 18409                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 18410  0F6A  01B4               	clrf	printf@c^(0+128)
 18411  0F6B  0AB4               	incf	printf@c^(0+128),f
 18412  0F6C  300A               	movlw	10
 18413  0F6D  0634               	xorwf	printf@c^(0+128),w
 18414  0F6E  1903               	btfsc	3,2
 18415  0F6F  2F9D               	goto	l7420
 18416  0F70                     l7414:	
 18417                           
 18418                           ;doprnt.c: 1306: if(val < dpowers[c])
 18419  0F70  0834               	movf	printf@c^(0+128),w
 18420  0F71  00A6               	movwf	??_printf^(0+128)
 18421  0F72  01A7               	clrf	(??_printf^(0+128)+1)
 18422  0F73  35A6               	lslf	??_printf^(0+128),f
 18423  0F74  0DA7               	rlf	(??_printf^(0+128)+1),f
 18424  0F75  35A6               	lslf	??_printf^(0+128),f
 18425  0F76  0DA7               	rlf	(??_printf^(0+128)+1),f
 18426  0F77  3000               	movlw	low (_dpowers| (0+32768))
 18427  0F78  0726               	addwf	??_printf^(0+128),w
 18428  0F79  0084               	movwf	4
 18429  0F7A  30A8               	movlw	high (_dpowers| (0+32768))
 18430  0F7B  3D27               	addwfc	(??_printf+1)^(0+128),w
 18431  0F7C  0085               	movwf	5
 18432  0F7D  3F00               	moviw [0]fsr0
 18433  0F7E  00A8               	movwf	(??_printf+2)^(0+128)
 18434  0F7F  3F01               	moviw [1]fsr0
 18435  0F80  00A9               	movwf	((??_printf+2)^(0+128)+1)
 18436  0F81  3F02               	moviw [2]fsr0
 18437  0F82  00AA               	movwf	((??_printf+2)^(0+128)+2)
 18438  0F83  3F03               	moviw [3]fsr0
 18439  0F84  00AB               	movwf	((??_printf+2)^(0+128)+3)
 18440  0F85  082B               	movf	(??_printf+5)^(0+128),w
 18441  0F86  0231               	subwf	(printf@val+3)^(0+128),w
 18442  0F87  1D03               	skipz
 18443  0F88  2F93               	goto	u7015
 18444  0F89  082A               	movf	(??_printf+4)^(0+128),w
 18445  0F8A  0230               	subwf	(printf@val+2)^(0+128),w
 18446  0F8B  1D03               	skipz
 18447  0F8C  2F93               	goto	u7015
 18448  0F8D  0829               	movf	(??_printf+3)^(0+128),w
 18449  0F8E  022F               	subwf	(printf@val+1)^(0+128),w
 18450  0F8F  1D03               	skipz
 18451  0F90  2F93               	goto	u7015
 18452  0F91  0828               	movf	(??_printf+2)^(0+128),w
 18453  0F92  022E               	subwf	printf@val^(0+128),w
 18454  0F93                     u7015:	
 18455  0F93  1C03               	btfss	3,0
 18456  0F94  2F9D               	goto	l7420
 18457                           
 18458                           ;doprnt.c: 1307: break;
 18459  0F95  3001               	movlw	1
 18460  0F96  00A6               	movwf	??_printf^(0+128)
 18461  0F97  0826               	movf	??_printf^(0+128),w
 18462  0F98  07B4               	addwf	printf@c^(0+128),f
 18463  0F99  300A               	movlw	10
 18464  0F9A  0634               	xorwf	printf@c^(0+128),w
 18465  0F9B  1D03               	btfss	3,2
 18466  0F9C  2F70               	goto	l7414
 18467  0F9D                     l7420:	
 18468                           
 18469                           ;doprnt.c: 1422: {
 18470                           ;doprnt.c: 1438: if(flag & 0x03)
 18471  0F9D  0832               	movf	printf@flag^(0+128),w
 18472  0F9E  3903               	andlw	3
 18473  0F9F  1903               	btfsc	3,2
 18474  0FA0  2FA5               	goto	l7424
 18475                           
 18476                           ;doprnt.c: 1439: (putch('-') );
 18477  0FA1  302D               	movlw	45
 18478  0FA2  31A2  227A  318E   	fcall	_putch
 18479  0FA5                     l7424:	
 18480                           
 18481                           ;doprnt.c: 1469: }
 18482                           ;doprnt.c: 1472: prec = c;
 18483  0FA5  0021               	movlb	1	; select bank1
 18484  0FA6  0834               	movf	printf@c^(0+128),w
 18485  0FA7  00AC               	movwf	printf@prec^(0+128)
 18486  0FA8  01AD               	clrf	(printf@prec+1)^(0+128)
 18487  0FA9  1BAC               	btfsc	printf@prec^(0+128),7
 18488  0FAA  03AD               	decf	(printf@prec+1)^(0+128),f
 18489  0FAB                     l7430:	
 18490                           ;doprnt.c: 1474: while(prec--) {
 18491                           
 18492  0FAB  30FF               	movlw	255
 18493  0FAC  0021               	movlb	1	; select bank1
 18494  0FAD  07AC               	addwf	printf@prec^(0+128),f
 18495  0FAE  30FF               	movlw	255
 18496  0FAF  3DAD               	addwfc	(printf@prec+1)^(0+128),f
 18497  0FB0  0A2C               	incf	printf@prec^(0+128),w
 18498  0FB1  1903               	btfsc	3,2
 18499  0FB2  0A2D               	incf	(printf@prec+1)^(0+128),w
 18500  0FB3  1903               	btfsc	3,2
 18501  0FB4  2ED3               	goto	l7432
 18502                           
 18503                           ;doprnt.c: 1478: {
 18504                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 18505  0FB5  3000               	movlw	0
 18506  0FB6  0020               	movlb	0	; select bank0
 18507  0FB7  00C2               	movwf	___llmod@divisor+3
 18508  0FB8  3000               	movlw	0
 18509  0FB9  00C1               	movwf	___llmod@divisor+2
 18510  0FBA  3000               	movlw	0
 18511  0FBB  00C0               	movwf	___llmod@divisor+1
 18512  0FBC  300A               	movlw	10
 18513  0FBD  00BF               	movwf	___llmod@divisor
 18514  0FBE  0021               	movlb	1	; select bank1
 18515  0FBF  082D               	movf	(printf@prec+1)^(0+128),w
 18516  0FC0  0085               	movwf	5
 18517  0FC1  082C               	movf	printf@prec^(0+128),w
 18518  0FC2  0084               	movwf	4
 18519  0FC3  3584               	lslf	4,f
 18520  0FC4  0D85               	rlf	5,f
 18521  0FC5  3584               	lslf	4,f
 18522  0FC6  0D85               	rlf	5,f
 18523  0FC7  3000               	movlw	low (_dpowers| (0+32768))
 18524  0FC8  0784               	addwf	4,f
 18525  0FC9  30A8               	movlw	high (_dpowers| (0+32768))
 18526  0FCA  3D85               	addwfc	5,f
 18527  0FCB  3F00               	moviw [0]fsr0
 18528  0FCC  0020               	movlb	0	; select bank0
 18529  0FCD  00B1               	movwf	___lldiv@divisor
 18530  0FCE  3F01               	moviw [1]fsr0
 18531  0FCF  00B2               	movwf	___lldiv@divisor+1
 18532  0FD0  3F02               	moviw [2]fsr0
 18533  0FD1  00B3               	movwf	___lldiv@divisor+2
 18534  0FD2  3F03               	moviw [3]fsr0
 18535  0FD3  00B4               	movwf	___lldiv@divisor+3
 18536  0FD4  0021               	movlb	1	; select bank1
 18537  0FD5  0831               	movf	(printf@val+3)^(0+128),w
 18538  0FD6  0020               	movlb	0	; select bank0
 18539  0FD7  00B8               	movwf	___lldiv@dividend+3
 18540  0FD8  0021               	movlb	1	; select bank1
 18541  0FD9  0830               	movf	(printf@val+2)^(0+128),w
 18542  0FDA  0020               	movlb	0	; select bank0
 18543  0FDB  00B7               	movwf	___lldiv@dividend+2
 18544  0FDC  0021               	movlb	1	; select bank1
 18545  0FDD  082F               	movf	(printf@val+1)^(0+128),w
 18546  0FDE  0020               	movlb	0	; select bank0
 18547  0FDF  00B6               	movwf	___lldiv@dividend+1
 18548  0FE0  0021               	movlb	1	; select bank1
 18549  0FE1  082E               	movf	printf@val^(0+128),w
 18550  0FE2  0020               	movlb	0	; select bank0
 18551  0FE3  00B5               	movwf	___lldiv@dividend
 18552  0FE4  319D  2524  318E   	fcall	___lldiv
 18553  0FE7  0020               	movlb	0	; select bank0
 18554  0FE8  0834               	movf	?___lldiv+3,w
 18555  0FE9  00C6               	movwf	___llmod@dividend+3
 18556  0FEA  0833               	movf	?___lldiv+2,w
 18557  0FEB  00C5               	movwf	___llmod@dividend+2
 18558  0FEC  0832               	movf	?___lldiv+1,w
 18559  0FED  00C4               	movwf	___llmod@dividend+1
 18560  0FEE  0831               	movf	?___lldiv,w
 18561  0FEF  00C3               	movwf	___llmod@dividend
 18562  0FF0  3199  2157  318E   	fcall	___llmod
 18563  0FF3  0020               	movlb	0	; select bank0
 18564  0FF4  083F               	movf	?___llmod,w
 18565  0FF5  3E30               	addlw	48
 18566  0FF6  0021               	movlb	1	; select bank1
 18567  0FF7  00A6               	movwf	??_printf^(0+128)
 18568  0FF8  0826               	movf	??_printf^(0+128),w
 18569  0FF9  00B4               	movwf	printf@c^(0+128)
 18570                           
 18571                           ;doprnt.c: 1523: }
 18572                           ;doprnt.c: 1524: (putch(c) );
 18573  0FFA  0834               	movf	printf@c^(0+128),w
 18574  0FFB  31A2  227A  318E   	fcall	_putch
 18575  0FFE  2FAB               	goto	l7430
 18576  0FFF                     l1498:	
 18577                           ;doprnt.c: 1540: return 0;
 18578                           ;	Return value of _printf is never used
 18579                           
 18580                           ;doprnt.c: 1525: }
 18581                           ;doprnt.c: 1533: }
 18582                           ;doprnt.c: 1535: alldone:
 18583                           
 18584  0FFF  0008               	return
 18585  1000                     __end_of_printf:	
 18586                           
 18587                           	psect	text60
 18588  227A                     __ptext60:	
 18589 ;; *************** function _putch *****************
 18590 ;; Defined at:
 18591 ;;		line 156 in file "mcc_generated_files/eusart.c"
 18592 ;; Parameters:    Size  Location     Type
 18593 ;;  txData          1    wreg     unsigned char 
 18594 ;; Auto vars:     Size  Location     Type
 18595 ;;  txData          1   19[BANK0 ] unsigned char 
 18596 ;; Return value:  Size  Location     Type
 18597 ;;                  1    wreg      void 
 18598 ;; Registers used:
 18599 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18600 ;; Tracked objects:
 18601 ;;		On entry : 0/0
 18602 ;;		On exit  : 0/0
 18603 ;;		Unchanged: 0/0
 18604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18608 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18609 ;;Total ram usage:        1 bytes
 18610 ;; Hardware stack levels used:    1
 18611 ;; Hardware stack levels required when called:    7
 18612 ;; This function calls:
 18613 ;;		_EUSART_Write
 18614 ;; This function is called by:
 18615 ;;		_printf
 18616 ;; This function uses a non-reentrant model
 18617 ;;
 18618                           
 18619                           
 18620                           ;psect for function _putch
 18621  227A                     _putch:	
 18622                           
 18623                           ;incstack = 0
 18624                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18625                           ;putch@txData stored from wreg
 18626  227A  0020               	movlb	0	; select bank0
 18627  227B  00B3               	movwf	putch@txData
 18628                           
 18629                           ;eusart.c: 158: EUSART_Write(txData);
 18630  227C  0833               	movf	putch@txData,w
 18631  227D  31A6  26D2         	fcall	_EUSART_Write
 18632  227F  0008               	return
 18633  2280                     __end_of_putch:	
 18634                           
 18635                           	psect	text61
 18636  26D2                     __ptext61:	
 18637 ;; *************** function _EUSART_Write *****************
 18638 ;; Defined at:
 18639 ;;		line 128 in file "mcc_generated_files/eusart.c"
 18640 ;; Parameters:    Size  Location     Type
 18641 ;;  txData          1    wreg     unsigned char 
 18642 ;; Auto vars:     Size  Location     Type
 18643 ;;  txData          1   18[BANK0 ] unsigned char 
 18644 ;; Return value:  Size  Location     Type
 18645 ;;                  1    wreg      void 
 18646 ;; Registers used:
 18647 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18648 ;; Tracked objects:
 18649 ;;		On entry : 0/0
 18650 ;;		On exit  : 0/0
 18651 ;;		Unchanged: 0/0
 18652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18654 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18656 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18657 ;;Total ram usage:        2 bytes
 18658 ;; Hardware stack levels used:    1
 18659 ;; Hardware stack levels required when called:    6
 18660 ;; This function calls:
 18661 ;;		Nothing
 18662 ;; This function is called by:
 18663 ;;		_putch
 18664 ;; This function uses a non-reentrant model
 18665 ;;
 18666                           
 18667                           
 18668                           ;psect for function _EUSART_Write
 18669  26D2                     _EUSART_Write:	
 18670                           
 18671                           ;incstack = 0
 18672                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 18673                           ;EUSART_Write@txData stored from wreg
 18674  26D2  0020               	movlb	0	; select bank0
 18675  26D3  00B2               	movwf	EUSART_Write@txData
 18676  26D4                     l7248:	
 18677                           ;eusart.c: 131: {
 18678                           
 18679                           ;eusart.c: 130: while(0 == eusartTxBufferRemaining)
 18680                           
 18681  26D4  085E               	movf	_eusartTxBufferRemaining,w	;volatile
 18682  26D5  1903               	btfsc	3,2
 18683  26D6  2ED4               	goto	l7248
 18684                           
 18685                           ;eusart.c: 132: }
 18686                           ;eusart.c: 134: if(0 == PIE1bits.TXIE)
 18687  26D7  0021               	movlb	1	; select bank1
 18688  26D8  1A11               	btfsc	17,4	;volatile
 18689  26D9  2EDF               	goto	l415
 18690                           
 18691                           ;eusart.c: 135: {
 18692                           ;eusart.c: 136: TX1REG = txData;
 18693  26DA  0020               	movlb	0	; select bank0
 18694  26DB  0832               	movf	EUSART_Write@txData,w
 18695  26DC  0023               	movlb	3	; select bank3
 18696  26DD  009A               	movwf	26	;volatile
 18697                           
 18698                           ;eusart.c: 137: }
 18699  26DE  2EF4               	goto	l7262
 18700  26DF                     l415:	
 18701                           
 18702                           ;eusart.c: 138: else
 18703                           ;eusart.c: 139: {
 18704                           ;eusart.c: 140: PIE1bits.TXIE = 0;
 18705  26DF  1211               	bcf	17,4	;volatile
 18706                           
 18707                           ;eusart.c: 141: eusartTxBuffer[eusartTxHead++] = txData;
 18708  26E0  0020               	movlb	0	; select bank0
 18709  26E1  0832               	movf	EUSART_Write@txData,w
 18710  26E2  00B1               	movwf	??_EUSART_Write
 18711  26E3  087D               	movf	_eusartTxHead,w
 18712  26E4  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 18713  26E5  0086               	movwf	6
 18714  26E6  3001               	movlw	1	; select bank3/4
 18715  26E7  0087               	movwf	7
 18716  26E8  0831               	movf	??_EUSART_Write,w
 18717  26E9  0081               	movwf	1
 18718  26EA  3001               	movlw	1
 18719  26EB  00B1               	movwf	??_EUSART_Write
 18720  26EC  0831               	movf	??_EUSART_Write,w
 18721  26ED  07FD               	addwf	_eusartTxHead,f	;volatile
 18722                           
 18723                           ;eusart.c: 142: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 18724  26EE  3008               	movlw	8
 18725  26EF  027D               	subwf	_eusartTxHead,w	;volatile
 18726  26F0  1803               	btfsc	3,0
 18727                           
 18728                           ;eusart.c: 143: {
 18729                           ;eusart.c: 144: eusartTxHead = 0;
 18730  26F1  01FD               	clrf	_eusartTxHead	;volatile
 18731                           
 18732                           ;eusart.c: 145: }
 18733                           ;eusart.c: 146: eusartTxBufferRemaining--;
 18734  26F2  3001               	movlw	1
 18735  26F3  02DE               	subwf	_eusartTxBufferRemaining,f	;volatile
 18736  26F4                     l7262:	
 18737                           
 18738                           ;eusart.c: 147: }
 18739                           ;eusart.c: 148: PIE1bits.TXIE = 1;
 18740  26F4  0021               	movlb	1	; select bank1
 18741  26F5  1611               	bsf	17,4	;volatile
 18742  26F6  0008               	return
 18743  26F7                     __end_of_EUSART_Write:	
 18744                           
 18745                           	psect	text62
 18746  1957                     __ptext62:	
 18747 ;; *************** function ___llmod *****************
 18748 ;; Defined at:
 18749 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 18750 ;; Parameters:    Size  Location     Type
 18751 ;;  divisor         4   31[BANK0 ] unsigned long 
 18752 ;;  dividend        4   35[BANK0 ] unsigned long 
 18753 ;; Auto vars:     Size  Location     Type
 18754 ;;  counter         1   40[BANK0 ] unsigned char 
 18755 ;; Return value:  Size  Location     Type
 18756 ;;                  4   31[BANK0 ] unsigned long 
 18757 ;; Registers used:
 18758 ;;		wreg, status,2, status,0
 18759 ;; Tracked objects:
 18760 ;;		On entry : 0/0
 18761 ;;		On exit  : 0/0
 18762 ;;		Unchanged: 0/0
 18763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18764 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18766 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18767 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18768 ;;Total ram usage:       10 bytes
 18769 ;; Hardware stack levels used:    1
 18770 ;; Hardware stack levels required when called:    6
 18771 ;; This function calls:
 18772 ;;		Nothing
 18773 ;; This function is called by:
 18774 ;;		_printf
 18775 ;; This function uses a non-reentrant model
 18776 ;;
 18777                           
 18778                           
 18779                           ;psect for function ___llmod
 18780  1957                     ___llmod:	
 18781                           
 18782                           ;incstack = 0
 18783                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 18784  1957  0020               	movlb	0	; select bank0
 18785  1958  0842               	movf	___llmod@divisor+3,w
 18786  1959  0441               	iorwf	___llmod@divisor+2,w
 18787  195A  0440               	iorwf	___llmod@divisor+1,w
 18788  195B  043F               	iorwf	___llmod@divisor,w
 18789  195C  1903               	skipnz
 18790  195D  2991               	goto	l7336
 18791  195E  01C8               	clrf	___llmod@counter
 18792  195F  0AC8               	incf	___llmod@counter,f
 18793  1960                     l7326:	
 18794  1960  1BC2               	btfsc	___llmod@divisor+3,7
 18795  1961  296E               	goto	l7328
 18796  1962  3001               	movlw	1
 18797  1963                     u6785:	
 18798  1963  35BF               	lslf	___llmod@divisor,f
 18799  1964  0DC0               	rlf	___llmod@divisor+1,f
 18800  1965  0DC1               	rlf	___llmod@divisor+2,f
 18801  1966  0DC2               	rlf	___llmod@divisor+3,f
 18802  1967  0B89               	decfsz	9,f
 18803  1968  2963               	goto	u6785
 18804  1969  3001               	movlw	1
 18805  196A  00C7               	movwf	??___llmod
 18806  196B  0847               	movf	??___llmod,w
 18807  196C  07C8               	addwf	___llmod@counter,f
 18808  196D  2960               	goto	l7326
 18809  196E                     l7328:	
 18810  196E  0842               	movf	___llmod@divisor+3,w
 18811  196F  0246               	subwf	___llmod@dividend+3,w
 18812  1970  1D03               	skipz
 18813  1971  297C               	goto	u6805
 18814  1972  0841               	movf	___llmod@divisor+2,w
 18815  1973  0245               	subwf	___llmod@dividend+2,w
 18816  1974  1D03               	skipz
 18817  1975  297C               	goto	u6805
 18818  1976  0840               	movf	___llmod@divisor+1,w
 18819  1977  0244               	subwf	___llmod@dividend+1,w
 18820  1978  1D03               	skipz
 18821  1979  297C               	goto	u6805
 18822  197A  083F               	movf	___llmod@divisor,w
 18823  197B  0243               	subwf	___llmod@dividend,w
 18824  197C                     u6805:	
 18825  197C  1C03               	skipc
 18826  197D  2986               	goto	l7332
 18827  197E  083F               	movf	___llmod@divisor,w
 18828  197F  02C3               	subwf	___llmod@dividend,f
 18829  1980  0840               	movf	___llmod@divisor+1,w
 18830  1981  3BC4               	subwfb	___llmod@dividend+1,f
 18831  1982  0841               	movf	___llmod@divisor+2,w
 18832  1983  3BC5               	subwfb	___llmod@dividend+2,f
 18833  1984  0842               	movf	___llmod@divisor+3,w
 18834  1985  3BC6               	subwfb	___llmod@dividend+3,f
 18835  1986                     l7332:	
 18836  1986  3001               	movlw	1
 18837  1987                     u6815:	
 18838  1987  36C2               	lsrf	___llmod@divisor+3,f
 18839  1988  0CC1               	rrf	___llmod@divisor+2,f
 18840  1989  0CC0               	rrf	___llmod@divisor+1,f
 18841  198A  0CBF               	rrf	___llmod@divisor,f
 18842  198B  0B89               	decfsz	9,f
 18843  198C  2987               	goto	u6815
 18844  198D  3001               	movlw	1
 18845  198E  02C8               	subwf	___llmod@counter,f
 18846  198F  1D03               	btfss	3,2
 18847  1990  296E               	goto	l7328
 18848  1991                     l7336:	
 18849  1991  0846               	movf	___llmod@dividend+3,w
 18850  1992  00C2               	movwf	?___llmod+3
 18851  1993  0845               	movf	___llmod@dividend+2,w
 18852  1994  00C1               	movwf	?___llmod+2
 18853  1995  0844               	movf	___llmod@dividend+1,w
 18854  1996  00C0               	movwf	?___llmod+1
 18855  1997  0843               	movf	___llmod@dividend,w
 18856  1998  00BF               	movwf	?___llmod
 18857  1999  0008               	return
 18858  199A                     __end_of___llmod:	
 18859                           
 18860                           	psect	text63
 18861  1D24                     __ptext63:	
 18862 ;; *************** function ___lldiv *****************
 18863 ;; Defined at:
 18864 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 18865 ;; Parameters:    Size  Location     Type
 18866 ;;  divisor         4   17[BANK0 ] unsigned long 
 18867 ;;  dividend        4   21[BANK0 ] unsigned long 
 18868 ;; Auto vars:     Size  Location     Type
 18869 ;;  quotient        4   26[BANK0 ] unsigned long 
 18870 ;;  counter         1   30[BANK0 ] unsigned char 
 18871 ;; Return value:  Size  Location     Type
 18872 ;;                  4   17[BANK0 ] unsigned long 
 18873 ;; Registers used:
 18874 ;;		wreg, status,2, status,0
 18875 ;; Tracked objects:
 18876 ;;		On entry : 0/0
 18877 ;;		On exit  : 0/0
 18878 ;;		Unchanged: 0/0
 18879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18880 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18881 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18882 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18883 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18884 ;;Total ram usage:       14 bytes
 18885 ;; Hardware stack levels used:    1
 18886 ;; Hardware stack levels required when called:    6
 18887 ;; This function calls:
 18888 ;;		Nothing
 18889 ;; This function is called by:
 18890 ;;		_printf
 18891 ;; This function uses a non-reentrant model
 18892 ;;
 18893                           
 18894                           
 18895                           ;psect for function ___lldiv
 18896  1D24                     ___lldiv:	
 18897                           
 18898                           ;incstack = 0
 18899                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 18900  1D24  3000               	movlw	0
 18901  1D25  0020               	movlb	0	; select bank0
 18902  1D26  00BD               	movwf	___lldiv@quotient+3
 18903  1D27  3000               	movlw	0
 18904  1D28  00BC               	movwf	___lldiv@quotient+2
 18905  1D29  3000               	movlw	0
 18906  1D2A  00BB               	movwf	___lldiv@quotient+1
 18907  1D2B  3000               	movlw	0
 18908  1D2C  00BA               	movwf	___lldiv@quotient
 18909  1D2D  0834               	movf	___lldiv@divisor+3,w
 18910  1D2E  0433               	iorwf	___lldiv@divisor+2,w
 18911  1D2F  0432               	iorwf	___lldiv@divisor+1,w
 18912  1D30  0431               	iorwf	___lldiv@divisor,w
 18913  1D31  1903               	skipnz
 18914  1D32  2D6E               	goto	l7316
 18915  1D33  01BE               	clrf	___lldiv@counter
 18916  1D34  0ABE               	incf	___lldiv@counter,f
 18917  1D35                     l7302:	
 18918  1D35  1BB4               	btfsc	___lldiv@divisor+3,7
 18919  1D36  2D43               	goto	l7304
 18920  1D37  3001               	movlw	1
 18921  1D38                     u6715:	
 18922  1D38  35B1               	lslf	___lldiv@divisor,f
 18923  1D39  0DB2               	rlf	___lldiv@divisor+1,f
 18924  1D3A  0DB3               	rlf	___lldiv@divisor+2,f
 18925  1D3B  0DB4               	rlf	___lldiv@divisor+3,f
 18926  1D3C  0B89               	decfsz	9,f
 18927  1D3D  2D38               	goto	u6715
 18928  1D3E  3001               	movlw	1
 18929  1D3F  00B9               	movwf	??___lldiv
 18930  1D40  0839               	movf	??___lldiv,w
 18931  1D41  07BE               	addwf	___lldiv@counter,f
 18932  1D42  2D35               	goto	l7302
 18933  1D43                     l7304:	
 18934  1D43  3001               	movlw	1
 18935  1D44                     u6735:	
 18936  1D44  35BA               	lslf	___lldiv@quotient,f
 18937  1D45  0DBB               	rlf	___lldiv@quotient+1,f
 18938  1D46  0DBC               	rlf	___lldiv@quotient+2,f
 18939  1D47  0DBD               	rlf	___lldiv@quotient+3,f
 18940  1D48  0B89               	decfsz	9,f
 18941  1D49  2D44               	goto	u6735
 18942  1D4A  0834               	movf	___lldiv@divisor+3,w
 18943  1D4B  0238               	subwf	___lldiv@dividend+3,w
 18944  1D4C  1D03               	skipz
 18945  1D4D  2D58               	goto	u6745
 18946  1D4E  0833               	movf	___lldiv@divisor+2,w
 18947  1D4F  0237               	subwf	___lldiv@dividend+2,w
 18948  1D50  1D03               	skipz
 18949  1D51  2D58               	goto	u6745
 18950  1D52  0832               	movf	___lldiv@divisor+1,w
 18951  1D53  0236               	subwf	___lldiv@dividend+1,w
 18952  1D54  1D03               	skipz
 18953  1D55  2D58               	goto	u6745
 18954  1D56  0831               	movf	___lldiv@divisor,w
 18955  1D57  0235               	subwf	___lldiv@dividend,w
 18956  1D58                     u6745:	
 18957  1D58  1C03               	skipc
 18958  1D59  2D63               	goto	l7312
 18959  1D5A  0831               	movf	___lldiv@divisor,w
 18960  1D5B  02B5               	subwf	___lldiv@dividend,f
 18961  1D5C  0832               	movf	___lldiv@divisor+1,w
 18962  1D5D  3BB6               	subwfb	___lldiv@dividend+1,f
 18963  1D5E  0833               	movf	___lldiv@divisor+2,w
 18964  1D5F  3BB7               	subwfb	___lldiv@dividend+2,f
 18965  1D60  0834               	movf	___lldiv@divisor+3,w
 18966  1D61  3BB8               	subwfb	___lldiv@dividend+3,f
 18967  1D62  143A               	bsf	___lldiv@quotient,0
 18968  1D63                     l7312:	
 18969  1D63  3001               	movlw	1
 18970  1D64                     u6755:	
 18971  1D64  36B4               	lsrf	___lldiv@divisor+3,f
 18972  1D65  0CB3               	rrf	___lldiv@divisor+2,f
 18973  1D66  0CB2               	rrf	___lldiv@divisor+1,f
 18974  1D67  0CB1               	rrf	___lldiv@divisor,f
 18975  1D68  0B89               	decfsz	9,f
 18976  1D69  2D64               	goto	u6755
 18977  1D6A  3001               	movlw	1
 18978  1D6B  02BE               	subwf	___lldiv@counter,f
 18979  1D6C  1D03               	btfss	3,2
 18980  1D6D  2D43               	goto	l7304
 18981  1D6E                     l7316:	
 18982  1D6E  083D               	movf	___lldiv@quotient+3,w
 18983  1D6F  00B4               	movwf	?___lldiv+3
 18984  1D70  083C               	movf	___lldiv@quotient+2,w
 18985  1D71  00B3               	movwf	?___lldiv+2
 18986  1D72  083B               	movf	___lldiv@quotient+1,w
 18987  1D73  00B2               	movwf	?___lldiv+1
 18988  1D74  083A               	movf	___lldiv@quotient,w
 18989  1D75  00B1               	movwf	?___lldiv
 18990  1D76  0008               	return
 18991  1D77                     __end_of___lldiv:	
 18992                           
 18993                           	psect	text64
 18994  07EB                     __ptext64:	
 18995 ;; *************** function _i2c_setBuffer *****************
 18996 ;; Defined at:
 18997 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 18998 ;; Parameters:    Size  Location     Type
 18999 ;;  buffer          2   17[BANK0 ] PTR void 
 19000 ;;		 -> drv_read@reg(1), drv_read@buff(1), drv2665@drv_fifo_sine(244), drv_write@buff(2), 
 19001 ;;  bufferSize      2   19[BANK0 ] unsigned int 
 19002 ;; Auto vars:     Size  Location     Type
 19003 ;;		None
 19004 ;; Return value:  Size  Location     Type
 19005 ;;                  1    wreg      void 
 19006 ;; Registers used:
 19007 ;;		wreg
 19008 ;; Tracked objects:
 19009 ;;		On entry : 0/0
 19010 ;;		On exit  : 0/0
 19011 ;;		Unchanged: 0/0
 19012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19013 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19016 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19017 ;;Total ram usage:        4 bytes
 19018 ;; Hardware stack levels used:    1
 19019 ;; Hardware stack levels required when called:    6
 19020 ;; This function calls:
 19021 ;;		Nothing
 19022 ;; This function is called by:
 19023 ;;		_drv_write
 19024 ;;		_drv_read
 19025 ;;		_drv_write_wvfrm
 19026 ;; This function uses a non-reentrant model
 19027 ;;
 19028                           
 19029                           
 19030                           ;psect for function _i2c_setBuffer
 19031  07EB                     _i2c_setBuffer:	
 19032                           
 19033                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 19034                           
 19035                           ;incstack = 0
 19036                           ; Regs used in _i2c_setBuffer: [wreg]
 19037  07EB  0022               	movlb	2	; select bank2
 19038  07EC  1D20               	btfss	_i2c_status^(0+256),2
 19039  07ED  0008               	return
 19040                           
 19041                           ;i2c_master.c: 187: {
 19042                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 19043  07EE  0020               	movlb	0	; select bank0
 19044  07EF  0832               	movf	i2c_setBuffer@buffer+1,w
 19045  07F0  0022               	movlb	2	; select bank2
 19046  07F1  00A3               	movwf	((low ((_i2c_status| (0+256)+2))+1))^0
 19047  07F2  0020               	movlb	0	; select bank0
 19048  07F3  0831               	movf	i2c_setBuffer@buffer,w
 19049  07F4  0022               	movlb	2	; select bank2
 19050  07F5  00A2               	movwf	(low ((_i2c_status| (0+256)+2)))^0
 19051                           
 19052                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 19053  07F6  0020               	movlb	0	; select bank0
 19054  07F7  0834               	movf	i2c_setBuffer@bufferSize+1,w
 19055  07F8  0022               	movlb	2	; select bank2
 19056  07F9  00A5               	movwf	((_i2c_status+1)^(0+256)+4)
 19057  07FA  0020               	movlb	0	; select bank0
 19058  07FB  0833               	movf	i2c_setBuffer@bufferSize,w
 19059  07FC  0022               	movlb	2	; select bank2
 19060  07FD  00A4               	movwf	(_i2c_status^(0+256)+4)
 19061                           
 19062                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 19063  07FE  1120               	bcf	_i2c_status^(0+256),2
 19064  07FF  0008               	return
 19065  0800                     __end_of_i2c_setBuffer:	
 19066                           
 19067                           	psect	text65
 19068  2666                     __ptext65:	
 19069 ;; *************** function _i2c_masterOperation *****************
 19070 ;; Defined at:
 19071 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 19072 ;; Parameters:    Size  Location     Type
 19073 ;;  read            1    wreg     unsigned char 
 19074 ;; Auto vars:     Size  Location     Type
 19075 ;;  read            1   24[BANK0 ] unsigned char 
 19076 ;;  ret             1   25[BANK0 ] enum E8193
 19077 ;; Return value:  Size  Location     Type
 19078 ;;                  1    wreg      enum E8193
 19079 ;; Registers used:
 19080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19081 ;; Tracked objects:
 19082 ;;		On entry : 0/0
 19083 ;;		On exit  : 0/0
 19084 ;;		Unchanged: 0/0
 19085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19087 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19088 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19089 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19090 ;;Total ram usage:        3 bytes
 19091 ;; Hardware stack levels used:    1
 19092 ;; Hardware stack levels required when called:   11
 19093 ;; This function calls:
 19094 ;;		_i2c1_driver_start
 19095 ;;		_i2c_poller
 19096 ;;		_mssp1_IRQisEnabled
 19097 ;; This function is called by:
 19098 ;;		_drv_write
 19099 ;;		_drv_read
 19100 ;;		_i2c_masterRead
 19101 ;;		_i2c_masterWrite
 19102 ;;		_drv_write_wvfrm
 19103 ;; This function uses a non-reentrant model
 19104 ;;
 19105                           
 19106                           
 19107                           ;psect for function _i2c_masterOperation
 19108  2666                     _i2c_masterOperation:	
 19109                           
 19110                           ;incstack = 0
 19111                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19112                           ;i2c_masterOperation@read stored from wreg
 19113  2666  0020               	movlb	0	; select bank0
 19114  2667  00B8               	movwf	i2c_masterOperation@read
 19115                           
 19116                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 19117  2668  01B9               	clrf	i2c_masterOperation@ret
 19118  2669  0AB9               	incf	i2c_masterOperation@ret,f
 19119                           
 19120                           ;i2c_master.c: 196: if(!i2c_status.busy)
 19121  266A  0022               	movlb	2	; select bank2
 19122  266B  1820               	btfsc	_i2c_status^(0+256),0
 19123  266C  2E87               	goto	l7456
 19124                           
 19125                           ;i2c_master.c: 197: {
 19126                           ;i2c_master.c: 198: i2c_status.busy = 1;
 19127  266D  1420               	bsf	_i2c_status^(0+256),0
 19128                           
 19129                           ;i2c_master.c: 199: ret = I2C_NOERR;
 19130  266E  0020               	movlb	0	; select bank0
 19131  266F  01B9               	clrf	i2c_masterOperation@ret
 19132                           
 19133                           ;i2c_master.c: 201: if(read)
 19134  2670  0838               	movf	i2c_masterOperation@read,w
 19135  2671  1903               	btfsc	3,2
 19136  2672  2E77               	goto	l7450
 19137                           
 19138                           ;i2c_master.c: 202: {
 19139                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 19140  2673  0022               	movlb	2	; select bank2
 19141  2674  01AA               	clrf	(_i2c_status^(0+256)+10)
 19142  2675  0AAA               	incf	(_i2c_status^(0+256)+10),f
 19143                           
 19144                           ;i2c_master.c: 204: }
 19145  2676  2E7D               	goto	l7452
 19146  2677                     l7450:	
 19147                           
 19148                           ;i2c_master.c: 205: else
 19149                           ;i2c_master.c: 206: {
 19150                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 19151  2677  3002               	movlw	2
 19152  2678  0020               	movlb	0	; select bank0
 19153  2679  00B7               	movwf	??_i2c_masterOperation
 19154  267A  0837               	movf	??_i2c_masterOperation,w
 19155  267B  0022               	movlb	2	; select bank2
 19156  267C  00AA               	movwf	(_i2c_status^(0+256)+10)
 19157  267D                     l7452:	
 19158                           
 19159                           ;i2c_master.c: 208: }
 19160                           ;i2c_master.c: 209: i2c1_driver_start();
 19161  267D  31A1  21FB  31A6   	fcall	_i2c1_driver_start
 19162                           
 19163                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 19164  2680  31A3  232E  31A6   	fcall	_mssp1_IRQisEnabled
 19165  2683  1803               	btfsc	3,0
 19166  2684  2E87               	goto	l7456
 19167                           
 19168                           ;i2c_master.c: 212: i2c_poller();
 19169  2685  3198  2000         	fcall	_i2c_poller
 19170  2687                     l7456:	
 19171                           
 19172                           ;i2c_master.c: 213: }
 19173                           ;i2c_master.c: 214: return ret;
 19174  2687  0020               	movlb	0	; select bank0
 19175  2688  0839               	movf	i2c_masterOperation@ret,w
 19176  2689  0008               	return
 19177  268A                     __end_of_i2c_masterOperation:	
 19178                           
 19179                           	psect	text66
 19180  232E                     __ptext66:	
 19181 ;; *************** function _mssp1_IRQisEnabled *****************
 19182 ;; Defined at:
 19183 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
 19184 ;; Parameters:    Size  Location     Type
 19185 ;;		None
 19186 ;; Auto vars:     Size  Location     Type
 19187 ;;		None
 19188 ;; Return value:  Size  Location     Type
 19189 ;;		None               void
 19190 ;; Registers used:
 19191 ;;		wreg, status,2, status,0
 19192 ;; Tracked objects:
 19193 ;;		On entry : 0/0
 19194 ;;		On exit  : 0/0
 19195 ;;		Unchanged: 0/0
 19196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19200 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19201 ;;Total ram usage:        2 bytes
 19202 ;; Hardware stack levels used:    1
 19203 ;; Hardware stack levels required when called:    6
 19204 ;; This function calls:
 19205 ;;		Nothing
 19206 ;; This function is called by:
 19207 ;;		_i2c_masterOperation
 19208 ;; This function uses a non-reentrant model
 19209 ;;
 19210                           
 19211                           
 19212                           ;psect for function _mssp1_IRQisEnabled
 19213  232E                     _mssp1_IRQisEnabled:	
 19214                           
 19215                           ;i2c1_driver.c: 45: return PIE1bits.SSP1IE;
 19216                           
 19217                           ;incstack = 0
 19218                           ; Regs used in _mssp1_IRQisEnabled: [wreg+status,2+status,0]
 19219  232E  0021               	movlb	1	; select bank1
 19220  232F  0C11               	rrf	17,w	;volatile
 19221  2330  0020               	movlb	0	; select bank0
 19222  2331  00B1               	movwf	??_mssp1_IRQisEnabled
 19223  2332  0CB1               	rrf	??_mssp1_IRQisEnabled,f
 19224  2333  0C31               	rrf	??_mssp1_IRQisEnabled,w
 19225  2334  3901               	andlw	1
 19226  2335  00B2               	movwf	??_mssp1_IRQisEnabled+1
 19227  2336  0C32               	rrf	??_mssp1_IRQisEnabled+1,w
 19228  2337  0008               	return
 19229  2338                     __end_of_mssp1_IRQisEnabled:	
 19230                           
 19231                           	psect	text67
 19232  1800                     __ptext67:	
 19233 ;; *************** function _i2c_poller *****************
 19234 ;; Defined at:
 19235 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 19236 ;; Parameters:    Size  Location     Type
 19237 ;;		None
 19238 ;; Auto vars:     Size  Location     Type
 19239 ;;		None
 19240 ;; Return value:  Size  Location     Type
 19241 ;;                  1    wreg      void 
 19242 ;; Registers used:
 19243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19244 ;; Tracked objects:
 19245 ;;		On entry : 0/0
 19246 ;;		On exit  : 0/0
 19247 ;;		Unchanged: 0/0
 19248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19253 ;;Total ram usage:        0 bytes
 19254 ;; Hardware stack levels used:    1
 19255 ;; Hardware stack levels required when called:   10
 19256 ;; This function calls:
 19257 ;;		_i2c_ISR
 19258 ;;		_mssp1_waitForEvent
 19259 ;; This function is called by:
 19260 ;;		_i2c_masterOperation
 19261 ;; This function uses a non-reentrant model
 19262 ;;
 19263                           
 19264                           
 19265                           ;psect for function _i2c_poller
 19266  1800                     _i2c_poller:	
 19267  1800                     l7294:	
 19268                           ;i2c_master.c: 232: while(i2c_status.busy)
 19269                           
 19270                           ;incstack = 0
 19271                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19272                           
 19273  1800  0022               	movlb	2	; select bank2
 19274  1801  1C20               	btfss	_i2c_status^(0+256),0
 19275  1802  0008               	return
 19276                           
 19277                           ;i2c_master.c: 233: {
 19278                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 19279  1803  3000               	movlw	0
 19280  1804  31A3  2362  3198   	fcall	_mssp1_waitForEvent
 19281                           
 19282                           ;i2c_master.c: 235: i2c_ISR();
 19283  1807  31A6  26F7  3198   	fcall	_i2c_ISR
 19284  180A  2800               	goto	l7294
 19285  180B                     __end_of_i2c_poller:	
 19286                           
 19287                           	psect	text68
 19288  2362                     __ptext68:	
 19289 ;; *************** function _mssp1_waitForEvent *****************
 19290 ;; Defined at:
 19291 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
 19292 ;; Parameters:    Size  Location     Type
 19293 ;;  timeout         1    wreg     PTR unsigned int 
 19294 ;;		 -> NULL(0), 
 19295 ;; Auto vars:     Size  Location     Type
 19296 ;;  timeout         1   17[BANK0 ] PTR unsigned int 
 19297 ;;		 -> NULL(0), 
 19298 ;; Return value:  Size  Location     Type
 19299 ;;                  1    wreg      void 
 19300 ;; Registers used:
 19301 ;;		wreg
 19302 ;; Tracked objects:
 19303 ;;		On entry : 0/0
 19304 ;;		On exit  : 0/0
 19305 ;;		Unchanged: 0/0
 19306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19311 ;;Total ram usage:        1 bytes
 19312 ;; Hardware stack levels used:    1
 19313 ;; Hardware stack levels required when called:    6
 19314 ;; This function calls:
 19315 ;;		Nothing
 19316 ;; This function is called by:
 19317 ;;		_i2c_poller
 19318 ;; This function uses a non-reentrant model
 19319 ;;
 19320                           
 19321                           
 19322                           ;psect for function _mssp1_waitForEvent
 19323  2362                     _mssp1_waitForEvent:	
 19324                           
 19325                           ;i2c1_driver.c: 73: if(PIR1bits.SSP1IF == 0)
 19326                           
 19327                           ;incstack = 0
 19328                           ; Regs used in _mssp1_waitForEvent: [wreg]
 19329  2362  0020               	movlb	0	; select bank0
 19330  2363  1991               	btfsc	17,3	;volatile
 19331  2364  0008               	return
 19332  2365                     l500:	
 19333                           ;i2c1_driver.c: 74: {
 19334                           ;i2c1_driver.c: 75: while(1)
 19335                           
 19336                           
 19337                           ;i2c1_driver.c: 76: {
 19338                           ;i2c1_driver.c: 77: if(PIR1bits.SSP1IF) break;
 19339  2365  0020               	movlb	0	; select bank0
 19340  2366  1991               	btfsc	17,3	;volatile
 19341  2367  0008               	return
 19342                           
 19343                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(1000000/4000000.0)));
 19344  2368  3008               	movlw	8
 19345  2369                     u9017:	
 19346  2369  0B89               	decfsz	9,f
 19347  236A  2B69               	goto	u9017
 19348  236B  0000               	nop
 19349  236C  2B65               	goto	l500
 19350  236D                     __end_of_mssp1_waitForEvent:	
 19351                           
 19352                           	psect	text69
 19353  26F7                     __ptext69:	
 19354 ;; *************** function _i2c_ISR *****************
 19355 ;; Defined at:
 19356 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 19357 ;; Parameters:    Size  Location     Type
 19358 ;;		None
 19359 ;; Auto vars:     Size  Location     Type
 19360 ;;		None
 19361 ;; Return value:  Size  Location     Type
 19362 ;;                  1    wreg      void 
 19363 ;; Registers used:
 19364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19365 ;; Tracked objects:
 19366 ;;		On entry : 0/0
 19367 ;;		On exit  : 0/0
 19368 ;;		Unchanged: 0/0
 19369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19372 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19373 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19374 ;;Total ram usage:        1 bytes
 19375 ;; Hardware stack levels used:    1
 19376 ;; Hardware stack levels required when called:    9
 19377 ;; This function calls:
 19378 ;;		_do_I2C_DO_ACK
 19379 ;;		_do_I2C_DO_ADDRESS_NACK
 19380 ;;		_do_I2C_DO_NACK_RESTART
 19381 ;;		_do_I2C_DO_NACK_STOP
 19382 ;;		_do_I2C_IDLE
 19383 ;;		_do_I2C_RCEN
 19384 ;;		_do_I2C_RESET
 19385 ;;		_do_I2C_RX
 19386 ;;		_do_I2C_SEND_ADR_READ
 19387 ;;		_do_I2C_SEND_ADR_WRITE
 19388 ;;		_do_I2C_SEND_RESTART
 19389 ;;		_do_I2C_SEND_RESTART_READ
 19390 ;;		_do_I2C_SEND_RESTART_WRITE
 19391 ;;		_do_I2C_SEND_STOP
 19392 ;;		_do_I2C_TX
 19393 ;;		_do_I2C_TX_EMPTY
 19394 ;;		_i2c1_driver_isNACK
 19395 ;;		_mssp1_clearIRQ
 19396 ;; This function is called by:
 19397 ;;		_i2c_open
 19398 ;;		_i2c_poller
 19399 ;;		_INTERRUPT_InterruptManager
 19400 ;; This function uses a non-reentrant model
 19401 ;;
 19402                           
 19403                           
 19404                           ;psect for function _i2c_ISR
 19405  26F7                     _i2c_ISR:	
 19406                           
 19407                           ;Skip over the trampoline to the duplicate function for level 1
 19408  26F7  1C7E               	btfss	126,0
 19409  26F8  2EFB               	goto	l7270
 19410  26F9  31A5  2D5B         	ljmp	i1l8492
 19411  26FB                     _i2c_ISR$intlevel0:	
 19412  26FB                     l7270:	
 19413                           ;incstack = 0
 19414                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19415                           
 19416                           
 19417                           ;i2c_master.c: 421: mssp1_clearIRQ();
 19418  26FB  31A2  220D  31A6   	fcall	_mssp1_clearIRQ
 19419                           
 19420                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 19421  26FE  0022               	movlb	2	; select bank2
 19422  26FF  1DA0               	btfss	_i2c_status^(0+256),3
 19423  2700  2F0C               	goto	l7278
 19424  2701  31A3  23B7  31A6   	fcall	_i2c1_driver_isNACK
 19425  2704  1C03               	btfss	3,0
 19426  2705  2F0C               	goto	l7278
 19427                           
 19428                           ;i2c_master.c: 428: {
 19429                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 19430  2706  300F               	movlw	15
 19431  2707  0020               	movlb	0	; select bank0
 19432  2708  00B6               	movwf	??_i2c_ISR
 19433  2709  0836               	movf	??_i2c_ISR,w
 19434  270A  0022               	movlb	2	; select bank2
 19435  270B  00AA               	movwf	(_i2c_status^(0+256)+10)
 19436  270C                     l7278:	
 19437                           
 19438                           ;i2c_master.c: 430: }
 19439                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 19440  270C  0022               	movlb	2	; select bank2
 19441  270D  352A               	lslf	(_i2c_status^(0+256)+10),w
 19442  270E  3E20               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 19443  270F  0086               	movwf	6
 19444  2710  3002               	movlw	2	; select bank4/5
 19445  2711  0087               	movwf	7
 19446  2712  3F41               	moviw [1]fsr1
 19447  2713  008A               	movwf	10
 19448  2714  3F40               	moviw [0]fsr1
 19449  2715  000A               	callw
 19450  2716  31A6               	pagesel	$
 19451  2717  0020               	movlb	0	; select bank0
 19452  2718  00B6               	movwf	??_i2c_ISR
 19453  2719  0836               	movf	??_i2c_ISR,w
 19454  271A  0022               	movlb	2	; select bank2
 19455  271B  00AA               	movwf	(_i2c_status^(0+256)+10)
 19456  271C  0008               	return
 19457  271D                     __end_of_i2c_ISR:	
 19458                           
 19459                           	psect	text70
 19460  220D                     __ptext70:	
 19461 ;; *************** function _mssp1_clearIRQ *****************
 19462 ;; Defined at:
 19463 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 19464 ;; Parameters:    Size  Location     Type
 19465 ;;		None
 19466 ;; Auto vars:     Size  Location     Type
 19467 ;;		None
 19468 ;; Return value:  Size  Location     Type
 19469 ;;                  1    wreg      void 
 19470 ;; Registers used:
 19471 ;;		None
 19472 ;; Tracked objects:
 19473 ;;		On entry : 0/0
 19474 ;;		On exit  : 0/0
 19475 ;;		Unchanged: 0/0
 19476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19481 ;;Total ram usage:        0 bytes
 19482 ;; Hardware stack levels used:    1
 19483 ;; Hardware stack levels required when called:    6
 19484 ;; This function calls:
 19485 ;;		Nothing
 19486 ;; This function is called by:
 19487 ;;		_i2c_open
 19488 ;;		_i2c_ISR
 19489 ;;		_i2c_close
 19490 ;; This function uses a non-reentrant model
 19491 ;;
 19492                           
 19493                           
 19494                           ;psect for function _mssp1_clearIRQ
 19495  220D                     _mssp1_clearIRQ:	
 19496                           
 19497                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 19498                           
 19499                           ;incstack = 0
 19500                           ; Regs used in _mssp1_clearIRQ: []
 19501  220D  0020               	movlb	0	; select bank0
 19502  220E  1191               	bcf	17,3	;volatile
 19503  220F  0008               	return
 19504  2210                     __end_of_mssp1_clearIRQ:	
 19505                           
 19506                           	psect	text71
 19507  19DD                     __ptext71:	
 19508 ;; *************** function _do_I2C_RX *****************
 19509 ;; Defined at:
 19510 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 19511 ;; Parameters:    Size  Location     Type
 19512 ;;		None
 19513 ;; Auto vars:     Size  Location     Type
 19514 ;;		None
 19515 ;; Return value:  Size  Location     Type
 19516 ;;                  1    wreg      enum E8364
 19517 ;; Registers used:
 19518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19519 ;; Tracked objects:
 19520 ;;		On entry : 0/0
 19521 ;;		On exit  : 0/0
 19522 ;;		Unchanged: 0/0
 19523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19526 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19527 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19528 ;;Total ram usage:        1 bytes
 19529 ;; Hardware stack levels used:    1
 19530 ;; Hardware stack levels required when called:    8
 19531 ;; This function calls:
 19532 ;;		_do_I2C_DO_NACK_RESTART
 19533 ;;		_do_I2C_DO_NACK_STOP
 19534 ;;		_i2c1_driver_getRXData
 19535 ;;		_i2c1_driver_sendACK
 19536 ;;		_returnReset
 19537 ;;		_returnStop
 19538 ;; This function is called by:
 19539 ;;		_i2c_ISR
 19540 ;;		i1_i2c_ISR
 19541 ;; This function uses a non-reentrant model
 19542 ;;
 19543                           
 19544                           
 19545                           ;psect for function _do_I2C_RX
 19546  19DD                     _do_I2C_RX:	
 19547                           
 19548                           ;Skip over the trampoline to the duplicate function for level 1
 19549  19DD  1C7E               	btfss	126,0
 19550  19DE  29E1               	goto	l7200
 19551  19DF  3198  28D9         	ljmp	i1l8272
 19552  19E1                     _do_I2C_RX$intlevel0:	
 19553  19E1                     l7200:	
 19554                           ;incstack = 0
 19555                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19556                           
 19557                           
 19558                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 19559  19E1  0022               	movlb	2	; select bank2
 19560  19E2  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 19561  19E3  0086               	movwf	6
 19562  19E4  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 19563  19E5  0087               	movwf	7
 19564  19E6  31A2  2207  3199   	fcall	_i2c1_driver_getRXData
 19565  19E9  0081               	movwf	1
 19566  19EA  3001               	movlw	1
 19567  19EB  0022               	movlb	2	; select bank2
 19568  19EC  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 19569  19ED  3000               	movlw	0
 19570  19EE  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 19571                           
 19572                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 19573  19EF  3001               	movlw	1
 19574  19F0  02A4               	subwf	(_i2c_status^(0+256)+4),f
 19575  19F1  3000               	movlw	0
 19576  19F2  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 19577  19F3  0824               	movf	(_i2c_status^(0+256)+4),w
 19578  19F4  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 19579  19F5  1903               	btfsc	3,2
 19580  19F6  29FB               	goto	l761
 19581                           
 19582                           ;i2c_master.c: 361: {
 19583                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 19584  19F7  31A2  2238         	fcall	_i2c1_driver_sendACK
 19585                           
 19586                           ;i2c_master.c: 363: return I2C_RCEN;
 19587  19F9  3005               	movlw	5
 19588                           
 19589                           ;i2c_master.c: 364: }
 19590  19FA  0008               	return
 19591  19FB                     l761:	
 19592                           
 19593                           ;i2c_master.c: 365: else
 19594                           ;i2c_master.c: 366: {
 19595                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 19596  19FB  1520               	bsf	_i2c_status^(0+256),2
 19597                           
 19598                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 19599  19FC  2A03               	goto	l7224
 19600  19FD                     l7214:	
 19601                           ;i2c_master.c: 369: {
 19602                           ;i2c_master.c: 370: case i2c_restart_write:
 19603                           
 19604                           
 19605                           ;i2c_master.c: 371: case i2c_restart_read:
 19606                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 19607  19FD  31A2  22D4         	fcall	_do_I2C_DO_NACK_RESTART
 19608  19FF  0008               	return
 19609  1A00                     l7218:	
 19610                           ;i2c_master.c: 374: case i2c_continue:
 19611                           
 19612                           ;i2c_master.c: 373: default:
 19613                           
 19614                           
 19615                           ;i2c_master.c: 375: case i2c_stop:
 19616                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 19617  1A00  31A2  22CC         	fcall	_do_I2C_DO_NACK_STOP
 19618                           
 19619                           ;i2c_master.c: 377: }
 19620  1A02  0008               	return
 19621  1A03                     l7224:	
 19622  1A03  0022               	movlb	2	; select bank2
 19623  1A04  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 19624  1A05  0020               	movlb	0	; select bank0
 19625  1A06  00B1               	movwf	??_do_I2C_RX
 19626  1A07  0831               	movf	??_do_I2C_RX,w
 19627  1A08  00B1               	movwf	returnReset@p
 19628  1A09  300C               	movlw	12
 19629  1A0A  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 19630  1A0B  0086               	movwf	6
 19631  1A0C  3001               	movlw	1	; select bank2/3
 19632  1A0D  0087               	movwf	7
 19633  1A0E  3F41               	moviw [1]fsr1
 19634  1A0F  008A               	movwf	10
 19635  1A10  3F40               	moviw [0]fsr1
 19636  1A11  000A               	callw
 19637  1A12  3199               	pagesel	$
 19638                           
 19639                           ; Switch size 1, requested type "space"
 19640                           ; Number of cases is 4, Range of values is 1 to 4
 19641                           ; switch strategies available:
 19642                           ; Name         Instructions Cycles
 19643                           ; simple_byte           13     7 (average)
 19644                           ; direct_byte           17     9 (fixed)
 19645                           ; jumptable            263     9 (fixed)
 19646                           ;	Chosen strategy is simple_byte
 19647  1A13  3A01               	xorlw	1	; case 1
 19648  1A14  1903               	skipnz
 19649  1A15  2A00               	goto	l7218
 19650  1A16  3A03               	xorlw	3	; case 2
 19651  1A17  1903               	skipnz
 19652  1A18  29FD               	goto	l7214
 19653  1A19  3A01               	xorlw	1	; case 3
 19654  1A1A  1903               	skipnz
 19655  1A1B  29FD               	goto	l7214
 19656  1A1C  3A07               	xorlw	7	; case 4
 19657  1A1D  1903               	skipnz
 19658  1A1E  2A00               	goto	l7218
 19659  1A1F  2A00               	goto	l7218
 19660  1A20  0008               	return
 19661  1A21                     __end_of_do_I2C_RX:	
 19662                           
 19663                           	psect	text72
 19664  1DCF                     __ptext72:	
 19665 ;; *************** function _do_I2C_TX *****************
 19666 ;; Defined at:
 19667 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 19668 ;; Parameters:    Size  Location     Type
 19669 ;;		None
 19670 ;; Auto vars:     Size  Location     Type
 19671 ;;		None
 19672 ;; Return value:  Size  Location     Type
 19673 ;;                  1    wreg      enum E8364
 19674 ;; Registers used:
 19675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19676 ;; Tracked objects:
 19677 ;;		On entry : 0/0
 19678 ;;		On exit  : 0/0
 19679 ;;		Unchanged: 0/0
 19680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19683 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19684 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19685 ;;Total ram usage:        4 bytes
 19686 ;; Hardware stack levels used:    1
 19687 ;; Hardware stack levels required when called:    8
 19688 ;; This function calls:
 19689 ;;		_do_I2C_SEND_RESTART_READ
 19690 ;;		_do_I2C_SEND_RESTART_WRITE
 19691 ;;		_do_I2C_SEND_STOP
 19692 ;;		_i2c1_driver_TXData
 19693 ;;		_i2c1_driver_isNACK
 19694 ;;		_returnReset
 19695 ;;		_returnStop
 19696 ;; This function is called by:
 19697 ;;		_i2c_ISR
 19698 ;;		i1_i2c_ISR
 19699 ;; This function uses a non-reentrant model
 19700 ;;
 19701                           
 19702                           
 19703                           ;psect for function _do_I2C_TX
 19704  1DCF                     _do_I2C_TX:	
 19705                           
 19706                           ;Skip over the trampoline to the duplicate function for level 1
 19707  1DCF  1C7E               	btfss	126,0
 19708  1DD0  2DD3               	goto	l7170
 19709  1DD1  319B  2BE2         	ljmp	i1l8242
 19710  1DD3                     _do_I2C_TX$intlevel0:	
 19711  1DD3                     l7170:	
 19712                           ;incstack = 0
 19713                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19714                           
 19715                           
 19716                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 19717  1DD3  31A3  23B7  319D   	fcall	_i2c1_driver_isNACK
 19718  1DD6  1803               	btfsc	3,0
 19719  1DD7  2DE2               	goto	l7188
 19720  1DD8  2E00               	goto	l745
 19721  1DD9                     l7174:	
 19722                           ;i2c_master.c: 338: {
 19723                           ;i2c_master.c: 339: case i2c_restart_read:
 19724                           
 19725                           ;i2c_master.c: 336: {
 19726                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 19727                           
 19728                           
 19729                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 19730  1DD9  31A2  22A4         	fcall	_do_I2C_SEND_RESTART_READ
 19731  1DDB  0008               	return
 19732  1DDC                     l7178:	
 19733                           ;i2c_master.c: 341: case i2c_restart_write:
 19734                           
 19735                           
 19736                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 19737  1DDC  31A2  22AC         	fcall	_do_I2C_SEND_RESTART_WRITE
 19738  1DDE  0008               	return
 19739  1DDF                     l7182:	
 19740                           ;i2c_master.c: 344: case i2c_continue:
 19741                           
 19742                           ;i2c_master.c: 343: default:
 19743                           
 19744                           
 19745                           ;i2c_master.c: 345: case i2c_stop:
 19746                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 19747  1DDF  31A2  22BC         	fcall	_do_I2C_SEND_STOP
 19748                           
 19749                           ;i2c_master.c: 347: }
 19750  1DE1  0008               	return
 19751  1DE2                     l7188:	
 19752  1DE2  0022               	movlb	2	; select bank2
 19753  1DE3  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 19754  1DE4  0020               	movlb	0	; select bank0
 19755  1DE5  00B2               	movwf	??_do_I2C_TX
 19756  1DE6  0832               	movf	??_do_I2C_TX,w
 19757  1DE7  00B1               	movwf	returnReset@p
 19758  1DE8  3012               	movlw	18
 19759  1DE9  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 19760  1DEA  0086               	movwf	6
 19761  1DEB  3001               	movlw	1	; select bank2/3
 19762  1DEC  0087               	movwf	7
 19763  1DED  3F41               	moviw [1]fsr1
 19764  1DEE  008A               	movwf	10
 19765  1DEF  3F40               	moviw [0]fsr1
 19766  1DF0  000A               	callw
 19767  1DF1  319D               	pagesel	$
 19768                           
 19769                           ; Switch size 1, requested type "space"
 19770                           ; Number of cases is 4, Range of values is 1 to 4
 19771                           ; switch strategies available:
 19772                           ; Name         Instructions Cycles
 19773                           ; simple_byte           13     7 (average)
 19774                           ; direct_byte           17     9 (fixed)
 19775                           ; jumptable            263     9 (fixed)
 19776                           ;	Chosen strategy is simple_byte
 19777  1DF2  3A01               	xorlw	1	; case 1
 19778  1DF3  1903               	skipnz
 19779  1DF4  2DDF               	goto	l7182
 19780  1DF5  3A03               	xorlw	3	; case 2
 19781  1DF6  1903               	skipnz
 19782  1DF7  2DD9               	goto	l7174
 19783  1DF8  3A01               	xorlw	1	; case 3
 19784  1DF9  1903               	skipnz
 19785  1DFA  2DDC               	goto	l7178
 19786  1DFB  3A07               	xorlw	7	; case 4
 19787  1DFC  1903               	skipnz
 19788  1DFD  2DDF               	goto	l7182
 19789  1DFE  2DDF               	goto	l7182
 19790                           
 19791                           ;i2c_master.c: 348: }
 19792  1DFF  0008               	return
 19793  1E00                     l745:	
 19794                           
 19795                           ;i2c_master.c: 349: else
 19796                           ;i2c_master.c: 350: {
 19797                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 19798  1E00  0022               	movlb	2	; select bank2
 19799  1E01  11A0               	bcf	_i2c_status^(0+256),3
 19800                           
 19801                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 19802  1E02  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 19803  1E03  0020               	movlb	0	; select bank0
 19804  1E04  00B3               	movwf	??_do_I2C_TX+1
 19805  1E05  0022               	movlb	2	; select bank2
 19806  1E06  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 19807  1E07  0020               	movlb	0	; select bank0
 19808  1E08  00B2               	movwf	??_do_I2C_TX
 19809  1E09  0022               	movlb	2	; select bank2
 19810  1E0A  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 19811  1E0B  1903               	skipnz
 19812  1E0C  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 19813  1E0D  0020               	movlb	0	; select bank0
 19814  1E0E  0832               	movf	??_do_I2C_TX,w
 19815  1E0F  0084               	movwf	4
 19816  1E10  0833               	movf	??_do_I2C_TX+1,w
 19817  1E11  0085               	movwf	5
 19818  1E12  0800               	movf	0,w	;code access
 19819  1E13  31A2  2274  319D   	fcall	_i2c1_driver_TXData
 19820                           
 19821                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 19822  1E16  3001               	movlw	1
 19823  1E17  0022               	movlb	2	; select bank2
 19824  1E18  02A4               	subwf	(_i2c_status^(0+256)+4),f
 19825  1E19  3000               	movlw	0
 19826  1E1A  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 19827  1E1B  0824               	movf	(_i2c_status^(0+256)+4),w
 19828  1E1C  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 19829  1E1D  1D03               	btfss	3,2
 19830  1E1E  2E21               	goto	l7196
 19831  1E1F  3006               	movlw	6
 19832  1E20  2E22               	goto	L36
 19833  1E21                     l7196:	
 19834  1E21  3003               	movlw	3
 19835  1E22                     L36:	
 19836  1E22  0020               	movlb	0	; select bank0
 19837  1E23  00B4               	movwf	_do_I2C_TX$1131
 19838  1E24  3000               	movlw	0
 19839  1E25  00B5               	movwf	_do_I2C_TX$1131+1
 19840  1E26  0834               	movf	_do_I2C_TX$1131,w
 19841  1E27  0008               	return
 19842  1E28                     __end_of_do_I2C_TX:	
 19843                           
 19844                           	psect	text73
 19845  2746                     __ptext73:	
 19846 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 19847 ;; Defined at:
 19848 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 19849 ;; Parameters:    Size  Location     Type
 19850 ;;		None
 19851 ;; Auto vars:     Size  Location     Type
 19852 ;;		None
 19853 ;; Return value:  Size  Location     Type
 19854 ;;                  1    wreg      enum E8364
 19855 ;; Registers used:
 19856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19857 ;; Tracked objects:
 19858 ;;		On entry : 0/0
 19859 ;;		On exit  : 0/0
 19860 ;;		Unchanged: 0/0
 19861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19864 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19865 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19866 ;;Total ram usage:        1 bytes
 19867 ;; Hardware stack levels used:    1
 19868 ;; Hardware stack levels required when called:    8
 19869 ;; This function calls:
 19870 ;;		_do_I2C_SEND_RESTART
 19871 ;;		_do_I2C_SEND_STOP
 19872 ;;		_returnReset
 19873 ;;		_returnStop
 19874 ;; This function is called by:
 19875 ;;		_i2c_ISR
 19876 ;;		i1_i2c_ISR
 19877 ;; This function uses a non-reentrant model
 19878 ;;
 19879                           
 19880                           
 19881                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 19882  2746                     _do_I2C_DO_ADDRESS_NACK:	
 19883                           
 19884                           ;Skip over the trampoline to the duplicate function for level 1
 19885  2746  1C7E               	btfss	126,0
 19886  2747  2F4A               	goto	l7154
 19887  2748  31A6  2E42         	ljmp	i1l8226
 19888  274A                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
 19889  274A                     l7154:	
 19890                           ;incstack = 0
 19891                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19892                           
 19893                           
 19894                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 19895  274A  0022               	movlb	2	; select bank2
 19896  274B  11A0               	bcf	_i2c_status^(0+256),3
 19897                           
 19898                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 19899  274C  3002               	movlw	2
 19900  274D  0020               	movlb	0	; select bank0
 19901  274E  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 19902  274F  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 19903  2750  0022               	movlb	2	; select bank2
 19904  2751  00AB               	movwf	(_i2c_status^(0+256)+11)
 19905                           
 19906                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 19907  2752  2F59               	goto	l7168
 19908  2753                     l7158:	
 19909                           ;i2c_master.c: 324: {
 19910                           ;i2c_master.c: 325: case i2c_restart_read:
 19911                           
 19912                           
 19913                           ;i2c_master.c: 326: case i2c_restart_write:
 19914                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 19915  2753  31A2  22B4         	fcall	_do_I2C_SEND_RESTART
 19916  2755  0008               	return
 19917  2756                     l7162:	
 19918                           ;i2c_master.c: 328: default:
 19919                           
 19920                           
 19921                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 19922  2756  31A2  22BC         	fcall	_do_I2C_SEND_STOP
 19923                           
 19924                           ;i2c_master.c: 330: }
 19925  2758  0008               	return
 19926  2759                     l7168:	
 19927  2759  0022               	movlb	2	; select bank2
 19928  275A  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 19929  275B  0020               	movlb	0	; select bank0
 19930  275C  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 19931  275D  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 19932  275E  00B1               	movwf	returnReset@p
 19933  275F  3010               	movlw	16
 19934  2760  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 19935  2761  0086               	movwf	6
 19936  2762  3001               	movlw	1	; select bank2/3
 19937  2763  0087               	movwf	7
 19938  2764  3F41               	moviw [1]fsr1
 19939  2765  008A               	movwf	10
 19940  2766  3F40               	moviw [0]fsr1
 19941  2767  000A               	callw
 19942  2768  31A7               	pagesel	$
 19943                           
 19944                           ; Switch size 1, requested type "space"
 19945                           ; Number of cases is 2, Range of values is 2 to 3
 19946                           ; switch strategies available:
 19947                           ; Name         Instructions Cycles
 19948                           ; simple_byte            7     4 (average)
 19949                           ; direct_byte           13     9 (fixed)
 19950                           ; jumptable            263     9 (fixed)
 19951                           ;	Chosen strategy is simple_byte
 19952  2769  3A02               	xorlw	2	; case 2
 19953  276A  1903               	skipnz
 19954  276B  2F53               	goto	l7158
 19955  276C  3A01               	xorlw	1	; case 3
 19956  276D  1903               	skipnz
 19957  276E  2F53               	goto	l7158
 19958  276F  2F56               	goto	l7162
 19959  2770  0008               	return
 19960  2771                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 19961                           
 19962                           	psect	text74
 19963  22D4                     __ptext74:	
 19964 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 19965 ;; Defined at:
 19966 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 19967 ;; Parameters:    Size  Location     Type
 19968 ;;		None
 19969 ;; Auto vars:     Size  Location     Type
 19970 ;;		None
 19971 ;; Return value:  Size  Location     Type
 19972 ;;                  1    wreg      enum E8364
 19973 ;; Registers used:
 19974 ;;		wreg, status,2, status,0, pclath, cstack
 19975 ;; Tracked objects:
 19976 ;;		On entry : 0/0
 19977 ;;		On exit  : 0/0
 19978 ;;		Unchanged: 0/0
 19979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19984 ;;Total ram usage:        0 bytes
 19985 ;; Hardware stack levels used:    1
 19986 ;; Hardware stack levels required when called:    7
 19987 ;; This function calls:
 19988 ;;		_i2c1_driver_sendNACK
 19989 ;; This function is called by:
 19990 ;;		_do_I2C_RX
 19991 ;;		_i2c_ISR
 19992 ;;		i1_i2c_ISR
 19993 ;; This function uses a non-reentrant model
 19994 ;;
 19995                           
 19996                           
 19997                           ;psect for function _do_I2C_DO_NACK_RESTART
 19998  22D4                     _do_I2C_DO_NACK_RESTART:	
 19999                           
 20000                           ;Skip over the trampoline to the duplicate function for level 1
 20001  22D4  1C7E               	btfss	126,0
 20002  22D5  2AD8               	goto	l7090
 20003  22D6  31A2  2A30         	ljmp	i1l7860
 20004  22D8                     _do_I2C_DO_NACK_RESTART$intlevel0:	
 20005  22D8                     l7090:	
 20006                           ;incstack = 0
 20007                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20008                           
 20009                           
 20010                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 20011  22D8  31A2  223C         	fcall	_i2c1_driver_sendNACK
 20012                           
 20013                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 20014  22DA  3009               	movlw	9
 20015  22DB  0008               	return
 20016  22DC                     __end_of_do_I2C_DO_NACK_RESTART:	
 20017                           
 20018                           	psect	text75
 20019  22CC                     __ptext75:	
 20020 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 20021 ;; Defined at:
 20022 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 20023 ;; Parameters:    Size  Location     Type
 20024 ;;		None
 20025 ;; Auto vars:     Size  Location     Type
 20026 ;;		None
 20027 ;; Return value:  Size  Location     Type
 20028 ;;                  1    wreg      enum E8364
 20029 ;; Registers used:
 20030 ;;		wreg, status,2, status,0, pclath, cstack
 20031 ;; Tracked objects:
 20032 ;;		On entry : 0/0
 20033 ;;		On exit  : 0/0
 20034 ;;		Unchanged: 0/0
 20035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20040 ;;Total ram usage:        0 bytes
 20041 ;; Hardware stack levels used:    1
 20042 ;; Hardware stack levels required when called:    7
 20043 ;; This function calls:
 20044 ;;		_i2c1_driver_sendNACK
 20045 ;; This function is called by:
 20046 ;;		_do_I2C_RX
 20047 ;;		_i2c_ISR
 20048 ;;		i1_i2c_ISR
 20049 ;; This function uses a non-reentrant model
 20050 ;;
 20051                           
 20052                           
 20053                           ;psect for function _do_I2C_DO_NACK_STOP
 20054  22CC                     _do_I2C_DO_NACK_STOP:	
 20055                           
 20056                           ;Skip over the trampoline to the duplicate function for level 1
 20057  22CC  1C7E               	btfss	126,0
 20058  22CD  2AD0               	goto	l7084
 20059  22CE  31A2  2A2C         	ljmp	i1l7854
 20060  22D0                     _do_I2C_DO_NACK_STOP$intlevel0:	
 20061  22D0                     l7084:	
 20062                           ;incstack = 0
 20063                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 20064                           
 20065                           
 20066                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 20067  22D0  31A2  223C         	fcall	_i2c1_driver_sendNACK
 20068                           
 20069                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 20070  22D2  300A               	movlw	10
 20071  22D3  0008               	return
 20072  22D4                     __end_of_do_I2C_DO_NACK_STOP:	
 20073                           
 20074                           	psect	text76
 20075  22C4                     __ptext76:	
 20076 ;; *************** function _do_I2C_DO_ACK *****************
 20077 ;; Defined at:
 20078 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 20079 ;; Parameters:    Size  Location     Type
 20080 ;;		None
 20081 ;; Auto vars:     Size  Location     Type
 20082 ;;		None
 20083 ;; Return value:  Size  Location     Type
 20084 ;;                  1    wreg      enum E8364
 20085 ;; Registers used:
 20086 ;;		wreg, status,2, status,0, pclath, cstack
 20087 ;; Tracked objects:
 20088 ;;		On entry : 0/0
 20089 ;;		On exit  : 0/0
 20090 ;;		Unchanged: 0/0
 20091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20096 ;;Total ram usage:        0 bytes
 20097 ;; Hardware stack levels used:    1
 20098 ;; Hardware stack levels required when called:    7
 20099 ;; This function calls:
 20100 ;;		_i2c1_driver_sendACK
 20101 ;; This function is called by:
 20102 ;;		_i2c_ISR
 20103 ;;		i1_i2c_ISR
 20104 ;; This function uses a non-reentrant model
 20105 ;;
 20106                           
 20107                           
 20108                           ;psect for function _do_I2C_DO_ACK
 20109  22C4                     _do_I2C_DO_ACK:	
 20110                           
 20111                           ;Skip over the trampoline to the duplicate function for level 1
 20112  22C4  1C7E               	btfss	126,0
 20113  22C5  2AC8               	goto	l7148
 20114  22C6  31A2  2A28         	ljmp	i1l8220
 20115  22C8                     _do_I2C_DO_ACK$intlevel0:	
 20116  22C8                     l7148:	
 20117                           ;incstack = 0
 20118                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 20119                           
 20120                           
 20121                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 20122  22C8  31A2  2238         	fcall	_i2c1_driver_sendACK
 20123                           
 20124                           ;i2c_master.c: 302: return I2C_RCEN;
 20125  22CA  3005               	movlw	5
 20126  22CB  0008               	return
 20127  22CC                     __end_of_do_I2C_DO_ACK:	
 20128                           
 20129                           	psect	text77
 20130  2324                     __ptext77:	
 20131 ;; *************** function _do_I2C_RCEN *****************
 20132 ;; Defined at:
 20133 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 20134 ;; Parameters:    Size  Location     Type
 20135 ;;		None
 20136 ;; Auto vars:     Size  Location     Type
 20137 ;;		None
 20138 ;; Return value:  Size  Location     Type
 20139 ;;                  1    wreg      enum E8364
 20140 ;; Registers used:
 20141 ;;		wreg, status,2, status,0, pclath, cstack
 20142 ;; Tracked objects:
 20143 ;;		On entry : 0/0
 20144 ;;		On exit  : 0/0
 20145 ;;		Unchanged: 0/0
 20146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20151 ;;Total ram usage:        0 bytes
 20152 ;; Hardware stack levels used:    1
 20153 ;; Hardware stack levels required when called:    7
 20154 ;; This function calls:
 20155 ;;		_i2c1_driver_startRX
 20156 ;; This function is called by:
 20157 ;;		_i2c_ISR
 20158 ;;		i1_i2c_ISR
 20159 ;; This function uses a non-reentrant model
 20160 ;;
 20161                           
 20162                           
 20163                           ;psect for function _do_I2C_RCEN
 20164  2324                     _do_I2C_RCEN:	
 20165                           
 20166                           ;Skip over the trampoline to the duplicate function for level 1
 20167  2324  1C7E               	btfss	126,0
 20168  2325  2B28               	goto	l7140
 20169  2326  31A2  2A62         	ljmp	i1l6326
 20170  2328                     _do_I2C_RCEN$intlevel0:	
 20171  2328                     l7140:	
 20172                           ;incstack = 0
 20173                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 20174                           
 20175                           
 20176                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 20177  2328  0022               	movlb	2	; select bank2
 20178  2329  11A0               	bcf	_i2c_status^(0+256),3
 20179                           
 20180                           ;i2c_master.c: 295: i2c1_driver_startRX();
 20181  232A  31A2  2204         	fcall	_i2c1_driver_startRX
 20182                           
 20183                           ;i2c_master.c: 296: return I2C_RX;
 20184  232C  3004               	movlw	4
 20185  232D  0008               	return
 20186  232E                     __end_of_do_I2C_RCEN:	
 20187                           
 20188                           	psect	text78
 20189  2357                     __ptext78:	
 20190 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 20191 ;; Defined at:
 20192 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 20193 ;; Parameters:    Size  Location     Type
 20194 ;;		None
 20195 ;; Auto vars:     Size  Location     Type
 20196 ;;		None
 20197 ;; Return value:  Size  Location     Type
 20198 ;;                  1    wreg      enum E8364
 20199 ;; Registers used:
 20200 ;;		wreg, status,2, status,0, pclath, cstack
 20201 ;; Tracked objects:
 20202 ;;		On entry : 0/0
 20203 ;;		On exit  : 0/0
 20204 ;;		Unchanged: 0/0
 20205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20210 ;;Total ram usage:        0 bytes
 20211 ;; Hardware stack levels used:    1
 20212 ;; Hardware stack levels required when called:    7
 20213 ;; This function calls:
 20214 ;;		_i2c1_driver_TXData
 20215 ;; This function is called by:
 20216 ;;		_i2c_ISR
 20217 ;;		i1_i2c_ISR
 20218 ;; This function uses a non-reentrant model
 20219 ;;
 20220                           
 20221                           
 20222                           ;psect for function _do_I2C_SEND_ADR_WRITE
 20223  2357                     _do_I2C_SEND_ADR_WRITE:	
 20224                           
 20225                           ;Skip over the trampoline to the duplicate function for level 1
 20226  2357  1C7E               	btfss	126,0
 20227  2358  2B5B               	goto	l7132
 20228  2359  31A2  2A8D         	ljmp	i1l8212
 20229  235B                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
 20230  235B                     l7132:	
 20231                           ;incstack = 0
 20232                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20233                           
 20234                           
 20235                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 20236  235B  0022               	movlb	2	; select bank2
 20237  235C  15A0               	bsf	_i2c_status^(0+256),3
 20238                           
 20239                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 20240  235D  3521               	lslf	(_i2c_status^(0+256)+1),w
 20241  235E  31A2  2274         	fcall	_i2c1_driver_TXData
 20242                           
 20243                           ;i2c_master.c: 289: return I2C_TX;
 20244  2360  3003               	movlw	3
 20245  2361  0008               	return
 20246  2362                     __end_of_do_I2C_SEND_ADR_WRITE:	
 20247                           
 20248                           	psect	text79
 20249  2379                     __ptext79:	
 20250 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 20251 ;; Defined at:
 20252 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 20253 ;; Parameters:    Size  Location     Type
 20254 ;;		None
 20255 ;; Auto vars:     Size  Location     Type
 20256 ;;		None
 20257 ;; Return value:  Size  Location     Type
 20258 ;;                  1    wreg      enum E8364
 20259 ;; Registers used:
 20260 ;;		wreg, status,2, status,0, pclath, cstack
 20261 ;; Tracked objects:
 20262 ;;		On entry : 0/0
 20263 ;;		On exit  : 0/0
 20264 ;;		Unchanged: 0/0
 20265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20270 ;;Total ram usage:        0 bytes
 20271 ;; Hardware stack levels used:    1
 20272 ;; Hardware stack levels required when called:    7
 20273 ;; This function calls:
 20274 ;;		_i2c1_driver_TXData
 20275 ;; This function is called by:
 20276 ;;		_i2c_ISR
 20277 ;;		i1_i2c_ISR
 20278 ;; This function uses a non-reentrant model
 20279 ;;
 20280                           
 20281                           
 20282                           ;psect for function _do_I2C_SEND_ADR_READ
 20283  2379                     _do_I2C_SEND_ADR_READ:	
 20284                           
 20285                           ;Skip over the trampoline to the duplicate function for level 1
 20286  2379  1C7E               	btfss	126,0
 20287  237A  2B7D               	goto	l7124
 20288  237B  31A2  2A94         	ljmp	i1l8204
 20289  237D                     _do_I2C_SEND_ADR_READ$intlevel0:	
 20290  237D                     l7124:	
 20291                           ;incstack = 0
 20292                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 20293                           
 20294                           
 20295                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 20296  237D  0022               	movlb	2	; select bank2
 20297  237E  15A0               	bsf	_i2c_status^(0+256),3
 20298                           
 20299                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 20300  237F  1403               	setc
 20301  2380  0D21               	rlf	(_i2c_status^(0+256)+1),w
 20302  2381  31A2  2274         	fcall	_i2c1_driver_TXData
 20303                           
 20304                           ;i2c_master.c: 282: return I2C_RCEN;
 20305  2383  3005               	movlw	5
 20306  2384  0008               	return
 20307  2385                     __end_of_do_I2C_SEND_ADR_READ:	
 20308                           
 20309                           	psect	text80
 20310  22BC                     __ptext80:	
 20311 ;; *************** function _do_I2C_SEND_STOP *****************
 20312 ;; Defined at:
 20313 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 20314 ;; Parameters:    Size  Location     Type
 20315 ;;		None
 20316 ;; Auto vars:     Size  Location     Type
 20317 ;;		None
 20318 ;; Return value:  Size  Location     Type
 20319 ;;                  1    wreg      enum E8364
 20320 ;; Registers used:
 20321 ;;		wreg, status,2, status,0, pclath, cstack
 20322 ;; Tracked objects:
 20323 ;;		On entry : 0/0
 20324 ;;		On exit  : 0/0
 20325 ;;		Unchanged: 0/0
 20326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20331 ;;Total ram usage:        0 bytes
 20332 ;; Hardware stack levels used:    1
 20333 ;; Hardware stack levels required when called:    7
 20334 ;; This function calls:
 20335 ;;		_i2c1_driver_stop
 20336 ;; This function is called by:
 20337 ;;		_do_I2C_DO_ADDRESS_NACK
 20338 ;;		_do_I2C_TX
 20339 ;;		_do_I2C_TX_EMPTY
 20340 ;;		_i2c_ISR
 20341 ;;		i1_i2c_ISR
 20342 ;; This function uses a non-reentrant model
 20343 ;;
 20344                           
 20345                           
 20346                           ;psect for function _do_I2C_SEND_STOP
 20347  22BC                     _do_I2C_SEND_STOP:	
 20348                           
 20349                           ;Skip over the trampoline to the duplicate function for level 1
 20350  22BC  1C7E               	btfss	126,0
 20351  22BD  2AC0               	goto	l7078
 20352  22BE  31A2  2A24         	ljmp	i1l7848
 20353  22C0                     _do_I2C_SEND_STOP$intlevel0:	
 20354  22C0                     l7078:	
 20355                           ;incstack = 0
 20356                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 20357                           
 20358                           
 20359                           ;i2c_master.c: 274: i2c1_driver_stop();
 20360  22C0  31A2  2201         	fcall	_i2c1_driver_stop
 20361                           
 20362                           ;i2c_master.c: 275: return I2C_IDLE;
 20363  22C2  3000               	movlw	0
 20364  22C3  0008               	return
 20365  22C4                     __end_of_do_I2C_SEND_STOP:	
 20366                           
 20367                           	psect	text81
 20368  22B4                     __ptext81:	
 20369 ;; *************** function _do_I2C_SEND_RESTART *****************
 20370 ;; Defined at:
 20371 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 20372 ;; Parameters:    Size  Location     Type
 20373 ;;		None
 20374 ;; Auto vars:     Size  Location     Type
 20375 ;;		None
 20376 ;; Return value:  Size  Location     Type
 20377 ;;                  1    wreg      enum E8364
 20378 ;; Registers used:
 20379 ;;		wreg, status,2, status,0, pclath, cstack
 20380 ;; Tracked objects:
 20381 ;;		On entry : 0/0
 20382 ;;		On exit  : 0/0
 20383 ;;		Unchanged: 0/0
 20384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20389 ;;Total ram usage:        0 bytes
 20390 ;; Hardware stack levels used:    1
 20391 ;; Hardware stack levels required when called:    7
 20392 ;; This function calls:
 20393 ;;		_i2c1_driver_restart
 20394 ;; This function is called by:
 20395 ;;		_do_I2C_DO_ADDRESS_NACK
 20396 ;;		_do_I2C_TX_EMPTY
 20397 ;;		_i2c_ISR
 20398 ;;		i1_i2c_ISR
 20399 ;; This function uses a non-reentrant model
 20400 ;;
 20401                           
 20402                           
 20403                           ;psect for function _do_I2C_SEND_RESTART
 20404  22B4                     _do_I2C_SEND_RESTART:	
 20405                           
 20406                           ;Skip over the trampoline to the duplicate function for level 1
 20407  22B4  1C7E               	btfss	126,0
 20408  22B5  2AB8               	goto	l7072
 20409  22B6  31A2  2A20         	ljmp	i1l7842
 20410  22B8                     _do_I2C_SEND_RESTART$intlevel0:	
 20411  22B8                     l7072:	
 20412                           ;incstack = 0
 20413                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20414                           
 20415                           
 20416                           ;i2c_master.c: 268: i2c1_driver_restart();
 20417  22B8  31A1  21FE         	fcall	_i2c1_driver_restart
 20418                           
 20419                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 20420  22BA  3001               	movlw	1
 20421  22BB  0008               	return
 20422  22BC                     __end_of_do_I2C_SEND_RESTART:	
 20423                           
 20424                           	psect	text82
 20425  22AC                     __ptext82:	
 20426 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 20427 ;; Defined at:
 20428 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 20429 ;; Parameters:    Size  Location     Type
 20430 ;;		None
 20431 ;; Auto vars:     Size  Location     Type
 20432 ;;		None
 20433 ;; Return value:  Size  Location     Type
 20434 ;;                  1    wreg      enum E8364
 20435 ;; Registers used:
 20436 ;;		wreg, status,2, status,0, pclath, cstack
 20437 ;; Tracked objects:
 20438 ;;		On entry : 0/0
 20439 ;;		On exit  : 0/0
 20440 ;;		Unchanged: 0/0
 20441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20446 ;;Total ram usage:        0 bytes
 20447 ;; Hardware stack levels used:    1
 20448 ;; Hardware stack levels required when called:    7
 20449 ;; This function calls:
 20450 ;;		_i2c1_driver_restart
 20451 ;; This function is called by:
 20452 ;;		_do_I2C_TX
 20453 ;;		_i2c_ISR
 20454 ;;		i1_i2c_ISR
 20455 ;; This function uses a non-reentrant model
 20456 ;;
 20457                           
 20458                           
 20459                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 20460  22AC                     _do_I2C_SEND_RESTART_WRITE:	
 20461                           
 20462                           ;Skip over the trampoline to the duplicate function for level 1
 20463  22AC  1C7E               	btfss	126,0
 20464  22AD  2AB0               	goto	l7066
 20465  22AE  31A2  2A1C         	ljmp	i1l7836
 20466  22B0                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
 20467  22B0                     l7066:	
 20468                           ;incstack = 0
 20469                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20470                           
 20471                           
 20472                           ;i2c_master.c: 262: i2c1_driver_restart();
 20473  22B0  31A1  21FE         	fcall	_i2c1_driver_restart
 20474                           
 20475                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 20476  22B2  3002               	movlw	2
 20477  22B3  0008               	return
 20478  22B4                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 20479                           
 20480                           	psect	text83
 20481  22A4                     __ptext83:	
 20482 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 20483 ;; Defined at:
 20484 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 20485 ;; Parameters:    Size  Location     Type
 20486 ;;		None
 20487 ;; Auto vars:     Size  Location     Type
 20488 ;;		None
 20489 ;; Return value:  Size  Location     Type
 20490 ;;                  1    wreg      enum E8364
 20491 ;; Registers used:
 20492 ;;		wreg, status,2, status,0, pclath, cstack
 20493 ;; Tracked objects:
 20494 ;;		On entry : 0/0
 20495 ;;		On exit  : 0/0
 20496 ;;		Unchanged: 0/0
 20497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20502 ;;Total ram usage:        0 bytes
 20503 ;; Hardware stack levels used:    1
 20504 ;; Hardware stack levels required when called:    7
 20505 ;; This function calls:
 20506 ;;		_i2c1_driver_restart
 20507 ;; This function is called by:
 20508 ;;		_do_I2C_TX
 20509 ;;		_i2c_ISR
 20510 ;;		i1_i2c_ISR
 20511 ;; This function uses a non-reentrant model
 20512 ;;
 20513                           
 20514                           
 20515                           ;psect for function _do_I2C_SEND_RESTART_READ
 20516  22A4                     _do_I2C_SEND_RESTART_READ:	
 20517                           
 20518                           ;Skip over the trampoline to the duplicate function for level 1
 20519  22A4  1C7E               	btfss	126,0
 20520  22A5  2AA8               	goto	l7060
 20521  22A6  31A2  2A18         	ljmp	i1l7830
 20522  22A8                     _do_I2C_SEND_RESTART_READ$intlevel0:	
 20523  22A8                     l7060:	
 20524                           ;incstack = 0
 20525                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 20526                           
 20527                           
 20528                           ;i2c_master.c: 256: i2c1_driver_restart();
 20529  22A8  31A1  21FE         	fcall	_i2c1_driver_restart
 20530                           
 20531                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 20532  22AA  3001               	movlw	1
 20533  22AB  0008               	return
 20534  22AC                     __end_of_do_I2C_SEND_RESTART_READ:	
 20535                           
 20536                           	psect	text84
 20537  22FF                     __ptext84:	
 20538 ;; *************** function _do_I2C_IDLE *****************
 20539 ;; Defined at:
 20540 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 20541 ;; Parameters:    Size  Location     Type
 20542 ;;		None
 20543 ;; Auto vars:     Size  Location     Type
 20544 ;;		None
 20545 ;; Return value:  Size  Location     Type
 20546 ;;                  1    wreg      enum E8364
 20547 ;; Registers used:
 20548 ;;		wreg, status,2
 20549 ;; Tracked objects:
 20550 ;;		On entry : 0/0
 20551 ;;		On exit  : 0/0
 20552 ;;		Unchanged: 0/0
 20553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20558 ;;Total ram usage:        0 bytes
 20559 ;; Hardware stack levels used:    1
 20560 ;; Hardware stack levels required when called:    6
 20561 ;; This function calls:
 20562 ;;		Nothing
 20563 ;; This function is called by:
 20564 ;;		_i2c_ISR
 20565 ;;		i1_i2c_ISR
 20566 ;; This function uses a non-reentrant model
 20567 ;;
 20568                           
 20569                           
 20570                           ;psect for function _do_I2C_IDLE
 20571  22FF                     _do_I2C_IDLE:	
 20572                           
 20573                           ;Skip over the trampoline to the duplicate function for level 1
 20574  22FF  1C7E               	btfss	126,0
 20575  2300  2B03               	goto	l7116
 20576  2301  31A2  2A53         	ljmp	i1l6302
 20577  2303                     _do_I2C_IDLE$intlevel0:	
 20578  2303                     l7116:	
 20579                           ;incstack = 0
 20580                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 20581                           
 20582                           
 20583                           ;i2c_master.c: 249: i2c_status.busy = 0;
 20584  2303  0022               	movlb	2	; select bank2
 20585  2304  1020               	bcf	_i2c_status^(0+256),0
 20586                           
 20587                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 20588  2305  01AB               	clrf	(_i2c_status^(0+256)+11)
 20589                           
 20590                           ;i2c_master.c: 251: return I2C_RESET;
 20591  2306  300E               	movlw	14
 20592  2307  0008               	return
 20593  2308                     __end_of_do_I2C_IDLE:	
 20594                           
 20595                           	psect	text85
 20596  234C                     __ptext85:	
 20597 ;; *************** function _do_I2C_RESET *****************
 20598 ;; Defined at:
 20599 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 20600 ;; Parameters:    Size  Location     Type
 20601 ;;		None
 20602 ;; Auto vars:     Size  Location     Type
 20603 ;;		None
 20604 ;; Return value:  Size  Location     Type
 20605 ;;                  1    wreg      enum E8364
 20606 ;; Registers used:
 20607 ;;		wreg, status,2, status,0, pclath, cstack
 20608 ;; Tracked objects:
 20609 ;;		On entry : 0/0
 20610 ;;		On exit  : 0/0
 20611 ;;		Unchanged: 0/0
 20612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20617 ;;Total ram usage:        0 bytes
 20618 ;; Hardware stack levels used:    1
 20619 ;; Hardware stack levels required when called:    7
 20620 ;; This function calls:
 20621 ;;		_i2c1_driver_resetBus
 20622 ;; This function is called by:
 20623 ;;		_i2c_ISR
 20624 ;;		i1_i2c_ISR
 20625 ;; This function uses a non-reentrant model
 20626 ;;
 20627                           
 20628                           
 20629                           ;psect for function _do_I2C_RESET
 20630  234C                     _do_I2C_RESET:	
 20631                           
 20632                           ;Skip over the trampoline to the duplicate function for level 1
 20633  234C  1C7E               	btfss	126,0
 20634  234D  2B50               	goto	l7106
 20635  234E  31A2  2A86         	ljmp	i1l6292
 20636  2350                     _do_I2C_RESET$intlevel0:	
 20637  2350                     l7106:	
 20638                           ;incstack = 0
 20639                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 20640                           
 20641                           
 20642                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 20643  2350  31A1  21D2         	fcall	_i2c1_driver_resetBus
 20644                           
 20645                           ;i2c_master.c: 242: i2c_status.busy = 0;
 20646  2352  0022               	movlb	2	; select bank2
 20647  2353  1020               	bcf	_i2c_status^(0+256),0
 20648                           
 20649                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 20650  2354  01AB               	clrf	(_i2c_status^(0+256)+11)
 20651                           
 20652                           ;i2c_master.c: 244: return I2C_RESET;
 20653  2355  300E               	movlw	14
 20654  2356  0008               	return
 20655  2357                     __end_of_do_I2C_RESET:	
 20656                           
 20657                           	psect	text86
 20658  2771                     __ptext86:	
 20659 ;; *************** function _do_I2C_TX_EMPTY *****************
 20660 ;; Defined at:
 20661 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 20662 ;; Parameters:    Size  Location     Type
 20663 ;;		None
 20664 ;; Auto vars:     Size  Location     Type
 20665 ;;		None
 20666 ;; Return value:  Size  Location     Type
 20667 ;;                  1    wreg      enum E8364
 20668 ;; Registers used:
 20669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20670 ;; Tracked objects:
 20671 ;;		On entry : 0/0
 20672 ;;		On exit  : 0/0
 20673 ;;		Unchanged: 0/0
 20674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20677 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20678 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20679 ;;Total ram usage:        1 bytes
 20680 ;; Hardware stack levels used:    1
 20681 ;; Hardware stack levels required when called:    8
 20682 ;; This function calls:
 20683 ;;		_do_I2C_SEND_RESTART
 20684 ;;		_do_I2C_SEND_STOP
 20685 ;;		_mssp1_setIRQ
 20686 ;;		_returnReset
 20687 ;;		_returnStop
 20688 ;; This function is called by:
 20689 ;;		_i2c_ISR
 20690 ;;		i1_i2c_ISR
 20691 ;; This function uses a non-reentrant model
 20692 ;;
 20693                           
 20694                           
 20695                           ;psect for function _do_I2C_TX_EMPTY
 20696  2771                     _do_I2C_TX_EMPTY:	
 20697                           
 20698                           ;Skip over the trampoline to the duplicate function for level 1
 20699  2771  1C7E               	btfss	126,0
 20700  2772  2F75               	goto	l7226
 20701  2773  3193  2BCC         	ljmp	i1l8298
 20702  2775                     _do_I2C_TX_EMPTY$intlevel0:	
 20703  2775                     l7226:	
 20704                           ;incstack = 0
 20705                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20706                           
 20707                           
 20708                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 20709  2775  0022               	movlb	2	; select bank2
 20710  2776  1520               	bsf	_i2c_status^(0+256),2
 20711                           
 20712                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 20713  2777  2F82               	goto	l7244
 20714  2778                     l7228:	
 20715                           ;i2c_master.c: 386: {
 20716                           ;i2c_master.c: 387: case i2c_restart_read:
 20717                           
 20718                           
 20719                           ;i2c_master.c: 388: case i2c_restart_write:
 20720                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 20721  2778  31A2  22B4         	fcall	_do_I2C_SEND_RESTART
 20722  277A  0008               	return
 20723  277B                     l7232:	
 20724                           ;i2c_master.c: 390: case i2c_continue:
 20725                           
 20726                           
 20727                           ;i2c_master.c: 391: mssp1_setIRQ();
 20728  277B  31A2  220A         	fcall	_mssp1_setIRQ
 20729                           
 20730                           ;i2c_master.c: 392: return I2C_TX;
 20731  277D  3003               	movlw	3
 20732  277E  0008               	return
 20733  277F                     l7238:	
 20734                           ;i2c_master.c: 394: case i2c_stop:
 20735                           
 20736                           ;i2c_master.c: 393: default:
 20737                           
 20738                           
 20739                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 20740  277F  31A2  22BC         	fcall	_do_I2C_SEND_STOP
 20741                           
 20742                           ;i2c_master.c: 396: }
 20743  2781  0008               	return
 20744  2782                     l7244:	
 20745  2782  0022               	movlb	2	; select bank2
 20746  2783  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 20747  2784  0020               	movlb	0	; select bank0
 20748  2785  00B1               	movwf	??_do_I2C_TX_EMPTY
 20749  2786  0831               	movf	??_do_I2C_TX_EMPTY,w
 20750  2787  00B1               	movwf	returnReset@p
 20751  2788  300C               	movlw	12
 20752  2789  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 20753  278A  0086               	movwf	6
 20754  278B  3001               	movlw	1	; select bank2/3
 20755  278C  0087               	movwf	7
 20756  278D  3F41               	moviw [1]fsr1
 20757  278E  008A               	movwf	10
 20758  278F  3F40               	moviw [0]fsr1
 20759  2790  000A               	callw
 20760  2791  31A7               	pagesel	$
 20761                           
 20762                           ; Switch size 1, requested type "space"
 20763                           ; Number of cases is 4, Range of values is 1 to 4
 20764                           ; switch strategies available:
 20765                           ; Name         Instructions Cycles
 20766                           ; simple_byte           13     7 (average)
 20767                           ; direct_byte           17     9 (fixed)
 20768                           ; jumptable            263     9 (fixed)
 20769                           ;	Chosen strategy is simple_byte
 20770  2792  3A01               	xorlw	1	; case 1
 20771  2793  1903               	skipnz
 20772  2794  2F7F               	goto	l7238
 20773  2795  3A03               	xorlw	3	; case 2
 20774  2796  1903               	skipnz
 20775  2797  2F78               	goto	l7228
 20776  2798  3A01               	xorlw	1	; case 3
 20777  2799  1903               	skipnz
 20778  279A  2F78               	goto	l7228
 20779  279B  3A07               	xorlw	7	; case 4
 20780  279C  1903               	skipnz
 20781  279D  2F7B               	goto	l7232
 20782  279E  2F7F               	goto	l7238
 20783  279F  0008               	return
 20784  27A0                     __end_of_do_I2C_TX_EMPTY:	
 20785                           
 20786                           	psect	text87
 20787  220A                     __ptext87:	
 20788 ;; *************** function _mssp1_setIRQ *****************
 20789 ;; Defined at:
 20790 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 20791 ;; Parameters:    Size  Location     Type
 20792 ;;		None
 20793 ;; Auto vars:     Size  Location     Type
 20794 ;;		None
 20795 ;; Return value:  Size  Location     Type
 20796 ;;                  1    wreg      void 
 20797 ;; Registers used:
 20798 ;;		None
 20799 ;; Tracked objects:
 20800 ;;		On entry : 0/0
 20801 ;;		On exit  : 0/0
 20802 ;;		Unchanged: 0/0
 20803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20808 ;;Total ram usage:        0 bytes
 20809 ;; Hardware stack levels used:    1
 20810 ;; Hardware stack levels required when called:    6
 20811 ;; This function calls:
 20812 ;;		Nothing
 20813 ;; This function is called by:
 20814 ;;		_do_I2C_TX_EMPTY
 20815 ;; This function uses a non-reentrant model
 20816 ;;
 20817                           
 20818                           
 20819                           ;psect for function _mssp1_setIRQ
 20820  220A                     _mssp1_setIRQ:	
 20821                           
 20822                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 20823                           
 20824                           ;incstack = 0
 20825                           ; Regs used in _mssp1_setIRQ: []
 20826  220A  0020               	movlb	0	; select bank0
 20827  220B  1591               	bsf	17,3	;volatile
 20828  220C  0008               	return
 20829  220D                     __end_of_mssp1_setIRQ:	
 20830                           
 20831                           	psect	text88
 20832  23B7                     __ptext88:	
 20833 ;; *************** function _i2c1_driver_isNACK *****************
 20834 ;; Defined at:
 20835 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 20836 ;; Parameters:    Size  Location     Type
 20837 ;;		None
 20838 ;; Auto vars:     Size  Location     Type
 20839 ;;		None
 20840 ;; Return value:  Size  Location     Type
 20841 ;;		None               void
 20842 ;; Registers used:
 20843 ;;		wreg, status,2, status,0
 20844 ;; Tracked objects:
 20845 ;;		On entry : 0/0
 20846 ;;		On exit  : 0/0
 20847 ;;		Unchanged: 0/0
 20848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20851 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20852 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20853 ;;Total ram usage:        1 bytes
 20854 ;; Hardware stack levels used:    1
 20855 ;; Hardware stack levels required when called:    6
 20856 ;; This function calls:
 20857 ;;		Nothing
 20858 ;; This function is called by:
 20859 ;;		_do_I2C_TX
 20860 ;;		_i2c_ISR
 20861 ;; This function uses a non-reentrant model
 20862 ;;
 20863                           
 20864                           
 20865                           ;psect for function _i2c1_driver_isNACK
 20866  23B7                     _i2c1_driver_isNACK:	
 20867                           
 20868                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 20869                           
 20870                           ;incstack = 0
 20871                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 20872  23B7  0024               	movlb	4	; select bank4
 20873  23B8  0816               	movf	22,w	;volatile
 20874  23B9  39BF               	andlw	-65
 20875  23BA  3840               	iorlw	64
 20876  23BB  0096               	movwf	22	;volatile
 20877  23BC  0E16               	swapf	22,w	;volatile
 20878  23BD  0C89               	rrf	9,f
 20879  23BE  0C89               	rrf	9,f
 20880  23BF  3901               	andlw	1
 20881  23C0  0020               	movlb	0	; select bank0
 20882  23C1  00B1               	movwf	??_i2c1_driver_isNACK
 20883  23C2  0C31               	rrf	??_i2c1_driver_isNACK,w
 20884  23C3  0008               	return
 20885  23C4                     __end_of_i2c1_driver_isNACK:	
 20886                           
 20887                           	psect	text89
 20888  2274                     __ptext89:	
 20889 ;; *************** function _i2c1_driver_TXData *****************
 20890 ;; Defined at:
 20891 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 20892 ;; Parameters:    Size  Location     Type
 20893 ;;  d               1    wreg     unsigned char 
 20894 ;; Auto vars:     Size  Location     Type
 20895 ;;  d               1   17[BANK0 ] unsigned char 
 20896 ;; Return value:  Size  Location     Type
 20897 ;;                  1    wreg      void 
 20898 ;; Registers used:
 20899 ;;		wreg
 20900 ;; Tracked objects:
 20901 ;;		On entry : 0/0
 20902 ;;		On exit  : 0/0
 20903 ;;		Unchanged: 0/0
 20904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20909 ;;Total ram usage:        1 bytes
 20910 ;; Hardware stack levels used:    1
 20911 ;; Hardware stack levels required when called:    6
 20912 ;; This function calls:
 20913 ;;		Nothing
 20914 ;; This function is called by:
 20915 ;;		_do_I2C_SEND_ADR_READ
 20916 ;;		_do_I2C_SEND_ADR_WRITE
 20917 ;;		_do_I2C_TX
 20918 ;; This function uses a non-reentrant model
 20919 ;;
 20920                           
 20921                           
 20922                           ;psect for function _i2c1_driver_TXData
 20923  2274                     _i2c1_driver_TXData:	
 20924                           
 20925                           ;incstack = 0
 20926                           ; Regs used in _i2c1_driver_TXData: [wreg]
 20927                           ;i2c1_driver_TXData@d stored from wreg
 20928  2274  0020               	movlb	0	; select bank0
 20929  2275  00B1               	movwf	i2c1_driver_TXData@d
 20930                           
 20931                           ;i2c1_driver.c: 188: SSP1BUF = d;
 20932  2276  0831               	movf	i2c1_driver_TXData@d,w
 20933  2277  0024               	movlb	4	; select bank4
 20934  2278  0091               	movwf	17	;volatile
 20935  2279  0008               	return
 20936  227A                     __end_of_i2c1_driver_TXData:	
 20937                           
 20938                           	psect	text90
 20939  2207                     __ptext90:	
 20940 ;; *************** function _i2c1_driver_getRXData *****************
 20941 ;; Defined at:
 20942 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 20943 ;; Parameters:    Size  Location     Type
 20944 ;;		None
 20945 ;; Auto vars:     Size  Location     Type
 20946 ;;		None
 20947 ;; Return value:  Size  Location     Type
 20948 ;;                  1    wreg      unsigned char 
 20949 ;; Registers used:
 20950 ;;		wreg
 20951 ;; Tracked objects:
 20952 ;;		On entry : 0/0
 20953 ;;		On exit  : 0/0
 20954 ;;		Unchanged: 0/0
 20955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20960 ;;Total ram usage:        0 bytes
 20961 ;; Hardware stack levels used:    1
 20962 ;; Hardware stack levels required when called:    6
 20963 ;; This function calls:
 20964 ;;		Nothing
 20965 ;; This function is called by:
 20966 ;;		_do_I2C_RX
 20967 ;; This function uses a non-reentrant model
 20968 ;;
 20969                           
 20970                           
 20971                           ;psect for function _i2c1_driver_getRXData
 20972  2207                     _i2c1_driver_getRXData:	
 20973                           
 20974                           ;i2c1_driver.c: 173: return SSP1BUF;
 20975                           
 20976                           ;incstack = 0
 20977                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 20978  2207  0024               	movlb	4	; select bank4
 20979  2208  0811               	movf	17,w	;volatile
 20980  2209  0008               	return
 20981  220A                     __end_of_i2c1_driver_getRXData:	
 20982                           
 20983                           	psect	text91
 20984  223C                     __ptext91:	
 20985 ;; *************** function _i2c1_driver_sendNACK *****************
 20986 ;; Defined at:
 20987 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 20988 ;; Parameters:    Size  Location     Type
 20989 ;;		None
 20990 ;; Auto vars:     Size  Location     Type
 20991 ;;		None
 20992 ;; Return value:  Size  Location     Type
 20993 ;;                  1    wreg      void 
 20994 ;; Registers used:
 20995 ;;		None
 20996 ;; Tracked objects:
 20997 ;;		On entry : 0/0
 20998 ;;		On exit  : 0/0
 20999 ;;		Unchanged: 0/0
 21000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21005 ;;Total ram usage:        0 bytes
 21006 ;; Hardware stack levels used:    1
 21007 ;; Hardware stack levels required when called:    6
 21008 ;; This function calls:
 21009 ;;		Nothing
 21010 ;; This function is called by:
 21011 ;;		_do_I2C_DO_NACK_STOP
 21012 ;;		_do_I2C_DO_NACK_RESTART
 21013 ;; This function uses a non-reentrant model
 21014 ;;
 21015                           
 21016                           
 21017                           ;psect for function _i2c1_driver_sendNACK
 21018  223C                     _i2c1_driver_sendNACK:	
 21019                           
 21020                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 21021                           
 21022                           ;incstack = 0
 21023                           ; Regs used in _i2c1_driver_sendNACK: []
 21024  223C  0024               	movlb	4	; select bank4
 21025  223D  1696               	bsf	22,5	;volatile
 21026                           
 21027                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 21028  223E  1616               	bsf	22,4	;volatile
 21029  223F  0008               	return
 21030  2240                     __end_of_i2c1_driver_sendNACK:	
 21031                           
 21032                           	psect	text92
 21033  21D2                     __ptext92:	
 21034 ;; *************** function _i2c1_driver_resetBus *****************
 21035 ;; Defined at:
 21036 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 21037 ;; Parameters:    Size  Location     Type
 21038 ;;		None
 21039 ;; Auto vars:     Size  Location     Type
 21040 ;;		None
 21041 ;; Return value:  Size  Location     Type
 21042 ;;                  1    wreg      void 
 21043 ;; Registers used:
 21044 ;;		None
 21045 ;; Tracked objects:
 21046 ;;		On entry : 0/0
 21047 ;;		On exit  : 0/0
 21048 ;;		Unchanged: 0/0
 21049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21054 ;;Total ram usage:        0 bytes
 21055 ;; Hardware stack levels used:    1
 21056 ;; Hardware stack levels required when called:    6
 21057 ;; This function calls:
 21058 ;;		Nothing
 21059 ;; This function is called by:
 21060 ;;		_do_I2C_RESET
 21061 ;; This function uses a non-reentrant model
 21062 ;;
 21063                           
 21064                           
 21065                           ;psect for function _i2c1_driver_resetBus
 21066  21D2                     _i2c1_driver_resetBus:	
 21067                           
 21068                           ;incstack = 0
 21069                           ; Regs used in _i2c1_driver_resetBus: []
 21070  21D2  0008               	return
 21071  21D3                     __end_of_i2c1_driver_resetBus:	
 21072                           
 21073                           	psect	text93
 21074  2204                     __ptext93:	
 21075 ;; *************** function _i2c1_driver_startRX *****************
 21076 ;; Defined at:
 21077 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 21078 ;; Parameters:    Size  Location     Type
 21079 ;;		None
 21080 ;; Auto vars:     Size  Location     Type
 21081 ;;		None
 21082 ;; Return value:  Size  Location     Type
 21083 ;;                  1    wreg      void 
 21084 ;; Registers used:
 21085 ;;		None
 21086 ;; Tracked objects:
 21087 ;;		On entry : 0/0
 21088 ;;		On exit  : 0/0
 21089 ;;		Unchanged: 0/0
 21090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21095 ;;Total ram usage:        0 bytes
 21096 ;; Hardware stack levels used:    1
 21097 ;; Hardware stack levels required when called:    6
 21098 ;; This function calls:
 21099 ;;		Nothing
 21100 ;; This function is called by:
 21101 ;;		_do_I2C_RCEN
 21102 ;; This function uses a non-reentrant model
 21103 ;;
 21104                           
 21105                           
 21106                           ;psect for function _i2c1_driver_startRX
 21107  2204                     _i2c1_driver_startRX:	
 21108                           
 21109                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 21110                           
 21111                           ;incstack = 0
 21112                           ; Regs used in _i2c1_driver_startRX: []
 21113  2204  0024               	movlb	4	; select bank4
 21114  2205  1596               	bsf	22,3	;volatile
 21115  2206  0008               	return
 21116  2207                     __end_of_i2c1_driver_startRX:	
 21117                           
 21118                           	psect	text94
 21119  226E                     __ptext94:	
 21120 ;; *************** function _returnReset *****************
 21121 ;; Defined at:
 21122 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 21123 ;; Parameters:    Size  Location     Type
 21124 ;;  p               1   17[BANK0 ] PTR void 
 21125 ;;		 -> NULL(0), 
 21126 ;; Auto vars:     Size  Location     Type
 21127 ;;		None
 21128 ;; Return value:  Size  Location     Type
 21129 ;;                  1    wreg      enum E8198
 21130 ;; Registers used:
 21131 ;;		wreg
 21132 ;; Tracked objects:
 21133 ;;		On entry : 0/0
 21134 ;;		On exit  : 0/0
 21135 ;;		Unchanged: 0/0
 21136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21137 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21140 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21141 ;;Total ram usage:        1 bytes
 21142 ;; Hardware stack levels used:    1
 21143 ;; Hardware stack levels required when called:    6
 21144 ;; This function calls:
 21145 ;;		Nothing
 21146 ;; This function is called by:
 21147 ;;		_i2c_open
 21148 ;;		_do_I2C_DO_ADDRESS_NACK
 21149 ;;		_do_I2C_TX
 21150 ;;		_do_I2C_RX
 21151 ;;		_do_I2C_TX_EMPTY
 21152 ;;		i1_do_I2C_DO_ADDRESS_NACK
 21153 ;;		i1_do_I2C_TX
 21154 ;;		i1_do_I2C_RX
 21155 ;;		i1_do_I2C_TX_EMPTY
 21156 ;; This function uses a non-reentrant model
 21157 ;;
 21158                           
 21159                           
 21160                           ;psect for function _returnReset
 21161  226E                     _returnReset:	
 21162                           
 21163                           ;Skip over the trampoline to the duplicate function for level 1
 21164  226E  1C7E               	btfss	126,0
 21165  226F  2A72               	goto	l7100
 21166  2270  31A1  29D5         	ljmp	i1l7870
 21167  2272                     _returnReset$intlevel0:	
 21168  2272                     l7100:	
 21169                           ;incstack = 0
 21170                           ; Regs used in _returnReset: [wreg]
 21171                           
 21172                           
 21173                           ;i2c_master.c: 450: return i2c_reset_link;
 21174  2272  3005               	movlw	5
 21175  2273  0008               	return
 21176  2274                     __end_of_returnReset:	
 21177                           
 21178                           	psect	text95
 21179  2268                     __ptext95:	
 21180 ;; *************** function _returnStop *****************
 21181 ;; Defined at:
 21182 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 21183 ;; Parameters:    Size  Location     Type
 21184 ;;  p               1   17[BANK0 ] PTR void 
 21185 ;;		 -> NULL(0), 
 21186 ;; Auto vars:     Size  Location     Type
 21187 ;;		None
 21188 ;; Return value:  Size  Location     Type
 21189 ;;                  1    wreg      enum E8198
 21190 ;; Registers used:
 21191 ;;		wreg
 21192 ;; Tracked objects:
 21193 ;;		On entry : 0/0
 21194 ;;		On exit  : 0/0
 21195 ;;		Unchanged: 0/0
 21196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21197 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21200 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21201 ;;Total ram usage:        1 bytes
 21202 ;; Hardware stack levels used:    1
 21203 ;; Hardware stack levels required when called:    6
 21204 ;; This function calls:
 21205 ;;		Nothing
 21206 ;; This function is called by:
 21207 ;;		_i2c_open
 21208 ;;		_setCallBack
 21209 ;;		_do_I2C_DO_ADDRESS_NACK
 21210 ;;		_do_I2C_TX
 21211 ;;		_do_I2C_RX
 21212 ;;		_do_I2C_TX_EMPTY
 21213 ;;		i1_do_I2C_DO_ADDRESS_NACK
 21214 ;;		i1_do_I2C_TX
 21215 ;;		i1_do_I2C_RX
 21216 ;;		i1_do_I2C_TX_EMPTY
 21217 ;; This function uses a non-reentrant model
 21218 ;;
 21219                           
 21220                           
 21221                           ;psect for function _returnStop
 21222  2268                     _returnStop:	
 21223                           
 21224                           ;Skip over the trampoline to the duplicate function for level 1
 21225  2268  1C7E               	btfss	126,0
 21226  2269  2A6C               	goto	l7096
 21227  226A  31A1  29D3         	ljmp	i1l7866
 21228  226C                     _returnStop$intlevel0:	
 21229  226C                     l7096:	
 21230                           ;incstack = 0
 21231                           ; Regs used in _returnStop: [wreg]
 21232                           
 21233                           
 21234                           ;i2c_master.c: 445: return i2c_stop;
 21235  226C  3001               	movlw	1
 21236  226D  0008               	return
 21237  226E                     __end_of_returnStop:	
 21238                           
 21239                           	psect	text96
 21240  2201                     __ptext96:	
 21241 ;; *************** function _i2c1_driver_stop *****************
 21242 ;; Defined at:
 21243 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 21244 ;; Parameters:    Size  Location     Type
 21245 ;;		None
 21246 ;; Auto vars:     Size  Location     Type
 21247 ;;		None
 21248 ;; Return value:  Size  Location     Type
 21249 ;;                  1    wreg      void 
 21250 ;; Registers used:
 21251 ;;		None
 21252 ;; Tracked objects:
 21253 ;;		On entry : 0/0
 21254 ;;		On exit  : 0/0
 21255 ;;		Unchanged: 0/0
 21256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21261 ;;Total ram usage:        0 bytes
 21262 ;; Hardware stack levels used:    1
 21263 ;; Hardware stack levels required when called:    6
 21264 ;; This function calls:
 21265 ;;		Nothing
 21266 ;; This function is called by:
 21267 ;;		_do_I2C_SEND_STOP
 21268 ;; This function uses a non-reentrant model
 21269 ;;
 21270                           
 21271                           
 21272                           ;psect for function _i2c1_driver_stop
 21273  2201                     _i2c1_driver_stop:	
 21274                           
 21275                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 21276                           
 21277                           ;incstack = 0
 21278                           ; Regs used in _i2c1_driver_stop: []
 21279  2201  0024               	movlb	4	; select bank4
 21280  2202  1516               	bsf	22,2	;volatile
 21281  2203  0008               	return
 21282  2204                     __end_of_i2c1_driver_stop:	
 21283                           
 21284                           	psect	text97
 21285  21FE                     __ptext97:	
 21286 ;; *************** function _i2c1_driver_restart *****************
 21287 ;; Defined at:
 21288 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 21289 ;; Parameters:    Size  Location     Type
 21290 ;;		None
 21291 ;; Auto vars:     Size  Location     Type
 21292 ;;		None
 21293 ;; Return value:  Size  Location     Type
 21294 ;;                  1    wreg      void 
 21295 ;; Registers used:
 21296 ;;		None
 21297 ;; Tracked objects:
 21298 ;;		On entry : 0/0
 21299 ;;		On exit  : 0/0
 21300 ;;		Unchanged: 0/0
 21301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21306 ;;Total ram usage:        0 bytes
 21307 ;; Hardware stack levels used:    1
 21308 ;; Hardware stack levels required when called:    6
 21309 ;; This function calls:
 21310 ;;		Nothing
 21311 ;; This function is called by:
 21312 ;;		_do_I2C_SEND_RESTART_READ
 21313 ;;		_do_I2C_SEND_RESTART_WRITE
 21314 ;;		_do_I2C_SEND_RESTART
 21315 ;; This function uses a non-reentrant model
 21316 ;;
 21317                           
 21318                           
 21319                           ;psect for function _i2c1_driver_restart
 21320  21FE                     _i2c1_driver_restart:	
 21321                           
 21322                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 21323                           
 21324                           ;incstack = 0
 21325                           ; Regs used in _i2c1_driver_restart: []
 21326  21FE  0024               	movlb	4	; select bank4
 21327  21FF  1496               	bsf	22,1	;volatile
 21328  2200  0008               	return
 21329  2201                     __end_of_i2c1_driver_restart:	
 21330                           
 21331                           	psect	text98
 21332  2238                     __ptext98:	
 21333 ;; *************** function _i2c1_driver_sendACK *****************
 21334 ;; Defined at:
 21335 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 21336 ;; Parameters:    Size  Location     Type
 21337 ;;		None
 21338 ;; Auto vars:     Size  Location     Type
 21339 ;;		None
 21340 ;; Return value:  Size  Location     Type
 21341 ;;                  1    wreg      void 
 21342 ;; Registers used:
 21343 ;;		None
 21344 ;; Tracked objects:
 21345 ;;		On entry : 0/0
 21346 ;;		On exit  : 0/0
 21347 ;;		Unchanged: 0/0
 21348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21353 ;;Total ram usage:        0 bytes
 21354 ;; Hardware stack levels used:    1
 21355 ;; Hardware stack levels required when called:    6
 21356 ;; This function calls:
 21357 ;;		Nothing
 21358 ;; This function is called by:
 21359 ;;		_do_I2C_DO_ACK
 21360 ;;		_do_I2C_RX
 21361 ;; This function uses a non-reentrant model
 21362 ;;
 21363                           
 21364                           
 21365                           ;psect for function _i2c1_driver_sendACK
 21366  2238                     _i2c1_driver_sendACK:	
 21367                           
 21368                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 21369                           
 21370                           ;incstack = 0
 21371                           ; Regs used in _i2c1_driver_sendACK: []
 21372  2238  0024               	movlb	4	; select bank4
 21373  2239  1296               	bcf	22,5	;volatile
 21374                           
 21375                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 21376  223A  1616               	bsf	22,4	;volatile
 21377  223B  0008               	return
 21378  223C                     __end_of_i2c1_driver_sendACK:	
 21379                           
 21380                           	psect	text99
 21381  21FB                     __ptext99:	
 21382 ;; *************** function _i2c1_driver_start *****************
 21383 ;; Defined at:
 21384 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 21385 ;; Parameters:    Size  Location     Type
 21386 ;;		None
 21387 ;; Auto vars:     Size  Location     Type
 21388 ;;		None
 21389 ;; Return value:  Size  Location     Type
 21390 ;;                  1    wreg      void 
 21391 ;; Registers used:
 21392 ;;		None
 21393 ;; Tracked objects:
 21394 ;;		On entry : 0/0
 21395 ;;		On exit  : 0/0
 21396 ;;		Unchanged: 0/0
 21397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21402 ;;Total ram usage:        0 bytes
 21403 ;; Hardware stack levels used:    1
 21404 ;; Hardware stack levels required when called:    6
 21405 ;; This function calls:
 21406 ;;		Nothing
 21407 ;; This function is called by:
 21408 ;;		_i2c_masterOperation
 21409 ;; This function uses a non-reentrant model
 21410 ;;
 21411                           
 21412                           
 21413                           ;psect for function _i2c1_driver_start
 21414  21FB                     _i2c1_driver_start:	
 21415                           
 21416                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
 21417                           
 21418                           ;incstack = 0
 21419                           ; Regs used in _i2c1_driver_start: []
 21420  21FB  0024               	movlb	4	; select bank4
 21421  21FC  1416               	bsf	22,0	;volatile
 21422  21FD  0008               	return
 21423  21FE                     __end_of_i2c1_driver_start:	
 21424                           
 21425                           	psect	text100
 21426  1C80                     __ptext100:	
 21427 ;; *************** function ___awdiv *****************
 21428 ;; Defined at:
 21429 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 21430 ;; Parameters:    Size  Location     Type
 21431 ;;  divisor         2   17[BANK0 ] int 
 21432 ;;  dividend        2   19[BANK0 ] int 
 21433 ;; Auto vars:     Size  Location     Type
 21434 ;;  quotient        2   24[BANK0 ] int 
 21435 ;;  sign            1   23[BANK0 ] unsigned char 
 21436 ;;  counter         1   22[BANK0 ] unsigned char 
 21437 ;; Return value:  Size  Location     Type
 21438 ;;                  2   17[BANK0 ] int 
 21439 ;; Registers used:
 21440 ;;		wreg, status,2, status,0
 21441 ;; Tracked objects:
 21442 ;;		On entry : 0/0
 21443 ;;		On exit  : 0/0
 21444 ;;		Unchanged: 0/0
 21445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21446 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21447 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21448 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21449 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21450 ;;Total ram usage:        9 bytes
 21451 ;; Hardware stack levels used:    1
 21452 ;; Hardware stack levels required when called:    6
 21453 ;; This function calls:
 21454 ;;		Nothing
 21455 ;; This function is called by:
 21456 ;;		_drv_write_DC
 21457 ;;		_drv_outputSine
 21458 ;; This function uses a non-reentrant model
 21459 ;;
 21460                           
 21461                           
 21462                           ;psect for function ___awdiv
 21463  1C80                     ___awdiv:	
 21464                           
 21465                           ;incstack = 0
 21466                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 21467  1C80  0020               	movlb	0	; select bank0
 21468  1C81  01B7               	clrf	___awdiv@sign
 21469  1C82  1FB2               	btfss	___awdiv@divisor+1,7
 21470  1C83  2C8B               	goto	l5306
 21471  1C84  09B1               	comf	___awdiv@divisor,f
 21472  1C85  09B2               	comf	___awdiv@divisor+1,f
 21473  1C86  0AB1               	incf	___awdiv@divisor,f
 21474  1C87  1903               	skipnz
 21475  1C88  0AB2               	incf	___awdiv@divisor+1,f
 21476  1C89  01B7               	clrf	___awdiv@sign
 21477  1C8A  0AB7               	incf	___awdiv@sign,f
 21478  1C8B                     l5306:	
 21479  1C8B  1FB4               	btfss	___awdiv@dividend+1,7
 21480  1C8C  2C96               	goto	l5312
 21481  1C8D  09B3               	comf	___awdiv@dividend,f
 21482  1C8E  09B4               	comf	___awdiv@dividend+1,f
 21483  1C8F  0AB3               	incf	___awdiv@dividend,f
 21484  1C90  1903               	skipnz
 21485  1C91  0AB4               	incf	___awdiv@dividend+1,f
 21486  1C92  3001               	movlw	1
 21487  1C93  00B5               	movwf	??___awdiv
 21488  1C94  0835               	movf	??___awdiv,w
 21489  1C95  06B7               	xorwf	___awdiv@sign,f
 21490  1C96                     l5312:	
 21491  1C96  01B8               	clrf	___awdiv@quotient
 21492  1C97  01B9               	clrf	___awdiv@quotient+1
 21493  1C98  0831               	movf	___awdiv@divisor,w
 21494  1C99  0432               	iorwf	___awdiv@divisor+1,w
 21495  1C9A  1903               	btfsc	3,2
 21496  1C9B  2CC5               	goto	l5334
 21497  1C9C  01B6               	clrf	___awdiv@counter
 21498  1C9D  0AB6               	incf	___awdiv@counter,f
 21499  1C9E                     l5322:	
 21500  1C9E  1BB2               	btfsc	___awdiv@divisor+1,7
 21501  1C9F  2CAA               	goto	l5324
 21502  1CA0  3001               	movlw	1
 21503  1CA1                     u4305:	
 21504  1CA1  35B1               	lslf	___awdiv@divisor,f
 21505  1CA2  0DB2               	rlf	___awdiv@divisor+1,f
 21506  1CA3  0B89               	decfsz	9,f
 21507  1CA4  2CA1               	goto	u4305
 21508  1CA5  3001               	movlw	1
 21509  1CA6  00B5               	movwf	??___awdiv
 21510  1CA7  0835               	movf	??___awdiv,w
 21511  1CA8  07B6               	addwf	___awdiv@counter,f
 21512  1CA9  2C9E               	goto	l5322
 21513  1CAA                     l5324:	
 21514  1CAA  3001               	movlw	1
 21515  1CAB                     u4325:	
 21516  1CAB  35B8               	lslf	___awdiv@quotient,f
 21517  1CAC  0DB9               	rlf	___awdiv@quotient+1,f
 21518  1CAD  0B89               	decfsz	9,f
 21519  1CAE  2CAB               	goto	u4325
 21520  1CAF  0832               	movf	___awdiv@divisor+1,w
 21521  1CB0  0234               	subwf	___awdiv@dividend+1,w
 21522  1CB1  1D03               	skipz
 21523  1CB2  2CB5               	goto	u4335
 21524  1CB3  0831               	movf	___awdiv@divisor,w
 21525  1CB4  0233               	subwf	___awdiv@dividend,w
 21526  1CB5                     u4335:	
 21527  1CB5  1C03               	skipc
 21528  1CB6  2CBC               	goto	l5330
 21529  1CB7  0831               	movf	___awdiv@divisor,w
 21530  1CB8  02B3               	subwf	___awdiv@dividend,f
 21531  1CB9  0832               	movf	___awdiv@divisor+1,w
 21532  1CBA  3BB4               	subwfb	___awdiv@dividend+1,f
 21533  1CBB  1438               	bsf	___awdiv@quotient,0
 21534  1CBC                     l5330:	
 21535  1CBC  3001               	movlw	1
 21536  1CBD                     u4345:	
 21537  1CBD  36B2               	lsrf	___awdiv@divisor+1,f
 21538  1CBE  0CB1               	rrf	___awdiv@divisor,f
 21539  1CBF  0B89               	decfsz	9,f
 21540  1CC0  2CBD               	goto	u4345
 21541  1CC1  3001               	movlw	1
 21542  1CC2  02B6               	subwf	___awdiv@counter,f
 21543  1CC3  1D03               	btfss	3,2
 21544  1CC4  2CAA               	goto	l5324
 21545  1CC5                     l5334:	
 21546  1CC5  0837               	movf	___awdiv@sign,w
 21547  1CC6  1903               	btfsc	3,2
 21548  1CC7  2CCD               	goto	l5338
 21549  1CC8  09B8               	comf	___awdiv@quotient,f
 21550  1CC9  09B9               	comf	___awdiv@quotient+1,f
 21551  1CCA  0AB8               	incf	___awdiv@quotient,f
 21552  1CCB  1903               	skipnz
 21553  1CCC  0AB9               	incf	___awdiv@quotient+1,f
 21554  1CCD                     l5338:	
 21555  1CCD  0839               	movf	___awdiv@quotient+1,w
 21556  1CCE  00B2               	movwf	?___awdiv+1
 21557  1CCF  0838               	movf	___awdiv@quotient,w
 21558  1CD0  00B1               	movwf	?___awdiv
 21559  1CD1  0008               	return
 21560  1CD2                     __end_of___awdiv:	
 21561                           
 21562                           	psect	text101
 21563  170E                     __ptext101:	
 21564 ;; *************** function _calcHeaterPins *****************
 21565 ;; Defined at:
 21566 ;;		line 258 in file "main.c"
 21567 ;; Parameters:    Size  Location     Type
 21568 ;;		None
 21569 ;; Auto vars:     Size  Location     Type
 21570 ;;		None
 21571 ;; Return value:  Size  Location     Type
 21572 ;;                  1    wreg      void 
 21573 ;; Registers used:
 21574 ;;		wreg, status,2, status,0
 21575 ;; Tracked objects:
 21576 ;;		On entry : 0/0
 21577 ;;		On exit  : 0/0
 21578 ;;		Unchanged: 0/0
 21579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21582 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21583 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21584 ;;Total ram usage:        4 bytes
 21585 ;; Hardware stack levels used:    1
 21586 ;; Hardware stack levels required when called:    6
 21587 ;; This function calls:
 21588 ;;		Nothing
 21589 ;; This function is called by:
 21590 ;;		_doMove
 21591 ;; This function uses a non-reentrant model
 21592 ;;
 21593                           
 21594                           
 21595                           ;psect for function _calcHeaterPins
 21596  170E                     _calcHeaterPins:	
 21597                           
 21598                           ;main.c: 259: first_top = moveVector_downs & moveMask;
 21599                           
 21600                           ;incstack = 0
 21601                           ; Regs used in _calcHeaterPins: [wreg+status,2+status,0]
 21602  170E  0021               	movlb	1	; select bank1
 21603  170F  0859               	movf	_moveMask^(0+128),w
 21604  1710  0561               	andwf	_moveVector_downs^(0+128),w
 21605  1711  0022               	movlb	2	; select bank2
 21606  1712  00D6               	movwf	_first_top^(0+256)
 21607  1713  0021               	movlb	1	; select bank1
 21608  1714  085A               	movf	(_moveMask+1)^(0+128),w
 21609  1715  0562               	andwf	(_moveVector_downs+1)^(0+128),w
 21610  1716  0022               	movlb	2	; select bank2
 21611  1717  00D7               	movwf	(_first_top+1)^(0+256)
 21612  1718  0021               	movlb	1	; select bank1
 21613  1719  085B               	movf	(_moveMask+2)^(0+128),w
 21614  171A  0563               	andwf	(_moveVector_downs+2)^(0+128),w
 21615  171B  0022               	movlb	2	; select bank2
 21616  171C  00D8               	movwf	(_first_top+2)^(0+256)
 21617  171D  0021               	movlb	1	; select bank1
 21618  171E  085C               	movf	(_moveMask+3)^(0+128),w
 21619  171F  0564               	andwf	(_moveVector_downs+3)^(0+128),w
 21620  1720  0022               	movlb	2	; select bank2
 21621  1721  00D9               	movwf	(_first_top+3)^(0+256)
 21622                           
 21623                           ;main.c: 260: first_bottom = (~moveVector_downs) & moveMask;
 21624  1722  0021               	movlb	1	; select bank1
 21625  1723  0961               	comf	_moveVector_downs^(0+128),w
 21626  1724  0020               	movlb	0	; select bank0
 21627  1725  00B1               	movwf	??_calcHeaterPins
 21628  1726  0021               	movlb	1	; select bank1
 21629  1727  0962               	comf	(_moveVector_downs+1)^(0+128),w
 21630  1728  0020               	movlb	0	; select bank0
 21631  1729  00B2               	movwf	??_calcHeaterPins+1
 21632  172A  0021               	movlb	1	; select bank1
 21633  172B  0963               	comf	(_moveVector_downs+2)^(0+128),w
 21634  172C  0020               	movlb	0	; select bank0
 21635  172D  00B3               	movwf	??_calcHeaterPins+2
 21636  172E  0021               	movlb	1	; select bank1
 21637  172F  0964               	comf	(_moveVector_downs+3)^(0+128),w
 21638  1730  0020               	movlb	0	; select bank0
 21639  1731  00B4               	movwf	??_calcHeaterPins+3
 21640  1732  0021               	movlb	1	; select bank1
 21641  1733  0859               	movf	_moveMask^(0+128),w
 21642  1734  0020               	movlb	0	; select bank0
 21643  1735  0531               	andwf	??_calcHeaterPins,w
 21644  1736  0022               	movlb	2	; select bank2
 21645  1737  00DA               	movwf	_first_bottom^(0+256)
 21646  1738  0021               	movlb	1	; select bank1
 21647  1739  085A               	movf	(_moveMask+1)^(0+128),w
 21648  173A  0020               	movlb	0	; select bank0
 21649  173B  0532               	andwf	??_calcHeaterPins+1,w
 21650  173C  0022               	movlb	2	; select bank2
 21651  173D  00DB               	movwf	(_first_bottom+1)^(0+256)
 21652  173E  0021               	movlb	1	; select bank1
 21653  173F  085B               	movf	(_moveMask+2)^(0+128),w
 21654  1740  0020               	movlb	0	; select bank0
 21655  1741  0533               	andwf	??_calcHeaterPins+2,w
 21656  1742  0022               	movlb	2	; select bank2
 21657  1743  00DC               	movwf	(_first_bottom+2)^(0+256)
 21658  1744  0021               	movlb	1	; select bank1
 21659  1745  085C               	movf	(_moveMask+3)^(0+128),w
 21660  1746  0020               	movlb	0	; select bank0
 21661  1747  0534               	andwf	??_calcHeaterPins+3,w
 21662  1748  0022               	movlb	2	; select bank2
 21663  1749  00DD               	movwf	(_first_bottom+3)^(0+256)
 21664                           
 21665                           ;main.c: 261: second_top = moveVector_ups & moveMask;
 21666  174A  0021               	movlb	1	; select bank1
 21667  174B  0859               	movf	_moveMask^(0+128),w
 21668  174C  0565               	andwf	_moveVector_ups^(0+128),w
 21669  174D  0022               	movlb	2	; select bank2
 21670  174E  00DE               	movwf	_second_top^(0+256)
 21671  174F  0021               	movlb	1	; select bank1
 21672  1750  085A               	movf	(_moveMask+1)^(0+128),w
 21673  1751  0566               	andwf	(_moveVector_ups+1)^(0+128),w
 21674  1752  0022               	movlb	2	; select bank2
 21675  1753  00DF               	movwf	(_second_top+1)^(0+256)
 21676  1754  0021               	movlb	1	; select bank1
 21677  1755  085B               	movf	(_moveMask+2)^(0+128),w
 21678  1756  0567               	andwf	(_moveVector_ups+2)^(0+128),w
 21679  1757  0022               	movlb	2	; select bank2
 21680  1758  00E0               	movwf	(_second_top+2)^(0+256)
 21681  1759  0021               	movlb	1	; select bank1
 21682  175A  085C               	movf	(_moveMask+3)^(0+128),w
 21683  175B  0568               	andwf	(_moveVector_ups+3)^(0+128),w
 21684  175C  0022               	movlb	2	; select bank2
 21685  175D  00E1               	movwf	(_second_top+3)^(0+256)
 21686                           
 21687                           ;main.c: 262: second_bottom = (~moveVector_ups) & moveMask;
 21688  175E  0021               	movlb	1	; select bank1
 21689  175F  0965               	comf	_moveVector_ups^(0+128),w
 21690  1760  0020               	movlb	0	; select bank0
 21691  1761  00B1               	movwf	??_calcHeaterPins
 21692  1762  0021               	movlb	1	; select bank1
 21693  1763  0966               	comf	(_moveVector_ups+1)^(0+128),w
 21694  1764  0020               	movlb	0	; select bank0
 21695  1765  00B2               	movwf	??_calcHeaterPins+1
 21696  1766  0021               	movlb	1	; select bank1
 21697  1767  0967               	comf	(_moveVector_ups+2)^(0+128),w
 21698  1768  0020               	movlb	0	; select bank0
 21699  1769  00B3               	movwf	??_calcHeaterPins+2
 21700  176A  0021               	movlb	1	; select bank1
 21701  176B  0968               	comf	(_moveVector_ups+3)^(0+128),w
 21702  176C  0020               	movlb	0	; select bank0
 21703  176D  00B4               	movwf	??_calcHeaterPins+3
 21704  176E  0021               	movlb	1	; select bank1
 21705  176F  0859               	movf	_moveMask^(0+128),w
 21706  1770  0020               	movlb	0	; select bank0
 21707  1771  0531               	andwf	??_calcHeaterPins,w
 21708  1772  0022               	movlb	2	; select bank2
 21709  1773  00D2               	movwf	_second_bottom^(0+256)
 21710  1774  0021               	movlb	1	; select bank1
 21711  1775  085A               	movf	(_moveMask+1)^(0+128),w
 21712  1776  0020               	movlb	0	; select bank0
 21713  1777  0532               	andwf	??_calcHeaterPins+1,w
 21714  1778  0022               	movlb	2	; select bank2
 21715  1779  00D3               	movwf	(_second_bottom+1)^(0+256)
 21716  177A  0021               	movlb	1	; select bank1
 21717  177B  085B               	movf	(_moveMask+2)^(0+128),w
 21718  177C  0020               	movlb	0	; select bank0
 21719  177D  0533               	andwf	??_calcHeaterPins+2,w
 21720  177E  0022               	movlb	2	; select bank2
 21721  177F  00D4               	movwf	(_second_bottom+2)^(0+256)
 21722  1780  0021               	movlb	1	; select bank1
 21723  1781  085C               	movf	(_moveMask+3)^(0+128),w
 21724  1782  0020               	movlb	0	; select bank0
 21725  1783  0534               	andwf	??_calcHeaterPins+3,w
 21726  1784  0022               	movlb	2	; select bank2
 21727  1785  00D5               	movwf	(_second_bottom+3)^(0+256)
 21728  1786  0008               	return
 21729  1787                     __end_of_calcHeaterPins:	
 21730                           
 21731                           	psect	text102
 21732  21F8                     __ptext102:	
 21733 ;; *************** function _TMR2_StartTimer *****************
 21734 ;; Defined at:
 21735 ;;		line 85 in file "mcc_generated_files/tmr2.c"
 21736 ;; Parameters:    Size  Location     Type
 21737 ;;		None
 21738 ;; Auto vars:     Size  Location     Type
 21739 ;;		None
 21740 ;; Return value:  Size  Location     Type
 21741 ;;                  1    wreg      void 
 21742 ;; Registers used:
 21743 ;;		None
 21744 ;; Tracked objects:
 21745 ;;		On entry : 0/0
 21746 ;;		On exit  : 0/0
 21747 ;;		Unchanged: 0/0
 21748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21753 ;;Total ram usage:        0 bytes
 21754 ;; Hardware stack levels used:    1
 21755 ;; Hardware stack levels required when called:    6
 21756 ;; This function calls:
 21757 ;;		Nothing
 21758 ;; This function is called by:
 21759 ;;		_doMove
 21760 ;; This function uses a non-reentrant model
 21761 ;;
 21762                           
 21763                           
 21764                           ;psect for function _TMR2_StartTimer
 21765  21F8                     _TMR2_StartTimer:	
 21766                           
 21767                           ;tmr2.c: 88: T2CONbits.TMR2ON = 1;
 21768                           
 21769                           ;incstack = 0
 21770                           ; Regs used in _TMR2_StartTimer: []
 21771  21F8  0020               	movlb	0	; select bank0
 21772  21F9  151F               	bsf	31,2	;volatile
 21773  21FA  0008               	return
 21774  21FB                     __end_of_TMR2_StartTimer:	
 21775                           
 21776                           	psect	text103
 21777  21F5                     __ptext103:	
 21778 ;; *************** function _TMR0_StartTimer *****************
 21779 ;; Defined at:
 21780 ;;		line 85 in file "mcc_generated_files/tmr0.c"
 21781 ;; Parameters:    Size  Location     Type
 21782 ;;		None
 21783 ;; Auto vars:     Size  Location     Type
 21784 ;;		None
 21785 ;; Return value:  Size  Location     Type
 21786 ;;                  1    wreg      void 
 21787 ;; Registers used:
 21788 ;;		None
 21789 ;; Tracked objects:
 21790 ;;		On entry : 0/0
 21791 ;;		On exit  : 0/0
 21792 ;;		Unchanged: 0/0
 21793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21798 ;;Total ram usage:        0 bytes
 21799 ;; Hardware stack levels used:    1
 21800 ;; Hardware stack levels required when called:    6
 21801 ;; This function calls:
 21802 ;;		Nothing
 21803 ;; This function is called by:
 21804 ;;		_doMove
 21805 ;; This function uses a non-reentrant model
 21806 ;;
 21807                           
 21808                           
 21809                           ;psect for function _TMR0_StartTimer
 21810  21F5                     _TMR0_StartTimer:	
 21811                           
 21812                           ;tmr0.c: 88: T0CON0bits.T0EN = 1;
 21813                           
 21814                           ;incstack = 0
 21815                           ; Regs used in _TMR0_StartTimer: []
 21816  21F5  0020               	movlb	0	; select bank0
 21817  21F6  1797               	bsf	23,7	;volatile
 21818  21F7  0008               	return
 21819  21F8                     __end_of_TMR0_StartTimer:	
 21820                           
 21821                           	psect	text104
 21822  25DC                     __ptext104:	
 21823 ;; *************** function _LEDsOn *****************
 21824 ;; Defined at:
 21825 ;;		line 6 in file "LEDcomm.c"
 21826 ;; Parameters:    Size  Location     Type
 21827 ;;  LEDpins         4   36[BANK0 ] unsigned long 
 21828 ;;  topOrBottom     2   40[BANK0 ] int 
 21829 ;; Auto vars:     Size  Location     Type
 21830 ;;		None
 21831 ;; Return value:  Size  Location     Type
 21832 ;;                  1    wreg      void 
 21833 ;; Registers used:
 21834 ;;		wreg, status,2, status,0, pclath, cstack
 21835 ;; Tracked objects:
 21836 ;;		On entry : 0/0
 21837 ;;		On exit  : 0/0
 21838 ;;		Unchanged: 0/0
 21839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21840 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21842 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21843 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21844 ;;Total ram usage:       10 bytes
 21845 ;; Hardware stack levels used:    1
 21846 ;; Hardware stack levels required when called:    8
 21847 ;; This function calls:
 21848 ;;		_send_2length_2bytes_IK
 21849 ;; This function is called by:
 21850 ;;		_LED_test_openshort
 21851 ;;		_doMove
 21852 ;;		_setHeaterToggle
 21853 ;;		_timedActiveHeatOn
 21854 ;;		_demoSequence
 21855 ;; This function uses a non-reentrant model
 21856 ;;
 21857                           
 21858                           
 21859                           ;psect for function _LEDsOn
 21860  25DC                     _LEDsOn:	
 21861                           
 21862                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 21863                           
 21864                           ;incstack = 0
 21865                           ; Regs used in _LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 21866  25DC  0020               	movlb	0	; select bank0
 21867  25DD  0844               	movf	LEDsOn@LEDpins,w
 21868  25DE  00CA               	movwf	??_LEDsOn
 21869  25DF  0845               	movf	LEDsOn@LEDpins+1,w
 21870  25E0  00CB               	movwf	??_LEDsOn+1
 21871  25E1  0846               	movf	LEDsOn@LEDpins+2,w
 21872  25E2  00CC               	movwf	??_LEDsOn+2
 21873  25E3  0847               	movf	LEDsOn@LEDpins+3,w
 21874  25E4  00CD               	movwf	??_LEDsOn+3
 21875  25E5  3010               	movlw	16
 21876  25E6                     u7155:	
 21877  25E6  36CD               	lsrf	??_LEDsOn+3,f
 21878  25E7  0CCC               	rrf	??_LEDsOn+2,f
 21879  25E8  0CCB               	rrf	??_LEDsOn+1,f
 21880  25E9  0CCA               	rrf	??_LEDsOn,f
 21881  25EA  0B89               	decfsz	9,f
 21882  25EB  2DE6               	goto	u7155
 21883  25EC  084B               	movf	??_LEDsOn+1,w
 21884  25ED  00BD               	movwf	send_2length_2bytes_IK@data1+1
 21885  25EE  084A               	movf	??_LEDsOn,w
 21886  25EF  00BC               	movwf	send_2length_2bytes_IK@data1
 21887  25F0  0845               	movf	LEDsOn@LEDpins+1,w
 21888  25F1  00BF               	movwf	send_2length_2bytes_IK@data2+1
 21889  25F2  0844               	movf	LEDsOn@LEDpins,w
 21890  25F3  00BE               	movwf	send_2length_2bytes_IK@data2
 21891  25F4  01C0               	clrf	send_2length_2bytes_IK@latch_start
 21892  25F5  0AC0               	incf	send_2length_2bytes_IK@latch_start,f
 21893  25F6  0849               	movf	LEDsOn@topOrBottom+1,w
 21894  25F7  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 21895  25F8  0848               	movf	LEDsOn@topOrBottom,w
 21896  25F9  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 21897  25FA  31A4  2445         	fcall	_send_2length_2bytes_IK
 21898  25FC  0008               	return
 21899  25FD                     __end_of_LEDsOn:	
 21900                           
 21901                           	psect	text105
 21902  2445                     __ptext105:	
 21903 ;; *************** function _send_2length_2bytes_IK *****************
 21904 ;; Defined at:
 21905 ;;		line 70 in file "LEDcomm.c"
 21906 ;; Parameters:    Size  Location     Type
 21907 ;;  data1           2   28[BANK0 ] unsigned int 
 21908 ;;  data2           2   30[BANK0 ] unsigned int 
 21909 ;;  latch_start     1   32[BANK0 ] unsigned char 
 21910 ;;  topOrBottom     2   33[BANK0 ] int 
 21911 ;; Auto vars:     Size  Location     Type
 21912 ;;		None
 21913 ;; Return value:  Size  Location     Type
 21914 ;;                  1    wreg      void 
 21915 ;; Registers used:
 21916 ;;		wreg, status,2, status,0, pclath, cstack
 21917 ;; Tracked objects:
 21918 ;;		On entry : 0/0
 21919 ;;		On exit  : 0/0
 21920 ;;		Unchanged: 0/0
 21921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21922 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21924 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21925 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21926 ;;Total ram usage:        8 bytes
 21927 ;; Hardware stack levels used:    1
 21928 ;; Hardware stack levels required when called:    7
 21929 ;; This function calls:
 21930 ;;		_send_2bytes_latchless_IK
 21931 ;;		_send_last_2bytes_IK
 21932 ;; This function is called by:
 21933 ;;		_LEDsOn
 21934 ;;		_LEDsPwr
 21935 ;;		_LED_setBrightnessRange
 21936 ;;		_LED_test_openshort
 21937 ;;		_LED_readConfig
 21938 ;; This function uses a non-reentrant model
 21939 ;;
 21940                           
 21941                           
 21942                           ;psect for function _send_2length_2bytes_IK
 21943  2445                     _send_2length_2bytes_IK:	
 21944                           
 21945                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 21946                           
 21947                           ;incstack = 0
 21948                           ; Regs used in _send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 21949  2445  0020               	movlb	0	; select bank0
 21950  2446  083D               	movf	send_2length_2bytes_IK@data1+1,w
 21951  2447  00B2               	movwf	send_2bytes_latchless_IK@data+1
 21952  2448  083C               	movf	send_2length_2bytes_IK@data1,w
 21953  2449  00B1               	movwf	send_2bytes_latchless_IK@data
 21954  244A  31A7  27A0  31A4   	fcall	_send_2bytes_latchless_IK
 21955                           
 21956                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 21957  244D  0020               	movlb	0	; select bank0
 21958  244E  083F               	movf	send_2length_2bytes_IK@data2+1,w
 21959  244F  00B2               	movwf	send_last_2bytes_IK@data+1
 21960  2450  083E               	movf	send_2length_2bytes_IK@data2,w
 21961  2451  00B1               	movwf	send_last_2bytes_IK@data
 21962  2452  0840               	movf	send_2length_2bytes_IK@latch_start,w
 21963  2453  00C3               	movwf	??_send_2length_2bytes_IK
 21964  2454  0843               	movf	??_send_2length_2bytes_IK,w
 21965  2455  00B3               	movwf	send_last_2bytes_IK@latch_start
 21966  2456  0842               	movf	send_2length_2bytes_IK@topOrBottom+1,w
 21967  2457  00B5               	movwf	send_last_2bytes_IK@topOrBottom+1
 21968  2458  0841               	movf	send_2length_2bytes_IK@topOrBottom,w
 21969  2459  00B4               	movwf	send_last_2bytes_IK@topOrBottom
 21970  245A  319D  2577         	fcall	_send_last_2bytes_IK
 21971  245C  0008               	return
 21972  245D                     __end_of_send_2length_2bytes_IK:	
 21973                           
 21974                           	psect	text106
 21975  1D77                     __ptext106:	
 21976 ;; *************** function _send_last_2bytes_IK *****************
 21977 ;; Defined at:
 21978 ;;		line 19 in file "LEDcomm.c"
 21979 ;; Parameters:    Size  Location     Type
 21980 ;;  data            2   17[BANK0 ] unsigned int 
 21981 ;;  latch_start     1   19[BANK0 ] unsigned char 
 21982 ;;  topOrBottom     2   20[BANK0 ] int 
 21983 ;; Auto vars:     Size  Location     Type
 21984 ;;  j               2   26[BANK0 ] int 
 21985 ;; Return value:  Size  Location     Type
 21986 ;;                  1    wreg      void 
 21987 ;; Registers used:
 21988 ;;		wreg, status,2, status,0
 21989 ;; Tracked objects:
 21990 ;;		On entry : 0/0
 21991 ;;		On exit  : 0/0
 21992 ;;		Unchanged: 0/0
 21993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21994 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21995 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21996 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21997 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21998 ;;Total ram usage:       11 bytes
 21999 ;; Hardware stack levels used:    1
 22000 ;; Hardware stack levels required when called:    6
 22001 ;; This function calls:
 22002 ;;		Nothing
 22003 ;; This function is called by:
 22004 ;;		_send_2length_2bytes_IK
 22005 ;; This function uses a non-reentrant model
 22006 ;;
 22007                           
 22008                           
 22009                           ;psect for function _send_last_2bytes_IK
 22010  1D77                     _send_last_2bytes_IK:	
 22011                           
 22012                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 22013                           
 22014                           ;incstack = 0
 22015                           ; Regs used in _send_last_2bytes_IK: [wreg+status,2+status,0]
 22016  1D77  0020               	movlb	0	; select bank0
 22017  1D78  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 22018  1D79  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 22019  1D7A  1D03               	btfss	3,2
 22020  1D7B  2D7F               	goto	l210
 22021  1D7C  0022               	movlb	2	; select bank2
 22022  1D7D  120D               	bcf	13,4	;volatile
 22023  1D7E  2D81               	goto	l7342
 22024  1D7F                     l210:	
 22025  1D7F  0022               	movlb	2	; select bank2
 22026  1D80  100E               	bcf	14,0	;volatile
 22027  1D81                     l7342:	
 22028                           
 22029                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 22030  1D81  300F               	movlw	15
 22031  1D82  0020               	movlb	0	; select bank0
 22032  1D83  00BA               	movwf	send_last_2bytes_IK@j
 22033  1D84  3000               	movlw	0
 22034  1D85  00BB               	movwf	send_last_2bytes_IK@j+1
 22035  1D86  1BBB               	btfsc	send_last_2bytes_IK@j+1,7
 22036  1D87  2DC2               	goto	l231
 22037  1D88                     l214:	
 22038                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 22039                           
 22040  1D88  0022               	movlb	2	; select bank2
 22041  1D89  110C               	bcf	12,2	;volatile
 22042                           
 22043                           ;LEDcomm.c: 28: if (data & 1 << j){
 22044  1D8A  3001               	movlw	1
 22045  1D8B  0020               	movlb	0	; select bank0
 22046  1D8C  00B6               	movwf	??_send_last_2bytes_IK
 22047  1D8D  3000               	movlw	0
 22048  1D8E  00B7               	movwf	??_send_last_2bytes_IK+1
 22049  1D8F  0A3A               	incf	send_last_2bytes_IK@j,w
 22050  1D90  2D93               	goto	u6854
 22051  1D91                     u6855:	
 22052  1D91  35B6               	lslf	??_send_last_2bytes_IK,f
 22053  1D92  0DB7               	rlf	??_send_last_2bytes_IK+1,f
 22054  1D93                     u6854:	
 22055  1D93  0B89               	decfsz	9,f
 22056  1D94  2D91               	goto	u6855
 22057  1D95  0831               	movf	send_last_2bytes_IK@data,w
 22058  1D96  0536               	andwf	??_send_last_2bytes_IK,w
 22059  1D97  00B8               	movwf	??_send_last_2bytes_IK+2
 22060  1D98  0832               	movf	send_last_2bytes_IK@data+1,w
 22061  1D99  0537               	andwf	??_send_last_2bytes_IK+1,w
 22062  1D9A  00B9               	movwf	??_send_last_2bytes_IK+3
 22063  1D9B  0838               	movf	??_send_last_2bytes_IK+2,w
 22064  1D9C  0439               	iorwf	??_send_last_2bytes_IK+3,w
 22065  1D9D  1903               	btfsc	3,2
 22066  1D9E  2DA2               	goto	l220
 22067                           
 22068                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 22069  1D9F  0022               	movlb	2	; select bank2
 22070  1DA0  150E               	bsf	14,2	;volatile
 22071                           
 22072                           ;LEDcomm.c: 30: }
 22073  1DA1  2DA4               	goto	l7350
 22074  1DA2                     l220:	
 22075                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 22076                           
 22077  1DA2  0022               	movlb	2	; select bank2
 22078  1DA3  110E               	bcf	14,2	;volatile
 22079  1DA4                     l7350:	
 22080                           
 22081                           ;LEDcomm.c: 33: if( j == latch_start) {
 22082  1DA4  0020               	movlb	0	; select bank0
 22083  1DA5  0833               	movf	send_last_2bytes_IK@latch_start,w
 22084  1DA6  00B6               	movwf	??_send_last_2bytes_IK
 22085  1DA7  01B7               	clrf	??_send_last_2bytes_IK+1
 22086  1DA8  083B               	movf	send_last_2bytes_IK@j+1,w
 22087  1DA9  0637               	xorwf	??_send_last_2bytes_IK+1,w
 22088  1DAA  1D03               	skipz
 22089  1DAB  2DAE               	goto	u6875
 22090  1DAC  083A               	movf	send_last_2bytes_IK@j,w
 22091  1DAD  0636               	xorwf	??_send_last_2bytes_IK,w
 22092  1DAE                     u6875:	
 22093  1DAE  1D03               	skipz
 22094  1DAF  2DB9               	goto	l229
 22095                           
 22096                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 22097  1DB0  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 22098  1DB1  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 22099  1DB2  1D03               	btfss	3,2
 22100  1DB3  2DB7               	goto	l227
 22101  1DB4  0022               	movlb	2	; select bank2
 22102  1DB5  160D               	bsf	13,4	;volatile
 22103  1DB6  2DB9               	goto	l229
 22104  1DB7                     l227:	
 22105  1DB7  0022               	movlb	2	; select bank2
 22106  1DB8  140E               	bsf	14,0	;volatile
 22107  1DB9                     l229:	
 22108                           ;LEDcomm.c: 37: }
 22109                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 22110                           
 22111  1DB9  0022               	movlb	2	; select bank2
 22112  1DBA  150C               	bsf	12,2	;volatile
 22113  1DBB  30FF               	movlw	255
 22114  1DBC  0020               	movlb	0	; select bank0
 22115  1DBD  07BA               	addwf	send_last_2bytes_IK@j,f
 22116  1DBE  30FF               	movlw	255
 22117  1DBF  3DBB               	addwfc	send_last_2bytes_IK@j+1,f
 22118  1DC0  1FBB               	btfss	send_last_2bytes_IK@j+1,7
 22119  1DC1  2D88               	goto	l214
 22120  1DC2                     l231:	
 22121                           ;LEDcomm.c: 41: }
 22122                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 22123                           
 22124  1DC2  0022               	movlb	2	; select bank2
 22125  1DC3  110C               	bcf	12,2	;volatile
 22126                           
 22127                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 22128  1DC4  0020               	movlb	0	; select bank0
 22129  1DC5  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 22130  1DC6  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 22131  1DC7  1D03               	btfss	3,2
 22132  1DC8  2DCC               	goto	l237
 22133  1DC9  0022               	movlb	2	; select bank2
 22134  1DCA  120D               	bcf	13,4	;volatile
 22135  1DCB  0008               	return
 22136  1DCC                     l237:	
 22137  1DCC  0022               	movlb	2	; select bank2
 22138  1DCD  100E               	bcf	14,0	;volatile
 22139  1DCE  0008               	return
 22140  1DCF                     __end_of_send_last_2bytes_IK:	
 22141                           
 22142                           	psect	text107
 22143  27A0                     __ptext107:	
 22144 ;; *************** function _send_2bytes_latchless_IK *****************
 22145 ;; Defined at:
 22146 ;;		line 49 in file "LEDcomm.c"
 22147 ;; Parameters:    Size  Location     Type
 22148 ;;  data            2   17[BANK0 ] unsigned int 
 22149 ;; Auto vars:     Size  Location     Type
 22150 ;;  j               2   23[BANK0 ] int 
 22151 ;; Return value:  Size  Location     Type
 22152 ;;                  1    wreg      void 
 22153 ;; Registers used:
 22154 ;;		wreg, status,2, status,0
 22155 ;; Tracked objects:
 22156 ;;		On entry : 0/0
 22157 ;;		On exit  : 0/0
 22158 ;;		Unchanged: 0/0
 22159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22160 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22161 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22162 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22163 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22164 ;;Total ram usage:        8 bytes
 22165 ;; Hardware stack levels used:    1
 22166 ;; Hardware stack levels required when called:    6
 22167 ;; This function calls:
 22168 ;;		Nothing
 22169 ;; This function is called by:
 22170 ;;		_send_2length_2bytes_IK
 22171 ;; This function uses a non-reentrant model
 22172 ;;
 22173                           
 22174                           
 22175                           ;psect for function _send_2bytes_latchless_IK
 22176  27A0                     _send_2bytes_latchless_IK:	
 22177                           
 22178                           ;incstack = 0
 22179                           ; Regs used in _send_2bytes_latchless_IK: [wreg+status,2+status,0]
 22180                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 22181  27A0  0022               	movlb	2	; select bank2
 22182  27A1  120D               	bcf	13,4	;volatile
 22183                           
 22184                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 22185  27A2  300F               	movlw	15
 22186  27A3  0020               	movlb	0	; select bank0
 22187  27A4  00B7               	movwf	send_2bytes_latchless_IK@j
 22188  27A5  3000               	movlw	0
 22189  27A6  00B8               	movwf	send_2bytes_latchless_IK@j+1
 22190  27A7  1BB8               	btfsc	send_2bytes_latchless_IK@j+1,7
 22191  27A8  2FCD               	goto	l256
 22192  27A9                     l246:	
 22193                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 22194                           
 22195  27A9  0022               	movlb	2	; select bank2
 22196  27AA  110C               	bcf	12,2	;volatile
 22197                           
 22198                           ;LEDcomm.c: 56: if (data & 1 << j){
 22199  27AB  3001               	movlw	1
 22200  27AC  0020               	movlb	0	; select bank0
 22201  27AD  00B3               	movwf	??_send_2bytes_latchless_IK
 22202  27AE  3000               	movlw	0
 22203  27AF  00B4               	movwf	??_send_2bytes_latchless_IK+1
 22204  27B0  0A37               	incf	send_2bytes_latchless_IK@j,w
 22205  27B1  2FB4               	goto	u6924
 22206  27B2                     u6925:	
 22207  27B2  35B3               	lslf	??_send_2bytes_latchless_IK,f
 22208  27B3  0DB4               	rlf	??_send_2bytes_latchless_IK+1,f
 22209  27B4                     u6924:	
 22210  27B4  0B89               	decfsz	9,f
 22211  27B5  2FB2               	goto	u6925
 22212  27B6  0831               	movf	send_2bytes_latchless_IK@data,w
 22213  27B7  0533               	andwf	??_send_2bytes_latchless_IK,w
 22214  27B8  00B5               	movwf	??_send_2bytes_latchless_IK+2
 22215  27B9  0832               	movf	send_2bytes_latchless_IK@data+1,w
 22216  27BA  0534               	andwf	??_send_2bytes_latchless_IK+1,w
 22217  27BB  00B6               	movwf	??_send_2bytes_latchless_IK+3
 22218  27BC  0835               	movf	??_send_2bytes_latchless_IK+2,w
 22219  27BD  0436               	iorwf	??_send_2bytes_latchless_IK+3,w
 22220  27BE  1903               	btfsc	3,2
 22221  27BF  2FC3               	goto	l252
 22222                           
 22223                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 22224  27C0  0022               	movlb	2	; select bank2
 22225  27C1  150E               	bsf	14,2	;volatile
 22226                           
 22227                           ;LEDcomm.c: 58: }
 22228  27C2  2FC5               	goto	l254
 22229  27C3                     l252:	
 22230                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 22231                           
 22232  27C3  0022               	movlb	2	; select bank2
 22233  27C4  110E               	bcf	14,2	;volatile
 22234  27C5                     l254:	
 22235                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 22236                           
 22237  27C5  150C               	bsf	12,2	;volatile
 22238  27C6  30FF               	movlw	255
 22239  27C7  0020               	movlb	0	; select bank0
 22240  27C8  07B7               	addwf	send_2bytes_latchless_IK@j,f
 22241  27C9  30FF               	movlw	255
 22242  27CA  3DB8               	addwfc	send_2bytes_latchless_IK@j+1,f
 22243  27CB  1FB8               	btfss	send_2bytes_latchless_IK@j+1,7
 22244  27CC  2FA9               	goto	l246
 22245  27CD                     l256:	
 22246                           ;LEDcomm.c: 64: }
 22247                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 22248                           
 22249  27CD  0022               	movlb	2	; select bank2
 22250  27CE  110C               	bcf	12,2	;volatile
 22251  27CF  0008               	return
 22252  27D0                     __end_of_send_2bytes_latchless_IK:	
 22253                           
 22254                           	psect	text108
 22255  0800                     __ptext108:	
 22256 ;; *************** function _SYSTEM_Initialize *****************
 22257 ;; Defined at:
 22258 ;;		line 77 in file "mcc_generated_files/mcc.c"
 22259 ;; Parameters:    Size  Location     Type
 22260 ;;		None
 22261 ;; Auto vars:     Size  Location     Type
 22262 ;;		None
 22263 ;; Return value:  Size  Location     Type
 22264 ;;                  1    wreg      void 
 22265 ;; Registers used:
 22266 ;;		wreg, status,2, status,0, pclath, cstack
 22267 ;; Tracked objects:
 22268 ;;		On entry : 0/0
 22269 ;;		On exit  : 0/0
 22270 ;;		Unchanged: 0/0
 22271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22276 ;;Total ram usage:        0 bytes
 22277 ;; Hardware stack levels used:    1
 22278 ;; Hardware stack levels required when called:    8
 22279 ;; This function calls:
 22280 ;;		_EUSART_Initialize
 22281 ;;		_OSCILLATOR_Initialize
 22282 ;;		_PIN_MANAGER_Initialize
 22283 ;;		_PMD_Initialize
 22284 ;;		_TMR0_Initialize
 22285 ;;		_TMR2_Initialize
 22286 ;;		_WDT_Initialize
 22287 ;; This function is called by:
 22288 ;;		_main
 22289 ;; This function uses a non-reentrant model
 22290 ;;
 22291                           
 22292                           
 22293                           ;psect for function _SYSTEM_Initialize
 22294  0800                     _SYSTEM_Initialize:	
 22295                           
 22296                           ;mcc.c: 80: PMD_Initialize();
 22297                           
 22298                           ;incstack = 0
 22299                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22300  0800  31A2  229C  3188   	fcall	_PMD_Initialize
 22301                           
 22302                           ;mcc.c: 81: PIN_MANAGER_Initialize();
 22303  0803  3198  203B  3188   	fcall	_PIN_MANAGER_Initialize
 22304                           
 22305                           ;mcc.c: 82: OSCILLATOR_Initialize();
 22306  0806  31A3  231A  3188   	fcall	_OSCILLATOR_Initialize
 22307                           
 22308                           ;mcc.c: 83: WDT_Initialize();
 22309  0809  31A2  2234  3188   	fcall	_WDT_Initialize
 22310                           
 22311                           ;mcc.c: 84: TMR2_Initialize();
 22312  080C  31A3  23F4  3188   	fcall	_TMR2_Initialize
 22313                           
 22314                           ;mcc.c: 85: TMR0_Initialize();
 22315  080F  31A4  2419  3188   	fcall	_TMR0_Initialize
 22316                           
 22317                           ;mcc.c: 86: EUSART_Initialize();
 22318  0812  31A4  245D         	fcall	_EUSART_Initialize
 22319  0814  0008               	return
 22320  0815                     __end_of_SYSTEM_Initialize:	
 22321                           
 22322                           	psect	text109
 22323  2234                     __ptext109:	
 22324 ;; *************** function _WDT_Initialize *****************
 22325 ;; Defined at:
 22326 ;;		line 103 in file "mcc_generated_files/mcc.c"
 22327 ;; Parameters:    Size  Location     Type
 22328 ;;		None
 22329 ;; Auto vars:     Size  Location     Type
 22330 ;;		None
 22331 ;; Return value:  Size  Location     Type
 22332 ;;                  1    wreg      void 
 22333 ;; Registers used:
 22334 ;;		wreg
 22335 ;; Tracked objects:
 22336 ;;		On entry : 0/0
 22337 ;;		On exit  : 0/0
 22338 ;;		Unchanged: 0/0
 22339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22344 ;;Total ram usage:        0 bytes
 22345 ;; Hardware stack levels used:    1
 22346 ;; Hardware stack levels required when called:    6
 22347 ;; This function calls:
 22348 ;;		Nothing
 22349 ;; This function is called by:
 22350 ;;		_SYSTEM_Initialize
 22351 ;; This function uses a non-reentrant model
 22352 ;;
 22353                           
 22354                           
 22355                           ;psect for function _WDT_Initialize
 22356  2234                     _WDT_Initialize:	
 22357                           
 22358                           ;mcc.c: 106: WDTCON = 0x16;
 22359                           
 22360                           ;incstack = 0
 22361                           ; Regs used in _WDT_Initialize: [wreg]
 22362  2234  3016               	movlw	22
 22363  2235  0021               	movlb	1	; select bank1
 22364  2236  0097               	movwf	23	;volatile
 22365  2237  0008               	return
 22366  2238                     __end_of_WDT_Initialize:	
 22367                           
 22368                           	psect	text110
 22369  23F4                     __ptext110:	
 22370 ;; *************** function _TMR2_Initialize *****************
 22371 ;; Defined at:
 22372 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22373 ;; Parameters:    Size  Location     Type
 22374 ;;		None
 22375 ;; Auto vars:     Size  Location     Type
 22376 ;;		None
 22377 ;; Return value:  Size  Location     Type
 22378 ;;                  1    wreg      void 
 22379 ;; Registers used:
 22380 ;;		wreg, status,2, status,0, pclath, cstack
 22381 ;; Tracked objects:
 22382 ;;		On entry : 0/0
 22383 ;;		On exit  : 0/0
 22384 ;;		Unchanged: 0/0
 22385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22390 ;;Total ram usage:        0 bytes
 22391 ;; Hardware stack levels used:    1
 22392 ;; Hardware stack levels required when called:    7
 22393 ;; This function calls:
 22394 ;;		_TMR2_SetInterruptHandler
 22395 ;; This function is called by:
 22396 ;;		_SYSTEM_Initialize
 22397 ;; This function uses a non-reentrant model
 22398 ;;
 22399                           
 22400                           
 22401                           ;psect for function _TMR2_Initialize
 22402  23F4                     _TMR2_Initialize:	
 22403                           
 22404                           ;tmr2.c: 67: PR2 = 0x0F;
 22405                           
 22406                           ;incstack = 0
 22407                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22408  23F4  300F               	movlw	15
 22409  23F5  0020               	movlb	0	; select bank0
 22410  23F6  009E               	movwf	30	;volatile
 22411                           
 22412                           ;tmr2.c: 70: TMR2 = 0x00;
 22413  23F7  019D               	clrf	29	;volatile
 22414                           
 22415                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 22416  23F8  1091               	bcf	17,1	;volatile
 22417                           
 22418                           ;tmr2.c: 76: PIE1bits.TMR2IE = 1;
 22419  23F9  0021               	movlb	1	; select bank1
 22420  23FA  1491               	bsf	17,1	;volatile
 22421                           
 22422                           ;tmr2.c: 79: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 22423  23FB  30E4               	movlw	low _TMR2_DefaultInterruptHandler
 22424  23FC  0020               	movlb	0	; select bank0
 22425  23FD  00B1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 22426  23FE  3022               	movlw	high _TMR2_DefaultInterruptHandler
 22427  23FF  00B2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 22428  2400  31A2  22F6         	fcall	_TMR2_SetInterruptHandler
 22429                           
 22430                           ;tmr2.c: 82: T2CON = 0x4E;
 22431  2402  304E               	movlw	78
 22432  2403  0020               	movlb	0	; select bank0
 22433  2404  009F               	movwf	31	;volatile
 22434  2405  0008               	return
 22435  2406                     __end_of_TMR2_Initialize:	
 22436                           
 22437                           	psect	text111
 22438  22F6                     __ptext111:	
 22439 ;; *************** function _TMR2_SetInterruptHandler *****************
 22440 ;; Defined at:
 22441 ;;		line 130 in file "mcc_generated_files/tmr2.c"
 22442 ;; Parameters:    Size  Location     Type
 22443 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 22444 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 22445 ;; Auto vars:     Size  Location     Type
 22446 ;;		None
 22447 ;; Return value:  Size  Location     Type
 22448 ;;                  1    wreg      void 
 22449 ;; Registers used:
 22450 ;;		wreg
 22451 ;; Tracked objects:
 22452 ;;		On entry : 0/0
 22453 ;;		On exit  : 0/0
 22454 ;;		Unchanged: 0/0
 22455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22459 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22460 ;;Total ram usage:        2 bytes
 22461 ;; Hardware stack levels used:    1
 22462 ;; Hardware stack levels required when called:    6
 22463 ;; This function calls:
 22464 ;;		Nothing
 22465 ;; This function is called by:
 22466 ;;		_TMR2_Initialize
 22467 ;; This function uses a non-reentrant model
 22468 ;;
 22469                           
 22470                           
 22471                           ;psect for function _TMR2_SetInterruptHandler
 22472  22F6                     _TMR2_SetInterruptHandler:	
 22473                           
 22474                           ;tmr2.c: 131: TMR2_InterruptHandler = InterruptHandler;
 22475                           
 22476                           ;incstack = 0
 22477                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 22478  22F6  0020               	movlb	0	; select bank0
 22479  22F7  0832               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 22480  22F8  0023               	movlb	3	; select bank3
 22481  22F9  00DA               	movwf	(_TMR2_InterruptHandler+1)^(0+384)
 22482  22FA  0020               	movlb	0	; select bank0
 22483  22FB  0831               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 22484  22FC  0023               	movlb	3	; select bank3
 22485  22FD  00D9               	movwf	_TMR2_InterruptHandler^(0+384)
 22486  22FE  0008               	return
 22487  22FF                     __end_of_TMR2_SetInterruptHandler:	
 22488                           
 22489                           	psect	text112
 22490  2419                     __ptext112:	
 22491 ;; *************** function _TMR0_Initialize *****************
 22492 ;; Defined at:
 22493 ;;		line 59 in file "mcc_generated_files/tmr0.c"
 22494 ;; Parameters:    Size  Location     Type
 22495 ;;		None
 22496 ;; Auto vars:     Size  Location     Type
 22497 ;;		None
 22498 ;; Return value:  Size  Location     Type
 22499 ;;                  1    wreg      void 
 22500 ;; Registers used:
 22501 ;;		wreg, status,2, status,0, pclath, cstack
 22502 ;; Tracked objects:
 22503 ;;		On entry : 0/0
 22504 ;;		On exit  : 0/0
 22505 ;;		Unchanged: 0/0
 22506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22511 ;;Total ram usage:        0 bytes
 22512 ;; Hardware stack levels used:    1
 22513 ;; Hardware stack levels required when called:    7
 22514 ;; This function calls:
 22515 ;;		_TMR0_SetInterruptHandler
 22516 ;; This function is called by:
 22517 ;;		_SYSTEM_Initialize
 22518 ;; This function uses a non-reentrant model
 22519 ;;
 22520                           
 22521                           
 22522                           ;psect for function _TMR0_Initialize
 22523  2419                     _TMR0_Initialize:	
 22524                           
 22525                           ;tmr0.c: 64: T0CON1 = 0x58;
 22526                           
 22527                           ;incstack = 0
 22528                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22529  2419  3058               	movlw	88
 22530  241A  0020               	movlb	0	; select bank0
 22531  241B  0098               	movwf	24	;volatile
 22532                           
 22533                           ;tmr0.c: 67: TMR0H = 0x61;
 22534  241C  3061               	movlw	97
 22535  241D  0096               	movwf	22	;volatile
 22536                           
 22537                           ;tmr0.c: 70: TMR0L = 0x00;
 22538  241E  0195               	clrf	21	;volatile
 22539                           
 22540                           ;tmr0.c: 73: PIR0bits.TMR0IF = 0;
 22541  241F  1290               	bcf	16,5	;volatile
 22542                           
 22543                           ;tmr0.c: 76: PIE0bits.TMR0IE = 1;
 22544  2420  0021               	movlb	1	; select bank1
 22545  2421  1690               	bsf	16,5	;volatile
 22546                           
 22547                           ;tmr0.c: 79: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 22548  2422  30A2               	movlw	low _TMR0_DefaultInterruptHandler
 22549  2423  0020               	movlb	0	; select bank0
 22550  2424  00B1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 22551  2425  3018               	movlw	high _TMR0_DefaultInterruptHandler
 22552  2426  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 22553  2427  31A2  22ED         	fcall	_TMR0_SetInterruptHandler
 22554                           
 22555                           ;tmr0.c: 82: T0CON0 = 0x89;
 22556  2429  3089               	movlw	137
 22557  242A  0020               	movlb	0	; select bank0
 22558  242B  0097               	movwf	23	;volatile
 22559  242C  0008               	return
 22560  242D                     __end_of_TMR0_Initialize:	
 22561                           
 22562                           	psect	text113
 22563  22ED                     __ptext113:	
 22564 ;; *************** function _TMR0_SetInterruptHandler *****************
 22565 ;; Defined at:
 22566 ;;		line 132 in file "mcc_generated_files/tmr0.c"
 22567 ;; Parameters:    Size  Location     Type
 22568 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 22569 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 22570 ;; Auto vars:     Size  Location     Type
 22571 ;;		None
 22572 ;; Return value:  Size  Location     Type
 22573 ;;                  1    wreg      void 
 22574 ;; Registers used:
 22575 ;;		wreg
 22576 ;; Tracked objects:
 22577 ;;		On entry : 0/0
 22578 ;;		On exit  : 0/0
 22579 ;;		Unchanged: 0/0
 22580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22581 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22584 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22585 ;;Total ram usage:        2 bytes
 22586 ;; Hardware stack levels used:    1
 22587 ;; Hardware stack levels required when called:    6
 22588 ;; This function calls:
 22589 ;;		Nothing
 22590 ;; This function is called by:
 22591 ;;		_TMR0_Initialize
 22592 ;; This function uses a non-reentrant model
 22593 ;;
 22594                           
 22595                           
 22596                           ;psect for function _TMR0_SetInterruptHandler
 22597  22ED                     _TMR0_SetInterruptHandler:	
 22598                           
 22599                           ;tmr0.c: 133: TMR0_InterruptHandler = InterruptHandler;
 22600                           
 22601                           ;incstack = 0
 22602                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 22603  22ED  0020               	movlb	0	; select bank0
 22604  22EE  0832               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 22605  22EF  0022               	movlb	2	; select bank2
 22606  22F0  00ED               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 22607  22F1  0020               	movlb	0	; select bank0
 22608  22F2  0831               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 22609  22F3  0022               	movlb	2	; select bank2
 22610  22F4  00EC               	movwf	_TMR0_InterruptHandler^(0+256)
 22611  22F5  0008               	return
 22612  22F6                     __end_of_TMR0_SetInterruptHandler:	
 22613                           
 22614                           	psect	text114
 22615  229C                     __ptext114:	
 22616 ;; *************** function _PMD_Initialize *****************
 22617 ;; Defined at:
 22618 ;;		line 109 in file "mcc_generated_files/mcc.c"
 22619 ;; Parameters:    Size  Location     Type
 22620 ;;		None
 22621 ;; Auto vars:     Size  Location     Type
 22622 ;;		None
 22623 ;; Return value:  Size  Location     Type
 22624 ;;                  1    wreg      void 
 22625 ;; Registers used:
 22626 ;;		status,2
 22627 ;; Tracked objects:
 22628 ;;		On entry : 0/0
 22629 ;;		On exit  : 0/0
 22630 ;;		Unchanged: 0/0
 22631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22636 ;;Total ram usage:        0 bytes
 22637 ;; Hardware stack levels used:    1
 22638 ;; Hardware stack levels required when called:    6
 22639 ;; This function calls:
 22640 ;;		Nothing
 22641 ;; This function is called by:
 22642 ;;		_SYSTEM_Initialize
 22643 ;; This function uses a non-reentrant model
 22644 ;;
 22645                           
 22646                           
 22647                           ;psect for function _PMD_Initialize
 22648  229C                     _PMD_Initialize:	
 22649                           
 22650                           ;mcc.c: 112: PMD0 = 0x00;
 22651                           
 22652                           ;incstack = 0
 22653                           ; Regs used in _PMD_Initialize: [status,2]
 22654  229C  0032               	movlb	18	; select bank18
 22655  229D  0191               	clrf	17	;volatile
 22656                           
 22657                           ;mcc.c: 114: PMD1 = 0x00;
 22658  229E  0192               	clrf	18	;volatile
 22659                           
 22660                           ;mcc.c: 116: PMD2 = 0x00;
 22661  229F  0193               	clrf	19	;volatile
 22662                           
 22663                           ;mcc.c: 118: PMD3 = 0x00;
 22664  22A0  0194               	clrf	20	;volatile
 22665                           
 22666                           ;mcc.c: 120: PMD4 = 0x00;
 22667  22A1  0195               	clrf	21	;volatile
 22668                           
 22669                           ;mcc.c: 122: PMD5 = 0x00;
 22670  22A2  0196               	clrf	22	;volatile
 22671  22A3  0008               	return
 22672  22A4                     __end_of_PMD_Initialize:	
 22673                           
 22674                           	psect	text115
 22675  183B                     __ptext115:	
 22676 ;; *************** function _PIN_MANAGER_Initialize *****************
 22677 ;; Defined at:
 22678 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 22679 ;; Parameters:    Size  Location     Type
 22680 ;;		None
 22681 ;; Auto vars:     Size  Location     Type
 22682 ;;		None
 22683 ;; Return value:  Size  Location     Type
 22684 ;;                  1    wreg      void 
 22685 ;; Registers used:
 22686 ;;		wreg, status,2, status,0
 22687 ;; Tracked objects:
 22688 ;;		On entry : 0/0
 22689 ;;		On exit  : 0/0
 22690 ;;		Unchanged: 0/0
 22691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22696 ;;Total ram usage:        0 bytes
 22697 ;; Hardware stack levels used:    1
 22698 ;; Hardware stack levels required when called:    6
 22699 ;; This function calls:
 22700 ;;		Nothing
 22701 ;; This function is called by:
 22702 ;;		_SYSTEM_Initialize
 22703 ;; This function uses a non-reentrant model
 22704 ;;
 22705                           
 22706                           
 22707                           ;psect for function _PIN_MANAGER_Initialize
 22708  183B                     _PIN_MANAGER_Initialize:	
 22709                           
 22710                           ;pin_manager.c: 57: LATA = 0x00;
 22711                           
 22712                           ;incstack = 0
 22713                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 22714  183B  0022               	movlb	2	; select bank2
 22715  183C  018C               	clrf	12	;volatile
 22716                           
 22717                           ;pin_manager.c: 58: LATB = 0x00;
 22718  183D  018D               	clrf	13	;volatile
 22719                           
 22720                           ;pin_manager.c: 59: LATC = 0x00;
 22721  183E  018E               	clrf	14	;volatile
 22722                           
 22723                           ;pin_manager.c: 64: TRISA = 0x33;
 22724  183F  3033               	movlw	51
 22725  1840  0021               	movlb	1	; select bank1
 22726  1841  008C               	movwf	12	;volatile
 22727                           
 22728                           ;pin_manager.c: 65: TRISB = 0x60;
 22729  1842  3060               	movlw	96
 22730  1843  008D               	movwf	13	;volatile
 22731                           
 22732                           ;pin_manager.c: 66: TRISC = 0xF8;
 22733  1844  30F8               	movlw	248
 22734  1845  008E               	movwf	14	;volatile
 22735                           
 22736                           ;pin_manager.c: 71: ANSELC = 0x00;
 22737  1846  0023               	movlb	3	; select bank3
 22738  1847  018E               	clrf	14	;volatile
 22739                           
 22740                           ;pin_manager.c: 72: ANSELB = 0x00;
 22741  1848  018D               	clrf	13	;volatile
 22742                           
 22743                           ;pin_manager.c: 73: ANSELA = 0x00;
 22744  1849  018C               	clrf	12	;volatile
 22745                           
 22746                           ;pin_manager.c: 78: WPUB = 0x00;
 22747  184A  0024               	movlb	4	; select bank4
 22748  184B  018D               	clrf	13	;volatile
 22749                           
 22750                           ;pin_manager.c: 79: WPUA = 0x00;
 22751  184C  018C               	clrf	12	;volatile
 22752                           
 22753                           ;pin_manager.c: 80: WPUC = 0xC0;
 22754  184D  30C0               	movlw	192
 22755  184E  008E               	movwf	14	;volatile
 22756                           
 22757                           ;pin_manager.c: 85: ODCONA = 0x00;
 22758  184F  0025               	movlb	5	; select bank5
 22759  1850  018C               	clrf	12	;volatile
 22760                           
 22761                           ;pin_manager.c: 86: ODCONB = 0x00;
 22762  1851  018D               	clrf	13	;volatile
 22763                           
 22764                           ;pin_manager.c: 87: ODCONC = 0x00;
 22765  1852  018E               	clrf	14	;volatile
 22766                           
 22767                           ;pin_manager.c: 94: SSP1DATPPSbits.SSP1DATPPS = 0x0D;
 22768  1853  003C               	movlb	28	; select bank28
 22769  1854  0821               	movf	33,w	;volatile
 22770  1855  39E0               	andlw	-32
 22771  1856  380D               	iorlw	13
 22772  1857  00A1               	movwf	33	;volatile
 22773                           
 22774                           ;pin_manager.c: 95: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 22775  1858  0820               	movf	32,w	;volatile
 22776  1859  39E0               	andlw	-32
 22777  185A  380E               	iorlw	14
 22778  185B  00A0               	movwf	32	;volatile
 22779                           
 22780                           ;pin_manager.c: 96: RXPPSbits.RXPPS = 0x17;
 22781  185C  0824               	movf	36,w	;volatile
 22782  185D  39E0               	andlw	-32
 22783  185E  3817               	iorlw	23
 22784  185F  00A4               	movwf	36	;volatile
 22785                           
 22786                           ;pin_manager.c: 97: RB7PPSbits.RB7PPS = 0x14;
 22787  1860  003D               	movlb	29	; select bank29
 22788  1861  081F               	movf	31,w	;volatile
 22789  1862  39E0               	andlw	-32
 22790  1863  3814               	iorlw	20
 22791  1864  009F               	movwf	31	;volatile
 22792                           
 22793                           ;pin_manager.c: 98: RB6PPSbits.RB6PPS = 0x18;
 22794  1865  081E               	movf	30,w	;volatile
 22795  1866  39E0               	andlw	-32
 22796  1867  3818               	iorlw	24
 22797  1868  009E               	movwf	30	;volatile
 22798                           
 22799                           ;pin_manager.c: 99: RB5PPSbits.RB5PPS = 0x19;
 22800  1869  081D               	movf	29,w	;volatile
 22801  186A  39E0               	andlw	-32
 22802  186B  3819               	iorlw	25
 22803  186C  009D               	movwf	29	;volatile
 22804  186D  0008               	return
 22805  186E                     __end_of_PIN_MANAGER_Initialize:	
 22806                           
 22807                           	psect	text116
 22808  231A                     __ptext116:	
 22809 ;; *************** function _OSCILLATOR_Initialize *****************
 22810 ;; Defined at:
 22811 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22812 ;; Parameters:    Size  Location     Type
 22813 ;;		None
 22814 ;; Auto vars:     Size  Location     Type
 22815 ;;		None
 22816 ;; Return value:  Size  Location     Type
 22817 ;;                  1    wreg      void 
 22818 ;; Registers used:
 22819 ;;		wreg, status,2
 22820 ;; Tracked objects:
 22821 ;;		On entry : 0/0
 22822 ;;		On exit  : 0/0
 22823 ;;		Unchanged: 0/0
 22824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22829 ;;Total ram usage:        0 bytes
 22830 ;; Hardware stack levels used:    1
 22831 ;; Hardware stack levels required when called:    6
 22832 ;; This function calls:
 22833 ;;		Nothing
 22834 ;; This function is called by:
 22835 ;;		_SYSTEM_Initialize
 22836 ;; This function uses a non-reentrant model
 22837 ;;
 22838                           
 22839                           
 22840                           ;psect for function _OSCILLATOR_Initialize
 22841  231A                     _OSCILLATOR_Initialize:	
 22842                           
 22843                           ;mcc.c: 92: OSCCON1 = 0x62;
 22844                           
 22845                           ;incstack = 0
 22846                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 22847  231A  3062               	movlw	98
 22848  231B  0032               	movlb	18	; select bank18
 22849  231C  0099               	movwf	25	;volatile
 22850                           
 22851                           ;mcc.c: 94: OSCCON3 = 0x00;
 22852  231D  019B               	clrf	27	;volatile
 22853                           
 22854                           ;mcc.c: 96: OSCEN = 0x00;
 22855  231E  019D               	clrf	29	;volatile
 22856                           
 22857                           ;mcc.c: 98: OSCFRQ = 0x03;
 22858  231F  3003               	movlw	3
 22859  2320  009F               	movwf	31	;volatile
 22860                           
 22861                           ;mcc.c: 100: OSCTUNE = 0x20;
 22862  2321  3020               	movlw	32
 22863  2322  009E               	movwf	30	;volatile
 22864  2323  0008               	return
 22865  2324                     __end_of_OSCILLATOR_Initialize:	
 22866                           
 22867                           	psect	text117
 22868  245D                     __ptext117:	
 22869 ;; *************** function _EUSART_Initialize *****************
 22870 ;; Defined at:
 22871 ;;		line 72 in file "mcc_generated_files/eusart.c"
 22872 ;; Parameters:    Size  Location     Type
 22873 ;;		None
 22874 ;; Auto vars:     Size  Location     Type
 22875 ;;		None
 22876 ;; Return value:  Size  Location     Type
 22877 ;;                  1    wreg      void 
 22878 ;; Registers used:
 22879 ;;		wreg, status,2
 22880 ;; Tracked objects:
 22881 ;;		On entry : 0/0
 22882 ;;		On exit  : 0/0
 22883 ;;		Unchanged: 0/0
 22884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22887 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22888 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22889 ;;Total ram usage:        1 bytes
 22890 ;; Hardware stack levels used:    1
 22891 ;; Hardware stack levels required when called:    6
 22892 ;; This function calls:
 22893 ;;		Nothing
 22894 ;; This function is called by:
 22895 ;;		_SYSTEM_Initialize
 22896 ;; This function uses a non-reentrant model
 22897 ;;
 22898                           
 22899                           
 22900                           ;psect for function _EUSART_Initialize
 22901  245D                     _EUSART_Initialize:	
 22902                           
 22903                           ;eusart.c: 75: PIE1bits.RCIE = 0;
 22904                           
 22905                           ;incstack = 0
 22906                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 22907  245D  0021               	movlb	1	; select bank1
 22908  245E  1291               	bcf	17,5	;volatile
 22909                           
 22910                           ;eusart.c: 76: PIE1bits.TXIE = 0;
 22911  245F  1211               	bcf	17,4	;volatile
 22912                           
 22913                           ;eusart.c: 80: BAUD1CON = 0x08;
 22914  2460  3008               	movlw	8
 22915  2461  0023               	movlb	3	; select bank3
 22916  2462  009F               	movwf	31	;volatile
 22917                           
 22918                           ;eusart.c: 83: RC1STA = 0x90;
 22919  2463  3090               	movlw	144
 22920  2464  009D               	movwf	29	;volatile
 22921                           
 22922                           ;eusart.c: 86: TX1STA = 0x24;
 22923  2465  3024               	movlw	36
 22924  2466  009E               	movwf	30	;volatile
 22925                           
 22926                           ;eusart.c: 89: SP1BRGL = 0x19;
 22927  2467  3019               	movlw	25
 22928  2468  009B               	movwf	27	;volatile
 22929                           
 22930                           ;eusart.c: 92: SP1BRGH = 0x00;
 22931  2469  019C               	clrf	28	;volatile
 22932                           
 22933                           ;eusart.c: 96: eusartTxHead = 0;
 22934  246A  01FD               	clrf	_eusartTxHead	;volatile
 22935                           
 22936                           ;eusart.c: 97: eusartTxTail = 0;
 22937  246B  0020               	movlb	0	; select bank0
 22938  246C  01D9               	clrf	_eusartTxTail	;volatile
 22939                           
 22940                           ;eusart.c: 98: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 22941  246D  3008               	movlw	8
 22942  246E  00B1               	movwf	??_EUSART_Initialize
 22943  246F  0831               	movf	??_EUSART_Initialize,w
 22944  2470  00DE               	movwf	_eusartTxBufferRemaining	;volatile
 22945                           
 22946                           ;eusart.c: 100: eusartRxHead = 0;
 22947  2471  01D8               	clrf	_eusartRxHead	;volatile
 22948                           
 22949                           ;eusart.c: 101: eusartRxTail = 0;
 22950  2472  01D7               	clrf	_eusartRxTail	;volatile
 22951                           
 22952                           ;eusart.c: 102: eusartRxCount = 0;
 22953  2473  01D6               	clrf	_eusartRxCount	;volatile
 22954                           
 22955                           ;eusart.c: 105: PIE1bits.RCIE = 1;
 22956  2474  0021               	movlb	1	; select bank1
 22957  2475  1691               	bsf	17,5	;volatile
 22958  2476  0008               	return
 22959  2477                     __end_of_EUSART_Initialize:	
 22960                           
 22961                           	psect	text118
 22962  257B                     __ptext118:	
 22963 ;; *************** function _EUSART_Read *****************
 22964 ;; Defined at:
 22965 ;;		line 108 in file "mcc_generated_files/eusart.c"
 22966 ;; Parameters:    Size  Location     Type
 22967 ;;		None
 22968 ;; Auto vars:     Size  Location     Type
 22969 ;;  readValue       1   18[BANK0 ] unsigned char 
 22970 ;; Return value:  Size  Location     Type
 22971 ;;                  1    wreg      unsigned char 
 22972 ;; Registers used:
 22973 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22974 ;; Tracked objects:
 22975 ;;		On entry : 0/0
 22976 ;;		On exit  : 0/0
 22977 ;;		Unchanged: 0/0
 22978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22982 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22983 ;;Total ram usage:        2 bytes
 22984 ;; Hardware stack levels used:    1
 22985 ;; Hardware stack levels required when called:    6
 22986 ;; This function calls:
 22987 ;;		Nothing
 22988 ;; This function is called by:
 22989 ;;		_main
 22990 ;;		_getch
 22991 ;; This function uses a non-reentrant model
 22992 ;;
 22993                           
 22994                           
 22995                           ;psect for function _EUSART_Read
 22996  257B                     _EUSART_Read:	
 22997                           
 22998                           ;eusart.c: 110: uint8_t readValue = 0;
 22999                           
 23000                           ;incstack = 0
 23001                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 23002  257B  0020               	movlb	0	; select bank0
 23003  257C  01B2               	clrf	EUSART_Read@readValue
 23004  257D                     l6486:	
 23005                           ;eusart.c: 113: {
 23006                           
 23007                           ;eusart.c: 112: while(0 == eusartRxCount)
 23008                           
 23009  257D  0856               	movf	_eusartRxCount,w	;volatile
 23010  257E  1903               	btfsc	3,2
 23011  257F  2D7D               	goto	l6486
 23012                           
 23013                           ;eusart.c: 114: }
 23014                           ;eusart.c: 116: readValue = eusartRxBuffer[eusartRxTail++];
 23015  2580  0857               	movf	_eusartRxTail,w
 23016  2581  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 23017  2582  0086               	movwf	6
 23018  2583  3001               	movlw	1	; select bank3/4
 23019  2584  0087               	movwf	7
 23020  2585  0801               	movf	1,w
 23021  2586  00B1               	movwf	??_EUSART_Read
 23022  2587  0831               	movf	??_EUSART_Read,w
 23023  2588  00B2               	movwf	EUSART_Read@readValue
 23024  2589  3001               	movlw	1
 23025  258A  00B1               	movwf	??_EUSART_Read
 23026  258B  0831               	movf	??_EUSART_Read,w
 23027  258C  07D7               	addwf	_eusartRxTail,f	;volatile
 23028                           
 23029                           ;eusart.c: 117: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 23030  258D  3008               	movlw	8
 23031  258E  0257               	subwf	_eusartRxTail,w	;volatile
 23032  258F  1803               	btfsc	3,0
 23033                           
 23034                           ;eusart.c: 118: {
 23035                           ;eusart.c: 119: eusartRxTail = 0;
 23036  2590  01D7               	clrf	_eusartRxTail	;volatile
 23037                           
 23038                           ;eusart.c: 120: }
 23039                           ;eusart.c: 121: PIE1bits.RCIE = 0;
 23040  2591  0021               	movlb	1	; select bank1
 23041  2592  1291               	bcf	17,5	;volatile
 23042                           
 23043                           ;eusart.c: 122: eusartRxCount--;
 23044  2593  3001               	movlw	1
 23045  2594  0020               	movlb	0	; select bank0
 23046  2595  02D6               	subwf	_eusartRxCount,f	;volatile
 23047                           
 23048                           ;eusart.c: 123: PIE1bits.RCIE = 1;
 23049  2596  0021               	movlb	1	; select bank1
 23050  2597  1691               	bsf	17,5	;volatile
 23051                           
 23052                           ;eusart.c: 125: return readValue;
 23053  2598  0020               	movlb	0	; select bank0
 23054  2599  0832               	movf	EUSART_Read@readValue,w
 23055  259A  0008               	return
 23056  259B                     __end_of_EUSART_Read:	
 23057                           
 23058                           	psect	intentry
 23059  0004                     __pintentry:	
 23060 ;; *************** function _INTERRUPT_InterruptManager *****************
 23061 ;; Defined at:
 23062 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 23063 ;; Parameters:    Size  Location     Type
 23064 ;;		None
 23065 ;; Auto vars:     Size  Location     Type
 23066 ;;		None
 23067 ;; Return value:  Size  Location     Type
 23068 ;;                  1    wreg      void 
 23069 ;; Registers used:
 23070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23071 ;; Tracked objects:
 23072 ;;		On entry : 0/0
 23073 ;;		On exit  : 0/0
 23074 ;;		Unchanged: 0/0
 23075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23080 ;;Total ram usage:        1 bytes
 23081 ;; Hardware stack levels used:    1
 23082 ;; Hardware stack levels required when called:    5
 23083 ;; This function calls:
 23084 ;;		Absolute function
 23085 ;;		_EUSART_Receive_ISR
 23086 ;;		_EUSART_Transmit_ISR
 23087 ;;		_TMR0_ISR
 23088 ;;		_TMR2_ISR
 23089 ;;		_i2c_busCollisionISR
 23090 ;;		i1_i2c_ISR
 23091 ;; This function is called by:
 23092 ;;		Interrupt level 1
 23093 ;; This function uses a non-reentrant model
 23094 ;;
 23095                           
 23096  0004                     _INTERRUPT_InterruptManager:	
 23097                           
 23098                           ;incstack = 0
 23099 ;; hardware stack exceeded
 23100  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 23101                           
 23102                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23103  0005  3180               	pagesel	$
 23104  0006  0020               	movlb	0	; select bank0
 23105  0007  087F               	movf	127,w
 23106  0008  00FC               	movwf	??_INTERRUPT_InterruptManager
 23107                           
 23108                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 23109  0009  0021               	movlb	1	; select bank1
 23110  000A  1E90               	btfss	16,5	;volatile
 23111  000B  2813               	goto	i1l351
 23112  000C  0020               	movlb	0	; select bank0
 23113  000D  1E90               	btfss	16,5	;volatile
 23114  000E  2813               	goto	i1l351
 23115                           
 23116                           ;interrupt_manager.c: 55: {
 23117                           ;interrupt_manager.c: 56: TMR0_ISR();
 23118  000F  31A3  239D  3180   	fcall	_TMR0_ISR
 23119                           
 23120                           ;interrupt_manager.c: 57: }
 23121  0012  284B               	goto	i1l365
 23122  0013                     i1l351:	
 23123                           
 23124                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1)
 23125  0013  1F0B               	btfss	11,6	;volatile
 23126  0014  284B               	goto	i1l365
 23127                           
 23128                           ;interrupt_manager.c: 59: {
 23129                           ;interrupt_manager.c: 60: if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
 23130  0015  0021               	movlb	1	; select bank1
 23131  0016  1D11               	btfss	17,2	;volatile
 23132  0017  2822               	goto	i1l354
 23133  0018  0020               	movlb	0	; select bank0
 23134  0019  1D11               	btfss	17,2	;volatile
 23135  001A  2822               	goto	i1l354
 23136                           
 23137                           ;interrupt_manager.c: 61: {
 23138                           ;interrupt_manager.c: 62: i2c1_driver_busCollisionISR();
 23139  001B  0022               	movlb	2	; select bank2
 23140  001C  086B               	movf	(_i2c1_driver_busCollisionISR+1)^(0+256),w
 23141  001D  008A               	movwf	10
 23142  001E  086A               	movf	_i2c1_driver_busCollisionISR^(0+256),w
 23143  001F  000A               	callw
 23144  0020  3180               	pagesel	$
 23145                           
 23146                           ;interrupt_manager.c: 63: }
 23147  0021  284B               	goto	i1l365
 23148  0022                     i1l354:	
 23149                           
 23150                           ;interrupt_manager.c: 64: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 23151  0022  0021               	movlb	1	; select bank1
 23152  0023  1D91               	btfss	17,3	;volatile
 23153  0024  282F               	goto	i1l356
 23154  0025  0020               	movlb	0	; select bank0
 23155  0026  1D91               	btfss	17,3	;volatile
 23156  0027  282F               	goto	i1l356
 23157                           
 23158                           ;interrupt_manager.c: 65: {
 23159                           ;interrupt_manager.c: 66: i2c1_driver_i2cISR();
 23160  0028  0022               	movlb	2	; select bank2
 23161  0029  0869               	movf	(_i2c1_driver_i2cISR+1)^(0+256),w
 23162  002A  008A               	movwf	10
 23163  002B  0868               	movf	_i2c1_driver_i2cISR^(0+256),w
 23164  002C  000A               	callw
 23165  002D  3180               	pagesel	$
 23166                           
 23167                           ;interrupt_manager.c: 67: }
 23168  002E  284B               	goto	i1l365
 23169  002F                     i1l356:	
 23170                           
 23171                           ;interrupt_manager.c: 68: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 23172  002F  0021               	movlb	1	; select bank1
 23173  0030  1C91               	btfss	17,1	;volatile
 23174  0031  2839               	goto	i1l358
 23175  0032  0020               	movlb	0	; select bank0
 23176  0033  1C91               	btfss	17,1	;volatile
 23177  0034  2839               	goto	i1l358
 23178                           
 23179                           ;interrupt_manager.c: 69: {
 23180                           ;interrupt_manager.c: 70: TMR2_ISR();
 23181  0035  31A3  23AA  3180   	fcall	_TMR2_ISR
 23182                           
 23183                           ;interrupt_manager.c: 71: }
 23184  0038  284B               	goto	i1l365
 23185  0039                     i1l358:	
 23186                           
 23187                           ;interrupt_manager.c: 72: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 23188  0039  0021               	movlb	1	; select bank1
 23189  003A  1E91               	btfss	17,5	;volatile
 23190  003B  2843               	goto	i1l360
 23191  003C  0020               	movlb	0	; select bank0
 23192  003D  1E91               	btfss	17,5	;volatile
 23193  003E  2843               	goto	i1l360
 23194                           
 23195                           ;interrupt_manager.c: 73: {
 23196                           ;interrupt_manager.c: 74: EUSART_Receive_ISR();
 23197  003F  31A4  24AC  3180   	fcall	_EUSART_Receive_ISR
 23198                           
 23199                           ;interrupt_manager.c: 75: }
 23200  0042  284B               	goto	i1l365
 23201  0043                     i1l360:	
 23202                           
 23203                           ;interrupt_manager.c: 76: else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 23204  0043  0021               	movlb	1	; select bank1
 23205  0044  1E11               	btfss	17,4	;volatile
 23206  0045  284B               	goto	i1l365
 23207  0046  0020               	movlb	0	; select bank0
 23208  0047  1E11               	btfss	17,4	;volatile
 23209  0048  284B               	goto	i1l365
 23210                           
 23211                           ;interrupt_manager.c: 77: {
 23212                           ;interrupt_manager.c: 78: EUSART_Transmit_ISR();
 23213  0049  31A5  2501         	fcall	_EUSART_Transmit_ISR
 23214  004B                     i1l365:	
 23215                           ;interrupt_manager.c: 85: else
 23216                           ;interrupt_manager.c: 86: {
 23217                           
 23218                           ;interrupt_manager.c: 83: }
 23219                           ;interrupt_manager.c: 84: }
 23220                           
 23221                           ;interrupt_manager.c: 80: else
 23222                           ;interrupt_manager.c: 81: {
 23223                           
 23224                           ;interrupt_manager.c: 79: }
 23225                           
 23226  004B  087C               	movf	??_INTERRUPT_InterruptManager,w
 23227  004C  0020               	movlb	0	; select bank0
 23228  004D  00FF               	movwf	127
 23229  004E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 23230  004F  0009               	retfie
 23231  0050                     __end_of_INTERRUPT_InterruptManager:	
 23232                           
 23233                           	psect	text120
 23234  255B                     __ptext120:	
 23235 ;; *************** function i1_i2c_ISR *****************
 23236 ;; Defined at:
 23237 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 23238 ;; Parameters:    Size  Location     Type
 23239 ;;		None
 23240 ;; Auto vars:     Size  Location     Type
 23241 ;;		None
 23242 ;; Return value:  Size  Location     Type
 23243 ;;                  1    wreg      void 
 23244 ;; Registers used:
 23245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23246 ;; Tracked objects:
 23247 ;;		On entry : 0/0
 23248 ;;		On exit  : 0/0
 23249 ;;		Unchanged: 0/0
 23250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23254 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23255 ;;Total ram usage:        1 bytes
 23256 ;; Hardware stack levels used:    1
 23257 ;; Hardware stack levels required when called:    3
 23258 ;; This function calls:
 23259 ;;		i1_do_I2C_DO_ACK
 23260 ;;		i1_do_I2C_DO_ADDRESS_NACK
 23261 ;;		i1_do_I2C_DO_NACK_RESTART
 23262 ;;		i1_do_I2C_DO_NACK_STOP
 23263 ;;		i1_do_I2C_IDLE
 23264 ;;		i1_do_I2C_RCEN
 23265 ;;		i1_do_I2C_RESET
 23266 ;;		i1_do_I2C_RX
 23267 ;;		i1_do_I2C_SEND_ADR_READ
 23268 ;;		i1_do_I2C_SEND_ADR_WRITE
 23269 ;;		i1_do_I2C_SEND_RESTART
 23270 ;;		i1_do_I2C_SEND_RESTART_READ
 23271 ;;		i1_do_I2C_SEND_RESTART_WRITE
 23272 ;;		i1_do_I2C_SEND_STOP
 23273 ;;		i1_do_I2C_TX
 23274 ;;		i1_do_I2C_TX_EMPTY
 23275 ;;		i1_i2c1_driver_isNACK
 23276 ;;		i1_mssp1_clearIRQ
 23277 ;; This function is called by:
 23278 ;; This function uses a non-reentrant model
 23279 ;;
 23280                           
 23281                           
 23282                           ;psect for function i1_i2c_ISR
 23283  255B                     i1_i2c_ISR:	
 23284  255B                     i1l8492:	
 23285                           ;incstack = 0
 23286                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23287                           
 23288                           
 23289                           ;i2c_master.c: 421: mssp1_clearIRQ();
 23290  255B  31A1  21F2  31A5   	fcall	i1_mssp1_clearIRQ
 23291                           
 23292                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 23293  255E  0022               	movlb	2	; select bank2
 23294  255F  1DA0               	btfss	_i2c_status^(0+256),3
 23295  2560  2D6B               	goto	i1l8500
 23296  2561  31A3  236D  31A5   	fcall	i1_i2c1_driver_isNACK
 23297  2564  1C03               	btfss	3,0
 23298  2565  2D6B               	goto	i1l8500
 23299                           
 23300                           ;i2c_master.c: 428: {
 23301                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 23302  2566  300F               	movlw	15
 23303  2567  00F5               	movwf	??i1_i2c_ISR
 23304  2568  0875               	movf	??i1_i2c_ISR,w
 23305  2569  0022               	movlb	2	; select bank2
 23306  256A  00AA               	movwf	(_i2c_status^(0+256)+10)
 23307  256B                     i1l8500:	
 23308                           
 23309                           ;i2c_master.c: 430: }
 23310                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 23311  256B  0022               	movlb	2	; select bank2
 23312  256C  352A               	lslf	(_i2c_status^(0+256)+10),w
 23313  256D  3E20               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 23314  256E  0086               	movwf	6
 23315  256F  3002               	movlw	2	; select bank4/5
 23316  2570  0087               	movwf	7
 23317  2571  3F41               	moviw [1]fsr1
 23318  2572  008A               	movwf	10
 23319  2573  3F40               	moviw [0]fsr1
 23320  2574  000A               	callw
 23321  2575  31A5               	pagesel	$
 23322  2576  00F5               	movwf	??i1_i2c_ISR
 23323  2577  0875               	movf	??i1_i2c_ISR,w
 23324  2578  0022               	movlb	2	; select bank2
 23325  2579  00AA               	movwf	(_i2c_status^(0+256)+10)
 23326  257A  0008               	return
 23327  257B                     __end_ofi1_i2c_ISR:	
 23328                           
 23329                           	psect	text121
 23330  21F2                     __ptext121:	
 23331 ;; *************** function i1_mssp1_clearIRQ *****************
 23332 ;; Defined at:
 23333 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 23334 ;; Parameters:    Size  Location     Type
 23335 ;;		None
 23336 ;; Auto vars:     Size  Location     Type
 23337 ;;		None
 23338 ;; Return value:  Size  Location     Type
 23339 ;;                  1    wreg      void 
 23340 ;; Registers used:
 23341 ;;		None
 23342 ;; Tracked objects:
 23343 ;;		On entry : 0/0
 23344 ;;		On exit  : 0/0
 23345 ;;		Unchanged: 0/0
 23346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23351 ;;Total ram usage:        0 bytes
 23352 ;; Hardware stack levels used:    1
 23353 ;; This function calls:
 23354 ;;		Nothing
 23355 ;; This function is called by:
 23356 ;;		i1_i2c_ISR
 23357 ;; This function uses a non-reentrant model
 23358 ;;
 23359                           
 23360                           
 23361                           ;psect for function i1_mssp1_clearIRQ
 23362  21F2                     i1_mssp1_clearIRQ:	
 23363                           
 23364                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 23365                           
 23366                           ;incstack = 0
 23367                           ; Regs used in i1_mssp1_clearIRQ: []
 23368  21F2  0020               	movlb	0	; select bank0
 23369  21F3  1191               	bcf	17,3	;volatile
 23370  21F4  0008               	return
 23371  21F5                     __end_ofi1_mssp1_clearIRQ:	
 23372                           
 23373                           	psect	text122
 23374  18D9                     __ptext122:	
 23375 ;; *************** function i1_do_I2C_RX *****************
 23376 ;; Defined at:
 23377 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 23378 ;; Parameters:    Size  Location     Type
 23379 ;;		None
 23380 ;; Auto vars:     Size  Location     Type
 23381 ;;		None
 23382 ;; Return value:  Size  Location     Type
 23383 ;;                  1    wreg      enum E8364
 23384 ;; Registers used:
 23385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23386 ;; Tracked objects:
 23387 ;;		On entry : 0/0
 23388 ;;		On exit  : 0/0
 23389 ;;		Unchanged: 0/0
 23390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23394 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23395 ;;Total ram usage:        1 bytes
 23396 ;; Hardware stack levels used:    1
 23397 ;; Hardware stack levels required when called:    2
 23398 ;; This function calls:
 23399 ;;		i1_do_I2C_DO_NACK_RESTART
 23400 ;;		i1_do_I2C_DO_NACK_STOP
 23401 ;;		i1_i2c1_driver_getRXData
 23402 ;;		i1_i2c1_driver_sendACK
 23403 ;;		i1_returnReset
 23404 ;;		i1_returnStop
 23405 ;; This function is called by:
 23406 ;; This function uses a non-reentrant model
 23407 ;;
 23408                           
 23409                           
 23410                           ;psect for function i1_do_I2C_RX
 23411  18D9                     i1_do_I2C_RX:	
 23412  18D9                     i1l8272:	
 23413                           ;incstack = 0
 23414                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23415                           
 23416                           
 23417                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 23418  18D9  0022               	movlb	2	; select bank2
 23419  18DA  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 23420  18DB  0086               	movwf	6
 23421  18DC  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 23422  18DD  0087               	movwf	7
 23423  18DE  31A1  21EC  3198   	fcall	i1_i2c1_driver_getRXData
 23424  18E1  0081               	movwf	1
 23425  18E2  3001               	movlw	1
 23426  18E3  0022               	movlb	2	; select bank2
 23427  18E4  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 23428  18E5  3000               	movlw	0
 23429  18E6  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 23430                           
 23431                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 23432  18E7  3001               	movlw	1
 23433  18E8  02A4               	subwf	(_i2c_status^(0+256)+4),f
 23434  18E9  3000               	movlw	0
 23435  18EA  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 23436  18EB  0824               	movf	(_i2c_status^(0+256)+4),w
 23437  18EC  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 23438  18ED  1903               	btfsc	3,2
 23439  18EE  28F3               	goto	i1l761
 23440                           
 23441                           ;i2c_master.c: 361: {
 23442                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 23443  18EF  31A2  2210         	fcall	i1_i2c1_driver_sendACK
 23444                           
 23445                           ;i2c_master.c: 363: return I2C_RCEN;
 23446  18F1  3005               	movlw	5
 23447                           
 23448                           ;i2c_master.c: 364: }
 23449  18F2  0008               	return
 23450  18F3                     i1l761:	
 23451                           
 23452                           ;i2c_master.c: 365: else
 23453                           ;i2c_master.c: 366: {
 23454                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 23455  18F3  1520               	bsf	_i2c_status^(0+256),2
 23456                           
 23457                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 23458  18F4  28FB               	goto	i1l8296
 23459  18F5                     i1l8286:	
 23460                           ;i2c_master.c: 369: {
 23461                           ;i2c_master.c: 370: case i2c_restart_write:
 23462                           
 23463                           
 23464                           ;i2c_master.c: 371: case i2c_restart_read:
 23465                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 23466  18F5  31A2  2230         	fcall	i1_do_I2C_DO_NACK_RESTART
 23467  18F7  0008               	return
 23468  18F8                     i1l8290:	
 23469                           ;i2c_master.c: 374: case i2c_continue:
 23470                           
 23471                           ;i2c_master.c: 373: default:
 23472                           
 23473                           
 23474                           ;i2c_master.c: 375: case i2c_stop:
 23475                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 23476  18F8  31A2  222C         	fcall	i1_do_I2C_DO_NACK_STOP
 23477                           
 23478                           ;i2c_master.c: 377: }
 23479  18FA  0008               	return
 23480  18FB                     i1l8296:	
 23481  18FB  0022               	movlb	2	; select bank2
 23482  18FC  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 23483  18FD  00F0               	movwf	??i1_do_I2C_RX
 23484  18FE  0870               	movf	??i1_do_I2C_RX,w
 23485  18FF  00F0               	movwf	i1returnReset@p
 23486  1900  300C               	movlw	12
 23487  1901  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23488  1902  0086               	movwf	6
 23489  1903  3001               	movlw	1	; select bank2/3
 23490  1904  0087               	movwf	7
 23491  1905  3F41               	moviw [1]fsr1
 23492  1906  008A               	movwf	10
 23493  1907  3F40               	moviw [0]fsr1
 23494  1908  000A               	callw
 23495  1909  3198               	pagesel	$
 23496                           
 23497                           ; Switch size 1, requested type "space"
 23498                           ; Number of cases is 4, Range of values is 1 to 4
 23499                           ; switch strategies available:
 23500                           ; Name         Instructions Cycles
 23501                           ; simple_byte           13     7 (average)
 23502                           ; direct_byte           17     9 (fixed)
 23503                           ; jumptable            263     9 (fixed)
 23504                           ;	Chosen strategy is simple_byte
 23505  190A  3A01               	xorlw	1	; case 1
 23506  190B  1903               	skipnz
 23507  190C  28F8               	goto	i1l8290
 23508  190D  3A03               	xorlw	3	; case 2
 23509  190E  1903               	skipnz
 23510  190F  28F5               	goto	i1l8286
 23511  1910  3A01               	xorlw	1	; case 3
 23512  1911  1903               	skipnz
 23513  1912  28F5               	goto	i1l8286
 23514  1913  3A07               	xorlw	7	; case 4
 23515  1914  1903               	skipnz
 23516  1915  28F8               	goto	i1l8290
 23517  1916  28F8               	goto	i1l8290
 23518  1917  0008               	return
 23519  1918                     __end_ofi1_do_I2C_RX:	
 23520                           
 23521                           	psect	text123
 23522  1BE2                     __ptext123:	
 23523 ;; *************** function i1_do_I2C_TX *****************
 23524 ;; Defined at:
 23525 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 23526 ;; Parameters:    Size  Location     Type
 23527 ;;		None
 23528 ;; Auto vars:     Size  Location     Type
 23529 ;;		None
 23530 ;; Return value:  Size  Location     Type
 23531 ;;                  1    wreg      enum E8364
 23532 ;; Registers used:
 23533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23534 ;; Tracked objects:
 23535 ;;		On entry : 0/0
 23536 ;;		On exit  : 0/0
 23537 ;;		Unchanged: 0/0
 23538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23541 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23542 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23543 ;;Total ram usage:        4 bytes
 23544 ;; Hardware stack levels used:    1
 23545 ;; Hardware stack levels required when called:    2
 23546 ;; This function calls:
 23547 ;;		i1_do_I2C_SEND_RESTART_READ
 23548 ;;		i1_do_I2C_SEND_RESTART_WRITE
 23549 ;;		i1_do_I2C_SEND_STOP
 23550 ;;		i1_i2c1_driver_TXData
 23551 ;;		i1_i2c1_driver_isNACK
 23552 ;;		i1_returnReset
 23553 ;;		i1_returnStop
 23554 ;; This function is called by:
 23555 ;; This function uses a non-reentrant model
 23556 ;;
 23557                           
 23558                           
 23559                           ;psect for function i1_do_I2C_TX
 23560  1BE2                     i1_do_I2C_TX:	
 23561  1BE2                     i1l8242:	
 23562                           ;incstack = 0
 23563                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23564                           
 23565                           
 23566                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 23567  1BE2  31A3  236D  319B   	fcall	i1_i2c1_driver_isNACK
 23568  1BE5  1803               	btfsc	3,0
 23569  1BE6  2BF1               	goto	i1l8260
 23570  1BE7  2C0E               	goto	i1l745
 23571  1BE8                     i1l8246:	
 23572                           ;i2c_master.c: 338: {
 23573                           ;i2c_master.c: 339: case i2c_restart_read:
 23574                           
 23575                           ;i2c_master.c: 336: {
 23576                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 23577                           
 23578                           
 23579                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 23580  1BE8  31A2  2218         	fcall	i1_do_I2C_SEND_RESTART_READ
 23581  1BEA  0008               	return
 23582  1BEB                     i1l8250:	
 23583                           ;i2c_master.c: 341: case i2c_restart_write:
 23584                           
 23585                           
 23586                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 23587  1BEB  31A2  221C         	fcall	i1_do_I2C_SEND_RESTART_WRITE
 23588  1BED  0008               	return
 23589  1BEE                     i1l8254:	
 23590                           ;i2c_master.c: 344: case i2c_continue:
 23591                           
 23592                           ;i2c_master.c: 343: default:
 23593                           
 23594                           
 23595                           ;i2c_master.c: 345: case i2c_stop:
 23596                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 23597  1BEE  31A2  2224         	fcall	i1_do_I2C_SEND_STOP
 23598                           
 23599                           ;i2c_master.c: 347: }
 23600  1BF0  0008               	return
 23601  1BF1                     i1l8260:	
 23602  1BF1  0022               	movlb	2	; select bank2
 23603  1BF2  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 23604  1BF3  00F1               	movwf	??i1_do_I2C_TX
 23605  1BF4  0871               	movf	??i1_do_I2C_TX,w
 23606  1BF5  00F0               	movwf	i1returnReset@p
 23607  1BF6  3012               	movlw	18
 23608  1BF7  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23609  1BF8  0086               	movwf	6
 23610  1BF9  3001               	movlw	1	; select bank2/3
 23611  1BFA  0087               	movwf	7
 23612  1BFB  3F41               	moviw [1]fsr1
 23613  1BFC  008A               	movwf	10
 23614  1BFD  3F40               	moviw [0]fsr1
 23615  1BFE  000A               	callw
 23616  1BFF  319B               	pagesel	$
 23617                           
 23618                           ; Switch size 1, requested type "space"
 23619                           ; Number of cases is 4, Range of values is 1 to 4
 23620                           ; switch strategies available:
 23621                           ; Name         Instructions Cycles
 23622                           ; simple_byte           13     7 (average)
 23623                           ; direct_byte           17     9 (fixed)
 23624                           ; jumptable            263     9 (fixed)
 23625                           ;	Chosen strategy is simple_byte
 23626  1C00  3A01               	xorlw	1	; case 1
 23627  1C01  1903               	skipnz
 23628  1C02  2BEE               	goto	i1l8254
 23629  1C03  3A03               	xorlw	3	; case 2
 23630  1C04  1903               	skipnz
 23631  1C05  2BE8               	goto	i1l8246
 23632  1C06  3A01               	xorlw	1	; case 3
 23633  1C07  1903               	skipnz
 23634  1C08  2BEB               	goto	i1l8250
 23635  1C09  3A07               	xorlw	7	; case 4
 23636  1C0A  1903               	skipnz
 23637  1C0B  2BEE               	goto	i1l8254
 23638  1C0C  2BEE               	goto	i1l8254
 23639                           
 23640                           ;i2c_master.c: 348: }
 23641  1C0D  0008               	return
 23642  1C0E                     i1l745:	
 23643                           
 23644                           ;i2c_master.c: 349: else
 23645                           ;i2c_master.c: 350: {
 23646                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 23647  1C0E  0022               	movlb	2	; select bank2
 23648  1C0F  11A0               	bcf	_i2c_status^(0+256),3
 23649                           
 23650                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 23651  1C10  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 23652  1C11  00F2               	movwf	??i1_do_I2C_TX+1
 23653  1C12  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 23654  1C13  00F1               	movwf	??i1_do_I2C_TX
 23655  1C14  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 23656  1C15  1903               	skipnz
 23657  1C16  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 23658  1C17  0871               	movf	??i1_do_I2C_TX,w
 23659  1C18  0084               	movwf	4
 23660  1C19  0872               	movf	??i1_do_I2C_TX+1,w
 23661  1C1A  0085               	movwf	5
 23662  1C1B  0800               	movf	0,w	;code access
 23663  1C1C  31A2  224E  319B   	fcall	i1_i2c1_driver_TXData
 23664                           
 23665                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 23666  1C1F  3001               	movlw	1
 23667  1C20  0022               	movlb	2	; select bank2
 23668  1C21  02A4               	subwf	(_i2c_status^(0+256)+4),f
 23669  1C22  3000               	movlw	0
 23670  1C23  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 23671  1C24  0824               	movf	(_i2c_status^(0+256)+4),w
 23672  1C25  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 23673  1C26  1D03               	btfss	3,2
 23674  1C27  2C2A               	goto	i1l8268
 23675  1C28  3006               	movlw	6
 23676  1C29  2C2B               	goto	L37
 23677  1C2A                     i1l8268:	
 23678  1C2A  3003               	movlw	3
 23679  1C2B                     L37:	
 23680  1C2B  00F3               	movwf	i1_do_I2C_TX$1131
 23681  1C2C  3000               	movlw	0
 23682  1C2D  00F4               	movwf	i1_do_I2C_TX$1131+1
 23683  1C2E  0873               	movf	i1_do_I2C_TX$1131,w
 23684  1C2F  0008               	return
 23685  1C30                     __end_ofi1_do_I2C_TX:	
 23686                           
 23687                           	psect	text124
 23688  2642                     __ptext124:	
 23689 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 23690 ;; Defined at:
 23691 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 23692 ;; Parameters:    Size  Location     Type
 23693 ;;		None
 23694 ;; Auto vars:     Size  Location     Type
 23695 ;;		None
 23696 ;; Return value:  Size  Location     Type
 23697 ;;                  1    wreg      enum E8364
 23698 ;; Registers used:
 23699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23700 ;; Tracked objects:
 23701 ;;		On entry : 0/0
 23702 ;;		On exit  : 0/0
 23703 ;;		Unchanged: 0/0
 23704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23709 ;;Total ram usage:        1 bytes
 23710 ;; Hardware stack levels used:    1
 23711 ;; Hardware stack levels required when called:    2
 23712 ;; This function calls:
 23713 ;;		i1_do_I2C_SEND_RESTART
 23714 ;;		i1_do_I2C_SEND_STOP
 23715 ;;		i1_returnReset
 23716 ;;		i1_returnStop
 23717 ;; This function is called by:
 23718 ;; This function uses a non-reentrant model
 23719 ;;
 23720                           
 23721                           
 23722                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 23723  2642                     i1_do_I2C_DO_ADDRESS_NACK:	
 23724  2642                     i1l8226:	
 23725                           ;incstack = 0
 23726                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23727                           
 23728                           
 23729                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 23730  2642  0022               	movlb	2	; select bank2
 23731  2643  11A0               	bcf	_i2c_status^(0+256),3
 23732                           
 23733                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 23734  2644  3002               	movlw	2
 23735  2645  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 23736  2646  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 23737  2647  00AB               	movwf	(_i2c_status^(0+256)+11)
 23738                           
 23739                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 23740  2648  2E4F               	goto	i1l8240
 23741  2649                     i1l8230:	
 23742                           ;i2c_master.c: 324: {
 23743                           ;i2c_master.c: 325: case i2c_restart_read:
 23744                           
 23745                           
 23746                           ;i2c_master.c: 326: case i2c_restart_write:
 23747                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 23748  2649  31A2  2220         	fcall	i1_do_I2C_SEND_RESTART
 23749  264B  0008               	return
 23750  264C                     i1l8234:	
 23751                           ;i2c_master.c: 328: default:
 23752                           
 23753                           
 23754                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 23755  264C  31A2  2224         	fcall	i1_do_I2C_SEND_STOP
 23756                           
 23757                           ;i2c_master.c: 330: }
 23758  264E  0008               	return
 23759  264F                     i1l8240:	
 23760  264F  0022               	movlb	2	; select bank2
 23761  2650  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 23762  2651  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 23763  2652  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 23764  2653  00F0               	movwf	i1returnReset@p
 23765  2654  3010               	movlw	16
 23766  2655  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23767  2656  0086               	movwf	6
 23768  2657  3001               	movlw	1	; select bank2/3
 23769  2658  0087               	movwf	7
 23770  2659  3F41               	moviw [1]fsr1
 23771  265A  008A               	movwf	10
 23772  265B  3F40               	moviw [0]fsr1
 23773  265C  000A               	callw
 23774  265D  31A6               	pagesel	$
 23775                           
 23776                           ; Switch size 1, requested type "space"
 23777                           ; Number of cases is 2, Range of values is 2 to 3
 23778                           ; switch strategies available:
 23779                           ; Name         Instructions Cycles
 23780                           ; simple_byte            7     4 (average)
 23781                           ; direct_byte           13     9 (fixed)
 23782                           ; jumptable            263     9 (fixed)
 23783                           ;	Chosen strategy is simple_byte
 23784  265E  3A02               	xorlw	2	; case 2
 23785  265F  1903               	skipnz
 23786  2660  2E49               	goto	i1l8230
 23787  2661  3A01               	xorlw	1	; case 3
 23788  2662  1903               	skipnz
 23789  2663  2E49               	goto	i1l8230
 23790  2664  2E4C               	goto	i1l8234
 23791  2665  0008               	return
 23792  2666                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 23793                           
 23794                           	psect	text125
 23795  2230                     __ptext125:	
 23796 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 23797 ;; Defined at:
 23798 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 23799 ;; Parameters:    Size  Location     Type
 23800 ;;		None
 23801 ;; Auto vars:     Size  Location     Type
 23802 ;;		None
 23803 ;; Return value:  Size  Location     Type
 23804 ;;                  1    wreg      enum E8364
 23805 ;; Registers used:
 23806 ;;		wreg, status,2, status,0, pclath, cstack
 23807 ;; Tracked objects:
 23808 ;;		On entry : 0/0
 23809 ;;		On exit  : 0/0
 23810 ;;		Unchanged: 0/0
 23811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23816 ;;Total ram usage:        0 bytes
 23817 ;; Hardware stack levels used:    1
 23818 ;; Hardware stack levels required when called:    1
 23819 ;; This function calls:
 23820 ;;		i1_i2c1_driver_sendNACK
 23821 ;; This function is called by:
 23822 ;;		i1_do_I2C_RX
 23823 ;; This function uses a non-reentrant model
 23824 ;;
 23825                           
 23826                           
 23827                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 23828  2230                     i1_do_I2C_DO_NACK_RESTART:	
 23829  2230                     i1l7860:	
 23830                           ;incstack = 0
 23831                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 23832                           
 23833                           
 23834                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 23835  2230  31A2  2214         	fcall	i1_i2c1_driver_sendNACK
 23836                           
 23837                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 23838  2232  3009               	movlw	9
 23839  2233  0008               	return
 23840  2234                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 23841                           
 23842                           	psect	text126
 23843  222C                     __ptext126:	
 23844 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 23845 ;; Defined at:
 23846 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 23847 ;; Parameters:    Size  Location     Type
 23848 ;;		None
 23849 ;; Auto vars:     Size  Location     Type
 23850 ;;		None
 23851 ;; Return value:  Size  Location     Type
 23852 ;;                  1    wreg      enum E8364
 23853 ;; Registers used:
 23854 ;;		wreg, status,2, status,0, pclath, cstack
 23855 ;; Tracked objects:
 23856 ;;		On entry : 0/0
 23857 ;;		On exit  : 0/0
 23858 ;;		Unchanged: 0/0
 23859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23864 ;;Total ram usage:        0 bytes
 23865 ;; Hardware stack levels used:    1
 23866 ;; Hardware stack levels required when called:    1
 23867 ;; This function calls:
 23868 ;;		i1_i2c1_driver_sendNACK
 23869 ;; This function is called by:
 23870 ;;		i1_do_I2C_RX
 23871 ;; This function uses a non-reentrant model
 23872 ;;
 23873                           
 23874                           
 23875                           ;psect for function i1_do_I2C_DO_NACK_STOP
 23876  222C                     i1_do_I2C_DO_NACK_STOP:	
 23877  222C                     i1l7854:	
 23878                           ;incstack = 0
 23879                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 23880                           
 23881                           
 23882                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 23883  222C  31A2  2214         	fcall	i1_i2c1_driver_sendNACK
 23884                           
 23885                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 23886  222E  300A               	movlw	10
 23887  222F  0008               	return
 23888  2230                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 23889                           
 23890                           	psect	text127
 23891  2228                     __ptext127:	
 23892 ;; *************** function i1_do_I2C_DO_ACK *****************
 23893 ;; Defined at:
 23894 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 23895 ;; Parameters:    Size  Location     Type
 23896 ;;		None
 23897 ;; Auto vars:     Size  Location     Type
 23898 ;;		None
 23899 ;; Return value:  Size  Location     Type
 23900 ;;                  1    wreg      enum E8364
 23901 ;; Registers used:
 23902 ;;		wreg, status,2, status,0, pclath, cstack
 23903 ;; Tracked objects:
 23904 ;;		On entry : 0/0
 23905 ;;		On exit  : 0/0
 23906 ;;		Unchanged: 0/0
 23907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23912 ;;Total ram usage:        0 bytes
 23913 ;; Hardware stack levels used:    1
 23914 ;; Hardware stack levels required when called:    1
 23915 ;; This function calls:
 23916 ;;		i1_i2c1_driver_sendACK
 23917 ;; This function is called by:
 23918 ;; This function uses a non-reentrant model
 23919 ;;
 23920                           
 23921                           
 23922                           ;psect for function i1_do_I2C_DO_ACK
 23923  2228                     i1_do_I2C_DO_ACK:	
 23924  2228                     i1l8220:	
 23925                           ;incstack = 0
 23926                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 23927                           
 23928                           
 23929                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 23930  2228  31A2  2210         	fcall	i1_i2c1_driver_sendACK
 23931                           
 23932                           ;i2c_master.c: 302: return I2C_RCEN;
 23933  222A  3005               	movlw	5
 23934  222B  0008               	return
 23935  222C                     __end_ofi1_do_I2C_DO_ACK:	
 23936                           
 23937                           	psect	text128
 23938  2262                     __ptext128:	
 23939 ;; *************** function i1_do_I2C_RCEN *****************
 23940 ;; Defined at:
 23941 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 23942 ;; Parameters:    Size  Location     Type
 23943 ;;		None
 23944 ;; Auto vars:     Size  Location     Type
 23945 ;;		None
 23946 ;; Return value:  Size  Location     Type
 23947 ;;                  1    wreg      enum E8364
 23948 ;; Registers used:
 23949 ;;		wreg, status,2, status,0, pclath, cstack
 23950 ;; Tracked objects:
 23951 ;;		On entry : 0/0
 23952 ;;		On exit  : 0/0
 23953 ;;		Unchanged: 0/0
 23954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23959 ;;Total ram usage:        0 bytes
 23960 ;; Hardware stack levels used:    1
 23961 ;; Hardware stack levels required when called:    1
 23962 ;; This function calls:
 23963 ;;		i1_i2c1_driver_startRX
 23964 ;; This function is called by:
 23965 ;; This function uses a non-reentrant model
 23966 ;;
 23967                           
 23968                           
 23969                           ;psect for function i1_do_I2C_RCEN
 23970  2262                     i1_do_I2C_RCEN:	
 23971  2262                     i1l6326:	
 23972                           ;incstack = 0
 23973                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 23974                           
 23975                           
 23976                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 23977  2262  0022               	movlb	2	; select bank2
 23978  2263  11A0               	bcf	_i2c_status^(0+256),3
 23979                           
 23980                           ;i2c_master.c: 295: i2c1_driver_startRX();
 23981  2264  31A1  21E9         	fcall	i1_i2c1_driver_startRX
 23982                           
 23983                           ;i2c_master.c: 296: return I2C_RX;
 23984  2266  3004               	movlw	4
 23985  2267  0008               	return
 23986  2268                     __end_ofi1_do_I2C_RCEN:	
 23987                           
 23988                           	psect	text129
 23989  228D                     __ptext129:	
 23990 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 23991 ;; Defined at:
 23992 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 23993 ;; Parameters:    Size  Location     Type
 23994 ;;		None
 23995 ;; Auto vars:     Size  Location     Type
 23996 ;;		None
 23997 ;; Return value:  Size  Location     Type
 23998 ;;                  1    wreg      enum E8364
 23999 ;; Registers used:
 24000 ;;		wreg, status,2, status,0, pclath, cstack
 24001 ;; Tracked objects:
 24002 ;;		On entry : 0/0
 24003 ;;		On exit  : 0/0
 24004 ;;		Unchanged: 0/0
 24005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24010 ;;Total ram usage:        0 bytes
 24011 ;; Hardware stack levels used:    1
 24012 ;; Hardware stack levels required when called:    1
 24013 ;; This function calls:
 24014 ;;		i1_i2c1_driver_TXData
 24015 ;; This function is called by:
 24016 ;; This function uses a non-reentrant model
 24017 ;;
 24018                           
 24019                           
 24020                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 24021  228D                     i1_do_I2C_SEND_ADR_WRITE:	
 24022  228D                     i1l8212:	
 24023                           ;incstack = 0
 24024                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 24025                           
 24026                           
 24027                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 24028  228D  0022               	movlb	2	; select bank2
 24029  228E  15A0               	bsf	_i2c_status^(0+256),3
 24030                           
 24031                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 24032  228F  3521               	lslf	(_i2c_status^(0+256)+1),w
 24033  2290  31A2  224E         	fcall	i1_i2c1_driver_TXData
 24034                           
 24035                           ;i2c_master.c: 289: return I2C_TX;
 24036  2292  3003               	movlw	3
 24037  2293  0008               	return
 24038  2294                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 24039                           
 24040                           	psect	text130
 24041  2294                     __ptext130:	
 24042 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 24043 ;; Defined at:
 24044 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 24045 ;; Parameters:    Size  Location     Type
 24046 ;;		None
 24047 ;; Auto vars:     Size  Location     Type
 24048 ;;		None
 24049 ;; Return value:  Size  Location     Type
 24050 ;;                  1    wreg      enum E8364
 24051 ;; Registers used:
 24052 ;;		wreg, status,2, status,0, pclath, cstack
 24053 ;; Tracked objects:
 24054 ;;		On entry : 0/0
 24055 ;;		On exit  : 0/0
 24056 ;;		Unchanged: 0/0
 24057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24062 ;;Total ram usage:        0 bytes
 24063 ;; Hardware stack levels used:    1
 24064 ;; Hardware stack levels required when called:    1
 24065 ;; This function calls:
 24066 ;;		i1_i2c1_driver_TXData
 24067 ;; This function is called by:
 24068 ;; This function uses a non-reentrant model
 24069 ;;
 24070                           
 24071                           
 24072                           ;psect for function i1_do_I2C_SEND_ADR_READ
 24073  2294                     i1_do_I2C_SEND_ADR_READ:	
 24074  2294                     i1l8204:	
 24075                           ;incstack = 0
 24076                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 24077                           
 24078                           
 24079                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 24080  2294  0022               	movlb	2	; select bank2
 24081  2295  15A0               	bsf	_i2c_status^(0+256),3
 24082                           
 24083                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 24084  2296  1403               	setc
 24085  2297  0D21               	rlf	(_i2c_status^(0+256)+1),w
 24086  2298  31A2  224E         	fcall	i1_i2c1_driver_TXData
 24087                           
 24088                           ;i2c_master.c: 282: return I2C_RCEN;
 24089  229A  3005               	movlw	5
 24090  229B  0008               	return
 24091  229C                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 24092                           
 24093                           	psect	text131
 24094  2224                     __ptext131:	
 24095 ;; *************** function i1_do_I2C_SEND_STOP *****************
 24096 ;; Defined at:
 24097 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 24098 ;; Parameters:    Size  Location     Type
 24099 ;;		None
 24100 ;; Auto vars:     Size  Location     Type
 24101 ;;		None
 24102 ;; Return value:  Size  Location     Type
 24103 ;;                  1    wreg      enum E8364
 24104 ;; Registers used:
 24105 ;;		wreg, status,2, status,0, pclath, cstack
 24106 ;; Tracked objects:
 24107 ;;		On entry : 0/0
 24108 ;;		On exit  : 0/0
 24109 ;;		Unchanged: 0/0
 24110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24115 ;;Total ram usage:        0 bytes
 24116 ;; Hardware stack levels used:    1
 24117 ;; Hardware stack levels required when called:    1
 24118 ;; This function calls:
 24119 ;;		i1_i2c1_driver_stop
 24120 ;; This function is called by:
 24121 ;;		i1_do_I2C_DO_ADDRESS_NACK
 24122 ;;		i1_do_I2C_TX
 24123 ;;		i1_do_I2C_TX_EMPTY
 24124 ;; This function uses a non-reentrant model
 24125 ;;
 24126                           
 24127                           
 24128                           ;psect for function i1_do_I2C_SEND_STOP
 24129  2224                     i1_do_I2C_SEND_STOP:	
 24130  2224                     i1l7848:	
 24131                           ;incstack = 0
 24132                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 24133                           
 24134                           
 24135                           ;i2c_master.c: 274: i2c1_driver_stop();
 24136  2224  31A1  21E6         	fcall	i1_i2c1_driver_stop
 24137                           
 24138                           ;i2c_master.c: 275: return I2C_IDLE;
 24139  2226  3000               	movlw	0
 24140  2227  0008               	return
 24141  2228                     __end_ofi1_do_I2C_SEND_STOP:	
 24142                           
 24143                           	psect	text132
 24144  2220                     __ptext132:	
 24145 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 24146 ;; Defined at:
 24147 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 24148 ;; Parameters:    Size  Location     Type
 24149 ;;		None
 24150 ;; Auto vars:     Size  Location     Type
 24151 ;;		None
 24152 ;; Return value:  Size  Location     Type
 24153 ;;                  1    wreg      enum E8364
 24154 ;; Registers used:
 24155 ;;		wreg, status,2, status,0, pclath, cstack
 24156 ;; Tracked objects:
 24157 ;;		On entry : 0/0
 24158 ;;		On exit  : 0/0
 24159 ;;		Unchanged: 0/0
 24160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24165 ;;Total ram usage:        0 bytes
 24166 ;; Hardware stack levels used:    1
 24167 ;; Hardware stack levels required when called:    1
 24168 ;; This function calls:
 24169 ;;		i1_i2c1_driver_restart
 24170 ;; This function is called by:
 24171 ;;		i1_do_I2C_DO_ADDRESS_NACK
 24172 ;;		i1_do_I2C_TX_EMPTY
 24173 ;; This function uses a non-reentrant model
 24174 ;;
 24175                           
 24176                           
 24177                           ;psect for function i1_do_I2C_SEND_RESTART
 24178  2220                     i1_do_I2C_SEND_RESTART:	
 24179  2220                     i1l7842:	
 24180                           ;incstack = 0
 24181                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 24182                           
 24183                           
 24184                           ;i2c_master.c: 268: i2c1_driver_restart();
 24185  2220  31A1  21E3         	fcall	i1_i2c1_driver_restart
 24186                           
 24187                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 24188  2222  3001               	movlw	1
 24189  2223  0008               	return
 24190  2224                     __end_ofi1_do_I2C_SEND_RESTART:	
 24191                           
 24192                           	psect	text133
 24193  221C                     __ptext133:	
 24194 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 24195 ;; Defined at:
 24196 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 24197 ;; Parameters:    Size  Location     Type
 24198 ;;		None
 24199 ;; Auto vars:     Size  Location     Type
 24200 ;;		None
 24201 ;; Return value:  Size  Location     Type
 24202 ;;                  1    wreg      enum E8364
 24203 ;; Registers used:
 24204 ;;		wreg, status,2, status,0, pclath, cstack
 24205 ;; Tracked objects:
 24206 ;;		On entry : 0/0
 24207 ;;		On exit  : 0/0
 24208 ;;		Unchanged: 0/0
 24209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24214 ;;Total ram usage:        0 bytes
 24215 ;; Hardware stack levels used:    1
 24216 ;; Hardware stack levels required when called:    1
 24217 ;; This function calls:
 24218 ;;		i1_i2c1_driver_restart
 24219 ;; This function is called by:
 24220 ;;		i1_do_I2C_TX
 24221 ;; This function uses a non-reentrant model
 24222 ;;
 24223                           
 24224                           
 24225                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 24226  221C                     i1_do_I2C_SEND_RESTART_WRITE:	
 24227  221C                     i1l7836:	
 24228                           ;incstack = 0
 24229                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 24230                           
 24231                           
 24232                           ;i2c_master.c: 262: i2c1_driver_restart();
 24233  221C  31A1  21E3         	fcall	i1_i2c1_driver_restart
 24234                           
 24235                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 24236  221E  3002               	movlw	2
 24237  221F  0008               	return
 24238  2220                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 24239                           
 24240                           	psect	text134
 24241  2218                     __ptext134:	
 24242 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 24243 ;; Defined at:
 24244 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 24245 ;; Parameters:    Size  Location     Type
 24246 ;;		None
 24247 ;; Auto vars:     Size  Location     Type
 24248 ;;		None
 24249 ;; Return value:  Size  Location     Type
 24250 ;;                  1    wreg      enum E8364
 24251 ;; Registers used:
 24252 ;;		wreg, status,2, status,0, pclath, cstack
 24253 ;; Tracked objects:
 24254 ;;		On entry : 0/0
 24255 ;;		On exit  : 0/0
 24256 ;;		Unchanged: 0/0
 24257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24262 ;;Total ram usage:        0 bytes
 24263 ;; Hardware stack levels used:    1
 24264 ;; Hardware stack levels required when called:    1
 24265 ;; This function calls:
 24266 ;;		i1_i2c1_driver_restart
 24267 ;; This function is called by:
 24268 ;;		i1_do_I2C_TX
 24269 ;; This function uses a non-reentrant model
 24270 ;;
 24271                           
 24272                           
 24273                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 24274  2218                     i1_do_I2C_SEND_RESTART_READ:	
 24275  2218                     i1l7830:	
 24276                           ;incstack = 0
 24277                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 24278                           
 24279                           
 24280                           ;i2c_master.c: 256: i2c1_driver_restart();
 24281  2218  31A1  21E3         	fcall	i1_i2c1_driver_restart
 24282                           
 24283                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 24284  221A  3001               	movlw	1
 24285  221B  0008               	return
 24286  221C                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 24287                           
 24288                           	psect	text135
 24289  2253                     __ptext135:	
 24290 ;; *************** function i1_do_I2C_IDLE *****************
 24291 ;; Defined at:
 24292 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 24293 ;; Parameters:    Size  Location     Type
 24294 ;;		None
 24295 ;; Auto vars:     Size  Location     Type
 24296 ;;		None
 24297 ;; Return value:  Size  Location     Type
 24298 ;;                  1    wreg      enum E8364
 24299 ;; Registers used:
 24300 ;;		wreg, status,2
 24301 ;; Tracked objects:
 24302 ;;		On entry : 0/0
 24303 ;;		On exit  : 0/0
 24304 ;;		Unchanged: 0/0
 24305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24310 ;;Total ram usage:        0 bytes
 24311 ;; Hardware stack levels used:    1
 24312 ;; This function calls:
 24313 ;;		Nothing
 24314 ;; This function is called by:
 24315 ;; This function uses a non-reentrant model
 24316 ;;
 24317                           
 24318                           
 24319                           ;psect for function i1_do_I2C_IDLE
 24320  2253                     i1_do_I2C_IDLE:	
 24321  2253                     i1l6302:	
 24322                           ;incstack = 0
 24323                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 24324                           
 24325                           
 24326                           ;i2c_master.c: 249: i2c_status.busy = 0;
 24327  2253  0022               	movlb	2	; select bank2
 24328  2254  1020               	bcf	_i2c_status^(0+256),0
 24329                           
 24330                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 24331  2255  01AB               	clrf	(_i2c_status^(0+256)+11)
 24332                           
 24333                           ;i2c_master.c: 251: return I2C_RESET;
 24334  2256  300E               	movlw	14
 24335  2257  0008               	return
 24336  2258                     __end_ofi1_do_I2C_IDLE:	
 24337                           
 24338                           	psect	text136
 24339  2286                     __ptext136:	
 24340 ;; *************** function i1_do_I2C_RESET *****************
 24341 ;; Defined at:
 24342 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 24343 ;; Parameters:    Size  Location     Type
 24344 ;;		None
 24345 ;; Auto vars:     Size  Location     Type
 24346 ;;		None
 24347 ;; Return value:  Size  Location     Type
 24348 ;;                  1    wreg      enum E8364
 24349 ;; Registers used:
 24350 ;;		wreg, status,2, status,0, pclath, cstack
 24351 ;; Tracked objects:
 24352 ;;		On entry : 0/0
 24353 ;;		On exit  : 0/0
 24354 ;;		Unchanged: 0/0
 24355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24360 ;;Total ram usage:        0 bytes
 24361 ;; Hardware stack levels used:    1
 24362 ;; Hardware stack levels required when called:    1
 24363 ;; This function calls:
 24364 ;;		i1_i2c1_driver_resetBus
 24365 ;; This function is called by:
 24366 ;; This function uses a non-reentrant model
 24367 ;;
 24368                           
 24369                           
 24370                           ;psect for function i1_do_I2C_RESET
 24371  2286                     i1_do_I2C_RESET:	
 24372  2286                     i1l6292:	
 24373                           ;incstack = 0
 24374                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 24375                           
 24376                           
 24377                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 24378  2286  31A1  21D1         	fcall	i1_i2c1_driver_resetBus
 24379                           
 24380                           ;i2c_master.c: 242: i2c_status.busy = 0;
 24381  2288  0022               	movlb	2	; select bank2
 24382  2289  1020               	bcf	_i2c_status^(0+256),0
 24383                           
 24384                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 24385  228A  01AB               	clrf	(_i2c_status^(0+256)+11)
 24386                           
 24387                           ;i2c_master.c: 244: return I2C_RESET;
 24388  228B  300E               	movlw	14
 24389  228C  0008               	return
 24390  228D                     __end_ofi1_do_I2C_RESET:	
 24391                           
 24392                           	psect	text137
 24393  13CC                     __ptext137:	
 24394 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 24395 ;; Defined at:
 24396 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 24397 ;; Parameters:    Size  Location     Type
 24398 ;;		None
 24399 ;; Auto vars:     Size  Location     Type
 24400 ;;		None
 24401 ;; Return value:  Size  Location     Type
 24402 ;;                  1    wreg      enum E8364
 24403 ;; Registers used:
 24404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24405 ;; Tracked objects:
 24406 ;;		On entry : 0/0
 24407 ;;		On exit  : 0/0
 24408 ;;		Unchanged: 0/0
 24409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24412 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24414 ;;Total ram usage:        1 bytes
 24415 ;; Hardware stack levels used:    1
 24416 ;; Hardware stack levels required when called:    2
 24417 ;; This function calls:
 24418 ;;		i1_do_I2C_SEND_RESTART
 24419 ;;		i1_do_I2C_SEND_STOP
 24420 ;;		i1_mssp1_setIRQ
 24421 ;;		i1_returnReset
 24422 ;;		i1_returnStop
 24423 ;; This function is called by:
 24424 ;; This function uses a non-reentrant model
 24425 ;;
 24426                           
 24427                           
 24428                           ;psect for function i1_do_I2C_TX_EMPTY
 24429  13CC                     i1_do_I2C_TX_EMPTY:	
 24430  13CC                     i1l8298:	
 24431                           ;incstack = 0
 24432                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24433                           
 24434                           
 24435                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 24436  13CC  0022               	movlb	2	; select bank2
 24437  13CD  1520               	bsf	_i2c_status^(0+256),2
 24438                           
 24439                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 24440  13CE  2BD9               	goto	i1l8316
 24441  13CF                     i1l8300:	
 24442                           ;i2c_master.c: 386: {
 24443                           ;i2c_master.c: 387: case i2c_restart_read:
 24444                           
 24445                           
 24446                           ;i2c_master.c: 388: case i2c_restart_write:
 24447                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 24448  13CF  31A2  2220         	fcall	i1_do_I2C_SEND_RESTART
 24449  13D1  0008               	return
 24450  13D2                     i1l8304:	
 24451                           ;i2c_master.c: 390: case i2c_continue:
 24452                           
 24453                           
 24454                           ;i2c_master.c: 391: mssp1_setIRQ();
 24455  13D2  31A1  21EF         	fcall	i1_mssp1_setIRQ
 24456                           
 24457                           ;i2c_master.c: 392: return I2C_TX;
 24458  13D4  3003               	movlw	3
 24459  13D5  0008               	return
 24460  13D6                     i1l8310:	
 24461                           ;i2c_master.c: 394: case i2c_stop:
 24462                           
 24463                           ;i2c_master.c: 393: default:
 24464                           
 24465                           
 24466                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 24467  13D6  31A2  2224         	fcall	i1_do_I2C_SEND_STOP
 24468                           
 24469                           ;i2c_master.c: 396: }
 24470  13D8  0008               	return
 24471  13D9                     i1l8316:	
 24472  13D9  0022               	movlb	2	; select bank2
 24473  13DA  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 24474  13DB  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 24475  13DC  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 24476  13DD  00F0               	movwf	i1returnReset@p
 24477  13DE  300C               	movlw	12
 24478  13DF  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 24479  13E0  0086               	movwf	6
 24480  13E1  3001               	movlw	1	; select bank2/3
 24481  13E2  0087               	movwf	7
 24482  13E3  3F41               	moviw [1]fsr1
 24483  13E4  008A               	movwf	10
 24484  13E5  3F40               	moviw [0]fsr1
 24485  13E6  000A               	callw
 24486  13E7  3193               	pagesel	$
 24487                           
 24488                           ; Switch size 1, requested type "space"
 24489                           ; Number of cases is 4, Range of values is 1 to 4
 24490                           ; switch strategies available:
 24491                           ; Name         Instructions Cycles
 24492                           ; simple_byte           13     7 (average)
 24493                           ; direct_byte           17     9 (fixed)
 24494                           ; jumptable            263     9 (fixed)
 24495                           ;	Chosen strategy is simple_byte
 24496  13E8  3A01               	xorlw	1	; case 1
 24497  13E9  1903               	skipnz
 24498  13EA  2BD6               	goto	i1l8310
 24499  13EB  3A03               	xorlw	3	; case 2
 24500  13EC  1903               	skipnz
 24501  13ED  2BCF               	goto	i1l8300
 24502  13EE  3A01               	xorlw	1	; case 3
 24503  13EF  1903               	skipnz
 24504  13F0  2BCF               	goto	i1l8300
 24505  13F1  3A07               	xorlw	7	; case 4
 24506  13F2  1903               	skipnz
 24507  13F3  2BD2               	goto	i1l8304
 24508  13F4  2BD6               	goto	i1l8310
 24509  13F5  0008               	return
 24510  13F6                     __end_ofi1_do_I2C_TX_EMPTY:	
 24511                           
 24512                           	psect	text138
 24513  21EF                     __ptext138:	
 24514 ;; *************** function i1_mssp1_setIRQ *****************
 24515 ;; Defined at:
 24516 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 24517 ;; Parameters:    Size  Location     Type
 24518 ;;		None
 24519 ;; Auto vars:     Size  Location     Type
 24520 ;;		None
 24521 ;; Return value:  Size  Location     Type
 24522 ;;                  1    wreg      void 
 24523 ;; Registers used:
 24524 ;;		None
 24525 ;; Tracked objects:
 24526 ;;		On entry : 0/0
 24527 ;;		On exit  : 0/0
 24528 ;;		Unchanged: 0/0
 24529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24534 ;;Total ram usage:        0 bytes
 24535 ;; Hardware stack levels used:    1
 24536 ;; This function calls:
 24537 ;;		Nothing
 24538 ;; This function is called by:
 24539 ;;		i1_do_I2C_TX_EMPTY
 24540 ;; This function uses a non-reentrant model
 24541 ;;
 24542                           
 24543                           
 24544                           ;psect for function i1_mssp1_setIRQ
 24545  21EF                     i1_mssp1_setIRQ:	
 24546                           
 24547                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 24548                           
 24549                           ;incstack = 0
 24550                           ; Regs used in i1_mssp1_setIRQ: []
 24551  21EF  0020               	movlb	0	; select bank0
 24552  21F0  1591               	bsf	17,3	;volatile
 24553  21F1  0008               	return
 24554  21F2                     __end_ofi1_mssp1_setIRQ:	
 24555                           
 24556                           	psect	text139
 24557  236D                     __ptext139:	
 24558 ;; *************** function i1_i2c1_driver_isNACK *****************
 24559 ;; Defined at:
 24560 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 24561 ;; Parameters:    Size  Location     Type
 24562 ;;		None
 24563 ;; Auto vars:     Size  Location     Type
 24564 ;;		None
 24565 ;; Return value:  Size  Location     Type
 24566 ;;		None               void
 24567 ;; Registers used:
 24568 ;;		wreg, status,2, status,0
 24569 ;; Tracked objects:
 24570 ;;		On entry : 0/0
 24571 ;;		On exit  : 0/0
 24572 ;;		Unchanged: 0/0
 24573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24576 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24578 ;;Total ram usage:        1 bytes
 24579 ;; Hardware stack levels used:    1
 24580 ;; This function calls:
 24581 ;;		Nothing
 24582 ;; This function is called by:
 24583 ;;		i1_do_I2C_TX
 24584 ;;		i1_i2c_ISR
 24585 ;; This function uses a non-reentrant model
 24586 ;;
 24587                           
 24588                           
 24589                           ;psect for function i1_i2c1_driver_isNACK
 24590  236D                     i1_i2c1_driver_isNACK:	
 24591                           
 24592                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 24593                           
 24594                           ;incstack = 0
 24595                           ; Regs used in i1_i2c1_driver_isNACK: [wreg+status,2+status,0]
 24596  236D  0024               	movlb	4	; select bank4
 24597  236E  0816               	movf	22,w	;volatile
 24598  236F  39BF               	andlw	-65
 24599  2370  3840               	iorlw	64
 24600  2371  0096               	movwf	22	;volatile
 24601  2372  0E16               	swapf	22,w	;volatile
 24602  2373  0C89               	rrf	9,f
 24603  2374  0C89               	rrf	9,f
 24604  2375  3901               	andlw	1
 24605  2376  00F0               	movwf	??i1_i2c1_driver_isNACK
 24606  2377  0C70               	rrf	??i1_i2c1_driver_isNACK,w
 24607  2378  0008               	return
 24608  2379                     __end_ofi1_i2c1_driver_isNACK:	
 24609                           
 24610                           	psect	text140
 24611  224E                     __ptext140:	
 24612 ;; *************** function i1_i2c1_driver_TXData *****************
 24613 ;; Defined at:
 24614 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 24615 ;; Parameters:    Size  Location     Type
 24616 ;;  d               1    wreg     unsigned char 
 24617 ;; Auto vars:     Size  Location     Type
 24618 ;;  d               1    0[COMMON] unsigned char 
 24619 ;; Return value:  Size  Location     Type
 24620 ;;                  1    wreg      void 
 24621 ;; Registers used:
 24622 ;;		wreg
 24623 ;; Tracked objects:
 24624 ;;		On entry : 0/0
 24625 ;;		On exit  : 0/0
 24626 ;;		Unchanged: 0/0
 24627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24631 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24632 ;;Total ram usage:        1 bytes
 24633 ;; Hardware stack levels used:    1
 24634 ;; This function calls:
 24635 ;;		Nothing
 24636 ;; This function is called by:
 24637 ;;		i1_do_I2C_SEND_ADR_READ
 24638 ;;		i1_do_I2C_SEND_ADR_WRITE
 24639 ;;		i1_do_I2C_TX
 24640 ;; This function uses a non-reentrant model
 24641 ;;
 24642                           
 24643                           
 24644                           ;psect for function i1_i2c1_driver_TXData
 24645  224E                     i1_i2c1_driver_TXData:	
 24646                           
 24647                           ;incstack = 0
 24648                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 24649                           ;i1i2c1_driver_TXData@d stored from wreg
 24650  224E  00F0               	movwf	i1i2c1_driver_TXData@d
 24651                           
 24652                           ;i2c1_driver.c: 188: SSP1BUF = d;
 24653  224F  0870               	movf	i1i2c1_driver_TXData@d,w
 24654  2250  0024               	movlb	4	; select bank4
 24655  2251  0091               	movwf	17	;volatile
 24656  2252  0008               	return
 24657  2253                     __end_ofi1_i2c1_driver_TXData:	
 24658                           
 24659                           	psect	text141
 24660  21EC                     __ptext141:	
 24661 ;; *************** function i1_i2c1_driver_getRXData *****************
 24662 ;; Defined at:
 24663 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 24664 ;; Parameters:    Size  Location     Type
 24665 ;;		None
 24666 ;; Auto vars:     Size  Location     Type
 24667 ;;		None
 24668 ;; Return value:  Size  Location     Type
 24669 ;;                  1    wreg      unsigned char 
 24670 ;; Registers used:
 24671 ;;		wreg
 24672 ;; Tracked objects:
 24673 ;;		On entry : 0/0
 24674 ;;		On exit  : 0/0
 24675 ;;		Unchanged: 0/0
 24676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24681 ;;Total ram usage:        0 bytes
 24682 ;; Hardware stack levels used:    1
 24683 ;; This function calls:
 24684 ;;		Nothing
 24685 ;; This function is called by:
 24686 ;;		i1_do_I2C_RX
 24687 ;; This function uses a non-reentrant model
 24688 ;;
 24689                           
 24690                           
 24691                           ;psect for function i1_i2c1_driver_getRXData
 24692  21EC                     i1_i2c1_driver_getRXData:	
 24693                           
 24694                           ;i2c1_driver.c: 173: return SSP1BUF;
 24695                           
 24696                           ;incstack = 0
 24697                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 24698  21EC  0024               	movlb	4	; select bank4
 24699  21ED  0811               	movf	17,w	;volatile
 24700  21EE  0008               	return
 24701  21EF                     __end_ofi1_i2c1_driver_getRXData:	
 24702                           
 24703                           	psect	text142
 24704  2214                     __ptext142:	
 24705 ;; *************** function i1_i2c1_driver_sendNACK *****************
 24706 ;; Defined at:
 24707 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 24708 ;; Parameters:    Size  Location     Type
 24709 ;;		None
 24710 ;; Auto vars:     Size  Location     Type
 24711 ;;		None
 24712 ;; Return value:  Size  Location     Type
 24713 ;;                  1    wreg      void 
 24714 ;; Registers used:
 24715 ;;		None
 24716 ;; Tracked objects:
 24717 ;;		On entry : 0/0
 24718 ;;		On exit  : 0/0
 24719 ;;		Unchanged: 0/0
 24720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24725 ;;Total ram usage:        0 bytes
 24726 ;; Hardware stack levels used:    1
 24727 ;; This function calls:
 24728 ;;		Nothing
 24729 ;; This function is called by:
 24730 ;;		i1_do_I2C_DO_NACK_STOP
 24731 ;;		i1_do_I2C_DO_NACK_RESTART
 24732 ;; This function uses a non-reentrant model
 24733 ;;
 24734                           
 24735                           
 24736                           ;psect for function i1_i2c1_driver_sendNACK
 24737  2214                     i1_i2c1_driver_sendNACK:	
 24738                           
 24739                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 24740                           
 24741                           ;incstack = 0
 24742                           ; Regs used in i1_i2c1_driver_sendNACK: []
 24743  2214  0024               	movlb	4	; select bank4
 24744  2215  1696               	bsf	22,5	;volatile
 24745                           
 24746                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 24747  2216  1616               	bsf	22,4	;volatile
 24748  2217  0008               	return
 24749  2218                     __end_ofi1_i2c1_driver_sendNACK:	
 24750                           
 24751                           	psect	text143
 24752  21D1                     __ptext143:	
 24753 ;; *************** function i1_i2c1_driver_resetBus *****************
 24754 ;; Defined at:
 24755 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 24756 ;; Parameters:    Size  Location     Type
 24757 ;;		None
 24758 ;; Auto vars:     Size  Location     Type
 24759 ;;		None
 24760 ;; Return value:  Size  Location     Type
 24761 ;;                  1    wreg      void 
 24762 ;; Registers used:
 24763 ;;		None
 24764 ;; Tracked objects:
 24765 ;;		On entry : 0/0
 24766 ;;		On exit  : 0/0
 24767 ;;		Unchanged: 0/0
 24768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24773 ;;Total ram usage:        0 bytes
 24774 ;; Hardware stack levels used:    1
 24775 ;; This function calls:
 24776 ;;		Nothing
 24777 ;; This function is called by:
 24778 ;;		i1_do_I2C_RESET
 24779 ;; This function uses a non-reentrant model
 24780 ;;
 24781                           
 24782                           
 24783                           ;psect for function i1_i2c1_driver_resetBus
 24784  21D1                     i1_i2c1_driver_resetBus:	
 24785                           
 24786                           ;incstack = 0
 24787                           ; Regs used in i1_i2c1_driver_resetBus: []
 24788  21D1  0008               	return
 24789  21D2                     __end_ofi1_i2c1_driver_resetBus:	
 24790                           
 24791                           	psect	text144
 24792  21E9                     __ptext144:	
 24793 ;; *************** function i1_i2c1_driver_startRX *****************
 24794 ;; Defined at:
 24795 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 24796 ;; Parameters:    Size  Location     Type
 24797 ;;		None
 24798 ;; Auto vars:     Size  Location     Type
 24799 ;;		None
 24800 ;; Return value:  Size  Location     Type
 24801 ;;                  1    wreg      void 
 24802 ;; Registers used:
 24803 ;;		None
 24804 ;; Tracked objects:
 24805 ;;		On entry : 0/0
 24806 ;;		On exit  : 0/0
 24807 ;;		Unchanged: 0/0
 24808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24813 ;;Total ram usage:        0 bytes
 24814 ;; Hardware stack levels used:    1
 24815 ;; This function calls:
 24816 ;;		Nothing
 24817 ;; This function is called by:
 24818 ;;		i1_do_I2C_RCEN
 24819 ;; This function uses a non-reentrant model
 24820 ;;
 24821                           
 24822                           
 24823                           ;psect for function i1_i2c1_driver_startRX
 24824  21E9                     i1_i2c1_driver_startRX:	
 24825                           
 24826                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 24827                           
 24828                           ;incstack = 0
 24829                           ; Regs used in i1_i2c1_driver_startRX: []
 24830  21E9  0024               	movlb	4	; select bank4
 24831  21EA  1596               	bsf	22,3	;volatile
 24832  21EB  0008               	return
 24833  21EC                     __end_ofi1_i2c1_driver_startRX:	
 24834                           
 24835                           	psect	text145
 24836  21D5                     __ptext145:	
 24837 ;; *************** function i1_returnReset *****************
 24838 ;; Defined at:
 24839 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 24840 ;; Parameters:    Size  Location     Type
 24841 ;;  p               1    0[COMMON] PTR void 
 24842 ;;		 -> NULL(0), 
 24843 ;; Auto vars:     Size  Location     Type
 24844 ;;		None
 24845 ;; Return value:  Size  Location     Type
 24846 ;;                  1    wreg      enum E8198
 24847 ;; Registers used:
 24848 ;;		wreg
 24849 ;; Tracked objects:
 24850 ;;		On entry : 0/0
 24851 ;;		On exit  : 0/0
 24852 ;;		Unchanged: 0/0
 24853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24854 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24858 ;;Total ram usage:        1 bytes
 24859 ;; Hardware stack levels used:    1
 24860 ;; This function calls:
 24861 ;;		Nothing
 24862 ;; This function is called by:
 24863 ;; This function uses a non-reentrant model
 24864 ;;
 24865                           
 24866                           
 24867                           ;psect for function i1_returnReset
 24868  21D5                     i1_returnReset:	
 24869  21D5                     i1l7870:	
 24870                           ;incstack = 0
 24871                           ; Regs used in i1_returnReset: [wreg]
 24872                           
 24873                           
 24874                           ;i2c_master.c: 450: return i2c_reset_link;
 24875  21D5  3005               	movlw	5
 24876  21D6  0008               	return
 24877  21D7                     __end_ofi1_returnReset:	
 24878                           
 24879                           	psect	text146
 24880  21D3                     __ptext146:	
 24881 ;; *************** function i1_returnStop *****************
 24882 ;; Defined at:
 24883 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 24884 ;; Parameters:    Size  Location     Type
 24885 ;;  p               1    0[COMMON] PTR void 
 24886 ;;		 -> NULL(0), 
 24887 ;; Auto vars:     Size  Location     Type
 24888 ;;		None
 24889 ;; Return value:  Size  Location     Type
 24890 ;;                  1    wreg      enum E8198
 24891 ;; Registers used:
 24892 ;;		wreg
 24893 ;; Tracked objects:
 24894 ;;		On entry : 0/0
 24895 ;;		On exit  : 0/0
 24896 ;;		Unchanged: 0/0
 24897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24898 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24902 ;;Total ram usage:        1 bytes
 24903 ;; Hardware stack levels used:    1
 24904 ;; This function calls:
 24905 ;;		Nothing
 24906 ;; This function is called by:
 24907 ;; This function uses a non-reentrant model
 24908 ;;
 24909                           
 24910                           
 24911                           ;psect for function i1_returnStop
 24912  21D3                     i1_returnStop:	
 24913  21D3                     i1l7866:	
 24914                           ;incstack = 0
 24915                           ; Regs used in i1_returnStop: [wreg]
 24916                           
 24917                           
 24918                           ;i2c_master.c: 445: return i2c_stop;
 24919  21D3  3001               	movlw	1
 24920  21D4  0008               	return
 24921  21D5                     __end_ofi1_returnStop:	
 24922                           
 24923                           	psect	text147
 24924  21E6                     __ptext147:	
 24925 ;; *************** function i1_i2c1_driver_stop *****************
 24926 ;; Defined at:
 24927 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 24928 ;; Parameters:    Size  Location     Type
 24929 ;;		None
 24930 ;; Auto vars:     Size  Location     Type
 24931 ;;		None
 24932 ;; Return value:  Size  Location     Type
 24933 ;;                  1    wreg      void 
 24934 ;; Registers used:
 24935 ;;		None
 24936 ;; Tracked objects:
 24937 ;;		On entry : 0/0
 24938 ;;		On exit  : 0/0
 24939 ;;		Unchanged: 0/0
 24940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24945 ;;Total ram usage:        0 bytes
 24946 ;; Hardware stack levels used:    1
 24947 ;; This function calls:
 24948 ;;		Nothing
 24949 ;; This function is called by:
 24950 ;;		i1_do_I2C_SEND_STOP
 24951 ;; This function uses a non-reentrant model
 24952 ;;
 24953                           
 24954                           
 24955                           ;psect for function i1_i2c1_driver_stop
 24956  21E6                     i1_i2c1_driver_stop:	
 24957                           
 24958                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 24959                           
 24960                           ;incstack = 0
 24961                           ; Regs used in i1_i2c1_driver_stop: []
 24962  21E6  0024               	movlb	4	; select bank4
 24963  21E7  1516               	bsf	22,2	;volatile
 24964  21E8  0008               	return
 24965  21E9                     __end_ofi1_i2c1_driver_stop:	
 24966                           
 24967                           	psect	text148
 24968  21E3                     __ptext148:	
 24969 ;; *************** function i1_i2c1_driver_restart *****************
 24970 ;; Defined at:
 24971 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 24972 ;; Parameters:    Size  Location     Type
 24973 ;;		None
 24974 ;; Auto vars:     Size  Location     Type
 24975 ;;		None
 24976 ;; Return value:  Size  Location     Type
 24977 ;;                  1    wreg      void 
 24978 ;; Registers used:
 24979 ;;		None
 24980 ;; Tracked objects:
 24981 ;;		On entry : 0/0
 24982 ;;		On exit  : 0/0
 24983 ;;		Unchanged: 0/0
 24984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24989 ;;Total ram usage:        0 bytes
 24990 ;; Hardware stack levels used:    1
 24991 ;; This function calls:
 24992 ;;		Nothing
 24993 ;; This function is called by:
 24994 ;;		i1_do_I2C_SEND_RESTART_READ
 24995 ;;		i1_do_I2C_SEND_RESTART_WRITE
 24996 ;;		i1_do_I2C_SEND_RESTART
 24997 ;; This function uses a non-reentrant model
 24998 ;;
 24999                           
 25000                           
 25001                           ;psect for function i1_i2c1_driver_restart
 25002  21E3                     i1_i2c1_driver_restart:	
 25003                           
 25004                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 25005                           
 25006                           ;incstack = 0
 25007                           ; Regs used in i1_i2c1_driver_restart: []
 25008  21E3  0024               	movlb	4	; select bank4
 25009  21E4  1496               	bsf	22,1	;volatile
 25010  21E5  0008               	return
 25011  21E6                     __end_ofi1_i2c1_driver_restart:	
 25012                           
 25013                           	psect	text149
 25014  2210                     __ptext149:	
 25015 ;; *************** function i1_i2c1_driver_sendACK *****************
 25016 ;; Defined at:
 25017 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 25018 ;; Parameters:    Size  Location     Type
 25019 ;;		None
 25020 ;; Auto vars:     Size  Location     Type
 25021 ;;		None
 25022 ;; Return value:  Size  Location     Type
 25023 ;;                  1    wreg      void 
 25024 ;; Registers used:
 25025 ;;		None
 25026 ;; Tracked objects:
 25027 ;;		On entry : 0/0
 25028 ;;		On exit  : 0/0
 25029 ;;		Unchanged: 0/0
 25030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25035 ;;Total ram usage:        0 bytes
 25036 ;; Hardware stack levels used:    1
 25037 ;; This function calls:
 25038 ;;		Nothing
 25039 ;; This function is called by:
 25040 ;;		i1_do_I2C_DO_ACK
 25041 ;;		i1_do_I2C_RX
 25042 ;; This function uses a non-reentrant model
 25043 ;;
 25044                           
 25045                           
 25046                           ;psect for function i1_i2c1_driver_sendACK
 25047  2210                     i1_i2c1_driver_sendACK:	
 25048                           
 25049                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 25050                           
 25051                           ;incstack = 0
 25052                           ; Regs used in i1_i2c1_driver_sendACK: []
 25053  2210  0024               	movlb	4	; select bank4
 25054  2211  1296               	bcf	22,5	;volatile
 25055                           
 25056                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 25057  2212  1616               	bsf	22,4	;volatile
 25058  2213  0008               	return
 25059  2214                     __end_ofi1_i2c1_driver_sendACK:	
 25060                           
 25061                           	psect	text150
 25062  21E0                     __ptext150:	
 25063 ;; *************** function _i2c_busCollisionISR *****************
 25064 ;; Defined at:
 25065 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 25066 ;; Parameters:    Size  Location     Type
 25067 ;;		None
 25068 ;; Auto vars:     Size  Location     Type
 25069 ;;		None
 25070 ;; Return value:  Size  Location     Type
 25071 ;;                  1    wreg      void 
 25072 ;; Registers used:
 25073 ;;		status,2, status,0, pclath, cstack
 25074 ;; Tracked objects:
 25075 ;;		On entry : 0/0
 25076 ;;		On exit  : 0/0
 25077 ;;		Unchanged: 0/0
 25078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25083 ;;Total ram usage:        0 bytes
 25084 ;; Hardware stack levels used:    1
 25085 ;; Hardware stack levels required when called:    1
 25086 ;; This function calls:
 25087 ;;		_i2c1_driver_clearBusCollision
 25088 ;; This function is called by:
 25089 ;;		_i2c_open
 25090 ;;		_INTERRUPT_InterruptManager
 25091 ;; This function uses a non-reentrant model
 25092 ;;
 25093                           
 25094                           
 25095                           ;psect for function _i2c_busCollisionISR
 25096  21E0                     _i2c_busCollisionISR:	
 25097                           
 25098                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 25099                           
 25100                           ;incstack = 0
 25101                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 25102  21E0  31A1  21DD         	fcall	_i2c1_driver_clearBusCollision
 25103  21E2  0008               	return
 25104  21E3                     __end_of_i2c_busCollisionISR:	
 25105                           
 25106                           	psect	text151
 25107  21DD                     __ptext151:	
 25108 ;; *************** function _i2c1_driver_clearBusCollision *****************
 25109 ;; Defined at:
 25110 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 25111 ;; Parameters:    Size  Location     Type
 25112 ;;		None
 25113 ;; Auto vars:     Size  Location     Type
 25114 ;;		None
 25115 ;; Return value:  Size  Location     Type
 25116 ;;                  1    wreg      void 
 25117 ;; Registers used:
 25118 ;;		None
 25119 ;; Tracked objects:
 25120 ;;		On entry : 0/0
 25121 ;;		On exit  : 0/0
 25122 ;;		Unchanged: 0/0
 25123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25128 ;;Total ram usage:        0 bytes
 25129 ;; Hardware stack levels used:    1
 25130 ;; This function calls:
 25131 ;;		Nothing
 25132 ;; This function is called by:
 25133 ;;		_i2c_busCollisionISR
 25134 ;; This function uses a non-reentrant model
 25135 ;;
 25136                           
 25137                           
 25138                           ;psect for function _i2c1_driver_clearBusCollision
 25139  21DD                     _i2c1_driver_clearBusCollision:	
 25140                           
 25141                           ;i2c1_driver.c: 255: PIR1bits.BCL1IF = 0;
 25142                           
 25143                           ;incstack = 0
 25144                           ; Regs used in _i2c1_driver_clearBusCollision: []
 25145  21DD  0020               	movlb	0	; select bank0
 25146  21DE  1111               	bcf	17,2	;volatile
 25147  21DF  0008               	return
 25148  21E0                     __end_of_i2c1_driver_clearBusCollision:	
 25149                           
 25150                           	psect	text152
 25151  23AA                     __ptext152:	
 25152 ;; *************** function _TMR2_ISR *****************
 25153 ;; Defined at:
 25154 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 25155 ;; Parameters:    Size  Location     Type
 25156 ;;		None
 25157 ;; Auto vars:     Size  Location     Type
 25158 ;;		None
 25159 ;; Return value:  Size  Location     Type
 25160 ;;                  1    wreg      void 
 25161 ;; Registers used:
 25162 ;;		wreg, status,2, status,0, pclath, cstack
 25163 ;; Tracked objects:
 25164 ;;		On entry : 0/0
 25165 ;;		On exit  : 0/0
 25166 ;;		Unchanged: 0/0
 25167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25172 ;;Total ram usage:        0 bytes
 25173 ;; Hardware stack levels used:    1
 25174 ;; Hardware stack levels required when called:    2
 25175 ;; This function calls:
 25176 ;;		Absolute function
 25177 ;;		_TMR2_DefaultInterruptHandler
 25178 ;; This function is called by:
 25179 ;;		_INTERRUPT_InterruptManager
 25180 ;; This function uses a non-reentrant model
 25181 ;;
 25182                           
 25183                           
 25184                           ;psect for function _TMR2_ISR
 25185  23AA                     _TMR2_ISR:	
 25186                           
 25187                           ;tmr2.c: 121: PIR1bits.TMR2IF = 0;
 25188                           
 25189                           ;incstack = 0
 25190                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 25191  23AA  0020               	movlb	0	; select bank0
 25192  23AB  1091               	bcf	17,1	;volatile
 25193                           
 25194                           ;tmr2.c: 123: if(TMR2_InterruptHandler)
 25195  23AC  0023               	movlb	3	; select bank3
 25196  23AD  0859               	movf	_TMR2_InterruptHandler^(0+384),w
 25197  23AE  045A               	iorwf	(_TMR2_InterruptHandler+1)^(0+384),w
 25198  23AF  1903               	btfsc	3,2
 25199  23B0  0008               	return
 25200                           
 25201                           ;tmr2.c: 124: {
 25202                           ;tmr2.c: 125: TMR2_InterruptHandler();
 25203  23B1  085A               	movf	(_TMR2_InterruptHandler+1)^(0+384),w
 25204  23B2  008A               	movwf	10
 25205  23B3  0859               	movf	_TMR2_InterruptHandler^(0+384),w
 25206  23B4  000A               	callw
 25207  23B5  31A3               	pagesel	$
 25208  23B6  0008               	return
 25209  23B7                     __end_of_TMR2_ISR:	
 25210                           
 25211                           	psect	text153
 25212  22E4                     __ptext153:	
 25213 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 25214 ;; Defined at:
 25215 ;;		line 134 in file "mcc_generated_files/tmr2.c"
 25216 ;; Parameters:    Size  Location     Type
 25217 ;;		None
 25218 ;; Auto vars:     Size  Location     Type
 25219 ;;		None
 25220 ;; Return value:  Size  Location     Type
 25221 ;;                  1    wreg      void 
 25222 ;; Registers used:
 25223 ;;		wreg, status,2, status,0, pclath, cstack
 25224 ;; Tracked objects:
 25225 ;;		On entry : 0/0
 25226 ;;		On exit  : 0/0
 25227 ;;		Unchanged: 0/0
 25228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25233 ;;Total ram usage:        0 bytes
 25234 ;; Hardware stack levels used:    1
 25235 ;; Hardware stack levels required when called:    1
 25236 ;; This function calls:
 25237 ;;		_TMR2_StopTimer
 25238 ;;		_TMR2_WriteTimer
 25239 ;; This function is called by:
 25240 ;;		_TMR2_Initialize
 25241 ;;		_TMR2_ISR
 25242 ;; This function uses a non-reentrant model
 25243 ;;
 25244                           
 25245                           
 25246                           ;psect for function _TMR2_DefaultInterruptHandler
 25247  22E4                     _TMR2_DefaultInterruptHandler:	
 25248                           
 25249                           ;incstack = 0
 25250                           ; Regs used in _TMR2_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 25251                           ;tmr2.c: 138: do { LATCbits.LATC1 = 1; } while(0);
 25252  22E4  0022               	movlb	2	; select bank2
 25253  22E5  148E               	bsf	14,1	;volatile
 25254                           
 25255                           ;tmr2.c: 141: TMR2_StopTimer();
 25256  22E6  31A1  21DA  31A2   	fcall	_TMR2_StopTimer
 25257                           
 25258                           ;tmr2.c: 142: TMR2_WriteTimer(0);
 25259  22E9  3000               	movlw	0
 25260  22EA  31A2  2249         	fcall	_TMR2_WriteTimer
 25261  22EC  0008               	return
 25262  22ED                     __end_of_TMR2_DefaultInterruptHandler:	
 25263                           
 25264                           	psect	text154
 25265  2249                     __ptext154:	
 25266 ;; *************** function _TMR2_WriteTimer *****************
 25267 ;; Defined at:
 25268 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 25269 ;; Parameters:    Size  Location     Type
 25270 ;;  timerVal        1    wreg     unsigned char 
 25271 ;; Auto vars:     Size  Location     Type
 25272 ;;  timerVal        1    0[COMMON] unsigned char 
 25273 ;; Return value:  Size  Location     Type
 25274 ;;                  1    wreg      void 
 25275 ;; Registers used:
 25276 ;;		wreg
 25277 ;; Tracked objects:
 25278 ;;		On entry : 0/0
 25279 ;;		On exit  : 0/0
 25280 ;;		Unchanged: 0/0
 25281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25286 ;;Total ram usage:        1 bytes
 25287 ;; Hardware stack levels used:    1
 25288 ;; This function calls:
 25289 ;;		Nothing
 25290 ;; This function is called by:
 25291 ;;		_TMR2_DefaultInterruptHandler
 25292 ;; This function uses a non-reentrant model
 25293 ;;
 25294                           
 25295                           
 25296                           ;psect for function _TMR2_WriteTimer
 25297  2249                     _TMR2_WriteTimer:	
 25298                           
 25299                           ;incstack = 0
 25300                           ; Regs used in _TMR2_WriteTimer: [wreg]
 25301                           ;TMR2_WriteTimer@timerVal stored from wreg
 25302  2249  00F0               	movwf	TMR2_WriteTimer@timerVal
 25303                           
 25304                           ;tmr2.c: 109: TMR2 = timerVal;
 25305  224A  0870               	movf	TMR2_WriteTimer@timerVal,w
 25306  224B  0020               	movlb	0	; select bank0
 25307  224C  009D               	movwf	29	;volatile
 25308  224D  0008               	return
 25309  224E                     __end_of_TMR2_WriteTimer:	
 25310                           
 25311                           	psect	text155
 25312  21DA                     __ptext155:	
 25313 ;; *************** function _TMR2_StopTimer *****************
 25314 ;; Defined at:
 25315 ;;		line 91 in file "mcc_generated_files/tmr2.c"
 25316 ;; Parameters:    Size  Location     Type
 25317 ;;		None
 25318 ;; Auto vars:     Size  Location     Type
 25319 ;;		None
 25320 ;; Return value:  Size  Location     Type
 25321 ;;                  1    wreg      void 
 25322 ;; Registers used:
 25323 ;;		None
 25324 ;; Tracked objects:
 25325 ;;		On entry : 0/0
 25326 ;;		On exit  : 0/0
 25327 ;;		Unchanged: 0/0
 25328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25333 ;;Total ram usage:        0 bytes
 25334 ;; Hardware stack levels used:    1
 25335 ;; This function calls:
 25336 ;;		Nothing
 25337 ;; This function is called by:
 25338 ;;		_TMR2_DefaultInterruptHandler
 25339 ;; This function uses a non-reentrant model
 25340 ;;
 25341                           
 25342                           
 25343                           ;psect for function _TMR2_StopTimer
 25344  21DA                     _TMR2_StopTimer:	
 25345                           
 25346                           ;tmr2.c: 94: T2CONbits.TMR2ON = 0;
 25347                           
 25348                           ;incstack = 0
 25349                           ; Regs used in _TMR2_StopTimer: []
 25350  21DA  0020               	movlb	0	; select bank0
 25351  21DB  111F               	bcf	31,2	;volatile
 25352  21DC  0008               	return
 25353  21DD                     __end_of_TMR2_StopTimer:	
 25354                           
 25355                           	psect	text156
 25356  239D                     __ptext156:	
 25357 ;; *************** function _TMR0_ISR *****************
 25358 ;; Defined at:
 25359 ;;		line 119 in file "mcc_generated_files/tmr0.c"
 25360 ;; Parameters:    Size  Location     Type
 25361 ;;		None
 25362 ;; Auto vars:     Size  Location     Type
 25363 ;;		None
 25364 ;; Return value:  Size  Location     Type
 25365 ;;                  1    wreg      void 
 25366 ;; Registers used:
 25367 ;;		wreg, status,2, status,0, pclath, cstack
 25368 ;; Tracked objects:
 25369 ;;		On entry : 0/0
 25370 ;;		On exit  : 0/0
 25371 ;;		Unchanged: 0/0
 25372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25377 ;;Total ram usage:        0 bytes
 25378 ;; Hardware stack levels used:    1
 25379 ;; Hardware stack levels required when called:    4
 25380 ;; This function calls:
 25381 ;;		Absolute function
 25382 ;;		_TMR0_DefaultInterruptHandler
 25383 ;; This function is called by:
 25384 ;;		_INTERRUPT_InterruptManager
 25385 ;; This function uses a non-reentrant model
 25386 ;;
 25387                           
 25388                           
 25389                           ;psect for function _TMR0_ISR
 25390  239D                     _TMR0_ISR:	
 25391                           
 25392                           ;tmr0.c: 122: PIR0bits.TMR0IF = 0;
 25393                           
 25394                           ;incstack = 0
 25395 ;; hardware stack exceeded
 25396                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 25397  239D  0020               	movlb	0	; select bank0
 25398  239E  1290               	bcf	16,5	;volatile
 25399                           
 25400                           ;tmr0.c: 123: if(TMR0_InterruptHandler)
 25401  239F  0022               	movlb	2	; select bank2
 25402  23A0  086C               	movf	_TMR0_InterruptHandler^(0+256),w
 25403  23A1  046D               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 25404  23A2  1903               	btfsc	3,2
 25405  23A3  0008               	return
 25406                           
 25407                           ;tmr0.c: 124: {
 25408                           ;tmr0.c: 125: TMR0_InterruptHandler();
 25409  23A4  086D               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 25410  23A5  008A               	movwf	10
 25411  23A6  086C               	movf	_TMR0_InterruptHandler^(0+256),w
 25412  23A7  000A               	callw
 25413  23A8  31A3               	pagesel	$
 25414  23A9  0008               	return
 25415  23AA                     __end_of_TMR0_ISR:	
 25416                           
 25417                           	psect	text157
 25418  18A2                     __ptext157:	
 25419 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 25420 ;; Defined at:
 25421 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 25422 ;; Parameters:    Size  Location     Type
 25423 ;;		None
 25424 ;; Auto vars:     Size  Location     Type
 25425 ;;		None
 25426 ;; Return value:  Size  Location     Type
 25427 ;;                  1    wreg      void 
 25428 ;; Registers used:
 25429 ;;		wreg, status,2, status,0, pclath, cstack
 25430 ;; Tracked objects:
 25431 ;;		On entry : 0/0
 25432 ;;		On exit  : 0/0
 25433 ;;		Unchanged: 0/0
 25434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25439 ;;Total ram usage:        0 bytes
 25440 ;; Hardware stack levels used:    1
 25441 ;; Hardware stack levels required when called:    3
 25442 ;; This function calls:
 25443 ;;		_TMR0_StopTimer
 25444 ;;		_TMR0_Write8bitTimer
 25445 ;;		i1_LEDsOn
 25446 ;; This function is called by:
 25447 ;;		_TMR0_Initialize
 25448 ;;		_TMR0_ISR
 25449 ;; This function uses a non-reentrant model
 25450 ;;
 25451                           
 25452                           
 25453                           ;psect for function _TMR0_DefaultInterruptHandler
 25454  18A2                     _TMR0_DefaultInterruptHandler:	
 25455                           
 25456                           ;tmr0.c: 141: LEDsOn(second_top, 1);
 25457                           
 25458                           ;incstack = 0
 25459 ;; hardware stack exceeded
 25460                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 25461  18A2  0022               	movlb	2	; select bank2
 25462  18A3  0861               	movf	(_second_top+3)^(0+256),w
 25463  18A4  0020               	movlb	0	; select bank0
 25464  18A5  00AA               	movwf	i1LEDsOn@LEDpins+3
 25465  18A6  0022               	movlb	2	; select bank2
 25466  18A7  0860               	movf	(_second_top+2)^(0+256),w
 25467  18A8  0020               	movlb	0	; select bank0
 25468  18A9  00A9               	movwf	i1LEDsOn@LEDpins+2
 25469  18AA  0022               	movlb	2	; select bank2
 25470  18AB  085F               	movf	(_second_top+1)^(0+256),w
 25471  18AC  0020               	movlb	0	; select bank0
 25472  18AD  00A8               	movwf	i1LEDsOn@LEDpins+1
 25473  18AE  0022               	movlb	2	; select bank2
 25474  18AF  085E               	movf	_second_top^(0+256),w
 25475  18B0  0020               	movlb	0	; select bank0
 25476  18B1  00A7               	movwf	i1LEDsOn@LEDpins
 25477  18B2  3001               	movlw	1
 25478  18B3  00AB               	movwf	i1LEDsOn@topOrBottom
 25479  18B4  3000               	movlw	0
 25480  18B5  00AC               	movwf	i1LEDsOn@topOrBottom+1
 25481  18B6  31A5  25BB  3198   	fcall	i1_LEDsOn
 25482                           
 25483                           ;tmr0.c: 142: LEDsOn(second_bottom,2);
 25484  18B9  0022               	movlb	2	; select bank2
 25485  18BA  0855               	movf	(_second_bottom+3)^(0+256),w
 25486  18BB  0020               	movlb	0	; select bank0
 25487  18BC  00AA               	movwf	i1LEDsOn@LEDpins+3
 25488  18BD  0022               	movlb	2	; select bank2
 25489  18BE  0854               	movf	(_second_bottom+2)^(0+256),w
 25490  18BF  0020               	movlb	0	; select bank0
 25491  18C0  00A9               	movwf	i1LEDsOn@LEDpins+2
 25492  18C1  0022               	movlb	2	; select bank2
 25493  18C2  0853               	movf	(_second_bottom+1)^(0+256),w
 25494  18C3  0020               	movlb	0	; select bank0
 25495  18C4  00A8               	movwf	i1LEDsOn@LEDpins+1
 25496  18C5  0022               	movlb	2	; select bank2
 25497  18C6  0852               	movf	_second_bottom^(0+256),w
 25498  18C7  0020               	movlb	0	; select bank0
 25499  18C8  00A7               	movwf	i1LEDsOn@LEDpins
 25500  18C9  3002               	movlw	2
 25501  18CA  00AB               	movwf	i1LEDsOn@topOrBottom
 25502  18CB  3000               	movlw	0
 25503  18CC  00AC               	movwf	i1LEDsOn@topOrBottom+1
 25504  18CD  31A5  25BB  3198   	fcall	i1_LEDsOn
 25505                           
 25506                           ;tmr0.c: 144: do { LATCbits.LATC1 = 0; } while(0);
 25507  18D0  0022               	movlb	2	; select bank2
 25508  18D1  108E               	bcf	14,1	;volatile
 25509                           
 25510                           ;tmr0.c: 145: TMR0_StopTimer();
 25511  18D2  31A1  21D7  3198   	fcall	_TMR0_StopTimer
 25512                           
 25513                           ;tmr0.c: 146: TMR0_Write8bitTimer(0);
 25514  18D5  3000               	movlw	0
 25515  18D6  31A2  2244         	fcall	_TMR0_Write8bitTimer
 25516  18D8  0008               	return
 25517  18D9                     __end_of_TMR0_DefaultInterruptHandler:	
 25518                           
 25519                           	psect	text158
 25520  25BB                     __ptext158:	
 25521 ;; *************** function i1_LEDsOn *****************
 25522 ;; Defined at:
 25523 ;;		line 6 in file "LEDcomm.c"
 25524 ;; Parameters:    Size  Location     Type
 25525 ;;  LEDpins         4    7[BANK0 ] unsigned long 
 25526 ;;  topOrBottom     2   11[BANK0 ] int 
 25527 ;; Auto vars:     Size  Location     Type
 25528 ;;		None
 25529 ;; Return value:  Size  Location     Type
 25530 ;;                  1    wreg      void 
 25531 ;; Registers used:
 25532 ;;		wreg, status,2, status,0, pclath, cstack
 25533 ;; Tracked objects:
 25534 ;;		On entry : 0/0
 25535 ;;		On exit  : 0/0
 25536 ;;		Unchanged: 0/0
 25537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25538 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25540 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25541 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25542 ;;Total ram usage:       10 bytes
 25543 ;; Hardware stack levels used:    1
 25544 ;; Hardware stack levels required when called:    2
 25545 ;; This function calls:
 25546 ;;		i1_send_2length_2bytes_IK
 25547 ;; This function is called by:
 25548 ;;		_TMR0_DefaultInterruptHandler
 25549 ;; This function uses a non-reentrant model
 25550 ;;
 25551                           
 25552                           
 25553                           ;psect for function i1_LEDsOn
 25554  25BB                     i1_LEDsOn:	
 25555                           
 25556                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 25557                           
 25558                           ;incstack = 0
 25559 ;; hardware stack exceeded
 25560                           ; Regs used in i1_LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 25561  25BB  0020               	movlb	0	; select bank0
 25562  25BC  0827               	movf	i1LEDsOn@LEDpins,w
 25563  25BD  00AD               	movwf	??i1_LEDsOn
 25564  25BE  0828               	movf	i1LEDsOn@LEDpins+1,w
 25565  25BF  00AE               	movwf	??i1_LEDsOn+1
 25566  25C0  0829               	movf	i1LEDsOn@LEDpins+2,w
 25567  25C1  00AF               	movwf	??i1_LEDsOn+2
 25568  25C2  082A               	movf	i1LEDsOn@LEDpins+3,w
 25569  25C3  00B0               	movwf	??i1_LEDsOn+3
 25570  25C4  3010               	movlw	16
 25571  25C5                     u512_25:	
 25572  25C5  36B0               	lsrf	??i1_LEDsOn+3,f
 25573  25C6  0CAF               	rrf	??i1_LEDsOn+2,f
 25574  25C7  0CAE               	rrf	??i1_LEDsOn+1,f
 25575  25C8  0CAD               	rrf	??i1_LEDsOn,f
 25576  25C9  0B89               	decfsz	9,f
 25577  25CA  2DC5               	goto	u512_25
 25578  25CB  082E               	movf	??i1_LEDsOn+1,w
 25579  25CC  00A1               	movwf	i1send_2length_2bytes_IK@data1+1
 25580  25CD  082D               	movf	??i1_LEDsOn,w
 25581  25CE  00A0               	movwf	i1send_2length_2bytes_IK@data1
 25582  25CF  0828               	movf	i1LEDsOn@LEDpins+1,w
 25583  25D0  00A3               	movwf	i1send_2length_2bytes_IK@data2+1
 25584  25D1  0827               	movf	i1LEDsOn@LEDpins,w
 25585  25D2  00A2               	movwf	i1send_2length_2bytes_IK@data2
 25586  25D3  01A4               	clrf	i1send_2length_2bytes_IK@latch_start
 25587  25D4  0AA4               	incf	i1send_2length_2bytes_IK@latch_start,f
 25588  25D5  082C               	movf	i1LEDsOn@topOrBottom+1,w
 25589  25D6  00A6               	movwf	i1send_2length_2bytes_IK@topOrBottom+1
 25590  25D7  082B               	movf	i1LEDsOn@topOrBottom,w
 25591  25D8  00A5               	movwf	i1send_2length_2bytes_IK@topOrBottom
 25592  25D9  31A4  242D         	fcall	i1_send_2length_2bytes_IK
 25593  25DB  0008               	return
 25594  25DC                     __end_ofi1_LEDsOn:	
 25595                           
 25596                           	psect	text159
 25597  242D                     __ptext159:	
 25598 ;; *************** function i1_send_2length_2bytes_IK *****************
 25599 ;; Defined at:
 25600 ;;		line 70 in file "LEDcomm.c"
 25601 ;; Parameters:    Size  Location     Type
 25602 ;;  data1           2    0[BANK0 ] unsigned int 
 25603 ;;  data2           2    2[BANK0 ] unsigned int 
 25604 ;;  latch_start     1    4[BANK0 ] unsigned char 
 25605 ;;  topOrBottom     2    5[BANK0 ] int 
 25606 ;; Auto vars:     Size  Location     Type
 25607 ;;		None
 25608 ;; Return value:  Size  Location     Type
 25609 ;;                  1    wreg      void 
 25610 ;; Registers used:
 25611 ;;		wreg, status,2, status,0, pclath, cstack
 25612 ;; Tracked objects:
 25613 ;;		On entry : 0/0
 25614 ;;		On exit  : 0/0
 25615 ;;		Unchanged: 0/0
 25616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25617 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25620 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25621 ;;Total ram usage:        8 bytes
 25622 ;; Hardware stack levels used:    1
 25623 ;; Hardware stack levels required when called:    1
 25624 ;; This function calls:
 25625 ;;		i1_send_2bytes_latchless_IK
 25626 ;;		i1_send_last_2bytes_IK
 25627 ;; This function is called by:
 25628 ;;		i1_LEDsOn
 25629 ;; This function uses a non-reentrant model
 25630 ;;
 25631                           
 25632                           
 25633                           ;psect for function i1_send_2length_2bytes_IK
 25634  242D                     i1_send_2length_2bytes_IK:	
 25635                           
 25636                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 25637                           
 25638                           ;incstack = 0
 25639 ;; hardware stack exceeded
 25640                           ; Regs used in i1_send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 25641  242D  0020               	movlb	0	; select bank0
 25642  242E  0821               	movf	i1send_2length_2bytes_IK@data1+1,w
 25643  242F  00F1               	movwf	i1send_2bytes_latchless_IK@data+1
 25644  2430  0820               	movf	i1send_2length_2bytes_IK@data1,w
 25645  2431  00F0               	movwf	i1send_2bytes_latchless_IK@data
 25646  2432  31A7  271D  31A4   	fcall	i1_send_2bytes_latchless_IK
 25647                           
 25648                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 25649  2435  0020               	movlb	0	; select bank0
 25650  2436  0823               	movf	i1send_2length_2bytes_IK@data2+1,w
 25651  2437  00F1               	movwf	i1send_last_2bytes_IK@data+1
 25652  2438  0822               	movf	i1send_2length_2bytes_IK@data2,w
 25653  2439  00F0               	movwf	i1send_last_2bytes_IK@data
 25654  243A  0824               	movf	i1send_2length_2bytes_IK@latch_start,w
 25655  243B  00FB               	movwf	??i1_send_2length_2bytes_IK
 25656  243C  087B               	movf	??i1_send_2length_2bytes_IK,w
 25657  243D  00F2               	movwf	i1send_last_2bytes_IK@latch_start
 25658  243E  0826               	movf	i1send_2length_2bytes_IK@topOrBottom+1,w
 25659  243F  00F4               	movwf	i1send_last_2bytes_IK@topOrBottom+1
 25660  2440  0825               	movf	i1send_2length_2bytes_IK@topOrBottom,w
 25661  2441  00F3               	movwf	i1send_last_2bytes_IK@topOrBottom
 25662  2442  319A  2268         	fcall	i1_send_last_2bytes_IK
 25663  2444  0008               	return
 25664  2445                     __end_ofi1_send_2length_2bytes_IK:	
 25665                           
 25666                           	psect	text160
 25667  1A68                     __ptext160:	
 25668 ;; *************** function i1_send_last_2bytes_IK *****************
 25669 ;; Defined at:
 25670 ;;		line 19 in file "LEDcomm.c"
 25671 ;; Parameters:    Size  Location     Type
 25672 ;;  data            2    0[COMMON] unsigned int 
 25673 ;;  latch_start     1    2[COMMON] unsigned char 
 25674 ;;  topOrBottom     2    3[COMMON] int 
 25675 ;; Auto vars:     Size  Location     Type
 25676 ;;  send_last_2b    2    9[COMMON] int 
 25677 ;; Return value:  Size  Location     Type
 25678 ;;                  1    wreg      void 
 25679 ;; Registers used:
 25680 ;;		wreg, status,2, status,0
 25681 ;; Tracked objects:
 25682 ;;		On entry : 0/0
 25683 ;;		On exit  : 0/0
 25684 ;;		Unchanged: 0/0
 25685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25686 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25687 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25688 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25689 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25690 ;;Total ram usage:       11 bytes
 25691 ;; Hardware stack levels used:    1
 25692 ;; This function calls:
 25693 ;;		Nothing
 25694 ;; This function is called by:
 25695 ;;		i1_send_2length_2bytes_IK
 25696 ;; This function uses a non-reentrant model
 25697 ;;
 25698                           
 25699                           
 25700                           ;psect for function i1_send_last_2bytes_IK
 25701  1A68                     i1_send_last_2bytes_IK:	
 25702                           
 25703                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 25704                           
 25705                           ;incstack = 0
 25706 ;; hardware stack exceeded
 25707                           ; Regs used in i1_send_last_2bytes_IK: [wreg+status,2+status,0]
 25708  1A68  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25709  1A69  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25710  1A6A  1D03               	btfss	3,2
 25711  1A6B  2A6F               	goto	i1l210
 25712  1A6C  0022               	movlb	2	; select bank2
 25713  1A6D  120D               	bcf	13,4	;volatile
 25714  1A6E  2A71               	goto	i1l5178
 25715  1A6F                     i1l210:	
 25716  1A6F  0022               	movlb	2	; select bank2
 25717  1A70  100E               	bcf	14,0	;volatile
 25718  1A71                     i1l5178:	
 25719                           
 25720                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 25721  1A71  300F               	movlw	15
 25722  1A72  00F9               	movwf	i1send_last_2bytes_IK@j
 25723  1A73  3000               	movlw	0
 25724  1A74  00FA               	movwf	i1send_last_2bytes_IK@j+1
 25725  1A75  1BFA               	btfsc	i1send_last_2bytes_IK@j+1,7
 25726  1A76  2AA8               	goto	i1l231
 25727  1A77                     i1l214:	
 25728                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 25729                           
 25730  1A77  110C               	bcf	12,2	;volatile
 25731                           
 25732                           ;LEDcomm.c: 28: if (data & 1 << j){
 25733  1A78  3001               	movlw	1
 25734  1A79  00F5               	movwf	??i1_send_last_2bytes_IK
 25735  1A7A  3000               	movlw	0
 25736  1A7B  00F6               	movwf	??i1_send_last_2bytes_IK+1
 25737  1A7C  0A79               	incf	i1send_last_2bytes_IK@j,w
 25738  1A7D  2A80               	goto	u392_24
 25739  1A7E                     u392_25:	
 25740  1A7E  35F5               	lslf	??i1_send_last_2bytes_IK,f
 25741  1A7F  0DF6               	rlf	??i1_send_last_2bytes_IK+1,f
 25742  1A80                     u392_24:	
 25743  1A80  0B89               	decfsz	9,f
 25744  1A81  2A7E               	goto	u392_25
 25745  1A82  0870               	movf	i1send_last_2bytes_IK@data,w
 25746  1A83  0575               	andwf	??i1_send_last_2bytes_IK,w
 25747  1A84  00F7               	movwf	??i1_send_last_2bytes_IK+2
 25748  1A85  0871               	movf	i1send_last_2bytes_IK@data+1,w
 25749  1A86  0576               	andwf	??i1_send_last_2bytes_IK+1,w
 25750  1A87  00F8               	movwf	??i1_send_last_2bytes_IK+3
 25751  1A88  0877               	movf	??i1_send_last_2bytes_IK+2,w
 25752  1A89  0478               	iorwf	??i1_send_last_2bytes_IK+3,w
 25753  1A8A  1903               	btfsc	3,2
 25754  1A8B  2A8E               	goto	i1l220
 25755                           
 25756                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 25757  1A8C  150E               	bsf	14,2	;volatile
 25758                           
 25759                           ;LEDcomm.c: 30: }
 25760  1A8D  2A8F               	goto	i1l5186
 25761  1A8E                     i1l220:	
 25762                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 25763                           
 25764  1A8E  110E               	bcf	14,2	;volatile
 25765  1A8F                     i1l5186:	
 25766                           
 25767                           ;LEDcomm.c: 33: if( j == latch_start) {
 25768  1A8F  0872               	movf	i1send_last_2bytes_IK@latch_start,w
 25769  1A90  00F5               	movwf	??i1_send_last_2bytes_IK
 25770  1A91  01F6               	clrf	??i1_send_last_2bytes_IK+1
 25771  1A92  087A               	movf	i1send_last_2bytes_IK@j+1,w
 25772  1A93  0676               	xorwf	??i1_send_last_2bytes_IK+1,w
 25773  1A94  1D03               	skipz
 25774  1A95  2A98               	goto	u394_25
 25775  1A96  0879               	movf	i1send_last_2bytes_IK@j,w
 25776  1A97  0675               	xorwf	??i1_send_last_2bytes_IK,w
 25777  1A98                     u394_25:	
 25778  1A98  1D03               	skipz
 25779  1A99  2AA1               	goto	i1l229
 25780                           
 25781                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 25782  1A9A  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25783  1A9B  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25784  1A9C  1D03               	btfss	3,2
 25785  1A9D  2AA0               	goto	i1l227
 25786  1A9E  160D               	bsf	13,4	;volatile
 25787  1A9F  2AA1               	goto	i1l229
 25788  1AA0                     i1l227:	
 25789  1AA0  140E               	bsf	14,0	;volatile
 25790  1AA1                     i1l229:	
 25791                           ;LEDcomm.c: 37: }
 25792                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 25793                           
 25794  1AA1  150C               	bsf	12,2	;volatile
 25795  1AA2  30FF               	movlw	255
 25796  1AA3  07F9               	addwf	i1send_last_2bytes_IK@j,f
 25797  1AA4  30FF               	movlw	255
 25798  1AA5  3DFA               	addwfc	i1send_last_2bytes_IK@j+1,f
 25799  1AA6  1FFA               	btfss	i1send_last_2bytes_IK@j+1,7
 25800  1AA7  2A77               	goto	i1l214
 25801  1AA8                     i1l231:	
 25802                           ;LEDcomm.c: 41: }
 25803                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 25804                           
 25805  1AA8  110C               	bcf	12,2	;volatile
 25806                           
 25807                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 25808  1AA9  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25809  1AAA  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25810  1AAB  1D03               	btfss	3,2
 25811  1AAC  2AAF               	goto	i1l237
 25812  1AAD  120D               	bcf	13,4	;volatile
 25813  1AAE  0008               	return
 25814  1AAF                     i1l237:	
 25815  1AAF  100E               	bcf	14,0	;volatile
 25816  1AB0  0008               	return
 25817  1AB1                     __end_ofi1_send_last_2bytes_IK:	
 25818                           
 25819                           	psect	text161
 25820  271D                     __ptext161:	
 25821 ;; *************** function i1_send_2bytes_latchless_IK *****************
 25822 ;; Defined at:
 25823 ;;		line 49 in file "LEDcomm.c"
 25824 ;; Parameters:    Size  Location     Type
 25825 ;;  data            2    0[COMMON] unsigned int 
 25826 ;; Auto vars:     Size  Location     Type
 25827 ;;  send_2bytes_    2    6[COMMON] int 
 25828 ;; Return value:  Size  Location     Type
 25829 ;;                  1    wreg      void 
 25830 ;; Registers used:
 25831 ;;		wreg, status,2, status,0
 25832 ;; Tracked objects:
 25833 ;;		On entry : 0/0
 25834 ;;		On exit  : 0/0
 25835 ;;		Unchanged: 0/0
 25836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25839 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25840 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25841 ;;Total ram usage:        8 bytes
 25842 ;; Hardware stack levels used:    1
 25843 ;; This function calls:
 25844 ;;		Nothing
 25845 ;; This function is called by:
 25846 ;;		i1_send_2length_2bytes_IK
 25847 ;; This function uses a non-reentrant model
 25848 ;;
 25849                           
 25850                           
 25851                           ;psect for function i1_send_2bytes_latchless_IK
 25852  271D                     i1_send_2bytes_latchless_IK:	
 25853                           
 25854                           ;incstack = 0
 25855 ;; hardware stack exceeded
 25856                           ; Regs used in i1_send_2bytes_latchless_IK: [wreg+status,2+status,0]
 25857                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 25858  271D  0022               	movlb	2	; select bank2
 25859  271E  120D               	bcf	13,4	;volatile
 25860                           
 25861                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 25862  271F  300F               	movlw	15
 25863  2720  00F6               	movwf	i1send_2bytes_latchless_IK@j
 25864  2721  3000               	movlw	0
 25865  2722  00F7               	movwf	i1send_2bytes_latchless_IK@j+1
 25866  2723  1BF7               	btfsc	i1send_2bytes_latchless_IK@j+1,7
 25867  2724  2F44               	goto	i1l256
 25868  2725                     i1l246:	
 25869                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 25870                           
 25871  2725  110C               	bcf	12,2	;volatile
 25872                           
 25873                           ;LEDcomm.c: 56: if (data & 1 << j){
 25874  2726  3001               	movlw	1
 25875  2727  00F2               	movwf	??i1_send_2bytes_latchless_IK
 25876  2728  3000               	movlw	0
 25877  2729  00F3               	movwf	??i1_send_2bytes_latchless_IK+1
 25878  272A  0A76               	incf	i1send_2bytes_latchless_IK@j,w
 25879  272B  2F2E               	goto	u399_24
 25880  272C                     u399_25:	
 25881  272C  35F2               	lslf	??i1_send_2bytes_latchless_IK,f
 25882  272D  0DF3               	rlf	??i1_send_2bytes_latchless_IK+1,f
 25883  272E                     u399_24:	
 25884  272E  0B89               	decfsz	9,f
 25885  272F  2F2C               	goto	u399_25
 25886  2730  0870               	movf	i1send_2bytes_latchless_IK@data,w
 25887  2731  0572               	andwf	??i1_send_2bytes_latchless_IK,w
 25888  2732  00F4               	movwf	??i1_send_2bytes_latchless_IK+2
 25889  2733  0871               	movf	i1send_2bytes_latchless_IK@data+1,w
 25890  2734  0573               	andwf	??i1_send_2bytes_latchless_IK+1,w
 25891  2735  00F5               	movwf	??i1_send_2bytes_latchless_IK+3
 25892  2736  0874               	movf	??i1_send_2bytes_latchless_IK+2,w
 25893  2737  0475               	iorwf	??i1_send_2bytes_latchless_IK+3,w
 25894  2738  1903               	btfsc	3,2
 25895  2739  2F3C               	goto	i1l252
 25896                           
 25897                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 25898  273A  150E               	bsf	14,2	;volatile
 25899                           
 25900                           ;LEDcomm.c: 58: }
 25901  273B  2F3D               	goto	i1l254
 25902  273C                     i1l252:	
 25903                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 25904                           
 25905  273C  110E               	bcf	14,2	;volatile
 25906  273D                     i1l254:	
 25907                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 25908                           
 25909  273D  150C               	bsf	12,2	;volatile
 25910  273E  30FF               	movlw	255
 25911  273F  07F6               	addwf	i1send_2bytes_latchless_IK@j,f
 25912  2740  30FF               	movlw	255
 25913  2741  3DF7               	addwfc	i1send_2bytes_latchless_IK@j+1,f
 25914  2742  1FF7               	btfss	i1send_2bytes_latchless_IK@j+1,7
 25915  2743  2F25               	goto	i1l246
 25916  2744                     i1l256:	
 25917                           ;LEDcomm.c: 64: }
 25918                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 25919                           
 25920  2744  110C               	bcf	12,2	;volatile
 25921  2745  0008               	return
 25922  2746                     __end_ofi1_send_2bytes_latchless_IK:	
 25923                           
 25924                           	psect	text162
 25925  2244                     __ptext162:	
 25926 ;; *************** function _TMR0_Write8bitTimer *****************
 25927 ;; Defined at:
 25928 ;;		line 107 in file "mcc_generated_files/tmr0.c"
 25929 ;; Parameters:    Size  Location     Type
 25930 ;;  timerVal        1    wreg     unsigned char 
 25931 ;; Auto vars:     Size  Location     Type
 25932 ;;  timerVal        1    0[COMMON] unsigned char 
 25933 ;; Return value:  Size  Location     Type
 25934 ;;                  1    wreg      void 
 25935 ;; Registers used:
 25936 ;;		wreg
 25937 ;; Tracked objects:
 25938 ;;		On entry : 0/0
 25939 ;;		On exit  : 0/0
 25940 ;;		Unchanged: 0/0
 25941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25946 ;;Total ram usage:        1 bytes
 25947 ;; Hardware stack levels used:    1
 25948 ;; This function calls:
 25949 ;;		Nothing
 25950 ;; This function is called by:
 25951 ;;		_TMR0_DefaultInterruptHandler
 25952 ;; This function uses a non-reentrant model
 25953 ;;
 25954                           
 25955                           
 25956                           ;psect for function _TMR0_Write8bitTimer
 25957  2244                     _TMR0_Write8bitTimer:	
 25958                           
 25959                           ;incstack = 0
 25960                           ; Regs used in _TMR0_Write8bitTimer: [wreg]
 25961                           ;TMR0_Write8bitTimer@timerVal stored from wreg
 25962  2244  00F0               	movwf	TMR0_Write8bitTimer@timerVal
 25963                           
 25964                           ;tmr0.c: 110: TMR0L = timerVal;
 25965  2245  0870               	movf	TMR0_Write8bitTimer@timerVal,w
 25966  2246  0020               	movlb	0	; select bank0
 25967  2247  0095               	movwf	21	;volatile
 25968  2248  0008               	return
 25969  2249                     __end_of_TMR0_Write8bitTimer:	
 25970                           
 25971                           	psect	text163
 25972  21D7                     __ptext163:	
 25973 ;; *************** function _TMR0_StopTimer *****************
 25974 ;; Defined at:
 25975 ;;		line 91 in file "mcc_generated_files/tmr0.c"
 25976 ;; Parameters:    Size  Location     Type
 25977 ;;		None
 25978 ;; Auto vars:     Size  Location     Type
 25979 ;;		None
 25980 ;; Return value:  Size  Location     Type
 25981 ;;                  1    wreg      void 
 25982 ;; Registers used:
 25983 ;;		None
 25984 ;; Tracked objects:
 25985 ;;		On entry : 0/0
 25986 ;;		On exit  : 0/0
 25987 ;;		Unchanged: 0/0
 25988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25993 ;;Total ram usage:        0 bytes
 25994 ;; Hardware stack levels used:    1
 25995 ;; This function calls:
 25996 ;;		Nothing
 25997 ;; This function is called by:
 25998 ;;		_TMR0_DefaultInterruptHandler
 25999 ;; This function uses a non-reentrant model
 26000 ;;
 26001                           
 26002                           
 26003                           ;psect for function _TMR0_StopTimer
 26004  21D7                     _TMR0_StopTimer:	
 26005                           
 26006                           ;tmr0.c: 94: T0CON0bits.T0EN = 0;
 26007                           
 26008                           ;incstack = 0
 26009                           ; Regs used in _TMR0_StopTimer: []
 26010  21D7  0020               	movlb	0	; select bank0
 26011  21D8  1397               	bcf	23,7	;volatile
 26012  21D9  0008               	return
 26013  21DA                     __end_of_TMR0_StopTimer:	
 26014                           
 26015                           	psect	text164
 26016  2501                     __ptext164:	
 26017 ;; *************** function _EUSART_Transmit_ISR *****************
 26018 ;; Defined at:
 26019 ;;		line 161 in file "mcc_generated_files/eusart.c"
 26020 ;; Parameters:    Size  Location     Type
 26021 ;;		None
 26022 ;; Auto vars:     Size  Location     Type
 26023 ;;		None
 26024 ;; Return value:  Size  Location     Type
 26025 ;;                  1    wreg      void 
 26026 ;; Registers used:
 26027 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26028 ;; Tracked objects:
 26029 ;;		On entry : 0/0
 26030 ;;		On exit  : 0/0
 26031 ;;		Unchanged: 0/0
 26032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26035 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26036 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26037 ;;Total ram usage:        1 bytes
 26038 ;; Hardware stack levels used:    1
 26039 ;; This function calls:
 26040 ;;		Nothing
 26041 ;; This function is called by:
 26042 ;;		_INTERRUPT_InterruptManager
 26043 ;; This function uses a non-reentrant model
 26044 ;;
 26045                           
 26046                           
 26047                           ;psect for function _EUSART_Transmit_ISR
 26048  2501                     _EUSART_Transmit_ISR:	
 26049                           
 26050                           ;eusart.c: 165: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 26051                           
 26052                           ;incstack = 0
 26053                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 26054  2501  3008               	movlw	8
 26055  2502  0020               	movlb	0	; select bank0
 26056  2503  025E               	subwf	_eusartTxBufferRemaining,w	;volatile
 26057  2504  1803               	skipnc
 26058  2505  2D1C               	goto	i1l427
 26059                           
 26060                           ;eusart.c: 166: {
 26061                           ;eusart.c: 167: TX1REG = eusartTxBuffer[eusartTxTail++];
 26062  2506  0859               	movf	_eusartTxTail,w
 26063  2507  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 26064  2508  0086               	movwf	6
 26065  2509  3001               	movlw	1	; select bank3/4
 26066  250A  0087               	movwf	7
 26067  250B  0801               	movf	1,w
 26068  250C  0023               	movlb	3	; select bank3
 26069  250D  009A               	movwf	26	;volatile
 26070  250E  3001               	movlw	1
 26071  250F  00F0               	movwf	??_EUSART_Transmit_ISR
 26072  2510  0870               	movf	??_EUSART_Transmit_ISR,w
 26073  2511  0020               	movlb	0	; select bank0
 26074  2512  07D9               	addwf	_eusartTxTail,f	;volatile
 26075                           
 26076                           ;eusart.c: 168: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 26077  2513  3008               	movlw	8
 26078  2514  0259               	subwf	_eusartTxTail,w	;volatile
 26079  2515  1803               	btfsc	3,0
 26080                           
 26081                           ;eusart.c: 169: {
 26082                           ;eusart.c: 170: eusartTxTail = 0;
 26083  2516  01D9               	clrf	_eusartTxTail	;volatile
 26084                           
 26085                           ;eusart.c: 171: }
 26086                           ;eusart.c: 172: eusartTxBufferRemaining++;
 26087  2517  3001               	movlw	1
 26088  2518  00F0               	movwf	??_EUSART_Transmit_ISR
 26089  2519  0870               	movf	??_EUSART_Transmit_ISR,w
 26090  251A  07DE               	addwf	_eusartTxBufferRemaining,f	;volatile
 26091                           
 26092                           ;eusart.c: 173: }
 26093  251B  0008               	return
 26094  251C                     i1l427:	
 26095                           
 26096                           ;eusart.c: 174: else
 26097                           ;eusart.c: 175: {
 26098                           ;eusart.c: 176: PIE1bits.TXIE = 0;
 26099  251C  0021               	movlb	1	; select bank1
 26100  251D  1211               	bcf	17,4	;volatile
 26101  251E  0008               	return
 26102  251F                     __end_of_EUSART_Transmit_ISR:	
 26103                           
 26104                           	psect	text165
 26105  24AC                     __ptext165:	
 26106 ;; *************** function _EUSART_Receive_ISR *****************
 26107 ;; Defined at:
 26108 ;;		line 180 in file "mcc_generated_files/eusart.c"
 26109 ;; Parameters:    Size  Location     Type
 26110 ;;		None
 26111 ;; Auto vars:     Size  Location     Type
 26112 ;;		None
 26113 ;; Return value:  Size  Location     Type
 26114 ;;                  1    wreg      void 
 26115 ;; Registers used:
 26116 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26117 ;; Tracked objects:
 26118 ;;		On entry : 0/0
 26119 ;;		On exit  : 0/0
 26120 ;;		Unchanged: 0/0
 26121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26124 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26125 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26126 ;;Total ram usage:        1 bytes
 26127 ;; Hardware stack levels used:    1
 26128 ;; This function calls:
 26129 ;;		Nothing
 26130 ;; This function is called by:
 26131 ;;		_INTERRUPT_InterruptManager
 26132 ;; This function uses a non-reentrant model
 26133 ;;
 26134                           
 26135                           
 26136                           ;psect for function _EUSART_Receive_ISR
 26137  24AC                     _EUSART_Receive_ISR:	
 26138                           
 26139                           ;eusart.c: 183: if(1 == RC1STAbits.OERR)
 26140                           
 26141                           ;incstack = 0
 26142                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 26143  24AC  0023               	movlb	3	; select bank3
 26144  24AD  1C9D               	btfss	29,1	;volatile
 26145  24AE  2CB1               	goto	i1l6462
 26146                           
 26147                           ;eusart.c: 184: {
 26148                           ;eusart.c: 187: RC1STAbits.CREN = 0;
 26149  24AF  121D               	bcf	29,4	;volatile
 26150                           
 26151                           ;eusart.c: 188: RC1STAbits.CREN = 1;
 26152  24B0  161D               	bsf	29,4	;volatile
 26153  24B1                     i1l6462:	
 26154                           
 26155                           ;eusart.c: 189: }
 26156                           ;eusart.c: 192: eusartRxBuffer[eusartRxHead++] = RC1REG;
 26157  24B1  0819               	movf	25,w	;volatile
 26158  24B2  00F0               	movwf	??_EUSART_Receive_ISR
 26159  24B3  0020               	movlb	0	; select bank0
 26160  24B4  0858               	movf	_eusartRxHead,w
 26161  24B5  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 26162  24B6  0086               	movwf	6
 26163  24B7  3001               	movlw	1	; select bank3/4
 26164  24B8  0087               	movwf	7
 26165  24B9  0870               	movf	??_EUSART_Receive_ISR,w
 26166  24BA  0081               	movwf	1
 26167  24BB  3001               	movlw	1
 26168  24BC  00F0               	movwf	??_EUSART_Receive_ISR
 26169  24BD  0870               	movf	??_EUSART_Receive_ISR,w
 26170  24BE  07D8               	addwf	_eusartRxHead,f	;volatile
 26171                           
 26172                           ;eusart.c: 193: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 26173  24BF  3008               	movlw	8
 26174  24C0  0258               	subwf	_eusartRxHead,w	;volatile
 26175  24C1  1803               	btfsc	3,0
 26176                           
 26177                           ;eusart.c: 194: {
 26178                           ;eusart.c: 195: eusartRxHead = 0;
 26179  24C2  01D8               	clrf	_eusartRxHead	;volatile
 26180                           
 26181                           ;eusart.c: 196: }
 26182                           ;eusart.c: 197: eusartRxCount++;
 26183  24C3  3001               	movlw	1
 26184  24C4  00F0               	movwf	??_EUSART_Receive_ISR
 26185  24C5  0870               	movf	??_EUSART_Receive_ISR,w
 26186  24C6  07D6               	addwf	_eusartRxCount,f	;volatile
 26187  24C7  0008               	return
 26188  24C8                     __end_of_EUSART_Receive_ISR:	
 26189  007E                     btemp	set	126	;btemp
 26190  007E                     int$flags	set	126
 26191  007E                     wtemp0	set	126


Data Sizes:
    Strings     540
    Constant    1048
    Data        44
    BSS         162
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     46      63
    BANK1            80     57      79
    BANK2            80      0      80
    BANK3            80      0      59
    BANK4            80     28      60
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           16      0       0
    BANK25            0      0       0

Pointer List with Targets:

    i2c_ISR$2755	PTR const FTN()enum E8364 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    returnStop@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S928$11$0	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_79(CODE[5]), STR_78(CODE[5]), STR_77(CODE[7]), STR_76(CODE[8]), 
		 -> STR_75(CODE[5]), STR_74(CODE[5]), STR_73(CODE[11]), STR_72(CODE[13]), 
		 -> STR_71(CODE[7]), STR_70(CODE[8]), STR_69(CODE[15]), STR_68(CODE[14]), 
		 -> STR_67(CODE[12]), STR_66(CODE[8]), STR_65(CODE[8]), STR_64(CODE[2]), 
		 -> STR_63(CODE[5]), STR_62(CODE[5]), STR_61(CODE[2]), STR_60(CODE[4]), 
		 -> STR_59(CODE[4]), STR_58(CODE[4]), 

    stricmp@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_81(CODE[23]), STR_80(CODE[3]), STR_55(CODE[17]), STR_54(CODE[17]), 
		 -> STR_53(CODE[18]), STR_52(CODE[18]), STR_51(CODE[17]), STR_50(CODE[28]), 
		 -> STR_49(CODE[9]), STR_48(CODE[9]), STR_47(CODE[25]), STR_46(CODE[11]), 
		 -> STR_45(CODE[8]), STR_44(CODE[8]), STR_43(CODE[8]), STR_42(CODE[31]), 
		 -> STR_41(CODE[11]), STR_40(CODE[8]), STR_39(CODE[8]), STR_38(CODE[8]), 
		 -> STR_37(CODE[26]), STR_36(CODE[30]), STR_35(CODE[2]), STR_34(CODE[2]), 
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[4]), STR_30(CODE[2]), 
		 -> STR_29(CODE[4]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[4]), 
		 -> STR_13(CODE[3]), STR_12(CODE[16]), STR_11(CODE[11]), STR_10(CODE[16]), 
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[8]), 
		 -> STR_5(CODE[13]), STR_4(CODE[15]), STR_3(CODE[16]), STR_2(CODE[2]), 
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    execCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    parseCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    parseCmd@cmdString	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), 

    parseCmd@p	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E8364[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    S928$callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S928$callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S928$data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c1_driver_setI2cISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_i2c_ISR->i1_do_I2C_TX
    i1_do_I2C_TX->i1_i2c1_driver_TXData
    i1_do_I2C_TX->i1_i2c1_driver_isNACK
    i1_do_I2C_TX->i1_returnReset
    i1_do_I2C_TX->i1_returnStop
    i1_do_I2C_SEND_ADR_WRITE->i1_i2c1_driver_TXData
    i1_do_I2C_SEND_ADR_READ->i1_i2c1_driver_TXData
    _TMR2_DefaultInterruptHandler->_TMR2_WriteTimer
    i1_LEDsOn->i1_send_2length_2bytes_IK
    i1_send_2length_2bytes_IK->i1_send_last_2bytes_IK

Critical Paths under _main in BANK0

    _parseCmd->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _stricmp->_toupper
    _atoi->___wmul
    _main_initialize->_LEDsPwr
    _drv_init->_drv_write
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _drv_reset->_drv_write
    _timedActiveHeatOn->_LEDsOn
    _setLEDPwr->_LEDsPwr
    _LEDsPwr->_send_2length_2bytes_IK
    _setLEDBrightnessRange->_LED_setBrightnessRange
    _setHeaterToggle->_LEDsOn
    _setHeaterPreTime->___ftadd
    _setHeaterPostTime->___ftadd
    _setDrvPiezoOnTime->___ftadd
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _setDrvGain->_drv_write
    _commCheck->_LED_testComm
    _LED_test_openshort->_LEDsOn
    _LED_testComm->_LED_setBrightnessRange
    _LED_setBrightnessRange->_send_2length_2bytes_IK
    _doMove->_LEDsOn
    _drv_write_DC->_drv_write
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _printf->___llmod
    _putch->_EUSART_Write
    ___llmod->___lldiv
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _LEDsOn->_send_2length_2bytes_IK
    _send_2length_2bytes_IK->_send_last_2bytes_IK
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_DefaultInterruptHandler->i1_LEDsOn
    i1_LEDsOn->i1_send_2length_2bytes_IK

Critical Paths under _main in BANK1

    _main->_doRelMove
    _main_initialize->___fttol
    _drv_init->_drv_reset
    _execCmd->_commCheck
    _zeroPosition->_printf
    _timedActiveHeatOn->_printf
    _startRelMove->_printf
    _startAbsMove->_printf
    _setMoveMask->_printf
    _setLEDPwr->_printf
    _setLEDBrightnessRange->_printf
    _setHeaterToggle->_printf
    _setHeaterPreTime->___fttol
    _setHeaterPostTime->___fttol
    _setDrvPiezoOnTime->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul
    _setDrvPeak->_printf
    _setDrvGain->_printf
    _setActive->_printf
    _getPosition->_printf
    _getMoveMask->_printf
    _getMotionStatus->_printf
    _getActive->_printf
    _commCheck->_LED_testComm
    _LED_test_openshort->_printf
    _LED_testComm->_LED_readConfig
    _LED_readConfig->_LED_getData
    _LED_getData->_printf
    _doRelMove->_doMove
    _doAbsMove->_doMove
    _doMove->_drv_write_DC
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _drv_read->_printf
    _drv_write->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_doAbsMove

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  401889
                                             56 BANK1      1     1      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                          _doAbsMove
                          _doRelMove
                            _execCmd
                    _main_initialize
                           _parseCmd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _parseCmd                                             6     5      1    6900
                                             37 BANK0      6     5      1
                               _atoi
                            _stricmp
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               6     4      2    1446
                                             31 BANK0      6     4      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               7     3      4     344
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _stricmp                                              6     4      2    2226
                                             19 BANK0      6     4      2
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    1920
                                             23 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1564
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _main_initialize                                      2     2      0   49985
                                             29 BANK1      2     2      0
             _LED_setBrightnessRange
                            _LEDsPwr
                _TMR0_Load8bitPeriod
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                           _drv_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drv_init                                             5     1      4   24276
                                             22 BANK1      5     1      4
                          _drv_reset
                          _drv_write
                           _i2c_open
                     _i2c_setAddress
                             _printf
 ---------------------------------------------------------------------------------
 (3) _i2c_setAddress                                       2     2      0      22
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _i2c_open                                             3     3      0     216
                                             19 BANK0      3     3      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setI2cISR                                2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setBusCollisionISR                       2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drv_reset                                            1     1      0    8893
                                             21 BANK1      1     1      0
                          _drv_write
 ---------------------------------------------------------------------------------
 (1) _execCmd                                              1     1      0  256894
                                             52 BANK1      1     1      0
                          _commCheck
                             _doMove
                          _getActive
                    _getMotionStatus
                        _getMoveMask
                        _getPosition
                             _printf
                          _setActive
                         _setDrvGain
                         _setDrvPeak
                  _setDrvPiezoOnTime
                  _setHeaterPostTime
                   _setHeaterPreTime
                    _setHeaterToggle
              _setLEDBrightnessRange
                          _setLEDPwr
                        _setMoveMask
                       _startAbsMove
                       _startRelMove
                  _timedActiveHeatOn
                       _zeroPosition
 ---------------------------------------------------------------------------------
 (2) _zeroPosition                                        12    10      2    6166
                                             41 BANK0      2     2      0
                                             21 BANK1     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _timedActiveHeatOn                                   13     7      6   10816
                                             21 BANK1     13     7      6
                             _LEDsOn
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startRelMove                                         2     0      2    6144
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startAbsMove                                         3     1      2    6144
                                             41 BANK0      1     1      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setMoveMask                                          8     4      4    6314
                                             41 BANK0      4     4      0
                                             21 BANK1      4     0      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setLEDPwr                                            4     0      4    9324
                                             21 BANK1      4     0      4
                            _LEDsPwr
                             _printf
 ---------------------------------------------------------------------------------
 (2) _LEDsPwr                                             14    10      4    3072
                                             36 BANK0     10     6      4
                                              0 BANK1      4     4      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (2) _setLEDBrightnessRange                                4     0      4    9728
                                             21 BANK1      4     0      4
             _LED_setBrightnessRange
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterToggle                                      8     4      4   10810
                                             21 BANK1      8     4      4
                             _LEDsOn
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPreTime                                     4     2      2   19247
                                             29 BANK1      4     2      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPostTime                                    2     0      2   19247
                                             29 BANK1      2     0      2
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TMR2_LoadPeriodRegister                              1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPiezoOnTime                                    4     2      2   19247
                                             29 BANK1      4     2      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     687
                                             15 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    4540
                                             31 BANK0     10     4      6
                                              0 BANK1      6     6      0
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4855
                                             41 BANK0      4     4      0
                                              6 BANK1      9     3      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2999
                                             25 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2404
                                             17 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _TMR0_Load8bitPeriod                                  1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPeak                                           2     0      2    6144
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setDrvGain                                           5     3      2   15083
                                             21 BANK1      5     3      2
                          _drv_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setActive                                           12     8      4    6314
                                             21 BANK1     12     8      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getPosition                                          6     4      2    6206
                                             41 BANK0      4     4      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMoveMask                                          8     6      2    6135
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMotionStatus                                      2     0      2    6036
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getActive                                            8     6      2    6135
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _commCheck                                            3     1      2   40452
                                             49 BANK1      3     1      2
                       _LED_testComm
                 _LED_test_openshort
                           _drv_read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _LED_test_openshort                                   7     3      4   13789
                                             21 BANK1      7     3      4
                             _LEDsOn
                             _printf
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _LED_testComm                                        10     8      2   12523
                                             44 BANK0      2     2      0
                                             41 BANK1      8     6      2
                     _LED_readConfig
             _LED_setBrightnessRange
 ---------------------------------------------------------------------------------
 (2) _LED_setBrightnessRange                              25    21      4    3476
                                             36 BANK0      8     4      4
                                              0 BANK1     17    17      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _LED_readConfig                                       5     1      4    8698
                                             41 BANK0      1     1      0
                                             37 BANK1      4     0      4
                        _LED_getData
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (5) _LED_getData                                         16    12      4    6203
                                             21 BANK1     16    12      4
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doRelMove                                           18    18      0   40778
                                             38 BANK1     18    18      0
                             _doMove
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doAbsMove                                           36    36      0   41100
                                             38 BANK1      8     8      0
                                              0 BANK4     28    28      0
                             _doMove
                             _printf
 ---------------------------------------------------------------------------------
 (2) _doMove                                               7     5      2   34482
                                             31 BANK1      7     5      2
                             _LEDsOn
                    _TMR0_StartTimer
                    _TMR2_StartTimer
                     _calcHeaterPins
                       _drv_write_DC
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drv_write_DC                                         7     3      4   23876
                                             24 BANK1      7     3      4
                            ___awdiv
                          _drv_write
                         _fifo_check
                             _printf
 ---------------------------------------------------------------------------------
 (4) _fifo_check                                           2     2      0    8138
                                             45 BANK0      1     1      0
                                             23 BANK1      1     1      0
                           _drv_read
 ---------------------------------------------------------------------------------
 (5) _drv_read                                             6     4      2    8104
                                             41 BANK0      4     4      0
                                             21 BANK1      2     0      2
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drv_write                                            5     4      1    8893
                                             41 BANK0      5     4      1
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              29    23      6    6036
                                              0 BANK1     21    15      6
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                             19 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                             31 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     395
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) _i2c_setBuffer                                        4     0      4     832
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _i2c_masterOperation                                  3     3      0    1104
                                             23 BANK0      3     3      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (5) _mssp1_IRQisEnabled                                   2     2      0       0
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _i2c_poller                                           0     0      0    1036
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (6) _mssp1_waitForEvent                                   1     1      0      42
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              1     1      0     994
                                             22 BANK0      1     1      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                       _mssp1_setIRQ
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            4     4      0     284
                                             18 BANK0      4     4      0
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            1     1      0     216
                                             17 BANK0      1     1      0
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1     216
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     556
                                             17 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _calcHeaterPins                                       4     4      0       0
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LEDsOn                                              10     4      6    4496
                                             36 BANK0     10     4      6
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _send_2length_2bytes_IK                               8     1      7    2387
                                             28 BANK0      8     1      7
           _send_2bytes_latchless_IK
                _send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _send_last_2bytes_IK                                 11     6      5     516
                                             17 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (4) _send_2bytes_latchless_IK                             8     6      2     207
                                             17 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      86
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          1     1      0    1490
                                             12 COMMON     1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
                           _TMR2_ISR
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (13) i1_i2c_ISR                                           1     1      0     690
                                              5 COMMON     1     1      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
               i1_i2c1_driver_isNACK
                   i1_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (14) i1_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX_EMPTY                                   1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                     i1_mssp1_setIRQ
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX                                         4     4      0     208
                                              1 COMMON     4     4      0
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
               i1_i2c1_driver_TXData
               i1_i2c1_driver_isNACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_READ                              0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_TXData                                1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RX                                         1     1      0     140
                                              0 COMMON     1     1      0
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
            i1_i2c1_driver_getRXData
              i1_i2c1_driver_sendACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RESET                                      0     0      0       0
             i1_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RCEN                                       0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ADDRESS_NACK                            1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_returnStop                                        1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_returnReset                                       1     0      1     140
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_STOP                                  0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART                               0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ACK                                     0     0      0       0
              i1_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (14) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0      22
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultInterruptHandler                        0     0      0      22
                     _TMR2_StopTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR2_WriteTimer                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR2_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0     778
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultInterruptHandler                        0     0      0     778
                     _TMR0_StopTimer
                _TMR0_Write8bitTimer
                           i1_LEDsOn
 ---------------------------------------------------------------------------------
 (15) i1_LEDsOn                                           10     4      6     756
                                              7 BANK0     10     4      6
           i1_send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (16) i1_send_2length_2bytes_IK                            8     1      7     586
                                             11 COMMON     1     1      0
                                              0 BANK0      7     0      7
         i1_send_2bytes_latchless_IK
              i1_send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (17) i1_send_last_2bytes_IK                              11     6      5     278
                                              0 COMMON    11     6      5
 ---------------------------------------------------------------------------------
 (17) i1_send_2bytes_latchless_IK                          8     6      2     116
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (15) _TMR0_Write8bitTimer                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _doAbsMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _doRelMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _execCmd
     _commCheck
       _LED_testComm
         _LED_readConfig
           _LED_getData
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _LED_setBrightnessRange
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
       _LED_test_openshort
         _LEDsOn
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _drv_read
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMotionStatus
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
     _setActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvGain
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPeak
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPiezoOnTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPostTime
       _TMR2_LoadPeriodRegister
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPreTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterToggle
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDBrightnessRange
       _LED_setBrightnessRange
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDPwr
       _LEDsPwr
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startAbsMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startRelMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _timedActiveHeatOn
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _zeroPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
   _main_initialize
     _LED_setBrightnessRange
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _LEDsPwr
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _TMR0_Load8bitPeriod
     _TMR2_LoadPeriodRegister
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _drv_init
       _drv_reset
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _i2c_open
         _i2c1_driver_open
         _i2c1_driver_setBusCollisionISR
         _i2c1_driver_setI2cISR
         _mssp1_clearIRQ
       _i2c_setAddress
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _parseCmd
     _atoi
       ___wmul
       _isdigit
     _stricmp
       _toupper
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _TMR0_StopTimer
       _TMR0_Write8bitTimer
       i1_LEDsOn
         i1_send_2length_2bytes_IK
           i1_send_2bytes_latchless_IK
           i1_send_last_2bytes_IK
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
       _TMR2_StopTimer
       _TMR2_WriteTimer
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c1_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c1_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c1_driver_resetBus
     i1_do_I2C_RX *
       i1_do_I2C_DO_NACK_RESTART
         i1_i2c1_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP
         i1_i2c1_driver_sendNACK
       i1_i2c1_driver_getRXData
       i1_i2c1_driver_sendACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     i1_do_I2C_TX *
       i1_do_I2C_SEND_RESTART_READ
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_i2c1_driver_TXData
       i1_i2c1_driver_isNACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_TX_EMPTY *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_mssp1_setIRQ
       i1_returnReset *
       i1_returnStop *
     i1_i2c1_driver_isNACK *
     i1_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     39      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3B      11       73.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     1C      3C      13       75.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     163      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     163      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              10      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 30 14:34:34 2018

        i1send_last_2bytes_IK@topOrBottom 0073                              returnReset@p 0031  
        __end_of_TMR2_SetInterruptHandler 22FF                                         pc 0002  
            __end_ofdrv2665@drv_fifo_sine 11E8                    setLEDBrightnessRange@r 00B5  
           _do_I2C_SEND_RESTART$intlevel0 22B8                         ??_getMotionStatus 0049  
                             __CFG_CP$OFF 0000                              ___awdiv@sign 0037  
                    __size_of_do_I2C_IDLE 0009                       _do_I2C_SEND_RESTART 22B4  
                            _startAbsMove 24E4                      __size_of_do_I2C_RCEN 000A  
                     ___wmul@multiplicand 0033                    i1send_last_2bytes_IK@j 0079  
                    __end_ofi1_returnStop 21D5                              ___ftadd@exp1 00AE  
                            ___ftadd@exp2 00AD                               i1_do_I2C_RX 18D9  
                             i1_do_I2C_TX 1BE2                               __CFG_LVP$ON 0000  
                            ___ftadd@sign 00AC                                       l210 1D7F  
                                     l202 1FAD                                       l220 1DA2  
                                     l214 1D88                                       l231 1DC2  
                                     l303 1E68                                       l227 1DB7  
                                     l252 27C3                                       l500 2365  
                                     l237 1DCC                                       l229 1DB9  
                                     l254 27C5                                       l246 27A9  
                                     l415 26DF                                       l256 27CD  
                                     l279 15E5                                       l299 1E3A  
                                     l745 1E00                                       l761 19FB  
                                     _PR2 001E                              __CFG_CPD$OFF 0000  
                i1_do_I2C_DO_NACK_RESTART 2230              __size_of_i2c_masterOperation 0024  
                    _returnStop$intlevel0 226C                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 23F4                     __size_of_do_I2C_RESET 000B  
                                     wreg 0009                              _startRelMove 2491  
                         _setHeaterToggle 0815                     __end_ofi1_returnReset 21D7  
                         ?i1_mssp1_setIRQ 0070                        i1_i2c1_driver_stop 21E6  
         i2c1_driver_setBusCollisionISR@f 0031                                      S8716 2000  
                setLEDBrightnessRange@tOB 00B7                         setDrvGain@setGain 00B8  
                            ?_EUSART_Read 0070                                      l1091 0986  
                                    l1324 1C7A                                      l2053 2477  
                                    l1094 099C                                      l1088 0958  
                                    l1194 09E6                                      l1197 0A0D  
                                    l1480 0F13                                      l1482 0EF4  
                                    l1483 0F4A                                      l1580 24D1  
                                    l1477 0EF2                                      l1498 0FFF  
                                    l1763 143C                             i1returnStop@p 0070  
                                    l1764 1444                                      l1756 1429  
                                    l1847 08FF                                      l5312 1C96  
                                    l5330 1CBC                                      l5322 1C9E  
                                    l5306 1C8B                                      l1787 0786  
                                    l5324 1CAA                                      l7100 2272  
                                    l5334 1CC5                                      l5510 23D1  
                                    l6230 1AD6                                      l6222 1ABF  
                                    l7200 19E1                                      l6240 1AFA  
                                    l6216 1ABA                                      l5338 1CCD  
                                    l7106 2350                                      l8002 19B6  
                                    l7116 2303                                      l7060 22A8  
                                    l7124 237D                                      l7132 235B  
                                    l7140 2328                                      l8004 19C9  
                                    l6260 14CC                                      l6252 189C  
                                    l5700 1810                                      l7214 19FD  
                                    l7302 1D35                                      l8110 16F8  
                                    l6270 14F1                                      l6262 14D9  
                                    l6246 1871                                      l5702 1818  
                                    l6238 1AF9                                      l7232 277B  
                                    l7072 22B8                                      l7224 1A03  
                                    l7312 1D63                                      l7304 1D43  
                                    l6280 1526                                      l6248 1879  
                                    l5712 27D5                                      l7226 2775  
                                    l7066 22B0                                      l7090 22D8  
                                    l7162 2756                                      l7154 274A  
                                    l7170 1DD3                                      l7218 1A00  
                                    l8202 0AF1                                      l8130 1597  
                                    l5490 24CB                                      l6258 14D4  
                                    l5714 27DD                                      l5706 1836  
                                    l6610 0668                                      l6602 064A  
                                    l7228 2778                                      l7244 2782  
                                    l7148 22C8                                      l7084 22D0  
                                    l7316 1D6E                                      l7332 1986  
                                    l7420 0F9D                                      l7404 0F59  
                                    l8108 16DC                                      l8116 1702  
                                    l5652 08AB                                      l6276 14F9  
                                    l7350 1DA4                                      l7342 1D81  
                                    l7238 277F                                      l7078 22C0  
                                    l7158 2753                                      l7182 1DDF  
                                    l7174 1DD9                                      l7270 26FB  
                                    l7326 1960                                      l7262 26F4  
                                    l7430 0FAB                                      l7414 0F70  
                                    l7502 1A5C                                      l5670 08DB  
                                    l6286 1536                                      l6278 14FD  
                                    l5718 27FB                                      l6622 069C  
                                    l6614 0677                                      l6606 0659  
                                    l6550 0587                                      l6542 0569  
                                    l7096 226C                                      l7168 2759  
                                    l7328 196E                                      l7336 1991  
                                    l7248 26D4                                      l7424 0FA5  
                                    l7408 0F6A                                      l7432 0ED3  
                                    l8400 0DD7                                      l7512 0BF2  
                                    l5680 0902                                      l5672 08E9  
                                    l8072 0887                                      l8128 1571  
                                    l8136 15A1                                      l6632 06C7  
                                    l6624 06A2                                      l7178 1DDC  
                                    l7450 2677                                      l7522 0CAB  
                                    l7610 1615                                      l8154 1B8B  
                                    l8066 084C                                      l8090 09E3  
                                    l6618 0686                                      l6570 05D2  
                                    l6562 05B4                                      l6554 0596  
                                    l6546 0578                                      l6538 0555  
                                    l7196 1E21                                      l7188 1DE2  
                                    l7452 267D                                      l7620 179B  
                                    l8148 1B4F                                      l8180 2620  
                                    l8172 1BD8                                      l5684 0910  
                                    l8340 03BF                                      l8332 0378  
                                    l6628 06B4                                      l6486 257D  
                                    l7278 270C                                      l7294 1800  
                                    l7390 0F24                                      l7382 0EF6  
                                    l7606 15F9                                      l7614 161C  
                                    l8182 2628                                      l8166 1B9C  
                                    l5678 08F6                                      l8086 09C7  
                                    l8350 0423                                      l8342 03D3  
                                    l8334 038C                                      l5694 23E1  
                                    l6590 061D                                      l6582 05FF  
                                    l6574 05E1                                      l6566 05C3  
                                    l6558 05A5                                      l7456 2687  
                                    l7544 23F2                                      l8184 2630  
                                    l7560 1415                                      l7552 13FF  
                                    l7704 0706                                      l8360 04B8  
                                    l8352 0440                                      l8344 03E7  
                                    l8336 03A0                                      l8600 1478  
                                    l7378 0EEF                                      l8418 0E52  
                                    l8194 0A5B                                      l7714 071F  
                                    l8370 0501                                      l8362 04D5  
                                    l8354 045D                                      l8346 03FB  
                                    l8338 03B4                                      l6594 062C  
                                    l6586 060E                                      l6578 05F0  
                                    l8452 0158                                      l8444 00D4  
                                    l8188 2638                                      l7556 1406  
                                    l7732 074E                                      l7708 070E  
                                    l7804 0D5C                                      l8372 050C  
                                    l8364 04E0                                      l8356 047A  
                                    l8348 040F                                      l8604 14C0  
                                    l7494 1A3E                                      l8198 0AA4  
                                    l7566 142E                                      l7558 1410  
                                    l7750 0798                                      l7734 075A  
                                    l7726 073B                                      l8374 0514  
                                    l8366 04EB                                      l8358 049B  
                                    l6598 063B                                      l7680 1C6D  
                                    l7912 096E                                      l8472 0186  
                                    l8448 0146                                      l7568 1436  
                                    l7744 0776                                      l7736 075F  
                                    l7808 0D6A                                      l8368 04F6  
                                    l8376 051C                                      l8466 0177  
                                    l7754 07AA                                      l7746 0782  
                                    l7738 0763                                      l7764 07C5  
                                    l7780 0CEE                                      l7678 1C39  
                                    l8478 02BA                                      l8398 0DC7  
                                    l8718 19BB                                      l7694 2608  
                                    l7774 0CD5                                      l8590 14A7  
                                    l7792 0D36                                      l7952 167B  
            TMR0_Load8bitPeriod@periodVal 0031                                      l8578 147B  
                                    l7972 1951                                      l7796 0D44  
                                    l7956 168D                                      l7948 1633  
                                    l8588 14A2                                      l7990 19A3  
                                    l8598 1474                                      l7992 19A5  
                                    l7994 19AA                                      l7986 199E  
                         __end_of_LEDsPwr 2000                                      l7988 19A1  
                                    STR_1 2A4F                                      STR_2 2863  
                                    STR_3 2930                       drv_init@output_gain 00B6  
                                    STR_4 295E                                      STR_5 2903  
                                    STR_6 2A03                                      STR_7 2A59  
                                    STR_8 2A59                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    u5005 08DC                                      u4305 1CA1  
                                    u5035 08F7                                      u4325 1CAB  
                                    u4335 1CB5                                      u4345 1CBD  
                                    _PMD0 0911                                      _PMD1 0912  
                                    _PMD2 0913                                      u7015 0F93  
                                    _PMD3 0914                                      u7200 0C2A  
                                    _PMD4 0915                                      _PMD5 0916  
                                    u7114 1E48                                      u7210 0C3F  
                                    u8010 0860                                      u7115 1E46  
                                    u4555 24D2                                      u7220 0C40  
                                    u4565 24D7                                      u7215 0C3B  
                                    u8015 085C                                      u8120 155F  
                                    u8105 1547                                      u7170 0C11  
                                    u8050 16AF                                      u8130 1582  
                                    u7155 25E6                                      u7235 0C78  
                                    u7315 1424                                      u8043 0A01  
                                    u8300 0E23                                      u7180 0C12  
                                    u7500 17F5                                      u7405 1FBB  
                                    u8125 155B                                      u8310 0E24  
                                    u7190 0C29                                      u8150 1B6B  
                                    u9007 1A3F                                      u7175 0C0D  
                                    u8055 16AB                                      u7335 1431  
                                    u7415 1FE3                                      u8135 157E  
                                    u8080 16D1                                      u9017 2369  
                                    u8225 0AEA                                      u8410 013C  
                                    u8090 16EA                                      u6715 1D38  
                                    u7195 0C25                                      u8155 1B66  
                                    u8500 0264                                      u8420 013D  
                                    u8340 0E94                                      u8180 1BB8  
                                    u6805 197C                                      u7525 1C58  
                                    u8085 16CD                                      u8510 0265  
                                    u8350 0E9E                                      u7470 17D9  
                    ?_do_I2C_SEND_RESTART 0070                                      u6735 1D44  
                                    u6815 1987                                      u8503 0260  
                                    u8415 0138                                      u8335 0E7B  
                                    u7471 17D7                                      u8095 16E6  
                                    u7375 144B                                      u7295 140B  
                                    u4975 08B2                                      u8600 0339  
                                    u8360 0E9F                                      u7480 17DA  
                                    u6745 1D58                                      u8345 0E90  
                                    u8185 1BB3                                      u7705 0764  
                                    u8610 033A                                      u8530 0288  
                                    u8290 0E19                                      u7490 17F4  
                                    u6755 1D64                                      u8435 0156  
                                    u7395 1FA6                                      u6924 27B4  
                                    u8524 026D                                      u8460 01D3  
                                    u6925 27B2                                      u8525 026B  
                                    u8285 0E00                                      u7645 073C  
                                    u7805 0CFE                                      u6854 1D93  
                                    u8470 01D4                                      u8390 00F4  
                                    u6855 1D91                                      u8535 0284  
                                    u8463 01CF                                      u8455 0184  
                                    u8295 0E15                                      u7735 0777  
                                    u7815 0D10                                      u8560 02ED  
                                    u6785 1963                                      u7905 0962  
                                    u8545 02B8                                      u8385 00D2  
                                    u8570 02FF                                      u8490 01F8  
                                    u7930 164C                                      u6875 1DAE  
                                    u7915 0990                                      u8555 02CB  
                                    u8395 00F0                                      u7675 074F  
                                    u7835 0D45                                      u8580 0300  
                                    u8484 01DD                                      u8565 02E9  
                                    u8485 01DB                                      u7845 0D4C  
                                    u7925 1631                                      u8590 0327  
                                    u8495 01F4                                      u7935 1648  
                                    u8595 0323                                      u7875 0D6B  
                                    u7955 168B                                      u8907 1F4D  
                                    u7885 0D72                                      u8917 1F59  
                                    u7990 082A                                      u7975 1926  
                                    u8927 1F68                                      u8937 1F7C  
                                    u7995 0826                                      u8947 1F8F  
                                    u8957 09A8                                      u8967 0A04  
                                    u8977 1E5E                                      u8897 1462  
                                    _TMR2 001D                                      u8987 0965  
                                    u8997 0993                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0008                       ?i1_i2c1_driver_stop 0070  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _atoi 14CA  
                                    _main 145B                              ___ftpack@arg 0031  
               __size_of_do_I2C_SEND_STOP 0008                    __size_of_do_I2C_DO_ACK 0008  
                            ___ftpack@exp 0034                           _TMR0_StartTimer 21F5  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                         ??i1_do_I2C_DO_ACK 0070  
                           __CFG_BOREN$ON 0000                              ?_LED_getData 00B5  
                 i1_i2c1_driver_getRXData 21EC                     ?_do_I2C_SEND_ADR_READ 0070  
                           __CFG_BORV$LOW 0000           ??_i2c1_driver_clearBusCollision 0070  
                                    start 0050                          _setHeaterPreTime 1EDE  
                   __size_of_zeroPosition 0075                             _i2c_setBuffer 07EB  
                  LED_test_openshort@type 00B5                   ??_setLEDBrightnessRange 004C  
                           __CFG_CSWEN$ON 0000                             __CFG_MCLRE$ON 0000  
                            ___ftmul@cntr 00A4                  _send_2bytes_latchless_IK 27A0  
                         __end_of_i2c_ISR 271D                              ___ftmul@sign 00A5  
                      timedActiveHeatOn@t 00C0                  ??_do_I2C_DO_NACK_RESTART 0031  
                           i1_do_I2C_IDLE 2253                              ___fttol@exp1 00BC  
                           i1_do_I2C_RCEN 2262                              ___fttol@lval 00B8  
                 __end_of_TMR0_Initialize 242D                              _do_I2C_RESET 234C  
                          i1returnReset@p 0070              __size_of_TMR0_Write8bitTimer 0005  
          ??_TMR0_DefaultInterruptHandler 007C                             ?_EUSART_Write 0070  
          __size_of_OSCILLATOR_Initialize 000A             __end_of_OSCILLATOR_Initialize 2324  
                    ??i1_i2c1_driver_stop 0070                                     ?_atoi 0037  
                __end_of_i2c1_driver_open 234C                                     ?_main 0070  
                         __end_of___awdiv 1CD2                  __end_of_i2c1_driver_stop 2204  
                         __end_of___ftadd 07EB                                     STR_10 2920  
                                   STR_11 29AB                                     STR_20 2A59  
                                   STR_12 2910                                     STR_21 2A59  
                                   STR_13 2A59                                     STR_30 2863  
                                   STR_22 2A59                                     STR_14 2A4B  
                                   STR_23 2A59                                     STR_15 2A59  
                                   STR_31 2A4F                                     STR_32 2863  
                                   STR_24 2A59                                     STR_16 2A5C  
                                   STR_40 2A0B                                     STR_25 2A59  
                                   STR_17 2A59                                     STR_33 2A65  
                                   STR_41 29B6                             __CFG_WDTE$OFF 0000  
                                   STR_18 2A59                                     STR_26 2A5C  
                                   STR_34 2A24                                     STR_50 2865  
                                   STR_42 2828                      send_last_2bytes_IK@j 003A  
                                   STR_27 2A59                                     STR_19 2A59  
                                   STR_43 29FB                                     STR_35 2A63  
                                   STR_51 28FF                                     STR_44 29F3  
                                   STR_28 2A5C                                     STR_60 2A47  
                                   STR_52 28CB                                     STR_36 2847  
                                   STR_53 28CB                                     STR_45 2A0B  
                                   STR_29 2A4F                                     STR_61 2A45  
                                   STR_37 2881                                     STR_46 29B6  
                                   STR_62 2A26                                     STR_38 29FB  
                                   STR_70 29E3                                     STR_54 28DD  
                                   STR_63 2A30                                     STR_71 2A1A  
                                   STR_39 29F3                                     STR_55 28EE  
                                   STR_47 289B                                     STR_80 28C8  
                                   STR_56 2A11                                     STR_64 2A61  
                                   STR_48 29CA                                     STR_72 297B  
                                   STR_57 2A11                                     STR_65 29D3  
                                   STR_49 29C1                                     STR_73 29A0  
                                   STR_81 28B4                                     STR_58 2A3F  
                                   STR_74 2A21                                     STR_66 29DB  
                                   STR_59 2A43                                     STR_75 2A2B  
                                   STR_67 2994                                     STR_76 29EB  
                                   STR_68 296D                                     STR_77 2A13  
                                   STR_69 294F                                     STR_78 2A3A  
                                   STR_79 2A35                           __end_of___lldiv 1D77  
                         __end_of___ftmul 0D9D                           ___awdiv@divisor 0031  
                         __end_of___llmod 199A                           __end_of___fttol 0919  
                                   _T2CON 001F                __end_of_i2c1_driver_TXData 227A  
                          __CFG_DEBUG$OFF 0000                          __end_ofi1_LEDsOn 25DC  
                                   i1l210 1A6F                                     i1l220 1A8E  
                                   i1l214 1A77                                     i1l231 1AA8  
                                   i1l227 1AA0                                     i1l252 273C  
                                   i1l237 1AAF                                     i1l229 1AA1  
                                   i1l254 273D                                     i1l246 2725  
                                   i1l351 0013                                     i1l256 2744  
                                   i1l360 0043                                     i1l354 0022  
                                   i1l427 251C                                     i1l356 002F  
                                   i1l365 004B                                     i1l358 0039  
                                   i1l745 1C0E                                     i1l761 18F3  
                         ___awdiv@counter 0036                          __end_of_LEDpower 2A61  
                                   _OSCEN 091D                                     _TMR0H 0016  
                                   _TMR0L 0015                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                      __end_ofsin@coeff_a 294F                        __end_ofsin@coeff_b 2994  
       __size_of_TMR0_SetInterruptHandler 0009             i1send_2length_2bytes_IK@data1 0020  
           i1send_2length_2bytes_IK@data2 0022                 ?_TMR0_SetInterruptHandler 0031  
                             i2c_open@ret 0034                          __end_of_TMR0_ISR 23AA  
                        __end_of_TMR2_ISR 23B7                           __end_of_execCmd 052F  
                      __size_ofi1_i2c_ISR 0020                             ___awtoft@sign 003E  
              __end_of_i2c1_driver_isNACK 23C4                           __end_of_dpowers 2828  
                          _WDT_Initialize 2234                                     _errno 0162  
                       _timedActiveHeatOn 09A2                           __end_of_isdigit 23D3  
            ?i1_do_I2C_SEND_RESTART_WRITE 0070                ?_do_I2C_SEND_RESTART_WRITE 0070  
                           ___ftpack@sign 0035                                     atoi@a 003C  
                                   atoi@s 003E                                     _putch 227A  
                   ??_do_I2C_SEND_RESTART 0031                 send_2bytes_latchless_IK@j 0037  
                       ?i1_mssp1_clearIRQ 0070    __end_of_i2c1_driver_setBusCollisionISR 2311  
 __size_of_i2c1_driver_setBusCollisionISR 0009            _i2c1_driver_setBusCollisionISR 2308  
                            _zeroPosition 1623                                     pclath 000A  
                      setDrvPiezoOnTime@t 00BD                   __size_of_mssp1_clearIRQ 0003  
                    i1_i2c1_driver_TXData 224E                        ?_timedActiveHeatOn 00B5  
      __end_ofi1_send_2bytes_latchless_IK 2746                i1_send_2bytes_latchless_IK 271D  
                    setLEDPwr@topOrBottom 00B7                            _i2c_setAddress 22DC  
                  ?_do_I2C_SEND_ADR_WRITE 0070                                     status 0003  
                      ??i1_mssp1_clearIRQ 0070                                     wtemp0 007E  
                         _TMR2_StartTimer 21F8                           __end_of_stricmp 18A2  
        __size_of_TMR2_LoadPeriodRegister 0005                           __end_of_strcspn 2800  
                         __end_of_toupper 23E3                         ??_main_initialize 00BD  
                          ?_i2c_setBuffer 0031                       _send_last_2bytes_IK 1D77  
                    i1_i2c1_driver_isNACK 236D                         _setHeaterPostTime 1CD2  
                     ??_timedActiveHeatOn 00BB                             _fsmStateTable 0220  
                         __initialization 0052            __size_ofi1_do_I2C_SEND_RESTART 0004  
                              _i2c_poller 1800             __end_ofi1_do_I2C_SEND_RESTART 2224  
                          _remainingSteps 013E                              __end_of_atoi 153B  
                              _i2c_status 0120                            ?i1_do_I2C_IDLE 0070  
                            __end_of_main 14CA                        ?_setHeaterPostTime 00BD  
                          ?i1_do_I2C_RCEN 0070                 LED_readConfig@topOrBottom 00C5  
              __end_ofi1_do_I2C_SEND_STOP 2228                          __end_of_i2c_open 1B48  
                          ??_EUSART_Write 0031                   __end_of_TMR2_Initialize 2406  
             ?_INTERRUPT_InterruptManager 0070                             ?_LED_testComm 00C9  
                 __end_of_setHeaterToggle 0892                            i1_do_I2C_RESET 2286  
                           _do_I2C_DO_ACK 22C4                                    ??_atoi 0039  
                _TMR2_SetInterruptHandler 22F6                                    ??_main 00D8  
                           ___fttol@sign1 00B7                       ??_setHeaterPostTime 004D  
           __size_of_i2c1_driver_sendNACK 0004                           _TMR2_WriteTimer 2249  
                    ?_send_last_2bytes_IK 0031                             ?_drv_write_DC 00B8  
                               ??_LEDsPwr 0048                    __end_of_WDT_Initialize 2238  
           __size_of_i2c1_driver_resetBus 0001                               drv_read@reg 004B  
                      setHeaterPostTime@t 00BD                 __end_of_timedActiveHeatOn 0A3A  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                              ?_setMoveMask 00B5  
                      setHeaterToggle@num 00B5                          _piezo_on_time_ms 00E9  
                 __end_of_TMR0_StartTimer 21F8                             _drv_fifo_sine 1000  
                        ___llmod@dividend 0043                      __size_of_getMoveMask 004D  
                        ___awdiv@dividend 0033                          __end_of___awtoft 261F  
                                  _ANSELA 018C                                    ?_putch 0070  
                                  _ANSELB 018D                                    _ANSELC 018E  
                  __end_of_i2c_setAddress 22E4                          __end_of___ftpack 145B  
                      __CFG_RSTOSC$HFINT1 0000                                    _T0CON0 0017  
                                  _T0CON1 0018                   ?i1_do_I2C_SEND_ADR_READ 0070  
                    drv2665@drv_fifo_sine 10F4                     ?i1_i2c1_driver_TXData 0070  
                                  _RC1REG 0199                                    _RC1STA 019D  
                                  _ODCONA 028C                                    _ODCONB 028D  
                                  _ODCONC 028E                                    i1l6302 2253  
                                  i1l5186 1A8F                                    i1l5178 1A71  
                                  i1l6326 2262                                    i1l8300 13CF  
                                  i1l6292 2286                                    i1l8204 2294  
                                  i1l8212 228D                                    i1l8220 2228  
                                  i1l6462 24B1                                    i1l8310 13D6  
                                  i1l8230 2649                 ??i1_i2c1_driver_getRXData 0070  
                                  i1l8304 13D2                                    i1l8240 264F  
                                  i1l8234 264C                                    i1l8226 2642  
                                  i1l8250 1BEB                                    i1l8242 1BE2  
                                  i1l8316 13D9                                    i1l8260 1BF1  
                                  i1l8500 256B                                    i1l8254 1BEE  
                                  i1l8246 1BE8                                    i1l8272 18D9  
                                  i1l8290 18F8                                    i1l8268 1C2A  
                                  i1l7830 2218                                    i1l8286 18F5  
                                  i1l8296 18FB                                    i1l8298 13CC  
                                  i1l7842 2220                                    i1l7836 221C  
                                  i1l7860 2230                                    i1l8492 255B  
                                  i1l7870 21D5                                    i1l7854 222C  
                                  i1l7848 2224                                    i1l7866 21D3  
                                  _LEDsOn 25DC                                    u512_25 25C5  
           ??i1_do_I2C_SEND_RESTART_WRITE 0070                                    u392_24 1A80  
                                  u392_25 1A7E                                    u394_25 1A98  
                                  _OSCFRQ 091F                                    u399_24 272E  
                                  u399_25 272C                    ??_do_I2C_SEND_ADR_READ 0032  
                         drv_write_DC@val 00B8                                    _TX1REG 019A  
                    __size_of_getPosition 003F                                    _WDTCON 0097  
                                  _TX1STA 019E                                 ??_i2c_ISR 0036  
             __size_of_LED_test_openshort 0075                 __end_of_setHeaterPostTime 1D24  
                   ?i1_i2c1_driver_isNACK 0070                            __CFG_PWRTE$OFF 0000  
           LED_test_openshort@topOrBottom 00B7                     _i2c1_driver_getRXData 2207  
                     LED_getData@readData 00BF                   __size_of_LED_readConfig 0024  
                     _do_I2C_RX$intlevel0 19E1                     __size_ofi1_returnStop 0002  
             __end_of_do_I2C_DO_NACK_STOP 22D4                         __end_ofi1_i2c_ISR 257B  
                                  ___wmul 24C8                                 ??___awdiv 0035  
   __end_of_i2c1_driver_clearBusCollision 21E0    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 21DD                                 ??___ftadd 0049  
                          __CFG_STVREN$ON 0000                                    _doMove 0919  
                               ??___lldiv 0039                                 ??___ftmul 0045  
                               ??___llmod 0047                                 ??___fttol 00B3  
             i1send_2bytes_latchless_IK@j 0076           __size_of_do_I2C_DO_NACK_RESTART 0008  
                       startAbsMove@steps 00B5                          __end_of_drv_init 1F9C  
                        __end_of_drv_read 1A68                    __end_ofi1_do_I2C_RESET 228D  
                        __end_of_drv_sine 13CC                   ?_send_2length_2bytes_IK 003C  
                     _EUSART_Transmit_ISR 2501                            ??_LED_testComm 004C  
                        ?_TMR0_Initialize 0070                          ___awdiv@quotient 0038  
                          ?_do_I2C_DO_ACK 0070                          __end_of_parseCmd 06D1  
                                  _printf 0ECE                                    _strchr 2477  
                                  _strtok 1AB1                                    _strspn 180B  
                               ??_execCmd 004E                     ___ftmul@f3_as_product 00A1  
                  i2c1_driver_setI2cISR@f 0031                     i2c_setAddress@address 0032  
                   ??_send_last_2bytes_IK 0036               __end_of_i2c1_driver_sendACK 223C  
                          _PMD_Initialize 229C            __end_of_do_I2C_DO_ADDRESS_NACK 2771  
                          ??_drv_write_DC 00BC                                 ??_isdigit 0031  
                         ?_WDT_Initialize 0070               __end_of_i2c1_driver_restart 2201  
                            ?_returnReset 0031                   timedActiveHeatOn@onTime 00B5  
           _do_I2C_DO_NACK_STOP$intlevel0 22D0                     _i2c1_driver_setI2cISR 2311  
             __end_of_i2c1_driver_startRX 2207                        LEDsPwr@topOrBottom 0046  
       __size_ofi1_do_I2C_DO_ADDRESS_NACK 0024            __end_ofi1_do_I2C_SEND_ADR_READ 229C  
                 __end_of_TMR2_StartTimer 21FB                   timedActiveHeatOn@topOrB 00B9  
TMR2_SetInterruptHandler@InterruptHandler 0031  TMR0_SetInterruptHandler@InterruptHandler 0031  
               ?i1_do_I2C_DO_ADDRESS_NACK 0070                                 ??_stricmp 0035  
                               ??_strcspn 003A                                 ??_toupper 0031  
                    ?_EUSART_Transmit_ISR 0070                           ?_i2c_setAddress 0070  
                       i1_do_I2C_TX_EMPTY 13CC                      __size_of_EUSART_Read 0020  
                       _SYSTEM_Initialize 0800            __size_ofi1_send_last_2bytes_IK 0049  
                 __end_of__initialization 00BC             __end_ofi1_send_last_2bytes_IK 1AB1  
                         ??_i2c_setBuffer 0035            _do_I2C_SEND_ADR_READ$intlevel0 237D  
                        _do_I2C_SEND_STOP 22BC                              i1_returnStop 21D3  
                              ___ftadd@f1 00A6                                ___ftadd@f2 00A9  
                         _getMotionStatus 261F                     i1_do_I2C_DO_NACK_STOP 222C  
                      __size_of_do_I2C_RX 0044                        __size_of_do_I2C_TX 0059  
                      ?i1_do_I2C_TX_EMPTY 0070                        ?_SYSTEM_Initialize 0070  
                      __size_of_doAbsMove 02B0                          _moveVector_downs 00E1  
              __end_of_mssp1_IRQisEnabled 2338                       _i2c_masterOperation 2666  
                __size_of_do_I2C_TX_EMPTY 002F                                ___awtoft@c 0039  
                               ?i1_LEDsOn 0027                           ??i1_do_I2C_IDLE 0070  
                         ??i1_do_I2C_RCEN 0070                                ___ftmul@f1 003F  
                              ___ftmul@f2 0042                __end_of_mssp1_waitForEvent 236D  
                    __size_of_LED_getData 005B                                ___fttol@f1 00AF  
                             ?_i2c_poller 0070                            __pcstackCOMMON 0070  
              ??i1_do_I2C_DO_NACK_RESTART 0070                       _do_I2C_TX$intlevel0 1DD3  
                     ??i1_do_I2C_TX_EMPTY 0070            __end_of_send_2length_2bytes_IK 245D  
                            __pidataBANK0 2240                              __pidataBANK1 2280  
                            __pidataBANK2 0002                              __pidataBANK4 259B  
                     ??_SYSTEM_Initialize 0033                                _absCommand 004E  
                               ?_TMR0_ISR 0070                                 ?_TMR2_ISR 0070  
                      __size_of_doRelMove 0131                   __end_of_TMR2_WriteTimer 224E  
                   i1_i2c1_driver_sendACK 2210                     i1i2c1_driver_TXData@d 0070  
                         ?i1_do_I2C_RESET 0070                             __end_of_putch 2280  
                        ?_TMR2_Initialize 0070                     i1_i2c1_driver_restart 21E3  
       __size_ofi1_send_2length_2bytes_IK 0018                    __end_of_PMD_Initialize 22A4  
                        ?_setHeaterToggle 00B5                 ?i1_send_2length_2bytes_IK 0020  
                      __size_of_getActive 004D                              ?i1_do_I2C_RX 0070  
                            ?i1_do_I2C_TX 0070                     i1_i2c1_driver_startRX 21E9  
                        ??i1_mssp1_setIRQ 0070                      ?_i2c_masterOperation 0070  
            ??i1_do_I2C_SEND_RESTART_READ 0070                        __size_of_commCheck 00C7  
                __end_of_setHeaterPreTime 1F39                              LED_getData@j 00C3  
              __size_of_timedActiveHeatOn 0098                           i1_do_I2C_DO_ACK 2228  
             __end_of_TMR0_Load8bitPeriod 225D                 __end_ofi1_do_I2C_TX_EMPTY 13F6  
                        ?_TMR0_StartTimer 0070                    _do_I2C_DO_NACK_RESTART 22D4  
                  ??i1_i2c1_driver_TXData 0070                            _do_I2C_TX$1131 0034  
               __end_of_SYSTEM_Initialize 0815                     ??_EUSART_Transmit_ISR 0070  
                                 ??_putch 0033                            _mssp1_clearIRQ 220D  
                              __pbssBANK0 004E                                __pbssBANK1 00D9  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                 __size_of_calcHeaterPins 0079                       _TMR0_Write8bitTimer 2244  
              ??_send_2bytes_latchless_IK 0033                      __end_of_EUSART_Write 26F7  
                                 ?_LEDsOn 0044                            _moveVector_ups 00E5  
                 _TMR2_LoadPeriodRegister 225D                                 ?_i2c_open 0070  
                 drv_write_DC@duration_ms 00BA                                _activeMask 00DD  
                ??i1_i2c1_driver_sendNACK 0070                           drv2665@drv_sine 11E8  
                      __size_of_drv_reset 000A                    ??i1_i2c1_driver_isNACK 0070  
              __size_of_setHeaterPostTime 0052                        __size_of_drv_write 0024  
             __size_of_EUSART_Receive_ISR 001C                        __size_of_setLEDPwr 001E  
                  ?_i2c1_driver_getRXData 0070                  ??i1_i2c1_driver_resetBus 0070  
                            drv_read@buff 004C                                ??i1_LEDsOn 002D  
                   _do_I2C_IDLE$intlevel0 2303                            _SSP1DATPPSbits 0E21  
            __size_of_i2c_busCollisionISR 0003                                __pmaintext 145B  
                              doAbsMove@i 00C8                             ??_do_I2C_IDLE 0031  
                      __size_of_setActive 0076                             ??_do_I2C_RCEN 0031  
        __end_of_TMR0_SetInterruptHandler 22F6                   __size_of_TMR0_StopTimer 0003  
          __size_of_setLEDBrightnessRange 001E                                   ?___wmul 0031  
           __end_of_setLEDBrightnessRange 253D                                ??_TMR0_ISR 007C  
                         __CFG_PPS1WAY$ON 0000                                _cmd_struct 01B0  
                              ??_TMR2_ISR 0071                                   ?_doMove 00BF  
                         ??_do_I2C_DO_ACK 0031                                __pintentry 0004  
                       startRelMove@steps 00B5                     setHeaterToggle@topOrB 00B7  
                    ?_TMR0_Write8bitTimer 0070                       i2c_setBuffer@buffer 0031  
                               ?___awtoft 0039                                 ?___ftpack 0031  
                          _SSP1CLKPPSbits 0E20                                   ?_printf 00A0  
                         ?_PMD_Initialize 0070                                _fifo_check 23E3  
                                 ?_strchr 0031            ?_i2c1_driver_clearBusCollision 0070  
                                 ?_strtok 003F                                   ?_strspn 0038  
                   ??_i2c_masterOperation 0037                         ?_i2c1_driver_open 0070  
                       __end_of_do_I2C_RX 1A21                         __end_of_do_I2C_TX 1E28  
                       ?_i2c1_driver_stop 0070                             _eusartRxCount 0056  
                       __end_of_doAbsMove 0370                  ?i1_do_I2C_SEND_ADR_WRITE 0070  
                                 _SP1BRGH 019C                                   _SP1BRGL 019B  
                  ?_i2c1_driver_setI2cISR 0031                                   _LEDsPwr 1F9C  
                      ??_i2c1_driver_open 0031                        ??_i2c1_driver_stop 0031  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                           ?_mssp1_setIRQ 0070                           _main_initialize 0B01  
                                 _NVMADRH 0892                                   _NVMADRL 0891  
                                 _NVMDATH 0894                                   _OSCTUNE 091E  
                                 _NVMDATL 0893                                   _NVMCON2 0896  
                                 _SSP1ADD 0212                                   _SSP1BUF 0211  
                  __end_of_mssp1_clearIRQ 2210                                   _SSP1MSK 0213  
                 __end_of_getMotionStatus 2642                   __size_of_TMR2_StopTimer 0003  
                     __size_of_i2c_poller 000B                          ?_TMR2_StartTimer 0070  
                 ??_do_I2C_SEND_ADR_WRITE 0032       _do_I2C_SEND_RESTART_WRITE$intlevel0 22B0  
                       __end_of_doRelMove 0ECE               ??_do_I2C_SEND_RESTART_WRITE 0031  
                    __size_of_setMoveMask 0073                    ?i1_do_I2C_DO_NACK_STOP 0070  
                      _i2c1_driver_TXData 2274                      __end_of_LED_testComm 1800  
                              ??_i2c_open 0033                                 ?_drv_init 00B6  
                               ?_drv_read 00B5                           __size_of_LEDsOn 0021  
                      _i2c1_driver_i2cISR 0168               ?i1_send_2bytes_latchless_IK 0070  
       LED_setBrightnessRange@topOrBottom 0046                         __end_of_getActive 1B95  
                                 _i2c_ISR 26F7                                 ?_parseCmd 0045  
                       __end_of_commCheck 0B01                      __end_of_drv_write_DC 1C80  
                   _returnReset$intlevel0 2272                     _do_I2C_RCEN$intlevel0 2328  
                      _i2c1_driver_isNACK 23B7                       ?_i2c1_driver_TXData 0070  
                            drv_write@reg 004B                ??_TMR2_SetInterruptHandler 0033  
                          _LED_readConfig 26AE          _do_I2C_DO_ADDRESS_NACK$intlevel0 274A  
                      __end_of_TMR0_RANGE 2A59                        __end_of_TMR2_RANGE 2A56  
                  ?i1_i2c1_driver_sendACK 0070                                doRelMove@j 00D6  
                  __size_ofi1_returnReset 0002                                   ___awdiv 1C80  
                                 ___ftadd 06D1                                   ___lldiv 1D24  
               __size_ofi1_mssp1_clearIRQ 0003                           __size_of___wmul 001C  
                                 ___ftmul 0CBC                                   ___llmod 1957  
                                 ___fttol 0892                     ??_TMR0_Write8bitTimer 0070  
                         __size_of_doMove 0089                    ?i1_i2c1_driver_restart 0070  
                        ?_TMR2_WriteTimer 0070                         ??_do_I2C_TX_EMPTY 0031  
                     ?_i2c1_driver_isNACK 0070                                   _cmdRead 0164  
                  ?i1_i2c1_driver_startRX 0070                                ??___awtoft 003C  
                              ??___ftpack 0036                   __end_ofi1_do_I2C_DO_ACK 222C  
                                 __ptext1 052F                                   __ptext2 1AB1  
                                 __ptext3 180B                                   __ptext4 27D0  
                                 __ptext5 2477                                   __ptext6 186E  
                                 __ptext7 23D3                                   __ptext8 14CA  
                                 __ptext9 23C4               __size_ofi1_i2c1_driver_stop 0003  
                     __end_of_do_I2C_IDLE 2308                           __size_of_printf 0132  
                     __end_of_do_I2C_RCEN 232E                         __end_of_drv_reset 2342  
                                 _execCmd 0370                           __size_of_strchr 001A  
                         __size_of_strtok 004B                           __size_of_strspn 0030  
                       __end_of_drv_write 26AE                                   _dpowers 2800  
                ??_LED_setBrightnessRange 00A0                     _OSCILLATOR_Initialize 231A  
                                 _readIdx 0052                                 _T2CONbits 001F  
                                 doMove@t 00C2                                   _isdigit 23C4  
                          setActive@onOff 00B7                         __end_of_setLEDPwr 255B  
             __end_of_do_I2C_SEND_RESTART 22BC                            ??_mssp1_setIRQ 0031  
                    ??_i2c1_driver_TXData 0031                  ??_PIN_MANAGER_Initialize 0031  
                  i2c_masterOperation@ret 0039                        i1_do_I2C_SEND_STOP 2224  
                 __end_ofdrv2665@drv_sine 12DA                         __end_of_setActive 170E  
                         ?_mssp1_clearIRQ 0070                _do_I2C_SEND_STOP$intlevel0 22C0  
              __size_ofi1_do_I2C_TX_EMPTY 002A                 ??_TMR2_LoadPeriodRegister 0031  
                _do_I2C_SEND_RESTART_READ 22A4                __size_of_SYSTEM_Initialize 0015  
                              _setDrvGain 199A                         setActive@probeNum 00B5  
                                 clrloop0 2386                                _setDrvPeak 2406  
                                 _stricmp 186E                                   _strcspn 27D0  
                                 _toupper 23D3                      __size_of_returnReset 0006  
                    end_of_initialization 00BC                      drv_init@idle_timeout 00B8  
                    ??_i2c1_driver_isNACK 0031                                _second_top 015E  
                              getActive@i 00B7               TMR0_Write8bitTimer@timerVal 0070  
                              ??_drv_init 00BA                                ??_drv_read 0049  
                            setLEDPwr@pwr 00B5                                   init_ram 2391  
            __end_of_i2c1_driver_sendNACK 2240                       ?i1_do_I2C_SEND_STOP 0070  
                                 initloop 2392           __size_ofi1_i2c1_driver_sendNACK 0004  
                              ??_parseCmd 0046                    __end_of_LED_readConfig 26D2  
                       _EUSART_Initialize 245D              __end_of_i2c1_driver_resetBus 21D3  
                         ___lldiv@divisor 0031           __size_ofi1_i2c1_driver_resetBus 0001  
                         ___lldiv@counter 003E                        ?_EUSART_Initialize 0070  
                                 printf@c 00B4                                   printf@f 00A0  
                              _motionType 0055                 _do_I2C_SEND_RESTART_WRITE 22AC  
                       LEDsOn@topOrBottom 0048                     i1_do_I2C_SEND_RESTART 2220  
        __end_ofi1_do_I2C_DO_ADDRESS_NACK 2666           __end_ofi1_do_I2C_SEND_ADR_WRITE 2294  
                     ??_EUSART_Initialize 0031                          ??_WDT_Initialize 0031  
                               i1_i2c_ISR 255B                      ??i1_do_I2C_SEND_STOP 0070  
                                 strspn@i 003C                                _returnStop 2268  
                 __end_of_main_initialize 0BDE                  _TMR0_SetInterruptHandler 22ED  
                             ?_fifo_check 0070                                 _PORTCbits 000E  
                __end_of_do_I2C_SEND_STOP 22C4        __end_ofi1_do_I2C_SEND_RESTART_READ 221C  
              i1_do_I2C_SEND_RESTART_READ 2218                      __size_ofi1_do_I2C_RX 003F  
                    __size_ofi1_do_I2C_TX 004E                          ??_i2c_setAddress 0031  
                           ??_getMoveMask 0049                     __size_of_EUSART_Write 0025  
                           i1_returnReset 21D5                               returnStop@p 0031  
                        ?_getMotionStatus 00B5                             ??_getPosition 0049  
                     LED_test_openshort@j 00BA                          __CFG_FEXTOSC$OFF 0000  
                          _calcHeaterPins 170E          __end_of_send_2bytes_latchless_IK 27D0  
              __end_of_LED_test_openshort 1623                   TMR2_WriteTimer@timerVal 0070  
                               _RXPPSbits 0E24                 __end_of_EUSART_Initialize 2477  
          send_last_2bytes_IK@latch_start 0033               LED_setBrightnessRange@range 0044  
                          __end_of_LEDsOn 25FD          __end_ofi1_send_2length_2bytes_IK 2445  
                         ?_LED_readConfig 00C5             __size_of_do_I2C_SEND_ADR_READ 000C  
                        ??i1_do_I2C_RESET 0070                               ___ftmul@exp 00A0  
                            ??_i2c_poller 0037                            _TMR0_StopTimer 21D7  
                             _do_I2C_IDLE 22FF                               _do_I2C_RCEN 2324  
                       __size_ofi1_LEDsOn 0021                   LED_testComm@topOrBottom 00C9  
    __end_of_TMR2_DefaultInterruptHandler 22ED     __size_of_TMR2_DefaultInterruptHandler 0009  
            _TMR2_DefaultInterruptHandler 22E4               __end_of_send_last_2bytes_IK 1DCF  
                           ?_startAbsMove 00B5                            __end_of___wmul 24E4  
                          __end_of_doMove 09A2                              _EUSART_Write 26D2  
                       __size_of_TMR0_ISR 000D                                ?i1_i2c_ISR 0070  
                       __size_of_TMR2_ISR 000D                        _mssp1_IRQisEnabled 232E  
                  i1_i2c1_driver_sendNACK 2214                          ?i1_do_I2C_DO_ACK 0070  
                  ?_OSCILLATOR_Initialize 0070              __size_of_do_I2C_DO_NACK_STOP 0008  
        TMR2_LoadPeriodRegister@periodVal 0031                            __end_of_printf 1000  
                      _mssp1_waitForEvent 2362       __size_ofi1_send_2bytes_latchless_IK 0029  
                  i1_i2c1_driver_resetBus 21D1                            __end_of_strchr 2491  
         __size_of_LED_setBrightnessRange 00DE                   ?_do_I2C_DO_NACK_RESTART 0070  
                          __end_of_strtok 1AFC                            __end_of_strspn 183B  
                       setHeaterPreTime@t 00BD                       start_initialization 0052  
                           ?_startRelMove 00B5                         ?_setHeaterPreTime 00BD  
                     _i2c_busCollisionISR 21E0                  __size_of_TMR0_Initialize 0014  
         __size_of_PIN_MANAGER_Initialize 0033                       ?_mssp1_IRQisEnabled 0070  
                          ?i1_returnReset 0070                  ?i1_i2c1_driver_getRXData 0070  
                  __end_of_calcHeaterPins 1787                     __size_of_LED_testComm 0079  
                          _TMR2_StopTimer 21DA                             ??_EUSART_Read 0031  
     __end_ofi1_do_I2C_SEND_RESTART_WRITE 2220               i1_do_I2C_SEND_RESTART_WRITE 221C  
                            _first_bottom 015A                        ??_setHeaterPreTime 00BF  
                             ?_setDrvGain 00B5                               ?_setDrvPeak 00B5  
                     ?_mssp1_waitForEvent 0070                             _second_bottom 0152  
                             putch@txData 0033                        __end_of_i2c_poller 180B  
            __size_of_i2c1_driver_sendACK 0004                           i2c_open@address 0035  
                     __end_of_getMoveMask 1BE2                   i2c_setBuffer@bufferSize 0033  
                                ??_LEDsOn 004A                   ??_i2c1_driver_getRXData 0031  
                   __size_of_drv_write_DC 0050              __size_of_i2c1_driver_restart 0003  
            __size_of_i2c1_driver_startRX 0003                           ___llmod@divisor 003F  
                           ??_LED_getData 00B9                       __size_of_fifo_check 0011  
                         ___llmod@counter 0048                     __end_of_i2c_setBuffer 0800  
                     __end_of_getPosition 1957                         __size_of_i2c_open 004C  
                  __end_of_TMR0_StopTimer 21DA                       _heater_post_time_ms 00EB  
                   i1_send_last_2bytes_IK 1A68       LED_setBrightnessRange@LED_configReg 0048  
                    ?_i2c_busCollisionISR 0070                          __CFG_LPBOREN$OFF 0000  
                    __end_of_mssp1_setIRQ 220D                              _drv_peak_val 016E  
                    ??_mssp1_IRQisEnabled 0031                          i1_do_I2C_TX$1131 0073  
                              LEDsPwr@pwr 0044                          ??_PMD_Initialize 0031  
                   __end_ofi1_do_I2C_IDLE 2258                     __end_ofi1_do_I2C_RCEN 2268  
                                ??___wmul 0035                    ?i1_do_I2C_SEND_RESTART 0070  
                    ??_mssp1_waitForEvent 0031                                  ??_doMove 00C1  
                        i1_mssp1_clearIRQ 21F2                            ??_startAbsMove 0049  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 005A  
                             __pdataBANK1 00E9                               __pdataBANK2 016E  
                             __pdataBANK4 0220                 _do_I2C_TX_EMPTY$intlevel0 2775  
           ?_TMR2_DefaultInterruptHandler 0070                               ?_returnStop 0031  
                       _setDrvPiezoOnTime 1E83                              _LED_testComm 1787  
                                ??_printf 00A6                   ??_i2c1_driver_setI2cISR 0033  
                        ?_main_initialize 0070                                  ??_strchr 0035  
          i1send_2bytes_latchless_IK@data 0070            __end_of_do_I2C_DO_NACK_RESTART 22DC  
                                ??_strtok 0041                                  ??_strspn 003A  
                    _i2c1_driver_sendNACK 223C                         __size_of___awtoft 0022  
                       __size_of___ftpack 0065                        ?_setDrvPiezoOnTime 00BD  
                             __pbssBIGRAM 2790               __end_of_EUSART_Transmit_ISR 251F  
                          ??_startRelMove 0049                  i1_do_I2C_DO_ADDRESS_NACK 2642  
                  __end_of_TMR2_StopTimer 21DD                            setDrvGain@gain 00B5  
                             __pbssCOMMON 007D                                  ?_LEDsPwr 0044  
                               ___latbits 0003                      _i2c1_driver_resetBus 21D2  
                            _drv_write_DC 1C30                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                             __pcstackBANK4 0240  
                         fifo_check@reply 00B7         __size_ofi1_do_I2C_DO_NACK_RESTART 0004  
                __size_of_TMR2_Initialize 0012                                 _do_I2C_RX 19DD  
               ?i1_do_I2C_DO_NACK_RESTART 0070                                 _do_I2C_TX 1DCF  
                         ?_calcHeaterPins 0070                   ??i1_do_I2C_DO_NACK_STOP 0070  
                               _doAbsMove 00C0                  __size_of_setHeaterToggle 007D  
                            _isdigit$2150 0031                       ??_setDrvPiezoOnTime 00BF  
                           ?_zeroPosition 00B5                             LEDsOn@LEDpins 0044  
          __size_of_do_I2C_SEND_ADR_WRITE 000B             __size_ofi1_i2c1_driver_TXData 0005  
              __end_of_EUSART_Receive_ISR 24C8             __end_of_do_I2C_SEND_ADR_WRITE 2362  
              __size_of_EUSART_Initialize 001A                 __size_of_i2c1_driver_open 000A  
                              sin@coeff_a 2940                                sin@coeff_b 2988  
                            doMove@t_1562 00C4                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070           _do_I2C_SEND_ADR_WRITE$intlevel0 235B  
        __size_ofi1_do_I2C_SEND_ADR_WRITE 0007                       __end_of_EUSART_Read 259B  
            __size_of_TMR0_Load8bitPeriod 0005                                 _doRelMove 0D9D  
                         _do_I2C_TX_EMPTY 2771                         parseCmd@cmdString 0047  
                   _TMR0_InterruptHandler 016C                                 __pnvBANK0 005E  
                               __pnvBANK2 016C                                 __pnvBANK3 01D9  
                  _LED_setBrightnessRange 0BDE                   ??i1_i2c1_driver_sendACK 0070  
                __size_of_TMR0_StartTimer 0003                         __size_of_drv_init 0063  
                       __size_of_drv_read 0047                           ?_TMR0_StopTimer 0070  
                   ??_i2c_busCollisionISR 0070             __size_ofi1_i2c1_driver_isNACK 000C  
                  _PIN_MANAGER_Initialize 183B                   ??i1_i2c1_driver_restart 0070  
                               _getActive 1B48                         __size_of_parseCmd 01A2  
                            setDrvPeak@pk 00B5                       __end_of_drv_address 2A68  
                    EUSART_Read@readValue 0032                   ??i1_i2c1_driver_startRX 0070  
                          ??_do_I2C_RESET 0031                  i1_send_2length_2bytes_IK 242D  
                     __end_of_LED_getData 1E83                                  ?___awdiv 0031  
                               __ptext100 1C80                                 __ptext101 170E  
                               __ptext110 23F4                                 __ptext102 21F8  
                               __ptext111 22F6                                 __ptext103 21F5  
                               __ptext120 255B                                 __ptext112 2419  
                               __ptext104 25DC                                 __ptext121 21F2  
                               __ptext113 22ED                                 __ptext105 2445  
                               __ptext130 2294                                 __ptext122 18D9  
                               __ptext114 229C                                 __ptext106 1D77  
                               __ptext131 2224                                 __ptext123 1BE2  
                               __ptext115 183B                                 __ptext107 27A0  
                               __ptext140 224E                                 __ptext132 2220  
                               __ptext124 2642                                 __ptext116 231A  
                               __ptext108 0800                                 __ptext141 21EC  
                               __ptext133 221C                                 __ptext125 2230  
                               __ptext117 245D                                 __ptext109 2234  
                                ?___ftadd 00A6                                 __ptext150 21E0  
                               __ptext142 2214                                 __ptext134 2218  
                               __ptext126 222C                                 __ptext118 257B  
                               __ptext151 21DD                                 __ptext143 21D1  
                               __ptext135 2253                                 __ptext127 2228  
                               __ptext160 1A68                                 __ptext152 23AA  
                               __ptext144 21E9                                 __ptext136 2286  
                               __ptext128 2262                                 __ptext161 271D  
                               __ptext153 22E4                                 __ptext145 21D5  
                               __ptext137 13CC                                 __ptext129 228D  
                               __ptext162 2244                                 __ptext154 2249  
                               __ptext146 21D3                                 __ptext138 21EF  
                               __ptext163 21D7                                 __ptext155 21DA  
                               __ptext147 21E6                                 __ptext139 236D  
                               __ptext164 2501                                 __ptext156 239D  
                               __ptext148 21E3                                 __ptext165 24AC  
                               __ptext157 18A2                                 __ptext149 2210  
                               __ptext158 25BB                                 __ptext159 242D  
             __end_of_i2c_masterOperation 268A                                  ?___lldiv 0031  
                                ?___ftmul 003F                                  ?___llmod 003F  
                                ?___fttol 00AF                                 _commCheck 0A3A  
               __end_of_setDrvPiezoOnTime 1EDE                  ??_do_I2C_DO_ADDRESS_NACK 0031  
             _i2c1_driver_busCollisionISR 016A                              _eusartRxHead 0058  
                     __size_of_setDrvGain 0043         __size_of_send_2bytes_latchless_IK 0030  
                            _eusartTxHead 007D                       __size_of_setDrvPeak 0013  
                            _eusartRxTail 0057                 ?_send_2bytes_latchless_IK 0031  
                            _eusartTxTail 0059                           doAbsMove@i_1577 00CC  
                         doAbsMove@i_1579 00CA                     __end_of_do_I2C_DO_ACK 22CC  
                   _setLEDBrightnessRange 251F                               ??i1_i2c_ISR 0075  
            ??_INTERRUPT_InterruptManager 007C                                 __pswtext1 2000  
              ??_do_I2C_SEND_RESTART_READ 0031                     ?_i2c1_driver_sendNACK 0070  
         __end_ofi1_i2c1_driver_getRXData 21EF                   _eusartTxBufferRemaining 005E  
                                ?_execCmd 0070                  ??i1_do_I2C_SEND_ADR_READ 0071  
                        ??_mssp1_clearIRQ 0031                                  _BAUD1CON 019F  
                         ??i1_returnReset 0071                                  ?_isdigit 0070  
                  LED_testComm@readResult 00CB                           ?_TMR2_StopTimer 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0008  
                               _first_top 0156                               _getMoveMask 1B95  
                 send_last_2bytes_IK@data 0031                             ??_setMoveMask 0049  
                   __end_of_drv_fifo_sine 10F4                                 _drv_reset 2338  
                       parseCmd@paramIter 0048                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                                 _drv_write 268A  
                              ?_doAbsMove 0070                         _i2c1_driver_start 21FB  
                          ??_zeroPosition 00B7               send_2length_2bytes_IK@data1 003C  
             send_2length_2bytes_IK@data2 003E                                 _setLEDPwr 253D  
          send_last_2bytes_IK@topOrBottom 0034                                  ?_stricmp 0033  
                                ?_strcspn 0038                                  ?_toupper 0070  
                             _getPosition 1918                   __size_ofi1_mssp1_setIRQ 0003  
                          __size_of_putch 0006                         _i2c_ISR$intlevel0 26FB  
                      ?_i2c1_driver_start 0070                            _eusartRxBuffer 01A0  
                           zeroPosition@i 0049                                 _setActive 1698  
                       ??_TMR0_Initialize 0033                            _eusartTxBuffer 01A8  
                          ___wmul@product 0035                                  _LATAbits 010C  
                                _LATBbits 010D                                  _LATCbits 010E  
                  ?i1_send_last_2bytes_IK 0070                                ?_doRelMove 0070  
                ??_send_2length_2bytes_IK 0043                       __size_of_returnStop 0006  
               i1send_last_2bytes_IK@data 0070                                 clear_ram0 2385  
                                _PIE0bits 0090                                  _PIE1bits 0091  
                __size_of_TMR2_StartTimer 0003               __end_of_TMR0_Write8bitTimer 2249  
                     ??_i2c1_driver_start 0031                                  i1_LEDsOn 25BB  
     __size_of_INTERRUPT_InterruptManager 004C                                  _LEDpower 2A5F  
              ??_TMR0_SetInterruptHandler 0033                                  _PIR0bits 0010  
                                _PIR1bits 0011                                ?_getActive 00B5  
                  _currentPositions_steps 2790                        _heater_pre_time_ms 00ED  
                LED_testComm@oldConfigReg 00CD                                  _SSP1CON1 0215  
                                _SSP1CON2 0216                                  _TMR0_ISR 239D  
                                _TMR2_ISR 23AA                                ?_commCheck 00D1  
                                _SSP1STAT 0214                __end_ofi1_i2c1_driver_stop 21E9  
                            ??_fifo_check 004D                         ___wmul@multiplier 0031  
                       ?_do_I2C_SEND_STOP 0070               ?i1_do_I2C_SEND_RESTART_READ 0070  
                              printf@flag 00B2                                printf@prec 00AC  
          ??_TMR2_DefaultInterruptHandler 0071         __size_of_TMR2_SetInterruptHandler 0009  
                __size_of_TMR2_WriteTimer 0005                 __end_of_i2c1_driver_start 21FE  
                           ??_returnReset 0032                        ??_do_I2C_SEND_STOP 0031  
               ?_TMR2_SetInterruptHandler 0031               __size_of_i2c1_driver_TXData 0006  
                              ?_drv_reset 0070                          __size_of_LEDsPwr 0064  
       __end_of_do_I2C_SEND_RESTART_WRITE 22B4                                ?_drv_write 0049  
                             _EUSART_Read 257B                   __end_of_do_I2C_TX_EMPTY 27A0  
                       doAbsMove@allThere 00C6         send_2length_2bytes_IK@latch_start 0040  
     i1send_2length_2bytes_IK@latch_start 0024                                ?_setLEDPwr 00B5  
                        ??_LED_readConfig 0049                      __end_of_startAbsMove 2501  
            __size_of_do_I2C_SEND_RESTART 0008               __size_of_i2c1_driver_isNACK 000D  
                 _do_I2C_DO_ACK$intlevel0 22C8                                  _i2c_open 1AFC  
                              ?_setActive 00B5                       __end_of_setMoveMask 15AE  
                           ?i1_returnStop 0070                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0033                               _drv_address 2A67  
                       ??_setHeaterToggle 00B9                       _do_I2C_DO_NACK_STOP 22CC  
                             _LED_getData 1E28                          __size_of_i2c_ISR 0026  
                      __end_of_fifo_check 23F4                           i1LEDsOn@LEDpins 0027  
                           drv_write@data 0049                             drv_write_DC@i 00BD  
                           drv_write@buff 004C                      __end_of_startRelMove 24AC  
                            ?_do_I2C_IDLE 0070                              ?_do_I2C_RCEN 0070  
                      _LED_test_openshort 15AE                   ?i1_i2c1_driver_sendNACK 0070  
                 ??_OSCILLATOR_Initialize 0031                __size_of_setDrvPiezoOnTime 005B  
                  ?_setLEDBrightnessRange 00B5                         ??_TMR0_StartTimer 0031  
                     _i2c1_driver_sendACK 2238                          __size_of___awdiv 0052  
                        __size_of___ftadd 011A           __size_of_do_I2C_DO_ADDRESS_NACK 002B  
        i1send_last_2bytes_IK@latch_start 0072                          __size_of___lldiv 0053  
                        __size_of___ftmul 00E1                       i2c1_driver_TXData@d 0031  
                        __size_of___llmod 0043                          __size_of___fttol 0087  
                  ??_i2c1_driver_sendNACK 0031                                  ___awtoft 25FD  
                 ?i1_i2c1_driver_resetBus 0070                                  ___ftpack 13F6  
        ??_i2c1_driver_setBusCollisionISR 0033           ?_i2c1_driver_setBusCollisionISR 0031  
                           ??i1_do_I2C_RX 0070                             ??i1_do_I2C_TX 0071  
      _do_I2C_SEND_RESTART_READ$intlevel0 22A8                       _i2c1_driver_restart 21FE  
                               parseCmd@p 004A                                 parseCmd@s 0045  
             __size_ofi1_do_I2C_SEND_STOP 0004                             LEDsPwr@pwrAll 00A0  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 2204  
                     ?_LED_test_openshort 00B5              __end_of_do_I2C_SEND_ADR_READ 2385  
                  ??_i2c1_driver_resetBus 0031           __size_ofi1_do_I2C_SEND_ADR_READ 0008  
                    _demoHeaterToggle_bot 0142                          __size_of_execCmd 01BF  
                ?_TMR2_LoadPeriodRegister 0070                      _demoHeaterToggle_top 0146  
                              _T0CON0bits 0017                          __size_of_isdigit 000F  
                                _demoLong 005A                              _mssp1_setIRQ 220A  
                             ??_do_I2C_RX 0031                               ??_do_I2C_TX 0032  
                             ??_doAbsMove 0240                                  __ptext10 24C8  
                                __ptext11 0B01                                  __ptext20 1623  
                                __ptext12 1F39                                  __ptext21 09A2  
                                __ptext13 22DC                                  __ptext30 1CD2  
                                __ptext22 2491                                  __ptext14 1AFC  
                                __ptext31 225D                                  __ptext23 24E4  
                                __ptext15 2311                                  __ptext40 199A  
                                __ptext32 1E83                                  __ptext24 153B  
                                __ptext16 2308                                  __ptext41 1698  
                                __ptext33 0892                                  __ptext25 253D  
                                __ptext17 2342                                  __ptext50 26AE  
                                __ptext42 1918                                  __ptext34 0CBC  
                                __ptext26 1F9C                                  __ptext18 2338  
                                __ptext51 1E28                                  __ptext43 1B95  
                                __ptext35 06D1                                  __ptext27 251F  
                                __ptext19 0370                                  __ptext60 227A  
                                __ptext52 0D9D                                  __ptext44 261F  
                                __ptext36 25FD                                  __ptext28 0815  
                                __ptext61 26D2                                  __ptext53 00C0  
                                __ptext45 1B48                                  __ptext37 13F6  
                                __ptext29 1EDE                                  __ptext70 220D  
                                __ptext62 1957                                  __ptext54 0919  
                                __ptext46 0A3A                                  __ptext38 2258  
                                __ptext71 19DD                                  __ptext63 1D24  
                                __ptext55 1C30                                  __ptext47 15AE  
                                __ptext39 2406                                  __ptext80 22BC  
                                __ptext72 1DCF                                  __ptext64 07EB  
                                __ptext56 23E3                                  __ptext48 1787  
                                __ptext81 22B4                                  __ptext73 2746  
                                __ptext65 2666                                  __ptext57 1A21  
                                __ptext49 0BDE                                  __ptext90 2207  
                                __ptext82 22AC                                  __ptext74 22D4  
                                __ptext66 232E                                  __ptext58 268A  
                                __ptext91 223C                                  __ptext83 22A4  
                                __ptext75 22CC                                  __ptext67 1800  
                                __ptext59 0ECE                                  __ptext92 21D2  
                                __ptext84 22FF                                  __ptext76 22C4  
                                __ptext68 2362                                  __ptext93 2204  
                                __ptext85 234C                                  __ptext77 2324  
                                __ptext69 26F7                                  __ptext94 226E  
                                __ptext86 2771                                  __ptext78 2357  
                                __ptext95 2268                                  __ptext87 220A  
                                __ptext79 2379                                  __ptext96 2201  
                                __ptext88 23B7                                  __ptext97 21FE  
                                __ptext89 2274                                  __ptext98 2238  
                                __ptext99 21FB                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                              ??_setDrvGain 00B7  
                            ??_setDrvPeak 0049                  __end_ofi1_mssp1_clearIRQ 21F5  
            send_2bytes_latchless_IK@data 0031                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 2357                       i1LEDsOn@topOrBottom 002B  
                        __size_of_stricmp 0034                          __size_of_strcspn 0030  
                        __size_of_toupper 0010                            ??i1_returnStop 0071  
                 i1_do_I2C_SEND_ADR_WRITE 228D                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 2274                                  _drv_init 1F39  
                                _drv_read 1A21                                  _drv_sine 12DA  
                        _i2c1_driver_open 2342                          _i2c1_driver_stop 2201  
                           __size_of_atoi 0071                             __size_of_main 006F  
                    ?_i2c1_driver_startRX 0070                                  _errorOut 0166  
                    ??_LED_test_openshort 00B9                                  _readdata 01C5  
          __size_of_i2c1_driver_getRXData 0003                               ??_doRelMove 00C6  
           __end_of_i2c1_driver_getRXData 220A                                  _parseCmd 052F  
         __size_of_send_2length_2bytes_IK 0018      __end_of_TMR0_DefaultInterruptHandler 18D9  
   __size_of_TMR0_DefaultInterruptHandler 0037              _TMR0_DefaultInterruptHandler 18A2  
                __size_of_getMotionStatus 0023                 __size_of_setHeaterPreTime 005B  
                 ??i1_do_I2C_SEND_RESTART 0070          __size_ofi1_i2c1_driver_getRXData 0003  
                                _moveMask 00D9                   i2c_masterOperation@read 0038  
                             ??_getActive 0049                                _RC1STAbits 019D  
    __size_ofi1_do_I2C_SEND_RESTART_WRITE 0004            __end_ofi1_i2c1_driver_sendNACK 2218  
                              _RB5PPSbits 0E9D                          setMoveMask@onOff 00B7  
                              _RB6PPSbits 0E9E                                  int$flags 007E  
              ??i1_do_I2C_DO_ADDRESS_NACK 0070                                _RB7PPSbits 0E9F  
                                atoi@sign 003B                               ??_commCheck 00D3  
        __end_ofi1_do_I2C_DO_NACK_RESTART 2234                         _LED_configReg_bot 014A  
          __end_ofi1_i2c1_driver_resetBus 21D2                      __end_of_zeroPosition 1698  
                       _LED_configReg_top 014E                         ??_TMR2_StartTimer 0031  
      __end_of_INTERRUPT_InterruptManager 0050                _INTERRUPT_InterruptManager 0004  
                               printf@val 00AE                              _SSP1STATbits 0214  
                      __end_of_setDrvGain 19DD          __end_of_do_I2C_SEND_RESTART_READ 22AC  
                      __end_of_setDrvPeak 2419                              ??_returnStop 0032  
                                execCmd@s 00D4                     ??_do_I2C_DO_NACK_STOP 0031  
                        ??_calcHeaterPins 0031                       _TMR0_Load8bitPeriod 2258  
               mssp1_waitForEvent@timeout 0031            __size_of_i2c1_driver_setI2cISR 0009  
           __end_of_i2c1_driver_setI2cISR 231A                                _INTCONbits 000B  
            __size_of_send_last_2bytes_IK 0058                               _NVMCON1bits 0895  
              __size_of_i2c1_driver_start 0003                               ??_drv_reset 00B5  
                             _setMoveMask 153B                       __end_ofi1_do_I2C_RX 1918  
                          __pstringtext10 2940                            __pstringtext11 2988  
                          __pstringtext20 28EE                            __pstringtext12 2828  
                     __end_ofi1_do_I2C_TX 1C30                            __pstringtext21 28FF  
                          __pstringtext13 2847                            __pstringtext30 29A0  
                          __pstringtext22 2910                            __pstringtext14 2865  
                          __pstringtext31 29AB                            __pstringtext23 2920  
                          __pstringtext15 2881                            __pstringtext40 29FB  
                          __pstringtext32 29B6                            __pstringtext24 2930  
                          __pstringtext16 289B                            __pstringtext41 2A03  
                          __pstringtext33 29C1                            __pstringtext25 294F  
                          __pstringtext17 28B4                            __pstringtext50 2A3A  
                          __pstringtext42 2A0B                            __pstringtext34 29CA  
                          __pstringtext26 295E                            __pstringtext18 28CB  
                          __pstringtext51 2A3F                            __pstringtext43 2A13  
                          __pstringtext35 29D3                            __pstringtext27 296D  
                          __pstringtext19 28DD                            __pstringtext60 2A65  
                          __pstringtext52 2A43                            __pstringtext44 2A1A  
                          __pstringtext36 29DB                            __pstringtext28 297B  
                          __pstringtext61 0000                            __pstringtext53 2A47  
                          __pstringtext45 2A21                            __pstringtext37 29E3  
                          __pstringtext29 2994                            __pstringtext54 2A4B  
                          __pstringtext46 2A26                            __pstringtext38 29EB  
                          __pstringtext55 2A4F                            __pstringtext47 2A2B  
                          __pstringtext39 29F3                            __pstringtext56 2A59  
                          __pstringtext48 2A30                            __pstringtext57 2A5C  
                          __pstringtext49 2A35                            __pstringtext58 2A61  
                          __pstringtext59 2A63                                  isdigit@c 0032  
                             ??_drv_write 004A                  __size_ofi1_do_I2C_DO_ACK 0004  
                             ??_setLEDPwr 004E                     ??_i2c1_driver_sendACK 0031  
                        ?_do_I2C_TX_EMPTY 0070                            i1_mssp1_setIRQ 21EF  
                 __size_of_WDT_Initialize 0004                    _do_I2C_DO_ADDRESS_NACK 2746  
          __size_ofi1_do_I2C_DO_NACK_STOP 0004                                  intlevel1 0000  
           __end_ofi1_do_I2C_DO_NACK_STOP 2230                    _do_I2C_RESET$intlevel0 2350  
                        ??_TMR0_StopTimer 0070                     ??_i2c1_driver_restart 0031  
                       ??_TMR2_WriteTimer 0070                   ?_LED_setBrightnessRange 0044  
                             ??_setActive 00B9                                 strchr@chr 0033  
                   ??_i2c1_driver_startRX 0031                                 strchr@ptr 0031  
              ??i1_send_2length_2bytes_IK 007B                          ___lldiv@dividend 0035  
                 ?_PIN_MANAGER_Initialize 0070                   __size_of_i2c_setAddress 0008  
                    ?_TMR0_Load8bitPeriod 0070              ??i1_send_2bytes_latchless_IK 0072  
                  i1_do_I2C_SEND_ADR_READ 2294                         __CFG_CLKOUTEN$OFF 0000  
                               stricmp@s1 0038                                 stricmp@s2 0033  
                               strcspn@s1 003E                                 strcspn@s2 0038  
                      __end_of_returnStop 226E                              getMoveMask@i 00B7  
     __size_ofi1_do_I2C_SEND_RESTART_READ 0004            __size_ofi1_i2c1_driver_sendACK 0004  
           ?_TMR0_DefaultInterruptHandler 0070             __end_ofi1_i2c1_driver_sendACK 2214  
             __size_of_mssp1_IRQisEnabled 000A            __size_ofi1_i2c1_driver_restart 0003  
                                printf@ap 00B3             __end_ofi1_i2c1_driver_restart 21E6  
                      _EUSART_Receive_ISR 24AC               __size_of_mssp1_waitForEvent 000B  
          __size_ofi1_i2c1_driver_startRX 0003              __end_ofi1_i2c1_driver_TXData 2253  
           __end_ofi1_i2c1_driver_startRX 21EC                          ??_TMR2_StopTimer 0070  
         __end_of_TMR2_LoadPeriodRegister 2262                             __pstringtext1 1000  
                           __pstringtext2 11E8                             __pstringtext3 12DA  
                           __pstringtext4 2800                             __pstringtext5 2A53  
                           __pstringtext6 2A56                             __pstringtext7 2A5F  
                           __pstringtext8 2A67                             __pstringtext9 10F4  
                 __size_ofi1_do_I2C_RESET 0007                    _send_2length_2bytes_IK 2445  
                     ?_EUSART_Receive_ISR 0070              __end_ofi1_i2c1_driver_isNACK 2379  
                              _TMR0_RANGE 2A56                          ___lldiv@quotient 003A  
                         _TMR0_Initialize 2419                                  stricmp@r 0037  
                              _TMR2_RANGE 2A53                                  strcspn@i 003C  
       send_2length_2bytes_IK@topOrBottom 0041       i1send_2length_2bytes_IK@topOrBottom 0025  
                  __size_of_i2c_setBuffer 0015                              ?_getMoveMask 00B5  
                   __size_of_startAbsMove 001D                                  toupper@c 0032  
                  __end_ofi1_mssp1_setIRQ 21F2                               _returnReset 226E  
                                strtok@s1 0044                                  strtok@s2 003F  
                                strspn@s1 003E                                  strspn@s2 0038  
        _do_I2C_DO_NACK_RESTART$intlevel0 22D8                                  strtok@sp 0054  
               ??i1_do_I2C_SEND_ADR_WRITE 0071                  __size_of_main_initialize 00DD  
          __end_of_LED_setBrightnessRange 0CBC                              getPosition@a 00B5  
                            ?_getPosition 00B5                    __size_ofi1_do_I2C_IDLE 0005  
                  __size_ofi1_do_I2C_RCEN 0006                   ??i1_send_last_2bytes_IK 0075  
                      EUSART_Write@txData 0032              __size_of_EUSART_Transmit_ISR 001E  
          __end_of_PIN_MANAGER_Initialize 186E               __end_of_i2c_busCollisionISR 21E3  
                   __size_of_startRelMove 001B                     ??_TMR0_Load8bitPeriod 0031  
                     setMoveMask@probeNum 00B5                      ??_EUSART_Receive_ISR 0070  
                   _TMR2_InterruptHandler 01D9                     _do_I2C_SEND_ADR_WRITE 2357  
                    _do_I2C_SEND_ADR_READ 2379  
