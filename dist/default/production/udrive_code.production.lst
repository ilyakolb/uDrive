

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jul 21 09:34:25 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	stringtext12,global,class=STRCODE,delta=2
    22                           	psect	stringtext13,global,class=STRCODE,delta=2
    23                           	psect	stringtext14,global,class=STRCODE,delta=2
    24                           	psect	stringtext15,global,class=STRCODE,delta=2
    25                           	psect	stringtext16,global,class=STRCODE,delta=2
    26                           	psect	stringtext17,global,class=STRCODE,delta=2
    27                           	psect	stringtext18,global,class=STRCODE,delta=2
    28                           	psect	stringtext19,global,class=STRCODE,delta=2
    29                           	psect	stringtext20,global,class=STRCODE,delta=2
    30                           	psect	stringtext21,global,class=STRCODE,delta=2
    31                           	psect	stringtext22,global,class=STRCODE,delta=2
    32                           	psect	stringtext23,global,class=STRCODE,delta=2
    33                           	psect	stringtext24,global,class=STRCODE,delta=2
    34                           	psect	stringtext25,global,class=STRCODE,delta=2
    35                           	psect	stringtext26,global,class=STRCODE,delta=2
    36                           	psect	stringtext27,global,class=STRCODE,delta=2
    37                           	psect	stringtext28,global,class=STRCODE,delta=2
    38                           	psect	stringtext29,global,class=STRCODE,delta=2
    39                           	psect	stringtext30,global,class=STRCODE,delta=2
    40                           	psect	stringtext31,global,class=STRCODE,delta=2
    41                           	psect	stringtext32,global,class=STRCODE,delta=2
    42                           	psect	stringtext33,global,class=STRCODE,delta=2
    43                           	psect	stringtext34,global,class=STRCODE,delta=2
    44                           	psect	stringtext35,global,class=STRCODE,delta=2
    45                           	psect	stringtext36,global,class=STRCODE,delta=2
    46                           	psect	stringtext37,global,class=STRCODE,delta=2
    47                           	psect	stringtext38,global,class=STRCODE,delta=2
    48                           	psect	stringtext39,global,class=STRCODE,delta=2
    49                           	psect	stringtext40,global,class=STRCODE,delta=2
    50                           	psect	stringtext41,global,class=STRCODE,delta=2
    51                           	psect	stringtext42,global,class=STRCODE,delta=2
    52                           	psect	stringtext43,global,class=STRCODE,delta=2
    53                           	psect	stringtext44,global,class=STRCODE,delta=2
    54                           	psect	stringtext45,global,class=STRCODE,delta=2
    55                           	psect	stringtext46,global,class=STRCODE,delta=2
    56                           	psect	stringtext47,global,class=STRCODE,delta=2
    57                           	psect	stringtext48,global,class=STRCODE,delta=2
    58                           	psect	stringtext49,global,class=STRCODE,delta=2
    59                           	psect	stringtext50,global,class=STRCODE,delta=2
    60                           	psect	stringtext51,global,class=STRCODE,delta=2
    61                           	psect	stringtext52,global,class=STRCODE,delta=2
    62                           	psect	stringtext53,global,class=STRCODE,delta=2
    63                           	psect	stringtext54,global,class=STRCODE,delta=2
    64                           	psect	stringtext55,global,class=STRCODE,delta=2
    65                           	psect	stringtext56,global,class=STRCODE,delta=2
    66                           	psect	stringtext57,global,class=STRCODE,delta=2
    67                           	psect	stringtext58,global,class=STRCODE,delta=2
    68                           	psect	stringtext59,global,class=STRCODE,delta=2
    69                           	psect	stringtext60,global,class=STRCODE,delta=2
    70                           	psect	stringtext61,global,class=STRCODE,delta=2
    71                           	psect	cinit,global,class=CODE,merge=1,delta=2
    72                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    73                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    74                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    75                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    76                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    77                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    78                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    79                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    80                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    81                           	psect	inittext,global,class=CODE,delta=2
    82                           	psect	clrtext,global,class=CODE,delta=2
    83                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    84                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    85                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    86                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    87                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    88                           	psect	text1,local,class=CODE,merge=1,delta=2
    89                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text11,local,class=CODE,merge=1,delta=2
    99                           	psect	text12,local,class=CODE,merge=1,delta=2
   100                           	psect	text13,local,class=CODE,merge=1,delta=2
   101                           	psect	text14,local,class=CODE,merge=1,delta=2
   102                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text17,local,class=CODE,merge=1,delta=2
   105                           	psect	text18,local,class=CODE,merge=1,delta=2
   106                           	psect	text19,local,class=CODE,merge=1,delta=2
   107                           	psect	swtext1,local,class=CONST,delta=2
   108                           	psect	text20,local,class=CODE,merge=1,delta=2
   109                           	psect	text21,local,class=CODE,merge=1,delta=2
   110                           	psect	text22,local,class=CODE,merge=1,delta=2
   111                           	psect	text23,local,class=CODE,merge=1,delta=2
   112                           	psect	text24,local,class=CODE,merge=1,delta=2
   113                           	psect	text25,local,class=CODE,merge=1,delta=2
   114                           	psect	text26,local,class=CODE,merge=1,delta=2
   115                           	psect	text27,local,class=CODE,merge=1,delta=2
   116                           	psect	text28,local,class=CODE,merge=1,delta=2
   117                           	psect	text29,local,class=CODE,merge=1,delta=2
   118                           	psect	text30,local,class=CODE,merge=1,delta=2
   119                           	psect	text31,local,class=CODE,merge=1,delta=2
   120                           	psect	text32,local,class=CODE,merge=1,delta=2
   121                           	psect	text33,local,class=CODE,merge=1,delta=2
   122                           	psect	text34,local,class=CODE,merge=1,delta=2
   123                           	psect	text35,local,class=CODE,merge=1,delta=2
   124                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
   125                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
   126                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
   127                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
   128                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
   129                           	psect	text41,local,class=CODE,merge=1,delta=2
   130                           	psect	text42,local,class=CODE,merge=1,delta=2
   131                           	psect	text43,local,class=CODE,merge=1,delta=2
   132                           	psect	text44,local,class=CODE,merge=1,delta=2
   133                           	psect	text45,local,class=CODE,merge=1,delta=2
   134                           	psect	text46,local,class=CODE,merge=1,delta=2
   135                           	psect	text47,local,class=CODE,merge=1,delta=2
   136                           	psect	text48,local,class=CODE,merge=1,delta=2
   137                           	psect	text49,local,class=CODE,merge=1,delta=2
   138                           	psect	text50,local,class=CODE,merge=1,delta=2
   139                           	psect	text51,local,class=CODE,merge=1,delta=2
   140                           	psect	text52,local,class=CODE,merge=1,delta=2
   141                           	psect	text53,local,class=CODE,merge=1,delta=2
   142                           	psect	text54,local,class=CODE,merge=1,delta=2
   143                           	psect	text55,local,class=CODE,merge=1,delta=2
   144                           	psect	text56,local,class=CODE,merge=1,delta=2
   145                           	psect	text57,local,class=CODE,merge=1,delta=2
   146                           	psect	text58,local,class=CODE,merge=1,delta=2
   147                           	psect	text59,local,class=CODE,merge=1,delta=2
   148                           	psect	text60,local,class=CODE,merge=1,delta=2
   149                           	psect	text61,local,class=CODE,merge=1,delta=2
   150                           	psect	text62,local,class=CODE,merge=1,delta=2
   151                           	psect	text63,local,class=CODE,merge=1,delta=2
   152                           	psect	text64,local,class=CODE,merge=1,delta=2
   153                           	psect	text65,local,class=CODE,merge=1,delta=2,group=2
   154                           	psect	text66,local,class=CODE,merge=1,delta=2,group=2
   155                           	psect	text67,local,class=CODE,merge=1,delta=2
   156                           	psect	text68,local,class=CODE,merge=1,delta=2
   157                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
   158                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
   159                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
   160                           	psect	text72,local,class=CODE,merge=1,delta=2
   161                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
   162                           	psect	text74,local,class=CODE,merge=1,delta=2
   163                           	psect	text75,local,class=CODE,merge=1,delta=2
   164                           	psect	text76,local,class=CODE,merge=1,delta=2
   165                           	psect	text77,local,class=CODE,merge=1,delta=2
   166                           	psect	text78,local,class=CODE,merge=1,delta=2
   167                           	psect	text79,local,class=CODE,merge=1,delta=2
   168                           	psect	text80,local,class=CODE,merge=1,delta=2
   169                           	psect	text81,local,class=CODE,merge=1,delta=2
   170                           	psect	text82,local,class=CODE,merge=1,delta=2
   171                           	psect	text83,local,class=CODE,merge=1,delta=2
   172                           	psect	text84,local,class=CODE,merge=1,delta=2
   173                           	psect	text85,local,class=CODE,merge=1,delta=2
   174                           	psect	text86,local,class=CODE,merge=1,delta=2
   175                           	psect	text87,local,class=CODE,merge=1,delta=2
   176                           	psect	text88,local,class=CODE,merge=1,delta=2
   177                           	psect	text89,local,class=CODE,merge=1,delta=2
   178                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   179                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   180                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   181                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   182                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   183                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   184                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   185                           	psect	text97,local,class=CODE,merge=1,delta=2
   186                           	psect	text98,local,class=CODE,merge=1,delta=2
   187                           	psect	text99,local,class=CODE,merge=1,inline,delta=2
   188                           	psect	text100,local,class=CODE,merge=1,inline,delta=2
   189                           	psect	text101,local,class=CODE,merge=1,inline,delta=2
   190                           	psect	text102,local,class=CODE,merge=1,inline,delta=2
   191                           	psect	text103,local,class=CODE,merge=1,delta=2,group=2
   192                           	psect	text104,local,class=CODE,merge=1,delta=2
   193                           	psect	text105,local,class=CODE,merge=1,delta=2
   194                           	psect	text106,local,class=CODE,merge=1,delta=2
   195                           	psect	text107,local,class=CODE,merge=1,delta=2
   196                           	psect	text108,local,class=CODE,merge=1,delta=2
   197                           	psect	text109,local,class=CODE,merge=1,delta=2
   198                           	psect	text110,local,class=CODE,merge=1,delta=2
   199                           	psect	text111,local,class=CODE,merge=1,delta=2
   200                           	psect	text112,local,class=CODE,merge=1,delta=2
   201                           	psect	text113,local,class=CODE,merge=1,delta=2
   202                           	psect	text114,local,class=CODE,merge=1,delta=2
   203                           	psect	text115,local,class=CODE,merge=1,delta=2
   204                           	psect	text116,local,class=CODE,merge=1,delta=2
   205                           	psect	text117,local,class=CODE,merge=1,delta=2
   206                           	psect	text118,local,class=CODE,merge=1,delta=2
   207                           	psect	text119,local,class=CODE,merge=1,delta=2
   208                           	psect	text120,local,class=CODE,merge=1,delta=2
   209                           	psect	text121,local,class=CODE,merge=1,delta=2
   210                           	psect	intentry,global,class=CODE,delta=2
   211                           	psect	text123,local,class=CODE,merge=1,delta=2
   212                           	psect	text124,local,class=CODE,merge=1,inline,delta=2
   213                           	psect	text125,local,class=CODE,merge=1,delta=2
   214                           	psect	text126,local,class=CODE,merge=1,delta=2
   215                           	psect	text127,local,class=CODE,merge=1,delta=2
   216                           	psect	text128,local,class=CODE,merge=1,delta=2
   217                           	psect	text129,local,class=CODE,merge=1,delta=2
   218                           	psect	text130,local,class=CODE,merge=1,delta=2
   219                           	psect	text131,local,class=CODE,merge=1,delta=2
   220                           	psect	text132,local,class=CODE,merge=1,delta=2
   221                           	psect	text133,local,class=CODE,merge=1,delta=2
   222                           	psect	text134,local,class=CODE,merge=1,delta=2
   223                           	psect	text135,local,class=CODE,merge=1,delta=2
   224                           	psect	text136,local,class=CODE,merge=1,delta=2
   225                           	psect	text137,local,class=CODE,merge=1,delta=2
   226                           	psect	text138,local,class=CODE,merge=1,delta=2
   227                           	psect	text139,local,class=CODE,merge=1,delta=2
   228                           	psect	text140,local,class=CODE,merge=1,delta=2
   229                           	psect	text141,local,class=CODE,merge=1,inline,delta=2
   230                           	psect	text142,local,class=CODE,merge=1,inline,delta=2
   231                           	psect	text143,local,class=CODE,merge=1,inline,delta=2
   232                           	psect	text144,local,class=CODE,merge=1,inline,delta=2
   233                           	psect	text145,local,class=CODE,merge=1,inline,delta=2
   234                           	psect	text146,local,class=CODE,merge=1,inline,delta=2
   235                           	psect	text147,local,class=CODE,merge=1,inline,delta=2
   236                           	psect	text148,local,class=CODE,merge=1,delta=2
   237                           	psect	text149,local,class=CODE,merge=1,delta=2
   238                           	psect	text150,local,class=CODE,merge=1,inline,delta=2
   239                           	psect	text151,local,class=CODE,merge=1,inline,delta=2
   240                           	psect	text152,local,class=CODE,merge=1,inline,delta=2
   241                           	psect	text153,local,class=CODE,merge=1,delta=2
   242                           	psect	text154,local,class=CODE,merge=1,inline,delta=2
   243                           	psect	text155,local,class=CODE,merge=1,delta=2
   244                           	psect	text156,local,class=CODE,merge=1,delta=2
   245                           	psect	text157,local,class=CODE,merge=1,delta=2
   246                           	psect	text158,local,class=CODE,merge=1,delta=2
   247                           	psect	text159,local,class=CODE,merge=1,delta=2
   248                           	psect	text160,local,class=CODE,merge=1,delta=2
   249                           	psect	text161,local,class=CODE,merge=1,delta=2
   250                           	psect	text162,local,class=CODE,merge=1,delta=2
   251                           	psect	text163,local,class=CODE,merge=1,delta=2
   252                           	psect	text164,local,class=CODE,merge=1,delta=2
   253                           	psect	text165,local,class=CODE,merge=1,delta=2
   254                           	psect	text166,local,class=CODE,merge=1,delta=2
   255                           	psect	text167,local,class=CODE,merge=1,delta=2
   256                           	psect	text168,local,class=CODE,merge=1,delta=2
   257                           	dabs	1,0xCA0,32
   258                           	dabs	1,0xC30,64
   259                           	dabs	1,0x2790,0,_currentPositions_steps
   260                           	dabs	1,0x7E,2
   261  0000                     
   262                           ; Version 1.45
   263                           ; Generated 16/11/2017 GMT
   264                           ; 
   265                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   266                           ; All rights reserved.
   267                           ; 
   268                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   269                           ; 
   270                           ; Redistribution and use in source and binary forms, with or without modification, are
   271                           ; permitted provided that the following conditions are met:
   272                           ; 
   273                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   274                           ;        conditions and the following disclaimer.
   275                           ; 
   276                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   277                           ;        of conditions and the following disclaimer in the documentation and/or other
   278                           ;        materials provided with the distribution.
   279                           ; 
   280                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   281                           ;        software without specific prior written permission.
   282                           ; 
   283                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   284                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   285                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   286                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   287                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   288                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   289                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   290                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   291                           ; 
   292                           ; 
   293                           ; Code-generator required, PIC16F18346 Definitions
   294                           ; 
   295                           ; SFR Addresses
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0097                     	;# 
   339  009B                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  009F                     	;# 
   345  010C                     	;# 
   346  010D                     	;# 
   347  010E                     	;# 
   348  0111                     	;# 
   349  0112                     	;# 
   350  0113                     	;# 
   351  0114                     	;# 
   352  0115                     	;# 
   353  0116                     	;# 
   354  0117                     	;# 
   355  0118                     	;# 
   356  0119                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359  018E                     	;# 
   360  0197                     	;# 
   361  0199                     	;# 
   362  0199                     	;# 
   363  0199                     	;# 
   364  019A                     	;# 
   365  019A                     	;# 
   366  019A                     	;# 
   367  019B                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019C                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019D                     	;# 
   376  019D                     	;# 
   377  019D                     	;# 
   378  019E                     	;# 
   379  019E                     	;# 
   380  019E                     	;# 
   381  019F                     	;# 
   382  019F                     	;# 
   383  019F                     	;# 
   384  019F                     	;# 
   385  019F                     	;# 
   386  020C                     	;# 
   387  020D                     	;# 
   388  020E                     	;# 
   389  0211                     	;# 
   390  0211                     	;# 
   391  0212                     	;# 
   392  0212                     	;# 
   393  0213                     	;# 
   394  0213                     	;# 
   395  0214                     	;# 
   396  0214                     	;# 
   397  0215                     	;# 
   398  0215                     	;# 
   399  0215                     	;# 
   400  0215                     	;# 
   401  0216                     	;# 
   402  0216                     	;# 
   403  0217                     	;# 
   404  0217                     	;# 
   405  0219                     	;# 
   406  021A                     	;# 
   407  021B                     	;# 
   408  021C                     	;# 
   409  021D                     	;# 
   410  021D                     	;# 
   411  021E                     	;# 
   412  021F                     	;# 
   413  028C                     	;# 
   414  028D                     	;# 
   415  028E                     	;# 
   416  0291                     	;# 
   417  0291                     	;# 
   418  0292                     	;# 
   419  0293                     	;# 
   420  0294                     	;# 
   421  0295                     	;# 
   422  0295                     	;# 
   423  0296                     	;# 
   424  0297                     	;# 
   425  0298                     	;# 
   426  029F                     	;# 
   427  030C                     	;# 
   428  030D                     	;# 
   429  030E                     	;# 
   430  0311                     	;# 
   431  0311                     	;# 
   432  0312                     	;# 
   433  0313                     	;# 
   434  0314                     	;# 
   435  0315                     	;# 
   436  0315                     	;# 
   437  0316                     	;# 
   438  0317                     	;# 
   439  0318                     	;# 
   440  038C                     	;# 
   441  038D                     	;# 
   442  038E                     	;# 
   443  0391                     	;# 
   444  0392                     	;# 
   445  0393                     	;# 
   446  0394                     	;# 
   447  0395                     	;# 
   448  0396                     	;# 
   449  0397                     	;# 
   450  0398                     	;# 
   451  0399                     	;# 
   452  039A                     	;# 
   453  039C                     	;# 
   454  039D                     	;# 
   455  039E                     	;# 
   456  039F                     	;# 
   457  0411                     	;# 
   458  0411                     	;# 
   459  0412                     	;# 
   460  0413                     	;# 
   461  0414                     	;# 
   462  0415                     	;# 
   463  0416                     	;# 
   464  0417                     	;# 
   465  0418                     	;# 
   466  0418                     	;# 
   467  0419                     	;# 
   468  041A                     	;# 
   469  041B                     	;# 
   470  041C                     	;# 
   471  041D                     	;# 
   472  041E                     	;# 
   473  041F                     	;# 
   474  0498                     	;# 
   475  0498                     	;# 
   476  0499                     	;# 
   477  049A                     	;# 
   478  049B                     	;# 
   479  049B                     	;# 
   480  049C                     	;# 
   481  049D                     	;# 
   482  049E                     	;# 
   483  049F                     	;# 
   484  0617                     	;# 
   485  0618                     	;# 
   486  0619                     	;# 
   487  0619                     	;# 
   488  061A                     	;# 
   489  061B                     	;# 
   490  061C                     	;# 
   491  061C                     	;# 
   492  061F                     	;# 
   493  0691                     	;# 
   494  0692                     	;# 
   495  0693                     	;# 
   496  0694                     	;# 
   497  0695                     	;# 
   498  0696                     	;# 
   499  0697                     	;# 
   500  0698                     	;# 
   501  0699                     	;# 
   502  0711                     	;# 
   503  0712                     	;# 
   504  0713                     	;# 
   505  0714                     	;# 
   506  0715                     	;# 
   507  0716                     	;# 
   508  0717                     	;# 
   509  0718                     	;# 
   510  0719                     	;# 
   511  0891                     	;# 
   512  0891                     	;# 
   513  0891                     	;# 
   514  0891                     	;# 
   515  0891                     	;# 
   516  0891                     	;# 
   517  0892                     	;# 
   518  0892                     	;# 
   519  0892                     	;# 
   520  0893                     	;# 
   521  0893                     	;# 
   522  0893                     	;# 
   523  0893                     	;# 
   524  0893                     	;# 
   525  0893                     	;# 
   526  0894                     	;# 
   527  0894                     	;# 
   528  0894                     	;# 
   529  0895                     	;# 
   530  0895                     	;# 
   531  0895                     	;# 
   532  0896                     	;# 
   533  0896                     	;# 
   534  0896                     	;# 
   535  089B                     	;# 
   536  0911                     	;# 
   537  0912                     	;# 
   538  0913                     	;# 
   539  0914                     	;# 
   540  0915                     	;# 
   541  0916                     	;# 
   542  0918                     	;# 
   543  0919                     	;# 
   544  091A                     	;# 
   545  091B                     	;# 
   546  091C                     	;# 
   547  091D                     	;# 
   548  091E                     	;# 
   549  091F                     	;# 
   550  0E0F                     	;# 
   551  0E10                     	;# 
   552  0E11                     	;# 
   553  0E12                     	;# 
   554  0E13                     	;# 
   555  0E14                     	;# 
   556  0E15                     	;# 
   557  0E16                     	;# 
   558  0E17                     	;# 
   559  0E18                     	;# 
   560  0E19                     	;# 
   561  0E1A                     	;# 
   562  0E1B                     	;# 
   563  0E1C                     	;# 
   564  0E1D                     	;# 
   565  0E1E                     	;# 
   566  0E1F                     	;# 
   567  0E20                     	;# 
   568  0E21                     	;# 
   569  0E22                     	;# 
   570  0E24                     	;# 
   571  0E25                     	;# 
   572  0E28                     	;# 
   573  0E29                     	;# 
   574  0E2A                     	;# 
   575  0E2B                     	;# 
   576  0E2C                     	;# 
   577  0E2D                     	;# 
   578  0E2E                     	;# 
   579  0E2F                     	;# 
   580  0E90                     	;# 
   581  0E91                     	;# 
   582  0E92                     	;# 
   583  0E94                     	;# 
   584  0E95                     	;# 
   585  0E9C                     	;# 
   586  0E9D                     	;# 
   587  0E9E                     	;# 
   588  0E9F                     	;# 
   589  0EA0                     	;# 
   590  0EA1                     	;# 
   591  0EA2                     	;# 
   592  0EA3                     	;# 
   593  0EA4                     	;# 
   594  0EA5                     	;# 
   595  0EA6                     	;# 
   596  0EA7                     	;# 
   597  0F0F                     	;# 
   598  0F10                     	;# 
   599  0F11                     	;# 
   600  0F12                     	;# 
   601  0F13                     	;# 
   602  0F14                     	;# 
   603  0F15                     	;# 
   604  0F16                     	;# 
   605  0F17                     	;# 
   606  0F18                     	;# 
   607  0F19                     	;# 
   608  0F1A                     	;# 
   609  0F1B                     	;# 
   610  0F1C                     	;# 
   611  0F1D                     	;# 
   612  0F1E                     	;# 
   613  0F1F                     	;# 
   614  0F20                     	;# 
   615  0F21                     	;# 
   616  0F22                     	;# 
   617  0F23                     	;# 
   618  0F24                     	;# 
   619  0F25                     	;# 
   620  0F26                     	;# 
   621  0F27                     	;# 
   622  0F28                     	;# 
   623  0F29                     	;# 
   624  0F2A                     	;# 
   625  0F2B                     	;# 
   626  0F2C                     	;# 
   627  0F2D                     	;# 
   628  0F2E                     	;# 
   629  0F2F                     	;# 
   630  0F30                     	;# 
   631  0F31                     	;# 
   632  0F32                     	;# 
   633  0F33                     	;# 
   634  0F34                     	;# 
   635  0F35                     	;# 
   636  0F36                     	;# 
   637  0F37                     	;# 
   638  0FE4                     	;# 
   639  0FE5                     	;# 
   640  0FE6                     	;# 
   641  0FE7                     	;# 
   642  0FE8                     	;# 
   643  0FE9                     	;# 
   644  0FEA                     	;# 
   645  0FEB                     	;# 
   646  0FED                     	;# 
   647  0FEE                     	;# 
   648  0FEF                     	;# 
   649  0000                     	;# 
   650  0001                     	;# 
   651  0002                     	;# 
   652  0003                     	;# 
   653  0004                     	;# 
   654  0005                     	;# 
   655  0006                     	;# 
   656  0007                     	;# 
   657  0008                     	;# 
   658  0009                     	;# 
   659  000A                     	;# 
   660  000B                     	;# 
   661  000C                     	;# 
   662  000D                     	;# 
   663  000E                     	;# 
   664  0010                     	;# 
   665  0011                     	;# 
   666  0012                     	;# 
   667  0013                     	;# 
   668  0014                     	;# 
   669  0015                     	;# 
   670  0015                     	;# 
   671  0016                     	;# 
   672  0016                     	;# 
   673  0017                     	;# 
   674  0018                     	;# 
   675  0019                     	;# 
   676  0019                     	;# 
   677  001A                     	;# 
   678  001B                     	;# 
   679  001C                     	;# 
   680  001D                     	;# 
   681  001E                     	;# 
   682  001F                     	;# 
   683  008C                     	;# 
   684  008D                     	;# 
   685  008E                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0094                     	;# 
   691  0097                     	;# 
   692  009B                     	;# 
   693  009B                     	;# 
   694  009C                     	;# 
   695  009D                     	;# 
   696  009E                     	;# 
   697  009F                     	;# 
   698  010C                     	;# 
   699  010D                     	;# 
   700  010E                     	;# 
   701  0111                     	;# 
   702  0112                     	;# 
   703  0113                     	;# 
   704  0114                     	;# 
   705  0115                     	;# 
   706  0116                     	;# 
   707  0117                     	;# 
   708  0118                     	;# 
   709  0119                     	;# 
   710  018C                     	;# 
   711  018D                     	;# 
   712  018E                     	;# 
   713  0197                     	;# 
   714  0199                     	;# 
   715  0199                     	;# 
   716  0199                     	;# 
   717  019A                     	;# 
   718  019A                     	;# 
   719  019A                     	;# 
   720  019B                     	;# 
   721  019B                     	;# 
   722  019B                     	;# 
   723  019B                     	;# 
   724  019B                     	;# 
   725  019C                     	;# 
   726  019C                     	;# 
   727  019C                     	;# 
   728  019D                     	;# 
   729  019D                     	;# 
   730  019D                     	;# 
   731  019E                     	;# 
   732  019E                     	;# 
   733  019E                     	;# 
   734  019F                     	;# 
   735  019F                     	;# 
   736  019F                     	;# 
   737  019F                     	;# 
   738  019F                     	;# 
   739  020C                     	;# 
   740  020D                     	;# 
   741  020E                     	;# 
   742  0211                     	;# 
   743  0211                     	;# 
   744  0212                     	;# 
   745  0212                     	;# 
   746  0213                     	;# 
   747  0213                     	;# 
   748  0214                     	;# 
   749  0214                     	;# 
   750  0215                     	;# 
   751  0215                     	;# 
   752  0215                     	;# 
   753  0215                     	;# 
   754  0216                     	;# 
   755  0216                     	;# 
   756  0217                     	;# 
   757  0217                     	;# 
   758  0219                     	;# 
   759  021A                     	;# 
   760  021B                     	;# 
   761  021C                     	;# 
   762  021D                     	;# 
   763  021D                     	;# 
   764  021E                     	;# 
   765  021F                     	;# 
   766  028C                     	;# 
   767  028D                     	;# 
   768  028E                     	;# 
   769  0291                     	;# 
   770  0291                     	;# 
   771  0292                     	;# 
   772  0293                     	;# 
   773  0294                     	;# 
   774  0295                     	;# 
   775  0295                     	;# 
   776  0296                     	;# 
   777  0297                     	;# 
   778  0298                     	;# 
   779  029F                     	;# 
   780  030C                     	;# 
   781  030D                     	;# 
   782  030E                     	;# 
   783  0311                     	;# 
   784  0311                     	;# 
   785  0312                     	;# 
   786  0313                     	;# 
   787  0314                     	;# 
   788  0315                     	;# 
   789  0315                     	;# 
   790  0316                     	;# 
   791  0317                     	;# 
   792  0318                     	;# 
   793  038C                     	;# 
   794  038D                     	;# 
   795  038E                     	;# 
   796  0391                     	;# 
   797  0392                     	;# 
   798  0393                     	;# 
   799  0394                     	;# 
   800  0395                     	;# 
   801  0396                     	;# 
   802  0397                     	;# 
   803  0398                     	;# 
   804  0399                     	;# 
   805  039A                     	;# 
   806  039C                     	;# 
   807  039D                     	;# 
   808  039E                     	;# 
   809  039F                     	;# 
   810  0411                     	;# 
   811  0411                     	;# 
   812  0412                     	;# 
   813  0413                     	;# 
   814  0414                     	;# 
   815  0415                     	;# 
   816  0416                     	;# 
   817  0417                     	;# 
   818  0418                     	;# 
   819  0418                     	;# 
   820  0419                     	;# 
   821  041A                     	;# 
   822  041B                     	;# 
   823  041C                     	;# 
   824  041D                     	;# 
   825  041E                     	;# 
   826  041F                     	;# 
   827  0498                     	;# 
   828  0498                     	;# 
   829  0499                     	;# 
   830  049A                     	;# 
   831  049B                     	;# 
   832  049B                     	;# 
   833  049C                     	;# 
   834  049D                     	;# 
   835  049E                     	;# 
   836  049F                     	;# 
   837  0617                     	;# 
   838  0618                     	;# 
   839  0619                     	;# 
   840  0619                     	;# 
   841  061A                     	;# 
   842  061B                     	;# 
   843  061C                     	;# 
   844  061C                     	;# 
   845  061F                     	;# 
   846  0691                     	;# 
   847  0692                     	;# 
   848  0693                     	;# 
   849  0694                     	;# 
   850  0695                     	;# 
   851  0696                     	;# 
   852  0697                     	;# 
   853  0698                     	;# 
   854  0699                     	;# 
   855  0711                     	;# 
   856  0712                     	;# 
   857  0713                     	;# 
   858  0714                     	;# 
   859  0715                     	;# 
   860  0716                     	;# 
   861  0717                     	;# 
   862  0718                     	;# 
   863  0719                     	;# 
   864  0891                     	;# 
   865  0891                     	;# 
   866  0891                     	;# 
   867  0891                     	;# 
   868  0891                     	;# 
   869  0891                     	;# 
   870  0892                     	;# 
   871  0892                     	;# 
   872  0892                     	;# 
   873  0893                     	;# 
   874  0893                     	;# 
   875  0893                     	;# 
   876  0893                     	;# 
   877  0893                     	;# 
   878  0893                     	;# 
   879  0894                     	;# 
   880  0894                     	;# 
   881  0894                     	;# 
   882  0895                     	;# 
   883  0895                     	;# 
   884  0895                     	;# 
   885  0896                     	;# 
   886  0896                     	;# 
   887  0896                     	;# 
   888  089B                     	;# 
   889  0911                     	;# 
   890  0912                     	;# 
   891  0913                     	;# 
   892  0914                     	;# 
   893  0915                     	;# 
   894  0916                     	;# 
   895  0918                     	;# 
   896  0919                     	;# 
   897  091A                     	;# 
   898  091B                     	;# 
   899  091C                     	;# 
   900  091D                     	;# 
   901  091E                     	;# 
   902  091F                     	;# 
   903  0E0F                     	;# 
   904  0E10                     	;# 
   905  0E11                     	;# 
   906  0E12                     	;# 
   907  0E13                     	;# 
   908  0E14                     	;# 
   909  0E15                     	;# 
   910  0E16                     	;# 
   911  0E17                     	;# 
   912  0E18                     	;# 
   913  0E19                     	;# 
   914  0E1A                     	;# 
   915  0E1B                     	;# 
   916  0E1C                     	;# 
   917  0E1D                     	;# 
   918  0E1E                     	;# 
   919  0E1F                     	;# 
   920  0E20                     	;# 
   921  0E21                     	;# 
   922  0E22                     	;# 
   923  0E24                     	;# 
   924  0E25                     	;# 
   925  0E28                     	;# 
   926  0E29                     	;# 
   927  0E2A                     	;# 
   928  0E2B                     	;# 
   929  0E2C                     	;# 
   930  0E2D                     	;# 
   931  0E2E                     	;# 
   932  0E2F                     	;# 
   933  0E90                     	;# 
   934  0E91                     	;# 
   935  0E92                     	;# 
   936  0E94                     	;# 
   937  0E95                     	;# 
   938  0E9C                     	;# 
   939  0E9D                     	;# 
   940  0E9E                     	;# 
   941  0E9F                     	;# 
   942  0EA0                     	;# 
   943  0EA1                     	;# 
   944  0EA2                     	;# 
   945  0EA3                     	;# 
   946  0EA4                     	;# 
   947  0EA5                     	;# 
   948  0EA6                     	;# 
   949  0EA7                     	;# 
   950  0F0F                     	;# 
   951  0F10                     	;# 
   952  0F11                     	;# 
   953  0F12                     	;# 
   954  0F13                     	;# 
   955  0F14                     	;# 
   956  0F15                     	;# 
   957  0F16                     	;# 
   958  0F17                     	;# 
   959  0F18                     	;# 
   960  0F19                     	;# 
   961  0F1A                     	;# 
   962  0F1B                     	;# 
   963  0F1C                     	;# 
   964  0F1D                     	;# 
   965  0F1E                     	;# 
   966  0F1F                     	;# 
   967  0F20                     	;# 
   968  0F21                     	;# 
   969  0F22                     	;# 
   970  0F23                     	;# 
   971  0F24                     	;# 
   972  0F25                     	;# 
   973  0F26                     	;# 
   974  0F27                     	;# 
   975  0F28                     	;# 
   976  0F29                     	;# 
   977  0F2A                     	;# 
   978  0F2B                     	;# 
   979  0F2C                     	;# 
   980  0F2D                     	;# 
   981  0F2E                     	;# 
   982  0F2F                     	;# 
   983  0F30                     	;# 
   984  0F31                     	;# 
   985  0F32                     	;# 
   986  0F33                     	;# 
   987  0F34                     	;# 
   988  0F35                     	;# 
   989  0F36                     	;# 
   990  0F37                     	;# 
   991  0FE4                     	;# 
   992  0FE5                     	;# 
   993  0FE6                     	;# 
   994  0FE7                     	;# 
   995  0FE8                     	;# 
   996  0FE9                     	;# 
   997  0FEA                     	;# 
   998  0FEB                     	;# 
   999  0FED                     	;# 
  1000  0FEE                     	;# 
  1001  0FEF                     	;# 
  1002  0000                     	;# 
  1003  0001                     	;# 
  1004  0002                     	;# 
  1005  0003                     	;# 
  1006  0004                     	;# 
  1007  0005                     	;# 
  1008  0006                     	;# 
  1009  0007                     	;# 
  1010  0008                     	;# 
  1011  0009                     	;# 
  1012  000A                     	;# 
  1013  000B                     	;# 
  1014  000C                     	;# 
  1015  000D                     	;# 
  1016  000E                     	;# 
  1017  0010                     	;# 
  1018  0011                     	;# 
  1019  0012                     	;# 
  1020  0013                     	;# 
  1021  0014                     	;# 
  1022  0015                     	;# 
  1023  0015                     	;# 
  1024  0016                     	;# 
  1025  0016                     	;# 
  1026  0017                     	;# 
  1027  0018                     	;# 
  1028  0019                     	;# 
  1029  0019                     	;# 
  1030  001A                     	;# 
  1031  001B                     	;# 
  1032  001C                     	;# 
  1033  001D                     	;# 
  1034  001E                     	;# 
  1035  001F                     	;# 
  1036  008C                     	;# 
  1037  008D                     	;# 
  1038  008E                     	;# 
  1039  0090                     	;# 
  1040  0091                     	;# 
  1041  0092                     	;# 
  1042  0093                     	;# 
  1043  0094                     	;# 
  1044  0097                     	;# 
  1045  009B                     	;# 
  1046  009B                     	;# 
  1047  009C                     	;# 
  1048  009D                     	;# 
  1049  009E                     	;# 
  1050  009F                     	;# 
  1051  010C                     	;# 
  1052  010D                     	;# 
  1053  010E                     	;# 
  1054  0111                     	;# 
  1055  0112                     	;# 
  1056  0113                     	;# 
  1057  0114                     	;# 
  1058  0115                     	;# 
  1059  0116                     	;# 
  1060  0117                     	;# 
  1061  0118                     	;# 
  1062  0119                     	;# 
  1063  018C                     	;# 
  1064  018D                     	;# 
  1065  018E                     	;# 
  1066  0197                     	;# 
  1067  0199                     	;# 
  1068  0199                     	;# 
  1069  0199                     	;# 
  1070  019A                     	;# 
  1071  019A                     	;# 
  1072  019A                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019B                     	;# 
  1076  019B                     	;# 
  1077  019B                     	;# 
  1078  019C                     	;# 
  1079  019C                     	;# 
  1080  019C                     	;# 
  1081  019D                     	;# 
  1082  019D                     	;# 
  1083  019D                     	;# 
  1084  019E                     	;# 
  1085  019E                     	;# 
  1086  019E                     	;# 
  1087  019F                     	;# 
  1088  019F                     	;# 
  1089  019F                     	;# 
  1090  019F                     	;# 
  1091  019F                     	;# 
  1092  020C                     	;# 
  1093  020D                     	;# 
  1094  020E                     	;# 
  1095  0211                     	;# 
  1096  0211                     	;# 
  1097  0212                     	;# 
  1098  0212                     	;# 
  1099  0213                     	;# 
  1100  0213                     	;# 
  1101  0214                     	;# 
  1102  0214                     	;# 
  1103  0215                     	;# 
  1104  0215                     	;# 
  1105  0215                     	;# 
  1106  0215                     	;# 
  1107  0216                     	;# 
  1108  0216                     	;# 
  1109  0217                     	;# 
  1110  0217                     	;# 
  1111  0219                     	;# 
  1112  021A                     	;# 
  1113  021B                     	;# 
  1114  021C                     	;# 
  1115  021D                     	;# 
  1116  021D                     	;# 
  1117  021E                     	;# 
  1118  021F                     	;# 
  1119  028C                     	;# 
  1120  028D                     	;# 
  1121  028E                     	;# 
  1122  0291                     	;# 
  1123  0291                     	;# 
  1124  0292                     	;# 
  1125  0293                     	;# 
  1126  0294                     	;# 
  1127  0295                     	;# 
  1128  0295                     	;# 
  1129  0296                     	;# 
  1130  0297                     	;# 
  1131  0298                     	;# 
  1132  029F                     	;# 
  1133  030C                     	;# 
  1134  030D                     	;# 
  1135  030E                     	;# 
  1136  0311                     	;# 
  1137  0311                     	;# 
  1138  0312                     	;# 
  1139  0313                     	;# 
  1140  0314                     	;# 
  1141  0315                     	;# 
  1142  0315                     	;# 
  1143  0316                     	;# 
  1144  0317                     	;# 
  1145  0318                     	;# 
  1146  038C                     	;# 
  1147  038D                     	;# 
  1148  038E                     	;# 
  1149  0391                     	;# 
  1150  0392                     	;# 
  1151  0393                     	;# 
  1152  0394                     	;# 
  1153  0395                     	;# 
  1154  0396                     	;# 
  1155  0397                     	;# 
  1156  0398                     	;# 
  1157  0399                     	;# 
  1158  039A                     	;# 
  1159  039C                     	;# 
  1160  039D                     	;# 
  1161  039E                     	;# 
  1162  039F                     	;# 
  1163  0411                     	;# 
  1164  0411                     	;# 
  1165  0412                     	;# 
  1166  0413                     	;# 
  1167  0414                     	;# 
  1168  0415                     	;# 
  1169  0416                     	;# 
  1170  0417                     	;# 
  1171  0418                     	;# 
  1172  0418                     	;# 
  1173  0419                     	;# 
  1174  041A                     	;# 
  1175  041B                     	;# 
  1176  041C                     	;# 
  1177  041D                     	;# 
  1178  041E                     	;# 
  1179  041F                     	;# 
  1180  0498                     	;# 
  1181  0498                     	;# 
  1182  0499                     	;# 
  1183  049A                     	;# 
  1184  049B                     	;# 
  1185  049B                     	;# 
  1186  049C                     	;# 
  1187  049D                     	;# 
  1188  049E                     	;# 
  1189  049F                     	;# 
  1190  0617                     	;# 
  1191  0618                     	;# 
  1192  0619                     	;# 
  1193  0619                     	;# 
  1194  061A                     	;# 
  1195  061B                     	;# 
  1196  061C                     	;# 
  1197  061C                     	;# 
  1198  061F                     	;# 
  1199  0691                     	;# 
  1200  0692                     	;# 
  1201  0693                     	;# 
  1202  0694                     	;# 
  1203  0695                     	;# 
  1204  0696                     	;# 
  1205  0697                     	;# 
  1206  0698                     	;# 
  1207  0699                     	;# 
  1208  0711                     	;# 
  1209  0712                     	;# 
  1210  0713                     	;# 
  1211  0714                     	;# 
  1212  0715                     	;# 
  1213  0716                     	;# 
  1214  0717                     	;# 
  1215  0718                     	;# 
  1216  0719                     	;# 
  1217  0891                     	;# 
  1218  0891                     	;# 
  1219  0891                     	;# 
  1220  0891                     	;# 
  1221  0891                     	;# 
  1222  0891                     	;# 
  1223  0892                     	;# 
  1224  0892                     	;# 
  1225  0892                     	;# 
  1226  0893                     	;# 
  1227  0893                     	;# 
  1228  0893                     	;# 
  1229  0893                     	;# 
  1230  0893                     	;# 
  1231  0893                     	;# 
  1232  0894                     	;# 
  1233  0894                     	;# 
  1234  0894                     	;# 
  1235  0895                     	;# 
  1236  0895                     	;# 
  1237  0895                     	;# 
  1238  0896                     	;# 
  1239  0896                     	;# 
  1240  0896                     	;# 
  1241  089B                     	;# 
  1242  0911                     	;# 
  1243  0912                     	;# 
  1244  0913                     	;# 
  1245  0914                     	;# 
  1246  0915                     	;# 
  1247  0916                     	;# 
  1248  0918                     	;# 
  1249  0919                     	;# 
  1250  091A                     	;# 
  1251  091B                     	;# 
  1252  091C                     	;# 
  1253  091D                     	;# 
  1254  091E                     	;# 
  1255  091F                     	;# 
  1256  0E0F                     	;# 
  1257  0E10                     	;# 
  1258  0E11                     	;# 
  1259  0E12                     	;# 
  1260  0E13                     	;# 
  1261  0E14                     	;# 
  1262  0E15                     	;# 
  1263  0E16                     	;# 
  1264  0E17                     	;# 
  1265  0E18                     	;# 
  1266  0E19                     	;# 
  1267  0E1A                     	;# 
  1268  0E1B                     	;# 
  1269  0E1C                     	;# 
  1270  0E1D                     	;# 
  1271  0E1E                     	;# 
  1272  0E1F                     	;# 
  1273  0E20                     	;# 
  1274  0E21                     	;# 
  1275  0E22                     	;# 
  1276  0E24                     	;# 
  1277  0E25                     	;# 
  1278  0E28                     	;# 
  1279  0E29                     	;# 
  1280  0E2A                     	;# 
  1281  0E2B                     	;# 
  1282  0E2C                     	;# 
  1283  0E2D                     	;# 
  1284  0E2E                     	;# 
  1285  0E2F                     	;# 
  1286  0E90                     	;# 
  1287  0E91                     	;# 
  1288  0E92                     	;# 
  1289  0E94                     	;# 
  1290  0E95                     	;# 
  1291  0E9C                     	;# 
  1292  0E9D                     	;# 
  1293  0E9E                     	;# 
  1294  0E9F                     	;# 
  1295  0EA0                     	;# 
  1296  0EA1                     	;# 
  1297  0EA2                     	;# 
  1298  0EA3                     	;# 
  1299  0EA4                     	;# 
  1300  0EA5                     	;# 
  1301  0EA6                     	;# 
  1302  0EA7                     	;# 
  1303  0F0F                     	;# 
  1304  0F10                     	;# 
  1305  0F11                     	;# 
  1306  0F12                     	;# 
  1307  0F13                     	;# 
  1308  0F14                     	;# 
  1309  0F15                     	;# 
  1310  0F16                     	;# 
  1311  0F17                     	;# 
  1312  0F18                     	;# 
  1313  0F19                     	;# 
  1314  0F1A                     	;# 
  1315  0F1B                     	;# 
  1316  0F1C                     	;# 
  1317  0F1D                     	;# 
  1318  0F1E                     	;# 
  1319  0F1F                     	;# 
  1320  0F20                     	;# 
  1321  0F21                     	;# 
  1322  0F22                     	;# 
  1323  0F23                     	;# 
  1324  0F24                     	;# 
  1325  0F25                     	;# 
  1326  0F26                     	;# 
  1327  0F27                     	;# 
  1328  0F28                     	;# 
  1329  0F29                     	;# 
  1330  0F2A                     	;# 
  1331  0F2B                     	;# 
  1332  0F2C                     	;# 
  1333  0F2D                     	;# 
  1334  0F2E                     	;# 
  1335  0F2F                     	;# 
  1336  0F30                     	;# 
  1337  0F31                     	;# 
  1338  0F32                     	;# 
  1339  0F33                     	;# 
  1340  0F34                     	;# 
  1341  0F35                     	;# 
  1342  0F36                     	;# 
  1343  0F37                     	;# 
  1344  0FE4                     	;# 
  1345  0FE5                     	;# 
  1346  0FE6                     	;# 
  1347  0FE7                     	;# 
  1348  0FE8                     	;# 
  1349  0FE9                     	;# 
  1350  0FEA                     	;# 
  1351  0FEB                     	;# 
  1352  0FED                     	;# 
  1353  0FEE                     	;# 
  1354  0FEF                     	;# 
  1355  0000                     	;# 
  1356  0001                     	;# 
  1357  0002                     	;# 
  1358  0003                     	;# 
  1359  0004                     	;# 
  1360  0005                     	;# 
  1361  0006                     	;# 
  1362  0007                     	;# 
  1363  0008                     	;# 
  1364  0009                     	;# 
  1365  000A                     	;# 
  1366  000B                     	;# 
  1367  000C                     	;# 
  1368  000D                     	;# 
  1369  000E                     	;# 
  1370  0010                     	;# 
  1371  0011                     	;# 
  1372  0012                     	;# 
  1373  0013                     	;# 
  1374  0014                     	;# 
  1375  0015                     	;# 
  1376  0015                     	;# 
  1377  0016                     	;# 
  1378  0016                     	;# 
  1379  0017                     	;# 
  1380  0018                     	;# 
  1381  0019                     	;# 
  1382  0019                     	;# 
  1383  001A                     	;# 
  1384  001B                     	;# 
  1385  001C                     	;# 
  1386  001D                     	;# 
  1387  001E                     	;# 
  1388  001F                     	;# 
  1389  008C                     	;# 
  1390  008D                     	;# 
  1391  008E                     	;# 
  1392  0090                     	;# 
  1393  0091                     	;# 
  1394  0092                     	;# 
  1395  0093                     	;# 
  1396  0094                     	;# 
  1397  0097                     	;# 
  1398  009B                     	;# 
  1399  009B                     	;# 
  1400  009C                     	;# 
  1401  009D                     	;# 
  1402  009E                     	;# 
  1403  009F                     	;# 
  1404  010C                     	;# 
  1405  010D                     	;# 
  1406  010E                     	;# 
  1407  0111                     	;# 
  1408  0112                     	;# 
  1409  0113                     	;# 
  1410  0114                     	;# 
  1411  0115                     	;# 
  1412  0116                     	;# 
  1413  0117                     	;# 
  1414  0118                     	;# 
  1415  0119                     	;# 
  1416  018C                     	;# 
  1417  018D                     	;# 
  1418  018E                     	;# 
  1419  0197                     	;# 
  1420  0199                     	;# 
  1421  0199                     	;# 
  1422  0199                     	;# 
  1423  019A                     	;# 
  1424  019A                     	;# 
  1425  019A                     	;# 
  1426  019B                     	;# 
  1427  019B                     	;# 
  1428  019B                     	;# 
  1429  019B                     	;# 
  1430  019B                     	;# 
  1431  019C                     	;# 
  1432  019C                     	;# 
  1433  019C                     	;# 
  1434  019D                     	;# 
  1435  019D                     	;# 
  1436  019D                     	;# 
  1437  019E                     	;# 
  1438  019E                     	;# 
  1439  019E                     	;# 
  1440  019F                     	;# 
  1441  019F                     	;# 
  1442  019F                     	;# 
  1443  019F                     	;# 
  1444  019F                     	;# 
  1445  020C                     	;# 
  1446  020D                     	;# 
  1447  020E                     	;# 
  1448  0211                     	;# 
  1449  0211                     	;# 
  1450  0212                     	;# 
  1451  0212                     	;# 
  1452  0213                     	;# 
  1453  0213                     	;# 
  1454  0214                     	;# 
  1455  0214                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0215                     	;# 
  1460  0216                     	;# 
  1461  0216                     	;# 
  1462  0217                     	;# 
  1463  0217                     	;# 
  1464  0219                     	;# 
  1465  021A                     	;# 
  1466  021B                     	;# 
  1467  021C                     	;# 
  1468  021D                     	;# 
  1469  021D                     	;# 
  1470  021E                     	;# 
  1471  021F                     	;# 
  1472  028C                     	;# 
  1473  028D                     	;# 
  1474  028E                     	;# 
  1475  0291                     	;# 
  1476  0291                     	;# 
  1477  0292                     	;# 
  1478  0293                     	;# 
  1479  0294                     	;# 
  1480  0295                     	;# 
  1481  0295                     	;# 
  1482  0296                     	;# 
  1483  0297                     	;# 
  1484  0298                     	;# 
  1485  029F                     	;# 
  1486  030C                     	;# 
  1487  030D                     	;# 
  1488  030E                     	;# 
  1489  0311                     	;# 
  1490  0311                     	;# 
  1491  0312                     	;# 
  1492  0313                     	;# 
  1493  0314                     	;# 
  1494  0315                     	;# 
  1495  0315                     	;# 
  1496  0316                     	;# 
  1497  0317                     	;# 
  1498  0318                     	;# 
  1499  038C                     	;# 
  1500  038D                     	;# 
  1501  038E                     	;# 
  1502  0391                     	;# 
  1503  0392                     	;# 
  1504  0393                     	;# 
  1505  0394                     	;# 
  1506  0395                     	;# 
  1507  0396                     	;# 
  1508  0397                     	;# 
  1509  0398                     	;# 
  1510  0399                     	;# 
  1511  039A                     	;# 
  1512  039C                     	;# 
  1513  039D                     	;# 
  1514  039E                     	;# 
  1515  039F                     	;# 
  1516  0411                     	;# 
  1517  0411                     	;# 
  1518  0412                     	;# 
  1519  0413                     	;# 
  1520  0414                     	;# 
  1521  0415                     	;# 
  1522  0416                     	;# 
  1523  0417                     	;# 
  1524  0418                     	;# 
  1525  0418                     	;# 
  1526  0419                     	;# 
  1527  041A                     	;# 
  1528  041B                     	;# 
  1529  041C                     	;# 
  1530  041D                     	;# 
  1531  041E                     	;# 
  1532  041F                     	;# 
  1533  0498                     	;# 
  1534  0498                     	;# 
  1535  0499                     	;# 
  1536  049A                     	;# 
  1537  049B                     	;# 
  1538  049B                     	;# 
  1539  049C                     	;# 
  1540  049D                     	;# 
  1541  049E                     	;# 
  1542  049F                     	;# 
  1543  0617                     	;# 
  1544  0618                     	;# 
  1545  0619                     	;# 
  1546  0619                     	;# 
  1547  061A                     	;# 
  1548  061B                     	;# 
  1549  061C                     	;# 
  1550  061C                     	;# 
  1551  061F                     	;# 
  1552  0691                     	;# 
  1553  0692                     	;# 
  1554  0693                     	;# 
  1555  0694                     	;# 
  1556  0695                     	;# 
  1557  0696                     	;# 
  1558  0697                     	;# 
  1559  0698                     	;# 
  1560  0699                     	;# 
  1561  0711                     	;# 
  1562  0712                     	;# 
  1563  0713                     	;# 
  1564  0714                     	;# 
  1565  0715                     	;# 
  1566  0716                     	;# 
  1567  0717                     	;# 
  1568  0718                     	;# 
  1569  0719                     	;# 
  1570  0891                     	;# 
  1571  0891                     	;# 
  1572  0891                     	;# 
  1573  0891                     	;# 
  1574  0891                     	;# 
  1575  0891                     	;# 
  1576  0892                     	;# 
  1577  0892                     	;# 
  1578  0892                     	;# 
  1579  0893                     	;# 
  1580  0893                     	;# 
  1581  0893                     	;# 
  1582  0893                     	;# 
  1583  0893                     	;# 
  1584  0893                     	;# 
  1585  0894                     	;# 
  1586  0894                     	;# 
  1587  0894                     	;# 
  1588  0895                     	;# 
  1589  0895                     	;# 
  1590  0895                     	;# 
  1591  0896                     	;# 
  1592  0896                     	;# 
  1593  0896                     	;# 
  1594  089B                     	;# 
  1595  0911                     	;# 
  1596  0912                     	;# 
  1597  0913                     	;# 
  1598  0914                     	;# 
  1599  0915                     	;# 
  1600  0916                     	;# 
  1601  0918                     	;# 
  1602  0919                     	;# 
  1603  091A                     	;# 
  1604  091B                     	;# 
  1605  091C                     	;# 
  1606  091D                     	;# 
  1607  091E                     	;# 
  1608  091F                     	;# 
  1609  0E0F                     	;# 
  1610  0E10                     	;# 
  1611  0E11                     	;# 
  1612  0E12                     	;# 
  1613  0E13                     	;# 
  1614  0E14                     	;# 
  1615  0E15                     	;# 
  1616  0E16                     	;# 
  1617  0E17                     	;# 
  1618  0E18                     	;# 
  1619  0E19                     	;# 
  1620  0E1A                     	;# 
  1621  0E1B                     	;# 
  1622  0E1C                     	;# 
  1623  0E1D                     	;# 
  1624  0E1E                     	;# 
  1625  0E1F                     	;# 
  1626  0E20                     	;# 
  1627  0E21                     	;# 
  1628  0E22                     	;# 
  1629  0E24                     	;# 
  1630  0E25                     	;# 
  1631  0E28                     	;# 
  1632  0E29                     	;# 
  1633  0E2A                     	;# 
  1634  0E2B                     	;# 
  1635  0E2C                     	;# 
  1636  0E2D                     	;# 
  1637  0E2E                     	;# 
  1638  0E2F                     	;# 
  1639  0E90                     	;# 
  1640  0E91                     	;# 
  1641  0E92                     	;# 
  1642  0E94                     	;# 
  1643  0E95                     	;# 
  1644  0E9C                     	;# 
  1645  0E9D                     	;# 
  1646  0E9E                     	;# 
  1647  0E9F                     	;# 
  1648  0EA0                     	;# 
  1649  0EA1                     	;# 
  1650  0EA2                     	;# 
  1651  0EA3                     	;# 
  1652  0EA4                     	;# 
  1653  0EA5                     	;# 
  1654  0EA6                     	;# 
  1655  0EA7                     	;# 
  1656  0F0F                     	;# 
  1657  0F10                     	;# 
  1658  0F11                     	;# 
  1659  0F12                     	;# 
  1660  0F13                     	;# 
  1661  0F14                     	;# 
  1662  0F15                     	;# 
  1663  0F16                     	;# 
  1664  0F17                     	;# 
  1665  0F18                     	;# 
  1666  0F19                     	;# 
  1667  0F1A                     	;# 
  1668  0F1B                     	;# 
  1669  0F1C                     	;# 
  1670  0F1D                     	;# 
  1671  0F1E                     	;# 
  1672  0F1F                     	;# 
  1673  0F20                     	;# 
  1674  0F21                     	;# 
  1675  0F22                     	;# 
  1676  0F23                     	;# 
  1677  0F24                     	;# 
  1678  0F25                     	;# 
  1679  0F26                     	;# 
  1680  0F27                     	;# 
  1681  0F28                     	;# 
  1682  0F29                     	;# 
  1683  0F2A                     	;# 
  1684  0F2B                     	;# 
  1685  0F2C                     	;# 
  1686  0F2D                     	;# 
  1687  0F2E                     	;# 
  1688  0F2F                     	;# 
  1689  0F30                     	;# 
  1690  0F31                     	;# 
  1691  0F32                     	;# 
  1692  0F33                     	;# 
  1693  0F34                     	;# 
  1694  0F35                     	;# 
  1695  0F36                     	;# 
  1696  0F37                     	;# 
  1697  0FE4                     	;# 
  1698  0FE5                     	;# 
  1699  0FE6                     	;# 
  1700  0FE7                     	;# 
  1701  0FE8                     	;# 
  1702  0FE9                     	;# 
  1703  0FEA                     	;# 
  1704  0FEB                     	;# 
  1705  0FED                     	;# 
  1706  0FEE                     	;# 
  1707  0FEF                     	;# 
  1708  0000                     	;# 
  1709  0001                     	;# 
  1710  0002                     	;# 
  1711  0003                     	;# 
  1712  0004                     	;# 
  1713  0005                     	;# 
  1714  0006                     	;# 
  1715  0007                     	;# 
  1716  0008                     	;# 
  1717  0009                     	;# 
  1718  000A                     	;# 
  1719  000B                     	;# 
  1720  000C                     	;# 
  1721  000D                     	;# 
  1722  000E                     	;# 
  1723  0010                     	;# 
  1724  0011                     	;# 
  1725  0012                     	;# 
  1726  0013                     	;# 
  1727  0014                     	;# 
  1728  0015                     	;# 
  1729  0015                     	;# 
  1730  0016                     	;# 
  1731  0016                     	;# 
  1732  0017                     	;# 
  1733  0018                     	;# 
  1734  0019                     	;# 
  1735  0019                     	;# 
  1736  001A                     	;# 
  1737  001B                     	;# 
  1738  001C                     	;# 
  1739  001D                     	;# 
  1740  001E                     	;# 
  1741  001F                     	;# 
  1742  008C                     	;# 
  1743  008D                     	;# 
  1744  008E                     	;# 
  1745  0090                     	;# 
  1746  0091                     	;# 
  1747  0092                     	;# 
  1748  0093                     	;# 
  1749  0094                     	;# 
  1750  0097                     	;# 
  1751  009B                     	;# 
  1752  009B                     	;# 
  1753  009C                     	;# 
  1754  009D                     	;# 
  1755  009E                     	;# 
  1756  009F                     	;# 
  1757  010C                     	;# 
  1758  010D                     	;# 
  1759  010E                     	;# 
  1760  0111                     	;# 
  1761  0112                     	;# 
  1762  0113                     	;# 
  1763  0114                     	;# 
  1764  0115                     	;# 
  1765  0116                     	;# 
  1766  0117                     	;# 
  1767  0118                     	;# 
  1768  0119                     	;# 
  1769  018C                     	;# 
  1770  018D                     	;# 
  1771  018E                     	;# 
  1772  0197                     	;# 
  1773  0199                     	;# 
  1774  0199                     	;# 
  1775  0199                     	;# 
  1776  019A                     	;# 
  1777  019A                     	;# 
  1778  019A                     	;# 
  1779  019B                     	;# 
  1780  019B                     	;# 
  1781  019B                     	;# 
  1782  019B                     	;# 
  1783  019B                     	;# 
  1784  019C                     	;# 
  1785  019C                     	;# 
  1786  019C                     	;# 
  1787  019D                     	;# 
  1788  019D                     	;# 
  1789  019D                     	;# 
  1790  019E                     	;# 
  1791  019E                     	;# 
  1792  019E                     	;# 
  1793  019F                     	;# 
  1794  019F                     	;# 
  1795  019F                     	;# 
  1796  019F                     	;# 
  1797  019F                     	;# 
  1798  020C                     	;# 
  1799  020D                     	;# 
  1800  020E                     	;# 
  1801  0211                     	;# 
  1802  0211                     	;# 
  1803  0212                     	;# 
  1804  0212                     	;# 
  1805  0213                     	;# 
  1806  0213                     	;# 
  1807  0214                     	;# 
  1808  0214                     	;# 
  1809  0215                     	;# 
  1810  0215                     	;# 
  1811  0215                     	;# 
  1812  0215                     	;# 
  1813  0216                     	;# 
  1814  0216                     	;# 
  1815  0217                     	;# 
  1816  0217                     	;# 
  1817  0219                     	;# 
  1818  021A                     	;# 
  1819  021B                     	;# 
  1820  021C                     	;# 
  1821  021D                     	;# 
  1822  021D                     	;# 
  1823  021E                     	;# 
  1824  021F                     	;# 
  1825  028C                     	;# 
  1826  028D                     	;# 
  1827  028E                     	;# 
  1828  0291                     	;# 
  1829  0291                     	;# 
  1830  0292                     	;# 
  1831  0293                     	;# 
  1832  0294                     	;# 
  1833  0295                     	;# 
  1834  0295                     	;# 
  1835  0296                     	;# 
  1836  0297                     	;# 
  1837  0298                     	;# 
  1838  029F                     	;# 
  1839  030C                     	;# 
  1840  030D                     	;# 
  1841  030E                     	;# 
  1842  0311                     	;# 
  1843  0311                     	;# 
  1844  0312                     	;# 
  1845  0313                     	;# 
  1846  0314                     	;# 
  1847  0315                     	;# 
  1848  0315                     	;# 
  1849  0316                     	;# 
  1850  0317                     	;# 
  1851  0318                     	;# 
  1852  038C                     	;# 
  1853  038D                     	;# 
  1854  038E                     	;# 
  1855  0391                     	;# 
  1856  0392                     	;# 
  1857  0393                     	;# 
  1858  0394                     	;# 
  1859  0395                     	;# 
  1860  0396                     	;# 
  1861  0397                     	;# 
  1862  0398                     	;# 
  1863  0399                     	;# 
  1864  039A                     	;# 
  1865  039C                     	;# 
  1866  039D                     	;# 
  1867  039E                     	;# 
  1868  039F                     	;# 
  1869  0411                     	;# 
  1870  0411                     	;# 
  1871  0412                     	;# 
  1872  0413                     	;# 
  1873  0414                     	;# 
  1874  0415                     	;# 
  1875  0416                     	;# 
  1876  0417                     	;# 
  1877  0418                     	;# 
  1878  0418                     	;# 
  1879  0419                     	;# 
  1880  041A                     	;# 
  1881  041B                     	;# 
  1882  041C                     	;# 
  1883  041D                     	;# 
  1884  041E                     	;# 
  1885  041F                     	;# 
  1886  0498                     	;# 
  1887  0498                     	;# 
  1888  0499                     	;# 
  1889  049A                     	;# 
  1890  049B                     	;# 
  1891  049B                     	;# 
  1892  049C                     	;# 
  1893  049D                     	;# 
  1894  049E                     	;# 
  1895  049F                     	;# 
  1896  0617                     	;# 
  1897  0618                     	;# 
  1898  0619                     	;# 
  1899  0619                     	;# 
  1900  061A                     	;# 
  1901  061B                     	;# 
  1902  061C                     	;# 
  1903  061C                     	;# 
  1904  061F                     	;# 
  1905  0691                     	;# 
  1906  0692                     	;# 
  1907  0693                     	;# 
  1908  0694                     	;# 
  1909  0695                     	;# 
  1910  0696                     	;# 
  1911  0697                     	;# 
  1912  0698                     	;# 
  1913  0699                     	;# 
  1914  0711                     	;# 
  1915  0712                     	;# 
  1916  0713                     	;# 
  1917  0714                     	;# 
  1918  0715                     	;# 
  1919  0716                     	;# 
  1920  0717                     	;# 
  1921  0718                     	;# 
  1922  0719                     	;# 
  1923  0891                     	;# 
  1924  0891                     	;# 
  1925  0891                     	;# 
  1926  0891                     	;# 
  1927  0891                     	;# 
  1928  0891                     	;# 
  1929  0892                     	;# 
  1930  0892                     	;# 
  1931  0892                     	;# 
  1932  0893                     	;# 
  1933  0893                     	;# 
  1934  0893                     	;# 
  1935  0893                     	;# 
  1936  0893                     	;# 
  1937  0893                     	;# 
  1938  0894                     	;# 
  1939  0894                     	;# 
  1940  0894                     	;# 
  1941  0895                     	;# 
  1942  0895                     	;# 
  1943  0895                     	;# 
  1944  0896                     	;# 
  1945  0896                     	;# 
  1946  0896                     	;# 
  1947  089B                     	;# 
  1948  0911                     	;# 
  1949  0912                     	;# 
  1950  0913                     	;# 
  1951  0914                     	;# 
  1952  0915                     	;# 
  1953  0916                     	;# 
  1954  0918                     	;# 
  1955  0919                     	;# 
  1956  091A                     	;# 
  1957  091B                     	;# 
  1958  091C                     	;# 
  1959  091D                     	;# 
  1960  091E                     	;# 
  1961  091F                     	;# 
  1962  0E0F                     	;# 
  1963  0E10                     	;# 
  1964  0E11                     	;# 
  1965  0E12                     	;# 
  1966  0E13                     	;# 
  1967  0E14                     	;# 
  1968  0E15                     	;# 
  1969  0E16                     	;# 
  1970  0E17                     	;# 
  1971  0E18                     	;# 
  1972  0E19                     	;# 
  1973  0E1A                     	;# 
  1974  0E1B                     	;# 
  1975  0E1C                     	;# 
  1976  0E1D                     	;# 
  1977  0E1E                     	;# 
  1978  0E1F                     	;# 
  1979  0E20                     	;# 
  1980  0E21                     	;# 
  1981  0E22                     	;# 
  1982  0E24                     	;# 
  1983  0E25                     	;# 
  1984  0E28                     	;# 
  1985  0E29                     	;# 
  1986  0E2A                     	;# 
  1987  0E2B                     	;# 
  1988  0E2C                     	;# 
  1989  0E2D                     	;# 
  1990  0E2E                     	;# 
  1991  0E2F                     	;# 
  1992  0E90                     	;# 
  1993  0E91                     	;# 
  1994  0E92                     	;# 
  1995  0E94                     	;# 
  1996  0E95                     	;# 
  1997  0E9C                     	;# 
  1998  0E9D                     	;# 
  1999  0E9E                     	;# 
  2000  0E9F                     	;# 
  2001  0EA0                     	;# 
  2002  0EA1                     	;# 
  2003  0EA2                     	;# 
  2004  0EA3                     	;# 
  2005  0EA4                     	;# 
  2006  0EA5                     	;# 
  2007  0EA6                     	;# 
  2008  0EA7                     	;# 
  2009  0F0F                     	;# 
  2010  0F10                     	;# 
  2011  0F11                     	;# 
  2012  0F12                     	;# 
  2013  0F13                     	;# 
  2014  0F14                     	;# 
  2015  0F15                     	;# 
  2016  0F16                     	;# 
  2017  0F17                     	;# 
  2018  0F18                     	;# 
  2019  0F19                     	;# 
  2020  0F1A                     	;# 
  2021  0F1B                     	;# 
  2022  0F1C                     	;# 
  2023  0F1D                     	;# 
  2024  0F1E                     	;# 
  2025  0F1F                     	;# 
  2026  0F20                     	;# 
  2027  0F21                     	;# 
  2028  0F22                     	;# 
  2029  0F23                     	;# 
  2030  0F24                     	;# 
  2031  0F25                     	;# 
  2032  0F26                     	;# 
  2033  0F27                     	;# 
  2034  0F28                     	;# 
  2035  0F29                     	;# 
  2036  0F2A                     	;# 
  2037  0F2B                     	;# 
  2038  0F2C                     	;# 
  2039  0F2D                     	;# 
  2040  0F2E                     	;# 
  2041  0F2F                     	;# 
  2042  0F30                     	;# 
  2043  0F31                     	;# 
  2044  0F32                     	;# 
  2045  0F33                     	;# 
  2046  0F34                     	;# 
  2047  0F35                     	;# 
  2048  0F36                     	;# 
  2049  0F37                     	;# 
  2050  0FE4                     	;# 
  2051  0FE5                     	;# 
  2052  0FE6                     	;# 
  2053  0FE7                     	;# 
  2054  0FE8                     	;# 
  2055  0FE9                     	;# 
  2056  0FEA                     	;# 
  2057  0FEB                     	;# 
  2058  0FED                     	;# 
  2059  0FEE                     	;# 
  2060  0FEF                     	;# 
  2061  0000                     	;# 
  2062  0001                     	;# 
  2063  0002                     	;# 
  2064  0003                     	;# 
  2065  0004                     	;# 
  2066  0005                     	;# 
  2067  0006                     	;# 
  2068  0007                     	;# 
  2069  0008                     	;# 
  2070  0009                     	;# 
  2071  000A                     	;# 
  2072  000B                     	;# 
  2073  000C                     	;# 
  2074  000D                     	;# 
  2075  000E                     	;# 
  2076  0010                     	;# 
  2077  0011                     	;# 
  2078  0012                     	;# 
  2079  0013                     	;# 
  2080  0014                     	;# 
  2081  0015                     	;# 
  2082  0015                     	;# 
  2083  0016                     	;# 
  2084  0016                     	;# 
  2085  0017                     	;# 
  2086  0018                     	;# 
  2087  0019                     	;# 
  2088  0019                     	;# 
  2089  001A                     	;# 
  2090  001B                     	;# 
  2091  001C                     	;# 
  2092  001D                     	;# 
  2093  001E                     	;# 
  2094  001F                     	;# 
  2095  008C                     	;# 
  2096  008D                     	;# 
  2097  008E                     	;# 
  2098  0090                     	;# 
  2099  0091                     	;# 
  2100  0092                     	;# 
  2101  0093                     	;# 
  2102  0094                     	;# 
  2103  0097                     	;# 
  2104  009B                     	;# 
  2105  009B                     	;# 
  2106  009C                     	;# 
  2107  009D                     	;# 
  2108  009E                     	;# 
  2109  009F                     	;# 
  2110  010C                     	;# 
  2111  010D                     	;# 
  2112  010E                     	;# 
  2113  0111                     	;# 
  2114  0112                     	;# 
  2115  0113                     	;# 
  2116  0114                     	;# 
  2117  0115                     	;# 
  2118  0116                     	;# 
  2119  0117                     	;# 
  2120  0118                     	;# 
  2121  0119                     	;# 
  2122  018C                     	;# 
  2123  018D                     	;# 
  2124  018E                     	;# 
  2125  0197                     	;# 
  2126  0199                     	;# 
  2127  0199                     	;# 
  2128  0199                     	;# 
  2129  019A                     	;# 
  2130  019A                     	;# 
  2131  019A                     	;# 
  2132  019B                     	;# 
  2133  019B                     	;# 
  2134  019B                     	;# 
  2135  019B                     	;# 
  2136  019B                     	;# 
  2137  019C                     	;# 
  2138  019C                     	;# 
  2139  019C                     	;# 
  2140  019D                     	;# 
  2141  019D                     	;# 
  2142  019D                     	;# 
  2143  019E                     	;# 
  2144  019E                     	;# 
  2145  019E                     	;# 
  2146  019F                     	;# 
  2147  019F                     	;# 
  2148  019F                     	;# 
  2149  019F                     	;# 
  2150  019F                     	;# 
  2151  020C                     	;# 
  2152  020D                     	;# 
  2153  020E                     	;# 
  2154  0211                     	;# 
  2155  0211                     	;# 
  2156  0212                     	;# 
  2157  0212                     	;# 
  2158  0213                     	;# 
  2159  0213                     	;# 
  2160  0214                     	;# 
  2161  0214                     	;# 
  2162  0215                     	;# 
  2163  0215                     	;# 
  2164  0215                     	;# 
  2165  0215                     	;# 
  2166  0216                     	;# 
  2167  0216                     	;# 
  2168  0217                     	;# 
  2169  0217                     	;# 
  2170  0219                     	;# 
  2171  021A                     	;# 
  2172  021B                     	;# 
  2173  021C                     	;# 
  2174  021D                     	;# 
  2175  021D                     	;# 
  2176  021E                     	;# 
  2177  021F                     	;# 
  2178  028C                     	;# 
  2179  028D                     	;# 
  2180  028E                     	;# 
  2181  0291                     	;# 
  2182  0291                     	;# 
  2183  0292                     	;# 
  2184  0293                     	;# 
  2185  0294                     	;# 
  2186  0295                     	;# 
  2187  0295                     	;# 
  2188  0296                     	;# 
  2189  0297                     	;# 
  2190  0298                     	;# 
  2191  029F                     	;# 
  2192  030C                     	;# 
  2193  030D                     	;# 
  2194  030E                     	;# 
  2195  0311                     	;# 
  2196  0311                     	;# 
  2197  0312                     	;# 
  2198  0313                     	;# 
  2199  0314                     	;# 
  2200  0315                     	;# 
  2201  0315                     	;# 
  2202  0316                     	;# 
  2203  0317                     	;# 
  2204  0318                     	;# 
  2205  038C                     	;# 
  2206  038D                     	;# 
  2207  038E                     	;# 
  2208  0391                     	;# 
  2209  0392                     	;# 
  2210  0393                     	;# 
  2211  0394                     	;# 
  2212  0395                     	;# 
  2213  0396                     	;# 
  2214  0397                     	;# 
  2215  0398                     	;# 
  2216  0399                     	;# 
  2217  039A                     	;# 
  2218  039C                     	;# 
  2219  039D                     	;# 
  2220  039E                     	;# 
  2221  039F                     	;# 
  2222  0411                     	;# 
  2223  0411                     	;# 
  2224  0412                     	;# 
  2225  0413                     	;# 
  2226  0414                     	;# 
  2227  0415                     	;# 
  2228  0416                     	;# 
  2229  0417                     	;# 
  2230  0418                     	;# 
  2231  0418                     	;# 
  2232  0419                     	;# 
  2233  041A                     	;# 
  2234  041B                     	;# 
  2235  041C                     	;# 
  2236  041D                     	;# 
  2237  041E                     	;# 
  2238  041F                     	;# 
  2239  0498                     	;# 
  2240  0498                     	;# 
  2241  0499                     	;# 
  2242  049A                     	;# 
  2243  049B                     	;# 
  2244  049B                     	;# 
  2245  049C                     	;# 
  2246  049D                     	;# 
  2247  049E                     	;# 
  2248  049F                     	;# 
  2249  0617                     	;# 
  2250  0618                     	;# 
  2251  0619                     	;# 
  2252  0619                     	;# 
  2253  061A                     	;# 
  2254  061B                     	;# 
  2255  061C                     	;# 
  2256  061C                     	;# 
  2257  061F                     	;# 
  2258  0691                     	;# 
  2259  0692                     	;# 
  2260  0693                     	;# 
  2261  0694                     	;# 
  2262  0695                     	;# 
  2263  0696                     	;# 
  2264  0697                     	;# 
  2265  0698                     	;# 
  2266  0699                     	;# 
  2267  0711                     	;# 
  2268  0712                     	;# 
  2269  0713                     	;# 
  2270  0714                     	;# 
  2271  0715                     	;# 
  2272  0716                     	;# 
  2273  0717                     	;# 
  2274  0718                     	;# 
  2275  0719                     	;# 
  2276  0891                     	;# 
  2277  0891                     	;# 
  2278  0891                     	;# 
  2279  0891                     	;# 
  2280  0891                     	;# 
  2281  0891                     	;# 
  2282  0892                     	;# 
  2283  0892                     	;# 
  2284  0892                     	;# 
  2285  0893                     	;# 
  2286  0893                     	;# 
  2287  0893                     	;# 
  2288  0893                     	;# 
  2289  0893                     	;# 
  2290  0893                     	;# 
  2291  0894                     	;# 
  2292  0894                     	;# 
  2293  0894                     	;# 
  2294  0895                     	;# 
  2295  0895                     	;# 
  2296  0895                     	;# 
  2297  0896                     	;# 
  2298  0896                     	;# 
  2299  0896                     	;# 
  2300  089B                     	;# 
  2301  0911                     	;# 
  2302  0912                     	;# 
  2303  0913                     	;# 
  2304  0914                     	;# 
  2305  0915                     	;# 
  2306  0916                     	;# 
  2307  0918                     	;# 
  2308  0919                     	;# 
  2309  091A                     	;# 
  2310  091B                     	;# 
  2311  091C                     	;# 
  2312  091D                     	;# 
  2313  091E                     	;# 
  2314  091F                     	;# 
  2315  0E0F                     	;# 
  2316  0E10                     	;# 
  2317  0E11                     	;# 
  2318  0E12                     	;# 
  2319  0E13                     	;# 
  2320  0E14                     	;# 
  2321  0E15                     	;# 
  2322  0E16                     	;# 
  2323  0E17                     	;# 
  2324  0E18                     	;# 
  2325  0E19                     	;# 
  2326  0E1A                     	;# 
  2327  0E1B                     	;# 
  2328  0E1C                     	;# 
  2329  0E1D                     	;# 
  2330  0E1E                     	;# 
  2331  0E1F                     	;# 
  2332  0E20                     	;# 
  2333  0E21                     	;# 
  2334  0E22                     	;# 
  2335  0E24                     	;# 
  2336  0E25                     	;# 
  2337  0E28                     	;# 
  2338  0E29                     	;# 
  2339  0E2A                     	;# 
  2340  0E2B                     	;# 
  2341  0E2C                     	;# 
  2342  0E2D                     	;# 
  2343  0E2E                     	;# 
  2344  0E2F                     	;# 
  2345  0E90                     	;# 
  2346  0E91                     	;# 
  2347  0E92                     	;# 
  2348  0E94                     	;# 
  2349  0E95                     	;# 
  2350  0E9C                     	;# 
  2351  0E9D                     	;# 
  2352  0E9E                     	;# 
  2353  0E9F                     	;# 
  2354  0EA0                     	;# 
  2355  0EA1                     	;# 
  2356  0EA2                     	;# 
  2357  0EA3                     	;# 
  2358  0EA4                     	;# 
  2359  0EA5                     	;# 
  2360  0EA6                     	;# 
  2361  0EA7                     	;# 
  2362  0F0F                     	;# 
  2363  0F10                     	;# 
  2364  0F11                     	;# 
  2365  0F12                     	;# 
  2366  0F13                     	;# 
  2367  0F14                     	;# 
  2368  0F15                     	;# 
  2369  0F16                     	;# 
  2370  0F17                     	;# 
  2371  0F18                     	;# 
  2372  0F19                     	;# 
  2373  0F1A                     	;# 
  2374  0F1B                     	;# 
  2375  0F1C                     	;# 
  2376  0F1D                     	;# 
  2377  0F1E                     	;# 
  2378  0F1F                     	;# 
  2379  0F20                     	;# 
  2380  0F21                     	;# 
  2381  0F22                     	;# 
  2382  0F23                     	;# 
  2383  0F24                     	;# 
  2384  0F25                     	;# 
  2385  0F26                     	;# 
  2386  0F27                     	;# 
  2387  0F28                     	;# 
  2388  0F29                     	;# 
  2389  0F2A                     	;# 
  2390  0F2B                     	;# 
  2391  0F2C                     	;# 
  2392  0F2D                     	;# 
  2393  0F2E                     	;# 
  2394  0F2F                     	;# 
  2395  0F30                     	;# 
  2396  0F31                     	;# 
  2397  0F32                     	;# 
  2398  0F33                     	;# 
  2399  0F34                     	;# 
  2400  0F35                     	;# 
  2401  0F36                     	;# 
  2402  0F37                     	;# 
  2403  0FE4                     	;# 
  2404  0FE5                     	;# 
  2405  0FE6                     	;# 
  2406  0FE7                     	;# 
  2407  0FE8                     	;# 
  2408  0FE9                     	;# 
  2409  0FEA                     	;# 
  2410  0FEB                     	;# 
  2411  0FED                     	;# 
  2412  0FEE                     	;# 
  2413  0FEF                     	;# 
  2414  0000                     	;# 
  2415  0001                     	;# 
  2416  0002                     	;# 
  2417  0003                     	;# 
  2418  0004                     	;# 
  2419  0005                     	;# 
  2420  0006                     	;# 
  2421  0007                     	;# 
  2422  0008                     	;# 
  2423  0009                     	;# 
  2424  000A                     	;# 
  2425  000B                     	;# 
  2426  000C                     	;# 
  2427  000D                     	;# 
  2428  000E                     	;# 
  2429  0010                     	;# 
  2430  0011                     	;# 
  2431  0012                     	;# 
  2432  0013                     	;# 
  2433  0014                     	;# 
  2434  0015                     	;# 
  2435  0015                     	;# 
  2436  0016                     	;# 
  2437  0016                     	;# 
  2438  0017                     	;# 
  2439  0018                     	;# 
  2440  0019                     	;# 
  2441  0019                     	;# 
  2442  001A                     	;# 
  2443  001B                     	;# 
  2444  001C                     	;# 
  2445  001D                     	;# 
  2446  001E                     	;# 
  2447  001F                     	;# 
  2448  008C                     	;# 
  2449  008D                     	;# 
  2450  008E                     	;# 
  2451  0090                     	;# 
  2452  0091                     	;# 
  2453  0092                     	;# 
  2454  0093                     	;# 
  2455  0094                     	;# 
  2456  0097                     	;# 
  2457  009B                     	;# 
  2458  009B                     	;# 
  2459  009C                     	;# 
  2460  009D                     	;# 
  2461  009E                     	;# 
  2462  009F                     	;# 
  2463  010C                     	;# 
  2464  010D                     	;# 
  2465  010E                     	;# 
  2466  0111                     	;# 
  2467  0112                     	;# 
  2468  0113                     	;# 
  2469  0114                     	;# 
  2470  0115                     	;# 
  2471  0116                     	;# 
  2472  0117                     	;# 
  2473  0118                     	;# 
  2474  0119                     	;# 
  2475  018C                     	;# 
  2476  018D                     	;# 
  2477  018E                     	;# 
  2478  0197                     	;# 
  2479  0199                     	;# 
  2480  0199                     	;# 
  2481  0199                     	;# 
  2482  019A                     	;# 
  2483  019A                     	;# 
  2484  019A                     	;# 
  2485  019B                     	;# 
  2486  019B                     	;# 
  2487  019B                     	;# 
  2488  019B                     	;# 
  2489  019B                     	;# 
  2490  019C                     	;# 
  2491  019C                     	;# 
  2492  019C                     	;# 
  2493  019D                     	;# 
  2494  019D                     	;# 
  2495  019D                     	;# 
  2496  019E                     	;# 
  2497  019E                     	;# 
  2498  019E                     	;# 
  2499  019F                     	;# 
  2500  019F                     	;# 
  2501  019F                     	;# 
  2502  019F                     	;# 
  2503  019F                     	;# 
  2504  020C                     	;# 
  2505  020D                     	;# 
  2506  020E                     	;# 
  2507  0211                     	;# 
  2508  0211                     	;# 
  2509  0212                     	;# 
  2510  0212                     	;# 
  2511  0213                     	;# 
  2512  0213                     	;# 
  2513  0214                     	;# 
  2514  0214                     	;# 
  2515  0215                     	;# 
  2516  0215                     	;# 
  2517  0215                     	;# 
  2518  0215                     	;# 
  2519  0216                     	;# 
  2520  0216                     	;# 
  2521  0217                     	;# 
  2522  0217                     	;# 
  2523  0219                     	;# 
  2524  021A                     	;# 
  2525  021B                     	;# 
  2526  021C                     	;# 
  2527  021D                     	;# 
  2528  021D                     	;# 
  2529  021E                     	;# 
  2530  021F                     	;# 
  2531  028C                     	;# 
  2532  028D                     	;# 
  2533  028E                     	;# 
  2534  0291                     	;# 
  2535  0291                     	;# 
  2536  0292                     	;# 
  2537  0293                     	;# 
  2538  0294                     	;# 
  2539  0295                     	;# 
  2540  0295                     	;# 
  2541  0296                     	;# 
  2542  0297                     	;# 
  2543  0298                     	;# 
  2544  029F                     	;# 
  2545  030C                     	;# 
  2546  030D                     	;# 
  2547  030E                     	;# 
  2548  0311                     	;# 
  2549  0311                     	;# 
  2550  0312                     	;# 
  2551  0313                     	;# 
  2552  0314                     	;# 
  2553  0315                     	;# 
  2554  0315                     	;# 
  2555  0316                     	;# 
  2556  0317                     	;# 
  2557  0318                     	;# 
  2558  038C                     	;# 
  2559  038D                     	;# 
  2560  038E                     	;# 
  2561  0391                     	;# 
  2562  0392                     	;# 
  2563  0393                     	;# 
  2564  0394                     	;# 
  2565  0395                     	;# 
  2566  0396                     	;# 
  2567  0397                     	;# 
  2568  0398                     	;# 
  2569  0399                     	;# 
  2570  039A                     	;# 
  2571  039C                     	;# 
  2572  039D                     	;# 
  2573  039E                     	;# 
  2574  039F                     	;# 
  2575  0411                     	;# 
  2576  0411                     	;# 
  2577  0412                     	;# 
  2578  0413                     	;# 
  2579  0414                     	;# 
  2580  0415                     	;# 
  2581  0416                     	;# 
  2582  0417                     	;# 
  2583  0418                     	;# 
  2584  0418                     	;# 
  2585  0419                     	;# 
  2586  041A                     	;# 
  2587  041B                     	;# 
  2588  041C                     	;# 
  2589  041D                     	;# 
  2590  041E                     	;# 
  2591  041F                     	;# 
  2592  0498                     	;# 
  2593  0498                     	;# 
  2594  0499                     	;# 
  2595  049A                     	;# 
  2596  049B                     	;# 
  2597  049B                     	;# 
  2598  049C                     	;# 
  2599  049D                     	;# 
  2600  049E                     	;# 
  2601  049F                     	;# 
  2602  0617                     	;# 
  2603  0618                     	;# 
  2604  0619                     	;# 
  2605  0619                     	;# 
  2606  061A                     	;# 
  2607  061B                     	;# 
  2608  061C                     	;# 
  2609  061C                     	;# 
  2610  061F                     	;# 
  2611  0691                     	;# 
  2612  0692                     	;# 
  2613  0693                     	;# 
  2614  0694                     	;# 
  2615  0695                     	;# 
  2616  0696                     	;# 
  2617  0697                     	;# 
  2618  0698                     	;# 
  2619  0699                     	;# 
  2620  0711                     	;# 
  2621  0712                     	;# 
  2622  0713                     	;# 
  2623  0714                     	;# 
  2624  0715                     	;# 
  2625  0716                     	;# 
  2626  0717                     	;# 
  2627  0718                     	;# 
  2628  0719                     	;# 
  2629  0891                     	;# 
  2630  0891                     	;# 
  2631  0891                     	;# 
  2632  0891                     	;# 
  2633  0891                     	;# 
  2634  0891                     	;# 
  2635  0892                     	;# 
  2636  0892                     	;# 
  2637  0892                     	;# 
  2638  0893                     	;# 
  2639  0893                     	;# 
  2640  0893                     	;# 
  2641  0893                     	;# 
  2642  0893                     	;# 
  2643  0893                     	;# 
  2644  0894                     	;# 
  2645  0894                     	;# 
  2646  0894                     	;# 
  2647  0895                     	;# 
  2648  0895                     	;# 
  2649  0895                     	;# 
  2650  0896                     	;# 
  2651  0896                     	;# 
  2652  0896                     	;# 
  2653  089B                     	;# 
  2654  0911                     	;# 
  2655  0912                     	;# 
  2656  0913                     	;# 
  2657  0914                     	;# 
  2658  0915                     	;# 
  2659  0916                     	;# 
  2660  0918                     	;# 
  2661  0919                     	;# 
  2662  091A                     	;# 
  2663  091B                     	;# 
  2664  091C                     	;# 
  2665  091D                     	;# 
  2666  091E                     	;# 
  2667  091F                     	;# 
  2668  0E0F                     	;# 
  2669  0E10                     	;# 
  2670  0E11                     	;# 
  2671  0E12                     	;# 
  2672  0E13                     	;# 
  2673  0E14                     	;# 
  2674  0E15                     	;# 
  2675  0E16                     	;# 
  2676  0E17                     	;# 
  2677  0E18                     	;# 
  2678  0E19                     	;# 
  2679  0E1A                     	;# 
  2680  0E1B                     	;# 
  2681  0E1C                     	;# 
  2682  0E1D                     	;# 
  2683  0E1E                     	;# 
  2684  0E1F                     	;# 
  2685  0E20                     	;# 
  2686  0E21                     	;# 
  2687  0E22                     	;# 
  2688  0E24                     	;# 
  2689  0E25                     	;# 
  2690  0E28                     	;# 
  2691  0E29                     	;# 
  2692  0E2A                     	;# 
  2693  0E2B                     	;# 
  2694  0E2C                     	;# 
  2695  0E2D                     	;# 
  2696  0E2E                     	;# 
  2697  0E2F                     	;# 
  2698  0E90                     	;# 
  2699  0E91                     	;# 
  2700  0E92                     	;# 
  2701  0E94                     	;# 
  2702  0E95                     	;# 
  2703  0E9C                     	;# 
  2704  0E9D                     	;# 
  2705  0E9E                     	;# 
  2706  0E9F                     	;# 
  2707  0EA0                     	;# 
  2708  0EA1                     	;# 
  2709  0EA2                     	;# 
  2710  0EA3                     	;# 
  2711  0EA4                     	;# 
  2712  0EA5                     	;# 
  2713  0EA6                     	;# 
  2714  0EA7                     	;# 
  2715  0F0F                     	;# 
  2716  0F10                     	;# 
  2717  0F11                     	;# 
  2718  0F12                     	;# 
  2719  0F13                     	;# 
  2720  0F14                     	;# 
  2721  0F15                     	;# 
  2722  0F16                     	;# 
  2723  0F17                     	;# 
  2724  0F18                     	;# 
  2725  0F19                     	;# 
  2726  0F1A                     	;# 
  2727  0F1B                     	;# 
  2728  0F1C                     	;# 
  2729  0F1D                     	;# 
  2730  0F1E                     	;# 
  2731  0F1F                     	;# 
  2732  0F20                     	;# 
  2733  0F21                     	;# 
  2734  0F22                     	;# 
  2735  0F23                     	;# 
  2736  0F24                     	;# 
  2737  0F25                     	;# 
  2738  0F26                     	;# 
  2739  0F27                     	;# 
  2740  0F28                     	;# 
  2741  0F29                     	;# 
  2742  0F2A                     	;# 
  2743  0F2B                     	;# 
  2744  0F2C                     	;# 
  2745  0F2D                     	;# 
  2746  0F2E                     	;# 
  2747  0F2F                     	;# 
  2748  0F30                     	;# 
  2749  0F31                     	;# 
  2750  0F32                     	;# 
  2751  0F33                     	;# 
  2752  0F34                     	;# 
  2753  0F35                     	;# 
  2754  0F36                     	;# 
  2755  0F37                     	;# 
  2756  0FE4                     	;# 
  2757  0FE5                     	;# 
  2758  0FE6                     	;# 
  2759  0FE7                     	;# 
  2760  0FE8                     	;# 
  2761  0FE9                     	;# 
  2762  0FEA                     	;# 
  2763  0FEB                     	;# 
  2764  0FED                     	;# 
  2765  0FEE                     	;# 
  2766  0FEF                     	;# 
  2767  0000                     	;# 
  2768  0001                     	;# 
  2769  0002                     	;# 
  2770  0003                     	;# 
  2771  0004                     	;# 
  2772  0005                     	;# 
  2773  0006                     	;# 
  2774  0007                     	;# 
  2775  0008                     	;# 
  2776  0009                     	;# 
  2777  000A                     	;# 
  2778  000B                     	;# 
  2779  000C                     	;# 
  2780  000D                     	;# 
  2781  000E                     	;# 
  2782  0010                     	;# 
  2783  0011                     	;# 
  2784  0012                     	;# 
  2785  0013                     	;# 
  2786  0014                     	;# 
  2787  0015                     	;# 
  2788  0015                     	;# 
  2789  0016                     	;# 
  2790  0016                     	;# 
  2791  0017                     	;# 
  2792  0018                     	;# 
  2793  0019                     	;# 
  2794  0019                     	;# 
  2795  001A                     	;# 
  2796  001B                     	;# 
  2797  001C                     	;# 
  2798  001D                     	;# 
  2799  001E                     	;# 
  2800  001F                     	;# 
  2801  008C                     	;# 
  2802  008D                     	;# 
  2803  008E                     	;# 
  2804  0090                     	;# 
  2805  0091                     	;# 
  2806  0092                     	;# 
  2807  0093                     	;# 
  2808  0094                     	;# 
  2809  0097                     	;# 
  2810  009B                     	;# 
  2811  009B                     	;# 
  2812  009C                     	;# 
  2813  009D                     	;# 
  2814  009E                     	;# 
  2815  009F                     	;# 
  2816  010C                     	;# 
  2817  010D                     	;# 
  2818  010E                     	;# 
  2819  0111                     	;# 
  2820  0112                     	;# 
  2821  0113                     	;# 
  2822  0114                     	;# 
  2823  0115                     	;# 
  2824  0116                     	;# 
  2825  0117                     	;# 
  2826  0118                     	;# 
  2827  0119                     	;# 
  2828  018C                     	;# 
  2829  018D                     	;# 
  2830  018E                     	;# 
  2831  0197                     	;# 
  2832  0199                     	;# 
  2833  0199                     	;# 
  2834  0199                     	;# 
  2835  019A                     	;# 
  2836  019A                     	;# 
  2837  019A                     	;# 
  2838  019B                     	;# 
  2839  019B                     	;# 
  2840  019B                     	;# 
  2841  019B                     	;# 
  2842  019B                     	;# 
  2843  019C                     	;# 
  2844  019C                     	;# 
  2845  019C                     	;# 
  2846  019D                     	;# 
  2847  019D                     	;# 
  2848  019D                     	;# 
  2849  019E                     	;# 
  2850  019E                     	;# 
  2851  019E                     	;# 
  2852  019F                     	;# 
  2853  019F                     	;# 
  2854  019F                     	;# 
  2855  019F                     	;# 
  2856  019F                     	;# 
  2857  020C                     	;# 
  2858  020D                     	;# 
  2859  020E                     	;# 
  2860  0211                     	;# 
  2861  0211                     	;# 
  2862  0212                     	;# 
  2863  0212                     	;# 
  2864  0213                     	;# 
  2865  0213                     	;# 
  2866  0214                     	;# 
  2867  0214                     	;# 
  2868  0215                     	;# 
  2869  0215                     	;# 
  2870  0215                     	;# 
  2871  0215                     	;# 
  2872  0216                     	;# 
  2873  0216                     	;# 
  2874  0217                     	;# 
  2875  0217                     	;# 
  2876  0219                     	;# 
  2877  021A                     	;# 
  2878  021B                     	;# 
  2879  021C                     	;# 
  2880  021D                     	;# 
  2881  021D                     	;# 
  2882  021E                     	;# 
  2883  021F                     	;# 
  2884  028C                     	;# 
  2885  028D                     	;# 
  2886  028E                     	;# 
  2887  0291                     	;# 
  2888  0291                     	;# 
  2889  0292                     	;# 
  2890  0293                     	;# 
  2891  0294                     	;# 
  2892  0295                     	;# 
  2893  0295                     	;# 
  2894  0296                     	;# 
  2895  0297                     	;# 
  2896  0298                     	;# 
  2897  029F                     	;# 
  2898  030C                     	;# 
  2899  030D                     	;# 
  2900  030E                     	;# 
  2901  0311                     	;# 
  2902  0311                     	;# 
  2903  0312                     	;# 
  2904  0313                     	;# 
  2905  0314                     	;# 
  2906  0315                     	;# 
  2907  0315                     	;# 
  2908  0316                     	;# 
  2909  0317                     	;# 
  2910  0318                     	;# 
  2911  038C                     	;# 
  2912  038D                     	;# 
  2913  038E                     	;# 
  2914  0391                     	;# 
  2915  0392                     	;# 
  2916  0393                     	;# 
  2917  0394                     	;# 
  2918  0395                     	;# 
  2919  0396                     	;# 
  2920  0397                     	;# 
  2921  0398                     	;# 
  2922  0399                     	;# 
  2923  039A                     	;# 
  2924  039C                     	;# 
  2925  039D                     	;# 
  2926  039E                     	;# 
  2927  039F                     	;# 
  2928  0411                     	;# 
  2929  0411                     	;# 
  2930  0412                     	;# 
  2931  0413                     	;# 
  2932  0414                     	;# 
  2933  0415                     	;# 
  2934  0416                     	;# 
  2935  0417                     	;# 
  2936  0418                     	;# 
  2937  0418                     	;# 
  2938  0419                     	;# 
  2939  041A                     	;# 
  2940  041B                     	;# 
  2941  041C                     	;# 
  2942  041D                     	;# 
  2943  041E                     	;# 
  2944  041F                     	;# 
  2945  0498                     	;# 
  2946  0498                     	;# 
  2947  0499                     	;# 
  2948  049A                     	;# 
  2949  049B                     	;# 
  2950  049B                     	;# 
  2951  049C                     	;# 
  2952  049D                     	;# 
  2953  049E                     	;# 
  2954  049F                     	;# 
  2955  0617                     	;# 
  2956  0618                     	;# 
  2957  0619                     	;# 
  2958  0619                     	;# 
  2959  061A                     	;# 
  2960  061B                     	;# 
  2961  061C                     	;# 
  2962  061C                     	;# 
  2963  061F                     	;# 
  2964  0691                     	;# 
  2965  0692                     	;# 
  2966  0693                     	;# 
  2967  0694                     	;# 
  2968  0695                     	;# 
  2969  0696                     	;# 
  2970  0697                     	;# 
  2971  0698                     	;# 
  2972  0699                     	;# 
  2973  0711                     	;# 
  2974  0712                     	;# 
  2975  0713                     	;# 
  2976  0714                     	;# 
  2977  0715                     	;# 
  2978  0716                     	;# 
  2979  0717                     	;# 
  2980  0718                     	;# 
  2981  0719                     	;# 
  2982  0891                     	;# 
  2983  0891                     	;# 
  2984  0891                     	;# 
  2985  0891                     	;# 
  2986  0891                     	;# 
  2987  0891                     	;# 
  2988  0892                     	;# 
  2989  0892                     	;# 
  2990  0892                     	;# 
  2991  0893                     	;# 
  2992  0893                     	;# 
  2993  0893                     	;# 
  2994  0893                     	;# 
  2995  0893                     	;# 
  2996  0893                     	;# 
  2997  0894                     	;# 
  2998  0894                     	;# 
  2999  0894                     	;# 
  3000  0895                     	;# 
  3001  0895                     	;# 
  3002  0895                     	;# 
  3003  0896                     	;# 
  3004  0896                     	;# 
  3005  0896                     	;# 
  3006  089B                     	;# 
  3007  0911                     	;# 
  3008  0912                     	;# 
  3009  0913                     	;# 
  3010  0914                     	;# 
  3011  0915                     	;# 
  3012  0916                     	;# 
  3013  0918                     	;# 
  3014  0919                     	;# 
  3015  091A                     	;# 
  3016  091B                     	;# 
  3017  091C                     	;# 
  3018  091D                     	;# 
  3019  091E                     	;# 
  3020  091F                     	;# 
  3021  0E0F                     	;# 
  3022  0E10                     	;# 
  3023  0E11                     	;# 
  3024  0E12                     	;# 
  3025  0E13                     	;# 
  3026  0E14                     	;# 
  3027  0E15                     	;# 
  3028  0E16                     	;# 
  3029  0E17                     	;# 
  3030  0E18                     	;# 
  3031  0E19                     	;# 
  3032  0E1A                     	;# 
  3033  0E1B                     	;# 
  3034  0E1C                     	;# 
  3035  0E1D                     	;# 
  3036  0E1E                     	;# 
  3037  0E1F                     	;# 
  3038  0E20                     	;# 
  3039  0E21                     	;# 
  3040  0E22                     	;# 
  3041  0E24                     	;# 
  3042  0E25                     	;# 
  3043  0E28                     	;# 
  3044  0E29                     	;# 
  3045  0E2A                     	;# 
  3046  0E2B                     	;# 
  3047  0E2C                     	;# 
  3048  0E2D                     	;# 
  3049  0E2E                     	;# 
  3050  0E2F                     	;# 
  3051  0E90                     	;# 
  3052  0E91                     	;# 
  3053  0E92                     	;# 
  3054  0E94                     	;# 
  3055  0E95                     	;# 
  3056  0E9C                     	;# 
  3057  0E9D                     	;# 
  3058  0E9E                     	;# 
  3059  0E9F                     	;# 
  3060  0EA0                     	;# 
  3061  0EA1                     	;# 
  3062  0EA2                     	;# 
  3063  0EA3                     	;# 
  3064  0EA4                     	;# 
  3065  0EA5                     	;# 
  3066  0EA6                     	;# 
  3067  0EA7                     	;# 
  3068  0F0F                     	;# 
  3069  0F10                     	;# 
  3070  0F11                     	;# 
  3071  0F12                     	;# 
  3072  0F13                     	;# 
  3073  0F14                     	;# 
  3074  0F15                     	;# 
  3075  0F16                     	;# 
  3076  0F17                     	;# 
  3077  0F18                     	;# 
  3078  0F19                     	;# 
  3079  0F1A                     	;# 
  3080  0F1B                     	;# 
  3081  0F1C                     	;# 
  3082  0F1D                     	;# 
  3083  0F1E                     	;# 
  3084  0F1F                     	;# 
  3085  0F20                     	;# 
  3086  0F21                     	;# 
  3087  0F22                     	;# 
  3088  0F23                     	;# 
  3089  0F24                     	;# 
  3090  0F25                     	;# 
  3091  0F26                     	;# 
  3092  0F27                     	;# 
  3093  0F28                     	;# 
  3094  0F29                     	;# 
  3095  0F2A                     	;# 
  3096  0F2B                     	;# 
  3097  0F2C                     	;# 
  3098  0F2D                     	;# 
  3099  0F2E                     	;# 
  3100  0F2F                     	;# 
  3101  0F30                     	;# 
  3102  0F31                     	;# 
  3103  0F32                     	;# 
  3104  0F33                     	;# 
  3105  0F34                     	;# 
  3106  0F35                     	;# 
  3107  0F36                     	;# 
  3108  0F37                     	;# 
  3109  0FE4                     	;# 
  3110  0FE5                     	;# 
  3111  0FE6                     	;# 
  3112  0FE7                     	;# 
  3113  0FE8                     	;# 
  3114  0FE9                     	;# 
  3115  0FEA                     	;# 
  3116  0FEB                     	;# 
  3117  0FED                     	;# 
  3118  0FEE                     	;# 
  3119  0FEF                     	;# 
  3120  0000                     	;# 
  3121  0001                     	;# 
  3122  0002                     	;# 
  3123  0003                     	;# 
  3124  0004                     	;# 
  3125  0005                     	;# 
  3126  0006                     	;# 
  3127  0007                     	;# 
  3128  0008                     	;# 
  3129  0009                     	;# 
  3130  000A                     	;# 
  3131  000B                     	;# 
  3132  000C                     	;# 
  3133  000D                     	;# 
  3134  000E                     	;# 
  3135  0010                     	;# 
  3136  0011                     	;# 
  3137  0012                     	;# 
  3138  0013                     	;# 
  3139  0014                     	;# 
  3140  0015                     	;# 
  3141  0015                     	;# 
  3142  0016                     	;# 
  3143  0016                     	;# 
  3144  0017                     	;# 
  3145  0018                     	;# 
  3146  0019                     	;# 
  3147  0019                     	;# 
  3148  001A                     	;# 
  3149  001B                     	;# 
  3150  001C                     	;# 
  3151  001D                     	;# 
  3152  001E                     	;# 
  3153  001F                     	;# 
  3154  008C                     	;# 
  3155  008D                     	;# 
  3156  008E                     	;# 
  3157  0090                     	;# 
  3158  0091                     	;# 
  3159  0092                     	;# 
  3160  0093                     	;# 
  3161  0094                     	;# 
  3162  0097                     	;# 
  3163  009B                     	;# 
  3164  009B                     	;# 
  3165  009C                     	;# 
  3166  009D                     	;# 
  3167  009E                     	;# 
  3168  009F                     	;# 
  3169  010C                     	;# 
  3170  010D                     	;# 
  3171  010E                     	;# 
  3172  0111                     	;# 
  3173  0112                     	;# 
  3174  0113                     	;# 
  3175  0114                     	;# 
  3176  0115                     	;# 
  3177  0116                     	;# 
  3178  0117                     	;# 
  3179  0118                     	;# 
  3180  0119                     	;# 
  3181  018C                     	;# 
  3182  018D                     	;# 
  3183  018E                     	;# 
  3184  0197                     	;# 
  3185  0199                     	;# 
  3186  0199                     	;# 
  3187  0199                     	;# 
  3188  019A                     	;# 
  3189  019A                     	;# 
  3190  019A                     	;# 
  3191  019B                     	;# 
  3192  019B                     	;# 
  3193  019B                     	;# 
  3194  019B                     	;# 
  3195  019B                     	;# 
  3196  019C                     	;# 
  3197  019C                     	;# 
  3198  019C                     	;# 
  3199  019D                     	;# 
  3200  019D                     	;# 
  3201  019D                     	;# 
  3202  019E                     	;# 
  3203  019E                     	;# 
  3204  019E                     	;# 
  3205  019F                     	;# 
  3206  019F                     	;# 
  3207  019F                     	;# 
  3208  019F                     	;# 
  3209  019F                     	;# 
  3210  020C                     	;# 
  3211  020D                     	;# 
  3212  020E                     	;# 
  3213  0211                     	;# 
  3214  0211                     	;# 
  3215  0212                     	;# 
  3216  0212                     	;# 
  3217  0213                     	;# 
  3218  0213                     	;# 
  3219  0214                     	;# 
  3220  0214                     	;# 
  3221  0215                     	;# 
  3222  0215                     	;# 
  3223  0215                     	;# 
  3224  0215                     	;# 
  3225  0216                     	;# 
  3226  0216                     	;# 
  3227  0217                     	;# 
  3228  0217                     	;# 
  3229  0219                     	;# 
  3230  021A                     	;# 
  3231  021B                     	;# 
  3232  021C                     	;# 
  3233  021D                     	;# 
  3234  021D                     	;# 
  3235  021E                     	;# 
  3236  021F                     	;# 
  3237  028C                     	;# 
  3238  028D                     	;# 
  3239  028E                     	;# 
  3240  0291                     	;# 
  3241  0291                     	;# 
  3242  0292                     	;# 
  3243  0293                     	;# 
  3244  0294                     	;# 
  3245  0295                     	;# 
  3246  0295                     	;# 
  3247  0296                     	;# 
  3248  0297                     	;# 
  3249  0298                     	;# 
  3250  029F                     	;# 
  3251  030C                     	;# 
  3252  030D                     	;# 
  3253  030E                     	;# 
  3254  0311                     	;# 
  3255  0311                     	;# 
  3256  0312                     	;# 
  3257  0313                     	;# 
  3258  0314                     	;# 
  3259  0315                     	;# 
  3260  0315                     	;# 
  3261  0316                     	;# 
  3262  0317                     	;# 
  3263  0318                     	;# 
  3264  038C                     	;# 
  3265  038D                     	;# 
  3266  038E                     	;# 
  3267  0391                     	;# 
  3268  0392                     	;# 
  3269  0393                     	;# 
  3270  0394                     	;# 
  3271  0395                     	;# 
  3272  0396                     	;# 
  3273  0397                     	;# 
  3274  0398                     	;# 
  3275  0399                     	;# 
  3276  039A                     	;# 
  3277  039C                     	;# 
  3278  039D                     	;# 
  3279  039E                     	;# 
  3280  039F                     	;# 
  3281  0411                     	;# 
  3282  0411                     	;# 
  3283  0412                     	;# 
  3284  0413                     	;# 
  3285  0414                     	;# 
  3286  0415                     	;# 
  3287  0416                     	;# 
  3288  0417                     	;# 
  3289  0418                     	;# 
  3290  0418                     	;# 
  3291  0419                     	;# 
  3292  041A                     	;# 
  3293  041B                     	;# 
  3294  041C                     	;# 
  3295  041D                     	;# 
  3296  041E                     	;# 
  3297  041F                     	;# 
  3298  0498                     	;# 
  3299  0498                     	;# 
  3300  0499                     	;# 
  3301  049A                     	;# 
  3302  049B                     	;# 
  3303  049B                     	;# 
  3304  049C                     	;# 
  3305  049D                     	;# 
  3306  049E                     	;# 
  3307  049F                     	;# 
  3308  0617                     	;# 
  3309  0618                     	;# 
  3310  0619                     	;# 
  3311  0619                     	;# 
  3312  061A                     	;# 
  3313  061B                     	;# 
  3314  061C                     	;# 
  3315  061C                     	;# 
  3316  061F                     	;# 
  3317  0691                     	;# 
  3318  0692                     	;# 
  3319  0693                     	;# 
  3320  0694                     	;# 
  3321  0695                     	;# 
  3322  0696                     	;# 
  3323  0697                     	;# 
  3324  0698                     	;# 
  3325  0699                     	;# 
  3326  0711                     	;# 
  3327  0712                     	;# 
  3328  0713                     	;# 
  3329  0714                     	;# 
  3330  0715                     	;# 
  3331  0716                     	;# 
  3332  0717                     	;# 
  3333  0718                     	;# 
  3334  0719                     	;# 
  3335  0891                     	;# 
  3336  0891                     	;# 
  3337  0891                     	;# 
  3338  0891                     	;# 
  3339  0891                     	;# 
  3340  0891                     	;# 
  3341  0892                     	;# 
  3342  0892                     	;# 
  3343  0892                     	;# 
  3344  0893                     	;# 
  3345  0893                     	;# 
  3346  0893                     	;# 
  3347  0893                     	;# 
  3348  0893                     	;# 
  3349  0893                     	;# 
  3350  0894                     	;# 
  3351  0894                     	;# 
  3352  0894                     	;# 
  3353  0895                     	;# 
  3354  0895                     	;# 
  3355  0895                     	;# 
  3356  0896                     	;# 
  3357  0896                     	;# 
  3358  0896                     	;# 
  3359  089B                     	;# 
  3360  0911                     	;# 
  3361  0912                     	;# 
  3362  0913                     	;# 
  3363  0914                     	;# 
  3364  0915                     	;# 
  3365  0916                     	;# 
  3366  0918                     	;# 
  3367  0919                     	;# 
  3368  091A                     	;# 
  3369  091B                     	;# 
  3370  091C                     	;# 
  3371  091D                     	;# 
  3372  091E                     	;# 
  3373  091F                     	;# 
  3374  0E0F                     	;# 
  3375  0E10                     	;# 
  3376  0E11                     	;# 
  3377  0E12                     	;# 
  3378  0E13                     	;# 
  3379  0E14                     	;# 
  3380  0E15                     	;# 
  3381  0E16                     	;# 
  3382  0E17                     	;# 
  3383  0E18                     	;# 
  3384  0E19                     	;# 
  3385  0E1A                     	;# 
  3386  0E1B                     	;# 
  3387  0E1C                     	;# 
  3388  0E1D                     	;# 
  3389  0E1E                     	;# 
  3390  0E1F                     	;# 
  3391  0E20                     	;# 
  3392  0E21                     	;# 
  3393  0E22                     	;# 
  3394  0E24                     	;# 
  3395  0E25                     	;# 
  3396  0E28                     	;# 
  3397  0E29                     	;# 
  3398  0E2A                     	;# 
  3399  0E2B                     	;# 
  3400  0E2C                     	;# 
  3401  0E2D                     	;# 
  3402  0E2E                     	;# 
  3403  0E2F                     	;# 
  3404  0E90                     	;# 
  3405  0E91                     	;# 
  3406  0E92                     	;# 
  3407  0E94                     	;# 
  3408  0E95                     	;# 
  3409  0E9C                     	;# 
  3410  0E9D                     	;# 
  3411  0E9E                     	;# 
  3412  0E9F                     	;# 
  3413  0EA0                     	;# 
  3414  0EA1                     	;# 
  3415  0EA2                     	;# 
  3416  0EA3                     	;# 
  3417  0EA4                     	;# 
  3418  0EA5                     	;# 
  3419  0EA6                     	;# 
  3420  0EA7                     	;# 
  3421  0F0F                     	;# 
  3422  0F10                     	;# 
  3423  0F11                     	;# 
  3424  0F12                     	;# 
  3425  0F13                     	;# 
  3426  0F14                     	;# 
  3427  0F15                     	;# 
  3428  0F16                     	;# 
  3429  0F17                     	;# 
  3430  0F18                     	;# 
  3431  0F19                     	;# 
  3432  0F1A                     	;# 
  3433  0F1B                     	;# 
  3434  0F1C                     	;# 
  3435  0F1D                     	;# 
  3436  0F1E                     	;# 
  3437  0F1F                     	;# 
  3438  0F20                     	;# 
  3439  0F21                     	;# 
  3440  0F22                     	;# 
  3441  0F23                     	;# 
  3442  0F24                     	;# 
  3443  0F25                     	;# 
  3444  0F26                     	;# 
  3445  0F27                     	;# 
  3446  0F28                     	;# 
  3447  0F29                     	;# 
  3448  0F2A                     	;# 
  3449  0F2B                     	;# 
  3450  0F2C                     	;# 
  3451  0F2D                     	;# 
  3452  0F2E                     	;# 
  3453  0F2F                     	;# 
  3454  0F30                     	;# 
  3455  0F31                     	;# 
  3456  0F32                     	;# 
  3457  0F33                     	;# 
  3458  0F34                     	;# 
  3459  0F35                     	;# 
  3460  0F36                     	;# 
  3461  0F37                     	;# 
  3462  0FE4                     	;# 
  3463  0FE5                     	;# 
  3464  0FE6                     	;# 
  3465  0FE7                     	;# 
  3466  0FE8                     	;# 
  3467  0FE9                     	;# 
  3468  0FEA                     	;# 
  3469  0FEB                     	;# 
  3470  0FED                     	;# 
  3471  0FEE                     	;# 
  3472  0FEF                     	;# 
  3473  0000                     	;# 
  3474  0001                     	;# 
  3475  0002                     	;# 
  3476  0003                     	;# 
  3477  0004                     	;# 
  3478  0005                     	;# 
  3479  0006                     	;# 
  3480  0007                     	;# 
  3481  0008                     	;# 
  3482  0009                     	;# 
  3483  000A                     	;# 
  3484  000B                     	;# 
  3485  000C                     	;# 
  3486  000D                     	;# 
  3487  000E                     	;# 
  3488  0010                     	;# 
  3489  0011                     	;# 
  3490  0012                     	;# 
  3491  0013                     	;# 
  3492  0014                     	;# 
  3493  0015                     	;# 
  3494  0015                     	;# 
  3495  0016                     	;# 
  3496  0016                     	;# 
  3497  0017                     	;# 
  3498  0018                     	;# 
  3499  0019                     	;# 
  3500  0019                     	;# 
  3501  001A                     	;# 
  3502  001B                     	;# 
  3503  001C                     	;# 
  3504  001D                     	;# 
  3505  001E                     	;# 
  3506  001F                     	;# 
  3507  008C                     	;# 
  3508  008D                     	;# 
  3509  008E                     	;# 
  3510  0090                     	;# 
  3511  0091                     	;# 
  3512  0092                     	;# 
  3513  0093                     	;# 
  3514  0094                     	;# 
  3515  0097                     	;# 
  3516  009B                     	;# 
  3517  009B                     	;# 
  3518  009C                     	;# 
  3519  009D                     	;# 
  3520  009E                     	;# 
  3521  009F                     	;# 
  3522  010C                     	;# 
  3523  010D                     	;# 
  3524  010E                     	;# 
  3525  0111                     	;# 
  3526  0112                     	;# 
  3527  0113                     	;# 
  3528  0114                     	;# 
  3529  0115                     	;# 
  3530  0116                     	;# 
  3531  0117                     	;# 
  3532  0118                     	;# 
  3533  0119                     	;# 
  3534  018C                     	;# 
  3535  018D                     	;# 
  3536  018E                     	;# 
  3537  0197                     	;# 
  3538  0199                     	;# 
  3539  0199                     	;# 
  3540  0199                     	;# 
  3541  019A                     	;# 
  3542  019A                     	;# 
  3543  019A                     	;# 
  3544  019B                     	;# 
  3545  019B                     	;# 
  3546  019B                     	;# 
  3547  019B                     	;# 
  3548  019B                     	;# 
  3549  019C                     	;# 
  3550  019C                     	;# 
  3551  019C                     	;# 
  3552  019D                     	;# 
  3553  019D                     	;# 
  3554  019D                     	;# 
  3555  019E                     	;# 
  3556  019E                     	;# 
  3557  019E                     	;# 
  3558  019F                     	;# 
  3559  019F                     	;# 
  3560  019F                     	;# 
  3561  019F                     	;# 
  3562  019F                     	;# 
  3563  020C                     	;# 
  3564  020D                     	;# 
  3565  020E                     	;# 
  3566  0211                     	;# 
  3567  0211                     	;# 
  3568  0212                     	;# 
  3569  0212                     	;# 
  3570  0213                     	;# 
  3571  0213                     	;# 
  3572  0214                     	;# 
  3573  0214                     	;# 
  3574  0215                     	;# 
  3575  0215                     	;# 
  3576  0215                     	;# 
  3577  0215                     	;# 
  3578  0216                     	;# 
  3579  0216                     	;# 
  3580  0217                     	;# 
  3581  0217                     	;# 
  3582  0219                     	;# 
  3583  021A                     	;# 
  3584  021B                     	;# 
  3585  021C                     	;# 
  3586  021D                     	;# 
  3587  021D                     	;# 
  3588  021E                     	;# 
  3589  021F                     	;# 
  3590  028C                     	;# 
  3591  028D                     	;# 
  3592  028E                     	;# 
  3593  0291                     	;# 
  3594  0291                     	;# 
  3595  0292                     	;# 
  3596  0293                     	;# 
  3597  0294                     	;# 
  3598  0295                     	;# 
  3599  0295                     	;# 
  3600  0296                     	;# 
  3601  0297                     	;# 
  3602  0298                     	;# 
  3603  029F                     	;# 
  3604  030C                     	;# 
  3605  030D                     	;# 
  3606  030E                     	;# 
  3607  0311                     	;# 
  3608  0311                     	;# 
  3609  0312                     	;# 
  3610  0313                     	;# 
  3611  0314                     	;# 
  3612  0315                     	;# 
  3613  0315                     	;# 
  3614  0316                     	;# 
  3615  0317                     	;# 
  3616  0318                     	;# 
  3617  038C                     	;# 
  3618  038D                     	;# 
  3619  038E                     	;# 
  3620  0391                     	;# 
  3621  0392                     	;# 
  3622  0393                     	;# 
  3623  0394                     	;# 
  3624  0395                     	;# 
  3625  0396                     	;# 
  3626  0397                     	;# 
  3627  0398                     	;# 
  3628  0399                     	;# 
  3629  039A                     	;# 
  3630  039C                     	;# 
  3631  039D                     	;# 
  3632  039E                     	;# 
  3633  039F                     	;# 
  3634  0411                     	;# 
  3635  0411                     	;# 
  3636  0412                     	;# 
  3637  0413                     	;# 
  3638  0414                     	;# 
  3639  0415                     	;# 
  3640  0416                     	;# 
  3641  0417                     	;# 
  3642  0418                     	;# 
  3643  0418                     	;# 
  3644  0419                     	;# 
  3645  041A                     	;# 
  3646  041B                     	;# 
  3647  041C                     	;# 
  3648  041D                     	;# 
  3649  041E                     	;# 
  3650  041F                     	;# 
  3651  0498                     	;# 
  3652  0498                     	;# 
  3653  0499                     	;# 
  3654  049A                     	;# 
  3655  049B                     	;# 
  3656  049B                     	;# 
  3657  049C                     	;# 
  3658  049D                     	;# 
  3659  049E                     	;# 
  3660  049F                     	;# 
  3661  0617                     	;# 
  3662  0618                     	;# 
  3663  0619                     	;# 
  3664  0619                     	;# 
  3665  061A                     	;# 
  3666  061B                     	;# 
  3667  061C                     	;# 
  3668  061C                     	;# 
  3669  061F                     	;# 
  3670  0691                     	;# 
  3671  0692                     	;# 
  3672  0693                     	;# 
  3673  0694                     	;# 
  3674  0695                     	;# 
  3675  0696                     	;# 
  3676  0697                     	;# 
  3677  0698                     	;# 
  3678  0699                     	;# 
  3679  0711                     	;# 
  3680  0712                     	;# 
  3681  0713                     	;# 
  3682  0714                     	;# 
  3683  0715                     	;# 
  3684  0716                     	;# 
  3685  0717                     	;# 
  3686  0718                     	;# 
  3687  0719                     	;# 
  3688  0891                     	;# 
  3689  0891                     	;# 
  3690  0891                     	;# 
  3691  0891                     	;# 
  3692  0891                     	;# 
  3693  0891                     	;# 
  3694  0892                     	;# 
  3695  0892                     	;# 
  3696  0892                     	;# 
  3697  0893                     	;# 
  3698  0893                     	;# 
  3699  0893                     	;# 
  3700  0893                     	;# 
  3701  0893                     	;# 
  3702  0893                     	;# 
  3703  0894                     	;# 
  3704  0894                     	;# 
  3705  0894                     	;# 
  3706  0895                     	;# 
  3707  0895                     	;# 
  3708  0895                     	;# 
  3709  0896                     	;# 
  3710  0896                     	;# 
  3711  0896                     	;# 
  3712  089B                     	;# 
  3713  0911                     	;# 
  3714  0912                     	;# 
  3715  0913                     	;# 
  3716  0914                     	;# 
  3717  0915                     	;# 
  3718  0916                     	;# 
  3719  0918                     	;# 
  3720  0919                     	;# 
  3721  091A                     	;# 
  3722  091B                     	;# 
  3723  091C                     	;# 
  3724  091D                     	;# 
  3725  091E                     	;# 
  3726  091F                     	;# 
  3727  0E0F                     	;# 
  3728  0E10                     	;# 
  3729  0E11                     	;# 
  3730  0E12                     	;# 
  3731  0E13                     	;# 
  3732  0E14                     	;# 
  3733  0E15                     	;# 
  3734  0E16                     	;# 
  3735  0E17                     	;# 
  3736  0E18                     	;# 
  3737  0E19                     	;# 
  3738  0E1A                     	;# 
  3739  0E1B                     	;# 
  3740  0E1C                     	;# 
  3741  0E1D                     	;# 
  3742  0E1E                     	;# 
  3743  0E1F                     	;# 
  3744  0E20                     	;# 
  3745  0E21                     	;# 
  3746  0E22                     	;# 
  3747  0E24                     	;# 
  3748  0E25                     	;# 
  3749  0E28                     	;# 
  3750  0E29                     	;# 
  3751  0E2A                     	;# 
  3752  0E2B                     	;# 
  3753  0E2C                     	;# 
  3754  0E2D                     	;# 
  3755  0E2E                     	;# 
  3756  0E2F                     	;# 
  3757  0E90                     	;# 
  3758  0E91                     	;# 
  3759  0E92                     	;# 
  3760  0E94                     	;# 
  3761  0E95                     	;# 
  3762  0E9C                     	;# 
  3763  0E9D                     	;# 
  3764  0E9E                     	;# 
  3765  0E9F                     	;# 
  3766  0EA0                     	;# 
  3767  0EA1                     	;# 
  3768  0EA2                     	;# 
  3769  0EA3                     	;# 
  3770  0EA4                     	;# 
  3771  0EA5                     	;# 
  3772  0EA6                     	;# 
  3773  0EA7                     	;# 
  3774  0F0F                     	;# 
  3775  0F10                     	;# 
  3776  0F11                     	;# 
  3777  0F12                     	;# 
  3778  0F13                     	;# 
  3779  0F14                     	;# 
  3780  0F15                     	;# 
  3781  0F16                     	;# 
  3782  0F17                     	;# 
  3783  0F18                     	;# 
  3784  0F19                     	;# 
  3785  0F1A                     	;# 
  3786  0F1B                     	;# 
  3787  0F1C                     	;# 
  3788  0F1D                     	;# 
  3789  0F1E                     	;# 
  3790  0F1F                     	;# 
  3791  0F20                     	;# 
  3792  0F21                     	;# 
  3793  0F22                     	;# 
  3794  0F23                     	;# 
  3795  0F24                     	;# 
  3796  0F25                     	;# 
  3797  0F26                     	;# 
  3798  0F27                     	;# 
  3799  0F28                     	;# 
  3800  0F29                     	;# 
  3801  0F2A                     	;# 
  3802  0F2B                     	;# 
  3803  0F2C                     	;# 
  3804  0F2D                     	;# 
  3805  0F2E                     	;# 
  3806  0F2F                     	;# 
  3807  0F30                     	;# 
  3808  0F31                     	;# 
  3809  0F32                     	;# 
  3810  0F33                     	;# 
  3811  0F34                     	;# 
  3812  0F35                     	;# 
  3813  0F36                     	;# 
  3814  0F37                     	;# 
  3815  0FE4                     	;# 
  3816  0FE5                     	;# 
  3817  0FE6                     	;# 
  3818  0FE7                     	;# 
  3819  0FE8                     	;# 
  3820  0FE9                     	;# 
  3821  0FEA                     	;# 
  3822  0FEB                     	;# 
  3823  0FED                     	;# 
  3824  0FEE                     	;# 
  3825  0FEF                     	;# 
  3826  0000                     	;# 
  3827  0001                     	;# 
  3828  0002                     	;# 
  3829  0003                     	;# 
  3830  0004                     	;# 
  3831  0005                     	;# 
  3832  0006                     	;# 
  3833  0007                     	;# 
  3834  0008                     	;# 
  3835  0009                     	;# 
  3836  000A                     	;# 
  3837  000B                     	;# 
  3838  000C                     	;# 
  3839  000D                     	;# 
  3840  000E                     	;# 
  3841  0010                     	;# 
  3842  0011                     	;# 
  3843  0012                     	;# 
  3844  0013                     	;# 
  3845  0014                     	;# 
  3846  0015                     	;# 
  3847  0015                     	;# 
  3848  0016                     	;# 
  3849  0016                     	;# 
  3850  0017                     	;# 
  3851  0018                     	;# 
  3852  0019                     	;# 
  3853  0019                     	;# 
  3854  001A                     	;# 
  3855  001B                     	;# 
  3856  001C                     	;# 
  3857  001D                     	;# 
  3858  001E                     	;# 
  3859  001F                     	;# 
  3860  008C                     	;# 
  3861  008D                     	;# 
  3862  008E                     	;# 
  3863  0090                     	;# 
  3864  0091                     	;# 
  3865  0092                     	;# 
  3866  0093                     	;# 
  3867  0094                     	;# 
  3868  0097                     	;# 
  3869  009B                     	;# 
  3870  009B                     	;# 
  3871  009C                     	;# 
  3872  009D                     	;# 
  3873  009E                     	;# 
  3874  009F                     	;# 
  3875  010C                     	;# 
  3876  010D                     	;# 
  3877  010E                     	;# 
  3878  0111                     	;# 
  3879  0112                     	;# 
  3880  0113                     	;# 
  3881  0114                     	;# 
  3882  0115                     	;# 
  3883  0116                     	;# 
  3884  0117                     	;# 
  3885  0118                     	;# 
  3886  0119                     	;# 
  3887  018C                     	;# 
  3888  018D                     	;# 
  3889  018E                     	;# 
  3890  0197                     	;# 
  3891  0199                     	;# 
  3892  0199                     	;# 
  3893  0199                     	;# 
  3894  019A                     	;# 
  3895  019A                     	;# 
  3896  019A                     	;# 
  3897  019B                     	;# 
  3898  019B                     	;# 
  3899  019B                     	;# 
  3900  019B                     	;# 
  3901  019B                     	;# 
  3902  019C                     	;# 
  3903  019C                     	;# 
  3904  019C                     	;# 
  3905  019D                     	;# 
  3906  019D                     	;# 
  3907  019D                     	;# 
  3908  019E                     	;# 
  3909  019E                     	;# 
  3910  019E                     	;# 
  3911  019F                     	;# 
  3912  019F                     	;# 
  3913  019F                     	;# 
  3914  019F                     	;# 
  3915  019F                     	;# 
  3916  020C                     	;# 
  3917  020D                     	;# 
  3918  020E                     	;# 
  3919  0211                     	;# 
  3920  0211                     	;# 
  3921  0212                     	;# 
  3922  0212                     	;# 
  3923  0213                     	;# 
  3924  0213                     	;# 
  3925  0214                     	;# 
  3926  0214                     	;# 
  3927  0215                     	;# 
  3928  0215                     	;# 
  3929  0215                     	;# 
  3930  0215                     	;# 
  3931  0216                     	;# 
  3932  0216                     	;# 
  3933  0217                     	;# 
  3934  0217                     	;# 
  3935  0219                     	;# 
  3936  021A                     	;# 
  3937  021B                     	;# 
  3938  021C                     	;# 
  3939  021D                     	;# 
  3940  021D                     	;# 
  3941  021E                     	;# 
  3942  021F                     	;# 
  3943  028C                     	;# 
  3944  028D                     	;# 
  3945  028E                     	;# 
  3946  0291                     	;# 
  3947  0291                     	;# 
  3948  0292                     	;# 
  3949  0293                     	;# 
  3950  0294                     	;# 
  3951  0295                     	;# 
  3952  0295                     	;# 
  3953  0296                     	;# 
  3954  0297                     	;# 
  3955  0298                     	;# 
  3956  029F                     	;# 
  3957  030C                     	;# 
  3958  030D                     	;# 
  3959  030E                     	;# 
  3960  0311                     	;# 
  3961  0311                     	;# 
  3962  0312                     	;# 
  3963  0313                     	;# 
  3964  0314                     	;# 
  3965  0315                     	;# 
  3966  0315                     	;# 
  3967  0316                     	;# 
  3968  0317                     	;# 
  3969  0318                     	;# 
  3970  038C                     	;# 
  3971  038D                     	;# 
  3972  038E                     	;# 
  3973  0391                     	;# 
  3974  0392                     	;# 
  3975  0393                     	;# 
  3976  0394                     	;# 
  3977  0395                     	;# 
  3978  0396                     	;# 
  3979  0397                     	;# 
  3980  0398                     	;# 
  3981  0399                     	;# 
  3982  039A                     	;# 
  3983  039C                     	;# 
  3984  039D                     	;# 
  3985  039E                     	;# 
  3986  039F                     	;# 
  3987  0411                     	;# 
  3988  0411                     	;# 
  3989  0412                     	;# 
  3990  0413                     	;# 
  3991  0414                     	;# 
  3992  0415                     	;# 
  3993  0416                     	;# 
  3994  0417                     	;# 
  3995  0418                     	;# 
  3996  0418                     	;# 
  3997  0419                     	;# 
  3998  041A                     	;# 
  3999  041B                     	;# 
  4000  041C                     	;# 
  4001  041D                     	;# 
  4002  041E                     	;# 
  4003  041F                     	;# 
  4004  0498                     	;# 
  4005  0498                     	;# 
  4006  0499                     	;# 
  4007  049A                     	;# 
  4008  049B                     	;# 
  4009  049B                     	;# 
  4010  049C                     	;# 
  4011  049D                     	;# 
  4012  049E                     	;# 
  4013  049F                     	;# 
  4014  0617                     	;# 
  4015  0618                     	;# 
  4016  0619                     	;# 
  4017  0619                     	;# 
  4018  061A                     	;# 
  4019  061B                     	;# 
  4020  061C                     	;# 
  4021  061C                     	;# 
  4022  061F                     	;# 
  4023  0691                     	;# 
  4024  0692                     	;# 
  4025  0693                     	;# 
  4026  0694                     	;# 
  4027  0695                     	;# 
  4028  0696                     	;# 
  4029  0697                     	;# 
  4030  0698                     	;# 
  4031  0699                     	;# 
  4032  0711                     	;# 
  4033  0712                     	;# 
  4034  0713                     	;# 
  4035  0714                     	;# 
  4036  0715                     	;# 
  4037  0716                     	;# 
  4038  0717                     	;# 
  4039  0718                     	;# 
  4040  0719                     	;# 
  4041  0891                     	;# 
  4042  0891                     	;# 
  4043  0891                     	;# 
  4044  0891                     	;# 
  4045  0891                     	;# 
  4046  0891                     	;# 
  4047  0892                     	;# 
  4048  0892                     	;# 
  4049  0892                     	;# 
  4050  0893                     	;# 
  4051  0893                     	;# 
  4052  0893                     	;# 
  4053  0893                     	;# 
  4054  0893                     	;# 
  4055  0893                     	;# 
  4056  0894                     	;# 
  4057  0894                     	;# 
  4058  0894                     	;# 
  4059  0895                     	;# 
  4060  0895                     	;# 
  4061  0895                     	;# 
  4062  0896                     	;# 
  4063  0896                     	;# 
  4064  0896                     	;# 
  4065  089B                     	;# 
  4066  0911                     	;# 
  4067  0912                     	;# 
  4068  0913                     	;# 
  4069  0914                     	;# 
  4070  0915                     	;# 
  4071  0916                     	;# 
  4072  0918                     	;# 
  4073  0919                     	;# 
  4074  091A                     	;# 
  4075  091B                     	;# 
  4076  091C                     	;# 
  4077  091D                     	;# 
  4078  091E                     	;# 
  4079  091F                     	;# 
  4080  0E0F                     	;# 
  4081  0E10                     	;# 
  4082  0E11                     	;# 
  4083  0E12                     	;# 
  4084  0E13                     	;# 
  4085  0E14                     	;# 
  4086  0E15                     	;# 
  4087  0E16                     	;# 
  4088  0E17                     	;# 
  4089  0E18                     	;# 
  4090  0E19                     	;# 
  4091  0E1A                     	;# 
  4092  0E1B                     	;# 
  4093  0E1C                     	;# 
  4094  0E1D                     	;# 
  4095  0E1E                     	;# 
  4096  0E1F                     	;# 
  4097  0E20                     	;# 
  4098  0E21                     	;# 
  4099  0E22                     	;# 
  4100  0E24                     	;# 
  4101  0E25                     	;# 
  4102  0E28                     	;# 
  4103  0E29                     	;# 
  4104  0E2A                     	;# 
  4105  0E2B                     	;# 
  4106  0E2C                     	;# 
  4107  0E2D                     	;# 
  4108  0E2E                     	;# 
  4109  0E2F                     	;# 
  4110  0E90                     	;# 
  4111  0E91                     	;# 
  4112  0E92                     	;# 
  4113  0E94                     	;# 
  4114  0E95                     	;# 
  4115  0E9C                     	;# 
  4116  0E9D                     	;# 
  4117  0E9E                     	;# 
  4118  0E9F                     	;# 
  4119  0EA0                     	;# 
  4120  0EA1                     	;# 
  4121  0EA2                     	;# 
  4122  0EA3                     	;# 
  4123  0EA4                     	;# 
  4124  0EA5                     	;# 
  4125  0EA6                     	;# 
  4126  0EA7                     	;# 
  4127  0F0F                     	;# 
  4128  0F10                     	;# 
  4129  0F11                     	;# 
  4130  0F12                     	;# 
  4131  0F13                     	;# 
  4132  0F14                     	;# 
  4133  0F15                     	;# 
  4134  0F16                     	;# 
  4135  0F17                     	;# 
  4136  0F18                     	;# 
  4137  0F19                     	;# 
  4138  0F1A                     	;# 
  4139  0F1B                     	;# 
  4140  0F1C                     	;# 
  4141  0F1D                     	;# 
  4142  0F1E                     	;# 
  4143  0F1F                     	;# 
  4144  0F20                     	;# 
  4145  0F21                     	;# 
  4146  0F22                     	;# 
  4147  0F23                     	;# 
  4148  0F24                     	;# 
  4149  0F25                     	;# 
  4150  0F26                     	;# 
  4151  0F27                     	;# 
  4152  0F28                     	;# 
  4153  0F29                     	;# 
  4154  0F2A                     	;# 
  4155  0F2B                     	;# 
  4156  0F2C                     	;# 
  4157  0F2D                     	;# 
  4158  0F2E                     	;# 
  4159  0F2F                     	;# 
  4160  0F30                     	;# 
  4161  0F31                     	;# 
  4162  0F32                     	;# 
  4163  0F33                     	;# 
  4164  0F34                     	;# 
  4165  0F35                     	;# 
  4166  0F36                     	;# 
  4167  0F37                     	;# 
  4168  0FE4                     	;# 
  4169  0FE5                     	;# 
  4170  0FE6                     	;# 
  4171  0FE7                     	;# 
  4172  0FE8                     	;# 
  4173  0FE9                     	;# 
  4174  0FEA                     	;# 
  4175  0FEB                     	;# 
  4176  0FED                     	;# 
  4177  0FEE                     	;# 
  4178  0FEF                     	;# 
  4179  0000                     	;# 
  4180  0001                     	;# 
  4181  0002                     	;# 
  4182  0003                     	;# 
  4183  0004                     	;# 
  4184  0005                     	;# 
  4185  0006                     	;# 
  4186  0007                     	;# 
  4187  0008                     	;# 
  4188  0009                     	;# 
  4189  000A                     	;# 
  4190  000B                     	;# 
  4191  000C                     	;# 
  4192  000D                     	;# 
  4193  000E                     	;# 
  4194  0010                     	;# 
  4195  0011                     	;# 
  4196  0012                     	;# 
  4197  0013                     	;# 
  4198  0014                     	;# 
  4199  0015                     	;# 
  4200  0015                     	;# 
  4201  0016                     	;# 
  4202  0016                     	;# 
  4203  0017                     	;# 
  4204  0018                     	;# 
  4205  0019                     	;# 
  4206  0019                     	;# 
  4207  001A                     	;# 
  4208  001B                     	;# 
  4209  001C                     	;# 
  4210  001D                     	;# 
  4211  001E                     	;# 
  4212  001F                     	;# 
  4213  008C                     	;# 
  4214  008D                     	;# 
  4215  008E                     	;# 
  4216  0090                     	;# 
  4217  0091                     	;# 
  4218  0092                     	;# 
  4219  0093                     	;# 
  4220  0094                     	;# 
  4221  0097                     	;# 
  4222  009B                     	;# 
  4223  009B                     	;# 
  4224  009C                     	;# 
  4225  009D                     	;# 
  4226  009E                     	;# 
  4227  009F                     	;# 
  4228  010C                     	;# 
  4229  010D                     	;# 
  4230  010E                     	;# 
  4231  0111                     	;# 
  4232  0112                     	;# 
  4233  0113                     	;# 
  4234  0114                     	;# 
  4235  0115                     	;# 
  4236  0116                     	;# 
  4237  0117                     	;# 
  4238  0118                     	;# 
  4239  0119                     	;# 
  4240  018C                     	;# 
  4241  018D                     	;# 
  4242  018E                     	;# 
  4243  0197                     	;# 
  4244  0199                     	;# 
  4245  0199                     	;# 
  4246  0199                     	;# 
  4247  019A                     	;# 
  4248  019A                     	;# 
  4249  019A                     	;# 
  4250  019B                     	;# 
  4251  019B                     	;# 
  4252  019B                     	;# 
  4253  019B                     	;# 
  4254  019B                     	;# 
  4255  019C                     	;# 
  4256  019C                     	;# 
  4257  019C                     	;# 
  4258  019D                     	;# 
  4259  019D                     	;# 
  4260  019D                     	;# 
  4261  019E                     	;# 
  4262  019E                     	;# 
  4263  019E                     	;# 
  4264  019F                     	;# 
  4265  019F                     	;# 
  4266  019F                     	;# 
  4267  019F                     	;# 
  4268  019F                     	;# 
  4269  020C                     	;# 
  4270  020D                     	;# 
  4271  020E                     	;# 
  4272  0211                     	;# 
  4273  0211                     	;# 
  4274  0212                     	;# 
  4275  0212                     	;# 
  4276  0213                     	;# 
  4277  0213                     	;# 
  4278  0214                     	;# 
  4279  0214                     	;# 
  4280  0215                     	;# 
  4281  0215                     	;# 
  4282  0215                     	;# 
  4283  0215                     	;# 
  4284  0216                     	;# 
  4285  0216                     	;# 
  4286  0217                     	;# 
  4287  0217                     	;# 
  4288  0219                     	;# 
  4289  021A                     	;# 
  4290  021B                     	;# 
  4291  021C                     	;# 
  4292  021D                     	;# 
  4293  021D                     	;# 
  4294  021E                     	;# 
  4295  021F                     	;# 
  4296  028C                     	;# 
  4297  028D                     	;# 
  4298  028E                     	;# 
  4299  0291                     	;# 
  4300  0291                     	;# 
  4301  0292                     	;# 
  4302  0293                     	;# 
  4303  0294                     	;# 
  4304  0295                     	;# 
  4305  0295                     	;# 
  4306  0296                     	;# 
  4307  0297                     	;# 
  4308  0298                     	;# 
  4309  029F                     	;# 
  4310  030C                     	;# 
  4311  030D                     	;# 
  4312  030E                     	;# 
  4313  0311                     	;# 
  4314  0311                     	;# 
  4315  0312                     	;# 
  4316  0313                     	;# 
  4317  0314                     	;# 
  4318  0315                     	;# 
  4319  0315                     	;# 
  4320  0316                     	;# 
  4321  0317                     	;# 
  4322  0318                     	;# 
  4323  038C                     	;# 
  4324  038D                     	;# 
  4325  038E                     	;# 
  4326  0391                     	;# 
  4327  0392                     	;# 
  4328  0393                     	;# 
  4329  0394                     	;# 
  4330  0395                     	;# 
  4331  0396                     	;# 
  4332  0397                     	;# 
  4333  0398                     	;# 
  4334  0399                     	;# 
  4335  039A                     	;# 
  4336  039C                     	;# 
  4337  039D                     	;# 
  4338  039E                     	;# 
  4339  039F                     	;# 
  4340  0411                     	;# 
  4341  0411                     	;# 
  4342  0412                     	;# 
  4343  0413                     	;# 
  4344  0414                     	;# 
  4345  0415                     	;# 
  4346  0416                     	;# 
  4347  0417                     	;# 
  4348  0418                     	;# 
  4349  0418                     	;# 
  4350  0419                     	;# 
  4351  041A                     	;# 
  4352  041B                     	;# 
  4353  041C                     	;# 
  4354  041D                     	;# 
  4355  041E                     	;# 
  4356  041F                     	;# 
  4357  0498                     	;# 
  4358  0498                     	;# 
  4359  0499                     	;# 
  4360  049A                     	;# 
  4361  049B                     	;# 
  4362  049B                     	;# 
  4363  049C                     	;# 
  4364  049D                     	;# 
  4365  049E                     	;# 
  4366  049F                     	;# 
  4367  0617                     	;# 
  4368  0618                     	;# 
  4369  0619                     	;# 
  4370  0619                     	;# 
  4371  061A                     	;# 
  4372  061B                     	;# 
  4373  061C                     	;# 
  4374  061C                     	;# 
  4375  061F                     	;# 
  4376  0691                     	;# 
  4377  0692                     	;# 
  4378  0693                     	;# 
  4379  0694                     	;# 
  4380  0695                     	;# 
  4381  0696                     	;# 
  4382  0697                     	;# 
  4383  0698                     	;# 
  4384  0699                     	;# 
  4385  0711                     	;# 
  4386  0712                     	;# 
  4387  0713                     	;# 
  4388  0714                     	;# 
  4389  0715                     	;# 
  4390  0716                     	;# 
  4391  0717                     	;# 
  4392  0718                     	;# 
  4393  0719                     	;# 
  4394  0891                     	;# 
  4395  0891                     	;# 
  4396  0891                     	;# 
  4397  0891                     	;# 
  4398  0891                     	;# 
  4399  0891                     	;# 
  4400  0892                     	;# 
  4401  0892                     	;# 
  4402  0892                     	;# 
  4403  0893                     	;# 
  4404  0893                     	;# 
  4405  0893                     	;# 
  4406  0893                     	;# 
  4407  0893                     	;# 
  4408  0893                     	;# 
  4409  0894                     	;# 
  4410  0894                     	;# 
  4411  0894                     	;# 
  4412  0895                     	;# 
  4413  0895                     	;# 
  4414  0895                     	;# 
  4415  0896                     	;# 
  4416  0896                     	;# 
  4417  0896                     	;# 
  4418  089B                     	;# 
  4419  0911                     	;# 
  4420  0912                     	;# 
  4421  0913                     	;# 
  4422  0914                     	;# 
  4423  0915                     	;# 
  4424  0916                     	;# 
  4425  0918                     	;# 
  4426  0919                     	;# 
  4427  091A                     	;# 
  4428  091B                     	;# 
  4429  091C                     	;# 
  4430  091D                     	;# 
  4431  091E                     	;# 
  4432  091F                     	;# 
  4433  0E0F                     	;# 
  4434  0E10                     	;# 
  4435  0E11                     	;# 
  4436  0E12                     	;# 
  4437  0E13                     	;# 
  4438  0E14                     	;# 
  4439  0E15                     	;# 
  4440  0E16                     	;# 
  4441  0E17                     	;# 
  4442  0E18                     	;# 
  4443  0E19                     	;# 
  4444  0E1A                     	;# 
  4445  0E1B                     	;# 
  4446  0E1C                     	;# 
  4447  0E1D                     	;# 
  4448  0E1E                     	;# 
  4449  0E1F                     	;# 
  4450  0E20                     	;# 
  4451  0E21                     	;# 
  4452  0E22                     	;# 
  4453  0E24                     	;# 
  4454  0E25                     	;# 
  4455  0E28                     	;# 
  4456  0E29                     	;# 
  4457  0E2A                     	;# 
  4458  0E2B                     	;# 
  4459  0E2C                     	;# 
  4460  0E2D                     	;# 
  4461  0E2E                     	;# 
  4462  0E2F                     	;# 
  4463  0E90                     	;# 
  4464  0E91                     	;# 
  4465  0E92                     	;# 
  4466  0E94                     	;# 
  4467  0E95                     	;# 
  4468  0E9C                     	;# 
  4469  0E9D                     	;# 
  4470  0E9E                     	;# 
  4471  0E9F                     	;# 
  4472  0EA0                     	;# 
  4473  0EA1                     	;# 
  4474  0EA2                     	;# 
  4475  0EA3                     	;# 
  4476  0EA4                     	;# 
  4477  0EA5                     	;# 
  4478  0EA6                     	;# 
  4479  0EA7                     	;# 
  4480  0F0F                     	;# 
  4481  0F10                     	;# 
  4482  0F11                     	;# 
  4483  0F12                     	;# 
  4484  0F13                     	;# 
  4485  0F14                     	;# 
  4486  0F15                     	;# 
  4487  0F16                     	;# 
  4488  0F17                     	;# 
  4489  0F18                     	;# 
  4490  0F19                     	;# 
  4491  0F1A                     	;# 
  4492  0F1B                     	;# 
  4493  0F1C                     	;# 
  4494  0F1D                     	;# 
  4495  0F1E                     	;# 
  4496  0F1F                     	;# 
  4497  0F20                     	;# 
  4498  0F21                     	;# 
  4499  0F22                     	;# 
  4500  0F23                     	;# 
  4501  0F24                     	;# 
  4502  0F25                     	;# 
  4503  0F26                     	;# 
  4504  0F27                     	;# 
  4505  0F28                     	;# 
  4506  0F29                     	;# 
  4507  0F2A                     	;# 
  4508  0F2B                     	;# 
  4509  0F2C                     	;# 
  4510  0F2D                     	;# 
  4511  0F2E                     	;# 
  4512  0F2F                     	;# 
  4513  0F30                     	;# 
  4514  0F31                     	;# 
  4515  0F32                     	;# 
  4516  0F33                     	;# 
  4517  0F34                     	;# 
  4518  0F35                     	;# 
  4519  0F36                     	;# 
  4520  0F37                     	;# 
  4521  0FE4                     	;# 
  4522  0FE5                     	;# 
  4523  0FE6                     	;# 
  4524  0FE7                     	;# 
  4525  0FE8                     	;# 
  4526  0FE9                     	;# 
  4527  0FEA                     	;# 
  4528  0FEB                     	;# 
  4529  0FED                     	;# 
  4530  0FEE                     	;# 
  4531  0FEF                     	;_currentPositions_steps
  4532                           
  4533                           	psect	idataBANK0
  4534  13CC                     __pidataBANK0:	
  4535                           
  4536                           ;initializer for _demoLong
  4537  13CC  3401               	retlw	1
  4538  13CD  3400               	retlw	0
  4539  13CE  3400               	retlw	0
  4540  13CF  3400               	retlw	0
  4541                           
  4542                           	psect	idataBANK1
  4543  2179                     __pidataBANK1:	
  4544                           
  4545                           ;initializer for _piezo_on_time_ms
  4546  2179  34E8               	retlw	232
  4547  217A  3403               	retlw	3
  4548                           
  4549                           ;initializer for _heater_pre_time_ms
  4550  217B  341E               	retlw	30
  4551  217C  3400               	retlw	0
  4552                           
  4553                           	psect	idataBANK2
  4554  2217                     __pidataBANK2:	
  4555                           
  4556                           ;initializer for _inter_step_interval_ms
  4557  2217  34E8               	retlw	232
  4558  2218  3403               	retlw	3
  4559  2219  3400               	retlw	0
  4560  221A  3400               	retlw	0
  4561                           
  4562                           ;initializer for _heater_post_time_ms
  4563  221B  3428               	retlw	40
  4564  221C  3400               	retlw	0
  4565                           
  4566                           ;initializer for _drv_peak_val
  4567  221D  347F               	retlw	127
  4568  221E  3400               	retlw	0
  4569                           
  4570                           	psect	idataBANK4
  4571  2514                     __pidataBANK4:	
  4572                           
  4573                           ;initializer for _fsmStateTable
  4574  2514  343A               	retlw	low _do_I2C_IDLE
  4575  2515  3422               	retlw	high _do_I2C_IDLE
  4576  2516  34B5               	retlw	low _do_I2C_SEND_ADR_READ
  4577  2517  3422               	retlw	high _do_I2C_SEND_ADR_READ
  4578  2518  3488               	retlw	low _do_I2C_SEND_ADR_WRITE
  4579  2519  3422               	retlw	high _do_I2C_SEND_ADR_WRITE
  4580  251A  34A5               	retlw	low _do_I2C_TX
  4581  251B  341D               	retlw	high _do_I2C_TX
  4582  251C  3475               	retlw	low _do_I2C_RX
  4583  251D  3419               	retlw	high _do_I2C_RX
  4584  251E  345F               	retlw	low _do_I2C_RCEN
  4585  251F  3422               	retlw	high _do_I2C_RCEN
  4586  2520  3441               	retlw	low _do_I2C_TX_EMPTY
  4587  2521  3427               	retlw	high _do_I2C_TX_EMPTY
  4588  2522  34D7               	retlw	low _do_I2C_SEND_RESTART_READ
  4589  2523  3421               	retlw	high _do_I2C_SEND_RESTART_READ
  4590  2524  34DF               	retlw	low _do_I2C_SEND_RESTART_WRITE
  4591  2525  3421               	retlw	high _do_I2C_SEND_RESTART_WRITE
  4592  2526  34E7               	retlw	low _do_I2C_SEND_RESTART
  4593  2527  3421               	retlw	high _do_I2C_SEND_RESTART
  4594  2528  34EF               	retlw	low _do_I2C_SEND_STOP
  4595  2529  3421               	retlw	high _do_I2C_SEND_STOP
  4596  252A  34F7               	retlw	low _do_I2C_DO_ACK
  4597  252B  3421               	retlw	high _do_I2C_DO_ACK
  4598  252C  34FF               	retlw	low _do_I2C_DO_NACK_STOP
  4599  252D  3421               	retlw	high _do_I2C_DO_NACK_STOP
  4600  252E  3407               	retlw	low _do_I2C_DO_NACK_RESTART
  4601  252F  3422               	retlw	high _do_I2C_DO_NACK_RESTART
  4602  2530  347D               	retlw	low _do_I2C_RESET
  4603  2531  3422               	retlw	high _do_I2C_RESET
  4604  2532  3416               	retlw	low _do_I2C_DO_ADDRESS_NACK
  4605  2533  3427               	retlw	high _do_I2C_DO_ADDRESS_NACK
  4606                           
  4607                           	psect	stringtext1
  4608  1000                     __pstringtext1:	
  4609  1000                     _drv_fifo_sine:	
  4610  1000  340B               	retlw	11
  4611  1001  3400               	retlw	0
  4612  1002  3400               	retlw	0
  4613  1003  3400               	retlw	0
  4614  1004  3410               	retlw	16
  4615  1005  3400               	retlw	0
  4616  1006  3420               	retlw	32
  4617  1007  3400               	retlw	0
  4618  1008  342E               	retlw	46
  4619  1009  3400               	retlw	0
  4620  100A  343C               	retlw	60
  4621  100B  3400               	retlw	0
  4622  100C  3448               	retlw	72
  4623  100D  3400               	retlw	0
  4624  100E  3453               	retlw	83
  4625  100F  3400               	retlw	0
  4626  1010  345B               	retlw	91
  4627  1011  3400               	retlw	0
  4628  1012  3461               	retlw	97
  4629  1013  3400               	retlw	0
  4630  1014  3465               	retlw	101
  4631  1015  3400               	retlw	0
  4632  1016  3466               	retlw	102
  4633  1017  3400               	retlw	0
  4634  1018  3465               	retlw	101
  4635  1019  3400               	retlw	0
  4636  101A  3461               	retlw	97
  4637  101B  3400               	retlw	0
  4638  101C  345B               	retlw	91
  4639  101D  3400               	retlw	0
  4640  101E  3453               	retlw	83
  4641  101F  3400               	retlw	0
  4642  1020  3448               	retlw	72
  4643  1021  3400               	retlw	0
  4644  1022  343C               	retlw	60
  4645  1023  3400               	retlw	0
  4646  1024  342E               	retlw	46
  4647  1025  3400               	retlw	0
  4648  1026  3420               	retlw	32
  4649  1027  3400               	retlw	0
  4650  1028  3410               	retlw	16
  4651  1029  3400               	retlw	0
  4652  102A  3400               	retlw	0
  4653  102B  3400               	retlw	0
  4654  102C  34F0               	retlw	240
  4655  102D  3400               	retlw	0
  4656  102E  34E0               	retlw	224
  4657  102F  3400               	retlw	0
  4658  1030  34D2               	retlw	210
  4659  1031  3400               	retlw	0
  4660  1032  34C4               	retlw	196
  4661  1033  3400               	retlw	0
  4662  1034  34B8               	retlw	184
  4663  1035  3400               	retlw	0
  4664  1036  34AD               	retlw	173
  4665  1037  3400               	retlw	0
  4666  1038  34A5               	retlw	165
  4667  1039  3400               	retlw	0
  4668  103A  349F               	retlw	159
  4669  103B  3400               	retlw	0
  4670  103C  349B               	retlw	155
  4671  103D  3400               	retlw	0
  4672  103E  349A               	retlw	154
  4673  103F  3400               	retlw	0
  4674  1040  349B               	retlw	155
  4675  1041  3400               	retlw	0
  4676  1042  349F               	retlw	159
  4677  1043  3400               	retlw	0
  4678  1044  34A5               	retlw	165
  4679  1045  3400               	retlw	0
  4680  1046  34AD               	retlw	173
  4681  1047  3400               	retlw	0
  4682  1048  34B8               	retlw	184
  4683  1049  3400               	retlw	0
  4684  104A  34C4               	retlw	196
  4685  104B  3400               	retlw	0
  4686  104C  34D2               	retlw	210
  4687  104D  3400               	retlw	0
  4688  104E  34E0               	retlw	224
  4689  104F  3400               	retlw	0
  4690  1050  34F0               	retlw	240
  4691  1051  3400               	retlw	0
  4692  1052  3400               	retlw	0
  4693  1053  3400               	retlw	0
  4694  1054  3410               	retlw	16
  4695  1055  3400               	retlw	0
  4696  1056  3420               	retlw	32
  4697  1057  3400               	retlw	0
  4698  1058  342E               	retlw	46
  4699  1059  3400               	retlw	0
  4700  105A  343C               	retlw	60
  4701  105B  3400               	retlw	0
  4702  105C  3448               	retlw	72
  4703  105D  3400               	retlw	0
  4704  105E  3453               	retlw	83
  4705  105F  3400               	retlw	0
  4706  1060  345B               	retlw	91
  4707  1061  3400               	retlw	0
  4708  1062  3461               	retlw	97
  4709  1063  3400               	retlw	0
  4710  1064  3465               	retlw	101
  4711  1065  3400               	retlw	0
  4712  1066  3466               	retlw	102
  4713  1067  3400               	retlw	0
  4714  1068  3465               	retlw	101
  4715  1069  3400               	retlw	0
  4716  106A  3461               	retlw	97
  4717  106B  3400               	retlw	0
  4718  106C  345B               	retlw	91
  4719  106D  3400               	retlw	0
  4720  106E  3453               	retlw	83
  4721  106F  3400               	retlw	0
  4722  1070  3448               	retlw	72
  4723  1071  3400               	retlw	0
  4724  1072  343C               	retlw	60
  4725  1073  3400               	retlw	0
  4726  1074  342E               	retlw	46
  4727  1075  3400               	retlw	0
  4728  1076  3420               	retlw	32
  4729  1077  3400               	retlw	0
  4730  1078  3410               	retlw	16
  4731  1079  3400               	retlw	0
  4732  107A  3400               	retlw	0
  4733  107B  3400               	retlw	0
  4734  107C  34F0               	retlw	240
  4735  107D  3400               	retlw	0
  4736  107E  34E0               	retlw	224
  4737  107F  3400               	retlw	0
  4738  1080  34D2               	retlw	210
  4739  1081  3400               	retlw	0
  4740  1082  34C4               	retlw	196
  4741  1083  3400               	retlw	0
  4742  1084  34B8               	retlw	184
  4743  1085  3400               	retlw	0
  4744  1086  34AD               	retlw	173
  4745  1087  3400               	retlw	0
  4746  1088  34A5               	retlw	165
  4747  1089  3400               	retlw	0
  4748  108A  349F               	retlw	159
  4749  108B  3400               	retlw	0
  4750  108C  349B               	retlw	155
  4751  108D  3400               	retlw	0
  4752  108E  349A               	retlw	154
  4753  108F  3400               	retlw	0
  4754  1090  349B               	retlw	155
  4755  1091  3400               	retlw	0
  4756  1092  349F               	retlw	159
  4757  1093  3400               	retlw	0
  4758  1094  34A5               	retlw	165
  4759  1095  3400               	retlw	0
  4760  1096  34AD               	retlw	173
  4761  1097  3400               	retlw	0
  4762  1098  34B8               	retlw	184
  4763  1099  3400               	retlw	0
  4764  109A  34C4               	retlw	196
  4765  109B  3400               	retlw	0
  4766  109C  34D2               	retlw	210
  4767  109D  3400               	retlw	0
  4768  109E  34E0               	retlw	224
  4769  109F  3400               	retlw	0
  4770  10A0  34F0               	retlw	240
  4771  10A1  3400               	retlw	0
  4772  10A2  3400               	retlw	0
  4773  10A3  3400               	retlw	0
  4774  10A4  3410               	retlw	16
  4775  10A5  3400               	retlw	0
  4776  10A6  3420               	retlw	32
  4777  10A7  3400               	retlw	0
  4778  10A8  342E               	retlw	46
  4779  10A9  3400               	retlw	0
  4780  10AA  343C               	retlw	60
  4781  10AB  3400               	retlw	0
  4782  10AC  3448               	retlw	72
  4783  10AD  3400               	retlw	0
  4784  10AE  3453               	retlw	83
  4785  10AF  3400               	retlw	0
  4786  10B0  345B               	retlw	91
  4787  10B1  3400               	retlw	0
  4788  10B2  3461               	retlw	97
  4789  10B3  3400               	retlw	0
  4790  10B4  3465               	retlw	101
  4791  10B5  3400               	retlw	0
  4792  10B6  3466               	retlw	102
  4793  10B7  3400               	retlw	0
  4794  10B8  3465               	retlw	101
  4795  10B9  3400               	retlw	0
  4796  10BA  3461               	retlw	97
  4797  10BB  3400               	retlw	0
  4798  10BC  345B               	retlw	91
  4799  10BD  3400               	retlw	0
  4800  10BE  3453               	retlw	83
  4801  10BF  3400               	retlw	0
  4802  10C0  3448               	retlw	72
  4803  10C1  3400               	retlw	0
  4804  10C2  343C               	retlw	60
  4805  10C3  3400               	retlw	0
  4806  10C4  342E               	retlw	46
  4807  10C5  3400               	retlw	0
  4808  10C6  3420               	retlw	32
  4809  10C7  3400               	retlw	0
  4810  10C8  3410               	retlw	16
  4811  10C9  3400               	retlw	0
  4812  10CA  3400               	retlw	0
  4813  10CB  3400               	retlw	0
  4814  10CC  34F0               	retlw	240
  4815  10CD  3400               	retlw	0
  4816  10CE  34E0               	retlw	224
  4817  10CF  3400               	retlw	0
  4818  10D0  34D2               	retlw	210
  4819  10D1  3400               	retlw	0
  4820  10D2  34C4               	retlw	196
  4821  10D3  3400               	retlw	0
  4822  10D4  34B8               	retlw	184
  4823  10D5  3400               	retlw	0
  4824  10D6  34AD               	retlw	173
  4825  10D7  3400               	retlw	0
  4826  10D8  34A5               	retlw	165
  4827  10D9  3400               	retlw	0
  4828  10DA  349F               	retlw	159
  4829  10DB  3400               	retlw	0
  4830  10DC  349B               	retlw	155
  4831  10DD  3400               	retlw	0
  4832  10DE  349A               	retlw	154
  4833  10DF  3400               	retlw	0
  4834  10E0  349B               	retlw	155
  4835  10E1  3400               	retlw	0
  4836  10E2  349F               	retlw	159
  4837  10E3  3400               	retlw	0
  4838  10E4  34A5               	retlw	165
  4839  10E5  3400               	retlw	0
  4840  10E6  34AD               	retlw	173
  4841  10E7  3400               	retlw	0
  4842  10E8  34B8               	retlw	184
  4843  10E9  3400               	retlw	0
  4844  10EA  34C4               	retlw	196
  4845  10EB  3400               	retlw	0
  4846  10EC  34D2               	retlw	210
  4847  10ED  3400               	retlw	0
  4848  10EE  34E0               	retlw	224
  4849  10EF  3400               	retlw	0
  4850  10F0  34F0               	retlw	240
  4851  10F1  3400               	retlw	0
  4852  10F2  3400               	retlw	0
  4853  10F3  3400               	retlw	0
  4854  10F4                     __end_of_drv_fifo_sine:	
  4855                           
  4856                           	psect	stringtext2
  4857  11E8                     __pstringtext2:	
  4858  11E8                     drv2665@drv_sine:	
  4859  11E8  3400               	retlw	0
  4860  11E9  3400               	retlw	0
  4861  11EA  3410               	retlw	16
  4862  11EB  3400               	retlw	0
  4863  11EC  3420               	retlw	32
  4864  11ED  3400               	retlw	0
  4865  11EE  342E               	retlw	46
  4866  11EF  3400               	retlw	0
  4867  11F0  343C               	retlw	60
  4868  11F1  3400               	retlw	0
  4869  11F2  3448               	retlw	72
  4870  11F3  3400               	retlw	0
  4871  11F4  3453               	retlw	83
  4872  11F5  3400               	retlw	0
  4873  11F6  345B               	retlw	91
  4874  11F7  3400               	retlw	0
  4875  11F8  3461               	retlw	97
  4876  11F9  3400               	retlw	0
  4877  11FA  3465               	retlw	101
  4878  11FB  3400               	retlw	0
  4879  11FC  3466               	retlw	102
  4880  11FD  3400               	retlw	0
  4881  11FE  3465               	retlw	101
  4882  11FF  3400               	retlw	0
  4883  1200  3461               	retlw	97
  4884  1201  3400               	retlw	0
  4885  1202  345B               	retlw	91
  4886  1203  3400               	retlw	0
  4887  1204  3453               	retlw	83
  4888  1205  3400               	retlw	0
  4889  1206  3448               	retlw	72
  4890  1207  3400               	retlw	0
  4891  1208  343C               	retlw	60
  4892  1209  3400               	retlw	0
  4893  120A  342E               	retlw	46
  4894  120B  3400               	retlw	0
  4895  120C  3420               	retlw	32
  4896  120D  3400               	retlw	0
  4897  120E  3410               	retlw	16
  4898  120F  3400               	retlw	0
  4899  1210  3400               	retlw	0
  4900  1211  3400               	retlw	0
  4901  1212  34F0               	retlw	240
  4902  1213  3400               	retlw	0
  4903  1214  34E0               	retlw	224
  4904  1215  3400               	retlw	0
  4905  1216  34D2               	retlw	210
  4906  1217  3400               	retlw	0
  4907  1218  34C4               	retlw	196
  4908  1219  3400               	retlw	0
  4909  121A  34B8               	retlw	184
  4910  121B  3400               	retlw	0
  4911  121C  34AD               	retlw	173
  4912  121D  3400               	retlw	0
  4913  121E  34A5               	retlw	165
  4914  121F  3400               	retlw	0
  4915  1220  349F               	retlw	159
  4916  1221  3400               	retlw	0
  4917  1222  349B               	retlw	155
  4918  1223  3400               	retlw	0
  4919  1224  349A               	retlw	154
  4920  1225  3400               	retlw	0
  4921  1226  349B               	retlw	155
  4922  1227  3400               	retlw	0
  4923  1228  349F               	retlw	159
  4924  1229  3400               	retlw	0
  4925  122A  34A5               	retlw	165
  4926  122B  3400               	retlw	0
  4927  122C  34AD               	retlw	173
  4928  122D  3400               	retlw	0
  4929  122E  34B8               	retlw	184
  4930  122F  3400               	retlw	0
  4931  1230  34C4               	retlw	196
  4932  1231  3400               	retlw	0
  4933  1232  34D2               	retlw	210
  4934  1233  3400               	retlw	0
  4935  1234  34E0               	retlw	224
  4936  1235  3400               	retlw	0
  4937  1236  34F0               	retlw	240
  4938  1237  3400               	retlw	0
  4939  1238  3400               	retlw	0
  4940  1239  3400               	retlw	0
  4941  123A  3410               	retlw	16
  4942  123B  3400               	retlw	0
  4943  123C  3420               	retlw	32
  4944  123D  3400               	retlw	0
  4945  123E  342E               	retlw	46
  4946  123F  3400               	retlw	0
  4947  1240  343C               	retlw	60
  4948  1241  3400               	retlw	0
  4949  1242  3448               	retlw	72
  4950  1243  3400               	retlw	0
  4951  1244  3453               	retlw	83
  4952  1245  3400               	retlw	0
  4953  1246  345B               	retlw	91
  4954  1247  3400               	retlw	0
  4955  1248  3461               	retlw	97
  4956  1249  3400               	retlw	0
  4957  124A  3465               	retlw	101
  4958  124B  3400               	retlw	0
  4959  124C  3466               	retlw	102
  4960  124D  3400               	retlw	0
  4961  124E  3465               	retlw	101
  4962  124F  3400               	retlw	0
  4963  1250  3461               	retlw	97
  4964  1251  3400               	retlw	0
  4965  1252  345B               	retlw	91
  4966  1253  3400               	retlw	0
  4967  1254  3453               	retlw	83
  4968  1255  3400               	retlw	0
  4969  1256  3448               	retlw	72
  4970  1257  3400               	retlw	0
  4971  1258  343C               	retlw	60
  4972  1259  3400               	retlw	0
  4973  125A  342E               	retlw	46
  4974  125B  3400               	retlw	0
  4975  125C  3420               	retlw	32
  4976  125D  3400               	retlw	0
  4977  125E  3410               	retlw	16
  4978  125F  3400               	retlw	0
  4979  1260  3400               	retlw	0
  4980  1261  3400               	retlw	0
  4981  1262  34F0               	retlw	240
  4982  1263  3400               	retlw	0
  4983  1264  34E0               	retlw	224
  4984  1265  3400               	retlw	0
  4985  1266  34D2               	retlw	210
  4986  1267  3400               	retlw	0
  4987  1268  34C4               	retlw	196
  4988  1269  3400               	retlw	0
  4989  126A  34B8               	retlw	184
  4990  126B  3400               	retlw	0
  4991  126C  34AD               	retlw	173
  4992  126D  3400               	retlw	0
  4993  126E  34A5               	retlw	165
  4994  126F  3400               	retlw	0
  4995  1270  349F               	retlw	159
  4996  1271  3400               	retlw	0
  4997  1272  349B               	retlw	155
  4998  1273  3400               	retlw	0
  4999  1274  349A               	retlw	154
  5000  1275  3400               	retlw	0
  5001  1276  349B               	retlw	155
  5002  1277  3400               	retlw	0
  5003  1278  349F               	retlw	159
  5004  1279  3400               	retlw	0
  5005  127A  34A5               	retlw	165
  5006  127B  3400               	retlw	0
  5007  127C  34AD               	retlw	173
  5008  127D  3400               	retlw	0
  5009  127E  34B8               	retlw	184
  5010  127F  3400               	retlw	0
  5011  1280  34C4               	retlw	196
  5012  1281  3400               	retlw	0
  5013  1282  34D2               	retlw	210
  5014  1283  3400               	retlw	0
  5015  1284  34E0               	retlw	224
  5016  1285  3400               	retlw	0
  5017  1286  34F0               	retlw	240
  5018  1287  3400               	retlw	0
  5019  1288  3400               	retlw	0
  5020  1289  3400               	retlw	0
  5021  128A  3410               	retlw	16
  5022  128B  3400               	retlw	0
  5023  128C  3420               	retlw	32
  5024  128D  3400               	retlw	0
  5025  128E  342E               	retlw	46
  5026  128F  3400               	retlw	0
  5027  1290  343C               	retlw	60
  5028  1291  3400               	retlw	0
  5029  1292  3448               	retlw	72
  5030  1293  3400               	retlw	0
  5031  1294  3453               	retlw	83
  5032  1295  3400               	retlw	0
  5033  1296  345B               	retlw	91
  5034  1297  3400               	retlw	0
  5035  1298  3461               	retlw	97
  5036  1299  3400               	retlw	0
  5037  129A  3465               	retlw	101
  5038  129B  3400               	retlw	0
  5039  129C  3466               	retlw	102
  5040  129D  3400               	retlw	0
  5041  129E  3465               	retlw	101
  5042  129F  3400               	retlw	0
  5043  12A0  3461               	retlw	97
  5044  12A1  3400               	retlw	0
  5045  12A2  345B               	retlw	91
  5046  12A3  3400               	retlw	0
  5047  12A4  3453               	retlw	83
  5048  12A5  3400               	retlw	0
  5049  12A6  3448               	retlw	72
  5050  12A7  3400               	retlw	0
  5051  12A8  343C               	retlw	60
  5052  12A9  3400               	retlw	0
  5053  12AA  342E               	retlw	46
  5054  12AB  3400               	retlw	0
  5055  12AC  3420               	retlw	32
  5056  12AD  3400               	retlw	0
  5057  12AE  3410               	retlw	16
  5058  12AF  3400               	retlw	0
  5059  12B0  3400               	retlw	0
  5060  12B1  3400               	retlw	0
  5061  12B2  34F0               	retlw	240
  5062  12B3  3400               	retlw	0
  5063  12B4  34E0               	retlw	224
  5064  12B5  3400               	retlw	0
  5065  12B6  34D2               	retlw	210
  5066  12B7  3400               	retlw	0
  5067  12B8  34C4               	retlw	196
  5068  12B9  3400               	retlw	0
  5069  12BA  34B8               	retlw	184
  5070  12BB  3400               	retlw	0
  5071  12BC  34AD               	retlw	173
  5072  12BD  3400               	retlw	0
  5073  12BE  34A5               	retlw	165
  5074  12BF  3400               	retlw	0
  5075  12C0  349F               	retlw	159
  5076  12C1  3400               	retlw	0
  5077  12C2  349B               	retlw	155
  5078  12C3  3400               	retlw	0
  5079  12C4  349A               	retlw	154
  5080  12C5  3400               	retlw	0
  5081  12C6  349B               	retlw	155
  5082  12C7  3400               	retlw	0
  5083  12C8  349F               	retlw	159
  5084  12C9  3400               	retlw	0
  5085  12CA  34A5               	retlw	165
  5086  12CB  3400               	retlw	0
  5087  12CC  34AD               	retlw	173
  5088  12CD  3400               	retlw	0
  5089  12CE  34B8               	retlw	184
  5090  12CF  3400               	retlw	0
  5091  12D0  34C4               	retlw	196
  5092  12D1  3400               	retlw	0
  5093  12D2  34D2               	retlw	210
  5094  12D3  3400               	retlw	0
  5095  12D4  34E0               	retlw	224
  5096  12D5  3400               	retlw	0
  5097  12D6  34F0               	retlw	240
  5098  12D7  3400               	retlw	0
  5099  12D8  3400               	retlw	0
  5100  12D9  3400               	retlw	0
  5101  12DA                     __end_ofdrv2665@drv_sine:	
  5102                           
  5103                           	psect	stringtext3
  5104  12DA                     __pstringtext3:	
  5105  12DA                     _drv_sine:	
  5106  12DA  3400               	retlw	0
  5107  12DB  3400               	retlw	0
  5108  12DC  3410               	retlw	16
  5109  12DD  3400               	retlw	0
  5110  12DE  3420               	retlw	32
  5111  12DF  3400               	retlw	0
  5112  12E0  342E               	retlw	46
  5113  12E1  3400               	retlw	0
  5114  12E2  343C               	retlw	60
  5115  12E3  3400               	retlw	0
  5116  12E4  3448               	retlw	72
  5117  12E5  3400               	retlw	0
  5118  12E6  3453               	retlw	83
  5119  12E7  3400               	retlw	0
  5120  12E8  345B               	retlw	91
  5121  12E9  3400               	retlw	0
  5122  12EA  3461               	retlw	97
  5123  12EB  3400               	retlw	0
  5124  12EC  3465               	retlw	101
  5125  12ED  3400               	retlw	0
  5126  12EE  3466               	retlw	102
  5127  12EF  3400               	retlw	0
  5128  12F0  3465               	retlw	101
  5129  12F1  3400               	retlw	0
  5130  12F2  3461               	retlw	97
  5131  12F3  3400               	retlw	0
  5132  12F4  345B               	retlw	91
  5133  12F5  3400               	retlw	0
  5134  12F6  3453               	retlw	83
  5135  12F7  3400               	retlw	0
  5136  12F8  3448               	retlw	72
  5137  12F9  3400               	retlw	0
  5138  12FA  343C               	retlw	60
  5139  12FB  3400               	retlw	0
  5140  12FC  342E               	retlw	46
  5141  12FD  3400               	retlw	0
  5142  12FE  3420               	retlw	32
  5143  12FF  3400               	retlw	0
  5144  1300  3410               	retlw	16
  5145  1301  3400               	retlw	0
  5146  1302  3400               	retlw	0
  5147  1303  3400               	retlw	0
  5148  1304  34F0               	retlw	240
  5149  1305  3400               	retlw	0
  5150  1306  34E0               	retlw	224
  5151  1307  3400               	retlw	0
  5152  1308  34D2               	retlw	210
  5153  1309  3400               	retlw	0
  5154  130A  34C4               	retlw	196
  5155  130B  3400               	retlw	0
  5156  130C  34B8               	retlw	184
  5157  130D  3400               	retlw	0
  5158  130E  34AD               	retlw	173
  5159  130F  3400               	retlw	0
  5160  1310  34A5               	retlw	165
  5161  1311  3400               	retlw	0
  5162  1312  349F               	retlw	159
  5163  1313  3400               	retlw	0
  5164  1314  349B               	retlw	155
  5165  1315  3400               	retlw	0
  5166  1316  349A               	retlw	154
  5167  1317  3400               	retlw	0
  5168  1318  349B               	retlw	155
  5169  1319  3400               	retlw	0
  5170  131A  349F               	retlw	159
  5171  131B  3400               	retlw	0
  5172  131C  34A5               	retlw	165
  5173  131D  3400               	retlw	0
  5174  131E  34AD               	retlw	173
  5175  131F  3400               	retlw	0
  5176  1320  34B8               	retlw	184
  5177  1321  3400               	retlw	0
  5178  1322  34C4               	retlw	196
  5179  1323  3400               	retlw	0
  5180  1324  34D2               	retlw	210
  5181  1325  3400               	retlw	0
  5182  1326  34E0               	retlw	224
  5183  1327  3400               	retlw	0
  5184  1328  34F0               	retlw	240
  5185  1329  3400               	retlw	0
  5186  132A  3400               	retlw	0
  5187  132B  3400               	retlw	0
  5188  132C  3410               	retlw	16
  5189  132D  3400               	retlw	0
  5190  132E  3420               	retlw	32
  5191  132F  3400               	retlw	0
  5192  1330  342E               	retlw	46
  5193  1331  3400               	retlw	0
  5194  1332  343C               	retlw	60
  5195  1333  3400               	retlw	0
  5196  1334  3448               	retlw	72
  5197  1335  3400               	retlw	0
  5198  1336  3453               	retlw	83
  5199  1337  3400               	retlw	0
  5200  1338  345B               	retlw	91
  5201  1339  3400               	retlw	0
  5202  133A  3461               	retlw	97
  5203  133B  3400               	retlw	0
  5204  133C  3465               	retlw	101
  5205  133D  3400               	retlw	0
  5206  133E  3466               	retlw	102
  5207  133F  3400               	retlw	0
  5208  1340  3465               	retlw	101
  5209  1341  3400               	retlw	0
  5210  1342  3461               	retlw	97
  5211  1343  3400               	retlw	0
  5212  1344  345B               	retlw	91
  5213  1345  3400               	retlw	0
  5214  1346  3453               	retlw	83
  5215  1347  3400               	retlw	0
  5216  1348  3448               	retlw	72
  5217  1349  3400               	retlw	0
  5218  134A  343C               	retlw	60
  5219  134B  3400               	retlw	0
  5220  134C  342E               	retlw	46
  5221  134D  3400               	retlw	0
  5222  134E  3420               	retlw	32
  5223  134F  3400               	retlw	0
  5224  1350  3410               	retlw	16
  5225  1351  3400               	retlw	0
  5226  1352  3400               	retlw	0
  5227  1353  3400               	retlw	0
  5228  1354  34F0               	retlw	240
  5229  1355  3400               	retlw	0
  5230  1356  34E0               	retlw	224
  5231  1357  3400               	retlw	0
  5232  1358  34D2               	retlw	210
  5233  1359  3400               	retlw	0
  5234  135A  34C4               	retlw	196
  5235  135B  3400               	retlw	0
  5236  135C  34B8               	retlw	184
  5237  135D  3400               	retlw	0
  5238  135E  34AD               	retlw	173
  5239  135F  3400               	retlw	0
  5240  1360  34A5               	retlw	165
  5241  1361  3400               	retlw	0
  5242  1362  349F               	retlw	159
  5243  1363  3400               	retlw	0
  5244  1364  349B               	retlw	155
  5245  1365  3400               	retlw	0
  5246  1366  349A               	retlw	154
  5247  1367  3400               	retlw	0
  5248  1368  349B               	retlw	155
  5249  1369  3400               	retlw	0
  5250  136A  349F               	retlw	159
  5251  136B  3400               	retlw	0
  5252  136C  34A5               	retlw	165
  5253  136D  3400               	retlw	0
  5254  136E  34AD               	retlw	173
  5255  136F  3400               	retlw	0
  5256  1370  34B8               	retlw	184
  5257  1371  3400               	retlw	0
  5258  1372  34C4               	retlw	196
  5259  1373  3400               	retlw	0
  5260  1374  34D2               	retlw	210
  5261  1375  3400               	retlw	0
  5262  1376  34E0               	retlw	224
  5263  1377  3400               	retlw	0
  5264  1378  34F0               	retlw	240
  5265  1379  3400               	retlw	0
  5266  137A  3400               	retlw	0
  5267  137B  3400               	retlw	0
  5268  137C  3410               	retlw	16
  5269  137D  3400               	retlw	0
  5270  137E  3420               	retlw	32
  5271  137F  3400               	retlw	0
  5272  1380  342E               	retlw	46
  5273  1381  3400               	retlw	0
  5274  1382  343C               	retlw	60
  5275  1383  3400               	retlw	0
  5276  1384  3448               	retlw	72
  5277  1385  3400               	retlw	0
  5278  1386  3453               	retlw	83
  5279  1387  3400               	retlw	0
  5280  1388  345B               	retlw	91
  5281  1389  3400               	retlw	0
  5282  138A  3461               	retlw	97
  5283  138B  3400               	retlw	0
  5284  138C  3465               	retlw	101
  5285  138D  3400               	retlw	0
  5286  138E  3466               	retlw	102
  5287  138F  3400               	retlw	0
  5288  1390  3465               	retlw	101
  5289  1391  3400               	retlw	0
  5290  1392  3461               	retlw	97
  5291  1393  3400               	retlw	0
  5292  1394  345B               	retlw	91
  5293  1395  3400               	retlw	0
  5294  1396  3453               	retlw	83
  5295  1397  3400               	retlw	0
  5296  1398  3448               	retlw	72
  5297  1399  3400               	retlw	0
  5298  139A  343C               	retlw	60
  5299  139B  3400               	retlw	0
  5300  139C  342E               	retlw	46
  5301  139D  3400               	retlw	0
  5302  139E  3420               	retlw	32
  5303  139F  3400               	retlw	0
  5304  13A0  3410               	retlw	16
  5305  13A1  3400               	retlw	0
  5306  13A2  3400               	retlw	0
  5307  13A3  3400               	retlw	0
  5308  13A4  34F0               	retlw	240
  5309  13A5  3400               	retlw	0
  5310  13A6  34E0               	retlw	224
  5311  13A7  3400               	retlw	0
  5312  13A8  34D2               	retlw	210
  5313  13A9  3400               	retlw	0
  5314  13AA  34C4               	retlw	196
  5315  13AB  3400               	retlw	0
  5316  13AC  34B8               	retlw	184
  5317  13AD  3400               	retlw	0
  5318  13AE  34AD               	retlw	173
  5319  13AF  3400               	retlw	0
  5320  13B0  34A5               	retlw	165
  5321  13B1  3400               	retlw	0
  5322  13B2  349F               	retlw	159
  5323  13B3  3400               	retlw	0
  5324  13B4  349B               	retlw	155
  5325  13B5  3400               	retlw	0
  5326  13B6  349A               	retlw	154
  5327  13B7  3400               	retlw	0
  5328  13B8  349B               	retlw	155
  5329  13B9  3400               	retlw	0
  5330  13BA  349F               	retlw	159
  5331  13BB  3400               	retlw	0
  5332  13BC  34A5               	retlw	165
  5333  13BD  3400               	retlw	0
  5334  13BE  34AD               	retlw	173
  5335  13BF  3400               	retlw	0
  5336  13C0  34B8               	retlw	184
  5337  13C1  3400               	retlw	0
  5338  13C2  34C4               	retlw	196
  5339  13C3  3400               	retlw	0
  5340  13C4  34D2               	retlw	210
  5341  13C5  3400               	retlw	0
  5342  13C6  34E0               	retlw	224
  5343  13C7  3400               	retlw	0
  5344  13C8  34F0               	retlw	240
  5345  13C9  3400               	retlw	0
  5346  13CA  3400               	retlw	0
  5347  13CB  3400               	retlw	0
  5348  13CC                     __end_of_drv_sine:	
  5349                           
  5350                           	psect	stringtext4
  5351  2800                     __pstringtext4:	
  5352  2800                     _dpowers:	
  5353  2800  3401               	retlw	1
  5354  2801  3400               	retlw	0
  5355  2802  3400               	retlw	0
  5356  2803  3400               	retlw	0
  5357  2804  340A               	retlw	10
  5358  2805  3400               	retlw	0
  5359  2806  3400               	retlw	0
  5360  2807  3400               	retlw	0
  5361  2808  3464               	retlw	100
  5362  2809  3400               	retlw	0
  5363  280A  3400               	retlw	0
  5364  280B  3400               	retlw	0
  5365  280C  34E8               	retlw	232
  5366  280D  3403               	retlw	3
  5367  280E  3400               	retlw	0
  5368  280F  3400               	retlw	0
  5369  2810  3410               	retlw	16
  5370  2811  3427               	retlw	39
  5371  2812  3400               	retlw	0
  5372  2813  3400               	retlw	0
  5373  2814  34A0               	retlw	160
  5374  2815  3486               	retlw	134
  5375  2816  3401               	retlw	1
  5376  2817  3400               	retlw	0
  5377  2818  3440               	retlw	64
  5378  2819  3442               	retlw	66
  5379  281A  340F               	retlw	15
  5380  281B  3400               	retlw	0
  5381  281C  3480               	retlw	128
  5382  281D  3496               	retlw	150
  5383  281E  3498               	retlw	152
  5384  281F  3400               	retlw	0
  5385  2820  3400               	retlw	0
  5386  2821  34E1               	retlw	225
  5387  2822  34F5               	retlw	245
  5388  2823  3405               	retlw	5
  5389  2824  3400               	retlw	0
  5390  2825  34CA               	retlw	202
  5391  2826  349A               	retlw	154
  5392  2827  343B               	retlw	59
  5393  2828                     __end_of_dpowers:	
  5394                           
  5395                           	psect	stringtext5
  5396  2A4F                     __pstringtext5:	
  5397  2A4F                     _TMR2_RANGE:	
  5398  2A4F  3400               	retlw	0
  5399  2A50  34C8               	retlw	200
  5400  2A51  343F               	retlw	63
  5401  2A52                     __end_of_TMR2_RANGE:	
  5402                           
  5403                           	psect	stringtext6
  5404  2A52                     __pstringtext6:	
  5405  2A52                     _TMR0_RANGE:	
  5406  2A52  3400               	retlw	0
  5407  2A53  34C8               	retlw	200
  5408  2A54  343D               	retlw	61
  5409  2A55                     __end_of_TMR0_RANGE:	
  5410                           
  5411                           	psect	stringtext7
  5412  2A61                     __pstringtext7:	
  5413  2A61                     _LEDpower:	
  5414  2A61  343F               	retlw	63
  5415  2A62  3400               	retlw	0
  5416  2A63                     __end_of_LEDpower:	
  5417                           
  5418                           	psect	stringtext8
  5419  2A65                     __pstringtext8:	
  5420  2A65                     _drv_address:	
  5421  2A65  3459               	retlw	89
  5422  2A66                     __end_of_drv_address:	
  5423                           
  5424                           	psect	stringtext9
  5425  10F4                     __pstringtext9:	
  5426  10F4                     drv2665@drv_fifo_sine:	
  5427  10F4  340B               	retlw	11
  5428  10F5  3400               	retlw	0
  5429  10F6  3400               	retlw	0
  5430  10F7  3400               	retlw	0
  5431  10F8  3410               	retlw	16
  5432  10F9  3400               	retlw	0
  5433  10FA  3420               	retlw	32
  5434  10FB  3400               	retlw	0
  5435  10FC  342E               	retlw	46
  5436  10FD  3400               	retlw	0
  5437  10FE  343C               	retlw	60
  5438  10FF  3400               	retlw	0
  5439  1100  3448               	retlw	72
  5440  1101  3400               	retlw	0
  5441  1102  3453               	retlw	83
  5442  1103  3400               	retlw	0
  5443  1104  345B               	retlw	91
  5444  1105  3400               	retlw	0
  5445  1106  3461               	retlw	97
  5446  1107  3400               	retlw	0
  5447  1108  3465               	retlw	101
  5448  1109  3400               	retlw	0
  5449  110A  3466               	retlw	102
  5450  110B  3400               	retlw	0
  5451  110C  3465               	retlw	101
  5452  110D  3400               	retlw	0
  5453  110E  3461               	retlw	97
  5454  110F  3400               	retlw	0
  5455  1110  345B               	retlw	91
  5456  1111  3400               	retlw	0
  5457  1112  3453               	retlw	83
  5458  1113  3400               	retlw	0
  5459  1114  3448               	retlw	72
  5460  1115  3400               	retlw	0
  5461  1116  343C               	retlw	60
  5462  1117  3400               	retlw	0
  5463  1118  342E               	retlw	46
  5464  1119  3400               	retlw	0
  5465  111A  3420               	retlw	32
  5466  111B  3400               	retlw	0
  5467  111C  3410               	retlw	16
  5468  111D  3400               	retlw	0
  5469  111E  3400               	retlw	0
  5470  111F  3400               	retlw	0
  5471  1120  34F0               	retlw	240
  5472  1121  3400               	retlw	0
  5473  1122  34E0               	retlw	224
  5474  1123  3400               	retlw	0
  5475  1124  34D2               	retlw	210
  5476  1125  3400               	retlw	0
  5477  1126  34C4               	retlw	196
  5478  1127  3400               	retlw	0
  5479  1128  34B8               	retlw	184
  5480  1129  3400               	retlw	0
  5481  112A  34AD               	retlw	173
  5482  112B  3400               	retlw	0
  5483  112C  34A5               	retlw	165
  5484  112D  3400               	retlw	0
  5485  112E  349F               	retlw	159
  5486  112F  3400               	retlw	0
  5487  1130  349B               	retlw	155
  5488  1131  3400               	retlw	0
  5489  1132  349A               	retlw	154
  5490  1133  3400               	retlw	0
  5491  1134  349B               	retlw	155
  5492  1135  3400               	retlw	0
  5493  1136  349F               	retlw	159
  5494  1137  3400               	retlw	0
  5495  1138  34A5               	retlw	165
  5496  1139  3400               	retlw	0
  5497  113A  34AD               	retlw	173
  5498  113B  3400               	retlw	0
  5499  113C  34B8               	retlw	184
  5500  113D  3400               	retlw	0
  5501  113E  34C4               	retlw	196
  5502  113F  3400               	retlw	0
  5503  1140  34D2               	retlw	210
  5504  1141  3400               	retlw	0
  5505  1142  34E0               	retlw	224
  5506  1143  3400               	retlw	0
  5507  1144  34F0               	retlw	240
  5508  1145  3400               	retlw	0
  5509  1146  3400               	retlw	0
  5510  1147  3400               	retlw	0
  5511  1148  3410               	retlw	16
  5512  1149  3400               	retlw	0
  5513  114A  3420               	retlw	32
  5514  114B  3400               	retlw	0
  5515  114C  342E               	retlw	46
  5516  114D  3400               	retlw	0
  5517  114E  343C               	retlw	60
  5518  114F  3400               	retlw	0
  5519  1150  3448               	retlw	72
  5520  1151  3400               	retlw	0
  5521  1152  3453               	retlw	83
  5522  1153  3400               	retlw	0
  5523  1154  345B               	retlw	91
  5524  1155  3400               	retlw	0
  5525  1156  3461               	retlw	97
  5526  1157  3400               	retlw	0
  5527  1158  3465               	retlw	101
  5528  1159  3400               	retlw	0
  5529  115A  3466               	retlw	102
  5530  115B  3400               	retlw	0
  5531  115C  3465               	retlw	101
  5532  115D  3400               	retlw	0
  5533  115E  3461               	retlw	97
  5534  115F  3400               	retlw	0
  5535  1160  345B               	retlw	91
  5536  1161  3400               	retlw	0
  5537  1162  3453               	retlw	83
  5538  1163  3400               	retlw	0
  5539  1164  3448               	retlw	72
  5540  1165  3400               	retlw	0
  5541  1166  343C               	retlw	60
  5542  1167  3400               	retlw	0
  5543  1168  342E               	retlw	46
  5544  1169  3400               	retlw	0
  5545  116A  3420               	retlw	32
  5546  116B  3400               	retlw	0
  5547  116C  3410               	retlw	16
  5548  116D  3400               	retlw	0
  5549  116E  3400               	retlw	0
  5550  116F  3400               	retlw	0
  5551  1170  34F0               	retlw	240
  5552  1171  3400               	retlw	0
  5553  1172  34E0               	retlw	224
  5554  1173  3400               	retlw	0
  5555  1174  34D2               	retlw	210
  5556  1175  3400               	retlw	0
  5557  1176  34C4               	retlw	196
  5558  1177  3400               	retlw	0
  5559  1178  34B8               	retlw	184
  5560  1179  3400               	retlw	0
  5561  117A  34AD               	retlw	173
  5562  117B  3400               	retlw	0
  5563  117C  34A5               	retlw	165
  5564  117D  3400               	retlw	0
  5565  117E  349F               	retlw	159
  5566  117F  3400               	retlw	0
  5567  1180  349B               	retlw	155
  5568  1181  3400               	retlw	0
  5569  1182  349A               	retlw	154
  5570  1183  3400               	retlw	0
  5571  1184  349B               	retlw	155
  5572  1185  3400               	retlw	0
  5573  1186  349F               	retlw	159
  5574  1187  3400               	retlw	0
  5575  1188  34A5               	retlw	165
  5576  1189  3400               	retlw	0
  5577  118A  34AD               	retlw	173
  5578  118B  3400               	retlw	0
  5579  118C  34B8               	retlw	184
  5580  118D  3400               	retlw	0
  5581  118E  34C4               	retlw	196
  5582  118F  3400               	retlw	0
  5583  1190  34D2               	retlw	210
  5584  1191  3400               	retlw	0
  5585  1192  34E0               	retlw	224
  5586  1193  3400               	retlw	0
  5587  1194  34F0               	retlw	240
  5588  1195  3400               	retlw	0
  5589  1196  3400               	retlw	0
  5590  1197  3400               	retlw	0
  5591  1198  3410               	retlw	16
  5592  1199  3400               	retlw	0
  5593  119A  3420               	retlw	32
  5594  119B  3400               	retlw	0
  5595  119C  342E               	retlw	46
  5596  119D  3400               	retlw	0
  5597  119E  343C               	retlw	60
  5598  119F  3400               	retlw	0
  5599  11A0  3448               	retlw	72
  5600  11A1  3400               	retlw	0
  5601  11A2  3453               	retlw	83
  5602  11A3  3400               	retlw	0
  5603  11A4  345B               	retlw	91
  5604  11A5  3400               	retlw	0
  5605  11A6  3461               	retlw	97
  5606  11A7  3400               	retlw	0
  5607  11A8  3465               	retlw	101
  5608  11A9  3400               	retlw	0
  5609  11AA  3466               	retlw	102
  5610  11AB  3400               	retlw	0
  5611  11AC  3465               	retlw	101
  5612  11AD  3400               	retlw	0
  5613  11AE  3461               	retlw	97
  5614  11AF  3400               	retlw	0
  5615  11B0  345B               	retlw	91
  5616  11B1  3400               	retlw	0
  5617  11B2  3453               	retlw	83
  5618  11B3  3400               	retlw	0
  5619  11B4  3448               	retlw	72
  5620  11B5  3400               	retlw	0
  5621  11B6  343C               	retlw	60
  5622  11B7  3400               	retlw	0
  5623  11B8  342E               	retlw	46
  5624  11B9  3400               	retlw	0
  5625  11BA  3420               	retlw	32
  5626  11BB  3400               	retlw	0
  5627  11BC  3410               	retlw	16
  5628  11BD  3400               	retlw	0
  5629  11BE  3400               	retlw	0
  5630  11BF  3400               	retlw	0
  5631  11C0  34F0               	retlw	240
  5632  11C1  3400               	retlw	0
  5633  11C2  34E0               	retlw	224
  5634  11C3  3400               	retlw	0
  5635  11C4  34D2               	retlw	210
  5636  11C5  3400               	retlw	0
  5637  11C6  34C4               	retlw	196
  5638  11C7  3400               	retlw	0
  5639  11C8  34B8               	retlw	184
  5640  11C9  3400               	retlw	0
  5641  11CA  34AD               	retlw	173
  5642  11CB  3400               	retlw	0
  5643  11CC  34A5               	retlw	165
  5644  11CD  3400               	retlw	0
  5645  11CE  349F               	retlw	159
  5646  11CF  3400               	retlw	0
  5647  11D0  349B               	retlw	155
  5648  11D1  3400               	retlw	0
  5649  11D2  349A               	retlw	154
  5650  11D3  3400               	retlw	0
  5651  11D4  349B               	retlw	155
  5652  11D5  3400               	retlw	0
  5653  11D6  349F               	retlw	159
  5654  11D7  3400               	retlw	0
  5655  11D8  34A5               	retlw	165
  5656  11D9  3400               	retlw	0
  5657  11DA  34AD               	retlw	173
  5658  11DB  3400               	retlw	0
  5659  11DC  34B8               	retlw	184
  5660  11DD  3400               	retlw	0
  5661  11DE  34C4               	retlw	196
  5662  11DF  3400               	retlw	0
  5663  11E0  34D2               	retlw	210
  5664  11E1  3400               	retlw	0
  5665  11E2  34E0               	retlw	224
  5666  11E3  3400               	retlw	0
  5667  11E4  34F0               	retlw	240
  5668  11E5  3400               	retlw	0
  5669  11E6  3400               	retlw	0
  5670  11E7  3400               	retlw	0
  5671  11E8                     __end_ofdrv2665@drv_fifo_sine:	
  5672                           
  5673                           	psect	stringtext10
  5674  2930                     __pstringtext10:	
  5675  2930                     sin@coeff_a:	
  5676  2930  34F4               	retlw	244
  5677  2931  344A               	retlw	74
  5678  2932  3448               	retlw	72
  5679  2933  3495               	retlw	149
  5680  2934  3495               	retlw	149
  5681  2935  34C7               	retlw	199
  5682  2936  34C1               	retlw	193
  5683  2937  34DC               	retlw	220
  5684  2938  3445               	retlw	69
  5685  2939  34DC               	retlw	220
  5686  293A  346D               	retlw	109
  5687  293B  34C3               	retlw	195
  5688  293C  34B3               	retlw	179
  5689  293D  3433               	retlw	51
  5690  293E  3440               	retlw	64
  5691  293F                     __end_ofsin@coeff_a:	
  5692                           
  5693                           	psect	stringtext11
  5694  2978                     __pstringtext11:	
  5695  2978                     sin@coeff_b:	
  5696  2978  3434               	retlw	52
  5697  2979  3401               	retlw	1
  5698  297A  3448               	retlw	72
  5699  297B  349D               	retlw	157
  5700  297C  34B0               	retlw	176
  5701  297D  3445               	retlw	69
  5702  297E  3400               	retlw	0
  5703  297F  34DA               	retlw	218
  5704  2980  3442               	retlw	66
  5705  2981  3400               	retlw	0
  5706  2982  3480               	retlw	128
  5707  2983  343F               	retlw	63
  5708  2984                     __end_ofsin@coeff_b:	
  5709                           
  5710                           	psect	nvBANK0
  5711  005E                     __pnvBANK0:	
  5712  005E                     _eusartTxBufferRemaining:	
  5713  005E                     	ds	1
  5714                           
  5715                           	psect	nvBANK3
  5716  01E1                     __pnvBANK3:	
  5717  01E1                     _TMR2_InterruptHandler:	
  5718  01E1                     	ds	2
  5719  01E3                     _TMR0_InterruptHandler:	
  5720  01E3                     	ds	2
  5721  001F                     _T2CONbits	set	31
  5722  001F                     _T2CON	set	31
  5723  001D                     _TMR2	set	29
  5724  001E                     _PR2	set	30
  5725  0017                     _T0CON0bits	set	23
  5726  0017                     _T0CON0	set	23
  5727  0015                     _TMR0L	set	21
  5728  0016                     _TMR0H	set	22
  5729  0018                     _T0CON1	set	24
  5730  0011                     _PIR1bits	set	17
  5731  0010                     _PIR0bits	set	16
  5732  000E                     _PORTCbits	set	14
  5733  000B                     _INTCONbits	set	11
  5734  0091                     _PIE1bits	set	145
  5735  0090                     _PIE0bits	set	144
  5736  008E                     _TRISC	set	142
  5737  008D                     _TRISB	set	141
  5738  008C                     _TRISA	set	140
  5739  0097                     _WDTCON	set	151
  5740  010C                     _LATAbits	set	268
  5741  010E                     _LATCbits	set	270
  5742  010D                     _LATBbits	set	269
  5743  010E                     _LATC	set	270
  5744  010D                     _LATB	set	269
  5745  010C                     _LATA	set	268
  5746  0199                     _RC1REG	set	409
  5747  019D                     _RC1STAbits	set	413
  5748  019A                     _TX1REG	set	410
  5749  019C                     _SP1BRGH	set	412
  5750  019B                     _SP1BRGL	set	411
  5751  019E                     _TX1STA	set	414
  5752  019D                     _RC1STA	set	413
  5753  019F                     _BAUD1CON	set	415
  5754  018C                     _ANSELA	set	396
  5755  018D                     _ANSELB	set	397
  5756  018E                     _ANSELC	set	398
  5757  0214                     _SSP1STATbits	set	532
  5758  0213                     _SSP1MSK	set	531
  5759  0211                     _SSP1BUF	set	529
  5760  0216                     _SSP1CON2bits	set	534
  5761  0212                     _SSP1ADD	set	530
  5762  0216                     _SSP1CON2	set	534
  5763  0215                     _SSP1CON1	set	533
  5764  0214                     _SSP1STAT	set	532
  5765  0215                     _SSP1CON1bits	set	533
  5766  020E                     _WPUC	set	526
  5767  020C                     _WPUA	set	524
  5768  020D                     _WPUB	set	525
  5769  028E                     _ODCONC	set	654
  5770  028D                     _ODCONB	set	653
  5771  028C                     _ODCONA	set	652
  5772  0896                     _NVMCON2	set	2198
  5773  0893                     _NVMDATL	set	2195
  5774  0894                     _NVMDATH	set	2196
  5775  0895                     _NVMCON1bits	set	2197
  5776  0892                     _NVMADRH	set	2194
  5777  0891                     _NVMADRL	set	2193
  5778  0916                     _PMD5	set	2326
  5779  0915                     _PMD4	set	2325
  5780  0914                     _PMD3	set	2324
  5781  0913                     _PMD2	set	2323
  5782  0912                     _PMD1	set	2322
  5783  0911                     _PMD0	set	2321
  5784  091E                     _OSCTUNE	set	2334
  5785  091F                     _OSCFRQ	set	2335
  5786  091D                     _OSCEN	set	2333
  5787  091B                     _OSCCON3	set	2331
  5788  0919                     _OSCCON1	set	2329
  5789  0E24                     _RXPPSbits	set	3620
  5790  0E20                     _SSP1CLKPPSbits	set	3616
  5791  0E21                     _SSP1DATPPSbits	set	3617
  5792  0E9D                     _RB5PPSbits	set	3741
  5793  0E9E                     _RB6PPSbits	set	3742
  5794  0E9F                     _RB7PPSbits	set	3743
  5795                           
  5796                           	psect	stringtext12
  5797  2828                     __pstringtext12:	
  5798  2828                     STR_42:	
  5799  2828  340A               	retlw	10
  5800  2829  3474               	retlw	116	;'t'
  5801  282A  3465               	retlw	101	;'e'
  5802  282B  3473               	retlw	115	;'s'
  5803  282C  3474               	retlw	116	;'t'
  5804  282D  3469               	retlw	105	;'i'
  5805  282E  346E               	retlw	110	;'n'
  5806  282F  3467               	retlw	103	;'g'
  5807  2830  3420               	retlw	32	;' '
  5808  2831  3462               	retlw	98	;'b'
  5809  2832  346F               	retlw	111	;'o'
  5810  2833  3474               	retlw	116	;'t'
  5811  2834  3474               	retlw	116	;'t'
  5812  2835  346F               	retlw	111	;'o'
  5813  2836  346D               	retlw	109	;'m'
  5814  2837  3420               	retlw	32	;' '
  5815  2838  344C               	retlw	76	;'L'
  5816  2839  3445               	retlw	69	;'E'
  5817  283A  3444               	retlw	68	;'D'
  5818  283B  3420               	retlw	32	;' '
  5819  283C  3464               	retlw	100	;'d'
  5820  283D  3472               	retlw	114	;'r'
  5821  283E  3469               	retlw	105	;'i'
  5822  283F  3476               	retlw	118	;'v'
  5823  2840  3465               	retlw	101	;'e'
  5824  2841  3472               	retlw	114	;'r'
  5825  2842  342E               	retlw	46	;'.'
  5826  2843  342E               	retlw	46	;'.'
  5827  2844  342E               	retlw	46	;'.'
  5828  2845  340A               	retlw	10
  5829  2846  3400               	retlw	0
  5830                           
  5831                           	psect	stringtext13
  5832  2847                     __pstringtext13:	
  5833  2847                     STR_36:	
  5834  2847  340A               	retlw	10
  5835  2848  342D               	retlw	45	;'-'
  5836  2849  342D               	retlw	45	;'-'
  5837  284A  342D               	retlw	45	;'-'
  5838  284B  342D               	retlw	45	;'-'
  5839  284C  3473               	retlw	115	;'s'
  5840  284D  3474               	retlw	116	;'t'
  5841  284E  3461               	retlw	97	;'a'
  5842  284F  3472               	retlw	114	;'r'
  5843  2850  3474               	retlw	116	;'t'
  5844  2851  3469               	retlw	105	;'i'
  5845  2852  346E               	retlw	110	;'n'
  5846  2853  3467               	retlw	103	;'g'
  5847  2854  3420               	retlw	32	;' '
  5848  2855  3463               	retlw	99	;'c'
  5849  2856  346F               	retlw	111	;'o'
  5850  2857  346D               	retlw	109	;'m'
  5851  2858  346D               	retlw	109	;'m'
  5852  2859  3420               	retlw	32	;' '
  5853  285A  3474               	retlw	116	;'t'
  5854  285B  3465               	retlw	101	;'e'
  5855  285C  3473               	retlw	115	;'s'
  5856  285D  3474               	retlw	116	;'t'
  5857  285E  342D               	retlw	45	;'-'
  5858  285F  342D               	retlw	45	;'-'
  5859  2860  342D               	retlw	45	;'-'
  5860  2861  342D               	retlw	45	;'-'
  5861  2862  340A               	retlw	10
  5862  2863  340A               	retlw	10
  5863  2864  3400               	retlw	0
  5864                           
  5865                           	psect	stringtext14
  5866  2865                     __pstringtext14:	
  5867  2865                     STR_50:	
  5868  2865  342D               	retlw	45	;'-'
  5869  2866  342D               	retlw	45	;'-'
  5870  2867  342D               	retlw	45	;'-'
  5871  2868  342D               	retlw	45	;'-'
  5872  2869  3466               	retlw	102	;'f'
  5873  286A  3469               	retlw	105	;'i'
  5874  286B  346E               	retlw	110	;'n'
  5875  286C  3469               	retlw	105	;'i'
  5876  286D  3473               	retlw	115	;'s'
  5877  286E  3468               	retlw	104	;'h'
  5878  286F  3465               	retlw	101	;'e'
  5879  2870  3464               	retlw	100	;'d'
  5880  2871  3420               	retlw	32	;' '
  5881  2872  3463               	retlw	99	;'c'
  5882  2873  346F               	retlw	111	;'o'
  5883  2874  346D               	retlw	109	;'m'
  5884  2875  346D               	retlw	109	;'m'
  5885  2876  3420               	retlw	32	;' '
  5886  2877  3474               	retlw	116	;'t'
  5887  2878  3465               	retlw	101	;'e'
  5888  2879  3473               	retlw	115	;'s'
  5889  287A  3474               	retlw	116	;'t'
  5890  287B  342D               	retlw	45	;'-'
  5891  287C  342D               	retlw	45	;'-'
  5892  287D  342D               	retlw	45	;'-'
  5893  287E  342D               	retlw	45	;'-'
  5894  287F  340A               	retlw	10
  5895  2880  3400               	retlw	0
  5896                           
  5897                           	psect	stringtext15
  5898  2881                     __pstringtext15:	
  5899  2881                     STR_37:	
  5900  2881  3474               	retlw	116	;'t'
  5901  2882  3465               	retlw	101	;'e'
  5902  2883  3473               	retlw	115	;'s'
  5903  2884  3474               	retlw	116	;'t'
  5904  2885  3469               	retlw	105	;'i'
  5905  2886  346E               	retlw	110	;'n'
  5906  2887  3467               	retlw	103	;'g'
  5907  2888  3420               	retlw	32	;' '
  5908  2889  3474               	retlw	116	;'t'
  5909  288A  346F               	retlw	111	;'o'
  5910  288B  3470               	retlw	112	;'p'
  5911  288C  3420               	retlw	32	;' '
  5912  288D  344C               	retlw	76	;'L'
  5913  288E  3445               	retlw	69	;'E'
  5914  288F  3444               	retlw	68	;'D'
  5915  2890  3420               	retlw	32	;' '
  5916  2891  3464               	retlw	100	;'d'
  5917  2892  3472               	retlw	114	;'r'
  5918  2893  3469               	retlw	105	;'i'
  5919  2894  3476               	retlw	118	;'v'
  5920  2895  3465               	retlw	101	;'e'
  5921  2896  3472               	retlw	114	;'r'
  5922  2897  342E               	retlw	46	;'.'
  5923  2898  342E               	retlw	46	;'.'
  5924  2899  342E               	retlw	46	;'.'
  5925  289A  3400               	retlw	0
  5926                           
  5927                           	psect	stringtext16
  5928  289B                     __pstringtext16:	
  5929  289B                     STR_47:	
  5930  289B  340A               	retlw	10
  5931  289C  3474               	retlw	116	;'t'
  5932  289D  3465               	retlw	101	;'e'
  5933  289E  3473               	retlw	115	;'s'
  5934  289F  3474               	retlw	116	;'t'
  5935  28A0  3469               	retlw	105	;'i'
  5936  28A1  346E               	retlw	110	;'n'
  5937  28A2  3467               	retlw	103	;'g'
  5938  28A3  3420               	retlw	32	;' '
  5939  28A4  3470               	retlw	112	;'p'
  5940  28A5  3469               	retlw	105	;'i'
  5941  28A6  3465               	retlw	101	;'e'
  5942  28A7  347A               	retlw	122	;'z'
  5943  28A8  346F               	retlw	111	;'o'
  5944  28A9  3420               	retlw	32	;' '
  5945  28AA  3464               	retlw	100	;'d'
  5946  28AB  3472               	retlw	114	;'r'
  5947  28AC  3469               	retlw	105	;'i'
  5948  28AD  3476               	retlw	118	;'v'
  5949  28AE  3465               	retlw	101	;'e'
  5950  28AF  3472               	retlw	114	;'r'
  5951  28B0  342E               	retlw	46	;'.'
  5952  28B1  342E               	retlw	46	;'.'
  5953  28B2  342E               	retlw	46	;'.'
  5954  28B3  3400               	retlw	0
  5955                           
  5956                           	psect	stringtext17
  5957  28B4                     __pstringtext17:	
  5958  28B4                     STR_84:	
  5959  28B4  3455               	retlw	85	;'U'
  5960  28B5  344E               	retlw	78	;'N'
  5961  28B6  3452               	retlw	82	;'R'
  5962  28B7  3445               	retlw	69	;'E'
  5963  28B8  3443               	retlw	67	;'C'
  5964  28B9  344F               	retlw	79	;'O'
  5965  28BA  3447               	retlw	71	;'G'
  5966  28BB  344E               	retlw	78	;'N'
  5967  28BC  3449               	retlw	73	;'I'
  5968  28BD  345A               	retlw	90	;'Z'
  5969  28BE  3445               	retlw	69	;'E'
  5970  28BF  3444               	retlw	68	;'D'
  5971  28C0  3420               	retlw	32	;' '
  5972  28C1  3443               	retlw	67	;'C'
  5973  28C2  344F               	retlw	79	;'O'
  5974  28C3  344D               	retlw	77	;'M'
  5975  28C4  344D               	retlw	77	;'M'
  5976  28C5  3441               	retlw	65	;'A'
  5977  28C6  344E               	retlw	78	;'N'
  5978  28C7  3444               	retlw	68	;'D'
  5979  28C8  3421               	retlw	33	;'!'
  5980  28C9  340A               	retlw	10
  5981  28CA  3400               	retlw	0
  5982                           
  5983                           	psect	stringtext18
  5984  28CB                     __pstringtext18:	
  5985  28CB                     STR_52:	
  5986  28CB  3464               	retlw	100	;'d'
  5987  28CC  3472               	retlw	114	;'r'
  5988  28CD  3476               	retlw	118	;'v'
  5989  28CE  345F               	retlw	95	;'_'
  5990  28CF  3477               	retlw	119	;'w'
  5991  28D0  3472               	retlw	114	;'r'
  5992  28D1  3469               	retlw	105	;'i'
  5993  28D2  3474               	retlw	116	;'t'
  5994  28D3  3465               	retlw	101	;'e'
  5995  28D4  3420               	retlw	32	;' '
  5996  28D5  3465               	retlw	101	;'e'
  5997  28D6  3472               	retlw	114	;'r'
  5998  28D7  3472               	retlw	114	;'r'
  5999  28D8  346F               	retlw	111	;'o'
  6000  28D9  3472               	retlw	114	;'r'
  6001  28DA  3421               	retlw	33	;'!'
  6002  28DB  340A               	retlw	10
  6003  28DC  3400               	retlw	0
  6004                           
  6005                           	psect	stringtext19
  6006  28DD                     __pstringtext19:	
  6007  28DD                     STR_54:	
  6008  28DD  3464               	retlw	100	;'d'
  6009  28DE  3472               	retlw	114	;'r'
  6010  28DF  3476               	retlw	118	;'v'
  6011  28E0  345F               	retlw	95	;'_'
  6012  28E1  3472               	retlw	114	;'r'
  6013  28E2  3465               	retlw	101	;'e'
  6014  28E3  3461               	retlw	97	;'a'
  6015  28E4  3464               	retlw	100	;'d'
  6016  28E5  3420               	retlw	32	;' '
  6017  28E6  3465               	retlw	101	;'e'
  6018  28E7  3472               	retlw	114	;'r'
  6019  28E8  3472               	retlw	114	;'r'
  6020  28E9  346F               	retlw	111	;'o'
  6021  28EA  3472               	retlw	114	;'r'
  6022  28EB  3421               	retlw	33	;'!'
  6023  28EC  340A               	retlw	10
  6024  28ED  3400               	retlw	0
  6025                           
  6026                           	psect	stringtext20
  6027  28EE                     __pstringtext20:	
  6028  28EE                     STR_55:	
  6029  28EE  3466               	retlw	102	;'f'
  6030  28EF  3469               	retlw	105	;'i'
  6031  28F0  3466               	retlw	102	;'f'
  6032  28F1  346F               	retlw	111	;'o'
  6033  28F2  3420               	retlw	32	;' '
  6034  28F3  346E               	retlw	110	;'n'
  6035  28F4  346F               	retlw	111	;'o'
  6036  28F5  3474               	retlw	116	;'t'
  6037  28F6  3420               	retlw	32	;' '
  6038  28F7  3472               	retlw	114	;'r'
  6039  28F8  3465               	retlw	101	;'e'
  6040  28F9  3461               	retlw	97	;'a'
  6041  28FA  3464               	retlw	100	;'d'
  6042  28FB  3479               	retlw	121	;'y'
  6043  28FC  3421               	retlw	33	;'!'
  6044  28FD  340A               	retlw	10
  6045  28FE  3400               	retlw	0
  6046                           
  6047                           	psect	stringtext21
  6048  28FF                     __pstringtext21:	
  6049  28FF                     STR_51:	
  6050  28FF  3464               	retlw	100	;'d'
  6051  2900  3472               	retlw	114	;'r'
  6052  2901  3476               	retlw	118	;'v'
  6053  2902  3420               	retlw	32	;' '
  6054  2903  3469               	retlw	105	;'i'
  6055  2904  346E               	retlw	110	;'n'
  6056  2905  3469               	retlw	105	;'i'
  6057  2906  3474               	retlw	116	;'t'
  6058  2907  3469               	retlw	105	;'i'
  6059  2908  3461               	retlw	97	;'a'
  6060  2909  346C               	retlw	108	;'l'
  6061  290A  3469               	retlw	105	;'i'
  6062  290B  347A               	retlw	122	;'z'
  6063  290C  3465               	retlw	101	;'e'
  6064  290D  3464               	retlw	100	;'d'
  6065  290E  340A               	retlw	10
  6066  290F  3400               	retlw	0
  6067                           
  6068                           	psect	stringtext22
  6069  2910                     __pstringtext22:	
  6070  2910                     STR_10:	
  6071  2910  3461               	retlw	97	;'a'
  6072  2911  3462               	retlw	98	;'b'
  6073  2912  3473               	retlw	115	;'s'
  6074  2913  343A               	retlw	58	;':'
  6075  2914  3420               	retlw	32	;' '
  6076  2915  3461               	retlw	97	;'a'
  6077  2916  346C               	retlw	108	;'l'
  6078  2917  346C               	retlw	108	;'l'
  6079  2918  3420               	retlw	32	;' '
  6080  2919  3474               	retlw	116	;'t'
  6081  291A  3468               	retlw	104	;'h'
  6082  291B  3465               	retlw	101	;'e'
  6083  291C  3472               	retlw	114	;'r'
  6084  291D  3465               	retlw	101	;'e'
  6085  291E  340A               	retlw	10
  6086  291F  3400               	retlw	0
  6087                           
  6088                           	psect	stringtext23
  6089  2920                     __pstringtext23:	
  6090  2920                     STR_4:	
  6091  2920  3472               	retlw	114	;'r'
  6092  2921  3465               	retlw	101	;'e'
  6093  2922  3461               	retlw	97	;'a'
  6094  2923  3464               	retlw	100	;'d'
  6095  2924  3420               	retlw	32	;' '
  6096  2925  3464               	retlw	100	;'d'
  6097  2926  3461               	retlw	97	;'a'
  6098  2927  3474               	retlw	116	;'t'
  6099  2928  3461               	retlw	97	;'a'
  6100  2929  343A               	retlw	58	;':'
  6101  292A  3420               	retlw	32	;' '
  6102  292B  3425               	retlw	37	;'%'
  6103  292C  346C               	retlw	108	;'l'
  6104  292D  3475               	retlw	117	;'u'
  6105  292E  340A               	retlw	10
  6106  292F  3400               	retlw	0
  6107                           
  6108                           	psect	stringtext24
  6109  293F                     __pstringtext24:	
  6110  293F                     STR_69:	
  6111  293F  3468               	retlw	104	;'h'
  6112  2940  3465               	retlw	101	;'e'
  6113  2941  3461               	retlw	97	;'a'
  6114  2942  3474               	retlw	116	;'t'
  6115  2943  3465               	retlw	101	;'e'
  6116  2944  3472               	retlw	114	;'r'
  6117  2945  3470               	retlw	112	;'p'
  6118  2946  346F               	retlw	111	;'o'
  6119  2947  3473               	retlw	115	;'s'
  6120  2948  3474               	retlw	116	;'t'
  6121  2949  3474               	retlw	116	;'t'
  6122  294A  3469               	retlw	105	;'i'
  6123  294B  346D               	retlw	109	;'m'
  6124  294C  3465               	retlw	101	;'e'
  6125  294D  3400               	retlw	0
  6126                           
  6127                           	psect	stringtext25
  6128  294E                     __pstringtext25:	
  6129  294E                     STR_5:	
  6130  294E  340A               	retlw	10
  6131  294F  340A               	retlw	10
  6132  2950  3473               	retlw	115	;'s'
  6133  2951  3479               	retlw	121	;'y'
  6134  2952  3473               	retlw	115	;'s'
  6135  2953  3474               	retlw	116	;'t'
  6136  2954  3465               	retlw	101	;'e'
  6137  2955  346D               	retlw	109	;'m'
  6138  2956  3420               	retlw	32	;' '
  6139  2957  3464               	retlw	100	;'d'
  6140  2958  346F               	retlw	111	;'o'
  6141  2959  346E               	retlw	110	;'n'
  6142  295A  3465               	retlw	101	;'e'
  6143  295B  340A               	retlw	10
  6144  295C  3400               	retlw	0
  6145                           
  6146                           	psect	stringtext26
  6147  295D                     __pstringtext26:	
  6148  295D                     STR_68:	
  6149  295D  3468               	retlw	104	;'h'
  6150  295E  3465               	retlw	101	;'e'
  6151  295F  3461               	retlw	97	;'a'
  6152  2960  3474               	retlw	116	;'t'
  6153  2961  3465               	retlw	101	;'e'
  6154  2962  3472               	retlw	114	;'r'
  6155  2963  3470               	retlw	112	;'p'
  6156  2964  3472               	retlw	114	;'r'
  6157  2965  3465               	retlw	101	;'e'
  6158  2966  3474               	retlw	116	;'t'
  6159  2967  3469               	retlw	105	;'i'
  6160  2968  346D               	retlw	109	;'m'
  6161  2969  3465               	retlw	101	;'e'
  6162  296A  3400               	retlw	0
  6163                           
  6164                           	psect	stringtext27
  6165  296B                     __pstringtext27:	
  6166  296B                     STR_74:	
  6167  296B  3474               	retlw	116	;'t'
  6168  296C  346F               	retlw	111	;'o'
  6169  296D  3467               	retlw	103	;'g'
  6170  296E  3467               	retlw	103	;'g'
  6171  296F  346C               	retlw	108	;'l'
  6172  2970  3465               	retlw	101	;'e'
  6173  2971  3468               	retlw	104	;'h'
  6174  2972  3465               	retlw	101	;'e'
  6175  2973  3461               	retlw	97	;'a'
  6176  2974  3474               	retlw	116	;'t'
  6177  2975  3465               	retlw	101	;'e'
  6178  2976  3472               	retlw	114	;'r'
  6179  2977  3400               	retlw	0
  6180                           
  6181                           	psect	stringtext28
  6182  2984                     __pstringtext28:	
  6183  2984                     STR_67:	
  6184  2984  3470               	retlw	112	;'p'
  6185  2985  3469               	retlw	105	;'i'
  6186  2986  3465               	retlw	101	;'e'
  6187  2987  347A               	retlw	122	;'z'
  6188  2988  346F               	retlw	111	;'o'
  6189  2989  346F               	retlw	111	;'o'
  6190  298A  346E               	retlw	110	;'n'
  6191  298B  3474               	retlw	116	;'t'
  6192  298C  3469               	retlw	105	;'i'
  6193  298D  346D               	retlw	109	;'m'
  6194  298E  3465               	retlw	101	;'e'
  6195  298F  3400               	retlw	0
  6196                           
  6197                           	psect	stringtext29
  6198  2990                     __pstringtext29:	
  6199  2990                     STR_70:	
  6200  2990  3468               	retlw	104	;'h'
  6201  2991  3465               	retlw	101	;'e'
  6202  2992  3461               	retlw	97	;'a'
  6203  2993  3474               	retlw	116	;'t'
  6204  2994  3465               	retlw	101	;'e'
  6205  2995  3472               	retlw	114	;'r'
  6206  2996  3431               	retlw	49	;'1'
  6207  2997  346F               	retlw	111	;'o'
  6208  2998  3466               	retlw	102	;'f'
  6209  2999  3466               	retlw	102	;'f'
  6210  299A  3400               	retlw	0
  6211                           
  6212                           	psect	stringtext30
  6213  299B                     __pstringtext30:	
  6214  299B                     STR_75:	
  6215  299B  3474               	retlw	116	;'t'
  6216  299C  3469               	retlw	105	;'i'
  6217  299D  346D               	retlw	109	;'m'
  6218  299E  3465               	retlw	101	;'e'
  6219  299F  3468               	retlw	104	;'h'
  6220  29A0  3465               	retlw	101	;'e'
  6221  29A1  3461               	retlw	97	;'a'
  6222  29A2  3474               	retlw	116	;'t'
  6223  29A3  3465               	retlw	101	;'e'
  6224  29A4  3472               	retlw	114	;'r'
  6225  29A5  3400               	retlw	0
  6226                           
  6227                           	psect	stringtext31
  6228  29A6                     __pstringtext31:	
  6229  29A6                     STR_41:	
  6230  29A6  340A               	retlw	10
  6231  29A7  340A               	retlw	10
  6232  29A8  3473               	retlw	115	;'s'
  6233  29A9  3468               	retlw	104	;'h'
  6234  29AA  346F               	retlw	111	;'o'
  6235  29AB  3472               	retlw	114	;'r'
  6236  29AC  3474               	retlw	116	;'t'
  6237  29AD  3473               	retlw	115	;'s'
  6238  29AE  343A               	retlw	58	;':'
  6239  29AF  3420               	retlw	32	;' '
  6240  29B0  3400               	retlw	0
  6241                           
  6242                           	psect	stringtext32
  6243  29B1                     __pstringtext32:	
  6244  29B1                     STR_71:	
  6245  29B1  3468               	retlw	104	;'h'
  6246  29B2  3465               	retlw	101	;'e'
  6247  29B3  3461               	retlw	97	;'a'
  6248  29B4  3474               	retlw	116	;'t'
  6249  29B5  3465               	retlw	101	;'e'
  6250  29B6  3472               	retlw	114	;'r'
  6251  29B7  3432               	retlw	50	;'2'
  6252  29B8  346F               	retlw	111	;'o'
  6253  29B9  346E               	retlw	110	;'n'
  6254  29BA  3400               	retlw	0
  6255                           
  6256                           	psect	stringtext33
  6257  29BB                     __pstringtext33:	
  6258  29BB                     STR_82:	
  6259  29BB  3473               	retlw	115	;'s'
  6260  29BC  346F               	retlw	111	;'o'
  6261  29BD  3466               	retlw	102	;'f'
  6262  29BE  3474               	retlw	116	;'t'
  6263  29BF  3472               	retlw	114	;'r'
  6264  29C0  3465               	retlw	101	;'e'
  6265  29C1  3473               	retlw	115	;'s'
  6266  29C2  3465               	retlw	101	;'e'
  6267  29C3  3474               	retlw	116	;'t'
  6268  29C4  3400               	retlw	0
  6269                           
  6270                           	psect	stringtext34
  6271  29C5                     __pstringtext34:	
  6272  29C5                     STR_49:	
  6273  29C5  3446               	retlw	70	;'F'
  6274  29C6  3441               	retlw	65	;'A'
  6275  29C7  3449               	retlw	73	;'I'
  6276  29C8  344C               	retlw	76	;'L'
  6277  29C9  3445               	retlw	69	;'E'
  6278  29CA  3444               	retlw	68	;'D'
  6279  29CB  340A               	retlw	10
  6280  29CC  340A               	retlw	10
  6281  29CD  3400               	retlw	0
  6282                           
  6283                           	psect	stringtext35
  6284  29CE                     __pstringtext35:	
  6285  29CE                     STR_48:	
  6286  29CE  3470               	retlw	112	;'p'
  6287  29CF  3461               	retlw	97	;'a'
  6288  29D0  3473               	retlw	115	;'s'
  6289  29D1  3473               	retlw	115	;'s'
  6290  29D2  3465               	retlw	101	;'e'
  6291  29D3  3464               	retlw	100	;'d'
  6292  29D4  340A               	retlw	10
  6293  29D5  340A               	retlw	10
  6294  29D6  3400               	retlw	0
  6295                           
  6296                           	psect	stringtext36
  6297  29D7                     __pstringtext36:	
  6298  29D7                     STR_65:	
  6299  29D7  3464               	retlw	100	;'d'
  6300  29D8  3472               	retlw	114	;'r'
  6301  29D9  3476               	retlw	118	;'v'
  6302  29DA  3450               	retlw	80	;'P'
  6303  29DB  3465               	retlw	101	;'e'
  6304  29DC  3461               	retlw	97	;'a'
  6305  29DD  346B               	retlw	107	;'k'
  6306  29DE  3400               	retlw	0
  6307                           
  6308                           	psect	stringtext37
  6309  29DF                     __pstringtext37:	
  6310  29DF                     STR_66:	
  6311  29DF  3464               	retlw	100	;'d'
  6312  29E0  3472               	retlw	114	;'r'
  6313  29E1  3476               	retlw	118	;'v'
  6314  29E2  3447               	retlw	71	;'G'
  6315  29E3  3461               	retlw	97	;'a'
  6316  29E4  3469               	retlw	105	;'i'
  6317  29E5  346E               	retlw	110	;'n'
  6318  29E6  3400               	retlw	0
  6319                           
  6320                           	psect	stringtext38
  6321  29E7                     __pstringtext38:	
  6322  29E7                     STR_72:	
  6323  29E7  346C               	retlw	108	;'l'
  6324  29E8  3465               	retlw	101	;'e'
  6325  29E9  3464               	retlw	100	;'d'
  6326  29EA  3467               	retlw	103	;'g'
  6327  29EB  3461               	retlw	97	;'a'
  6328  29EC  3469               	retlw	105	;'i'
  6329  29ED  346E               	retlw	110	;'n'
  6330  29EE  3400               	retlw	0
  6331                           
  6332                           	psect	stringtext39
  6333  29EF                     __pstringtext39:	
  6334  29EF                     STR_78:	
  6335  29EF  346D               	retlw	109	;'m'
  6336  29F0  3473               	retlw	115	;'s'
  6337  29F1  3474               	retlw	116	;'t'
  6338  29F2  3461               	retlw	97	;'a'
  6339  29F3  3474               	retlw	116	;'t'
  6340  29F4  3475               	retlw	117	;'u'
  6341  29F5  3473               	retlw	115	;'s'
  6342  29F6  3400               	retlw	0
  6343                           
  6344                           	psect	stringtext40
  6345  29F7                     __pstringtext40:	
  6346  29F7                     STR_39:	
  6347  29F7  3446               	retlw	70	;'F'
  6348  29F8  3441               	retlw	65	;'A'
  6349  29F9  3449               	retlw	73	;'I'
  6350  29FA  344C               	retlw	76	;'L'
  6351  29FB  3445               	retlw	69	;'E'
  6352  29FC  3444               	retlw	68	;'D'
  6353  29FD  340A               	retlw	10
  6354  29FE  3400               	retlw	0
  6355                           
  6356                           	psect	stringtext41
  6357  29FF                     __pstringtext41:	
  6358  29FF                     STR_38:	
  6359  29FF  3470               	retlw	112	;'p'
  6360  2A00  3461               	retlw	97	;'a'
  6361  2A01  3473               	retlw	115	;'s'
  6362  2A02  3473               	retlw	115	;'s'
  6363  2A03  3465               	retlw	101	;'e'
  6364  2A04  3464               	retlw	100	;'d'
  6365  2A05  340A               	retlw	10
  6366  2A06  3400               	retlw	0
  6367                           
  6368                           	psect	stringtext42
  6369  2A07                     __pstringtext42:	
  6370  2A07                     STR_40:	
  6371  2A07  346F               	retlw	111	;'o'
  6372  2A08  3470               	retlw	112	;'p'
  6373  2A09  3465               	retlw	101	;'e'
  6374  2A0A  346E               	retlw	110	;'n'
  6375  2A0B  3473               	retlw	115	;'s'
  6376  2A0C  343A               	retlw	58	;':'
  6377  2A0D  3420               	retlw	32	;' '
  6378  2A0E  3400               	retlw	0
  6379                           
  6380                           	psect	stringtext43
  6381  2A0F                     __pstringtext43:	
  6382  2A0F                     STR_79:	
  6383  2A0F  3464               	retlw	100	;'d'
  6384  2A10  346F               	retlw	111	;'o'
  6385  2A11  346D               	retlw	109	;'m'
  6386  2A12  346F               	retlw	111	;'o'
  6387  2A13  3476               	retlw	118	;'v'
  6388  2A14  3465               	retlw	101	;'e'
  6389  2A15  3400               	retlw	0
  6390                           
  6391                           	psect	stringtext44
  6392  2A16                     __pstringtext44:	
  6393  2A16                     STR_73:	
  6394  2A16  346C               	retlw	108	;'l'
  6395  2A17  3465               	retlw	101	;'e'
  6396  2A18  3464               	retlw	100	;'d'
  6397  2A19  3470               	retlw	112	;'p'
  6398  2A1A  3477               	retlw	119	;'w'
  6399  2A1B  3472               	retlw	114	;'r'
  6400  2A1C  3400               	retlw	0
  6401                           
  6402                           	psect	stringtext45
  6403  2A1D                     __pstringtext45:	
  6404  2A1D                     STR_76:	
  6405  2A1D  3467               	retlw	103	;'g'
  6406  2A1E  3465               	retlw	101	;'e'
  6407  2A1F  3474               	retlw	116	;'t'
  6408  2A20  3441               	retlw	65	;'A'
  6409  2A21  3400               	retlw	0
  6410                           
  6411                           	psect	stringtext46
  6412  2A22                     __pstringtext46:	
  6413  2A22                     STR_62:	
  6414  2A22  3473               	retlw	115	;'s'
  6415  2A23  3465               	retlw	101	;'e'
  6416  2A24  3474               	retlw	116	;'t'
  6417  2A25  3441               	retlw	65	;'A'
  6418  2A26  3400               	retlw	0
  6419                           
  6420                           	psect	stringtext47
  6421  2A27                     __pstringtext47:	
  6422  2A27                     STR_77:	
  6423  2A27  3467               	retlw	103	;'g'
  6424  2A28  3465               	retlw	101	;'e'
  6425  2A29  3474               	retlw	116	;'t'
  6426  2A2A  344D               	retlw	77	;'M'
  6427  2A2B  3400               	retlw	0
  6428                           
  6429                           	psect	stringtext48
  6430  2A2C                     __pstringtext48:	
  6431  2A2C                     STR_63:	
  6432  2A2C  3473               	retlw	115	;'s'
  6433  2A2D  3465               	retlw	101	;'e'
  6434  2A2E  3474               	retlw	116	;'t'
  6435  2A2F  344D               	retlw	77	;'M'
  6436  2A30  3400               	retlw	0
  6437                           
  6438                           	psect	stringtext49
  6439  2A31                     __pstringtext49:	
  6440  2A31                     STR_81:	
  6441  2A31  3470               	retlw	112	;'p'
  6442  2A32  3469               	retlw	105	;'i'
  6443  2A33  346E               	retlw	110	;'n'
  6444  2A34  3467               	retlw	103	;'g'
  6445  2A35  3400               	retlw	0
  6446                           
  6447                           	psect	stringtext50
  6448  2A36                     __pstringtext50:	
  6449  2A36                     STR_80:	
  6450  2A36  3463               	retlw	99	;'c'
  6451  2A37  346F               	retlw	111	;'o'
  6452  2A38  346D               	retlw	109	;'m'
  6453  2A39  346D               	retlw	109	;'m'
  6454  2A3A  3400               	retlw	0
  6455                           
  6456                           	psect	stringtext51
  6457  2A3B                     __pstringtext51:	
  6458  2A3B                     STR_58:	
  6459  2A3B  3472               	retlw	114	;'r'
  6460  2A3C  3465               	retlw	101	;'e'
  6461  2A3D  346C               	retlw	108	;'l'
  6462  2A3E  3400               	retlw	0
  6463                           
  6464                           	psect	stringtext52
  6465  2A3F                     __pstringtext52:	
  6466  2A3F                     STR_59:	
  6467  2A3F  3461               	retlw	97	;'a'
  6468  2A40  3462               	retlw	98	;'b'
  6469  2A41  3473               	retlw	115	;'s'
  6470  2A42  3400               	retlw	0
  6471                           
  6472                           	psect	stringtext53
  6473  2A43                     __pstringtext53:	
  6474  2A43                     STR_60:	
  6475  2A43  3470               	retlw	112	;'p'
  6476  2A44  346F               	retlw	111	;'o'
  6477  2A45  3473               	retlw	115	;'s'
  6478  2A46  3400               	retlw	0
  6479                           
  6480                           	psect	stringtext54
  6481  2A47                     __pstringtext54:	
  6482  2A47                     STR_12:	
  6483  2A47  3425               	retlw	37	;'%'
  6484  2A48  3464               	retlw	100	;'d'
  6485  2A49  340A               	retlw	10
  6486  2A4A  3400               	retlw	0
  6487                           
  6488                           	psect	stringtext55
  6489  2A4B                     __pstringtext55:	
  6490  2A4B                     STR_1:	
  6491  2A4B  3425               	retlw	37	;'%'
  6492  2A4C  3464               	retlw	100	;'d'
  6493  2A4D  3420               	retlw	32	;' '
  6494  2A4E  3400               	retlw	0
  6495                           
  6496                           	psect	stringtext56
  6497  2A55                     __pstringtext56:	
  6498  2A55                     STR_7:	
  6499  2A55  3441               	retlw	65	;'A'
  6500  2A56  340A               	retlw	10
  6501  2A57  3400               	retlw	0
  6502                           
  6503                           	psect	stringtext57
  6504  2A58                     __pstringtext57:	
  6505  2A58                     STR_14:	
  6506  2A58  3445               	retlw	69	;'E'
  6507  2A59  340A               	retlw	10
  6508  2A5A  3400               	retlw	0
  6509                           
  6510                           	psect	stringtext58
  6511  2A5B                     __pstringtext58:	
  6512  2A5B                     STR_35:	
  6513  2A5B  344E               	retlw	78	;'N'
  6514  2A5C  340A               	retlw	10
  6515  2A5D  3400               	retlw	0
  6516                           
  6517                           	psect	stringtext59
  6518  2A5E                     __pstringtext59:	
  6519  2A5E                     STR_33:	
  6520  2A5E  3452               	retlw	82	;'R'
  6521  2A5F  340A               	retlw	10
  6522  2A60  3400               	retlw	0
  6523                           
  6524                           	psect	stringtext60
  6525  2A63                     __pstringtext60:	
  6526  2A63                     STR_64:	
  6527  2A63  347A               	retlw	122	;'z'
  6528  2A64  3400               	retlw	0
  6529                           
  6530                           	psect	stringtext61
  6531  0000                     __pstringtext61:	
  6532  2863                     
  6533                           ; #config settings
  6534  0000                     
  6535                           	psect	cinit
  6536  0052                     start_initialization:	
  6537  0052                     __initialization:		;BIGRAM
  6538                           
  6539                           ; Initialize objects allocated to BANK0
  6540  0052  30CC               	movlw	low __pidataBANK0
  6541  0053  0084               	movwf	4
  6542  0054  3093               	movlw	(high __pidataBANK0)| (0+128)
  6543  0055  0085               	movwf	5
  6544  0056  305A               	movlw	low __pdataBANK0
  6545  0057  0086               	movwf	6
  6546  0058  3000               	movlw	high __pdataBANK0
  6547  0059  0087               	movwf	7
  6548  005A  3000               	movlw	0
  6549  005B  00FF               	movwf	btemp+1
  6550  005C  3004               	movlw	4
  6551  005D  31A2  22CD  3180   	fcall	init_ram
  6552                           
  6553                           ; Initialize objects allocated to BANK1
  6554  0060  3079               	movlw	low __pidataBANK1
  6555  0061  0084               	movwf	4
  6556  0062  30A1               	movlw	(high __pidataBANK1)| (0+128)
  6557  0063  0085               	movwf	5
  6558  0064  30EB               	movlw	low __pdataBANK1
  6559  0065  0086               	movwf	6
  6560  0066  3000               	movlw	high __pdataBANK1
  6561  0067  0087               	movwf	7
  6562  0068  3000               	movlw	0
  6563  0069  00FF               	movwf	btemp+1
  6564  006A  3004               	movlw	4
  6565  006B  31A2  22CD  3180   	fcall	init_ram
  6566                           
  6567                           ; Initialize objects allocated to BANK2
  6568  006E  3017               	movlw	low __pidataBANK2
  6569  006F  0084               	movwf	4
  6570  0070  30A2               	movlw	(high __pidataBANK2)| (0+128)
  6571  0071  0085               	movwf	5
  6572  0072  3068               	movlw	low __pdataBANK2
  6573  0073  0086               	movwf	6
  6574  0074  3001               	movlw	high __pdataBANK2
  6575  0075  0087               	movwf	7
  6576  0076  3000               	movlw	0
  6577  0077  00FF               	movwf	btemp+1
  6578  0078  3008               	movlw	8
  6579  0079  31A2  22CD  3180   	fcall	init_ram
  6580                           
  6581                           ; Initialize objects allocated to BANK4
  6582  007C  3014               	movlw	low __pidataBANK4
  6583  007D  0084               	movwf	4
  6584  007E  30A5               	movlw	(high __pidataBANK4)| (0+128)
  6585  007F  0085               	movwf	5
  6586  0080  3020               	movlw	low __pdataBANK4
  6587  0081  0086               	movwf	6
  6588  0082  3002               	movlw	high __pdataBANK4
  6589  0083  0087               	movwf	7
  6590  0084  3000               	movlw	0
  6591  0085  00FF               	movwf	btemp+1
  6592  0086  3020               	movlw	32
  6593  0087  31A2  22CD  3180   	fcall	init_ram
  6594                           
  6595                           ; Clear objects allocated to BIGRAM
  6596  008A  3090               	movlw	low (0+10128)
  6597  008B  0084               	movwf	4
  6598  008C  3027               	movlw	high (0+10128)
  6599  008D  0085               	movwf	5
  6600  008E  3060               	movlw	96
  6601  008F  00FE               	movwf	btemp
  6602  0090  3000               	movlw	0
  6603  0091  00FF               	movwf	btemp+1
  6604  0092  31A2  22C1  3180   	fcall	clear_ram0
  6605                           
  6606                           ; Clear objects allocated to COMMON
  6607  0095  01FD               	clrf	__pbssCOMMON& (0+127)
  6608                           
  6609                           ; Clear objects allocated to BANK0
  6610  0096  304E               	movlw	low __pbssBANK0
  6611  0097  0084               	movwf	4
  6612  0098  3000               	movlw	high __pbssBANK0
  6613  0099  0085               	movwf	5
  6614  009A  300C               	movlw	12
  6615  009B  00FE               	movwf	btemp
  6616  009C  3000               	movlw	0
  6617  009D  00FF               	movwf	btemp+1
  6618  009E  31A2  22C1  3180   	fcall	clear_ram0
  6619                           
  6620                           ; Clear objects allocated to BANK1
  6621  00A1  30DF               	movlw	low __pbssBANK1
  6622  00A2  0084               	movwf	4
  6623  00A3  3000               	movlw	high __pbssBANK1
  6624  00A4  0085               	movwf	5
  6625  00A5  300C               	movlw	12
  6626  00A6  00FE               	movwf	btemp
  6627  00A7  3000               	movlw	0
  6628  00A8  00FF               	movwf	btemp+1
  6629  00A9  31A2  22C1  3180   	fcall	clear_ram0
  6630                           
  6631                           ; Clear objects allocated to BANK2
  6632  00AC  3020               	movlw	low __pbssBANK2
  6633  00AD  0084               	movwf	4
  6634  00AE  3001               	movlw	high __pbssBANK2
  6635  00AF  0085               	movwf	5
  6636  00B0  3048               	movlw	72
  6637  00B1  00FE               	movwf	btemp
  6638  00B2  3000               	movlw	0
  6639  00B3  00FF               	movwf	btemp+1
  6640  00B4  31A2  22C1  3180   	fcall	clear_ram0
  6641                           
  6642                           ; Clear objects allocated to BANK3
  6643  00B7  30A0               	movlw	low __pbssBANK3
  6644  00B8  0084               	movwf	4
  6645  00B9  3001               	movlw	high __pbssBANK3
  6646  00BA  0085               	movwf	5
  6647  00BB  3041               	movlw	65
  6648  00BC  00FE               	movwf	btemp
  6649  00BD  3000               	movlw	0
  6650  00BE  00FF               	movwf	btemp+1
  6651  00BF  31A2  22C1         	fcall	clear_ram0
  6652  00C1                     end_of_initialization:	
  6653                           ;End of C runtime variable initialization code
  6654                           
  6655  00C1                     __end_of__initialization:	
  6656  00C1  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6657  00C2  0020               	movlb	0
  6658  00C3  319F  2F20         	ljmp	_main	;jump to C main() function
  6659                           
  6660                           	psect	bssCOMMON
  6661  007D                     __pbssCOMMON:	
  6662  007D                     _eusartTxHead:	
  6663  007D                     	ds	1
  6664                           
  6665                           	psect	bssBANK0
  6666  004E                     __pbssBANK0:	
  6667  004E                     _moveVector_downs:	
  6668  004E                     	ds	4
  6669  0052                     _readIdx:	
  6670  0052                     	ds	2
  6671  0054                     strtok@sp:	
  6672  0054                     	ds	1
  6673  0055                     _motionType:	
  6674  0055                     	ds	1
  6675  0056                     _eusartRxCount:	
  6676  0056                     	ds	1
  6677  0057                     _eusartRxTail:	
  6678  0057                     	ds	1
  6679  0058                     _eusartRxHead:	
  6680  0058                     	ds	1
  6681  0059                     _eusartTxTail:	
  6682  0059                     	ds	1
  6683                           
  6684                           	psect	dataBANK0
  6685  005A                     __pdataBANK0:	
  6686  005A                     _demoLong:	
  6687  005A                     	ds	4
  6688                           
  6689                           	psect	bssBANK1
  6690  00DF                     __pbssBANK1:	
  6691  00DF                     _moveMask:	
  6692  00DF                     	ds	4
  6693  00E3                     _activeMask:	
  6694  00E3                     	ds	4
  6695  00E7                     _moveVector_ups:	
  6696  00E7                     	ds	4
  6697                           
  6698                           	psect	dataBANK1
  6699  00EB                     __pdataBANK1:	
  6700  00EB                     _piezo_on_time_ms:	
  6701  00EB                     	ds	2
  6702  00ED                     _heater_pre_time_ms:	
  6703  00ED                     	ds	2
  6704                           
  6705                           	psect	bssBANK2
  6706  0120                     __pbssBANK2:	
  6707  0120                     _i2c_status:	
  6708  0120                     	ds	30
  6709  013E                     _absCommand:	
  6710  013E                     	ds	4
  6711  0142                     _remainingSteps:	
  6712  0142                     	ds	4
  6713  0146                     _LED_configReg_bot:	
  6714  0146                     	ds	4
  6715  014A                     _LED_configReg_top:	
  6716  014A                     	ds	4
  6717  014E                     _second_bottom:	
  6718  014E                     	ds	4
  6719  0152                     _first_top:	
  6720  0152                     	ds	4
  6721  0156                     _first_bottom:	
  6722  0156                     	ds	4
  6723  015A                     _second_top:	
  6724  015A                     	ds	4
  6725  015E                     _errno:	
  6726  015E                     	ds	2
  6727  0160                     _cmdRead:	
  6728  0160                     	ds	2
  6729  0162                     _errorOut:	
  6730  0162                     	ds	2
  6731  0164                     _i2c1_driver_i2cISR:	
  6732  0164                     	ds	2
  6733  0166                     _i2c1_driver_busCollisionISR:	
  6734  0166                     	ds	2
  6735                           
  6736                           	psect	dataBANK2
  6737  0168                     __pdataBANK2:	
  6738  0168                     _inter_step_interval_ms:	
  6739  0168                     	ds	4
  6740  016C                     _heater_post_time_ms:	
  6741  016C                     	ds	2
  6742  016E                     _drv_peak_val:	
  6743  016E                     	ds	2
  6744                           
  6745                           	psect	bssBANK3
  6746  01A0                     __pbssBANK3:	
  6747  01A0                     _eusartRxBuffer:	
  6748  01A0                     	ds	8
  6749  01A8                     _eusartTxBuffer:	
  6750  01A8                     	ds	8
  6751  01B0                     _demoHeaterToggle_bot:	
  6752  01B0                     	ds	4
  6753  01B4                     _demoHeaterToggle_top:	
  6754  01B4                     	ds	4
  6755  01B8                     _cmd_struct:	
  6756  01B8                     	ds	21
  6757  01CD                     _readdata:	
  6758  01CD                     	ds	20
  6759                           
  6760                           	psect	dataBANK4
  6761  0220                     __pdataBANK4:	
  6762  0220                     _fsmStateTable:	
  6763  0220                     	ds	32
  6764                           
  6765                           	psect	inittext
  6766  22CD                     init_ram:	
  6767  22CD  00FE               	movwf	126
  6768  22CE                     initloop:	
  6769  22CE  0012               	moviw fsr0++
  6770  22CF  001E               	movwi fsr1++
  6771  22D0  3001               	movlw	1
  6772  22D1  02FE               	subwf	126,f
  6773  22D2  3000               	movlw	0
  6774  22D3  3BFF               	subwfb	127,f
  6775  22D4  087F               	movf	127,w
  6776  22D5  047E               	iorwf	126,w
  6777  22D6  1903               	btfsc	3,2
  6778  22D7  3400               	retlw	0
  6779  22D8  2ACE               	goto	initloop
  6780                           
  6781                           	psect	clrtext
  6782  22C1                     clear_ram0:	
  6783                           ;	Called with FSR0 containing the base address, and
  6784                           ;	btemp/btemp+1 has the size to clear
  6785                           
  6786  22C1  0064               	clrwdt	;clear the watchdog before getting into this loop
  6787  22C2                     clrloop0:	
  6788  22C2  0180               	clrf	0	;clear RAM location pointed to by FSR
  6789  22C3  3101               	addfsr 0,1
  6790  22C4  3001               	movlw	1
  6791  22C5  02FE               	subwf	126,f
  6792  22C6  3000               	movlw	0
  6793  22C7  3BFF               	subwfb	127,f
  6794  22C8  087F               	movf	127,w
  6795  22C9  047E               	iorwf	126,w
  6796  22CA  1903               	btfsc	3,2
  6797  22CB  3400               	retlw	0	;all done for this memory range, return
  6798  22CC  2AC2               	goto	clrloop0	;have we reached the end yet?
  6799                           
  6800                           	psect	cstackBANK4
  6801  0240                     __pcstackBANK4:	
  6802  0240                     ??_doAbsMove:	
  6803                           
  6804                           ; 1 bytes @ 0x0
  6805  0240                     	ds	28
  6806                           
  6807                           	psect	cstackBANK1
  6808  00A0                     __pcstackBANK1:	
  6809  00A0                     ?_printf:	
  6810  00A0                     ___ftmul@exp:	
  6811                           ; 2 bytes @ 0x0
  6812                           
  6813  00A0                     printf@f:	
  6814                           ; 1 bytes @ 0x0
  6815                           
  6816  00A0                     LEDsPwr@pwrAll:	
  6817                           ; 2 bytes @ 0x0
  6818                           
  6819  00A0                     LED_setBrightnessRange@LED_configReg:	
  6820                           ; 4 bytes @ 0x0
  6821                           
  6822                           
  6823                           ; 4 bytes @ 0x0
  6824  00A0                     	ds	1
  6825  00A1                     ___ftmul@f3_as_product:	
  6826                           
  6827                           ; 3 bytes @ 0x1
  6828  00A1                     	ds	3
  6829  00A4                     ___ftmul@cntr:	
  6830                           
  6831                           ; 1 bytes @ 0x4
  6832  00A4                     	ds	1
  6833  00A5                     ___ftmul@sign:	
  6834                           
  6835                           ; 1 bytes @ 0x5
  6836  00A5                     	ds	1
  6837  00A6                     ??_printf:	
  6838  00A6                     ?___ftadd:	
  6839                           ; 1 bytes @ 0x6
  6840                           
  6841  00A6                     ___ftadd@f1:	
  6842                           ; 3 bytes @ 0x6
  6843                           
  6844                           
  6845                           ; 3 bytes @ 0x6
  6846  00A6                     	ds	3
  6847  00A9                     ___ftadd@f2:	
  6848                           
  6849                           ; 3 bytes @ 0x9
  6850  00A9                     	ds	3
  6851  00AC                     ___ftadd@sign:	
  6852  00AC                     printf@prec:	
  6853                           ; 1 bytes @ 0xC
  6854                           
  6855                           
  6856                           ; 2 bytes @ 0xC
  6857  00AC                     	ds	1
  6858  00AD                     ___ftadd@exp2:	
  6859                           
  6860                           ; 1 bytes @ 0xD
  6861  00AD                     	ds	1
  6862  00AE                     ___ftadd@exp1:	
  6863  00AE                     printf@val:	
  6864                           ; 1 bytes @ 0xE
  6865                           
  6866                           
  6867                           ; 4 bytes @ 0xE
  6868  00AE                     	ds	1
  6869  00AF                     ?___fttol:	
  6870  00AF                     ___fttol@f1:	
  6871                           ; 4 bytes @ 0xF
  6872                           
  6873                           
  6874                           ; 3 bytes @ 0xF
  6875  00AF                     	ds	3
  6876  00B2                     printf@flag:	
  6877                           
  6878                           ; 1 bytes @ 0x12
  6879  00B2                     	ds	1
  6880  00B3                     ??___fttol:	
  6881  00B3                     printf@ap:	
  6882                           ; 1 bytes @ 0x13
  6883                           
  6884                           
  6885                           ; 1 bytes @ 0x13
  6886  00B3                     	ds	1
  6887  00B4                     printf@c:	
  6888                           
  6889                           ; 1 bytes @ 0x14
  6890  00B4                     	ds	1
  6891  00B5                     ??_drv_reset:	
  6892  00B5                     ?_LED_test_openshort:	
  6893                           ; 1 bytes @ 0x15
  6894                           
  6895  00B5                     ?_drv_read:	
  6896                           ; 1 bytes @ 0x15
  6897                           
  6898  00B5                     ?_startRelMove:	
  6899                           ; 2 bytes @ 0x15
  6900                           
  6901  00B5                     ?_startAbsMove:	
  6902                           ; 2 bytes @ 0x15
  6903                           
  6904  00B5                     ?_stop:	
  6905                           ; 2 bytes @ 0x15
  6906                           
  6907  00B5                     ?_zeroPosition:	
  6908                           ; 2 bytes @ 0x15
  6909                           
  6910  00B5                     ?_getPosition:	
  6911                           ; 2 bytes @ 0x15
  6912                           
  6913  00B5                     ?_setDrvPeak:	
  6914                           ; 2 bytes @ 0x15
  6915                           
  6916  00B5                     ?_setDrvGain:	
  6917                           ; 2 bytes @ 0x15
  6918                           
  6919  00B5                     ?_setHeaterPreTime:	
  6920                           ; 2 bytes @ 0x15
  6921                           
  6922  00B5                     ?_setHeaterPostTime:	
  6923                           ; 2 bytes @ 0x15
  6924                           
  6925  00B5                     ?_setLEDBrightnessRange:	
  6926                           ; 2 bytes @ 0x15
  6927                           
  6928  00B5                     ?_setLEDPwr:	
  6929                           ; 2 bytes @ 0x15
  6930                           
  6931  00B5                     ?_setHeaterToggle:	
  6932                           ; 2 bytes @ 0x15
  6933                           
  6934  00B5                     ?_timedActiveHeatOn:	
  6935                           ; 2 bytes @ 0x15
  6936                           
  6937  00B5                     ?_setActive:	
  6938                           ; 2 bytes @ 0x15
  6939                           
  6940  00B5                     ?_setMoveMask:	
  6941                           ; 2 bytes @ 0x15
  6942                           
  6943  00B5                     ?_getActive:	
  6944                           ; 2 bytes @ 0x15
  6945                           
  6946  00B5                     ?_getMoveMask:	
  6947                           ; 2 bytes @ 0x15
  6948                           
  6949  00B5                     ?_getMotionStatus:	
  6950                           ; 2 bytes @ 0x15
  6951                           
  6952  00B5                     ?_LED_getData:	
  6953                           ; 2 bytes @ 0x15
  6954                           
  6955  00B5                     LED_test_openshort@type:	
  6956                           ; 4 bytes @ 0x15
  6957                           
  6958  00B5                     LED_getData@topOrBottom:	
  6959                           ; 2 bytes @ 0x15
  6960                           
  6961  00B5                     startRelMove@steps:	
  6962                           ; 2 bytes @ 0x15
  6963                           
  6964  00B5                     startAbsMove@steps:	
  6965                           ; 2 bytes @ 0x15
  6966                           
  6967  00B5                     getPosition@a:	
  6968                           ; 2 bytes @ 0x15
  6969                           
  6970  00B5                     setDrvPeak@pk:	
  6971                           ; 2 bytes @ 0x15
  6972                           
  6973  00B5                     setDrvGain@gain:	
  6974                           ; 2 bytes @ 0x15
  6975                           
  6976  00B5                     setHeaterPreTime@t:	
  6977                           ; 2 bytes @ 0x15
  6978                           
  6979  00B5                     setHeaterPostTime@t:	
  6980                           ; 2 bytes @ 0x15
  6981                           
  6982  00B5                     setLEDBrightnessRange@r:	
  6983                           ; 2 bytes @ 0x15
  6984                           
  6985  00B5                     setLEDPwr@pwr:	
  6986                           ; 2 bytes @ 0x15
  6987                           
  6988  00B5                     setHeaterToggle@num:	
  6989                           ; 2 bytes @ 0x15
  6990                           
  6991  00B5                     setActive@probeNum:	
  6992                           ; 2 bytes @ 0x15
  6993                           
  6994  00B5                     setMoveMask@probeNum:	
  6995                           ; 2 bytes @ 0x15
  6996                           
  6997  00B5                     timedActiveHeatOn@onTime:	
  6998                           ; 2 bytes @ 0x15
  6999                           
  7000                           
  7001                           ; 4 bytes @ 0x15
  7002  00B5                     	ds	1
  7003  00B6                     ?_drv_init:	
  7004  00B6                     drv_init@output_gain:	
  7005                           ; 1 bytes @ 0x16
  7006                           
  7007                           
  7008                           ; 2 bytes @ 0x16
  7009  00B6                     	ds	1
  7010  00B7                     ??_zeroPosition:	
  7011  00B7                     ??_setDrvGain:	
  7012                           ; 1 bytes @ 0x17
  7013                           
  7014  00B7                     fifo_check@reply:	
  7015                           ; 1 bytes @ 0x17
  7016                           
  7017  00B7                     ___fttol@sign1:	
  7018                           ; 1 bytes @ 0x17
  7019                           
  7020  00B7                     LED_test_openshort@topOrBottom:	
  7021                           ; 1 bytes @ 0x17
  7022                           
  7023  00B7                     setLEDBrightnessRange@tOB:	
  7024                           ; 2 bytes @ 0x17
  7025                           
  7026  00B7                     setLEDPwr@topOrBottom:	
  7027                           ; 2 bytes @ 0x17
  7028                           
  7029  00B7                     setHeaterToggle@topOrB:	
  7030                           ; 2 bytes @ 0x17
  7031                           
  7032  00B7                     setActive@onOff:	
  7033                           ; 2 bytes @ 0x17
  7034                           
  7035  00B7                     setMoveMask@onOff:	
  7036                           ; 2 bytes @ 0x17
  7037                           
  7038  00B7                     getActive@i:	
  7039                           ; 2 bytes @ 0x17
  7040                           
  7041  00B7                     getMoveMask@i:	
  7042                           ; 2 bytes @ 0x17
  7043                           
  7044                           
  7045                           ; 2 bytes @ 0x17
  7046  00B7                     	ds	1
  7047  00B8                     ?_drv_write_DC:	
  7048  00B8                     setDrvGain@setGain:	
  7049                           ; 1 bytes @ 0x18
  7050                           
  7051  00B8                     drv_init@idle_timeout:	
  7052                           ; 2 bytes @ 0x18
  7053                           
  7054  00B8                     drv_write_DC@val:	
  7055                           ; 2 bytes @ 0x18
  7056                           
  7057  00B8                     ___fttol@lval:	
  7058                           ; 2 bytes @ 0x18
  7059                           
  7060                           
  7061                           ; 4 bytes @ 0x18
  7062  00B8                     	ds	1
  7063  00B9                     ??_LED_getData:	
  7064  00B9                     ??_LED_test_openshort:	
  7065                           ; 1 bytes @ 0x19
  7066                           
  7067  00B9                     ??_setHeaterToggle:	
  7068                           ; 1 bytes @ 0x19
  7069                           
  7070  00B9                     ??_setActive:	
  7071                           ; 1 bytes @ 0x19
  7072                           
  7073  00B9                     timedActiveHeatOn@topOrBorBoth:	
  7074                           ; 1 bytes @ 0x19
  7075                           
  7076                           
  7077                           ; 2 bytes @ 0x19
  7078  00B9                     	ds	1
  7079  00BA                     ??_drv_init:	
  7080  00BA                     LED_test_openshort@j:	
  7081                           ; 1 bytes @ 0x1A
  7082                           
  7083  00BA                     drv_write_DC@duration_ms:	
  7084                           ; 2 bytes @ 0x1A
  7085                           
  7086                           
  7087                           ; 2 bytes @ 0x1A
  7088  00BA                     	ds	1
  7089  00BB                     ??_timedActiveHeatOn:	
  7090                           
  7091                           ; 1 bytes @ 0x1B
  7092  00BB                     	ds	1
  7093  00BC                     ??_drv_write_DC:	
  7094  00BC                     ___fttol@exp1:	
  7095                           ; 1 bytes @ 0x1C
  7096                           
  7097                           
  7098                           ; 1 bytes @ 0x1C
  7099  00BC                     	ds	1
  7100  00BD                     ?_setDrvPiezoOnTime:	
  7101  00BD                     ?_setH1OffTime:	
  7102                           ; 2 bytes @ 0x1D
  7103                           
  7104  00BD                     ?_setH2OnTime:	
  7105                           ; 2 bytes @ 0x1D
  7106                           
  7107  00BD                     setDrvPiezoOnTime@t:	
  7108                           ; 2 bytes @ 0x1D
  7109                           
  7110  00BD                     setH1OffTime@t:	
  7111                           ; 2 bytes @ 0x1D
  7112                           
  7113  00BD                     setH2OnTime@t:	
  7114                           ; 2 bytes @ 0x1D
  7115                           
  7116  00BD                     drv_write_DC@i:	
  7117                           ; 2 bytes @ 0x1D
  7118                           
  7119                           
  7120                           ; 2 bytes @ 0x1D
  7121  00BD                     	ds	2
  7122  00BF                     ??_setDrvPiezoOnTime:	
  7123  00BF                     ?_doMove:	
  7124                           ; 1 bytes @ 0x1F
  7125                           
  7126                           
  7127                           ; 2 bytes @ 0x1F
  7128  00BF                     	ds	1
  7129  00C0                     timedActiveHeatOn@t:	
  7130  00C0                     LED_getData@readData:	
  7131                           ; 2 bytes @ 0x20
  7132                           
  7133                           
  7134                           ; 4 bytes @ 0x20
  7135  00C0                     	ds	1
  7136  00C1                     ??_doMove:	
  7137                           
  7138                           ; 1 bytes @ 0x21
  7139  00C1                     	ds	3
  7140  00C4                     LED_getData@j:	
  7141                           
  7142                           ; 2 bytes @ 0x24
  7143  00C4                     	ds	2
  7144  00C6                     ?_LED_readConfig:	
  7145  00C6                     LED_readConfig@topOrBottom:	
  7146                           ; 4 bytes @ 0x26
  7147                           
  7148  00C6                     doMove@t:	
  7149                           ; 2 bytes @ 0x26
  7150                           
  7151                           
  7152                           ; 2 bytes @ 0x26
  7153  00C6                     	ds	2
  7154  00C8                     doMove@t_1568:	
  7155                           
  7156                           ; 2 bytes @ 0x28
  7157  00C8                     	ds	2
  7158  00CA                     ?_LED_testComm:	
  7159  00CA                     LED_testComm@topOrBottom:	
  7160                           ; 2 bytes @ 0x2A
  7161                           
  7162  00CA                     doMove@t_1569:	
  7163                           ; 2 bytes @ 0x2A
  7164                           
  7165                           
  7166                           ; 2 bytes @ 0x2A
  7167  00CA                     	ds	2
  7168  00CC                     ??_doRelMove:	
  7169  00CC                     ??_LED_testComm:	
  7170                           ; 1 bytes @ 0x2C
  7171                           
  7172  00CC                     doAbsMove@allThere:	
  7173                           ; 1 bytes @ 0x2C
  7174                           
  7175                           
  7176                           ; 2 bytes @ 0x2C
  7177  00CC                     	ds	2
  7178  00CE                     LED_testComm@readResult:	
  7179  00CE                     doAbsMove@i:	
  7180                           ; 2 bytes @ 0x2E
  7181                           
  7182                           
  7183                           ; 2 bytes @ 0x2E
  7184  00CE                     	ds	2
  7185  00D0                     doAbsMove@i_1586:	
  7186  00D0                     LED_testComm@oldConfigReg:	
  7187                           ; 2 bytes @ 0x30
  7188                           
  7189                           
  7190                           ; 4 bytes @ 0x30
  7191  00D0                     	ds	2
  7192  00D2                     doAbsMove@i_1584:	
  7193                           
  7194                           ; 2 bytes @ 0x32
  7195  00D2                     	ds	2
  7196  00D4                     ?_commCheck:	
  7197                           
  7198                           ; 2 bytes @ 0x34
  7199  00D4                     	ds	2
  7200  00D6                     ??_commCheck:	
  7201                           
  7202                           ; 1 bytes @ 0x36
  7203  00D6                     	ds	1
  7204  00D7                     execCmd@s:	
  7205                           
  7206                           ; 1 bytes @ 0x37
  7207  00D7                     	ds	5
  7208  00DC                     doRelMove@j:	
  7209                           
  7210                           ; 2 bytes @ 0x3C
  7211  00DC                     	ds	2
  7212  00DE                     ??_main:	
  7213                           
  7214                           ; 1 bytes @ 0x3E
  7215  00DE                     	ds	1
  7216                           
  7217                           	psect	cstackCOMMON
  7218  0070                     __pcstackCOMMON:	
  7219  0070                     ?_fifo_check:	
  7220  0070                     ?_isdigit:	
  7221                           ; 1 bit 
  7222                           
  7223  0070                     ?_mssp1_IRQisEnabled:	
  7224                           ; 1 bit 
  7225                           
  7226  0070                     ?_i2c1_driver_open:	
  7227                           ; 1 bit 
  7228                           
  7229  0070                     ?_i2c1_driver_isNACK:	
  7230                           ; 1 bit 
  7231                           
  7232  0070                     ?i1_i2c1_driver_isNACK:	
  7233                           ; 1 bit 
  7234                           
  7235  0070                     ?_PMD_Initialize:	
  7236                           ; 1 bit 
  7237                           
  7238  0070                     ?_PIN_MANAGER_Initialize:	
  7239                           ; 1 bytes @ 0x0
  7240                           
  7241  0070                     ?_OSCILLATOR_Initialize:	
  7242                           ; 1 bytes @ 0x0
  7243                           
  7244  0070                     ?_WDT_Initialize:	
  7245                           ; 1 bytes @ 0x0
  7246                           
  7247  0070                     ?_TMR2_Initialize:	
  7248                           ; 1 bytes @ 0x0
  7249                           
  7250  0070                     ?_TMR0_Initialize:	
  7251                           ; 1 bytes @ 0x0
  7252                           
  7253  0070                     ?_EUSART_Initialize:	
  7254                           ; 1 bytes @ 0x0
  7255                           
  7256  0070                     ?_TMR0_ISR:	
  7257                           ; 1 bytes @ 0x0
  7258                           
  7259  0070                     ?_TMR2_ISR:	
  7260                           ; 1 bytes @ 0x0
  7261                           
  7262  0070                     ?_EUSART_Receive_ISR:	
  7263                           ; 1 bytes @ 0x0
  7264                           
  7265  0070                     ??_EUSART_Receive_ISR:	
  7266                           ; 1 bytes @ 0x0
  7267                           
  7268  0070                     ?_EUSART_Transmit_ISR:	
  7269                           ; 1 bytes @ 0x0
  7270                           
  7271  0070                     ??_EUSART_Transmit_ISR:	
  7272                           ; 1 bytes @ 0x0
  7273                           
  7274  0070                     ?_i2c_busCollisionISR:	
  7275                           ; 1 bytes @ 0x0
  7276                           
  7277  0070                     ??_i2c_busCollisionISR:	
  7278                           ; 1 bytes @ 0x0
  7279                           
  7280  0070                     ?_i2c_ISR:	
  7281                           ; 1 bytes @ 0x0
  7282                           
  7283  0070                     ?_i2c_poller:	
  7284                           ; 1 bytes @ 0x0
  7285                           
  7286  0070                     ?_TMR0_DefaultInterruptHandler:	
  7287                           ; 1 bytes @ 0x0
  7288                           
  7289  0070                     ?_TMR2_DefaultInterruptHandler:	
  7290                           ; 1 bytes @ 0x0
  7291                           
  7292  0070                     ?_main_initialize:	
  7293                           ; 1 bytes @ 0x0
  7294                           
  7295  0070                     ?_doRelMove:	
  7296                           ; 1 bytes @ 0x0
  7297                           
  7298  0070                     ?_doAbsMove:	
  7299                           ; 1 bytes @ 0x0
  7300                           
  7301  0070                     ?_calcHeaterPins:	
  7302                           ; 1 bytes @ 0x0
  7303                           
  7304  0070                     ?_drv_reset:	
  7305                           ; 1 bytes @ 0x0
  7306                           
  7307  0070                     ?_toupper:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310  0070                     ?_SYSTEM_Initialize:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313  0070                     ?_INTERRUPT_InterruptManager:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316  0070                     ?_EUSART_Read:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319  0070                     ?_EUSART_Write:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322  0070                     ?_putch:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325  0070                     ?_mssp1_clearIRQ:	
  7326                           ; 1 bytes @ 0x0
  7327                           
  7328  0070                     ?_mssp1_setIRQ:	
  7329                           ; 1 bytes @ 0x0
  7330                           
  7331  0070                     ?_mssp1_waitForEvent:	
  7332                           ; 1 bytes @ 0x0
  7333                           
  7334  0070                     ?_i2c1_driver_resetBus:	
  7335                           ; 1 bytes @ 0x0
  7336                           
  7337  0070                     ?_i2c1_driver_start:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340  0070                     ?_i2c1_driver_restart:	
  7341                           ; 1 bytes @ 0x0
  7342                           
  7343  0070                     ?_i2c1_driver_stop:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346  0070                     ?_i2c1_driver_startRX:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349  0070                     ?_i2c1_driver_getRXData:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352  0070                     ?_i2c1_driver_TXData:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355  0070                     ?_i2c1_driver_sendACK:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358  0070                     ?_i2c1_driver_sendNACK:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361  0070                     ?_i2c1_driver_clearBusCollision:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364  0070                     ??_i2c1_driver_clearBusCollision:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367  0070                     ?_i2c_open:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370  0070                     ?_i2c_setAddress:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373  0070                     ?_i2c_masterOperation:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376  0070                     ?_do_I2C_RESET:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379  0070                     ?_do_I2C_IDLE:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382  0070                     ?_do_I2C_SEND_RESTART_READ:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388  0070                     ?_do_I2C_SEND_RESTART:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391  0070                     ?_do_I2C_SEND_STOP:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394  0070                     ?_do_I2C_SEND_ADR_READ:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400  0070                     ?_do_I2C_RCEN:	
  7401                           ; 1 bytes @ 0x0
  7402                           
  7403  0070                     ?_do_I2C_DO_ACK:	
  7404                           ; 1 bytes @ 0x0
  7405                           
  7406  0070                     ?_do_I2C_DO_NACK_STOP:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409  0070                     ?_do_I2C_DO_NACK_RESTART:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415  0070                     ?_do_I2C_TX:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418  0070                     ?_do_I2C_RX:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421  0070                     ?_do_I2C_TX_EMPTY:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424  0070                     ?_TMR0_StartTimer:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427  0070                     ?_TMR0_StopTimer:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430  0070                     ??_TMR0_StopTimer:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433  0070                     ?_TMR0_Write8bitTimer:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436  0070                     ??_TMR0_Write8bitTimer:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439  0070                     ?_TMR0_Load8bitPeriod:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442  0070                     ?_TMR2_StartTimer:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445  0070                     ?_TMR2_StopTimer:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448  0070                     ??_TMR2_StopTimer:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451  0070                     ?_TMR2_WriteTimer:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454  0070                     ??_TMR2_WriteTimer:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457  0070                     ?_TMR2_LoadPeriodRegister:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460  0070                     ?_main:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463  0070                     ?i1_send_last_2bytes_IK:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466  0070                     ?i1_send_2bytes_latchless_IK:	
  7467                           ; 1 bytes @ 0x0
  7468                           
  7469  0070                     ?i1_mssp1_clearIRQ:	
  7470                           ; 1 bytes @ 0x0
  7471                           
  7472  0070                     ??i1_mssp1_clearIRQ:	
  7473                           ; 1 bytes @ 0x0
  7474                           
  7475  0070                     ?i1_mssp1_setIRQ:	
  7476                           ; 1 bytes @ 0x0
  7477                           
  7478  0070                     ??i1_mssp1_setIRQ:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481  0070                     ?i1_i2c1_driver_resetBus:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484  0070                     ??i1_i2c1_driver_resetBus:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487  0070                     ?i1_i2c1_driver_restart:	
  7488                           ; 1 bytes @ 0x0
  7489                           
  7490  0070                     ??i1_i2c1_driver_restart:	
  7491                           ; 1 bytes @ 0x0
  7492                           
  7493  0070                     ?i1_i2c1_driver_stop:	
  7494                           ; 1 bytes @ 0x0
  7495                           
  7496  0070                     ??i1_i2c1_driver_stop:	
  7497                           ; 1 bytes @ 0x0
  7498                           
  7499  0070                     ??i1_i2c1_driver_isNACK:	
  7500                           ; 1 bytes @ 0x0
  7501                           
  7502  0070                     ?i1_i2c1_driver_startRX:	
  7503                           ; 1 bytes @ 0x0
  7504                           
  7505  0070                     ??i1_i2c1_driver_startRX:	
  7506                           ; 1 bytes @ 0x0
  7507                           
  7508  0070                     ?i1_i2c1_driver_getRXData:	
  7509                           ; 1 bytes @ 0x0
  7510                           
  7511  0070                     ??i1_i2c1_driver_getRXData:	
  7512                           ; 1 bytes @ 0x0
  7513                           
  7514  0070                     ?i1_i2c1_driver_TXData:	
  7515                           ; 1 bytes @ 0x0
  7516                           
  7517  0070                     ??i1_i2c1_driver_TXData:	
  7518                           ; 1 bytes @ 0x0
  7519                           
  7520  0070                     ?i1_i2c1_driver_sendACK:	
  7521                           ; 1 bytes @ 0x0
  7522                           
  7523  0070                     ??i1_i2c1_driver_sendACK:	
  7524                           ; 1 bytes @ 0x0
  7525                           
  7526  0070                     ?i1_i2c1_driver_sendNACK:	
  7527                           ; 1 bytes @ 0x0
  7528                           
  7529  0070                     ??i1_i2c1_driver_sendNACK:	
  7530                           ; 1 bytes @ 0x0
  7531                           
  7532  0070                     ?i1_do_I2C_RESET:	
  7533                           ; 1 bytes @ 0x0
  7534                           
  7535  0070                     ??i1_do_I2C_RESET:	
  7536                           ; 1 bytes @ 0x0
  7537                           
  7538  0070                     ?i1_do_I2C_IDLE:	
  7539                           ; 1 bytes @ 0x0
  7540                           
  7541  0070                     ??i1_do_I2C_IDLE:	
  7542                           ; 1 bytes @ 0x0
  7543                           
  7544  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  7545                           ; 1 bytes @ 0x0
  7546                           
  7547  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  7548                           ; 1 bytes @ 0x0
  7549                           
  7550  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  7551                           ; 1 bytes @ 0x0
  7552                           
  7553  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  7554                           ; 1 bytes @ 0x0
  7555                           
  7556  0070                     ?i1_do_I2C_SEND_RESTART:	
  7557                           ; 1 bytes @ 0x0
  7558                           
  7559  0070                     ??i1_do_I2C_SEND_RESTART:	
  7560                           ; 1 bytes @ 0x0
  7561                           
  7562  0070                     ?i1_do_I2C_SEND_STOP:	
  7563                           ; 1 bytes @ 0x0
  7564                           
  7565  0070                     ??i1_do_I2C_SEND_STOP:	
  7566                           ; 1 bytes @ 0x0
  7567                           
  7568  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  7569                           ; 1 bytes @ 0x0
  7570                           
  7571  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  7572                           ; 1 bytes @ 0x0
  7573                           
  7574  0070                     ?i1_do_I2C_RCEN:	
  7575                           ; 1 bytes @ 0x0
  7576                           
  7577  0070                     ??i1_do_I2C_RCEN:	
  7578                           ; 1 bytes @ 0x0
  7579                           
  7580  0070                     ?i1_do_I2C_DO_ACK:	
  7581                           ; 1 bytes @ 0x0
  7582                           
  7583  0070                     ??i1_do_I2C_DO_ACK:	
  7584                           ; 1 bytes @ 0x0
  7585                           
  7586  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  7587                           ; 1 bytes @ 0x0
  7588                           
  7589  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  7590                           ; 1 bytes @ 0x0
  7591                           
  7592  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  7593                           ; 1 bytes @ 0x0
  7594                           
  7595  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  7596                           ; 1 bytes @ 0x0
  7597                           
  7598  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  7599                           ; 1 bytes @ 0x0
  7600                           
  7601  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  7602                           ; 1 bytes @ 0x0
  7603                           
  7604  0070                     ?i1_do_I2C_TX:	
  7605                           ; 1 bytes @ 0x0
  7606                           
  7607  0070                     ?i1_do_I2C_RX:	
  7608                           ; 1 bytes @ 0x0
  7609                           
  7610  0070                     ??i1_do_I2C_RX:	
  7611                           ; 1 bytes @ 0x0
  7612                           
  7613  0070                     ?i1_do_I2C_TX_EMPTY:	
  7614                           ; 1 bytes @ 0x0
  7615                           
  7616  0070                     ??i1_do_I2C_TX_EMPTY:	
  7617                           ; 1 bytes @ 0x0
  7618                           
  7619  0070                     ?i1_i2c_ISR:	
  7620                           ; 1 bytes @ 0x0
  7621                           
  7622  0070                     ?i1_returnStop:	
  7623                           ; 1 bytes @ 0x0
  7624                           
  7625  0070                     ?i1_returnReset:	
  7626                           ; 1 bytes @ 0x0
  7627                           
  7628  0070                     ?_execCmd:	
  7629                           ; 1 bytes @ 0x0
  7630                           
  7631  0070                     TMR0_Write8bitTimer@timerVal:	
  7632                           ; 2 bytes @ 0x0
  7633                           
  7634  0070                     TMR2_WriteTimer@timerVal:	
  7635                           ; 1 bytes @ 0x0
  7636                           
  7637  0070                     i1i2c1_driver_TXData@d:	
  7638                           ; 1 bytes @ 0x0
  7639                           
  7640  0070                     i1returnStop@p:	
  7641                           ; 1 bytes @ 0x0
  7642                           
  7643  0070                     i1returnReset@p:	
  7644                           ; 1 bytes @ 0x0
  7645                           
  7646  0070                     i1send_last_2bytes_IK@data:	
  7647                           ; 1 bytes @ 0x0
  7648                           
  7649  0070                     i1send_2bytes_latchless_IK@data:	
  7650                           ; 2 bytes @ 0x0
  7651                           
  7652                           
  7653                           ; 2 bytes @ 0x0
  7654  0070                     	ds	1
  7655  0071                     ??_TMR2_ISR:	
  7656  0071                     ??_TMR2_DefaultInterruptHandler:	
  7657                           ; 1 bytes @ 0x1
  7658                           
  7659  0071                     ??i1_do_I2C_SEND_ADR_READ:	
  7660                           ; 1 bytes @ 0x1
  7661                           
  7662  0071                     ??i1_do_I2C_SEND_ADR_WRITE:	
  7663                           ; 1 bytes @ 0x1
  7664                           
  7665  0071                     ??i1_do_I2C_TX:	
  7666                           ; 1 bytes @ 0x1
  7667                           
  7668  0071                     ??i1_returnStop:	
  7669                           ; 1 bytes @ 0x1
  7670                           
  7671  0071                     ??i1_returnReset:	
  7672                           ; 1 bytes @ 0x1
  7673                           
  7674                           
  7675                           ; 1 bytes @ 0x1
  7676  0071                     	ds	1
  7677  0072                     ??i1_send_2bytes_latchless_IK:	
  7678  0072                     i1send_last_2bytes_IK@latch_start:	
  7679                           ; 1 bytes @ 0x2
  7680                           
  7681                           
  7682                           ; 1 bytes @ 0x2
  7683  0072                     	ds	1
  7684  0073                     i1send_last_2bytes_IK@topOrBottom:	
  7685  0073                     i1_do_I2C_TX$1134:	
  7686                           ; 2 bytes @ 0x3
  7687                           
  7688                           
  7689                           ; 2 bytes @ 0x3
  7690  0073                     	ds	2
  7691  0075                     ??i1_send_last_2bytes_IK:	
  7692  0075                     ??i1_i2c_ISR:	
  7693                           ; 1 bytes @ 0x5
  7694                           
  7695                           
  7696                           ; 1 bytes @ 0x5
  7697  0075                     	ds	1
  7698  0076                     i1send_2bytes_latchless_IK@j:	
  7699                           
  7700                           ; 2 bytes @ 0x6
  7701  0076                     	ds	3
  7702  0079                     i1send_last_2bytes_IK@j:	
  7703                           
  7704                           ; 2 bytes @ 0x9
  7705  0079                     	ds	2
  7706  007B                     ??i1_send_2length_2bytes_IK:	
  7707                           
  7708                           ; 1 bytes @ 0xB
  7709  007B                     	ds	1
  7710  007C                     ??_TMR0_ISR:	
  7711  007C                     ??_TMR0_DefaultInterruptHandler:	
  7712                           ; 1 bytes @ 0xC
  7713                           
  7714  007C                     ??_INTERRUPT_InterruptManager:	
  7715                           ; 1 bytes @ 0xC
  7716                           
  7717                           
  7718                           ; 1 bytes @ 0xC
  7719  007C                     	ds	1
  7720                           
  7721                           	psect	cstackBANK0
  7722  0020                     __pcstackBANK0:	
  7723  0020                     ?i1_send_2length_2bytes_IK:	
  7724  0020                     i1send_2length_2bytes_IK@data1:	
  7725                           ; 1 bytes @ 0x0
  7726                           
  7727                           
  7728                           ; 2 bytes @ 0x0
  7729  0020                     	ds	2
  7730  0022                     i1send_2length_2bytes_IK@data2:	
  7731                           
  7732                           ; 2 bytes @ 0x2
  7733  0022                     	ds	2
  7734  0024                     i1send_2length_2bytes_IK@latch_start:	
  7735                           
  7736                           ; 1 bytes @ 0x4
  7737  0024                     	ds	1
  7738  0025                     i1send_2length_2bytes_IK@topOrBottom:	
  7739                           
  7740                           ; 2 bytes @ 0x5
  7741  0025                     	ds	2
  7742  0027                     ?i1_LEDsOn:	
  7743  0027                     i1LEDsOn@LEDpins:	
  7744                           ; 1 bytes @ 0x7
  7745                           
  7746                           
  7747                           ; 4 bytes @ 0x7
  7748  0027                     	ds	4
  7749  002B                     i1LEDsOn@topOrBottom:	
  7750                           
  7751                           ; 2 bytes @ 0xB
  7752  002B                     	ds	2
  7753  002D                     ??i1_LEDsOn:	
  7754                           
  7755                           ; 1 bytes @ 0xD
  7756  002D                     	ds	4
  7757  0031                     ??_PMD_Initialize:	
  7758  0031                     ??_PIN_MANAGER_Initialize:	
  7759                           ; 1 bytes @ 0x11
  7760                           
  7761  0031                     ??_OSCILLATOR_Initialize:	
  7762                           ; 1 bytes @ 0x11
  7763                           
  7764  0031                     ??_WDT_Initialize:	
  7765                           ; 1 bytes @ 0x11
  7766                           
  7767  0031                     ??_EUSART_Initialize:	
  7768                           ; 1 bytes @ 0x11
  7769                           
  7770  0031                     ?_returnStop:	
  7771                           ; 1 bytes @ 0x11
  7772                           
  7773  0031                     ?_returnReset:	
  7774                           ; 1 bytes @ 0x11
  7775                           
  7776  0031                     ?_TMR0_SetInterruptHandler:	
  7777                           ; 1 bytes @ 0x11
  7778                           
  7779  0031                     ?_TMR2_SetInterruptHandler:	
  7780                           ; 1 bytes @ 0x11
  7781                           
  7782  0031                     ??_calcHeaterPins:	
  7783                           ; 1 bytes @ 0x11
  7784                           
  7785  0031                     ??_isdigit:	
  7786                           ; 1 bytes @ 0x11
  7787                           
  7788  0031                     ??_toupper:	
  7789                           ; 1 bytes @ 0x11
  7790                           
  7791  0031                     ?_send_last_2bytes_IK:	
  7792                           ; 1 bytes @ 0x11
  7793                           
  7794  0031                     ?_send_2bytes_latchless_IK:	
  7795                           ; 1 bytes @ 0x11
  7796                           
  7797  0031                     ??_EUSART_Read:	
  7798                           ; 1 bytes @ 0x11
  7799                           
  7800  0031                     ??_EUSART_Write:	
  7801                           ; 1 bytes @ 0x11
  7802                           
  7803  0031                     ??_mssp1_IRQisEnabled:	
  7804                           ; 1 bytes @ 0x11
  7805                           
  7806  0031                     ??_mssp1_clearIRQ:	
  7807                           ; 1 bytes @ 0x11
  7808                           
  7809  0031                     ??_mssp1_setIRQ:	
  7810                           ; 1 bytes @ 0x11
  7811                           
  7812  0031                     ??_mssp1_waitForEvent:	
  7813                           ; 1 bytes @ 0x11
  7814                           
  7815  0031                     ??_i2c1_driver_open:	
  7816                           ; 1 bytes @ 0x11
  7817                           
  7818  0031                     ??_i2c1_driver_resetBus:	
  7819                           ; 1 bytes @ 0x11
  7820                           
  7821  0031                     ??_i2c1_driver_start:	
  7822                           ; 1 bytes @ 0x11
  7823                           
  7824  0031                     ??_i2c1_driver_restart:	
  7825                           ; 1 bytes @ 0x11
  7826                           
  7827  0031                     ??_i2c1_driver_stop:	
  7828                           ; 1 bytes @ 0x11
  7829                           
  7830  0031                     ??_i2c1_driver_isNACK:	
  7831                           ; 1 bytes @ 0x11
  7832                           
  7833  0031                     ??_i2c1_driver_startRX:	
  7834                           ; 1 bytes @ 0x11
  7835                           
  7836  0031                     ??_i2c1_driver_getRXData:	
  7837                           ; 1 bytes @ 0x11
  7838                           
  7839  0031                     ??_i2c1_driver_TXData:	
  7840                           ; 1 bytes @ 0x11
  7841                           
  7842  0031                     ??_i2c1_driver_sendACK:	
  7843                           ; 1 bytes @ 0x11
  7844                           
  7845  0031                     ??_i2c1_driver_sendNACK:	
  7846                           ; 1 bytes @ 0x11
  7847                           
  7848  0031                     ?_i2c1_driver_setBusCollisionISR:	
  7849                           ; 1 bytes @ 0x11
  7850                           
  7851  0031                     ?_i2c1_driver_setI2cISR:	
  7852                           ; 1 bytes @ 0x11
  7853                           
  7854  0031                     ??_i2c_setAddress:	
  7855                           ; 1 bytes @ 0x11
  7856                           
  7857  0031                     ?_i2c_setBuffer:	
  7858                           ; 1 bytes @ 0x11
  7859                           
  7860  0031                     ??_do_I2C_RESET:	
  7861                           ; 1 bytes @ 0x11
  7862                           
  7863  0031                     ??_do_I2C_IDLE:	
  7864                           ; 1 bytes @ 0x11
  7865                           
  7866  0031                     ??_do_I2C_SEND_RESTART_READ:	
  7867                           ; 1 bytes @ 0x11
  7868                           
  7869  0031                     ??_do_I2C_SEND_RESTART_WRITE:	
  7870                           ; 1 bytes @ 0x11
  7871                           
  7872  0031                     ??_do_I2C_SEND_RESTART:	
  7873                           ; 1 bytes @ 0x11
  7874                           
  7875  0031                     ??_do_I2C_SEND_STOP:	
  7876                           ; 1 bytes @ 0x11
  7877                           
  7878  0031                     ??_do_I2C_RCEN:	
  7879                           ; 1 bytes @ 0x11
  7880                           
  7881  0031                     ??_do_I2C_DO_ACK:	
  7882                           ; 1 bytes @ 0x11
  7883                           
  7884  0031                     ??_do_I2C_DO_NACK_STOP:	
  7885                           ; 1 bytes @ 0x11
  7886                           
  7887  0031                     ??_do_I2C_DO_NACK_RESTART:	
  7888                           ; 1 bytes @ 0x11
  7889                           
  7890  0031                     ??_do_I2C_DO_ADDRESS_NACK:	
  7891                           ; 1 bytes @ 0x11
  7892                           
  7893  0031                     ??_do_I2C_RX:	
  7894                           ; 1 bytes @ 0x11
  7895                           
  7896  0031                     ??_do_I2C_TX_EMPTY:	
  7897                           ; 1 bytes @ 0x11
  7898                           
  7899  0031                     ??_TMR0_StartTimer:	
  7900                           ; 1 bytes @ 0x11
  7901                           
  7902  0031                     ??_TMR0_Load8bitPeriod:	
  7903                           ; 1 bytes @ 0x11
  7904                           
  7905  0031                     ??_TMR2_StartTimer:	
  7906                           ; 1 bytes @ 0x11
  7907                           
  7908  0031                     ??_TMR2_LoadPeriodRegister:	
  7909                           ; 1 bytes @ 0x11
  7910                           
  7911  0031                     ?_strchr:	
  7912                           ; 1 bytes @ 0x11
  7913                           
  7914  0031                     ?___wmul:	
  7915                           ; 2 bytes @ 0x11
  7916                           
  7917  0031                     ?___awdiv:	
  7918                           ; 2 bytes @ 0x11
  7919                           
  7920  0031                     ?___ftpack:	
  7921                           ; 2 bytes @ 0x11
  7922                           
  7923  0031                     ?___lldiv:	
  7924                           ; 3 bytes @ 0x11
  7925                           
  7926  0031                     mssp1_waitForEvent@timeout:	
  7927                           ; 4 bytes @ 0x11
  7928                           
  7929  0031                     i2c1_driver_TXData@d:	
  7930                           ; 1 bytes @ 0x11
  7931                           
  7932  0031                     returnStop@p:	
  7933                           ; 1 bytes @ 0x11
  7934                           
  7935  0031                     returnReset@p:	
  7936                           ; 1 bytes @ 0x11
  7937                           
  7938  0031                     TMR0_Load8bitPeriod@periodVal:	
  7939                           ; 1 bytes @ 0x11
  7940                           
  7941  0031                     TMR2_LoadPeriodRegister@periodVal:	
  7942                           ; 1 bytes @ 0x11
  7943                           
  7944  0031                     _isdigit$2173:	
  7945                           ; 1 bytes @ 0x11
  7946                           
  7947  0031                     send_last_2bytes_IK@data:	
  7948                           ; 1 bytes @ 0x11
  7949                           
  7950  0031                     send_2bytes_latchless_IK@data:	
  7951                           ; 2 bytes @ 0x11
  7952                           
  7953  0031                     i2c1_driver_setBusCollisionISR@f:	
  7954                           ; 2 bytes @ 0x11
  7955                           
  7956  0031                     i2c1_driver_setI2cISR@f:	
  7957                           ; 2 bytes @ 0x11
  7958                           
  7959  0031                     i2c_setBuffer@buffer:	
  7960                           ; 2 bytes @ 0x11
  7961                           
  7962  0031                     TMR0_SetInterruptHandler@InterruptHandler:	
  7963                           ; 2 bytes @ 0x11
  7964                           
  7965  0031                     TMR2_SetInterruptHandler@InterruptHandler:	
  7966                           ; 2 bytes @ 0x11
  7967                           
  7968  0031                     ___wmul@multiplier:	
  7969                           ; 2 bytes @ 0x11
  7970                           
  7971  0031                     ___awdiv@divisor:	
  7972                           ; 2 bytes @ 0x11
  7973                           
  7974  0031                     strchr@ptr:	
  7975                           ; 2 bytes @ 0x11
  7976                           
  7977  0031                     ___ftpack@arg:	
  7978                           ; 2 bytes @ 0x11
  7979                           
  7980  0031                     ___lldiv@divisor:	
  7981                           ; 3 bytes @ 0x11
  7982                           
  7983                           
  7984                           ; 4 bytes @ 0x11
  7985  0031                     	ds	1
  7986  0032                     ??_returnStop:	
  7987  0032                     ??_returnReset:	
  7988                           ; 1 bytes @ 0x12
  7989                           
  7990  0032                     ??_do_I2C_SEND_ADR_READ:	
  7991                           ; 1 bytes @ 0x12
  7992                           
  7993  0032                     ??_do_I2C_SEND_ADR_WRITE:	
  7994                           ; 1 bytes @ 0x12
  7995                           
  7996  0032                     ??_do_I2C_TX:	
  7997                           ; 1 bytes @ 0x12
  7998                           
  7999  0032                     EUSART_Read@readValue:	
  8000                           ; 1 bytes @ 0x12
  8001                           
  8002  0032                     EUSART_Write@txData:	
  8003                           ; 1 bytes @ 0x12
  8004                           
  8005  0032                     i2c_setAddress@address:	
  8006                           ; 1 bytes @ 0x12
  8007                           
  8008  0032                     isdigit@c:	
  8009                           ; 1 bytes @ 0x12
  8010                           
  8011  0032                     toupper@c:	
  8012                           ; 1 bytes @ 0x12
  8013                           
  8014                           
  8015                           ; 1 bytes @ 0x12
  8016  0032                     	ds	1
  8017  0033                     ??_TMR2_Initialize:	
  8018  0033                     ??_TMR0_Initialize:	
  8019                           ; 1 bytes @ 0x13
  8020                           
  8021  0033                     ??_TMR0_SetInterruptHandler:	
  8022                           ; 1 bytes @ 0x13
  8023                           
  8024  0033                     ??_TMR2_SetInterruptHandler:	
  8025                           ; 1 bytes @ 0x13
  8026                           
  8027  0033                     ??_SYSTEM_Initialize:	
  8028                           ; 1 bytes @ 0x13
  8029                           
  8030  0033                     ??_send_2bytes_latchless_IK:	
  8031                           ; 1 bytes @ 0x13
  8032                           
  8033  0033                     ??_putch:	
  8034                           ; 1 bytes @ 0x13
  8035                           
  8036  0033                     ??_i2c1_driver_setBusCollisionISR:	
  8037                           ; 1 bytes @ 0x13
  8038                           
  8039  0033                     ??_i2c1_driver_setI2cISR:	
  8040                           ; 1 bytes @ 0x13
  8041                           
  8042  0033                     ??_i2c_open:	
  8043                           ; 1 bytes @ 0x13
  8044                           
  8045  0033                     ?_stricmp:	
  8046                           ; 1 bytes @ 0x13
  8047                           
  8048  0033                     send_last_2bytes_IK@latch_start:	
  8049                           ; 2 bytes @ 0x13
  8050                           
  8051  0033                     putch@txData:	
  8052                           ; 1 bytes @ 0x13
  8053                           
  8054  0033                     i2c_setBuffer@bufferSize:	
  8055                           ; 1 bytes @ 0x13
  8056                           
  8057  0033                     ___wmul@multiplicand:	
  8058                           ; 2 bytes @ 0x13
  8059                           
  8060  0033                     ___awdiv@dividend:	
  8061                           ; 2 bytes @ 0x13
  8062                           
  8063  0033                     stricmp@s2:	
  8064                           ; 2 bytes @ 0x13
  8065                           
  8066  0033                     strchr@chr:	
  8067                           ; 2 bytes @ 0x13
  8068                           
  8069                           
  8070                           ; 2 bytes @ 0x13
  8071  0033                     	ds	1
  8072  0034                     i2c_open@ret:	
  8073  0034                     ___ftpack@exp:	
  8074                           ; 1 bytes @ 0x14
  8075                           
  8076  0034                     send_last_2bytes_IK@topOrBottom:	
  8077                           ; 1 bytes @ 0x14
  8078                           
  8079  0034                     _do_I2C_TX$1134:	
  8080                           ; 2 bytes @ 0x14
  8081                           
  8082                           
  8083                           ; 2 bytes @ 0x14
  8084  0034                     	ds	1
  8085  0035                     ??_stricmp:	
  8086  0035                     ??_strchr:	
  8087                           ; 1 bytes @ 0x15
  8088                           
  8089  0035                     ??_i2c_setBuffer:	
  8090                           ; 1 bytes @ 0x15
  8091                           
  8092  0035                     ??___wmul:	
  8093                           ; 1 bytes @ 0x15
  8094                           
  8095  0035                     ??___awdiv:	
  8096                           ; 1 bytes @ 0x15
  8097                           
  8098  0035                     i2c_open@address:	
  8099                           ; 1 bytes @ 0x15
  8100                           
  8101  0035                     ___ftpack@sign:	
  8102                           ; 1 bytes @ 0x15
  8103                           
  8104  0035                     ___wmul@product:	
  8105                           ; 1 bytes @ 0x15
  8106                           
  8107  0035                     ___lldiv@dividend:	
  8108                           ; 2 bytes @ 0x15
  8109                           
  8110                           
  8111                           ; 4 bytes @ 0x15
  8112  0035                     	ds	1
  8113  0036                     ??_i2c_ISR:	
  8114  0036                     ??___ftpack:	
  8115                           ; 1 bytes @ 0x16
  8116                           
  8117  0036                     ??_send_last_2bytes_IK:	
  8118                           ; 1 bytes @ 0x16
  8119                           
  8120  0036                     ___awdiv@counter:	
  8121                           ; 1 bytes @ 0x16
  8122                           
  8123                           
  8124                           ; 1 bytes @ 0x16
  8125  0036                     	ds	1
  8126  0037                     ??_i2c_poller:	
  8127  0037                     ??_i2c_masterOperation:	
  8128                           ; 1 bytes @ 0x17
  8129                           
  8130  0037                     ?_atoi:	
  8131                           ; 1 bytes @ 0x17
  8132                           
  8133  0037                     ___awdiv@sign:	
  8134                           ; 2 bytes @ 0x17
  8135                           
  8136  0037                     stricmp@r:	
  8137                           ; 1 bytes @ 0x17
  8138                           
  8139  0037                     send_2bytes_latchless_IK@j:	
  8140                           ; 1 bytes @ 0x17
  8141                           
  8142                           
  8143                           ; 2 bytes @ 0x17
  8144  0037                     	ds	1
  8145  0038                     ?_strspn:	
  8146  0038                     ?_strcspn:	
  8147                           ; 2 bytes @ 0x18
  8148                           
  8149  0038                     i2c_masterOperation@read:	
  8150                           ; 2 bytes @ 0x18
  8151                           
  8152  0038                     stricmp@s1:	
  8153                           ; 1 bytes @ 0x18
  8154                           
  8155  0038                     ___awdiv@quotient:	
  8156                           ; 1 bytes @ 0x18
  8157                           
  8158  0038                     strcspn@s2:	
  8159                           ; 2 bytes @ 0x18
  8160                           
  8161  0038                     strspn@s2:	
  8162                           ; 2 bytes @ 0x18
  8163                           
  8164                           
  8165                           ; 2 bytes @ 0x18
  8166  0038                     	ds	1
  8167  0039                     ??_atoi:	
  8168  0039                     ??___lldiv:	
  8169                           ; 1 bytes @ 0x19
  8170                           
  8171  0039                     ?___awtoft:	
  8172                           ; 1 bytes @ 0x19
  8173                           
  8174  0039                     i2c_masterOperation@ret:	
  8175                           ; 3 bytes @ 0x19
  8176                           
  8177  0039                     ___awtoft@c:	
  8178                           ; 1 bytes @ 0x19
  8179                           
  8180                           
  8181                           ; 2 bytes @ 0x19
  8182  0039                     	ds	1
  8183  003A                     ??_strspn:	
  8184  003A                     ??_strcspn:	
  8185                           ; 1 bytes @ 0x1A
  8186                           
  8187  003A                     send_last_2bytes_IK@j:	
  8188                           ; 1 bytes @ 0x1A
  8189                           
  8190  003A                     ___lldiv@quotient:	
  8191                           ; 2 bytes @ 0x1A
  8192                           
  8193                           
  8194                           ; 4 bytes @ 0x1A
  8195  003A                     	ds	1
  8196  003B                     atoi@sign:	
  8197                           
  8198                           ; 1 bytes @ 0x1B
  8199  003B                     	ds	1
  8200  003C                     ?_send_2length_2bytes_IK:	
  8201  003C                     ??___awtoft:	
  8202                           ; 1 bytes @ 0x1C
  8203                           
  8204  003C                     send_2length_2bytes_IK@data1:	
  8205                           ; 1 bytes @ 0x1C
  8206                           
  8207  003C                     atoi@a:	
  8208                           ; 2 bytes @ 0x1C
  8209                           
  8210  003C                     strcspn@i:	
  8211                           ; 2 bytes @ 0x1C
  8212                           
  8213  003C                     strspn@i:	
  8214                           ; 2 bytes @ 0x1C
  8215                           
  8216                           
  8217                           ; 2 bytes @ 0x1C
  8218  003C                     	ds	2
  8219  003E                     atoi@s:	
  8220  003E                     ___awtoft@sign:	
  8221                           ; 1 bytes @ 0x1E
  8222                           
  8223  003E                     ___lldiv@counter:	
  8224                           ; 1 bytes @ 0x1E
  8225                           
  8226  003E                     strcspn@s1:	
  8227                           ; 1 bytes @ 0x1E
  8228                           
  8229  003E                     strspn@s1:	
  8230                           ; 1 bytes @ 0x1E
  8231                           
  8232  003E                     send_2length_2bytes_IK@data2:	
  8233                           ; 1 bytes @ 0x1E
  8234                           
  8235                           
  8236                           ; 2 bytes @ 0x1E
  8237  003E                     	ds	1
  8238  003F                     ?_strtok:	
  8239  003F                     ?___ftmul:	
  8240                           ; 1 bytes @ 0x1F
  8241                           
  8242  003F                     ?___llmod:	
  8243                           ; 3 bytes @ 0x1F
  8244                           
  8245  003F                     strtok@s2:	
  8246                           ; 4 bytes @ 0x1F
  8247                           
  8248  003F                     ___ftmul@f1:	
  8249                           ; 2 bytes @ 0x1F
  8250                           
  8251  003F                     ___llmod@divisor:	
  8252                           ; 3 bytes @ 0x1F
  8253                           
  8254                           
  8255                           ; 4 bytes @ 0x1F
  8256  003F                     	ds	1
  8257  0040                     send_2length_2bytes_IK@latch_start:	
  8258                           
  8259                           ; 1 bytes @ 0x20
  8260  0040                     	ds	1
  8261  0041                     ??_strtok:	
  8262  0041                     send_2length_2bytes_IK@topOrBottom:	
  8263                           ; 1 bytes @ 0x21
  8264                           
  8265                           
  8266                           ; 2 bytes @ 0x21
  8267  0041                     	ds	1
  8268  0042                     ___ftmul@f2:	
  8269                           
  8270                           ; 3 bytes @ 0x22
  8271  0042                     	ds	1
  8272  0043                     ??_send_2length_2bytes_IK:	
  8273  0043                     ___llmod@dividend:	
  8274                           ; 1 bytes @ 0x23
  8275                           
  8276                           
  8277                           ; 4 bytes @ 0x23
  8278  0043                     	ds	1
  8279  0044                     ?_LEDsOn:	
  8280  0044                     ?_LEDsPwr:	
  8281                           ; 1 bytes @ 0x24
  8282                           
  8283  0044                     ?_LED_setBrightnessRange:	
  8284                           ; 1 bytes @ 0x24
  8285                           
  8286  0044                     strtok@s1:	
  8287                           ; 1 bytes @ 0x24
  8288                           
  8289  0044                     LEDsPwr@pwr:	
  8290                           ; 1 bytes @ 0x24
  8291                           
  8292  0044                     LED_setBrightnessRange@range:	
  8293                           ; 2 bytes @ 0x24
  8294                           
  8295  0044                     LEDsOn@LEDpins:	
  8296                           ; 2 bytes @ 0x24
  8297                           
  8298                           
  8299                           ; 4 bytes @ 0x24
  8300  0044                     	ds	1
  8301  0045                     ?_parseCmd:	
  8302  0045                     ??___ftmul:	
  8303                           ; 1 bytes @ 0x25
  8304                           
  8305  0045                     parseCmd@s:	
  8306                           ; 1 bytes @ 0x25
  8307                           
  8308                           
  8309                           ; 1 bytes @ 0x25
  8310  0045                     	ds	1
  8311  0046                     ??_parseCmd:	
  8312  0046                     LEDsPwr@topOrBottom:	
  8313                           ; 1 bytes @ 0x26
  8314                           
  8315  0046                     LED_setBrightnessRange@topOrBottom:	
  8316                           ; 2 bytes @ 0x26
  8317                           
  8318                           
  8319                           ; 2 bytes @ 0x26
  8320  0046                     	ds	1
  8321  0047                     ??___llmod:	
  8322  0047                     parseCmd@cmdString:	
  8323                           ; 1 bytes @ 0x27
  8324                           
  8325                           
  8326                           ; 1 bytes @ 0x27
  8327  0047                     	ds	1
  8328  0048                     ??_LEDsPwr:	
  8329  0048                     ??_LED_setBrightnessRange:	
  8330                           ; 1 bytes @ 0x28
  8331                           
  8332  0048                     ___llmod@counter:	
  8333                           ; 1 bytes @ 0x28
  8334                           
  8335  0048                     LEDsOn@topOrBottom:	
  8336                           ; 1 bytes @ 0x28
  8337                           
  8338  0048                     parseCmd@paramIter:	
  8339                           ; 2 bytes @ 0x28
  8340                           
  8341                           
  8342                           ; 2 bytes @ 0x28
  8343  0048                     	ds	1
  8344  0049                     ?_drv_write:	
  8345  0049                     ??_drv_read:	
  8346                           ; 1 bytes @ 0x29
  8347                           
  8348  0049                     ??_LED_readConfig:	
  8349                           ; 1 bytes @ 0x29
  8350                           
  8351  0049                     ??_startRelMove:	
  8352                           ; 1 bytes @ 0x29
  8353                           
  8354  0049                     ??_startAbsMove:	
  8355                           ; 1 bytes @ 0x29
  8356                           
  8357  0049                     ??_stop:	
  8358                           ; 1 bytes @ 0x29
  8359                           
  8360  0049                     ??_getPosition:	
  8361                           ; 1 bytes @ 0x29
  8362                           
  8363  0049                     ??_setDrvPeak:	
  8364                           ; 1 bytes @ 0x29
  8365                           
  8366  0049                     ??_setHeaterPreTime:	
  8367                           ; 1 bytes @ 0x29
  8368                           
  8369  0049                     ??_setHeaterPostTime:	
  8370                           ; 1 bytes @ 0x29
  8371                           
  8372  0049                     ??_setMoveMask:	
  8373                           ; 1 bytes @ 0x29
  8374                           
  8375  0049                     ??_getActive:	
  8376                           ; 1 bytes @ 0x29
  8377                           
  8378  0049                     ??_getMoveMask:	
  8379                           ; 1 bytes @ 0x29
  8380                           
  8381  0049                     ??_getMotionStatus:	
  8382                           ; 1 bytes @ 0x29
  8383                           
  8384  0049                     ??___ftadd:	
  8385                           ; 1 bytes @ 0x29
  8386                           
  8387  0049                     drv_write@data:	
  8388                           ; 1 bytes @ 0x29
  8389                           
  8390  0049                     zeroPosition@i:	
  8391                           ; 1 bytes @ 0x29
  8392                           
  8393                           
  8394                           ; 2 bytes @ 0x29
  8395  0049                     	ds	1
  8396  004A                     ??_drv_write:	
  8397  004A                     ??_LEDsOn:	
  8398                           ; 1 bytes @ 0x2A
  8399                           
  8400  004A                     parseCmd@p:	
  8401                           ; 1 bytes @ 0x2A
  8402                           
  8403                           
  8404                           ; 1 bytes @ 0x2A
  8405  004A                     	ds	1
  8406  004B                     drv_write@reg:	
  8407  004B                     drv_read@reg:	
  8408                           ; 1 bytes @ 0x2B
  8409                           
  8410                           
  8411                           ; 1 bytes @ 0x2B
  8412  004B                     	ds	1
  8413  004C                     drv_read@buff:	
  8414  004C                     drv_write@buff:	
  8415                           ; 1 bytes @ 0x2C
  8416                           
  8417                           
  8418                           ; 2 bytes @ 0x2C
  8419  004C                     	ds	1
  8420  004D                     ??_fifo_check:	
  8421  004D                     ??_setH1OffTime:	
  8422                           ; 1 bytes @ 0x2D
  8423                           
  8424  004D                     ??_setH2OnTime:	
  8425                           ; 1 bytes @ 0x2D
  8426                           
  8427                           
  8428                           ; 1 bytes @ 0x2D
  8429  004D                     	ds	1
  8430  004E                     ??_main_initialize:	
  8431  004E                     ??_execCmd:	
  8432                           ; 1 bytes @ 0x2E
  8433                           
  8434  004E                     ??_setLEDBrightnessRange:	
  8435                           ; 1 bytes @ 0x2E
  8436                           
  8437  004E                     ??_setLEDPwr:	
  8438                           ; 1 bytes @ 0x2E
  8439                           
  8440                           
  8441                           	psect	maintext
  8442  1F20                     __pmaintext:	
  8443                           ; 1 bytes @ 0x2E
  8444 ;;
  8445 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8446 ;;
  8447 ;; *************** function _main *****************
  8448 ;; Defined at:
  8449 ;;		line 132 in file "main.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;		None
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;		None
  8454 ;; Return value:  Size  Location     Type
  8455 ;;                  1    wreg      void 
  8456 ;; Registers used:
  8457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8458 ;; Tracked objects:
  8459 ;;		On entry : B1F/0
  8460 ;;		On exit  : 0/0
  8461 ;;		Unchanged: 0/0
  8462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8465 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8466 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8467 ;;Total ram usage:        1 bytes
  8468 ;; Hardware stack levels required when called:   17
  8469 ;; This function calls:
  8470 ;;		_EUSART_Read
  8471 ;;		_SYSTEM_Initialize
  8472 ;;		_doAbsMove
  8473 ;;		_doRelMove
  8474 ;;		_execCmd
  8475 ;;		_main_initialize
  8476 ;;		_parseCmd
  8477 ;;		_printf
  8478 ;; This function is called by:
  8479 ;;		Startup code after reset
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           
  8484                           ;psect for function _main
  8485  1F20                     _main:	
  8486                           
  8487                           ;main.c: 135: SYSTEM_Initialize();
  8488                           
  8489                           ;incstack = 0
  8490 ;; hardware stack exceeded
  8491                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8492  1F20  31A3  237C  319F   	fcall	_SYSTEM_Initialize
  8493                           
  8494                           ;main.c: 136: _delay((unsigned long)((500)*(1000000/4000.0)));
  8495  1F23  30A3               	movlw	163
  8496  1F24  0021               	movlb	1	; select bank1
  8497  1F25  00DE               	movwf	??_main^(0+128)
  8498  1F26  3055               	movlw	85
  8499  1F27                     u9017:	
  8500  1F27  0B89               	decfsz	9,f
  8501  1F28  2F27               	goto	u9017
  8502  1F29  0BDE               	decfsz	??_main^(0+128),f
  8503  1F2A  2F27               	goto	u9017
  8504                           
  8505                           ;main.c: 142: (INTCONbits.GIE = 1);
  8506  1F2B  178B               	bsf	11,7	;volatile
  8507                           
  8508                           ;main.c: 145: (INTCONbits.PEIE = 1);
  8509  1F2C  170B               	bsf	11,6	;volatile
  8510                           
  8511                           ;main.c: 146: printf("\n\nsystem done\n");
  8512  1F2D  304E               	movlw	low (STR_5| (0+32768))
  8513  1F2E  0021               	movlb	1	; select bank1
  8514  1F2F  00A0               	movwf	printf@f^(0+128)
  8515  1F30  30A9               	movlw	high (STR_5| (0+32768))
  8516  1F31  00A1               	movwf	(printf@f^(0+128)+1)
  8517  1F32  318E  26CE  319F   	fcall	_printf
  8518                           
  8519                           ;main.c: 152: main_initialize();
  8520  1F35  318A  22D4  319F   	fcall	_main_initialize
  8521                           
  8522                           ;main.c: 175: }
  8523                           ;main.c: 178: switch(motionType){
  8524  1F38  2F40               	goto	l8743
  8525  1F39                     l8763:	
  8526                           ;main.c: 179: case REL_MOVE: doRelMove(); break;
  8527                           
  8528  1F39  318D  25A3  319F   	fcall	_doRelMove
  8529  1F3C  2F40               	goto	l8743
  8530  1F3D                     l8765:	
  8531                           ;main.c: 180: case ABS_MOVE: doAbsMove(); break;
  8532                           
  8533  1F3D  3180  20C5  319F   	fcall	_doAbsMove
  8534  1F40                     l8743:	
  8535                           ;main.c: 154: while (1)
  8536                           
  8537                           ;main.c: 182: }
  8538                           
  8539                           ;main.c: 181: default: break;
  8540                           
  8541                           
  8542                           ;main.c: 155: {
  8543                           ;main.c: 157: if (eusartRxCount!=0) {
  8544  1F40  0020               	movlb	0	; select bank0
  8545  1F41  0856               	movf	_eusartRxCount,w	;volatile
  8546  1F42  1903               	btfsc	3,2
  8547  1F43  2F6C               	goto	l8755
  8548                           
  8549                           ;main.c: 158: readdata[readIdx] = EUSART_Read();
  8550  1F44  31A4  24F4  319F   	fcall	_EUSART_Read
  8551  1F47  0021               	movlb	1	; select bank1
  8552  1F48  00DE               	movwf	??_main^(0+128)
  8553  1F49  0020               	movlb	0	; select bank0
  8554  1F4A  0852               	movf	_readIdx,w
  8555  1F4B  3ECD               	addlw	(low (_readdata| (0+256)))& (0+255)
  8556  1F4C  0086               	movwf	6
  8557  1F4D  3001               	movlw	1	; select bank3/4
  8558  1F4E  0087               	movwf	7
  8559  1F4F  0021               	movlb	1	; select bank1
  8560  1F50  085E               	movf	??_main^(0+128),w
  8561  1F51  0081               	movwf	1
  8562                           
  8563                           ;main.c: 159: if(readdata[readIdx] == '\n'){
  8564  1F52  0020               	movlb	0	; select bank0
  8565  1F53  0852               	movf	_readIdx,w
  8566  1F54  3ECD               	addlw	(low (_readdata| (0+256)))& (0+255)
  8567  1F55  0086               	movwf	6
  8568  1F56  3001               	movlw	1	; select bank3/4
  8569  1F57  0087               	movwf	7
  8570  1F58  300A               	movlw	10
  8571  1F59  0601               	xorwf	1,w
  8572  1F5A  1D03               	btfss	3,2
  8573  1F5B  2F67               	goto	l8753
  8574                           
  8575                           ;main.c: 160: readdata[readIdx] = 0;
  8576  1F5C  0852               	movf	_readIdx,w
  8577  1F5D  3ECD               	addlw	(low (_readdata| (0+256)))& (0+255)
  8578  1F5E  0086               	movwf	6
  8579  1F5F  3001               	movlw	1	; select bank3/4
  8580  1F60  0087               	movwf	7
  8581  1F61  0181               	clrf	1
  8582                           
  8583                           ;main.c: 161: cmdRead = 1;
  8584  1F62  3001               	movlw	1
  8585  1F63  0022               	movlb	2	; select bank2
  8586  1F64  00E0               	movwf	_cmdRead^(0+256)
  8587  1F65  3000               	movlw	0
  8588  1F66  00E1               	movwf	(_cmdRead^(0+256)+1)
  8589  1F67                     l8753:	
  8590                           
  8591                           ;main.c: 162: }
  8592                           ;main.c: 163: readIdx++;
  8593  1F67  3001               	movlw	1
  8594  1F68  0020               	movlb	0	; select bank0
  8595  1F69  07D2               	addwf	_readIdx,f
  8596  1F6A  3000               	movlw	0
  8597  1F6B  3DD3               	addwfc	_readIdx+1,f
  8598  1F6C                     l8755:	
  8599                           
  8600                           ;main.c: 164: }
  8601                           ;main.c: 167: if(cmdRead){
  8602  1F6C  0022               	movlb	2	; select bank2
  8603  1F6D  0860               	movf	_cmdRead^(0+256),w
  8604  1F6E  0461               	iorwf	(_cmdRead+1)^(0+256),w
  8605  1F6F  1903               	btfsc	3,2
  8606  1F70  2F85               	goto	l8769
  8607                           
  8608                           ;main.c: 169: parseCmd(readdata, &cmd_struct);
  8609  1F71  30B8               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8610  1F72  0021               	movlb	1	; select bank1
  8611  1F73  00DE               	movwf	??_main^(0+128)
  8612  1F74  085E               	movf	??_main^(0+128),w
  8613  1F75  0020               	movlb	0	; select bank0
  8614  1F76  00C5               	movwf	parseCmd@s
  8615  1F77  30CD               	movlw	(low (_readdata| (0+256)))& (0+255)
  8616  1F78  3185  256A  319F   	fcall	_parseCmd
  8617                           
  8618                           ;main.c: 171: cmdRead = 0;
  8619  1F7B  0022               	movlb	2	; select bank2
  8620  1F7C  01E0               	clrf	_cmdRead^(0+256)
  8621  1F7D  01E1               	clrf	(_cmdRead+1)^(0+256)
  8622                           
  8623                           ;main.c: 172: readIdx=0;
  8624  1F7E  0020               	movlb	0	; select bank0
  8625  1F7F  01D2               	clrf	_readIdx
  8626  1F80  01D3               	clrf	_readIdx+1
  8627                           
  8628                           ;main.c: 173: execCmd(&cmd_struct);
  8629  1F81  30B8               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8630  1F82  3183  2378  319F   	fcall	_execCmd
  8631  1F85                     l8769:	
  8632  1F85  0020               	movlb	0	; select bank0
  8633  1F86  0855               	movf	_motionType,w
  8634                           
  8635                           ; Switch size 1, requested type "space"
  8636                           ; Number of cases is 2, Range of values is 1 to 2
  8637                           ; switch strategies available:
  8638                           ; Name         Instructions Cycles
  8639                           ; simple_byte            7     4 (average)
  8640                           ; direct_byte           13     9 (fixed)
  8641                           ; jumptable            263     9 (fixed)
  8642                           ;	Chosen strategy is simple_byte
  8643  1F87  3A01               	xorlw	1	; case 1
  8644  1F88  1903               	skipnz
  8645  1F89  2F39               	goto	l8763
  8646  1F8A  3A03               	xorlw	3	; case 2
  8647  1F8B  1903               	skipnz
  8648  1F8C  2F3D               	goto	l8765
  8649  1F8D  2F40               	goto	l8743
  8650  1F8E  2F40               	goto	l8743
  8651  1F8F                     __end_of_main:	
  8652                           
  8653                           	psect	text1
  8654  056A                     __ptext1:	
  8655 ;; *************** function _parseCmd *****************
  8656 ;; Defined at:
  8657 ;;		line 5 in file "cmd_parser.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;  cmdString       1    wreg     PTR unsigned char 
  8660 ;;		 -> readdata(20), 
  8661 ;;  s               1   37[BANK0 ] PTR struct CMD_STRUCT
  8662 ;;		 -> cmd_struct(21), 
  8663 ;; Auto vars:     Size  Location     Type
  8664 ;;  cmdString       1   39[BANK0 ] PTR unsigned char 
  8665 ;;		 -> readdata(20), 
  8666 ;;  p               1   42[BANK0 ] PTR unsigned char 
  8667 ;;		 -> readdata(20), NULL(0), 
  8668 ;;  paramIter       2   40[BANK0 ] int 
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  1    wreg      void 
  8671 ;; Registers used:
  8672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8678 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8679 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8680 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8681 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8682 ;;Total ram usage:        6 bytes
  8683 ;; Hardware stack levels used:    1
  8684 ;; Hardware stack levels required when called:    9
  8685 ;; This function calls:
  8686 ;;		_atoi
  8687 ;;		_stricmp
  8688 ;;		_strtok
  8689 ;; This function is called by:
  8690 ;;		_main
  8691 ;; This function uses a non-reentrant model
  8692 ;;
  8693                           
  8694                           
  8695                           ;psect for function _parseCmd
  8696  056A                     _parseCmd:	
  8697                           
  8698                           ;incstack = 0
  8699                           ; Regs used in _parseCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8700                           ;parseCmd@cmdString stored from wreg
  8701  056A  0020               	movlb	0	; select bank0
  8702  056B  00C7               	movwf	parseCmd@cmdString
  8703                           
  8704                           ;cmd_parser.c: 6: int paramIter = 0;
  8705  056C  01C8               	clrf	parseCmd@paramIter
  8706  056D  01C9               	clrf	parseCmd@paramIter+1
  8707                           
  8708                           ;cmd_parser.c: 7: for (char *p = strtok(cmdString," "); p != (0); p = strtok((0), " ")){
  8709  056E  300D               	movlw	low ((STR_40+6)| (0+32768))
  8710  056F  00BF               	movwf	strtok@s2
  8711  0570  30AA               	movlw	high ((STR_40+6)| (0+32768))
  8712  0571  00C0               	movwf	strtok@s2+1
  8713  0572  0847               	movf	parseCmd@cmdString,w
  8714  0573                     L23:	
  8715  0573  319A  228D  3185   	fcall	_strtok
  8716  0576  0020               	movlb	0	; select bank0
  8717  0577  00C6               	movwf	??_parseCmd
  8718  0578  0846               	movf	??_parseCmd,w
  8719  0579  00CA               	movwf	parseCmd@p
  8720  057A  084A               	movf	parseCmd@p,w
  8721  057B  1903               	btfsc	3,2
  8722  057C  0008               	return
  8723                           
  8724                           ;cmd_parser.c: 9: if (paramIter == 0){
  8725  057D  0848               	movf	parseCmd@paramIter,w
  8726  057E  0449               	iorwf	parseCmd@paramIter+1,w
  8727  057F  1D03               	btfss	3,2
  8728  0580  2F0B               	goto	l6757
  8729                           
  8730                           ;cmd_parser.c: 10: if(stricmp(p, "rel") == 0)
  8731  0581  303B               	movlw	low (STR_58| (0+32768))
  8732  0582  00B3               	movwf	stricmp@s2
  8733  0583  30AA               	movlw	high (STR_58| (0+32768))
  8734  0584  00B4               	movwf	stricmp@s2+1
  8735  0585  084A               	movf	parseCmd@p,w
  8736  0586  3198  203D  3185   	fcall	_stricmp
  8737  0589  0020               	movlb	0	; select bank0
  8738  058A  0833               	movf	?_stricmp,w
  8739  058B  0434               	iorwf	?_stricmp+1,w
  8740  058C  1D03               	btfss	3,2
  8741  058D  2D90               	goto	l6659
  8742                           
  8743                           ;cmd_parser.c: 11: s->c = CMD_REL;
  8744  058E  3002               	movlw	2
  8745  058F  2EED               	goto	L22
  8746  0590                     l6659:	
  8747                           
  8748                           ;cmd_parser.c: 12: else if(stricmp(p, "abs") == 0)
  8749  0590  303F               	movlw	low (STR_59| (0+32768))
  8750  0591  00B3               	movwf	stricmp@s2
  8751  0592  30AA               	movlw	high (STR_59| (0+32768))
  8752  0593  00B4               	movwf	stricmp@s2+1
  8753  0594  084A               	movf	parseCmd@p,w
  8754  0595  3198  203D  3185   	fcall	_stricmp
  8755  0598  0020               	movlb	0	; select bank0
  8756  0599  0833               	movf	?_stricmp,w
  8757  059A  0434               	iorwf	?_stricmp+1,w
  8758  059B  1D03               	btfss	3,2
  8759  059C  2DA4               	goto	l6663
  8760                           
  8761                           ;cmd_parser.c: 13: s->c = CMD_ABS;
  8762  059D  0845               	movf	parseCmd@s,w
  8763  059E  0086               	movwf	6
  8764  059F  3001               	movlw	1	; select bank2/3
  8765  05A0  0087               	movwf	7
  8766  05A1  0181               	clrf	1
  8767  05A2  0A81               	incf	1,f
  8768  05A3  2F30               	goto	l6765
  8769  05A4                     l6663:	
  8770                           
  8771                           ;cmd_parser.c: 14: else if(stricmp(p, "pos") == 0)
  8772  05A4  3043               	movlw	low (STR_60| (0+32768))
  8773  05A5  00B3               	movwf	stricmp@s2
  8774  05A6  30AA               	movlw	high (STR_60| (0+32768))
  8775  05A7  00B4               	movwf	stricmp@s2+1
  8776  05A8  084A               	movf	parseCmd@p,w
  8777  05A9  3198  203D  3185   	fcall	_stricmp
  8778  05AC  0020               	movlb	0	; select bank0
  8779  05AD  0833               	movf	?_stricmp,w
  8780  05AE  0434               	iorwf	?_stricmp+1,w
  8781  05AF  1D03               	btfss	3,2
  8782  05B0  2DB3               	goto	l6667
  8783                           
  8784                           ;cmd_parser.c: 15: s->c = CMD_P;
  8785  05B1  3003               	movlw	3
  8786  05B2  2EED               	goto	L22
  8787  05B3                     l6667:	
  8788                           
  8789                           ;cmd_parser.c: 16: else if(stricmp(p,"s") == 0)
  8790  05B3  3041               	movlw	low ((STR_59+2)| (0+32768))
  8791  05B4  00B3               	movwf	stricmp@s2
  8792  05B5  30AA               	movlw	high ((STR_59+2)| (0+32768))
  8793  05B6  00B4               	movwf	stricmp@s2+1
  8794  05B7  084A               	movf	parseCmd@p,w
  8795  05B8  3198  203D  3185   	fcall	_stricmp
  8796  05BB  0020               	movlb	0	; select bank0
  8797  05BC  0833               	movf	?_stricmp,w
  8798  05BD  0434               	iorwf	?_stricmp+1,w
  8799  05BE  1D03               	btfss	3,2
  8800  05BF  2DC2               	goto	l6671
  8801                           
  8802                           ;cmd_parser.c: 17: s->c = CMD_STOP;
  8803  05C0  3004               	movlw	4
  8804  05C1  2EED               	goto	L22
  8805  05C2                     l6671:	
  8806                           
  8807                           ;cmd_parser.c: 18: else if(stricmp(p,"setA") == 0)
  8808  05C2  3022               	movlw	low (STR_62| (0+32768))
  8809  05C3  00B3               	movwf	stricmp@s2
  8810  05C4  30AA               	movlw	high (STR_62| (0+32768))
  8811  05C5  00B4               	movwf	stricmp@s2+1
  8812  05C6  084A               	movf	parseCmd@p,w
  8813  05C7  3198  203D  3185   	fcall	_stricmp
  8814  05CA  0020               	movlb	0	; select bank0
  8815  05CB  0833               	movf	?_stricmp,w
  8816  05CC  0434               	iorwf	?_stricmp+1,w
  8817  05CD  1D03               	btfss	3,2
  8818  05CE  2DD1               	goto	l6675
  8819                           
  8820                           ;cmd_parser.c: 19: s->c = CMD_SETA;
  8821  05CF  3006               	movlw	6
  8822  05D0  2EED               	goto	L22
  8823  05D1                     l6675:	
  8824                           
  8825                           ;cmd_parser.c: 20: else if(stricmp(p,"setM") == 0)
  8826  05D1  302C               	movlw	low (STR_63| (0+32768))
  8827  05D2  00B3               	movwf	stricmp@s2
  8828  05D3  30AA               	movlw	high (STR_63| (0+32768))
  8829  05D4  00B4               	movwf	stricmp@s2+1
  8830  05D5  084A               	movf	parseCmd@p,w
  8831  05D6  3198  203D  3185   	fcall	_stricmp
  8832  05D9  0020               	movlb	0	; select bank0
  8833  05DA  0833               	movf	?_stricmp,w
  8834  05DB  0434               	iorwf	?_stricmp+1,w
  8835  05DC  1D03               	btfss	3,2
  8836  05DD  2DE0               	goto	l6679
  8837                           
  8838                           ;cmd_parser.c: 21: s->c = CMD_SETM;
  8839  05DE  3007               	movlw	7
  8840  05DF  2EED               	goto	L22
  8841  05E0                     l6679:	
  8842                           
  8843                           ;cmd_parser.c: 22: else if(stricmp(p,"z") == 0)
  8844  05E0  3063               	movlw	low (STR_64| (0+32768))
  8845  05E1  00B3               	movwf	stricmp@s2
  8846  05E2  30AA               	movlw	high (STR_64| (0+32768))
  8847  05E3  00B4               	movwf	stricmp@s2+1
  8848  05E4  084A               	movf	parseCmd@p,w
  8849  05E5  3198  203D  3185   	fcall	_stricmp
  8850  05E8  0020               	movlb	0	; select bank0
  8851  05E9  0833               	movf	?_stricmp,w
  8852  05EA  0434               	iorwf	?_stricmp+1,w
  8853  05EB  1D03               	btfss	3,2
  8854  05EC  2DEF               	goto	l6683
  8855                           
  8856                           ;cmd_parser.c: 23: s->c = CMD_ZERO;
  8857  05ED  3008               	movlw	8
  8858  05EE  2EED               	goto	L22
  8859  05EF                     l6683:	
  8860                           
  8861                           ;cmd_parser.c: 24: else if(stricmp(p,"drvPeak") == 0)
  8862  05EF  30D7               	movlw	low (STR_65| (0+32768))
  8863  05F0  00B3               	movwf	stricmp@s2
  8864  05F1  30A9               	movlw	high (STR_65| (0+32768))
  8865  05F2  00B4               	movwf	stricmp@s2+1
  8866  05F3  084A               	movf	parseCmd@p,w
  8867  05F4  3198  203D  3185   	fcall	_stricmp
  8868  05F7  0020               	movlb	0	; select bank0
  8869  05F8  0833               	movf	?_stricmp,w
  8870  05F9  0434               	iorwf	?_stricmp+1,w
  8871  05FA  1D03               	btfss	3,2
  8872  05FB  2DFE               	goto	l6687
  8873                           
  8874                           ;cmd_parser.c: 25: s->c = CMD_DRV_PEAK;
  8875  05FC  3009               	movlw	9
  8876  05FD  2EED               	goto	L22
  8877  05FE                     l6687:	
  8878                           
  8879                           ;cmd_parser.c: 26: else if(stricmp(p,"drvGain") == 0)
  8880  05FE  30DF               	movlw	low (STR_66| (0+32768))
  8881  05FF  00B3               	movwf	stricmp@s2
  8882  0600  30A9               	movlw	high (STR_66| (0+32768))
  8883  0601  00B4               	movwf	stricmp@s2+1
  8884  0602  084A               	movf	parseCmd@p,w
  8885  0603  3198  203D  3185   	fcall	_stricmp
  8886  0606  0020               	movlb	0	; select bank0
  8887  0607  0833               	movf	?_stricmp,w
  8888  0608  0434               	iorwf	?_stricmp+1,w
  8889  0609  1D03               	btfss	3,2
  8890  060A  2E0D               	goto	l6691
  8891                           
  8892                           ;cmd_parser.c: 27: s->c = CMD_DRV_GAIN;
  8893  060B  300A               	movlw	10
  8894  060C  2EED               	goto	L22
  8895  060D                     l6691:	
  8896                           
  8897                           ;cmd_parser.c: 28: else if(stricmp(p,"piezoontime") == 0)
  8898  060D  3084               	movlw	low (STR_67| (0+32768))
  8899  060E  00B3               	movwf	stricmp@s2
  8900  060F  30A9               	movlw	high (STR_67| (0+32768))
  8901  0610  00B4               	movwf	stricmp@s2+1
  8902  0611  084A               	movf	parseCmd@p,w
  8903  0612  3198  203D  3185   	fcall	_stricmp
  8904  0615  0020               	movlb	0	; select bank0
  8905  0616  0833               	movf	?_stricmp,w
  8906  0617  0434               	iorwf	?_stricmp+1,w
  8907  0618  1D03               	btfss	3,2
  8908  0619  2E1C               	goto	l6695
  8909                           
  8910                           ;cmd_parser.c: 29: s->c = CMD_DRV_PIEZOONTIME;
  8911  061A  300B               	movlw	11
  8912  061B  2EED               	goto	L22
  8913  061C                     l6695:	
  8914                           
  8915                           ;cmd_parser.c: 30: else if(stricmp(p,"heaterpretime") == 0)
  8916  061C  305D               	movlw	low (STR_68| (0+32768))
  8917  061D  00B3               	movwf	stricmp@s2
  8918  061E  30A9               	movlw	high (STR_68| (0+32768))
  8919  061F  00B4               	movwf	stricmp@s2+1
  8920  0620  084A               	movf	parseCmd@p,w
  8921  0621  3198  203D  3185   	fcall	_stricmp
  8922  0624  0020               	movlb	0	; select bank0
  8923  0625  0833               	movf	?_stricmp,w
  8924  0626  0434               	iorwf	?_stricmp+1,w
  8925  0627  1D03               	btfss	3,2
  8926  0628  2E2B               	goto	l6699
  8927                           
  8928                           ;cmd_parser.c: 31: s->c = CMD_HEATER_PRETIME;
  8929  0629  300C               	movlw	12
  8930  062A  2EED               	goto	L22
  8931  062B                     l6699:	
  8932                           
  8933                           ;cmd_parser.c: 32: else if(stricmp(p,"heaterposttime") == 0)
  8934  062B  303F               	movlw	low (STR_69| (0+32768))
  8935  062C  00B3               	movwf	stricmp@s2
  8936  062D  30A9               	movlw	high (STR_69| (0+32768))
  8937  062E  00B4               	movwf	stricmp@s2+1
  8938  062F  084A               	movf	parseCmd@p,w
  8939  0630  3198  203D  3185   	fcall	_stricmp
  8940  0633  0020               	movlb	0	; select bank0
  8941  0634  0833               	movf	?_stricmp,w
  8942  0635  0434               	iorwf	?_stricmp+1,w
  8943  0636  1D03               	btfss	3,2
  8944  0637  2E3A               	goto	l6703
  8945                           
  8946                           ;cmd_parser.c: 33: s->c = CMD_HEATER_POSTTIME;
  8947  0638  300D               	movlw	13
  8948  0639  2EED               	goto	L22
  8949  063A                     l6703:	
  8950                           
  8951                           ;cmd_parser.c: 34: else if(stricmp(p,"heater1off") == 0)
  8952  063A  3090               	movlw	low (STR_70| (0+32768))
  8953  063B  00B3               	movwf	stricmp@s2
  8954  063C  30A9               	movlw	high (STR_70| (0+32768))
  8955  063D  00B4               	movwf	stricmp@s2+1
  8956  063E  084A               	movf	parseCmd@p,w
  8957  063F  3198  203D  3185   	fcall	_stricmp
  8958  0642  0020               	movlb	0	; select bank0
  8959  0643  0833               	movf	?_stricmp,w
  8960  0644  0434               	iorwf	?_stricmp+1,w
  8961  0645  1D03               	btfss	3,2
  8962  0646  2E49               	goto	l6707
  8963                           
  8964                           ;cmd_parser.c: 35: s->c = CMD_HEATER_H1OFF;
  8965  0647  300E               	movlw	14
  8966  0648  2EED               	goto	L22
  8967  0649                     l6707:	
  8968                           
  8969                           ;cmd_parser.c: 36: else if(stricmp(p,"heater2on") == 0)
  8970  0649  30B1               	movlw	low (STR_71| (0+32768))
  8971  064A  00B3               	movwf	stricmp@s2
  8972  064B  30A9               	movlw	high (STR_71| (0+32768))
  8973  064C  00B4               	movwf	stricmp@s2+1
  8974  064D  084A               	movf	parseCmd@p,w
  8975  064E  3198  203D  3185   	fcall	_stricmp
  8976  0651  0020               	movlb	0	; select bank0
  8977  0652  0833               	movf	?_stricmp,w
  8978  0653  0434               	iorwf	?_stricmp+1,w
  8979  0654  1D03               	btfss	3,2
  8980  0655  2E58               	goto	l6711
  8981                           
  8982                           ;cmd_parser.c: 37: s->c = CMD_HEATER_H2ON;
  8983  0656  300F               	movlw	15
  8984  0657  2EED               	goto	L22
  8985  0658                     l6711:	
  8986                           
  8987                           ;cmd_parser.c: 38: else if(stricmp(p,"ledgain") == 0)
  8988  0658  30E7               	movlw	low (STR_72| (0+32768))
  8989  0659  00B3               	movwf	stricmp@s2
  8990  065A  30A9               	movlw	high (STR_72| (0+32768))
  8991  065B  00B4               	movwf	stricmp@s2+1
  8992  065C  084A               	movf	parseCmd@p,w
  8993  065D  3198  203D  3185   	fcall	_stricmp
  8994  0660  0020               	movlb	0	; select bank0
  8995  0661  0833               	movf	?_stricmp,w
  8996  0662  0434               	iorwf	?_stricmp+1,w
  8997  0663  1D03               	btfss	3,2
  8998  0664  2E67               	goto	l6715
  8999                           
  9000                           ;cmd_parser.c: 39: s->c = CMD_HEATER_GAIN;
  9001  0665  3010               	movlw	16
  9002  0666  2EED               	goto	L22
  9003  0667                     l6715:	
  9004                           
  9005                           ;cmd_parser.c: 40: else if(stricmp(p,"ledpwr") == 0)
  9006  0667  3016               	movlw	low (STR_73| (0+32768))
  9007  0668  00B3               	movwf	stricmp@s2
  9008  0669  30AA               	movlw	high (STR_73| (0+32768))
  9009  066A  00B4               	movwf	stricmp@s2+1
  9010  066B  084A               	movf	parseCmd@p,w
  9011  066C  3198  203D  3185   	fcall	_stricmp
  9012  066F  0020               	movlb	0	; select bank0
  9013  0670  0833               	movf	?_stricmp,w
  9014  0671  0434               	iorwf	?_stricmp+1,w
  9015  0672  1D03               	btfss	3,2
  9016  0673  2E76               	goto	l6719
  9017                           
  9018                           ;cmd_parser.c: 41: s->c = CMD_HEATER_PWR;
  9019  0674  3011               	movlw	17
  9020  0675  2EED               	goto	L22
  9021  0676                     l6719:	
  9022                           
  9023                           ;cmd_parser.c: 42: else if(stricmp(p,"toggleheater") == 0)
  9024  0676  306B               	movlw	low (STR_74| (0+32768))
  9025  0677  00B3               	movwf	stricmp@s2
  9026  0678  30A9               	movlw	high (STR_74| (0+32768))
  9027  0679  00B4               	movwf	stricmp@s2+1
  9028  067A  084A               	movf	parseCmd@p,w
  9029  067B  3198  203D  3185   	fcall	_stricmp
  9030  067E  0020               	movlb	0	; select bank0
  9031  067F  0833               	movf	?_stricmp,w
  9032  0680  0434               	iorwf	?_stricmp+1,w
  9033  0681  1D03               	btfss	3,2
  9034  0682  2E85               	goto	l6723
  9035                           
  9036                           ;cmd_parser.c: 43: s->c = CMD_HEATER_TOGGLE;
  9037  0683  3012               	movlw	18
  9038  0684  2EED               	goto	L22
  9039  0685                     l6723:	
  9040                           
  9041                           ;cmd_parser.c: 44: else if(stricmp(p,"timeheater") == 0)
  9042  0685  309B               	movlw	low (STR_75| (0+32768))
  9043  0686  00B3               	movwf	stricmp@s2
  9044  0687  30A9               	movlw	high (STR_75| (0+32768))
  9045  0688  00B4               	movwf	stricmp@s2+1
  9046  0689  084A               	movf	parseCmd@p,w
  9047  068A  3198  203D  3185   	fcall	_stricmp
  9048  068D  0020               	movlb	0	; select bank0
  9049  068E  0833               	movf	?_stricmp,w
  9050  068F  0434               	iorwf	?_stricmp+1,w
  9051  0690  1D03               	btfss	3,2
  9052  0691  2E94               	goto	l6727
  9053                           
  9054                           ;cmd_parser.c: 45: s->c = CMD_HEATER_TIMED;
  9055  0692  3013               	movlw	19
  9056  0693  2EED               	goto	L22
  9057  0694                     l6727:	
  9058                           
  9059                           ;cmd_parser.c: 46: else if(stricmp(p,"getA") == 0)
  9060  0694  301D               	movlw	low (STR_76| (0+32768))
  9061  0695  00B3               	movwf	stricmp@s2
  9062  0696  30AA               	movlw	high (STR_76| (0+32768))
  9063  0697  00B4               	movwf	stricmp@s2+1
  9064  0698  084A               	movf	parseCmd@p,w
  9065  0699  3198  203D  3185   	fcall	_stricmp
  9066  069C  0020               	movlb	0	; select bank0
  9067  069D  0833               	movf	?_stricmp,w
  9068  069E  0434               	iorwf	?_stricmp+1,w
  9069  069F  1D03               	btfss	3,2
  9070  06A0  2EA3               	goto	l6731
  9071                           
  9072                           ;cmd_parser.c: 47: s->c = CMD_GET_ACTIVE;
  9073  06A1  3014               	movlw	20
  9074  06A2  2EED               	goto	L22
  9075  06A3                     l6731:	
  9076                           
  9077                           ;cmd_parser.c: 48: else if(stricmp(p,"getM") == 0)
  9078  06A3  3027               	movlw	low (STR_77| (0+32768))
  9079  06A4  00B3               	movwf	stricmp@s2
  9080  06A5  30AA               	movlw	high (STR_77| (0+32768))
  9081  06A6  00B4               	movwf	stricmp@s2+1
  9082  06A7  084A               	movf	parseCmd@p,w
  9083  06A8  3198  203D  3185   	fcall	_stricmp
  9084  06AB  0020               	movlb	0	; select bank0
  9085  06AC  0833               	movf	?_stricmp,w
  9086  06AD  0434               	iorwf	?_stricmp+1,w
  9087  06AE  1D03               	btfss	3,2
  9088  06AF  2EB2               	goto	l6735
  9089                           
  9090                           ;cmd_parser.c: 49: s->c = CMD_GET_MOVABLE;
  9091  06B0  3015               	movlw	21
  9092  06B1  2EED               	goto	L22
  9093  06B2                     l6735:	
  9094                           
  9095                           ;cmd_parser.c: 50: else if(stricmp(p,"mstatus") == 0)
  9096  06B2  30EF               	movlw	low (STR_78| (0+32768))
  9097  06B3  00B3               	movwf	stricmp@s2
  9098  06B4  30A9               	movlw	high (STR_78| (0+32768))
  9099  06B5  00B4               	movwf	stricmp@s2+1
  9100  06B6  084A               	movf	parseCmd@p,w
  9101  06B7  3198  203D  3185   	fcall	_stricmp
  9102  06BA  0020               	movlb	0	; select bank0
  9103  06BB  0833               	movf	?_stricmp,w
  9104  06BC  0434               	iorwf	?_stricmp+1,w
  9105  06BD  1D03               	btfss	3,2
  9106  06BE  2EC1               	goto	l6739
  9107                           
  9108                           ;cmd_parser.c: 51: s->c = CMD_MOTION_STATUS;
  9109  06BF  3016               	movlw	22
  9110  06C0  2EED               	goto	L22
  9111  06C1                     l6739:	
  9112                           
  9113                           ;cmd_parser.c: 52: else if(stricmp(p,"domove") == 0)
  9114  06C1  300F               	movlw	low (STR_79| (0+32768))
  9115  06C2  00B3               	movwf	stricmp@s2
  9116  06C3  30AA               	movlw	high (STR_79| (0+32768))
  9117  06C4  00B4               	movwf	stricmp@s2+1
  9118  06C5  084A               	movf	parseCmd@p,w
  9119  06C6  3198  203D  3185   	fcall	_stricmp
  9120  06C9  0020               	movlb	0	; select bank0
  9121  06CA  0833               	movf	?_stricmp,w
  9122  06CB  0434               	iorwf	?_stricmp+1,w
  9123  06CC  1D03               	btfss	3,2
  9124  06CD  2ED0               	goto	l6743
  9125                           
  9126                           ;cmd_parser.c: 53: s->c = CMD_DOMOVE;
  9127  06CE  3017               	movlw	23
  9128  06CF  2EED               	goto	L22
  9129  06D0                     l6743:	
  9130                           
  9131                           ;cmd_parser.c: 54: else if(stricmp(p,"comm") == 0)
  9132  06D0  3036               	movlw	low (STR_80| (0+32768))
  9133  06D1  00B3               	movwf	stricmp@s2
  9134  06D2  30AA               	movlw	high (STR_80| (0+32768))
  9135  06D3  00B4               	movwf	stricmp@s2+1
  9136  06D4  084A               	movf	parseCmd@p,w
  9137  06D5  3198  203D  3185   	fcall	_stricmp
  9138  06D8  0020               	movlb	0	; select bank0
  9139  06D9  0833               	movf	?_stricmp,w
  9140  06DA  0434               	iorwf	?_stricmp+1,w
  9141  06DB  1D03               	btfss	3,2
  9142  06DC  2EDF               	goto	l6747
  9143                           
  9144                           ;cmd_parser.c: 55: s->c = CMD_COMM_CHECK;
  9145  06DD  3018               	movlw	24
  9146  06DE  2EED               	goto	L22
  9147  06DF                     l6747:	
  9148                           
  9149                           ;cmd_parser.c: 56: else if(stricmp(p,"ping") == 0)
  9150  06DF  3031               	movlw	low (STR_81| (0+32768))
  9151  06E0  00B3               	movwf	stricmp@s2
  9152  06E1  30AA               	movlw	high (STR_81| (0+32768))
  9153  06E2  00B4               	movwf	stricmp@s2+1
  9154  06E3  084A               	movf	parseCmd@p,w
  9155  06E4  3198  203D  3185   	fcall	_stricmp
  9156  06E7  0020               	movlb	0	; select bank0
  9157  06E8  0833               	movf	?_stricmp,w
  9158  06E9  0434               	iorwf	?_stricmp+1,w
  9159  06EA  1D03               	btfss	3,2
  9160  06EB  2EF5               	goto	l6751
  9161                           
  9162                           ;cmd_parser.c: 57: s->c = CMD_PING;
  9163  06EC  3019               	movlw	25
  9164  06ED                     L22:	
  9165  06ED  00C6               	movwf	??_parseCmd
  9166  06EE  0845               	movf	parseCmd@s,w
  9167  06EF  0086               	movwf	6
  9168  06F0  3001               	movlw	1	; select bank2/3
  9169  06F1  0087               	movwf	7
  9170  06F2  0846               	movf	??_parseCmd,w
  9171  06F3  0081               	movwf	1
  9172  06F4  2F30               	goto	l6765
  9173  06F5                     l6751:	
  9174                           
  9175                           ;cmd_parser.c: 58: else if(stricmp(p,"softreset") == 0)
  9176  06F5  30BB               	movlw	low (STR_82| (0+32768))
  9177  06F6  00B3               	movwf	stricmp@s2
  9178  06F7  30A9               	movlw	high (STR_82| (0+32768))
  9179  06F8  00B4               	movwf	stricmp@s2+1
  9180  06F9  084A               	movf	parseCmd@p,w
  9181  06FA  3198  203D  3185   	fcall	_stricmp
  9182  06FD  0020               	movlb	0	; select bank0
  9183  06FE  0833               	movf	?_stricmp,w
  9184  06FF  0434               	iorwf	?_stricmp+1,w
  9185  0700  1D03               	btfss	3,2
  9186  0701  2F04               	goto	l6755
  9187  0702  0001               	reset	;# 
  9188  0703  2F30               	goto	l6765
  9189  0704                     l6755:	
  9190                           
  9191                           ;cmd_parser.c: 61: else
  9192                           ;cmd_parser.c: 62: s->c = CMD_NONE;
  9193  0704  0020               	movlb	0	; select bank0
  9194  0705  0845               	movf	parseCmd@s,w
  9195  0706  0086               	movwf	6
  9196  0707  3001               	movlw	1	; select bank2/3
  9197  0708  0087               	movwf	7
  9198  0709  0181               	clrf	1
  9199                           
  9200                           ;cmd_parser.c: 63: }
  9201  070A  2F30               	goto	l6765
  9202  070B                     l6757:	
  9203                           
  9204                           ;cmd_parser.c: 64: else if(paramIter == 1){
  9205  070B  0348               	decf	parseCmd@paramIter,w
  9206  070C  0449               	iorwf	parseCmd@paramIter+1,w
  9207  070D  1D03               	btfss	3,2
  9208  070E  2F1D               	goto	l6761
  9209                           
  9210                           ;cmd_parser.c: 65: s->p1.paramI = atoi(p);
  9211  070F  084A               	movf	parseCmd@p,w
  9212  0710  319F  278F  3185   	fcall	_atoi
  9213  0713  0020               	movlb	0	; select bank0
  9214  0714  0A45               	incf	parseCmd@s,w
  9215  0715  0086               	movwf	6
  9216  0716  3001               	movlw	1	; select bank2/3
  9217  0717  0087               	movwf	7
  9218  0718  0837               	movf	?_atoi,w
  9219  0719  3FC0               	movwi [0]fsr1
  9220  071A  0838               	movf	?_atoi+1,w
  9221  071B  3FC1               	movwi [1]fsr1
  9222                           
  9223                           ;cmd_parser.c: 66: }
  9224  071C  2F30               	goto	l6765
  9225  071D                     l6761:	
  9226                           
  9227                           ;cmd_parser.c: 67: else if(paramIter == 2){
  9228  071D  3002               	movlw	2
  9229  071E  0648               	xorwf	parseCmd@paramIter,w
  9230  071F  0449               	iorwf	parseCmd@paramIter+1,w
  9231  0720  1D03               	btfss	3,2
  9232  0721  2F30               	goto	l6765
  9233                           
  9234                           ;cmd_parser.c: 69: s->p2.paramI = atoi(p);
  9235  0722  084A               	movf	parseCmd@p,w
  9236  0723  319F  278F  3185   	fcall	_atoi
  9237  0726  0020               	movlb	0	; select bank0
  9238  0727  0845               	movf	parseCmd@s,w
  9239  0728  3E0B               	addlw	11
  9240  0729  0086               	movwf	6
  9241  072A  3001               	movlw	1	; select bank2/3
  9242  072B  0087               	movwf	7
  9243  072C  0837               	movf	?_atoi,w
  9244  072D  3FC0               	movwi [0]fsr1
  9245  072E  0838               	movf	?_atoi+1,w
  9246  072F  3FC1               	movwi [1]fsr1
  9247  0730                     l6765:	
  9248                           
  9249                           ;cmd_parser.c: 70: }
  9250                           ;cmd_parser.c: 72: paramIter++;
  9251  0730  3001               	movlw	1
  9252  0731  0020               	movlb	0	; select bank0
  9253  0732  07C8               	addwf	parseCmd@paramIter,f
  9254  0733  3000               	movlw	0
  9255  0734  3DC9               	addwfc	parseCmd@paramIter+1,f
  9256  0735  300D               	movlw	low ((STR_40+6)| (0+32768))
  9257  0736  00BF               	movwf	strtok@s2
  9258  0737  30AA               	movlw	high ((STR_40+6)| (0+32768))
  9259  0738  00C0               	movwf	strtok@s2+1
  9260  0739  3000               	movlw	0
  9261  073A  2D73               	goto	L23
  9262  073B                     __end_of_parseCmd:	
  9263                           
  9264                           	psect	text2
  9265  1A8D                     __ptext2:	
  9266 ;; *************** function _strtok *****************
  9267 ;; Defined at:
  9268 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtok.c"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;  s1              1    wreg     PTR unsigned char 
  9271 ;;		 -> readdata(20), NULL(0), 
  9272 ;;  s2              2   31[BANK0 ] PTR const unsigned char 
  9273 ;;		 -> STR_57(2), STR_56(2), 
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;  s1              1   36[BANK0 ] PTR unsigned char 
  9276 ;;		 -> readdata(20), NULL(0), 
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      PTR unsigned char 
  9279 ;; Registers used:
  9280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9288 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9289 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9290 ;;Total ram usage:        6 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; Hardware stack levels required when called:    8
  9293 ;; This function calls:
  9294 ;;		_strcspn
  9295 ;;		_strspn
  9296 ;; This function is called by:
  9297 ;;		_parseCmd
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           
  9302                           ;psect for function _strtok
  9303  1A8D                     _strtok:	
  9304                           
  9305                           ;incstack = 0
  9306                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9307                           ;strtok@s1 stored from wreg
  9308  1A8D  0020               	movlb	0	; select bank0
  9309  1A8E  00C4               	movwf	strtok@s1
  9310  1A8F  0844               	movf	strtok@s1,w
  9311  1A90  1D03               	btfss	3,2
  9312  1A91  2A96               	goto	l6337
  9313  1A92  0854               	movf	strtok@sp,w
  9314  1A93  00C1               	movwf	??_strtok
  9315  1A94  0841               	movf	??_strtok,w
  9316  1A95  00C4               	movwf	strtok@s1
  9317  1A96                     l6337:	
  9318  1A96  0844               	movf	strtok@s1,w
  9319  1A97  1D03               	btfss	3,2
  9320  1A98  2A9B               	goto	l6343
  9321  1A99  3000               	movlw	0
  9322  1A9A  0008               	return
  9323  1A9B                     l6343:	
  9324  1A9B  0840               	movf	strtok@s2+1,w
  9325  1A9C  00B9               	movwf	strspn@s2+1
  9326  1A9D  083F               	movf	strtok@s2,w
  9327  1A9E  00B8               	movwf	strspn@s2
  9328  1A9F  0844               	movf	strtok@s1,w
  9329  1AA0  31A7  27D0  319A   	fcall	_strspn
  9330  1AA3  0020               	movlb	0	; select bank0
  9331  1AA4  0838               	movf	?_strspn,w
  9332  1AA5  00C1               	movwf	??_strtok
  9333  1AA6  0841               	movf	??_strtok,w
  9334  1AA7  07C4               	addwf	strtok@s1,f
  9335  1AA8  0844               	movf	strtok@s1,w
  9336  1AA9  0086               	movwf	6
  9337  1AAA  3001               	movlw	1	; select bank2/3
  9338  1AAB  0087               	movwf	7
  9339  1AAC  0801               	movf	1,w
  9340  1AAD  1D03               	btfss	3,2
  9341  1AAE  2AB2               	goto	l6351
  9342  1AAF  01D4               	clrf	strtok@sp
  9343  1AB0  3000               	movlw	0
  9344  1AB1  0008               	return
  9345  1AB2                     l6351:	
  9346  1AB2  0840               	movf	strtok@s2+1,w
  9347  1AB3  00B9               	movwf	strcspn@s2+1
  9348  1AB4  083F               	movf	strtok@s2,w
  9349  1AB5  00B8               	movwf	strcspn@s2
  9350  1AB6  0844               	movf	strtok@s1,w
  9351  1AB7  31A7  27A0  319A   	fcall	_strcspn
  9352  1ABA  0020               	movlb	0	; select bank0
  9353  1ABB  0838               	movf	?_strcspn,w
  9354  1ABC  00C1               	movwf	??_strtok
  9355  1ABD  0839               	movf	?_strcspn+1,w
  9356  1ABE  00C2               	movwf	??_strtok+1
  9357  1ABF  0844               	movf	strtok@s1,w
  9358  1AC0  0741               	addwf	??_strtok,w
  9359  1AC1  00C3               	movwf	??_strtok+2
  9360  1AC2  0843               	movf	??_strtok+2,w
  9361  1AC3  00D4               	movwf	strtok@sp
  9362  1AC4  0854               	movf	strtok@sp,w
  9363  1AC5  0086               	movwf	6
  9364  1AC6  3001               	movlw	1	; select bank2/3
  9365  1AC7  0087               	movwf	7
  9366  1AC8  0801               	movf	1,w
  9367  1AC9  1903               	btfsc	3,2
  9368  1ACA  2AD5               	goto	l6359
  9369  1ACB  0854               	movf	strtok@sp,w
  9370  1ACC  0086               	movwf	6
  9371  1ACD  3001               	movlw	1	; select bank2/3
  9372  1ACE  0087               	movwf	7
  9373  1ACF  0181               	clrf	1
  9374  1AD0  3001               	movlw	1
  9375  1AD1  00C1               	movwf	??_strtok
  9376  1AD2  0841               	movf	??_strtok,w
  9377  1AD3  07D4               	addwf	strtok@sp,f
  9378  1AD4  2AD6               	goto	l6361
  9379  1AD5                     l6359:	
  9380  1AD5  01D4               	clrf	strtok@sp
  9381  1AD6                     l6361:	
  9382  1AD6  0844               	movf	strtok@s1,w
  9383  1AD7  0008               	return
  9384  1AD8                     __end_of_strtok:	
  9385                           
  9386                           	psect	text3
  9387  27D0                     __ptext3:	
  9388 ;; *************** function _strspn *****************
  9389 ;; Defined at:
  9390 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strspn.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  s1              1    wreg     PTR const unsigned char 
  9393 ;;		 -> readdata(20), NULL(0), 
  9394 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9395 ;;		 -> STR_57(2), STR_56(2), 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9398 ;;		 -> readdata(20), NULL(0), 
  9399 ;;  i               2   28[BANK0 ] unsigned int 
  9400 ;; Return value:  Size  Location     Type
  9401 ;;                  2   24[BANK0 ] unsigned int 
  9402 ;; Registers used:
  9403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9404 ;; Tracked objects:
  9405 ;;		On entry : 0/0
  9406 ;;		On exit  : 0/0
  9407 ;;		Unchanged: 0/0
  9408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9409 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9410 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9411 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9412 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9413 ;;Total ram usage:        7 bytes
  9414 ;; Hardware stack levels used:    1
  9415 ;; Hardware stack levels required when called:    7
  9416 ;; This function calls:
  9417 ;;		_strchr
  9418 ;; This function is called by:
  9419 ;;		_strtok
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           
  9424                           ;psect for function _strspn
  9425  27D0                     _strspn:	
  9426                           
  9427                           ;incstack = 0
  9428                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9429                           ;strspn@s1 stored from wreg
  9430  27D0  0020               	movlb	0	; select bank0
  9431  27D1  00BE               	movwf	strspn@s1
  9432  27D2  01BC               	clrf	strspn@i
  9433  27D3  01BD               	clrf	strspn@i+1
  9434  27D4  2FDD               	goto	l5795
  9435  27D5                     l5793:	
  9436  27D5  3001               	movlw	1
  9437  27D6  00BA               	movwf	??_strspn
  9438  27D7  083A               	movf	??_strspn,w
  9439  27D8  07BE               	addwf	strspn@s1,f
  9440  27D9  3001               	movlw	1
  9441  27DA  07BC               	addwf	strspn@i,f
  9442  27DB  3000               	movlw	0
  9443  27DC  3DBD               	addwfc	strspn@i+1,f
  9444  27DD                     l5795:	
  9445  27DD  083E               	movf	strspn@s1,w
  9446  27DE  0086               	movwf	6
  9447  27DF  3001               	movlw	1	; select bank2/3
  9448  27E0  0087               	movwf	7
  9449  27E1  0801               	movf	1,w
  9450  27E2  1903               	btfsc	3,2
  9451  27E3  2FFB               	goto	l5799
  9452  27E4  0839               	movf	strspn@s2+1,w
  9453  27E5  00B2               	movwf	strchr@ptr+1
  9454  27E6  0838               	movf	strspn@s2,w
  9455  27E7  00B1               	movwf	strchr@ptr
  9456  27E8  083E               	movf	strspn@s1,w
  9457  27E9  0086               	movwf	6
  9458  27EA  3001               	movlw	1	; select bank2/3
  9459  27EB  0087               	movwf	7
  9460  27EC  0801               	movf	1,w
  9461  27ED  00BA               	movwf	??_strspn
  9462  27EE  01BB               	clrf	??_strspn+1
  9463  27EF  083A               	movf	??_strspn,w
  9464  27F0  00B3               	movwf	strchr@chr
  9465  27F1  083B               	movf	??_strspn+1,w
  9466  27F2  00B4               	movwf	strchr@chr+1
  9467  27F3  31A3  23F0  31A7   	fcall	_strchr
  9468  27F6  0020               	movlb	0	; select bank0
  9469  27F7  0831               	movf	?_strchr,w
  9470  27F8  0432               	iorwf	?_strchr+1,w
  9471  27F9  1D03               	btfss	3,2
  9472  27FA  2FD5               	goto	l5793
  9473  27FB                     l5799:	
  9474  27FB  083D               	movf	strspn@i+1,w
  9475  27FC  00B9               	movwf	?_strspn+1
  9476  27FD  083C               	movf	strspn@i,w
  9477  27FE  00B8               	movwf	?_strspn
  9478  27FF  0008               	return
  9479  2800                     __end_of_strspn:	
  9480                           
  9481                           	psect	text4
  9482  27A0                     __ptext4:	
  9483 ;; *************** function _strcspn *****************
  9484 ;; Defined at:
  9485 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcspn.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;  s1              1    wreg     PTR const unsigned char 
  9488 ;;		 -> readdata(20), NULL(0), 
  9489 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9490 ;;		 -> STR_57(2), STR_56(2), 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9493 ;;		 -> readdata(20), NULL(0), 
  9494 ;;  i               2   28[BANK0 ] unsigned int 
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  2   24[BANK0 ] unsigned int 
  9497 ;; Registers used:
  9498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9504 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9505 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9506 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9507 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9508 ;;Total ram usage:        7 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; Hardware stack levels required when called:    7
  9511 ;; This function calls:
  9512 ;;		_strchr
  9513 ;; This function is called by:
  9514 ;;		_strtok
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           
  9519                           ;psect for function _strcspn
  9520  27A0                     _strcspn:	
  9521                           
  9522                           ;incstack = 0
  9523                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9524                           ;strcspn@s1 stored from wreg
  9525  27A0  0020               	movlb	0	; select bank0
  9526  27A1  00BE               	movwf	strcspn@s1
  9527  27A2  01BC               	clrf	strcspn@i
  9528  27A3  01BD               	clrf	strcspn@i+1
  9529  27A4  2FAD               	goto	l5807
  9530  27A5                     l5805:	
  9531  27A5  3001               	movlw	1
  9532  27A6  00BA               	movwf	??_strcspn
  9533  27A7  083A               	movf	??_strcspn,w
  9534  27A8  07BE               	addwf	strcspn@s1,f
  9535  27A9  3001               	movlw	1
  9536  27AA  07BC               	addwf	strcspn@i,f
  9537  27AB  3000               	movlw	0
  9538  27AC  3DBD               	addwfc	strcspn@i+1,f
  9539  27AD                     l5807:	
  9540  27AD  083E               	movf	strcspn@s1,w
  9541  27AE  0086               	movwf	6
  9542  27AF  3001               	movlw	1	; select bank2/3
  9543  27B0  0087               	movwf	7
  9544  27B1  0801               	movf	1,w
  9545  27B2  1903               	btfsc	3,2
  9546  27B3  2FCB               	goto	l5811
  9547  27B4  0839               	movf	strcspn@s2+1,w
  9548  27B5  00B2               	movwf	strchr@ptr+1
  9549  27B6  0838               	movf	strcspn@s2,w
  9550  27B7  00B1               	movwf	strchr@ptr
  9551  27B8  083E               	movf	strcspn@s1,w
  9552  27B9  0086               	movwf	6
  9553  27BA  3001               	movlw	1	; select bank2/3
  9554  27BB  0087               	movwf	7
  9555  27BC  0801               	movf	1,w
  9556  27BD  00BA               	movwf	??_strcspn
  9557  27BE  01BB               	clrf	??_strcspn+1
  9558  27BF  083A               	movf	??_strcspn,w
  9559  27C0  00B3               	movwf	strchr@chr
  9560  27C1  083B               	movf	??_strcspn+1,w
  9561  27C2  00B4               	movwf	strchr@chr+1
  9562  27C3  31A3  23F0  31A7   	fcall	_strchr
  9563  27C6  0020               	movlb	0	; select bank0
  9564  27C7  0831               	movf	?_strchr,w
  9565  27C8  0432               	iorwf	?_strchr+1,w
  9566  27C9  1903               	btfsc	3,2
  9567  27CA  2FA5               	goto	l5805
  9568  27CB                     l5811:	
  9569  27CB  083D               	movf	strcspn@i+1,w
  9570  27CC  00B9               	movwf	?_strcspn+1
  9571  27CD  083C               	movf	strcspn@i,w
  9572  27CE  00B8               	movwf	?_strcspn
  9573  27CF  0008               	return
  9574  27D0                     __end_of_strcspn:	
  9575                           
  9576                           	psect	text5
  9577  23F0                     __ptext5:	
  9578 ;; *************** function _strchr *****************
  9579 ;; Defined at:
  9580 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;  ptr             2   17[BANK0 ] PTR const unsigned char 
  9583 ;;		 -> STR_57(2), STR_56(2), 
  9584 ;;  chr             2   19[BANK0 ] int 
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;		None
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  2   17[BANK0 ] PTR unsigned char 
  9589 ;; Registers used:
  9590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9596 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9598 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9599 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9600 ;;Total ram usage:        7 bytes
  9601 ;; Hardware stack levels used:    1
  9602 ;; Hardware stack levels required when called:    6
  9603 ;; This function calls:
  9604 ;;		Nothing
  9605 ;; This function is called by:
  9606 ;;		_strcspn
  9607 ;;		_strspn
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           
  9611                           
  9612                           ;psect for function _strchr
  9613  23F0                     _strchr:	
  9614  23F0                     l2092:	
  9615                           ;incstack = 0
  9616                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  9617                           
  9618  23F0  0020               	movlb	0	; select bank0
  9619  23F1  0831               	movf	strchr@ptr,w
  9620  23F2  0084               	movwf	4
  9621  23F3  0832               	movf	strchr@ptr+1,w
  9622  23F4  0085               	movwf	5
  9623  23F5  0800               	movf	0,w	;code access
  9624  23F6  0633               	xorwf	strchr@chr,w
  9625  23F7  1903               	btfsc	3,2
  9626  23F8  0008               	return
  9627  23F9  0832               	movf	strchr@ptr+1,w
  9628  23FA  00B6               	movwf	??_strchr+1
  9629  23FB  0831               	movf	strchr@ptr,w
  9630  23FC  00B5               	movwf	??_strchr
  9631  23FD  0AB1               	incf	strchr@ptr,f
  9632  23FE  1903               	skipnz
  9633  23FF  0AB2               	incf	strchr@ptr+1,f
  9634  2400  0835               	movf	??_strchr,w
  9635  2401  0084               	movwf	4
  9636  2402  0836               	movf	??_strchr+1,w
  9637  2403  0085               	movwf	5
  9638  2404  0012               	moviw fsr0++
  9639  2405  1D03               	btfss	3,2
  9640  2406  2BF0               	goto	l2092
  9641  2407  01B1               	clrf	?_strchr
  9642  2408  01B2               	clrf	?_strchr+1
  9643  2409  0008               	return
  9644  240A                     __end_of_strchr:	
  9645                           
  9646                           	psect	text6
  9647  183D                     __ptext6:	
  9648 ;; *************** function _stricmp *****************
  9649 ;; Defined at:
  9650 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\stricmp.c"
  9651 ;; Parameters:    Size  Location     Type
  9652 ;;  s1              1    wreg     PTR const unsigned char 
  9653 ;;		 -> readdata(20), NULL(0), 
  9654 ;;  s2              2   19[BANK0 ] PTR const unsigned char 
  9655 ;;		 -> STR_82(10), STR_81(5), STR_80(5), STR_79(7), 
  9656 ;;		 -> STR_78(8), STR_77(5), STR_76(5), STR_75(11), 
  9657 ;;		 -> STR_74(13), STR_73(7), STR_72(8), STR_71(10), 
  9658 ;;		 -> STR_70(11), STR_69(15), STR_68(14), STR_67(12), 
  9659 ;;		 -> STR_66(8), STR_65(8), STR_64(2), STR_63(5), 
  9660 ;;		 -> STR_62(5), STR_61(2), STR_60(4), STR_59(4), 
  9661 ;;		 -> STR_58(4), 
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;  s1              1   24[BANK0 ] PTR const unsigned char 
  9664 ;;		 -> readdata(20), NULL(0), 
  9665 ;;  r               1   23[BANK0 ] char 
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  2   19[BANK0 ] int 
  9668 ;; Registers used:
  9669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9675 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9676 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9677 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9678 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9679 ;;Total ram usage:        6 bytes
  9680 ;; Hardware stack levels used:    1
  9681 ;; Hardware stack levels required when called:    7
  9682 ;; This function calls:
  9683 ;;		_toupper
  9684 ;; This function is called by:
  9685 ;;		_parseCmd
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           
  9690                           ;psect for function _stricmp
  9691  183D                     _stricmp:	
  9692                           
  9693                           ;incstack = 0
  9694                           ; Regs used in _stricmp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9695                           ;stricmp@s1 stored from wreg
  9696  183D  0020               	movlb	0	; select bank0
  9697  183E  00B8               	movwf	stricmp@s1
  9698  183F  2848               	goto	l6369
  9699  1840                     l6367:	
  9700  1840  3001               	movlw	1
  9701  1841  00B5               	movwf	??_stricmp
  9702  1842  0835               	movf	??_stricmp,w
  9703  1843  07B8               	addwf	stricmp@s1,f
  9704  1844  3001               	movlw	1
  9705  1845  07B3               	addwf	stricmp@s2,f
  9706  1846  3000               	movlw	0
  9707  1847  3DB4               	addwfc	stricmp@s2+1,f
  9708  1848                     l6369:	
  9709  1848  0833               	movf	stricmp@s2,w
  9710  1849  0084               	movwf	4
  9711  184A  0834               	movf	stricmp@s2+1,w
  9712  184B  0085               	movwf	5
  9713  184C  0800               	movf	0,w	;code access
  9714  184D  31A3  230F  3198   	fcall	_toupper
  9715  1850  3AFF               	xorlw	255
  9716  1851  3E01               	addlw	1
  9717  1852  0020               	movlb	0	; select bank0
  9718  1853  00B5               	movwf	??_stricmp
  9719  1854  0838               	movf	stricmp@s1,w
  9720  1855  0086               	movwf	6
  9721  1856  3001               	movlw	1	; select bank2/3
  9722  1857  0087               	movwf	7
  9723  1858  0801               	movf	1,w
  9724  1859  31A3  230F  3198   	fcall	_toupper
  9725  185C  0020               	movlb	0	; select bank0
  9726  185D  0735               	addwf	??_stricmp,w
  9727  185E  00B6               	movwf	??_stricmp+1
  9728  185F  0836               	movf	??_stricmp+1,w
  9729  1860  00B7               	movwf	stricmp@r
  9730  1861  0837               	movf	stricmp@r,w
  9731  1862  1D03               	btfss	3,2
  9732  1863  286B               	goto	l6373
  9733  1864  0838               	movf	stricmp@s1,w
  9734  1865  0086               	movwf	6
  9735  1866  3001               	movlw	1	; select bank2/3
  9736  1867  0087               	movwf	7
  9737  1868  0801               	movf	1,w
  9738  1869  1D03               	btfss	3,2
  9739  186A  2840               	goto	l6367
  9740  186B                     l6373:	
  9741  186B  0837               	movf	stricmp@r,w
  9742  186C  00B3               	movwf	?_stricmp
  9743  186D  01B4               	clrf	?_stricmp+1
  9744  186E  1BB3               	btfsc	?_stricmp,7
  9745  186F  03B4               	decf	?_stricmp+1,f
  9746  1870  0008               	return
  9747  1871                     __end_of_stricmp:	
  9748                           
  9749                           	psect	text7
  9750  230F                     __ptext7:	
  9751 ;; *************** function _toupper *****************
  9752 ;; Defined at:
  9753 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  c               1    wreg     unsigned char 
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;  c               1   18[BANK0 ] unsigned char 
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  1    wreg      unsigned char 
  9760 ;; Registers used:
  9761 ;;		wreg, status,2, status,0
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9768 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9769 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9770 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9771 ;;Total ram usage:        2 bytes
  9772 ;; Hardware stack levels used:    1
  9773 ;; Hardware stack levels required when called:    6
  9774 ;; This function calls:
  9775 ;;		Nothing
  9776 ;; This function is called by:
  9777 ;;		_stricmp
  9778 ;; This function uses a non-reentrant model
  9779 ;;
  9780                           
  9781                           
  9782                           ;psect for function _toupper
  9783  230F                     _toupper:	
  9784                           
  9785                           ;incstack = 0
  9786                           ; Regs used in _toupper: [wreg+status,2+status,0]
  9787                           ;toupper@c stored from wreg
  9788  230F  0020               	movlb	0	; select bank0
  9789  2310  00B2               	movwf	toupper@c
  9790  2311  307B               	movlw	123
  9791  2312  0232               	subwf	toupper@c,w
  9792  2313  1803               	skipnc
  9793  2314  2B1D               	goto	l5787
  9794  2315  3061               	movlw	97
  9795  2316  0232               	subwf	toupper@c,w
  9796  2317  1C03               	skipc
  9797  2318  2B1D               	goto	l5787
  9798  2319  30DF               	movlw	223
  9799  231A  00B1               	movwf	??_toupper
  9800  231B  0831               	movf	??_toupper,w
  9801  231C  05B2               	andwf	toupper@c,f
  9802  231D                     l5787:	
  9803  231D  0832               	movf	toupper@c,w
  9804  231E  0008               	return
  9805  231F                     __end_of_toupper:	
  9806                           
  9807                           	psect	text8
  9808  1F8F                     __ptext8:	
  9809 ;; *************** function _atoi *****************
  9810 ;; Defined at:
  9811 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;  s               1    wreg     PTR const unsigned char 
  9814 ;;		 -> readdata(20), NULL(0), 
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;  s               1   30[BANK0 ] PTR const unsigned char 
  9817 ;;		 -> readdata(20), NULL(0), 
  9818 ;;  a               2   28[BANK0 ] int 
  9819 ;;  sign            1   27[BANK0 ] unsigned char 
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  2   23[BANK0 ] int 
  9822 ;; Registers used:
  9823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9829 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9830 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9831 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9832 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9833 ;;Total ram usage:        8 bytes
  9834 ;; Hardware stack levels used:    1
  9835 ;; Hardware stack levels required when called:    7
  9836 ;; This function calls:
  9837 ;;		___wmul
  9838 ;;		_isdigit
  9839 ;; This function is called by:
  9840 ;;		_parseCmd
  9841 ;; This function uses a non-reentrant model
  9842 ;;
  9843                           
  9844                           
  9845                           ;psect for function _atoi
  9846  1F8F                     _atoi:	
  9847                           
  9848                           ;incstack = 0
  9849                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9850                           ;atoi@s stored from wreg
  9851  1F8F  0020               	movlb	0	; select bank0
  9852  1F90  00BE               	movwf	atoi@s
  9853  1F91                     l6381:	
  9854  1F91  083E               	movf	atoi@s,w
  9855  1F92  0086               	movwf	6
  9856  1F93  3001               	movlw	1	; select bank2/3
  9857  1F94  0087               	movwf	7
  9858  1F95  3020               	movlw	32
  9859  1F96  0601               	xorwf	1,w
  9860  1F97  1D03               	btfss	3,2
  9861  1F98  2F9E               	goto	l6383
  9862  1F99                     l6379:	
  9863  1F99  3001               	movlw	1
  9864  1F9A  00B9               	movwf	??_atoi
  9865  1F9B  0839               	movf	??_atoi,w
  9866  1F9C  07BE               	addwf	atoi@s,f
  9867  1F9D  2F91               	goto	l6381
  9868  1F9E                     l6383:	
  9869  1F9E  083E               	movf	atoi@s,w
  9870  1F9F  0086               	movwf	6
  9871  1FA0  3001               	movlw	1	; select bank2/3
  9872  1FA1  0087               	movwf	7
  9873  1FA2  3009               	movlw	9
  9874  1FA3  0601               	xorwf	1,w
  9875  1FA4  1903               	btfsc	3,2
  9876  1FA5  2F99               	goto	l6379
  9877  1FA6  01BC               	clrf	atoi@a
  9878  1FA7  01BD               	clrf	atoi@a+1
  9879  1FA8  01BB               	clrf	atoi@sign
  9880  1FA9  083E               	movf	atoi@s,w
  9881  1FAA  0086               	movwf	6
  9882  1FAB  3001               	movlw	1	; select bank2/3
  9883  1FAC  0087               	movwf	7
  9884  1FAD  302D               	movlw	45
  9885  1FAE  0601               	xorwf	1,w
  9886  1FAF  1D03               	btfss	3,2
  9887  1FB0  2FB6               	goto	l6391
  9888  1FB1  3001               	movlw	1
  9889  1FB2  00B9               	movwf	??_atoi
  9890  1FB3  0839               	movf	??_atoi,w
  9891  1FB4  07BB               	addwf	atoi@sign,f
  9892  1FB5  2FBE               	goto	l6397
  9893  1FB6                     l6391:	
  9894  1FB6  083E               	movf	atoi@s,w
  9895  1FB7  0086               	movwf	6
  9896  1FB8  3001               	movlw	1	; select bank2/3
  9897  1FB9  0087               	movwf	7
  9898  1FBA  302B               	movlw	43
  9899  1FBB  0601               	xorwf	1,w
  9900  1FBC  1D03               	btfss	3,2
  9901  1FBD  2FC2               	goto	l6399
  9902  1FBE                     l6397:	
  9903  1FBE  3001               	movlw	1
  9904  1FBF  00B9               	movwf	??_atoi
  9905  1FC0  0839               	movf	??_atoi,w
  9906  1FC1  07BE               	addwf	atoi@s,f
  9907  1FC2                     l6399:	
  9908  1FC2  083E               	movf	atoi@s,w
  9909  1FC3  0086               	movwf	6
  9910  1FC4  3001               	movlw	1	; select bank2/3
  9911  1FC5  0087               	movwf	7
  9912  1FC6  0801               	movf	1,w
  9913  1FC7  3187  27F1  319F   	fcall	_isdigit
  9914  1FCA  1C03               	btfss	3,0
  9915  1FCB  2FEB               	goto	l6401
  9916  1FCC  0020               	movlb	0	; select bank0
  9917  1FCD  083D               	movf	atoi@a+1,w
  9918  1FCE  00B2               	movwf	___wmul@multiplier+1
  9919  1FCF  083C               	movf	atoi@a,w
  9920  1FD0  00B1               	movwf	___wmul@multiplier
  9921  1FD1  300A               	movlw	10
  9922  1FD2  00B3               	movwf	___wmul@multiplicand
  9923  1FD3  3000               	movlw	0
  9924  1FD4  00B4               	movwf	___wmul@multiplicand+1
  9925  1FD5  31A4  2441  319F   	fcall	___wmul
  9926  1FD8  0020               	movlb	0	; select bank0
  9927  1FD9  083E               	movf	atoi@s,w
  9928  1FDA  0086               	movwf	6
  9929  1FDB  3001               	movlw	1	; select bank2/3
  9930  1FDC  0087               	movwf	7
  9931  1FDD  0801               	movf	1,w
  9932  1FDE  0731               	addwf	?___wmul,w
  9933  1FDF  00B9               	movwf	??_atoi
  9934  1FE0  0832               	movf	?___wmul+1,w
  9935  1FE1  1803               	skipnc
  9936  1FE2  0A32               	incf	?___wmul+1,w
  9937  1FE3  00BA               	movwf	??_atoi+1
  9938  1FE4  0839               	movf	??_atoi,w
  9939  1FE5  3ED0               	addlw	208
  9940  1FE6  00BC               	movwf	atoi@a
  9941  1FE7  30FF               	movlw	255
  9942  1FE8  3D3A               	addwfc	??_atoi+1,w
  9943  1FE9  00BD               	movwf	atoi@a+1
  9944  1FEA  2FBE               	goto	l6397
  9945  1FEB                     l6401:	
  9946  1FEB  0020               	movlb	0	; select bank0
  9947  1FEC  083B               	movf	atoi@sign,w
  9948  1FED  1903               	btfsc	3,2
  9949  1FEE  2FFB               	goto	l6407
  9950  1FEF  093C               	comf	atoi@a,w
  9951  1FF0  00B9               	movwf	??_atoi
  9952  1FF1  093D               	comf	atoi@a+1,w
  9953  1FF2  00BA               	movwf	??_atoi+1
  9954  1FF3  0AB9               	incf	??_atoi,f
  9955  1FF4  1903               	skipnz
  9956  1FF5  0ABA               	incf	??_atoi+1,f
  9957  1FF6  0839               	movf	??_atoi,w
  9958  1FF7  00B7               	movwf	?_atoi
  9959  1FF8  083A               	movf	??_atoi+1,w
  9960  1FF9  00B8               	movwf	?_atoi+1
  9961  1FFA  0008               	return
  9962  1FFB                     l6407:	
  9963  1FFB  083D               	movf	atoi@a+1,w
  9964  1FFC  00B8               	movwf	?_atoi+1
  9965  1FFD  083C               	movf	atoi@a,w
  9966  1FFE  00B7               	movwf	?_atoi
  9967  1FFF  0008               	return
  9968  2000                     __end_of_atoi:	
  9969                           
  9970                           	psect	text9
  9971  07F1                     __ptext9:	
  9972 ;; *************** function _isdigit *****************
  9973 ;; Defined at:
  9974 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;  c               1    wreg     unsigned char 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;  c               1   18[BANK0 ] unsigned char 
  9979 ;; Return value:  Size  Location     Type
  9980 ;;		None               void
  9981 ;; Registers used:
  9982 ;;		wreg, status,2, status,0
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9989 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9991 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9992 ;;Total ram usage:        2 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; Hardware stack levels required when called:    6
  9995 ;; This function calls:
  9996 ;;		Nothing
  9997 ;; This function is called by:
  9998 ;;		_atoi
  9999 ;; This function uses a non-reentrant model
 10000 ;;
 10001                           
 10002                           
 10003                           ;psect for function _isdigit
 10004  07F1                     _isdigit:	
 10005                           
 10006                           ;incstack = 0
 10007                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10008                           ;isdigit@c stored from wreg
 10009  07F1  0020               	movlb	0	; select bank0
 10010  07F2  00B2               	movwf	isdigit@c
 10011  07F3  01B1               	clrf	_isdigit$2173
 10012  07F4  303A               	movlw	58
 10013  07F5  0232               	subwf	isdigit@c,w
 10014  07F6  1803               	skipnc
 10015  07F7  2FFE               	goto	l5603
 10016  07F8  3030               	movlw	48
 10017  07F9  0232               	subwf	isdigit@c,w
 10018  07FA  1C03               	skipc
 10019  07FB  2FFE               	goto	l5603
 10020  07FC  01B1               	clrf	_isdigit$2173
 10021  07FD  0AB1               	incf	_isdigit$2173,f
 10022  07FE                     l5603:	
 10023  07FE  0C31               	rrf	_isdigit$2173,w
 10024  07FF  0008               	return
 10025  0800                     __end_of_isdigit:	
 10026                           
 10027                           	psect	text10
 10028  2441                     __ptext10:	
 10029 ;; *************** function ___wmul *****************
 10030 ;; Defined at:
 10031 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10032 ;; Parameters:    Size  Location     Type
 10033 ;;  multiplier      2   17[BANK0 ] unsigned int 
 10034 ;;  multiplicand    2   19[BANK0 ] unsigned int 
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;  product         2   21[BANK0 ] unsigned int 
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  2   17[BANK0 ] unsigned int 
 10039 ;; Registers used:
 10040 ;;		wreg, status,2, status,0
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/0
 10043 ;;		On exit  : 0/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10047 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10049 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10050 ;;Total ram usage:        6 bytes
 10051 ;; Hardware stack levels used:    1
 10052 ;; Hardware stack levels required when called:    6
 10053 ;; This function calls:
 10054 ;;		Nothing
 10055 ;; This function is called by:
 10056 ;;		_atoi
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060                           
 10061                           ;psect for function ___wmul
 10062  2441                     ___wmul:	
 10063                           
 10064                           ;incstack = 0
 10065                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10066  2441  0020               	movlb	0	; select bank0
 10067  2442  01B5               	clrf	___wmul@product
 10068  2443  01B6               	clrf	___wmul@product+1
 10069  2444                     l5583:	
 10070  2444  1C31               	btfss	___wmul@multiplier,0
 10071  2445  2C4A               	goto	l1619
 10072  2446  0833               	movf	___wmul@multiplicand,w
 10073  2447  07B5               	addwf	___wmul@product,f
 10074  2448  0834               	movf	___wmul@multiplicand+1,w
 10075  2449  3DB6               	addwfc	___wmul@product+1,f
 10076  244A                     l1619:	
 10077  244A  3001               	movlw	1
 10078  244B                     u4605:	
 10079  244B  35B3               	lslf	___wmul@multiplicand,f
 10080  244C  0DB4               	rlf	___wmul@multiplicand+1,f
 10081  244D  0B89               	decfsz	9,f
 10082  244E  2C4B               	goto	u4605
 10083  244F  3001               	movlw	1
 10084  2450                     u4615:	
 10085  2450  36B2               	lsrf	___wmul@multiplier+1,f
 10086  2451  0CB1               	rrf	___wmul@multiplier,f
 10087  2452  0B89               	decfsz	9,f
 10088  2453  2C50               	goto	u4615
 10089  2454  0831               	movf	___wmul@multiplier,w
 10090  2455  0432               	iorwf	___wmul@multiplier+1,w
 10091  2456  1D03               	btfss	3,2
 10092  2457  2C44               	goto	l5583
 10093  2458  0836               	movf	___wmul@product+1,w
 10094  2459  00B2               	movwf	?___wmul+1
 10095  245A  0835               	movf	___wmul@product,w
 10096  245B  00B1               	movwf	?___wmul
 10097  245C  0008               	return
 10098  245D                     __end_of___wmul:	
 10099                           
 10100                           	psect	text11
 10101  0AD4                     __ptext11:	
 10102 ;; *************** function _main_initialize *****************
 10103 ;; Defined at:
 10104 ;;		line 187 in file "main.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;		None
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;		None
 10109 ;; Return value:  Size  Location     Type
 10110 ;;                  1    wreg      void 
 10111 ;; Registers used:
 10112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10122 ;;Total ram usage:        0 bytes
 10123 ;; Hardware stack levels used:    1
 10124 ;; Hardware stack levels required when called:   15
 10125 ;; This function calls:
 10126 ;;		_LED_setBrightnessRange
 10127 ;;		_LEDsPwr
 10128 ;;		_TMR0_Load8bitPeriod
 10129 ;;		_TMR2_LoadPeriodRegister
 10130 ;;		___awtoft
 10131 ;;		___ftadd
 10132 ;;		___ftmul
 10133 ;;		___fttol
 10134 ;;		_drv_init
 10135 ;;		_printf
 10136 ;; This function is called by:
 10137 ;;		_main
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           
 10142                           ;psect for function _main_initialize
 10143  0AD4                     _main_initialize:	
 10144                           
 10145                           ;main.c: 189: LEDsPwr(LEDpower, 1);
 10146                           
 10147                           ;incstack = 0
 10148                           ; Regs used in _main_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10149  0AD4  3061               	movlw	low (_LEDpower| (0+32768))
 10150  0AD5  0084               	movwf	4
 10151  0AD6  30AA               	movlw	high (_LEDpower| (0+32768))
 10152  0AD7  0085               	movwf	5
 10153  0AD8  3F00               	moviw [0]fsr0
 10154  0AD9  0020               	movlb	0	; select bank0
 10155  0ADA  00C4               	movwf	LEDsPwr@pwr
 10156  0ADB  3F01               	moviw [1]fsr0
 10157  0ADC  00C5               	movwf	LEDsPwr@pwr+1
 10158  0ADD  3001               	movlw	1
 10159  0ADE  00C6               	movwf	LEDsPwr@topOrBottom
 10160  0ADF  3000               	movlw	0
 10161  0AE0  00C7               	movwf	LEDsPwr@topOrBottom+1
 10162  0AE1  319E  26BC  318A   	fcall	_LEDsPwr
 10163                           
 10164                           ;main.c: 190: LEDsPwr(LEDpower, 2);
 10165  0AE4  3061               	movlw	low (_LEDpower| (0+32768))
 10166  0AE5  0084               	movwf	4
 10167  0AE6  30AA               	movlw	high (_LEDpower| (0+32768))
 10168  0AE7  0085               	movwf	5
 10169  0AE8  3F00               	moviw [0]fsr0
 10170  0AE9  0020               	movlb	0	; select bank0
 10171  0AEA  00C4               	movwf	LEDsPwr@pwr
 10172  0AEB  3F01               	moviw [1]fsr0
 10173  0AEC  00C5               	movwf	LEDsPwr@pwr+1
 10174  0AED  3002               	movlw	2
 10175  0AEE  00C6               	movwf	LEDsPwr@topOrBottom
 10176  0AEF  3000               	movlw	0
 10177  0AF0  00C7               	movwf	LEDsPwr@topOrBottom+1
 10178  0AF1  319E  26BC  318A   	fcall	_LEDsPwr
 10179                           
 10180                           ;main.c: 192: LED_setBrightnessRange(1, 1);
 10181  0AF4  3001               	movlw	1
 10182  0AF5  0020               	movlb	0	; select bank0
 10183  0AF6  00C4               	movwf	LED_setBrightnessRange@range
 10184  0AF7  3000               	movlw	0
 10185  0AF8  00C5               	movwf	LED_setBrightnessRange@range+1
 10186  0AF9  3001               	movlw	1
 10187  0AFA  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10188  0AFB  3000               	movlw	0
 10189  0AFC  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10190  0AFD  3188  20C0  318A   	fcall	_LED_setBrightnessRange
 10191                           
 10192                           ;main.c: 193: LED_setBrightnessRange(1, 2);
 10193  0B00  3001               	movlw	1
 10194  0B01  0020               	movlb	0	; select bank0
 10195  0B02  00C4               	movwf	LED_setBrightnessRange@range
 10196  0B03  3000               	movlw	0
 10197  0B04  00C5               	movwf	LED_setBrightnessRange@range+1
 10198  0B05  3002               	movlw	2
 10199  0B06  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10200  0B07  3000               	movlw	0
 10201  0B08  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10202  0B09  3188  20C0  318A   	fcall	_LED_setBrightnessRange
 10203                           
 10204                           ;main.c: 194: do { LATCbits.LATC1 = 1; } while(0);
 10205  0B0C  0022               	movlb	2	; select bank2
 10206  0B0D  148E               	bsf	14,1	;volatile
 10207                           
 10208                           ;main.c: 197: TMR2_LoadPeriodRegister((heater_pre_time_ms*TMR2_RANGE)-1);
 10209  0B0E  0021               	movlb	1	; select bank1
 10210  0B0F  086E               	movf	(_heater_pre_time_ms+1)^(0+128),w
 10211  0B10  0020               	movlb	0	; select bank0
 10212  0B11  00BA               	movwf	___awtoft@c+1
 10213  0B12  0021               	movlb	1	; select bank1
 10214  0B13  086D               	movf	_heater_pre_time_ms^(0+128),w
 10215  0B14  0020               	movlb	0	; select bank0
 10216  0B15  00B9               	movwf	___awtoft@c
 10217  0B16  31A5  2576  318A   	fcall	___awtoft
 10218  0B19  0020               	movlb	0	; select bank0
 10219  0B1A  0839               	movf	?___awtoft,w
 10220  0B1B  00C2               	movwf	___ftmul@f2
 10221  0B1C  083A               	movf	?___awtoft+1,w
 10222  0B1D  00C3               	movwf	___ftmul@f2+1
 10223  0B1E  083B               	movf	?___awtoft+2,w
 10224  0B1F  00C4               	movwf	___ftmul@f2+2
 10225  0B20  304F               	movlw	low (_TMR2_RANGE| (0+32768))
 10226  0B21  0084               	movwf	4
 10227  0B22  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
 10228  0B23  0085               	movwf	5
 10229  0B24  3F00               	moviw [0]fsr0
 10230  0B25  00BF               	movwf	___ftmul@f1
 10231  0B26  3F01               	moviw [1]fsr0
 10232  0B27  00C0               	movwf	___ftmul@f1+1
 10233  0B28  3F02               	moviw [2]fsr0
 10234  0B29  00C1               	movwf	___ftmul@f1+2
 10235  0B2A  318B  23A8  318A   	fcall	___ftmul
 10236  0B2D  0020               	movlb	0	; select bank0
 10237  0B2E  083F               	movf	?___ftmul,w
 10238  0B2F  0021               	movlb	1	; select bank1
 10239  0B30  00A9               	movwf	___ftadd@f2^(0+128)
 10240  0B31  0020               	movlb	0	; select bank0
 10241  0B32  0840               	movf	?___ftmul+1,w
 10242  0B33  0021               	movlb	1	; select bank1
 10243  0B34  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 10244  0B35  0020               	movlb	0	; select bank0
 10245  0B36  0841               	movf	?___ftmul+2,w
 10246  0B37  0021               	movlb	1	; select bank1
 10247  0B38  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 10248  0B39  3000               	movlw	0
 10249  0B3A  00A6               	movwf	___ftadd@f1^(0+128)
 10250  0B3B  3080               	movlw	128
 10251  0B3C  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 10252  0B3D  30BF               	movlw	191
 10253  0B3E  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 10254  0B3F  318C  2489  318A   	fcall	___ftadd
 10255  0B42  0021               	movlb	1	; select bank1
 10256  0B43  0826               	movf	?___ftadd^(0+128),w
 10257  0B44  00AF               	movwf	___fttol@f1^(0+128)
 10258  0B45  0827               	movf	(?___ftadd+1)^(0+128),w
 10259  0B46  00B0               	movwf	(___fttol@f1+1)^(0+128)
 10260  0B47  0828               	movf	(?___ftadd+2)^(0+128),w
 10261  0B48  00B1               	movwf	(___fttol@f1+2)^(0+128)
 10262  0B49  3188  2039  318A   	fcall	___fttol
 10263  0B4C  0021               	movlb	1	; select bank1
 10264  0B4D  082F               	movf	?___fttol^(0+128),w
 10265  0B4E  31A1  2196  318A   	fcall	_TMR2_LoadPeriodRegister
 10266                           
 10267                           ;main.c: 198: TMR0_Load8bitPeriod(((piezo_on_time_ms)*TMR0_RANGE)-1);
 10268  0B51  0021               	movlb	1	; select bank1
 10269  0B52  086C               	movf	(_piezo_on_time_ms+1)^(0+128),w
 10270  0B53  0020               	movlb	0	; select bank0
 10271  0B54  00BA               	movwf	___awtoft@c+1
 10272  0B55  0021               	movlb	1	; select bank1
 10273  0B56  086B               	movf	_piezo_on_time_ms^(0+128),w
 10274  0B57  0020               	movlb	0	; select bank0
 10275  0B58  00B9               	movwf	___awtoft@c
 10276  0B59  31A5  2576  318A   	fcall	___awtoft
 10277  0B5C  0020               	movlb	0	; select bank0
 10278  0B5D  0839               	movf	?___awtoft,w
 10279  0B5E  00C2               	movwf	___ftmul@f2
 10280  0B5F  083A               	movf	?___awtoft+1,w
 10281  0B60  00C3               	movwf	___ftmul@f2+1
 10282  0B61  083B               	movf	?___awtoft+2,w
 10283  0B62  00C4               	movwf	___ftmul@f2+2
 10284  0B63  3052               	movlw	low (_TMR0_RANGE| (0+32768))
 10285  0B64  0084               	movwf	4
 10286  0B65  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 10287  0B66  0085               	movwf	5
 10288  0B67  3F00               	moviw [0]fsr0
 10289  0B68  00BF               	movwf	___ftmul@f1
 10290  0B69  3F01               	moviw [1]fsr0
 10291  0B6A  00C0               	movwf	___ftmul@f1+1
 10292  0B6B  3F02               	moviw [2]fsr0
 10293  0B6C  00C1               	movwf	___ftmul@f1+2
 10294  0B6D  318B  23A8  318A   	fcall	___ftmul
 10295  0B70  0020               	movlb	0	; select bank0
 10296  0B71  083F               	movf	?___ftmul,w
 10297  0B72  0021               	movlb	1	; select bank1
 10298  0B73  00A9               	movwf	___ftadd@f2^(0+128)
 10299  0B74  0020               	movlb	0	; select bank0
 10300  0B75  0840               	movf	?___ftmul+1,w
 10301  0B76  0021               	movlb	1	; select bank1
 10302  0B77  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 10303  0B78  0020               	movlb	0	; select bank0
 10304  0B79  0841               	movf	?___ftmul+2,w
 10305  0B7A  0021               	movlb	1	; select bank1
 10306  0B7B  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 10307  0B7C  3000               	movlw	0
 10308  0B7D  00A6               	movwf	___ftadd@f1^(0+128)
 10309  0B7E  3080               	movlw	128
 10310  0B7F  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 10311  0B80  30BF               	movlw	191
 10312  0B81  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 10313  0B82  318C  2489  318A   	fcall	___ftadd
 10314  0B85  0021               	movlb	1	; select bank1
 10315  0B86  0826               	movf	?___ftadd^(0+128),w
 10316  0B87  00AF               	movwf	___fttol@f1^(0+128)
 10317  0B88  0827               	movf	(?___ftadd+1)^(0+128),w
 10318  0B89  00B0               	movwf	(___fttol@f1+1)^(0+128)
 10319  0B8A  0828               	movf	(?___ftadd+2)^(0+128),w
 10320  0B8B  00B1               	movwf	(___fttol@f1+2)^(0+128)
 10321  0B8C  3188  2039  318A   	fcall	___fttol
 10322  0B8F  0021               	movlb	1	; select bank1
 10323  0B90  082F               	movf	?___fttol^(0+128),w
 10324  0B91  31A1  2191  318A   	fcall	_TMR0_Load8bitPeriod
 10325                           
 10326                           ;main.c: 201: drv_init(0x03, 0x0c);
 10327  0B94  3003               	movlw	3
 10328  0B95  0021               	movlb	1	; select bank1
 10329  0B96  00B6               	movwf	drv_init@output_gain^(0+128)
 10330  0B97  3000               	movlw	0
 10331  0B98  00B7               	movwf	(drv_init@output_gain^(0+128)+1)
 10332  0B99  300C               	movlw	12
 10333  0B9A  00B8               	movwf	drv_init@idle_timeout^(0+128)
 10334  0B9B  3000               	movlw	0
 10335  0B9C  00B9               	movwf	(drv_init@idle_timeout^(0+128)+1)
 10336  0B9D  319E  2659  318A   	fcall	_drv_init
 10337                           
 10338                           ;main.c: 202: printf("initialized\n");
 10339  0BA0  3003               	movlw	low ((STR_51+4)| (0+32768))
 10340  0BA1  0021               	movlb	1	; select bank1
 10341  0BA2  00A0               	movwf	printf@f^(0+128)
 10342  0BA3  30A9               	movlw	high ((STR_51+4)| (0+32768))
 10343  0BA4  00A1               	movwf	(printf@f^(0+128)+1)
 10344  0BA5  318E  26CE         	fcall	_printf
 10345  0BA7  0008               	return
 10346  0BA8                     __end_of_main_initialize:	
 10347                           
 10348                           	psect	text12
 10349  1E59                     __ptext12:	
 10350 ;; *************** function _drv_init *****************
 10351 ;; Defined at:
 10352 ;;		line 3 in file "drv2665.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;  output_gain     2   22[BANK1 ] int 
 10355 ;;  idle_timeout    2   24[BANK1 ] int 
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;		None
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  1    wreg      void 
 10360 ;; Registers used:
 10361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10367 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10369 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10370 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10371 ;;Total ram usage:        5 bytes
 10372 ;; Hardware stack levels used:    1
 10373 ;; Hardware stack levels required when called:   14
 10374 ;; This function calls:
 10375 ;;		_drv_reset
 10376 ;;		_drv_write
 10377 ;;		_i2c_open
 10378 ;;		_i2c_setAddress
 10379 ;;		_printf
 10380 ;; This function is called by:
 10381 ;;		_main_initialize
 10382 ;; This function uses a non-reentrant model
 10383 ;;
 10384                           
 10385                           
 10386                           ;psect for function _drv_init
 10387  1E59                     _drv_init:	
 10388                           
 10389                           ;drv2665.c: 5: i2c_setAddress(drv_address);
 10390                           
 10391                           ;incstack = 0
 10392                           ; Regs used in _drv_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10393  1E59  3065               	movlw	low (_drv_address| (0+32768))
 10394  1E5A  0084               	movwf	4
 10395  1E5B  30AA               	movlw	high (_drv_address| (0+32768))
 10396  1E5C  0085               	movwf	5
 10397  1E5D  0800               	movf	0,w	;code access
 10398  1E5E  31A2  220F  319E   	fcall	_i2c_setAddress
 10399                           
 10400                           ;drv2665.c: 6: i2c_open(drv_address);
 10401  1E61  3065               	movlw	low (_drv_address| (0+32768))
 10402  1E62  0084               	movwf	4
 10403  1E63  30AA               	movlw	high (_drv_address| (0+32768))
 10404  1E64  0085               	movwf	5
 10405  1E65  0800               	movf	0,w	;code access
 10406  1E66  319A  22D8  319E   	fcall	_i2c_open
 10407                           
 10408                           ;drv2665.c: 7: _delay((unsigned long)((10)*(1000000/4000.0)));
 10409  1E69  3004               	movlw	4
 10410  1E6A  0021               	movlb	1	; select bank1
 10411  1E6B  00BA               	movwf	??_drv_init^(0+128)
 10412  1E6C  303D               	movlw	61
 10413  1E6D                     u9027:	
 10414  1E6D  0B89               	decfsz	9,f
 10415  1E6E  2E6D               	goto	u9027
 10416  1E6F  0BBA               	decfsz	??_drv_init^(0+128),f
 10417  1E70  2E6D               	goto	u9027
 10418  1E71  3200               	nop2
 10419                           
 10420                           ;drv2665.c: 9: drv_reset();
 10421  1E72  31A2  2273  319E   	fcall	_drv_reset
 10422                           
 10423                           ;drv2665.c: 10: _delay((unsigned long)((10)*(1000000/4000.0)));
 10424  1E75  3004               	movlw	4
 10425  1E76  0021               	movlb	1	; select bank1
 10426  1E77  00BA               	movwf	??_drv_init^(0+128)
 10427  1E78  303D               	movlw	61
 10428  1E79                     u9037:	
 10429  1E79  0B89               	decfsz	9,f
 10430  1E7A  2E79               	goto	u9037
 10431  1E7B  0BBA               	decfsz	??_drv_init^(0+128),f
 10432  1E7C  2E79               	goto	u9037
 10433  1E7D  3200               	nop2
 10434                           
 10435                           ;drv2665.c: 11: drv_write(0x02, 0);
 10436  1E7E  0020               	movlb	0	; select bank0
 10437  1E7F  01C9               	clrf	drv_write@data
 10438  1E80  3002               	movlw	2
 10439  1E81  31A6  2603  319E   	fcall	_drv_write
 10440                           
 10441                           ;drv2665.c: 12: _delay((unsigned long)((10)*(1000000/4000.0)));
 10442  1E84  3004               	movlw	4
 10443  1E85  0021               	movlb	1	; select bank1
 10444  1E86  00BA               	movwf	??_drv_init^(0+128)
 10445  1E87  303D               	movlw	61
 10446  1E88                     u9047:	
 10447  1E88  0B89               	decfsz	9,f
 10448  1E89  2E88               	goto	u9047
 10449  1E8A  0BBA               	decfsz	??_drv_init^(0+128),f
 10450  1E8B  2E88               	goto	u9047
 10451  1E8C  3200               	nop2
 10452                           
 10453                           ;drv2665.c: 13: drv_write(0x01, 0x38 | output_gain);
 10454  1E8D  0021               	movlb	1	; select bank1
 10455  1E8E  0836               	movf	drv_init@output_gain^(0+128),w
 10456  1E8F  3838               	iorlw	56
 10457  1E90  00BA               	movwf	??_drv_init^(0+128)
 10458  1E91  083A               	movf	??_drv_init^(0+128),w
 10459  1E92  0020               	movlb	0	; select bank0
 10460  1E93  00C9               	movwf	drv_write@data
 10461  1E94  3001               	movlw	1
 10462  1E95  31A6  2603  319E   	fcall	_drv_write
 10463                           
 10464                           ;drv2665.c: 15: _delay((unsigned long)((10)*(1000000/4000.0)));
 10465  1E98  3004               	movlw	4
 10466  1E99  0021               	movlb	1	; select bank1
 10467  1E9A  00BA               	movwf	??_drv_init^(0+128)
 10468  1E9B  303D               	movlw	61
 10469  1E9C                     u9057:	
 10470  1E9C  0B89               	decfsz	9,f
 10471  1E9D  2E9C               	goto	u9057
 10472  1E9E  0BBA               	decfsz	??_drv_init^(0+128),f
 10473  1E9F  2E9C               	goto	u9057
 10474  1EA0  3200               	nop2
 10475                           
 10476                           ;drv2665.c: 16: drv_write(0x02, idle_timeout);
 10477  1EA1  0021               	movlb	1	; select bank1
 10478  1EA2  0838               	movf	drv_init@idle_timeout^(0+128),w
 10479  1EA3  00BA               	movwf	??_drv_init^(0+128)
 10480  1EA4  083A               	movf	??_drv_init^(0+128),w
 10481  1EA5  0020               	movlb	0	; select bank0
 10482  1EA6  00C9               	movwf	drv_write@data
 10483  1EA7  3002               	movlw	2
 10484  1EA8  31A6  2603  319E   	fcall	_drv_write
 10485                           
 10486                           ;drv2665.c: 18: _delay((unsigned long)((10)*(1000000/4000.0)));
 10487  1EAB  3004               	movlw	4
 10488  1EAC  0021               	movlb	1	; select bank1
 10489  1EAD  00BA               	movwf	??_drv_init^(0+128)
 10490  1EAE  303D               	movlw	61
 10491  1EAF                     u9067:	
 10492  1EAF  0B89               	decfsz	9,f
 10493  1EB0  2EAF               	goto	u9067
 10494  1EB1  0BBA               	decfsz	??_drv_init^(0+128),f
 10495  1EB2  2EAF               	goto	u9067
 10496  1EB3  3200               	nop2
 10497                           
 10498                           ;drv2665.c: 20: printf("drv initialized\n");
 10499  1EB4  30FF               	movlw	low (STR_51| (0+32768))
 10500  1EB5  0021               	movlb	1	; select bank1
 10501  1EB6  00A0               	movwf	printf@f^(0+128)
 10502  1EB7  30A8               	movlw	high (STR_51| (0+32768))
 10503  1EB8  00A1               	movwf	(printf@f^(0+128)+1)
 10504  1EB9  318E  26CE         	fcall	_printf
 10505  1EBB  0008               	return
 10506  1EBC                     __end_of_drv_init:	
 10507                           
 10508                           	psect	text13
 10509  220F                     __ptext13:	
 10510 ;; *************** function _i2c_setAddress *****************
 10511 ;; Defined at:
 10512 ;;		line 156 in file "mcc_generated_files/drivers/i2c_master.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;  address         1    wreg     unsigned char 
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;  address         1   18[BANK0 ] unsigned char 
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  1    wreg      void 
 10519 ;; Registers used:
 10520 ;;		wreg
 10521 ;; Tracked objects:
 10522 ;;		On entry : 0/0
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10527 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10528 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10529 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10530 ;;Total ram usage:        2 bytes
 10531 ;; Hardware stack levels used:    1
 10532 ;; Hardware stack levels required when called:    6
 10533 ;; This function calls:
 10534 ;;		Nothing
 10535 ;; This function is called by:
 10536 ;;		_drv_init
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540                           
 10541                           ;psect for function _i2c_setAddress
 10542  220F                     _i2c_setAddress:	
 10543                           
 10544                           ;incstack = 0
 10545                           ; Regs used in _i2c_setAddress: [wreg]
 10546                           ;i2c_setAddress@address stored from wreg
 10547  220F  0020               	movlb	0	; select bank0
 10548  2210  00B2               	movwf	i2c_setAddress@address
 10549                           
 10550                           ;i2c_master.c: 158: i2c_status.address = address;
 10551  2211  0832               	movf	i2c_setAddress@address,w
 10552  2212  00B1               	movwf	??_i2c_setAddress
 10553  2213  0831               	movf	??_i2c_setAddress,w
 10554  2214  0022               	movlb	2	; select bank2
 10555  2215  00A1               	movwf	(_i2c_status^(0+256)+1)
 10556  2216  0008               	return
 10557  2217                     __end_of_i2c_setAddress:	
 10558                           
 10559                           	psect	text14
 10560  1AD8                     __ptext14:	
 10561 ;; *************** function _i2c_open *****************
 10562 ;; Defined at:
 10563 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;  address         1    wreg     unsigned char 
 10566 ;; Auto vars:     Size  Location     Type
 10567 ;;  address         1   21[BANK0 ] unsigned char 
 10568 ;;  ret             1   20[BANK0 ] enum E8193
 10569 ;; Return value:  Size  Location     Type
 10570 ;;                  1    wreg      enum E8193
 10571 ;; Registers used:
 10572 ;;		wreg, status,2, status,0, pclath, cstack
 10573 ;; Tracked objects:
 10574 ;;		On entry : 0/0
 10575 ;;		On exit  : 0/0
 10576 ;;		Unchanged: 0/0
 10577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10579 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10580 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10581 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10582 ;;Total ram usage:        3 bytes
 10583 ;; Hardware stack levels used:    1
 10584 ;; Hardware stack levels required when called:    7
 10585 ;; This function calls:
 10586 ;;		_i2c1_driver_open
 10587 ;;		_i2c1_driver_setBusCollisionISR
 10588 ;;		_i2c1_driver_setI2cISR
 10589 ;;		_mssp1_clearIRQ
 10590 ;; This function is called by:
 10591 ;;		_drv_init
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           
 10595                           
 10596                           ;psect for function _i2c_open
 10597  1AD8                     _i2c_open:	
 10598                           
 10599                           ;incstack = 0
 10600                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
 10601                           ;i2c_open@address stored from wreg
 10602  1AD8  0020               	movlb	0	; select bank0
 10603  1AD9  00B5               	movwf	i2c_open@address
 10604                           
 10605                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
 10606  1ADA  01B4               	clrf	i2c_open@ret
 10607  1ADB  0AB4               	incf	i2c_open@ret,f
 10608                           
 10609                           ;i2c_master.c: 120: if(!i2c_status.inUse)
 10610  1ADC  0022               	movlb	2	; select bank2
 10611  1ADD  18A0               	btfsc	_i2c_status^(0+256),1
 10612  1ADE  0008               	return
 10613                           
 10614                           ;i2c_master.c: 121: {
 10615                           ;i2c_master.c: 122: i2c_status.address = address;
 10616  1ADF  0020               	movlb	0	; select bank0
 10617  1AE0  0835               	movf	i2c_open@address,w
 10618  1AE1  00B3               	movwf	??_i2c_open
 10619  1AE2  0833               	movf	??_i2c_open,w
 10620  1AE3  0022               	movlb	2	; select bank2
 10621  1AE4  00A1               	movwf	(_i2c_status^(0+256)+1)
 10622                           
 10623                           ;i2c_master.c: 123: i2c_status.busy = 0;
 10624  1AE5  1020               	bcf	_i2c_status^(0+256),0
 10625                           
 10626                           ;i2c_master.c: 124: i2c_status.inUse = 1;
 10627  1AE6  14A0               	bsf	_i2c_status^(0+256),1
 10628                           
 10629                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
 10630  1AE7  11A0               	bcf	_i2c_status^(0+256),3
 10631                           
 10632                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
 10633  1AE8  300E               	movlw	14
 10634  1AE9  0020               	movlb	0	; select bank0
 10635  1AEA  00B3               	movwf	??_i2c_open
 10636  1AEB  0833               	movf	??_i2c_open,w
 10637  1AEC  0022               	movlb	2	; select bank2
 10638  1AED  00AA               	movwf	(_i2c_status^(0+256)+10)
 10639                           
 10640                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
 10641  1AEE  30F4               	movlw	244
 10642  1AEF  00A8               	movwf	(_i2c_status^(0+256)+8)
 10643  1AF0  3001               	movlw	1
 10644  1AF1  00A9               	movwf	(_i2c_status^(0+256)+9)
 10645                           
 10646                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
 10647  1AF2  1520               	bsf	_i2c_status^(0+256),2
 10648                           
 10649                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
 10650  1AF3  30A1               	movlw	low _returnStop
 10651  1AF4  00AC               	movwf	(low ((_i2c_status| (0+256)+12)))^0
 10652  1AF5  3021               	movlw	high _returnStop
 10653  1AF6  00AD               	movwf	((low ((_i2c_status| (0+256)+12)))^0+1)
 10654                           
 10655                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
 10656  1AF7  01B8               	clrf	(low ((_i2c_status| (0+256)+24)))^0
 10657                           
 10658                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
 10659  1AF8  30A1               	movlw	low _returnStop
 10660  1AF9  00AE               	movwf	(low ((_i2c_status| (0+256)+14)))^0
 10661  1AFA  3021               	movlw	high _returnStop
 10662  1AFB  00AF               	movwf	((low ((_i2c_status| (0+256)+14)))^0+1)
 10663                           
 10664                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
 10665  1AFC  01B9               	clrf	(low ((_i2c_status| (0+256)+25)))^0
 10666                           
 10667                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
 10668  1AFD  30A1               	movlw	low _returnStop
 10669  1AFE  00B0               	movwf	(low ((_i2c_status| (0+256)+16)))^0
 10670  1AFF  3021               	movlw	high _returnStop
 10671  1B00  00B1               	movwf	((low ((_i2c_status| (0+256)+16)))^0+1)
 10672                           
 10673                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
 10674  1B01  01BA               	clrf	(low ((_i2c_status| (0+256)+26)))^0
 10675                           
 10676                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
 10677  1B02  30A1               	movlw	low _returnStop
 10678  1B03  00B2               	movwf	(low ((_i2c_status| (0+256)+18)))^0
 10679  1B04  3021               	movlw	high _returnStop
 10680  1B05  00B3               	movwf	((low ((_i2c_status| (0+256)+18)))^0+1)
 10681                           
 10682                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
 10683  1B06  01BB               	clrf	(low ((_i2c_status| (0+256)+27)))^0
 10684                           
 10685                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
 10686  1B07  30A7               	movlw	low _returnReset
 10687  1B08  00B4               	movwf	(low ((_i2c_status| (0+256)+20)))^0
 10688  1B09  3021               	movlw	high _returnReset
 10689  1B0A  00B5               	movwf	((low ((_i2c_status| (0+256)+20)))^0+1)
 10690                           
 10691                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
 10692  1B0B  01BC               	clrf	(low ((_i2c_status| (0+256)+28)))^0
 10693                           
 10694                           ;i2c_master.c: 142: i2c1_driver_open();
 10695  1B0C  3198  2000  319A   	fcall	_i2c1_driver_open
 10696                           
 10697                           ;i2c_master.c: 143: mssp1_clearIRQ();
 10698  1B0F  31A1  2146  319A   	fcall	_mssp1_clearIRQ
 10699                           
 10700                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
 10701  1B12  3019               	movlw	low _i2c_busCollisionISR
 10702  1B13  0020               	movlb	0	; select bank0
 10703  1B14  00B1               	movwf	i2c1_driver_setBusCollisionISR@f
 10704  1B15  3021               	movlw	high _i2c_busCollisionISR
 10705  1B16  00B2               	movwf	i2c1_driver_setBusCollisionISR@f+1
 10706  1B17  31A2  2243  319A   	fcall	_i2c1_driver_setBusCollisionISR
 10707                           
 10708                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
 10709  1B1A  304C               	movlw	low _i2c_ISR
 10710  1B1B  0020               	movlb	0	; select bank0
 10711  1B1C  00B1               	movwf	i2c1_driver_setI2cISR@f
 10712  1B1D  3026               	movlw	high _i2c_ISR
 10713  1B1E  00B2               	movwf	i2c1_driver_setI2cISR@f+1
 10714  1B1F  31A2  224C         	fcall	_i2c1_driver_setI2cISR
 10715                           
 10716                           ;i2c_master.c: 151: ret = I2C_NOERR;
 10717  1B21  0020               	movlb	0	; select bank0
 10718  1B22  01B4               	clrf	i2c_open@ret
 10719  1B23  0008               	return
 10720  1B24                     __end_of_i2c_open:	
 10721                           ;i2c_master.c: 152: }
 10722                           ;i2c_master.c: 153: return ret;
 10723                           ;	Return value of _i2c_open is never used
 10724                           
 10725                           
 10726                           	psect	text15
 10727  224C                     __ptext15:	
 10728 ;; *************** function _i2c1_driver_setI2cISR *****************
 10729 ;; Defined at:
 10730 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;  f               2   17[BANK0 ] PTR void 
 10733 ;;		 -> i2c_ISR(1), 
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;		None
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      void 
 10738 ;; Registers used:
 10739 ;;		wreg
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10745 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10748 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10749 ;;Total ram usage:        2 bytes
 10750 ;; Hardware stack levels used:    1
 10751 ;; Hardware stack levels required when called:    6
 10752 ;; This function calls:
 10753 ;;		Nothing
 10754 ;; This function is called by:
 10755 ;;		_i2c_open
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           
 10760                           ;psect for function _i2c1_driver_setI2cISR
 10761  224C                     _i2c1_driver_setI2cISR:	
 10762                           
 10763                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
 10764                           
 10765                           ;incstack = 0
 10766                           ; Regs used in _i2c1_driver_setI2cISR: [wreg]
 10767  224C  0020               	movlb	0	; select bank0
 10768  224D  0832               	movf	i2c1_driver_setI2cISR@f+1,w
 10769  224E  0022               	movlb	2	; select bank2
 10770  224F  00E5               	movwf	(_i2c1_driver_i2cISR+1)^(0+256)
 10771  2250  0020               	movlb	0	; select bank0
 10772  2251  0831               	movf	i2c1_driver_setI2cISR@f,w
 10773  2252  0022               	movlb	2	; select bank2
 10774  2253  00E4               	movwf	_i2c1_driver_i2cISR^(0+256)
 10775  2254  0008               	return
 10776  2255                     __end_of_i2c1_driver_setI2cISR:	
 10777                           
 10778                           	psect	text16
 10779  2243                     __ptext16:	
 10780 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
 10781 ;; Defined at:
 10782 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;  f               2   17[BANK0 ] PTR void 
 10785 ;;		 -> i2c_busCollisionISR(1), 
 10786 ;; Auto vars:     Size  Location     Type
 10787 ;;		None
 10788 ;; Return value:  Size  Location     Type
 10789 ;;                  1    wreg      void 
 10790 ;; Registers used:
 10791 ;;		wreg
 10792 ;; Tracked objects:
 10793 ;;		On entry : 0/0
 10794 ;;		On exit  : 0/0
 10795 ;;		Unchanged: 0/0
 10796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10797 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10800 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10801 ;;Total ram usage:        2 bytes
 10802 ;; Hardware stack levels used:    1
 10803 ;; Hardware stack levels required when called:    6
 10804 ;; This function calls:
 10805 ;;		Nothing
 10806 ;; This function is called by:
 10807 ;;		_i2c_open
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           
 10812                           ;psect for function _i2c1_driver_setBusCollisionISR
 10813  2243                     _i2c1_driver_setBusCollisionISR:	
 10814                           
 10815                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
 10816                           
 10817                           ;incstack = 0
 10818                           ; Regs used in _i2c1_driver_setBusCollisionISR: [wreg]
 10819  2243  0020               	movlb	0	; select bank0
 10820  2244  0832               	movf	i2c1_driver_setBusCollisionISR@f+1,w
 10821  2245  0022               	movlb	2	; select bank2
 10822  2246  00E7               	movwf	(_i2c1_driver_busCollisionISR+1)^(0+256)
 10823  2247  0020               	movlb	0	; select bank0
 10824  2248  0831               	movf	i2c1_driver_setBusCollisionISR@f,w
 10825  2249  0022               	movlb	2	; select bank2
 10826  224A  00E6               	movwf	_i2c1_driver_busCollisionISR^(0+256)
 10827  224B  0008               	return
 10828  224C                     __end_of_i2c1_driver_setBusCollisionISR:	
 10829                           
 10830                           	psect	text17
 10831  1800                     __ptext17:	
 10832 ;; *************** function _i2c1_driver_open *****************
 10833 ;; Defined at:
 10834 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;		None
 10837 ;; Auto vars:     Size  Location     Type
 10838 ;;		None
 10839 ;; Return value:  Size  Location     Type
 10840 ;;		None               void
 10841 ;; Registers used:
 10842 ;;		wreg, status,2
 10843 ;; Tracked objects:
 10844 ;;		On entry : 0/0
 10845 ;;		On exit  : 0/0
 10846 ;;		Unchanged: 0/0
 10847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10852 ;;Total ram usage:        0 bytes
 10853 ;; Hardware stack levels used:    1
 10854 ;; Hardware stack levels required when called:    6
 10855 ;; This function calls:
 10856 ;;		Nothing
 10857 ;; This function is called by:
 10858 ;;		_i2c_open
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           
 10863                           ;psect for function _i2c1_driver_open
 10864  1800                     _i2c1_driver_open:	
 10865                           
 10866                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 10867                           
 10868                           ;incstack = 0
 10869                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 10870  1800  0024               	movlb	4	; select bank4
 10871  1801  1A95               	btfsc	21,5	;volatile
 10872  1802  0008               	return
 10873                           
 10874                           ;i2c1_driver.c: 86: {
 10875                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
 10876  1803  0194               	clrf	20	;volatile
 10877                           
 10878                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 10879  1804  3028               	movlw	40
 10880  1805  0095               	movwf	21	;volatile
 10881                           
 10882                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 10883  1806  0196               	clrf	22	;volatile
 10884                           
 10885                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 10886  1807  3003               	movlw	3
 10887  1808  0092               	movwf	18	;volatile
 10888                           
 10889                           ;i2c1_driver.c: 93: else
 10890                           ;i2c1_driver.c: 94: return 0;
 10891                           ;	Return value of _i2c1_driver_open is never used
 10892                           
 10893                           ;i2c1_driver.c: 92: }
 10894                           
 10895                           ;i2c1_driver.c: 91: return 1;
 10896                           ;	Return value of _i2c1_driver_open is never used
 10897  1809  0008               	return
 10898  180A                     __end_of_i2c1_driver_open:	
 10899                           
 10900                           	psect	text18
 10901  2273                     __ptext18:	
 10902 ;; *************** function _drv_reset *****************
 10903 ;; Defined at:
 10904 ;;		line 23 in file "drv2665.c"
 10905 ;; Parameters:    Size  Location     Type
 10906 ;;		None
 10907 ;; Auto vars:     Size  Location     Type
 10908 ;;		None
 10909 ;; Return value:  Size  Location     Type
 10910 ;;                  1    wreg      void 
 10911 ;; Registers used:
 10912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10913 ;; Tracked objects:
 10914 ;;		On entry : 0/0
 10915 ;;		On exit  : 0/0
 10916 ;;		Unchanged: 0/0
 10917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10920 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10921 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10922 ;;Total ram usage:        1 bytes
 10923 ;; Hardware stack levels used:    1
 10924 ;; Hardware stack levels required when called:   13
 10925 ;; This function calls:
 10926 ;;		_drv_write
 10927 ;; This function is called by:
 10928 ;;		_drv_init
 10929 ;; This function uses a non-reentrant model
 10930 ;;
 10931                           
 10932                           
 10933                           ;psect for function _drv_reset
 10934  2273                     _drv_reset:	
 10935                           
 10936                           ;drv2665.c: 24: drv_write(0x02, 0x80);
 10937                           
 10938                           ;incstack = 0
 10939                           ; Regs used in _drv_reset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10940  2273  3080               	movlw	128
 10941  2274  0021               	movlb	1	; select bank1
 10942  2275  00B5               	movwf	??_drv_reset^(0+128)
 10943  2276  0835               	movf	??_drv_reset^(0+128),w
 10944  2277  0020               	movlb	0	; select bank0
 10945  2278  00C9               	movwf	drv_write@data
 10946  2279  3002               	movlw	2
 10947  227A  31A6  2603         	fcall	_drv_write
 10948  227C  0008               	return
 10949  227D                     __end_of_drv_reset:	
 10950                           
 10951                           	psect	text19
 10952  0378                     __ptext19:	
 10953 ;; *************** function _execCmd *****************
 10954 ;; Defined at:
 10955 ;;		line 77 in file "cmd_parser.c"
 10956 ;; Parameters:    Size  Location     Type
 10957 ;;  s               1    wreg     PTR struct CMD_STRUCT
 10958 ;;		 -> cmd_struct(21), 
 10959 ;; Auto vars:     Size  Location     Type
 10960 ;;  s               1   55[BANK1 ] PTR struct CMD_STRUCT
 10961 ;;		 -> cmd_struct(21), 
 10962 ;; Return value:  Size  Location     Type
 10963 ;;                  2  969[None  ] int 
 10964 ;; Registers used:
 10965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10966 ;; Tracked objects:
 10967 ;;		On entry : 0/0
 10968 ;;		On exit  : 0/0
 10969 ;;		Unchanged: 0/0
 10970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10972 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10974 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10975 ;;Total ram usage:        1 bytes
 10976 ;; Hardware stack levels used:    1
 10977 ;; Hardware stack levels required when called:   16
 10978 ;; This function calls:
 10979 ;;		_commCheck
 10980 ;;		_doMove
 10981 ;;		_getActive
 10982 ;;		_getMotionStatus
 10983 ;;		_getMoveMask
 10984 ;;		_getPosition
 10985 ;;		_printf
 10986 ;;		_setActive
 10987 ;;		_setDrvGain
 10988 ;;		_setDrvPeak
 10989 ;;		_setDrvPiezoOnTime
 10990 ;;		_setH1OffTime
 10991 ;;		_setH2OnTime
 10992 ;;		_setHeaterPostTime
 10993 ;;		_setHeaterPreTime
 10994 ;;		_setHeaterToggle
 10995 ;;		_setLEDBrightnessRange
 10996 ;;		_setLEDPwr
 10997 ;;		_setMoveMask
 10998 ;;		_startAbsMove
 10999 ;;		_startRelMove
 11000 ;;		_stop
 11001 ;;		_timedActiveHeatOn
 11002 ;;		_zeroPosition
 11003 ;; This function is called by:
 11004 ;;		_main
 11005 ;; This function uses a non-reentrant model
 11006 ;;
 11007                           
 11008                           
 11009                           ;psect for function _execCmd
 11010  0378                     _execCmd:	
 11011                           
 11012                           ;incstack = 0
 11013 ;; hardware stack exceeded
 11014                           ; Regs used in _execCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11015                           ;execCmd@s stored from wreg
 11016  0378  0021               	movlb	1	; select bank1
 11017  0379  00D7               	movwf	execCmd@s^(0+128)
 11018                           
 11019                           ;cmd_parser.c: 78: errorOut = 1;
 11020  037A  3001               	movlw	1
 11021  037B  0022               	movlb	2	; select bank2
 11022  037C  00E2               	movwf	_errorOut^(0+256)
 11023  037D  3000               	movlw	0
 11024  037E  00E3               	movwf	(_errorOut^(0+256)+1)
 11025                           
 11026                           ;cmd_parser.c: 80: switch(s->c){
 11027  037F  2D57               	goto	l8545
 11028  0380                     l8495:	
 11029                           ;cmd_parser.c: 81: case CMD_REL: errorOut = startRelMove(s->p1.paramI); break;
 11030                           
 11031  0380  0021               	movlb	1	; select bank1
 11032  0381  0A57               	incf	execCmd@s^(0+128),w
 11033  0382  0086               	movwf	6
 11034  0383  3001               	movlw	1	; select bank2/3
 11035  0384  0087               	movwf	7
 11036  0385  3F40               	moviw [0]fsr1
 11037  0386  00B5               	movwf	startRelMove@steps^(0+128)
 11038  0387  3F41               	moviw [1]fsr1
 11039  0388  00B6               	movwf	(startRelMove@steps+1)^(0+128)
 11040  0389  31A4  240A         	fcall	_startRelMove
 11041  038B  0021               	movlb	1	; select bank1
 11042  038C  0836               	movf	(?_startRelMove+1)^(0+128),w
 11043  038D  0022               	movlb	2	; select bank2
 11044  038E  00E3               	movwf	(_errorOut+1)^(0+256)
 11045  038F  0021               	movlb	1	; select bank1
 11046  0390  0835               	movf	?_startRelMove^(0+128),w
 11047  0391  0022               	movlb	2	; select bank2
 11048  0392  00E2               	movwf	_errorOut^(0+256)
 11049  0393  0008               	return
 11050  0394                     l8497:	
 11051                           ;cmd_parser.c: 82: case CMD_ABS: errorOut = startAbsMove(s->p1.paramI); break;
 11052                           
 11053  0394  0021               	movlb	1	; select bank1
 11054  0395  0A57               	incf	execCmd@s^(0+128),w
 11055  0396  0086               	movwf	6
 11056  0397  3001               	movlw	1	; select bank2/3
 11057  0398  0087               	movwf	7
 11058  0399  3F40               	moviw [0]fsr1
 11059  039A  00B5               	movwf	startAbsMove@steps^(0+128)
 11060  039B  3F41               	moviw [1]fsr1
 11061  039C  00B6               	movwf	(startAbsMove@steps+1)^(0+128)
 11062  039D  31A4  245D         	fcall	_startAbsMove
 11063  039F  0021               	movlb	1	; select bank1
 11064  03A0  0836               	movf	(?_startAbsMove+1)^(0+128),w
 11065  03A1  0022               	movlb	2	; select bank2
 11066  03A2  00E3               	movwf	(_errorOut+1)^(0+256)
 11067  03A3  0021               	movlb	1	; select bank1
 11068  03A4  0835               	movf	?_startAbsMove^(0+128),w
 11069  03A5  0022               	movlb	2	; select bank2
 11070  03A6  00E2               	movwf	_errorOut^(0+256)
 11071  03A7  0008               	return
 11072  03A8                     l8499:	
 11073                           ;cmd_parser.c: 83: case CMD_P: errorOut = getPosition(s->p1.paramI); break;
 11074                           
 11075  03A8  0021               	movlb	1	; select bank1
 11076  03A9  0A57               	incf	execCmd@s^(0+128),w
 11077  03AA  0086               	movwf	6
 11078  03AB  3001               	movlw	1	; select bank2/3
 11079  03AC  0087               	movwf	7
 11080  03AD  3F40               	moviw [0]fsr1
 11081  03AE  00B5               	movwf	getPosition@a^(0+128)
 11082  03AF  3F41               	moviw [1]fsr1
 11083  03B0  00B6               	movwf	(getPosition@a+1)^(0+128)
 11084  03B1  3198  20B0         	fcall	_getPosition
 11085  03B3  0021               	movlb	1	; select bank1
 11086  03B4  0836               	movf	(?_getPosition+1)^(0+128),w
 11087  03B5  0022               	movlb	2	; select bank2
 11088  03B6  00E3               	movwf	(_errorOut+1)^(0+256)
 11089  03B7  0021               	movlb	1	; select bank1
 11090  03B8  0835               	movf	?_getPosition^(0+128),w
 11091  03B9  0022               	movlb	2	; select bank2
 11092  03BA  00E2               	movwf	_errorOut^(0+256)
 11093  03BB  0008               	return
 11094  03BC                     l8501:	
 11095                           ;cmd_parser.c: 84: case CMD_STOP: errorOut = stop(); break;
 11096                           
 11097  03BC  31A6  2672         	fcall	_stop
 11098  03BE  0021               	movlb	1	; select bank1
 11099  03BF  0836               	movf	(?_stop+1)^(0+128),w
 11100  03C0  0022               	movlb	2	; select bank2
 11101  03C1  00E3               	movwf	(_errorOut+1)^(0+256)
 11102  03C2  0021               	movlb	1	; select bank1
 11103  03C3  0835               	movf	?_stop^(0+128),w
 11104  03C4  0022               	movlb	2	; select bank2
 11105  03C5  00E2               	movwf	_errorOut^(0+256)
 11106  03C6  0008               	return
 11107  03C7                     l8503:	
 11108                           ;cmd_parser.c: 85: case CMD_ZERO: errorOut = zeroPosition(); break;
 11109                           
 11110  03C7  3194  24A8         	fcall	_zeroPosition
 11111  03C9  0021               	movlb	1	; select bank1
 11112  03CA  0836               	movf	(?_zeroPosition+1)^(0+128),w
 11113  03CB  0022               	movlb	2	; select bank2
 11114  03CC  00E3               	movwf	(_errorOut+1)^(0+256)
 11115  03CD  0021               	movlb	1	; select bank1
 11116  03CE  0835               	movf	?_zeroPosition^(0+128),w
 11117  03CF  0022               	movlb	2	; select bank2
 11118  03D0  00E2               	movwf	_errorOut^(0+256)
 11119  03D1  0008               	return
 11120  03D2                     l8505:	
 11121                           ;cmd_parser.c: 88: case CMD_DRV_PEAK: errorOut = setDrvPeak(s->p1.paramI); break;
 11122                           
 11123  03D2  0021               	movlb	1	; select bank1
 11124  03D3  0A57               	incf	execCmd@s^(0+128),w
 11125  03D4  0086               	movwf	6
 11126  03D5  3001               	movlw	1	; select bank2/3
 11127  03D6  0087               	movwf	7
 11128  03D7  3F40               	moviw [0]fsr1
 11129  03D8  00B5               	movwf	setDrvPeak@pk^(0+128)
 11130  03D9  3F41               	moviw [1]fsr1
 11131  03DA  00B6               	movwf	(setDrvPeak@pk+1)^(0+128)
 11132  03DB  31A3  2342         	fcall	_setDrvPeak
 11133  03DD  0021               	movlb	1	; select bank1
 11134  03DE  0836               	movf	(?_setDrvPeak+1)^(0+128),w
 11135  03DF  0022               	movlb	2	; select bank2
 11136  03E0  00E3               	movwf	(_errorOut+1)^(0+256)
 11137  03E1  0021               	movlb	1	; select bank1
 11138  03E2  0835               	movf	?_setDrvPeak^(0+128),w
 11139  03E3  0022               	movlb	2	; select bank2
 11140  03E4  00E2               	movwf	_errorOut^(0+256)
 11141  03E5  0008               	return
 11142  03E6                     l8507:	
 11143                           ;cmd_parser.c: 89: case CMD_DRV_GAIN: errorOut = setDrvGain(s->p1.paramI); break;
 11144                           
 11145  03E6  0021               	movlb	1	; select bank1
 11146  03E7  0A57               	incf	execCmd@s^(0+128),w
 11147  03E8  0086               	movwf	6
 11148  03E9  3001               	movlw	1	; select bank2/3
 11149  03EA  0087               	movwf	7
 11150  03EB  3F40               	moviw [0]fsr1
 11151  03EC  00B5               	movwf	setDrvGain@gain^(0+128)
 11152  03ED  3F41               	moviw [1]fsr1
 11153  03EE  00B6               	movwf	(setDrvGain@gain+1)^(0+128)
 11154  03EF  3199  2132         	fcall	_setDrvGain
 11155  03F1  0021               	movlb	1	; select bank1
 11156  03F2  0836               	movf	(?_setDrvGain+1)^(0+128),w
 11157  03F3  0022               	movlb	2	; select bank2
 11158  03F4  00E3               	movwf	(_errorOut+1)^(0+256)
 11159  03F5  0021               	movlb	1	; select bank1
 11160  03F6  0835               	movf	?_setDrvGain^(0+128),w
 11161  03F7  0022               	movlb	2	; select bank2
 11162  03F8  00E2               	movwf	_errorOut^(0+256)
 11163  03F9  0008               	return
 11164  03FA                     l8509:	
 11165                           ;cmd_parser.c: 90: case CMD_DRV_PIEZOONTIME: errorOut = setDrvPiezoOnTime(s->p1.paramI);
      +                           break;
 11166                           
 11167  03FA  0021               	movlb	1	; select bank1
 11168  03FB  0A57               	incf	execCmd@s^(0+128),w
 11169  03FC  0086               	movwf	6
 11170  03FD  3001               	movlw	1	; select bank2/3
 11171  03FE  0087               	movwf	7
 11172  03FF  3F40               	moviw [0]fsr1
 11173  0400  00BD               	movwf	setDrvPiezoOnTime@t^(0+128)
 11174  0401  3F41               	moviw [1]fsr1
 11175  0402  00BE               	movwf	(setDrvPiezoOnTime@t+1)^(0+128)
 11176  0403  319D  25FE         	fcall	_setDrvPiezoOnTime
 11177  0405  0021               	movlb	1	; select bank1
 11178  0406  083E               	movf	(?_setDrvPiezoOnTime+1)^(0+128),w
 11179  0407  0022               	movlb	2	; select bank2
 11180  0408  00E3               	movwf	(_errorOut+1)^(0+256)
 11181  0409  0021               	movlb	1	; select bank1
 11182  040A  083D               	movf	?_setDrvPiezoOnTime^(0+128),w
 11183  040B  0022               	movlb	2	; select bank2
 11184  040C  00E2               	movwf	_errorOut^(0+256)
 11185  040D  0008               	return
 11186  040E                     l8511:	
 11187                           ;cmd_parser.c: 93: case CMD_HEATER_PRETIME: errorOut = setHeaterPreTime(s->p1.paramI); b
      +                          reak;
 11188                           
 11189  040E  0021               	movlb	1	; select bank1
 11190  040F  0A57               	incf	execCmd@s^(0+128),w
 11191  0410  0086               	movwf	6
 11192  0411  3001               	movlw	1	; select bank2/3
 11193  0412  0087               	movwf	7
 11194  0413  3F40               	moviw [0]fsr1
 11195  0414  00B5               	movwf	setHeaterPreTime@t^(0+128)
 11196  0415  3F41               	moviw [1]fsr1
 11197  0416  00B6               	movwf	(setHeaterPreTime@t+1)^(0+128)
 11198  0417  31A3  2300         	fcall	_setHeaterPreTime
 11199  0419  0021               	movlb	1	; select bank1
 11200  041A  0836               	movf	(?_setHeaterPreTime+1)^(0+128),w
 11201  041B  0022               	movlb	2	; select bank2
 11202  041C  00E3               	movwf	(_errorOut+1)^(0+256)
 11203  041D  0021               	movlb	1	; select bank1
 11204  041E  0835               	movf	?_setHeaterPreTime^(0+128),w
 11205  041F  0022               	movlb	2	; select bank2
 11206  0420  00E2               	movwf	_errorOut^(0+256)
 11207  0421  0008               	return
 11208  0422                     l8513:	
 11209                           ;cmd_parser.c: 94: case CMD_HEATER_POSTTIME: errorOut = setHeaterPostTime(s->p1.paramI);
      +                           break;
 11210                           
 11211  0422  0021               	movlb	1	; select bank1
 11212  0423  0A57               	incf	execCmd@s^(0+128),w
 11213  0424  0086               	movwf	6
 11214  0425  3001               	movlw	1	; select bank2/3
 11215  0426  0087               	movwf	7
 11216  0427  3F40               	moviw [0]fsr1
 11217  0428  00B5               	movwf	setHeaterPostTime@t^(0+128)
 11218  0429  3F41               	moviw [1]fsr1
 11219  042A  00B6               	movwf	(setHeaterPostTime@t+1)^(0+128)
 11220  042B  31A3  2355         	fcall	_setHeaterPostTime
 11221  042D  0021               	movlb	1	; select bank1
 11222  042E  0836               	movf	(?_setHeaterPostTime+1)^(0+128),w
 11223  042F  0022               	movlb	2	; select bank2
 11224  0430  00E3               	movwf	(_errorOut+1)^(0+256)
 11225  0431  0021               	movlb	1	; select bank1
 11226  0432  0835               	movf	?_setHeaterPostTime^(0+128),w
 11227  0433  0022               	movlb	2	; select bank2
 11228  0434  00E2               	movwf	_errorOut^(0+256)
 11229  0435  0008               	return
 11230  0436                     l8515:	
 11231                           ;cmd_parser.c: 95: case CMD_HEATER_H1OFF: errorOut = setH1OffTime(s->p1.paramI); break;
 11232                           
 11233  0436  0021               	movlb	1	; select bank1
 11234  0437  0A57               	incf	execCmd@s^(0+128),w
 11235  0438  0086               	movwf	6
 11236  0439  3001               	movlw	1	; select bank2/3
 11237  043A  0087               	movwf	7
 11238  043B  3F40               	moviw [0]fsr1
 11239  043C  00BD               	movwf	setH1OffTime@t^(0+128)
 11240  043D  3F41               	moviw [1]fsr1
 11241  043E  00BE               	movwf	(setH1OffTime@t+1)^(0+128)
 11242  043F  319C  240C         	fcall	_setH1OffTime
 11243  0441  0021               	movlb	1	; select bank1
 11244  0442  083E               	movf	(?_setH1OffTime+1)^(0+128),w
 11245  0443  0022               	movlb	2	; select bank2
 11246  0444  00E3               	movwf	(_errorOut+1)^(0+256)
 11247  0445  0021               	movlb	1	; select bank1
 11248  0446  083D               	movf	?_setH1OffTime^(0+128),w
 11249  0447  0022               	movlb	2	; select bank2
 11250  0448  00E2               	movwf	_errorOut^(0+256)
 11251  0449  0008               	return
 11252  044A                     l8517:	
 11253                           ;cmd_parser.c: 96: case CMD_HEATER_H2ON: errorOut = setH2OnTime(s->p1.paramI); break;
 11254                           
 11255  044A  0021               	movlb	1	; select bank1
 11256  044B  0A57               	incf	execCmd@s^(0+128),w
 11257  044C  0086               	movwf	6
 11258  044D  3001               	movlw	1	; select bank2/3
 11259  044E  0087               	movwf	7
 11260  044F  3F40               	moviw [0]fsr1
 11261  0450  00BD               	movwf	setH2OnTime@t^(0+128)
 11262  0451  3F41               	moviw [1]fsr1
 11263  0452  00BE               	movwf	(setH2OnTime@t+1)^(0+128)
 11264  0453  319C  245A         	fcall	_setH2OnTime
 11265  0455  0021               	movlb	1	; select bank1
 11266  0456  083E               	movf	(?_setH2OnTime+1)^(0+128),w
 11267  0457  0022               	movlb	2	; select bank2
 11268  0458  00E3               	movwf	(_errorOut+1)^(0+256)
 11269  0459  0021               	movlb	1	; select bank1
 11270  045A  083D               	movf	?_setH2OnTime^(0+128),w
 11271  045B  0022               	movlb	2	; select bank2
 11272  045C  00E2               	movwf	_errorOut^(0+256)
 11273  045D  0008               	return
 11274  045E                     l8519:	
 11275                           ;cmd_parser.c: 97: case CMD_HEATER_GAIN: errorOut = setLEDBrightnessRange(s->p1.paramI, 
      +                          s->p2.paramI); break;
 11276                           
 11277  045E  0021               	movlb	1	; select bank1
 11278  045F  0A57               	incf	execCmd@s^(0+128),w
 11279  0460  0086               	movwf	6
 11280  0461  3001               	movlw	1	; select bank2/3
 11281  0462  0087               	movwf	7
 11282  0463  3F40               	moviw [0]fsr1
 11283  0464  00B5               	movwf	setLEDBrightnessRange@r^(0+128)
 11284  0465  3F41               	moviw [1]fsr1
 11285  0466  00B6               	movwf	(setLEDBrightnessRange@r+1)^(0+128)
 11286  0467  0857               	movf	execCmd@s^(0+128),w
 11287  0468  3E0B               	addlw	11
 11288  0469  0086               	movwf	6
 11289  046A  3001               	movlw	1	; select bank2/3
 11290  046B  0087               	movwf	7
 11291  046C  3F40               	moviw [0]fsr1
 11292  046D  00B7               	movwf	setLEDBrightnessRange@tOB^(0+128)
 11293  046E  3F41               	moviw [1]fsr1
 11294  046F  00B8               	movwf	(setLEDBrightnessRange@tOB+1)^(0+128)
 11295  0470  31A4  2498         	fcall	_setLEDBrightnessRange
 11296  0472  0021               	movlb	1	; select bank1
 11297  0473  0836               	movf	(?_setLEDBrightnessRange+1)^(0+128),w
 11298  0474  0022               	movlb	2	; select bank2
 11299  0475  00E3               	movwf	(_errorOut+1)^(0+256)
 11300  0476  0021               	movlb	1	; select bank1
 11301  0477  0835               	movf	?_setLEDBrightnessRange^(0+128),w
 11302  0478  0022               	movlb	2	; select bank2
 11303  0479  00E2               	movwf	_errorOut^(0+256)
 11304  047A  0008               	return
 11305  047B                     l8521:	
 11306                           ;cmd_parser.c: 98: case CMD_HEATER_PWR: errorOut = setLEDPwr(s->p1.paramI, s->p2.paramI)
      +                          ; break;
 11307                           
 11308  047B  0021               	movlb	1	; select bank1
 11309  047C  0A57               	incf	execCmd@s^(0+128),w
 11310  047D  0086               	movwf	6
 11311  047E  3001               	movlw	1	; select bank2/3
 11312  047F  0087               	movwf	7
 11313  0480  3F40               	moviw [0]fsr1
 11314  0481  00B5               	movwf	setLEDPwr@pwr^(0+128)
 11315  0482  3F41               	moviw [1]fsr1
 11316  0483  00B6               	movwf	(setLEDPwr@pwr+1)^(0+128)
 11317  0484  0857               	movf	execCmd@s^(0+128),w
 11318  0485  3E0B               	addlw	11
 11319  0486  0086               	movwf	6
 11320  0487  3001               	movlw	1	; select bank2/3
 11321  0488  0087               	movwf	7
 11322  0489  3F40               	moviw [0]fsr1
 11323  048A  00B7               	movwf	setLEDPwr@topOrBottom^(0+128)
 11324  048B  3F41               	moviw [1]fsr1
 11325  048C  00B8               	movwf	(setLEDPwr@topOrBottom+1)^(0+128)
 11326  048D  31A4  24B6         	fcall	_setLEDPwr
 11327  048F  0021               	movlb	1	; select bank1
 11328  0490  0836               	movf	(?_setLEDPwr+1)^(0+128),w
 11329  0491  0022               	movlb	2	; select bank2
 11330  0492  00E3               	movwf	(_errorOut+1)^(0+256)
 11331  0493  0021               	movlb	1	; select bank1
 11332  0494  0835               	movf	?_setLEDPwr^(0+128),w
 11333  0495  0022               	movlb	2	; select bank2
 11334  0496  00E2               	movwf	_errorOut^(0+256)
 11335  0497  0008               	return
 11336  0498                     l8523:	
 11337                           ;cmd_parser.c: 99: case CMD_HEATER_TOGGLE: errorOut = setHeaterToggle(s->p1.paramI, s->p
      +                          2.paramI); break;
 11338                           
 11339  0498  0021               	movlb	1	; select bank1
 11340  0499  0A57               	incf	execCmd@s^(0+128),w
 11341  049A  0086               	movwf	6
 11342  049B  3001               	movlw	1	; select bank2/3
 11343  049C  0087               	movwf	7
 11344  049D  3F40               	moviw [0]fsr1
 11345  049E  00B5               	movwf	setHeaterToggle@num^(0+128)
 11346  049F  3F41               	moviw [1]fsr1
 11347  04A0  00B6               	movwf	(setHeaterToggle@num+1)^(0+128)
 11348  04A1  0857               	movf	execCmd@s^(0+128),w
 11349  04A2  3E0B               	addlw	11
 11350  04A3  0086               	movwf	6
 11351  04A4  3001               	movlw	1	; select bank2/3
 11352  04A5  0087               	movwf	7
 11353  04A6  3F40               	moviw [0]fsr1
 11354  04A7  00B7               	movwf	setHeaterToggle@topOrB^(0+128)
 11355  04A8  3F41               	moviw [1]fsr1
 11356  04A9  00B8               	movwf	(setHeaterToggle@topOrB+1)^(0+128)
 11357  04AA  3196  26FC         	fcall	_setHeaterToggle
 11358  04AC  0021               	movlb	1	; select bank1
 11359  04AD  0836               	movf	(?_setHeaterToggle+1)^(0+128),w
 11360  04AE  0022               	movlb	2	; select bank2
 11361  04AF  00E3               	movwf	(_errorOut+1)^(0+256)
 11362  04B0  0021               	movlb	1	; select bank1
 11363  04B1  0835               	movf	?_setHeaterToggle^(0+128),w
 11364  04B2  0022               	movlb	2	; select bank2
 11365  04B3  00E2               	movwf	_errorOut^(0+256)
 11366  04B4  0008               	return
 11367  04B5                     l8525:	
 11368                           ;cmd_parser.c: 100: case CMD_HEATER_TIMED: errorOut = timedActiveHeatOn(s->p1.paramL, s-
      +                          >p2.paramI); break;
 11369                           
 11370  04B5  0021               	movlb	1	; select bank1
 11371  04B6  0A57               	incf	execCmd@s^(0+128),w
 11372  04B7  0086               	movwf	6
 11373  04B8  3001               	movlw	1	; select bank2/3
 11374  04B9  0087               	movwf	7
 11375  04BA  3F40               	moviw [0]fsr1
 11376  04BB  00B5               	movwf	timedActiveHeatOn@onTime^(0+128)
 11377  04BC  3F41               	moviw [1]fsr1
 11378  04BD  00B6               	movwf	(timedActiveHeatOn@onTime+1)^(0+128)
 11379  04BE  3F42               	moviw [2]fsr1
 11380  04BF  00B7               	movwf	(timedActiveHeatOn@onTime+2)^(0+128)
 11381  04C0  3F43               	moviw [3]fsr1
 11382  04C1  00B8               	movwf	(timedActiveHeatOn@onTime+3)^(0+128)
 11383  04C2  0857               	movf	execCmd@s^(0+128),w
 11384  04C3  3E0B               	addlw	11
 11385  04C4  0086               	movwf	6
 11386  04C5  3001               	movlw	1	; select bank2/3
 11387  04C6  0087               	movwf	7
 11388  04C7  3F40               	moviw [0]fsr1
 11389  04C8  00B9               	movwf	timedActiveHeatOn@topOrBorBoth^(0+128)
 11390  04C9  3F41               	moviw [1]fsr1
 11391  04CA  00BA               	movwf	(timedActiveHeatOn@topOrBorBoth+1)^(0+128)
 11392  04CB  3189  2158         	fcall	_timedActiveHeatOn
 11393  04CD  0021               	movlb	1	; select bank1
 11394  04CE  0836               	movf	(?_timedActiveHeatOn+1)^(0+128),w
 11395  04CF  0022               	movlb	2	; select bank2
 11396  04D0  00E3               	movwf	(_errorOut+1)^(0+256)
 11397  04D1  0021               	movlb	1	; select bank1
 11398  04D2  0835               	movf	?_timedActiveHeatOn^(0+128),w
 11399  04D3  0022               	movlb	2	; select bank2
 11400  04D4  00E2               	movwf	_errorOut^(0+256)
 11401  04D5  0008               	return
 11402  04D6                     l8527:	
 11403                           ;cmd_parser.c: 103: case CMD_SETA: errorOut = setActive(s->p1.paramI, s->p2.paramI); bre
      +                          ak;
 11404                           
 11405  04D6  0021               	movlb	1	; select bank1
 11406  04D7  0A57               	incf	execCmd@s^(0+128),w
 11407  04D8  0086               	movwf	6
 11408  04D9  3001               	movlw	1	; select bank2/3
 11409  04DA  0087               	movwf	7
 11410  04DB  3F40               	moviw [0]fsr1
 11411  04DC  00B5               	movwf	setActive@probeNum^(0+128)
 11412  04DD  3F41               	moviw [1]fsr1
 11413  04DE  00B6               	movwf	(setActive@probeNum+1)^(0+128)
 11414  04DF  0857               	movf	execCmd@s^(0+128),w
 11415  04E0  3E0B               	addlw	11
 11416  04E1  0086               	movwf	6
 11417  04E2  3001               	movlw	1	; select bank2/3
 11418  04E3  0087               	movwf	7
 11419  04E4  3F40               	moviw [0]fsr1
 11420  04E5  00B7               	movwf	setActive@onOff^(0+128)
 11421  04E6  3F41               	moviw [1]fsr1
 11422  04E7  00B8               	movwf	(setActive@onOff+1)^(0+128)
 11423  04E8  3195  2593         	fcall	_setActive
 11424  04EA  0021               	movlb	1	; select bank1
 11425  04EB  0836               	movf	(?_setActive+1)^(0+128),w
 11426  04EC  0022               	movlb	2	; select bank2
 11427  04ED  00E3               	movwf	(_errorOut+1)^(0+256)
 11428  04EE  0021               	movlb	1	; select bank1
 11429  04EF  0835               	movf	?_setActive^(0+128),w
 11430  04F0  0022               	movlb	2	; select bank2
 11431  04F1  00E2               	movwf	_errorOut^(0+256)
 11432  04F2  0008               	return
 11433  04F3                     l8529:	
 11434                           ;cmd_parser.c: 104: case CMD_SETM: errorOut = setMoveMask(s->p1.paramI, s->p2.paramI); b
      +                          reak;
 11435                           
 11436  04F3  0021               	movlb	1	; select bank1
 11437  04F4  0A57               	incf	execCmd@s^(0+128),w
 11438  04F5  0086               	movwf	6
 11439  04F6  3001               	movlw	1	; select bank2/3
 11440  04F7  0087               	movwf	7
 11441  04F8  3F40               	moviw [0]fsr1
 11442  04F9  00B5               	movwf	setMoveMask@probeNum^(0+128)
 11443  04FA  3F41               	moviw [1]fsr1
 11444  04FB  00B6               	movwf	(setMoveMask@probeNum+1)^(0+128)
 11445  04FC  0857               	movf	execCmd@s^(0+128),w
 11446  04FD  3E0B               	addlw	11
 11447  04FE  0086               	movwf	6
 11448  04FF  3001               	movlw	1	; select bank2/3
 11449  0500  0087               	movwf	7
 11450  0501  3F40               	moviw [0]fsr1
 11451  0502  00B7               	movwf	setMoveMask@onOff^(0+128)
 11452  0503  3F41               	moviw [1]fsr1
 11453  0504  00B8               	movwf	(setMoveMask@onOff+1)^(0+128)
 11454  0505  3194  2435         	fcall	_setMoveMask
 11455  0507  0021               	movlb	1	; select bank1
 11456  0508  0836               	movf	(?_setMoveMask+1)^(0+128),w
 11457  0509  0022               	movlb	2	; select bank2
 11458  050A  00E3               	movwf	(_errorOut+1)^(0+256)
 11459  050B  0021               	movlb	1	; select bank1
 11460  050C  0835               	movf	?_setMoveMask^(0+128),w
 11461  050D  0022               	movlb	2	; select bank2
 11462  050E  00E2               	movwf	_errorOut^(0+256)
 11463  050F  0008               	return
 11464  0510                     l8531:	
 11465                           ;cmd_parser.c: 105: case CMD_GET_ACTIVE: errorOut = getActive(); break;
 11466                           
 11467  0510  319B  2324         	fcall	_getActive
 11468  0512  0021               	movlb	1	; select bank1
 11469  0513  0836               	movf	(?_getActive+1)^(0+128),w
 11470  0514  0022               	movlb	2	; select bank2
 11471  0515  00E3               	movwf	(_errorOut+1)^(0+256)
 11472  0516  0021               	movlb	1	; select bank1
 11473  0517  0835               	movf	?_getActive^(0+128),w
 11474  0518  0022               	movlb	2	; select bank2
 11475  0519  00E2               	movwf	_errorOut^(0+256)
 11476  051A  0008               	return
 11477  051B                     l8533:	
 11478                           ;cmd_parser.c: 106: case CMD_GET_MOVABLE: errorOut = getMoveMask(); break;
 11479                           
 11480  051B  319B  2371         	fcall	_getMoveMask
 11481  051D  0021               	movlb	1	; select bank1
 11482  051E  0836               	movf	(?_getMoveMask+1)^(0+128),w
 11483  051F  0022               	movlb	2	; select bank2
 11484  0520  00E3               	movwf	(_errorOut+1)^(0+256)
 11485  0521  0021               	movlb	1	; select bank1
 11486  0522  0835               	movf	?_getMoveMask^(0+128),w
 11487  0523  0022               	movlb	2	; select bank2
 11488  0524  00E2               	movwf	_errorOut^(0+256)
 11489  0525  0008               	return
 11490  0526                     l8535:	
 11491                           ;cmd_parser.c: 107: case CMD_MOTION_STATUS: errorOut = getMotionStatus(); break;
 11492                           
 11493  0526  31A5  2598         	fcall	_getMotionStatus
 11494  0528  0021               	movlb	1	; select bank1
 11495  0529  0836               	movf	(?_getMotionStatus+1)^(0+128),w
 11496  052A  0022               	movlb	2	; select bank2
 11497  052B  00E3               	movwf	(_errorOut+1)^(0+256)
 11498  052C  0021               	movlb	1	; select bank1
 11499  052D  0835               	movf	?_getMotionStatus^(0+128),w
 11500  052E  0022               	movlb	2	; select bank2
 11501  052F  00E2               	movwf	_errorOut^(0+256)
 11502  0530  0008               	return
 11503  0531                     l8537:	
 11504                           ;cmd_parser.c: 108: case CMD_DOMOVE: errorOut = doMove(); break;
 11505                           
 11506  0531  3187  273B         	fcall	_doMove
 11507  0533  0021               	movlb	1	; select bank1
 11508  0534  0840               	movf	(?_doMove+1)^(0+128),w
 11509  0535  0022               	movlb	2	; select bank2
 11510  0536  00E3               	movwf	(_errorOut+1)^(0+256)
 11511  0537  0021               	movlb	1	; select bank1
 11512  0538  083F               	movf	?_doMove^(0+128),w
 11513  0539  0022               	movlb	2	; select bank2
 11514  053A  00E2               	movwf	_errorOut^(0+256)
 11515  053B  0008               	return
 11516  053C                     l8539:	
 11517                           ;cmd_parser.c: 109: case CMD_COMM_CHECK: errorOut = commCheck(); break;
 11518                           
 11519  053C  318A  220D         	fcall	_commCheck
 11520  053E  0021               	movlb	1	; select bank1
 11521  053F  0855               	movf	(?_commCheck+1)^(0+128),w
 11522  0540  0022               	movlb	2	; select bank2
 11523  0541  00E3               	movwf	(_errorOut+1)^(0+256)
 11524  0542  0021               	movlb	1	; select bank1
 11525  0543  0854               	movf	?_commCheck^(0+128),w
 11526  0544  0022               	movlb	2	; select bank2
 11527  0545  00E2               	movwf	_errorOut^(0+256)
 11528  0546  0008               	return
 11529  0547                     l8541:	
 11530                           ;cmd_parser.c: 110: case CMD_PING: printf("!\n"); break;
 11531                           
 11532  0547  30C8               	movlw	low ((STR_84+20)| (0+32768))
 11533  0548  0021               	movlb	1	; select bank1
 11534  0549  00A0               	movwf	printf@f^(0+128)
 11535  054A  30A8               	movlw	high ((STR_84+20)| (0+32768))
 11536  054B  00A1               	movwf	(printf@f^(0+128)+1)
 11537  054C  318E  26CE         	fcall	_printf
 11538  054E  0008               	return
 11539  054F                     l8543:	
 11540                           ;cmd_parser.c: 111: default: printf("UNRECOGNIZED COMMAND!\n");
 11541                           
 11542  054F  30B4               	movlw	low (STR_84| (0+32768))
 11543  0550  0021               	movlb	1	; select bank1
 11544  0551  00A0               	movwf	printf@f^(0+128)
 11545  0552  30A8               	movlw	high (STR_84| (0+32768))
 11546  0553  00A1               	movwf	(printf@f^(0+128)+1)
 11547  0554  318E  26CE         	fcall	_printf
 11548                           
 11549                           ;cmd_parser.c: 118: }
 11550  0556  0008               	return
 11551  0557                     l8545:	
 11552  0557  0021               	movlb	1	; select bank1
 11553  0558  0857               	movf	execCmd@s^(0+128),w
 11554  0559  0086               	movwf	6
 11555  055A  3001               	movlw	1	; select bank2/3
 11556  055B  0087               	movwf	7
 11557  055C  0801               	movf	1,w
 11558                           
 11559                           ; Switch size 1, requested type "space"
 11560                           ; Number of cases is 24, Range of values is 1 to 25
 11561                           ; switch strategies available:
 11562                           ; Name         Instructions Cycles
 11563                           ; direct_byte           59     9 (fixed)
 11564                           ; simple_byte           73    37 (average)
 11565                           ; jumptable            263     9 (fixed)
 11566                           ;	Chosen strategy is direct_byte
 11567  055D  3EFF               	addlw	-1
 11568  055E  1C03               	skipc
 11569  055F  2D4F               	goto	l8543
 11570  0560  0084               	movwf	4
 11571  0561  3019               	movlw	25
 11572  0562  0204               	subwf	4,w
 11573  0563  1803               	skipnc
 11574  0564  2D4F               	goto	l8543
 11575  0565  31A0               	movlp	high S8869
 11576  0566  3504               	lslf	4,w
 11577  0567  3E00               	addlw	low S8869
 11578  0568  0082               	movwf	2
 11579                           
 11580                           ;cmd_parser.c: 120: return errorOut;
 11581                           ;	Return value of _execCmd is never used
 11582  0569  0008               	return
 11583  056A                     __end_of_execCmd:	
 11584                           
 11585                           	psect	swtext1
 11586  2000                     __pswtext1:	
 11587  2000                     S8869:	
 11588  2000  3183  2B94         	ljmp	l8497
 11589  2002  3183  2B80         	ljmp	l8495
 11590  2004  3183  2BA8         	ljmp	l8499
 11591  2006  3183  2BBC         	ljmp	l8501
 11592  2008  3185  2D4F         	ljmp	l8543
 11593  200A  3184  2CD6         	ljmp	l8527
 11594  200C  3184  2CF3         	ljmp	l8529
 11595  200E  3183  2BC7         	ljmp	l8503
 11596  2010  3183  2BD2         	ljmp	l8505
 11597  2012  3183  2BE6         	ljmp	l8507
 11598  2014  3183  2BFA         	ljmp	l8509
 11599  2016  3184  2C0E         	ljmp	l8511
 11600  2018  3184  2C22         	ljmp	l8513
 11601  201A  3184  2C36         	ljmp	l8515
 11602  201C  3184  2C4A         	ljmp	l8517
 11603  201E  3184  2C5E         	ljmp	l8519
 11604  2020  3184  2C7B         	ljmp	l8521
 11605  2022  3184  2C98         	ljmp	l8523
 11606  2024  3184  2CB5         	ljmp	l8525
 11607  2026  3185  2D10         	ljmp	l8531
 11608  2028  3185  2D1B         	ljmp	l8533
 11609  202A  3185  2D26         	ljmp	l8535
 11610  202C  3185  2D31         	ljmp	l8537
 11611  202E  3185  2D3C         	ljmp	l8539
 11612  2030  3185  2D47         	ljmp	l8541
 11613                           
 11614                           	psect	text20
 11615  14A8                     __ptext20:	
 11616 ;; *************** function _zeroPosition *****************
 11617 ;; Defined at:
 11618 ;;		line 373 in file "main.c"
 11619 ;; Parameters:    Size  Location     Type
 11620 ;;		None
 11621 ;; Auto vars:     Size  Location     Type
 11622 ;;  i               2   41[BANK0 ] int 
 11623 ;; Return value:  Size  Location     Type
 11624 ;;                  2   21[BANK1 ] int 
 11625 ;; Registers used:
 11626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11627 ;; Tracked objects:
 11628 ;;		On entry : 0/0
 11629 ;;		On exit  : 0/0
 11630 ;;		Unchanged: 0/0
 11631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11632 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11633 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11634 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11635 ;;      Totals:         0       2      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11636 ;;Total ram usage:       12 bytes
 11637 ;; Hardware stack levels used:    1
 11638 ;; Hardware stack levels required when called:    9
 11639 ;; This function calls:
 11640 ;;		_printf
 11641 ;; This function is called by:
 11642 ;;		_execCmd
 11643 ;; This function uses a non-reentrant model
 11644 ;;
 11645                           
 11646                           
 11647                           ;psect for function _zeroPosition
 11648  14A8                     _zeroPosition:	
 11649                           
 11650                           ;main.c: 374: for(int i = 0; i<24; i++){
 11651                           
 11652                           ;incstack = 0
 11653                           ; Regs used in _zeroPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11654  14A8  0020               	movlb	0	; select bank0
 11655  14A9  01C9               	clrf	zeroPosition@i
 11656  14AA  01CA               	clrf	zeroPosition@i+1
 11657  14AB  084A               	movf	zeroPosition@i+1,w
 11658  14AC  3A80               	xorlw	128
 11659  14AD  0021               	movlb	1	; select bank1
 11660  14AE  00B7               	movwf	??_zeroPosition^(0+128)
 11661  14AF  3080               	movlw	128
 11662  14B0  0237               	subwf	??_zeroPosition^(0+128),w
 11663  14B1  1D03               	skipz
 11664  14B2  2CB6               	goto	u8035
 11665  14B3  3018               	movlw	24
 11666  14B4  0020               	movlb	0	; select bank0
 11667  14B5  0249               	subwf	zeroPosition@i,w
 11668  14B6                     u8035:	
 11669  14B6  1803               	btfsc	3,0
 11670  14B7  2D12               	goto	l8103
 11671  14B8                     l8095:	
 11672                           
 11673                           ;main.c: 375: if((activeMask & (1UL << i)) > 0)
 11674  14B8  0021               	movlb	1	; select bank1
 11675  14B9  0863               	movf	_activeMask^(0+128),w
 11676  14BA  00B7               	movwf	??_zeroPosition^(0+128)
 11677  14BB  0864               	movf	(_activeMask+1)^(0+128),w
 11678  14BC  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 11679  14BD  0865               	movf	(_activeMask+2)^(0+128),w
 11680  14BE  00B9               	movwf	(??_zeroPosition^(0+128)+2)
 11681  14BF  0866               	movf	(_activeMask+3)^(0+128),w
 11682  14C0  00BA               	movwf	(??_zeroPosition^(0+128)+3)
 11683  14C1  3001               	movlw	1
 11684  14C2  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 11685  14C3  3000               	movlw	0
 11686  14C4  00BC               	movwf	((??_zeroPosition+4)^(0+128)+1)
 11687  14C5  3000               	movlw	0
 11688  14C6  00BD               	movwf	((??_zeroPosition+4)^(0+128)+2)
 11689  14C7  3000               	movlw	0
 11690  14C8  00BE               	movwf	((??_zeroPosition+4)^(0+128)+3)
 11691  14C9  0020               	movlb	0	; select bank0
 11692  14CA  0A49               	incf	zeroPosition@i,w
 11693  14CB  0021               	movlb	1	; select bank1
 11694  14CC  2CD1               	goto	u8040
 11695  14CD                     u8045:	
 11696  14CD  35BB               	lslf	(??_zeroPosition+4)^(0+128),f
 11697  14CE  0DBC               	rlf	((??_zeroPosition+4)^(0+128)+1),f
 11698  14CF  0DBD               	rlf	((??_zeroPosition+4)^(0+128)+2),f
 11699  14D0  0DBE               	rlf	((??_zeroPosition+4)^(0+128)+3),f
 11700  14D1                     u8040:	
 11701  14D1  0B89               	decfsz	9,f
 11702  14D2  2CCD               	goto	u8045
 11703  14D3  083B               	movf	(??_zeroPosition+4)^(0+128),w
 11704  14D4  05B7               	andwf	??_zeroPosition^(0+128),f
 11705  14D5  083C               	movf	(??_zeroPosition+5)^(0+128),w
 11706  14D6  05B8               	andwf	(??_zeroPosition^(0+128)+1),f
 11707  14D7  083D               	movf	(??_zeroPosition+6)^(0+128),w
 11708  14D8  05B9               	andwf	(??_zeroPosition^(0+128)+2),f
 11709  14D9  083E               	movf	(??_zeroPosition+7)^(0+128),w
 11710  14DA  05BA               	andwf	(??_zeroPosition^(0+128)+3),f
 11711  14DB  083A               	movf	(??_zeroPosition+3)^(0+128),w
 11712  14DC  0439               	iorwf	(??_zeroPosition+2)^(0+128),w
 11713  14DD  0438               	iorwf	(??_zeroPosition+1)^(0+128),w
 11714  14DE  0437               	iorwf	??_zeroPosition^(0+128),w
 11715  14DF  1903               	skipnz
 11716  14E0  2D00               	goto	l8099
 11717                           
 11718                           ;main.c: 376: currentPositions_steps[i]=0;
 11719  14E1  0020               	movlb	0	; select bank0
 11720  14E2  084A               	movf	zeroPosition@i+1,w
 11721  14E3  0021               	movlb	1	; select bank1
 11722  14E4  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 11723  14E5  0020               	movlb	0	; select bank0
 11724  14E6  0849               	movf	zeroPosition@i,w
 11725  14E7  0021               	movlb	1	; select bank1
 11726  14E8  00B7               	movwf	??_zeroPosition^(0+128)
 11727  14E9  35B7               	lslf	??_zeroPosition^(0+128),f
 11728  14EA  0DB8               	rlf	(??_zeroPosition^(0+128)+1),f
 11729  14EB  35B7               	lslf	??_zeroPosition^(0+128),f
 11730  14EC  0DB8               	rlf	(??_zeroPosition^(0+128)+1),f
 11731  14ED  3090               	movlw	144
 11732  14EE  00B9               	movwf	(??_zeroPosition+2)^(0+128)
 11733  14EF  3027               	movlw	39
 11734  14F0  00BA               	movwf	((??_zeroPosition+2)^(0+128)+1)
 11735  14F1  0837               	movf	??_zeroPosition^(0+128),w
 11736  14F2  0739               	addwf	(??_zeroPosition+2)^(0+128),w
 11737  14F3  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 11738  14F4  0838               	movf	(??_zeroPosition+1)^(0+128),w
 11739  14F5  3D3A               	addwfc	(??_zeroPosition+3)^(0+128),w
 11740  14F6  00BC               	movwf	(??_zeroPosition+5)^(0+128)
 11741  14F7  083B               	movf	(??_zeroPosition+4)^(0+128),w
 11742  14F8  0086               	movwf	6
 11743  14F9  083C               	movf	(??_zeroPosition+5)^(0+128),w
 11744  14FA  0087               	movwf	7
 11745  14FB  3000               	movlw	0
 11746  14FC  3FC0               	movwi [0]fsr1
 11747  14FD  3FC1               	movwi [1]fsr1
 11748  14FE  3FC2               	movwi [2]fsr1
 11749  14FF  3FC3               	movwi [3]fsr1
 11750  1500                     l8099:	
 11751  1500  3001               	movlw	1
 11752  1501  0020               	movlb	0	; select bank0
 11753  1502  07C9               	addwf	zeroPosition@i,f
 11754  1503  3000               	movlw	0
 11755  1504  3DCA               	addwfc	zeroPosition@i+1,f
 11756  1505  084A               	movf	zeroPosition@i+1,w
 11757  1506  3A80               	xorlw	128
 11758  1507  0021               	movlb	1	; select bank1
 11759  1508  00B7               	movwf	??_zeroPosition^(0+128)
 11760  1509  3080               	movlw	128
 11761  150A  0237               	subwf	??_zeroPosition^(0+128),w
 11762  150B  1D03               	skipz
 11763  150C  2D10               	goto	u8065
 11764  150D  3018               	movlw	24
 11765  150E  0020               	movlb	0	; select bank0
 11766  150F  0249               	subwf	zeroPosition@i,w
 11767  1510                     u8065:	
 11768  1510  1C03               	skipc
 11769  1511  2CB8               	goto	l8095
 11770  1512                     l8103:	
 11771                           
 11772                           ;main.c: 377: }
 11773                           ;main.c: 378: printf("A\n");
 11774  1512  3055               	movlw	low (STR_7| (0+32768))
 11775  1513  0021               	movlb	1	; select bank1
 11776  1514  00A0               	movwf	printf@f^(0+128)
 11777  1515  30AA               	movlw	high (STR_7| (0+32768))
 11778  1516  00A1               	movwf	(printf@f^(0+128)+1)
 11779  1517  318E  26CE         	fcall	_printf
 11780                           
 11781                           ;main.c: 379: return 0;
 11782  1519  0021               	movlb	1	; select bank1
 11783  151A  01B5               	clrf	?_zeroPosition^(0+128)
 11784  151B  01B6               	clrf	(?_zeroPosition+1)^(0+128)
 11785  151C  0008               	return
 11786  151D                     __end_of_zeroPosition:	
 11787                           
 11788                           	psect	text21
 11789  0958                     __ptext21:	
 11790 ;; *************** function _timedActiveHeatOn *****************
 11791 ;; Defined at:
 11792 ;;		line 491 in file "main.c"
 11793 ;; Parameters:    Size  Location     Type
 11794 ;;  onTime          4   21[BANK1 ] long 
 11795 ;;  topOrBorBoth    2   25[BANK1 ] int 
 11796 ;; Auto vars:     Size  Location     Type
 11797 ;;  t               2   32[BANK1 ] int 
 11798 ;; Return value:  Size  Location     Type
 11799 ;;                  2   21[BANK1 ] int 
 11800 ;; Registers used:
 11801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11802 ;; Tracked objects:
 11803 ;;		On entry : 0/0
 11804 ;;		On exit  : 0/0
 11805 ;;		Unchanged: 0/0
 11806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11807 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11808 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11809 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11810 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11811 ;;Total ram usage:       13 bytes
 11812 ;; Hardware stack levels used:    1
 11813 ;; Hardware stack levels required when called:    9
 11814 ;; This function calls:
 11815 ;;		_LEDsOn
 11816 ;;		_printf
 11817 ;; This function is called by:
 11818 ;;		_execCmd
 11819 ;; This function uses a non-reentrant model
 11820 ;;
 11821                           
 11822                           
 11823                           ;psect for function _timedActiveHeatOn
 11824  0958                     _timedActiveHeatOn:	
 11825                           
 11826                           ;main.c: 492: _delay((unsigned long)((2000)*(1000000/4000.0)));
 11827                           
 11828                           ;incstack = 0
 11829                           ; Regs used in _timedActiveHeatOn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11830  0958  3003               	movlw	3
 11831  0959  0021               	movlb	1	; select bank1
 11832  095A  00BC               	movwf	(??_timedActiveHeatOn^(0+128)+1)
 11833  095B  308A               	movlw	138
 11834  095C  00BB               	movwf	??_timedActiveHeatOn^(0+128)
 11835  095D  3055               	movlw	85
 11836  095E                     u9077:	
 11837  095E  0B89               	decfsz	9,f
 11838  095F  295E               	goto	u9077
 11839  0960  0BBB               	decfsz	??_timedActiveHeatOn^(0+128),f
 11840  0961  295E               	goto	u9077
 11841  0962  0BBC               	decfsz	(??_timedActiveHeatOn^(0+128)+1),f
 11842  0963  295E               	goto	u9077
 11843  0964  3200               	nop2
 11844                           
 11845                           ;main.c: 493: do { LATCbits.LATC1 = 0; } while(0);
 11846  0965  0022               	movlb	2	; select bank2
 11847  0966  108E               	bcf	14,1	;volatile
 11848                           
 11849                           ;main.c: 494: if(topOrBorBoth == 1){
 11850  0967  0021               	movlb	1	; select bank1
 11851  0968  0339               	decf	timedActiveHeatOn@topOrBorBoth^(0+128),w
 11852  0969  043A               	iorwf	(timedActiveHeatOn@topOrBorBoth+1)^(0+128),w
 11853  096A  1D03               	btfss	3,2
 11854  096B  297D               	goto	l8245
 11855                           
 11856                           ;main.c: 495: LEDsOn(activeMask, 1);
 11857  096C  0866               	movf	(_activeMask+3)^(0+128),w
 11858  096D  0020               	movlb	0	; select bank0
 11859  096E  00C7               	movwf	LEDsOn@LEDpins+3
 11860  096F  0021               	movlb	1	; select bank1
 11861  0970  0865               	movf	(_activeMask+2)^(0+128),w
 11862  0971  0020               	movlb	0	; select bank0
 11863  0972  00C6               	movwf	LEDsOn@LEDpins+2
 11864  0973  0021               	movlb	1	; select bank1
 11865  0974  0864               	movf	(_activeMask+1)^(0+128),w
 11866  0975  0020               	movlb	0	; select bank0
 11867  0976  00C5               	movwf	LEDsOn@LEDpins+1
 11868  0977  0021               	movlb	1	; select bank1
 11869  0978  0863               	movf	_activeMask^(0+128),w
 11870  0979  0020               	movlb	0	; select bank0
 11871  097A  00C4               	movwf	LEDsOn@LEDpins
 11872  097B  3001               	movlw	1
 11873  097C  29B0               	goto	L24
 11874  097D                     l8245:	
 11875                           ;main.c: 496: }
 11876                           
 11877                           
 11878                           ;main.c: 497: else if (topOrBorBoth == 2){
 11879  097D  3002               	movlw	2
 11880  097E  0021               	movlb	1	; select bank1
 11881  097F  0639               	xorwf	timedActiveHeatOn@topOrBorBoth^(0+128),w
 11882  0980  043A               	iorwf	(timedActiveHeatOn@topOrBorBoth+1)^(0+128),w
 11883  0981  1903               	btfsc	3,2
 11884  0982  29A0               	goto	L25
 11885                           
 11886                           ;main.c: 500: else if (topOrBorBoth == 3){
 11887                           
 11888                           ;main.c: 499: }
 11889                           
 11890                           ;main.c: 498: LEDsOn(activeMask, 2);
 11891  0983  3003               	movlw	3
 11892  0984  0021               	movlb	1	; select bank1
 11893  0985  0639               	xorwf	timedActiveHeatOn@topOrBorBoth^(0+128),w
 11894  0986  043A               	iorwf	(timedActiveHeatOn@topOrBorBoth+1)^(0+128),w
 11895  0987  1D03               	btfss	3,2
 11896  0988  29B6               	goto	l8253
 11897                           
 11898                           ;main.c: 501: LEDsOn(activeMask, 1);
 11899  0989  0866               	movf	(_activeMask+3)^(0+128),w
 11900  098A  0020               	movlb	0	; select bank0
 11901  098B  00C7               	movwf	LEDsOn@LEDpins+3
 11902  098C  0021               	movlb	1	; select bank1
 11903  098D  0865               	movf	(_activeMask+2)^(0+128),w
 11904  098E  0020               	movlb	0	; select bank0
 11905  098F  00C6               	movwf	LEDsOn@LEDpins+2
 11906  0990  0021               	movlb	1	; select bank1
 11907  0991  0864               	movf	(_activeMask+1)^(0+128),w
 11908  0992  0020               	movlb	0	; select bank0
 11909  0993  00C5               	movwf	LEDsOn@LEDpins+1
 11910  0994  0021               	movlb	1	; select bank1
 11911  0995  0863               	movf	_activeMask^(0+128),w
 11912  0996  0020               	movlb	0	; select bank0
 11913  0997  00C4               	movwf	LEDsOn@LEDpins
 11914  0998  3001               	movlw	1
 11915  0999  00C8               	movwf	LEDsOn@topOrBottom
 11916  099A  3000               	movlw	0
 11917  099B  00C9               	movwf	LEDsOn@topOrBottom+1
 11918  099C  31A5  2555  3189   	fcall	_LEDsOn
 11919                           
 11920                           ;main.c: 502: LEDsOn(activeMask, 2);
 11921  099F  0021               	movlb	1	; select bank1
 11922  09A0                     L25:	
 11923  09A0  0866               	movf	(_activeMask+3)^(0+128),w
 11924  09A1  0020               	movlb	0	; select bank0
 11925  09A2  00C7               	movwf	LEDsOn@LEDpins+3
 11926  09A3  0021               	movlb	1	; select bank1
 11927  09A4  0865               	movf	(_activeMask+2)^(0+128),w
 11928  09A5  0020               	movlb	0	; select bank0
 11929  09A6  00C6               	movwf	LEDsOn@LEDpins+2
 11930  09A7  0021               	movlb	1	; select bank1
 11931  09A8  0864               	movf	(_activeMask+1)^(0+128),w
 11932  09A9  0020               	movlb	0	; select bank0
 11933  09AA  00C5               	movwf	LEDsOn@LEDpins+1
 11934  09AB  0021               	movlb	1	; select bank1
 11935  09AC  0863               	movf	_activeMask^(0+128),w
 11936  09AD  0020               	movlb	0	; select bank0
 11937  09AE  00C4               	movwf	LEDsOn@LEDpins
 11938  09AF  3002               	movlw	2
 11939  09B0                     L24:	
 11940  09B0  00C8               	movwf	LEDsOn@topOrBottom
 11941  09B1  3000               	movlw	0
 11942  09B2  00C9               	movwf	LEDsOn@topOrBottom+1
 11943  09B3  31A5  2555  3189   	fcall	_LEDsOn
 11944  09B6                     l8253:	
 11945                           
 11946                           ;main.c: 503: }
 11947                           ;main.c: 505: for(int t=0; t<onTime; t++) _delay((unsigned long)((1)*(1000000/4000.0)));
 11948  09B6  0021               	movlb	1	; select bank1
 11949  09B7  01C0               	clrf	timedActiveHeatOn@t^(0+128)
 11950  09B8  01C1               	clrf	(timedActiveHeatOn@t+1)^(0+128)
 11951  09B9                     l1218:	
 11952  09B9  0840               	movf	timedActiveHeatOn@t^(0+128),w
 11953  09BA  00BB               	movwf	??_timedActiveHeatOn^(0+128)
 11954  09BB  0841               	movf	(timedActiveHeatOn@t+1)^(0+128),w
 11955  09BC  00BC               	movwf	(??_timedActiveHeatOn^(0+128)+1)
 11956  09BD  3000               	movlw	0
 11957  09BE  1BBC               	btfsc	(??_timedActiveHeatOn^(0+128)+1),7
 11958  09BF  30FF               	movlw	255
 11959  09C0  00BD               	movwf	(??_timedActiveHeatOn^(0+128)+2)
 11960  09C1  00BE               	movwf	(??_timedActiveHeatOn^(0+128)+3)
 11961  09C2  083E               	movf	(??_timedActiveHeatOn+3)^(0+128),w
 11962  09C3  3A80               	xorlw	128
 11963  09C4  00BF               	movwf	(??_timedActiveHeatOn+4)^(0+128)
 11964  09C5  0838               	movf	(timedActiveHeatOn@onTime+3)^(0+128),w
 11965  09C6  3A80               	xorlw	128
 11966  09C7  023F               	subwf	(??_timedActiveHeatOn+4)^(0+128),w
 11967  09C8  1D03               	skipz
 11968  09C9  29D4               	goto	u8163
 11969  09CA  0837               	movf	(timedActiveHeatOn@onTime+2)^(0+128),w
 11970  09CB  023D               	subwf	(??_timedActiveHeatOn+2)^(0+128),w
 11971  09CC  1D03               	skipz
 11972  09CD  29D4               	goto	u8163
 11973  09CE  0836               	movf	(timedActiveHeatOn@onTime+1)^(0+128),w
 11974  09CF  023C               	subwf	(??_timedActiveHeatOn+1)^(0+128),w
 11975  09D0  1D03               	skipz
 11976  09D1  29D4               	goto	u8163
 11977  09D2  0835               	movf	timedActiveHeatOn@onTime^(0+128),w
 11978  09D3  023B               	subwf	??_timedActiveHeatOn^(0+128),w
 11979  09D4                     u8163:	
 11980  09D4  1803               	btfsc	3,0
 11981  09D5  29E0               	goto	l1221
 11982  09D6  3053               	movlw	83
 11983  09D7                     u9087:	
 11984  09D7  0B89               	decfsz	9,f
 11985  09D8  29D7               	goto	u9087
 11986  09D9  0000               	nop
 11987  09DA  3001               	movlw	1
 11988  09DB  0021               	movlb	1	; select bank1
 11989  09DC  07C0               	addwf	timedActiveHeatOn@t^(0+128),f
 11990  09DD  3000               	movlw	0
 11991  09DE  3DC1               	addwfc	(timedActiveHeatOn@t+1)^(0+128),f
 11992  09DF  29B9               	goto	l1218
 11993  09E0                     l1221:	
 11994                           ;main.c: 506: do { LATCbits.LATC1 = 1; } while(0);
 11995                           
 11996  09E0  0022               	movlb	2	; select bank2
 11997  09E1  148E               	bsf	14,1	;volatile
 11998                           
 11999                           ;main.c: 507: LEDsOn(0, 1);
 12000  09E2  3000               	movlw	0
 12001  09E3  0020               	movlb	0	; select bank0
 12002  09E4  00C7               	movwf	LEDsOn@LEDpins+3
 12003  09E5  3000               	movlw	0
 12004  09E6  00C6               	movwf	LEDsOn@LEDpins+2
 12005  09E7  3000               	movlw	0
 12006  09E8  00C5               	movwf	LEDsOn@LEDpins+1
 12007  09E9  3000               	movlw	0
 12008  09EA  00C4               	movwf	LEDsOn@LEDpins
 12009  09EB  3001               	movlw	1
 12010  09EC  00C8               	movwf	LEDsOn@topOrBottom
 12011  09ED  3000               	movlw	0
 12012  09EE  00C9               	movwf	LEDsOn@topOrBottom+1
 12013  09EF  31A5  2555  3189   	fcall	_LEDsOn
 12014                           
 12015                           ;main.c: 508: LEDsOn(0, 2);
 12016  09F2  3000               	movlw	0
 12017  09F3  0020               	movlb	0	; select bank0
 12018  09F4  00C7               	movwf	LEDsOn@LEDpins+3
 12019  09F5  3000               	movlw	0
 12020  09F6  00C6               	movwf	LEDsOn@LEDpins+2
 12021  09F7  3000               	movlw	0
 12022  09F8  00C5               	movwf	LEDsOn@LEDpins+1
 12023  09F9  3000               	movlw	0
 12024  09FA  00C4               	movwf	LEDsOn@LEDpins
 12025  09FB  3002               	movlw	2
 12026  09FC  00C8               	movwf	LEDsOn@topOrBottom
 12027  09FD  3000               	movlw	0
 12028  09FE  00C9               	movwf	LEDsOn@topOrBottom+1
 12029  09FF  31A5  2555  3189   	fcall	_LEDsOn
 12030                           
 12031                           ;main.c: 509: printf("A\n");
 12032  0A02  3055               	movlw	low (STR_7| (0+32768))
 12033  0A03  0021               	movlb	1	; select bank1
 12034  0A04  00A0               	movwf	printf@f^(0+128)
 12035  0A05  30AA               	movlw	high (STR_7| (0+32768))
 12036  0A06  00A1               	movwf	(printf@f^(0+128)+1)
 12037  0A07  318E  26CE         	fcall	_printf
 12038                           
 12039                           ;main.c: 510: return 0;
 12040  0A09  0021               	movlb	1	; select bank1
 12041  0A0A  01B5               	clrf	?_timedActiveHeatOn^(0+128)
 12042  0A0B  01B6               	clrf	(?_timedActiveHeatOn+1)^(0+128)
 12043  0A0C  0008               	return
 12044  0A0D                     __end_of_timedActiveHeatOn:	
 12045                           
 12046                           	psect	text22
 12047  2672                     __ptext22:	
 12048 ;; *************** function _stop *****************
 12049 ;; Defined at:
 12050 ;;		line 296 in file "main.c"
 12051 ;; Parameters:    Size  Location     Type
 12052 ;;		None
 12053 ;; Auto vars:     Size  Location     Type
 12054 ;;		None
 12055 ;; Return value:  Size  Location     Type
 12056 ;;                  2   21[BANK1 ] int 
 12057 ;; Registers used:
 12058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12059 ;; Tracked objects:
 12060 ;;		On entry : 0/0
 12061 ;;		On exit  : 0/0
 12062 ;;		Unchanged: 0/0
 12063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12064 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12067 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12068 ;;Total ram usage:        2 bytes
 12069 ;; Hardware stack levels used:    1
 12070 ;; Hardware stack levels required when called:    9
 12071 ;; This function calls:
 12072 ;;		_printf
 12073 ;; This function is called by:
 12074 ;;		_execCmd
 12075 ;; This function uses a non-reentrant model
 12076 ;;
 12077                           
 12078                           
 12079                           ;psect for function _stop
 12080  2672                     _stop:	
 12081                           
 12082                           ;main.c: 297: motionType = NONE;
 12083                           
 12084                           ;incstack = 0
 12085                           ; Regs used in _stop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12086  2672  0020               	movlb	0	; select bank0
 12087  2673  01D5               	clrf	_motionType
 12088                           
 12089                           ;main.c: 298: moveVector_ups = 0;
 12090  2674  3000               	movlw	0
 12091  2675  0021               	movlb	1	; select bank1
 12092  2676  00EA               	movwf	(_moveVector_ups+3)^(0+128)
 12093  2677  3000               	movlw	0
 12094  2678  00E9               	movwf	(_moveVector_ups+2)^(0+128)
 12095  2679  3000               	movlw	0
 12096  267A  00E8               	movwf	(_moveVector_ups+1)^(0+128)
 12097  267B  3000               	movlw	0
 12098  267C  00E7               	movwf	_moveVector_ups^(0+128)
 12099                           
 12100                           ;main.c: 299: moveVector_downs = 0;
 12101  267D  3000               	movlw	0
 12102  267E  0020               	movlb	0	; select bank0
 12103  267F  00D1               	movwf	_moveVector_downs+3
 12104  2680  3000               	movlw	0
 12105  2681  00D0               	movwf	_moveVector_downs+2
 12106  2682  3000               	movlw	0
 12107  2683  00CF               	movwf	_moveVector_downs+1
 12108  2684  3000               	movlw	0
 12109  2685  00CE               	movwf	_moveVector_downs
 12110                           
 12111                           ;main.c: 300: remainingSteps = 0;
 12112  2686  3000               	movlw	0
 12113  2687  0022               	movlb	2	; select bank2
 12114  2688  00C5               	movwf	(_remainingSteps+3)^(0+256)
 12115  2689  3000               	movlw	0
 12116  268A  00C4               	movwf	(_remainingSteps+2)^(0+256)
 12117  268B  3000               	movlw	0
 12118  268C  00C3               	movwf	(_remainingSteps+1)^(0+256)
 12119  268D  3000               	movlw	0
 12120  268E  00C2               	movwf	_remainingSteps^(0+256)
 12121                           
 12122                           ;main.c: 301: printf("A\n");
 12123  268F  3055               	movlw	low (STR_7| (0+32768))
 12124  2690  0021               	movlb	1	; select bank1
 12125  2691  00A0               	movwf	printf@f^(0+128)
 12126  2692  30AA               	movlw	high (STR_7| (0+32768))
 12127  2693  00A1               	movwf	(printf@f^(0+128)+1)
 12128  2694  318E  26CE         	fcall	_printf
 12129                           
 12130                           ;main.c: 302: return 0;
 12131  2696  0021               	movlb	1	; select bank1
 12132  2697  01B5               	clrf	?_stop^(0+128)
 12133  2698  01B6               	clrf	(?_stop+1)^(0+128)
 12134  2699  0008               	return
 12135  269A                     __end_of_stop:	
 12136                           
 12137                           	psect	text23
 12138  240A                     __ptext23:	
 12139 ;; *************** function _startRelMove *****************
 12140 ;; Defined at:
 12141 ;;		line 282 in file "main.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;  steps           2   21[BANK1 ] int 
 12144 ;; Auto vars:     Size  Location     Type
 12145 ;;		None
 12146 ;; Return value:  Size  Location     Type
 12147 ;;                  2   21[BANK1 ] int 
 12148 ;; Registers used:
 12149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12150 ;; Tracked objects:
 12151 ;;		On entry : 0/0
 12152 ;;		On exit  : 0/0
 12153 ;;		Unchanged: 0/0
 12154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12155 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12158 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12159 ;;Total ram usage:        2 bytes
 12160 ;; Hardware stack levels used:    1
 12161 ;; Hardware stack levels required when called:    9
 12162 ;; This function calls:
 12163 ;;		_printf
 12164 ;; This function is called by:
 12165 ;;		_execCmd
 12166 ;; This function uses a non-reentrant model
 12167 ;;
 12168                           
 12169                           
 12170                           ;psect for function _startRelMove
 12171  240A                     _startRelMove:	
 12172                           
 12173                           ;main.c: 283: motionType = REL_MOVE;
 12174                           
 12175                           ;incstack = 0
 12176                           ; Regs used in _startRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12177  240A  0020               	movlb	0	; select bank0
 12178  240B  01D5               	clrf	_motionType
 12179  240C  0AD5               	incf	_motionType,f
 12180                           
 12181                           ;main.c: 284: remainingSteps = steps;
 12182  240D  0021               	movlb	1	; select bank1
 12183  240E  0835               	movf	startRelMove@steps^(0+128),w
 12184  240F  0022               	movlb	2	; select bank2
 12185  2410  00C2               	movwf	_remainingSteps^(0+256)
 12186  2411  0021               	movlb	1	; select bank1
 12187  2412  0836               	movf	(startRelMove@steps+1)^(0+128),w
 12188  2413  0022               	movlb	2	; select bank2
 12189  2414  00C3               	movwf	(_remainingSteps+1)^(0+256)
 12190  2415  0D89               	rlf	9,f
 12191  2416  3B89               	subwfb	9,f
 12192  2417  0989               	comf	9,f
 12193  2418  00C4               	movwf	(_remainingSteps+2)^(0+256)
 12194  2419  00C5               	movwf	(_remainingSteps+3)^(0+256)
 12195                           
 12196                           ;main.c: 285: printf("A\n");
 12197  241A  3055               	movlw	low (STR_7| (0+32768))
 12198  241B  0021               	movlb	1	; select bank1
 12199  241C  00A0               	movwf	printf@f^(0+128)
 12200  241D  30AA               	movlw	high (STR_7| (0+32768))
 12201  241E  00A1               	movwf	(printf@f^(0+128)+1)
 12202  241F  318E  26CE         	fcall	_printf
 12203                           
 12204                           ;main.c: 286: return 0;
 12205  2421  0021               	movlb	1	; select bank1
 12206  2422  01B5               	clrf	?_startRelMove^(0+128)
 12207  2423  01B6               	clrf	(?_startRelMove+1)^(0+128)
 12208  2424  0008               	return
 12209  2425                     __end_of_startRelMove:	
 12210                           
 12211                           	psect	text24
 12212  245D                     __ptext24:	
 12213 ;; *************** function _startAbsMove *****************
 12214 ;; Defined at:
 12215 ;;		line 288 in file "main.c"
 12216 ;; Parameters:    Size  Location     Type
 12217 ;;  steps           2   21[BANK1 ] int 
 12218 ;; Auto vars:     Size  Location     Type
 12219 ;;		None
 12220 ;; Return value:  Size  Location     Type
 12221 ;;                  2   21[BANK1 ] int 
 12222 ;; Registers used:
 12223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12224 ;; Tracked objects:
 12225 ;;		On entry : 0/0
 12226 ;;		On exit  : 0/0
 12227 ;;		Unchanged: 0/0
 12228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12229 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12231 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12232 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12233 ;;Total ram usage:        3 bytes
 12234 ;; Hardware stack levels used:    1
 12235 ;; Hardware stack levels required when called:    9
 12236 ;; This function calls:
 12237 ;;		_printf
 12238 ;; This function is called by:
 12239 ;;		_execCmd
 12240 ;; This function uses a non-reentrant model
 12241 ;;
 12242                           
 12243                           
 12244                           ;psect for function _startAbsMove
 12245  245D                     _startAbsMove:	
 12246                           
 12247                           ;main.c: 289: motionType = ABS_MOVE;
 12248                           
 12249                           ;incstack = 0
 12250                           ; Regs used in _startAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12251  245D  3002               	movlw	2
 12252  245E  0020               	movlb	0	; select bank0
 12253  245F  00C9               	movwf	??_startAbsMove
 12254  2460  0849               	movf	??_startAbsMove,w
 12255  2461  00D5               	movwf	_motionType
 12256                           
 12257                           ;main.c: 290: absCommand = steps;
 12258  2462  0021               	movlb	1	; select bank1
 12259  2463  0835               	movf	startAbsMove@steps^(0+128),w
 12260  2464  0022               	movlb	2	; select bank2
 12261  2465  00BE               	movwf	_absCommand^(0+256)
 12262  2466  0021               	movlb	1	; select bank1
 12263  2467  0836               	movf	(startAbsMove@steps+1)^(0+128),w
 12264  2468  0022               	movlb	2	; select bank2
 12265  2469  00BF               	movwf	(_absCommand+1)^(0+256)
 12266  246A  0D89               	rlf	9,f
 12267  246B  3B89               	subwfb	9,f
 12268  246C  0989               	comf	9,f
 12269  246D  00C0               	movwf	(_absCommand+2)^(0+256)
 12270  246E  00C1               	movwf	(_absCommand+3)^(0+256)
 12271                           
 12272                           ;main.c: 291: printf("A\n");
 12273  246F  3055               	movlw	low (STR_7| (0+32768))
 12274  2470  0021               	movlb	1	; select bank1
 12275  2471  00A0               	movwf	printf@f^(0+128)
 12276  2472  30AA               	movlw	high (STR_7| (0+32768))
 12277  2473  00A1               	movwf	(printf@f^(0+128)+1)
 12278  2474  318E  26CE         	fcall	_printf
 12279                           
 12280                           ;main.c: 292: return 0;
 12281  2476  0021               	movlb	1	; select bank1
 12282  2477  01B5               	clrf	?_startAbsMove^(0+128)
 12283  2478  01B6               	clrf	(?_startAbsMove+1)^(0+128)
 12284  2479  0008               	return
 12285  247A                     __end_of_startAbsMove:	
 12286                           
 12287                           	psect	text25
 12288  1435                     __ptext25:	
 12289 ;; *************** function _setMoveMask *****************
 12290 ;; Defined at:
 12291 ;;		line 533 in file "main.c"
 12292 ;; Parameters:    Size  Location     Type
 12293 ;;  probeNum        2   21[BANK1 ] int 
 12294 ;;  onOff           2   23[BANK1 ] int 
 12295 ;; Auto vars:     Size  Location     Type
 12296 ;;		None
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  2   21[BANK1 ] int 
 12299 ;; Registers used:
 12300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12301 ;; Tracked objects:
 12302 ;;		On entry : 0/0
 12303 ;;		On exit  : 0/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12306 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12308 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12309 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12310 ;;Total ram usage:        8 bytes
 12311 ;; Hardware stack levels used:    1
 12312 ;; Hardware stack levels required when called:    9
 12313 ;; This function calls:
 12314 ;;		_printf
 12315 ;; This function is called by:
 12316 ;;		_execCmd
 12317 ;; This function uses a non-reentrant model
 12318 ;;
 12319                           
 12320                           
 12321                           ;psect for function _setMoveMask
 12322  1435                     _setMoveMask:	
 12323                           
 12324                           ;main.c: 537: if (probeNum < 24){
 12325                           
 12326                           ;incstack = 0
 12327                           ; Regs used in _setMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12328  1435  0021               	movlb	1	; select bank1
 12329  1436  0836               	movf	(setMoveMask@probeNum+1)^(0+128),w
 12330  1437  3A80               	xorlw	128
 12331  1438  0020               	movlb	0	; select bank0
 12332  1439  00C9               	movwf	??_setMoveMask
 12333  143A  3080               	movlw	128
 12334  143B  0249               	subwf	??_setMoveMask,w
 12335  143C  1D03               	skipz
 12336  143D  2C41               	goto	u8225
 12337  143E  3018               	movlw	24
 12338  143F  0021               	movlb	1	; select bank1
 12339  1440  0235               	subwf	setMoveMask@probeNum^(0+128),w
 12340  1441                     u8225:	
 12341  1441  1803               	skipnc
 12342  1442  2C9B               	goto	l8299
 12343                           
 12344                           ;main.c: 538: if (onOff)
 12345  1443  0021               	movlb	1	; select bank1
 12346  1444  0837               	movf	setMoveMask@onOff^(0+128),w
 12347  1445  0438               	iorwf	(setMoveMask@onOff+1)^(0+128),w
 12348  1446  1903               	btfsc	3,2
 12349  1447  2C6B               	goto	l8291
 12350                           
 12351                           ;main.c: 539: moveMask |= (1UL<<probeNum);
 12352  1448  3001               	movlw	1
 12353  1449  0020               	movlb	0	; select bank0
 12354  144A  00C9               	movwf	??_setMoveMask
 12355  144B  3000               	movlw	0
 12356  144C  00CA               	movwf	??_setMoveMask+1
 12357  144D  3000               	movlw	0
 12358  144E  00CB               	movwf	??_setMoveMask+2
 12359  144F  3000               	movlw	0
 12360  1450  00CC               	movwf	??_setMoveMask+3
 12361  1451  0021               	movlb	1	; select bank1
 12362  1452  0A35               	incf	setMoveMask@probeNum^(0+128),w
 12363  1453  0020               	movlb	0	; select bank0
 12364  1454  2C59               	goto	u8240
 12365  1455                     u8245:	
 12366  1455  35C9               	lslf	??_setMoveMask,f
 12367  1456  0DCA               	rlf	??_setMoveMask+1,f
 12368  1457  0DCB               	rlf	??_setMoveMask+2,f
 12369  1458  0DCC               	rlf	??_setMoveMask+3,f
 12370  1459                     u8240:	
 12371  1459  0B89               	decfsz	9,f
 12372  145A  2C55               	goto	u8245
 12373  145B  0849               	movf	??_setMoveMask,w
 12374  145C  0021               	movlb	1	; select bank1
 12375  145D  04DF               	iorwf	_moveMask^(0+128),f
 12376  145E  0020               	movlb	0	; select bank0
 12377  145F  084A               	movf	??_setMoveMask+1,w
 12378  1460  0021               	movlb	1	; select bank1
 12379  1461  04E0               	iorwf	(_moveMask+1)^(0+128),f
 12380  1462  0020               	movlb	0	; select bank0
 12381  1463  084B               	movf	??_setMoveMask+2,w
 12382  1464  0021               	movlb	1	; select bank1
 12383  1465  04E1               	iorwf	(_moveMask+2)^(0+128),f
 12384  1466  0020               	movlb	0	; select bank0
 12385  1467  084C               	movf	??_setMoveMask+3,w
 12386  1468  0021               	movlb	1	; select bank1
 12387  1469  04E2               	iorwf	(_moveMask+3)^(0+128),f
 12388  146A  2C91               	goto	l8293
 12389  146B                     l8291:	
 12390                           
 12391                           ;main.c: 540: else
 12392                           ;main.c: 541: moveMask &= ~(1UL<< probeNum);
 12393  146B  3001               	movlw	1
 12394  146C  0020               	movlb	0	; select bank0
 12395  146D  00C9               	movwf	??_setMoveMask
 12396  146E  3000               	movlw	0
 12397  146F  00CA               	movwf	??_setMoveMask+1
 12398  1470  3000               	movlw	0
 12399  1471  00CB               	movwf	??_setMoveMask+2
 12400  1472  3000               	movlw	0
 12401  1473  00CC               	movwf	??_setMoveMask+3
 12402  1474  0021               	movlb	1	; select bank1
 12403  1475  0A35               	incf	setMoveMask@probeNum^(0+128),w
 12404  1476  0020               	movlb	0	; select bank0
 12405  1477  2C7C               	goto	u8250
 12406  1478                     u8255:	
 12407  1478  35C9               	lslf	??_setMoveMask,f
 12408  1479  0DCA               	rlf	??_setMoveMask+1,f
 12409  147A  0DCB               	rlf	??_setMoveMask+2,f
 12410  147B  0DCC               	rlf	??_setMoveMask+3,f
 12411  147C                     u8250:	
 12412  147C  0B89               	decfsz	9,f
 12413  147D  2C78               	goto	u8255
 12414  147E  09C9               	comf	??_setMoveMask,f
 12415  147F  09CA               	comf	??_setMoveMask+1,f
 12416  1480  09CB               	comf	??_setMoveMask+2,f
 12417  1481  09CC               	comf	??_setMoveMask+3,f
 12418  1482  0849               	movf	??_setMoveMask,w
 12419  1483  0021               	movlb	1	; select bank1
 12420  1484  05DF               	andwf	_moveMask^(0+128),f
 12421  1485  0020               	movlb	0	; select bank0
 12422  1486  084A               	movf	??_setMoveMask+1,w
 12423  1487  0021               	movlb	1	; select bank1
 12424  1488  05E0               	andwf	(_moveMask+1)^(0+128),f
 12425  1489  0020               	movlb	0	; select bank0
 12426  148A  084B               	movf	??_setMoveMask+2,w
 12427  148B  0021               	movlb	1	; select bank1
 12428  148C  05E1               	andwf	(_moveMask+2)^(0+128),f
 12429  148D  0020               	movlb	0	; select bank0
 12430  148E  084C               	movf	??_setMoveMask+3,w
 12431  148F  0021               	movlb	1	; select bank1
 12432  1490  05E2               	andwf	(_moveMask+3)^(0+128),f
 12433  1491                     l8293:	
 12434                           
 12435                           ;main.c: 542: printf("A\n");
 12436  1491  3055               	movlw	low (STR_7| (0+32768))
 12437  1492  00A0               	movwf	printf@f^(0+128)
 12438  1493  30AA               	movlw	high (STR_7| (0+32768))
 12439  1494  00A1               	movwf	(printf@f^(0+128)+1)
 12440  1495  318E  26CE         	fcall	_printf
 12441                           
 12442                           ;main.c: 543: return 0;
 12443  1497  0021               	movlb	1	; select bank1
 12444  1498  01B5               	clrf	?_setMoveMask^(0+128)
 12445  1499  01B6               	clrf	(?_setMoveMask+1)^(0+128)
 12446  149A  0008               	return
 12447  149B                     l8299:	
 12448                           
 12449                           ;main.c: 544: }
 12450                           ;main.c: 545: printf("E\n");
 12451  149B  3058               	movlw	low (STR_14| (0+32768))
 12452  149C  0021               	movlb	1	; select bank1
 12453  149D  00A0               	movwf	printf@f^(0+128)
 12454  149E  30AA               	movlw	high (STR_14| (0+32768))
 12455  149F  00A1               	movwf	(printf@f^(0+128)+1)
 12456  14A0  318E  26CE         	fcall	_printf
 12457                           
 12458                           ;main.c: 546: return 1;
 12459  14A2  3001               	movlw	1
 12460  14A3  0021               	movlb	1	; select bank1
 12461  14A4  00B5               	movwf	?_setMoveMask^(0+128)
 12462  14A5  3000               	movlw	0
 12463  14A6  00B6               	movwf	(?_setMoveMask^(0+128)+1)
 12464  14A7  0008               	return
 12465  14A8                     __end_of_setMoveMask:	
 12466                           
 12467                           	psect	text26
 12468  24B6                     __ptext26:	
 12469 ;; *************** function _setLEDPwr *****************
 12470 ;; Defined at:
 12471 ;;		line 464 in file "main.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;  pwr             2   21[BANK1 ] int 
 12474 ;;  topOrBottom     2   23[BANK1 ] int 
 12475 ;; Auto vars:     Size  Location     Type
 12476 ;;		None
 12477 ;; Return value:  Size  Location     Type
 12478 ;;                  2   21[BANK1 ] int 
 12479 ;; Registers used:
 12480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12481 ;; Tracked objects:
 12482 ;;		On entry : 0/0
 12483 ;;		On exit  : 0/0
 12484 ;;		Unchanged: 0/0
 12485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12486 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12489 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12490 ;;Total ram usage:        4 bytes
 12491 ;; Hardware stack levels used:    1
 12492 ;; Hardware stack levels required when called:    9
 12493 ;; This function calls:
 12494 ;;		_LEDsPwr
 12495 ;;		_printf
 12496 ;; This function is called by:
 12497 ;;		_execCmd
 12498 ;; This function uses a non-reentrant model
 12499 ;;
 12500                           
 12501                           
 12502                           ;psect for function _setLEDPwr
 12503  24B6                     _setLEDPwr:	
 12504                           
 12505                           ;main.c: 465: LEDsPwr(pwr, topOrBottom);
 12506                           
 12507                           ;incstack = 0
 12508                           ; Regs used in _setLEDPwr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12509  24B6  0021               	movlb	1	; select bank1
 12510  24B7  0836               	movf	(setLEDPwr@pwr+1)^(0+128),w
 12511  24B8  0020               	movlb	0	; select bank0
 12512  24B9  00C5               	movwf	LEDsPwr@pwr+1
 12513  24BA  0021               	movlb	1	; select bank1
 12514  24BB  0835               	movf	setLEDPwr@pwr^(0+128),w
 12515  24BC  0020               	movlb	0	; select bank0
 12516  24BD  00C4               	movwf	LEDsPwr@pwr
 12517  24BE  0021               	movlb	1	; select bank1
 12518  24BF  0838               	movf	(setLEDPwr@topOrBottom+1)^(0+128),w
 12519  24C0  0020               	movlb	0	; select bank0
 12520  24C1  00C7               	movwf	LEDsPwr@topOrBottom+1
 12521  24C2  0021               	movlb	1	; select bank1
 12522  24C3  0837               	movf	setLEDPwr@topOrBottom^(0+128),w
 12523  24C4  0020               	movlb	0	; select bank0
 12524  24C5  00C6               	movwf	LEDsPwr@topOrBottom
 12525  24C6  319E  26BC  31A4   	fcall	_LEDsPwr
 12526                           
 12527                           ;main.c: 466: printf("A\n");
 12528  24C9  3055               	movlw	low (STR_7| (0+32768))
 12529  24CA  0021               	movlb	1	; select bank1
 12530  24CB  00A0               	movwf	printf@f^(0+128)
 12531  24CC  30AA               	movlw	high (STR_7| (0+32768))
 12532  24CD  00A1               	movwf	(printf@f^(0+128)+1)
 12533  24CE  318E  26CE         	fcall	_printf
 12534                           
 12535                           ;main.c: 467: return 0;
 12536  24D0  0021               	movlb	1	; select bank1
 12537  24D1  01B5               	clrf	?_setLEDPwr^(0+128)
 12538  24D2  01B6               	clrf	(?_setLEDPwr+1)^(0+128)
 12539  24D3  0008               	return
 12540  24D4                     __end_of_setLEDPwr:	
 12541                           
 12542                           	psect	text27
 12543  1EBC                     __ptext27:	
 12544 ;; *************** function _LEDsPwr *****************
 12545 ;; Defined at:
 12546 ;;		line 12 in file "LEDcomm.c"
 12547 ;; Parameters:    Size  Location     Type
 12548 ;;  pwr             2   36[BANK0 ] int 
 12549 ;;  topOrBottom     2   38[BANK0 ] int 
 12550 ;; Auto vars:     Size  Location     Type
 12551 ;;  pwrAll          4    0[BANK1 ] unsigned long 
 12552 ;; Return value:  Size  Location     Type
 12553 ;;                  1    wreg      void 
 12554 ;; Registers used:
 12555 ;;		wreg, status,2, status,0, pclath, cstack
 12556 ;; Tracked objects:
 12557 ;;		On entry : 0/0
 12558 ;;		On exit  : 0/0
 12559 ;;		Unchanged: 0/0
 12560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12561 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12562 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12563 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12564 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12565 ;;Total ram usage:       14 bytes
 12566 ;; Hardware stack levels used:    1
 12567 ;; Hardware stack levels required when called:    8
 12568 ;; This function calls:
 12569 ;;		_send_2length_2bytes_IK
 12570 ;; This function is called by:
 12571 ;;		_main_initialize
 12572 ;;		_setLEDPwr
 12573 ;; This function uses a non-reentrant model
 12574 ;;
 12575                           
 12576                           
 12577                           ;psect for function _LEDsPwr
 12578  1EBC                     _LEDsPwr:	
 12579                           
 12580                           ;LEDcomm.c: 13: pwr = (pwr>63) ? 63 : pwr;
 12581                           
 12582                           ;incstack = 0
 12583                           ; Regs used in _LEDsPwr: [wreg+status,2+status,0+pclath+cstack]
 12584  1EBC  0020               	movlb	0	; select bank0
 12585  1EBD  0845               	movf	LEDsPwr@pwr+1,w
 12586  1EBE  3A80               	xorlw	128
 12587  1EBF  00C8               	movwf	??_LEDsPwr
 12588  1EC0  3080               	movlw	128
 12589  1EC1  0248               	subwf	??_LEDsPwr,w
 12590  1EC2  1D03               	skipz
 12591  1EC3  2EC6               	goto	u7475
 12592  1EC4  3040               	movlw	64
 12593  1EC5  0244               	subwf	LEDsPwr@pwr,w
 12594  1EC6                     u7475:	
 12595  1EC6  1C03               	btfss	3,0
 12596  1EC7  2ECD               	goto	l202
 12597  1EC8  303F               	movlw	63
 12598  1EC9  0020               	movlb	0	; select bank0
 12599  1ECA  00C4               	movwf	LEDsPwr@pwr
 12600  1ECB  3000               	movlw	0
 12601  1ECC  00C5               	movwf	LEDsPwr@pwr+1
 12602  1ECD                     l202:	
 12603                           
 12604                           ;LEDcomm.c: 14: unsigned long pwrAll = pwr | (pwr<<6) | (pwr<<12);
 12605  1ECD  0020               	movlb	0	; select bank0
 12606  1ECE  0845               	movf	LEDsPwr@pwr+1,w
 12607  1ECF  00C9               	movwf	??_LEDsPwr+1
 12608  1ED0  0844               	movf	LEDsPwr@pwr,w
 12609  1ED1  00C8               	movwf	??_LEDsPwr
 12610  1ED2  0E48               	swapf	??_LEDsPwr,w
 12611  1ED3  39F0               	andlw	240
 12612  1ED4  00C9               	movwf	??_LEDsPwr+1
 12613  1ED5  01C8               	clrf	??_LEDsPwr
 12614  1ED6  0845               	movf	LEDsPwr@pwr+1,w
 12615  1ED7  00CB               	movwf	??_LEDsPwr+3
 12616  1ED8  0844               	movf	LEDsPwr@pwr,w
 12617  1ED9  00CA               	movwf	??_LEDsPwr+2
 12618  1EDA  3006               	movlw	6
 12619  1EDB                     u7485:	
 12620  1EDB  35CA               	lslf	??_LEDsPwr+2,f
 12621  1EDC  0DCB               	rlf	??_LEDsPwr+3,f
 12622  1EDD  0B89               	decfsz	9,f
 12623  1EDE  2EDB               	goto	u7485
 12624  1EDF  0848               	movf	??_LEDsPwr,w
 12625  1EE0  044A               	iorwf	??_LEDsPwr+2,w
 12626  1EE1  00CC               	movwf	??_LEDsPwr+4
 12627  1EE2  0849               	movf	??_LEDsPwr+1,w
 12628  1EE3  044B               	iorwf	??_LEDsPwr+3,w
 12629  1EE4  00CD               	movwf	??_LEDsPwr+5
 12630  1EE5  0844               	movf	LEDsPwr@pwr,w
 12631  1EE6  044C               	iorwf	??_LEDsPwr+4,w
 12632  1EE7  0021               	movlb	1	; select bank1
 12633  1EE8  00A0               	movwf	LEDsPwr@pwrAll^(0+128)
 12634  1EE9  0020               	movlb	0	; select bank0
 12635  1EEA  0845               	movf	LEDsPwr@pwr+1,w
 12636  1EEB  044D               	iorwf	??_LEDsPwr+5,w
 12637  1EEC  0021               	movlb	1	; select bank1
 12638  1EED  00A1               	movwf	(LEDsPwr@pwrAll+1)^(0+128)
 12639  1EEE  01A2               	clrf	(LEDsPwr@pwrAll^(0+128)+2)
 12640  1EEF  1BA1               	btfsc	(LEDsPwr@pwrAll^(0+128)+1),7
 12641  1EF0  03A2               	decf	(LEDsPwr@pwrAll+2)^(0+128),f
 12642  1EF1  0822               	movf	(LEDsPwr@pwrAll^(0+128)+2),w
 12643  1EF2  00A3               	movwf	(LEDsPwr@pwrAll+3)^(0+128)
 12644                           
 12645                           ;LEDcomm.c: 15: send_2length_2bytes_IK((unsigned int)((pwrAll>>16) & 0xFFFF),(unsigned i
      +                          nt)pwrAll, 7, topOrBottom);
 12646  1EF3  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12647  1EF4  0020               	movlb	0	; select bank0
 12648  1EF5  00C8               	movwf	??_LEDsPwr
 12649  1EF6  0021               	movlb	1	; select bank1
 12650  1EF7  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12651  1EF8  0020               	movlb	0	; select bank0
 12652  1EF9  00C9               	movwf	??_LEDsPwr+1
 12653  1EFA  0021               	movlb	1	; select bank1
 12654  1EFB  0822               	movf	(LEDsPwr@pwrAll+2)^(0+128),w
 12655  1EFC  0020               	movlb	0	; select bank0
 12656  1EFD  00CA               	movwf	??_LEDsPwr+2
 12657  1EFE  0021               	movlb	1	; select bank1
 12658  1EFF  0823               	movf	(LEDsPwr@pwrAll+3)^(0+128),w
 12659  1F00  0020               	movlb	0	; select bank0
 12660  1F01  00CB               	movwf	??_LEDsPwr+3
 12661  1F02  3010               	movlw	16
 12662  1F03                     u7495:	
 12663  1F03  36CB               	lsrf	??_LEDsPwr+3,f
 12664  1F04  0CCA               	rrf	??_LEDsPwr+2,f
 12665  1F05  0CC9               	rrf	??_LEDsPwr+1,f
 12666  1F06  0CC8               	rrf	??_LEDsPwr,f
 12667  1F07  0B89               	decfsz	9,f
 12668  1F08  2F03               	goto	u7495
 12669  1F09  0849               	movf	??_LEDsPwr+1,w
 12670  1F0A  00BD               	movwf	send_2length_2bytes_IK@data1+1
 12671  1F0B  0848               	movf	??_LEDsPwr,w
 12672  1F0C  00BC               	movwf	send_2length_2bytes_IK@data1
 12673  1F0D  0021               	movlb	1	; select bank1
 12674  1F0E  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12675  1F0F  0020               	movlb	0	; select bank0
 12676  1F10  00BF               	movwf	send_2length_2bytes_IK@data2+1
 12677  1F11  0021               	movlb	1	; select bank1
 12678  1F12  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12679  1F13  0020               	movlb	0	; select bank0
 12680  1F14  00BE               	movwf	send_2length_2bytes_IK@data2
 12681  1F15  3007               	movlw	7
 12682  1F16  00CC               	movwf	??_LEDsPwr+4
 12683  1F17  084C               	movf	??_LEDsPwr+4,w
 12684  1F18  00C0               	movwf	send_2length_2bytes_IK@latch_start
 12685  1F19  0847               	movf	LEDsPwr@topOrBottom+1,w
 12686  1F1A  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 12687  1F1B  0846               	movf	LEDsPwr@topOrBottom,w
 12688  1F1C  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 12689  1F1D  31A3  23BE         	fcall	_send_2length_2bytes_IK
 12690  1F1F  0008               	return
 12691  1F20                     __end_of_LEDsPwr:	
 12692                           
 12693                           	psect	text28
 12694  2498                     __ptext28:	
 12695 ;; *************** function _setLEDBrightnessRange *****************
 12696 ;; Defined at:
 12697 ;;		line 456 in file "main.c"
 12698 ;; Parameters:    Size  Location     Type
 12699 ;;  r               2   21[BANK1 ] int 
 12700 ;;  tOB             2   23[BANK1 ] int 
 12701 ;; Auto vars:     Size  Location     Type
 12702 ;;		None
 12703 ;; Return value:  Size  Location     Type
 12704 ;;                  2   21[BANK1 ] int 
 12705 ;; Registers used:
 12706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12707 ;; Tracked objects:
 12708 ;;		On entry : 0/0
 12709 ;;		On exit  : 0/0
 12710 ;;		Unchanged: 0/0
 12711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12712 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12715 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12716 ;;Total ram usage:        4 bytes
 12717 ;; Hardware stack levels used:    1
 12718 ;; Hardware stack levels required when called:    9
 12719 ;; This function calls:
 12720 ;;		_LED_setBrightnessRange
 12721 ;;		_printf
 12722 ;; This function is called by:
 12723 ;;		_execCmd
 12724 ;; This function uses a non-reentrant model
 12725 ;;
 12726                           
 12727                           
 12728                           ;psect for function _setLEDBrightnessRange
 12729  2498                     _setLEDBrightnessRange:	
 12730                           
 12731                           ;main.c: 457: LED_setBrightnessRange(r, tOB);
 12732                           
 12733                           ;incstack = 0
 12734                           ; Regs used in _setLEDBrightnessRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12735  2498  0021               	movlb	1	; select bank1
 12736  2499  0836               	movf	(setLEDBrightnessRange@r+1)^(0+128),w
 12737  249A  0020               	movlb	0	; select bank0
 12738  249B  00C5               	movwf	LED_setBrightnessRange@range+1
 12739  249C  0021               	movlb	1	; select bank1
 12740  249D  0835               	movf	setLEDBrightnessRange@r^(0+128),w
 12741  249E  0020               	movlb	0	; select bank0
 12742  249F  00C4               	movwf	LED_setBrightnessRange@range
 12743  24A0  0021               	movlb	1	; select bank1
 12744  24A1  0838               	movf	(setLEDBrightnessRange@tOB+1)^(0+128),w
 12745  24A2  0020               	movlb	0	; select bank0
 12746  24A3  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 12747  24A4  0021               	movlb	1	; select bank1
 12748  24A5  0837               	movf	setLEDBrightnessRange@tOB^(0+128),w
 12749  24A6  0020               	movlb	0	; select bank0
 12750  24A7  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 12751  24A8  3188  20C0  31A4   	fcall	_LED_setBrightnessRange
 12752                           
 12753                           ;main.c: 458: printf("A\n");
 12754  24AB  3055               	movlw	low (STR_7| (0+32768))
 12755  24AC  0021               	movlb	1	; select bank1
 12756  24AD  00A0               	movwf	printf@f^(0+128)
 12757  24AE  30AA               	movlw	high (STR_7| (0+32768))
 12758  24AF  00A1               	movwf	(printf@f^(0+128)+1)
 12759  24B0  318E  26CE         	fcall	_printf
 12760                           
 12761                           ;main.c: 459: return 0;
 12762  24B2  0021               	movlb	1	; select bank1
 12763  24B3  01B5               	clrf	?_setLEDBrightnessRange^(0+128)
 12764  24B4  01B6               	clrf	(?_setLEDBrightnessRange+1)^(0+128)
 12765  24B5  0008               	return
 12766  24B6                     __end_of_setLEDBrightnessRange:	
 12767                           
 12768                           	psect	text29
 12769  16FC                     __ptext29:	
 12770 ;; *************** function _setHeaterToggle *****************
 12771 ;; Defined at:
 12772 ;;		line 473 in file "main.c"
 12773 ;; Parameters:    Size  Location     Type
 12774 ;;  num             2   21[BANK1 ] int 
 12775 ;;  topOrB          2   23[BANK1 ] int 
 12776 ;; Auto vars:     Size  Location     Type
 12777 ;;		None
 12778 ;; Return value:  Size  Location     Type
 12779 ;;                  2   21[BANK1 ] int 
 12780 ;; Registers used:
 12781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12782 ;; Tracked objects:
 12783 ;;		On entry : 0/0
 12784 ;;		On exit  : 0/0
 12785 ;;		Unchanged: 0/0
 12786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12787 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12789 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12790 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12791 ;;Total ram usage:        8 bytes
 12792 ;; Hardware stack levels used:    1
 12793 ;; Hardware stack levels required when called:    9
 12794 ;; This function calls:
 12795 ;;		_LEDsOn
 12796 ;;		_printf
 12797 ;; This function is called by:
 12798 ;;		_execCmd
 12799 ;; This function uses a non-reentrant model
 12800 ;;
 12801                           
 12802                           
 12803                           ;psect for function _setHeaterToggle
 12804  16FC                     _setHeaterToggle:	
 12805                           
 12806                           ;incstack = 0
 12807                           ; Regs used in _setHeaterToggle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12808                           ;main.c: 474: do { LATCbits.LATC1 = 0; } while(0);
 12809  16FC  0022               	movlb	2	; select bank2
 12810  16FD  108E               	bcf	14,1	;volatile
 12811                           
 12812                           ;main.c: 475: if(topOrB == 1){
 12813  16FE  0021               	movlb	1	; select bank1
 12814  16FF  0337               	decf	setHeaterToggle@topOrB^(0+128),w
 12815  1700  0438               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12816  1701  1D03               	btfss	3,2
 12817  1702  2F33               	goto	l8225
 12818                           
 12819                           ;main.c: 476: demoHeaterToggle_top ^= 1UL << num;
 12820  1703  3001               	movlw	1
 12821  1704  00B9               	movwf	??_setHeaterToggle^(0+128)
 12822  1705  3000               	movlw	0
 12823  1706  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 12824  1707  3000               	movlw	0
 12825  1708  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 12826  1709  3000               	movlw	0
 12827  170A  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 12828  170B  0A35               	incf	setHeaterToggle@num^(0+128),w
 12829  170C  2F11               	goto	u8100
 12830  170D                     u8105:	
 12831  170D  35B9               	lslf	??_setHeaterToggle^(0+128),f
 12832  170E  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12833  170F  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12834  1710  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12835  1711                     u8100:	
 12836  1711  0B89               	decfsz	9,f
 12837  1712  2F0D               	goto	u8105
 12838  1713  0839               	movf	??_setHeaterToggle^(0+128),w
 12839  1714  0023               	movlb	3	; select bank3
 12840  1715  06B4               	xorwf	_demoHeaterToggle_top^(0+384),f
 12841  1716  0021               	movlb	1	; select bank1
 12842  1717  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 12843  1718  0023               	movlb	3	; select bank3
 12844  1719  06B5               	xorwf	(_demoHeaterToggle_top+1)^(0+384),f
 12845  171A  0021               	movlb	1	; select bank1
 12846  171B  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 12847  171C  0023               	movlb	3	; select bank3
 12848  171D  06B6               	xorwf	(_demoHeaterToggle_top+2)^(0+384),f
 12849  171E  0021               	movlb	1	; select bank1
 12850  171F  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 12851  1720  0023               	movlb	3	; select bank3
 12852  1721  06B7               	xorwf	(_demoHeaterToggle_top+3)^(0+384),f
 12853                           
 12854                           ;main.c: 477: LEDsOn(demoHeaterToggle_top, 1);
 12855  1722  0837               	movf	(_demoHeaterToggle_top+3)^(0+384),w
 12856  1723  0020               	movlb	0	; select bank0
 12857  1724  00C7               	movwf	LEDsOn@LEDpins+3
 12858  1725  0023               	movlb	3	; select bank3
 12859  1726  0836               	movf	(_demoHeaterToggle_top+2)^(0+384),w
 12860  1727  0020               	movlb	0	; select bank0
 12861  1728  00C6               	movwf	LEDsOn@LEDpins+2
 12862  1729  0023               	movlb	3	; select bank3
 12863  172A  0835               	movf	(_demoHeaterToggle_top+1)^(0+384),w
 12864  172B  0020               	movlb	0	; select bank0
 12865  172C  00C5               	movwf	LEDsOn@LEDpins+1
 12866  172D  0023               	movlb	3	; select bank3
 12867  172E  0834               	movf	_demoHeaterToggle_top^(0+384),w
 12868  172F  0020               	movlb	0	; select bank0
 12869  1730  00C4               	movwf	LEDsOn@LEDpins
 12870  1731  3001               	movlw	1
 12871  1732  2F68               	goto	L26
 12872  1733                     l8225:	
 12873                           ;main.c: 478: }
 12874                           
 12875                           
 12876                           ;main.c: 479: else if (topOrB == 2){
 12877  1733  3002               	movlw	2
 12878  1734  0021               	movlb	1	; select bank1
 12879  1735  0637               	xorwf	setHeaterToggle@topOrB^(0+128),w
 12880  1736  0438               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12881  1737  1D03               	btfss	3,2
 12882  1738  2F6E               	goto	l8231
 12883                           
 12884                           ;main.c: 480: demoHeaterToggle_bot ^= 1UL << num;
 12885  1739  3001               	movlw	1
 12886  173A  00B9               	movwf	??_setHeaterToggle^(0+128)
 12887  173B  3000               	movlw	0
 12888  173C  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 12889  173D  3000               	movlw	0
 12890  173E  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 12891  173F  3000               	movlw	0
 12892  1740  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 12893  1741  0A35               	incf	setHeaterToggle@num^(0+128),w
 12894  1742  2F47               	goto	u8120
 12895  1743                     u8125:	
 12896  1743  35B9               	lslf	??_setHeaterToggle^(0+128),f
 12897  1744  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12898  1745  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12899  1746  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12900  1747                     u8120:	
 12901  1747  0B89               	decfsz	9,f
 12902  1748  2F43               	goto	u8125
 12903  1749  0839               	movf	??_setHeaterToggle^(0+128),w
 12904  174A  0023               	movlb	3	; select bank3
 12905  174B  06B0               	xorwf	_demoHeaterToggle_bot^(0+384),f
 12906  174C  0021               	movlb	1	; select bank1
 12907  174D  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 12908  174E  0023               	movlb	3	; select bank3
 12909  174F  06B1               	xorwf	(_demoHeaterToggle_bot+1)^(0+384),f
 12910  1750  0021               	movlb	1	; select bank1
 12911  1751  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 12912  1752  0023               	movlb	3	; select bank3
 12913  1753  06B2               	xorwf	(_demoHeaterToggle_bot+2)^(0+384),f
 12914  1754  0021               	movlb	1	; select bank1
 12915  1755  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 12916  1756  0023               	movlb	3	; select bank3
 12917  1757  06B3               	xorwf	(_demoHeaterToggle_bot+3)^(0+384),f
 12918                           
 12919                           ;main.c: 481: LEDsOn(demoHeaterToggle_bot, 2);
 12920  1758  0833               	movf	(_demoHeaterToggle_bot+3)^(0+384),w
 12921  1759  0020               	movlb	0	; select bank0
 12922  175A  00C7               	movwf	LEDsOn@LEDpins+3
 12923  175B  0023               	movlb	3	; select bank3
 12924  175C  0832               	movf	(_demoHeaterToggle_bot+2)^(0+384),w
 12925  175D  0020               	movlb	0	; select bank0
 12926  175E  00C6               	movwf	LEDsOn@LEDpins+2
 12927  175F  0023               	movlb	3	; select bank3
 12928  1760  0831               	movf	(_demoHeaterToggle_bot+1)^(0+384),w
 12929  1761  0020               	movlb	0	; select bank0
 12930  1762  00C5               	movwf	LEDsOn@LEDpins+1
 12931  1763  0023               	movlb	3	; select bank3
 12932  1764  0830               	movf	_demoHeaterToggle_bot^(0+384),w
 12933  1765  0020               	movlb	0	; select bank0
 12934  1766  00C4               	movwf	LEDsOn@LEDpins
 12935  1767  3002               	movlw	2
 12936  1768                     L26:	
 12937  1768  00C8               	movwf	LEDsOn@topOrBottom
 12938  1769  3000               	movlw	0
 12939  176A  00C9               	movwf	LEDsOn@topOrBottom+1
 12940  176B  31A5  2555  3196   	fcall	_LEDsOn
 12941  176E                     l8231:	
 12942                           
 12943                           ;main.c: 482: }
 12944                           ;main.c: 484: printf("A\n");
 12945  176E  3055               	movlw	low (STR_7| (0+32768))
 12946  176F  0021               	movlb	1	; select bank1
 12947  1770  00A0               	movwf	printf@f^(0+128)
 12948  1771  30AA               	movlw	high (STR_7| (0+32768))
 12949  1772  00A1               	movwf	(printf@f^(0+128)+1)
 12950  1773  318E  26CE         	fcall	_printf
 12951                           
 12952                           ;main.c: 485: return 0;
 12953  1775  0021               	movlb	1	; select bank1
 12954  1776  01B5               	clrf	?_setHeaterToggle^(0+128)
 12955  1777  01B6               	clrf	(?_setHeaterToggle+1)^(0+128)
 12956  1778  0008               	return
 12957  1779                     __end_of_setHeaterToggle:	
 12958                           
 12959                           	psect	text30
 12960  2300                     __ptext30:	
 12961 ;; *************** function _setHeaterPreTime *****************
 12962 ;; Defined at:
 12963 ;;		line 426 in file "main.c"
 12964 ;; Parameters:    Size  Location     Type
 12965 ;;  t               2   21[BANK1 ] int 
 12966 ;; Auto vars:     Size  Location     Type
 12967 ;;		None
 12968 ;; Return value:  Size  Location     Type
 12969 ;;                  2   21[BANK1 ] int 
 12970 ;; Registers used:
 12971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12972 ;; Tracked objects:
 12973 ;;		On entry : 0/0
 12974 ;;		On exit  : 0/0
 12975 ;;		Unchanged: 0/0
 12976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12977 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12980 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12981 ;;Total ram usage:        2 bytes
 12982 ;; Hardware stack levels used:    1
 12983 ;; Hardware stack levels required when called:    9
 12984 ;; This function calls:
 12985 ;;		_printf
 12986 ;; This function is called by:
 12987 ;;		_execCmd
 12988 ;; This function uses a non-reentrant model
 12989 ;;
 12990                           
 12991                           
 12992                           ;psect for function _setHeaterPreTime
 12993  2300                     _setHeaterPreTime:	
 12994                           
 12995                           ;main.c: 427: heater_pre_time_ms = t;
 12996                           
 12997                           ;incstack = 0
 12998                           ; Regs used in _setHeaterPreTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12999  2300  0021               	movlb	1	; select bank1
 13000  2301  0836               	movf	(setHeaterPreTime@t+1)^(0+128),w
 13001  2302  00EE               	movwf	(_heater_pre_time_ms+1)^(0+128)
 13002  2303  0835               	movf	setHeaterPreTime@t^(0+128),w
 13003  2304  00ED               	movwf	_heater_pre_time_ms^(0+128)
 13004                           
 13005                           ;main.c: 429: printf("A\n");
 13006  2305  3055               	movlw	low (STR_7| (0+32768))
 13007  2306  00A0               	movwf	printf@f^(0+128)
 13008  2307  30AA               	movlw	high (STR_7| (0+32768))
 13009  2308  00A1               	movwf	(printf@f^(0+128)+1)
 13010  2309  318E  26CE         	fcall	_printf
 13011                           
 13012                           ;main.c: 430: return 0;
 13013  230B  0021               	movlb	1	; select bank1
 13014  230C  01B5               	clrf	?_setHeaterPreTime^(0+128)
 13015  230D  01B6               	clrf	(?_setHeaterPreTime+1)^(0+128)
 13016  230E  0008               	return
 13017  230F                     __end_of_setHeaterPreTime:	
 13018                           
 13019                           	psect	text31
 13020  2355                     __ptext31:	
 13021 ;; *************** function _setHeaterPostTime *****************
 13022 ;; Defined at:
 13023 ;;		line 432 in file "main.c"
 13024 ;; Parameters:    Size  Location     Type
 13025 ;;  t               2   21[BANK1 ] int 
 13026 ;; Auto vars:     Size  Location     Type
 13027 ;;		None
 13028 ;; Return value:  Size  Location     Type
 13029 ;;                  2   21[BANK1 ] int 
 13030 ;; Registers used:
 13031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13032 ;; Tracked objects:
 13033 ;;		On entry : 0/0
 13034 ;;		On exit  : 0/0
 13035 ;;		Unchanged: 0/0
 13036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13037 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13040 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13041 ;;Total ram usage:        2 bytes
 13042 ;; Hardware stack levels used:    1
 13043 ;; Hardware stack levels required when called:    9
 13044 ;; This function calls:
 13045 ;;		_printf
 13046 ;; This function is called by:
 13047 ;;		_execCmd
 13048 ;; This function uses a non-reentrant model
 13049 ;;
 13050                           
 13051                           
 13052                           ;psect for function _setHeaterPostTime
 13053  2355                     _setHeaterPostTime:	
 13054                           
 13055                           ;main.c: 433: heater_post_time_ms = t;
 13056                           
 13057                           ;incstack = 0
 13058                           ; Regs used in _setHeaterPostTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13059  2355  0021               	movlb	1	; select bank1
 13060  2356  0836               	movf	(setHeaterPostTime@t+1)^(0+128),w
 13061  2357  0022               	movlb	2	; select bank2
 13062  2358  00ED               	movwf	(_heater_post_time_ms+1)^(0+256)
 13063  2359  0021               	movlb	1	; select bank1
 13064  235A  0835               	movf	setHeaterPostTime@t^(0+128),w
 13065  235B  0022               	movlb	2	; select bank2
 13066  235C  00EC               	movwf	_heater_post_time_ms^(0+256)
 13067                           
 13068                           ;main.c: 435: printf("A\n");
 13069  235D  3055               	movlw	low (STR_7| (0+32768))
 13070  235E  0021               	movlb	1	; select bank1
 13071  235F  00A0               	movwf	printf@f^(0+128)
 13072  2360  30AA               	movlw	high (STR_7| (0+32768))
 13073  2361  00A1               	movwf	(printf@f^(0+128)+1)
 13074  2362  318E  26CE         	fcall	_printf
 13075                           
 13076                           ;main.c: 436: return 0;
 13077  2364  0021               	movlb	1	; select bank1
 13078  2365  01B5               	clrf	?_setHeaterPostTime^(0+128)
 13079  2366  01B6               	clrf	(?_setHeaterPostTime+1)^(0+128)
 13080  2367  0008               	return
 13081  2368                     __end_of_setHeaterPostTime:	
 13082                           
 13083                           	psect	text32
 13084  1C5A                     __ptext32:	
 13085 ;; *************** function _setH2OnTime *****************
 13086 ;; Defined at:
 13087 ;;		line 447 in file "main.c"
 13088 ;; Parameters:    Size  Location     Type
 13089 ;;  t               2   29[BANK1 ] int 
 13090 ;; Auto vars:     Size  Location     Type
 13091 ;;		None
 13092 ;; Return value:  Size  Location     Type
 13093 ;;                  2   29[BANK1 ] int 
 13094 ;; Registers used:
 13095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13096 ;; Tracked objects:
 13097 ;;		On entry : 0/0
 13098 ;;		On exit  : 0/0
 13099 ;;		Unchanged: 0/0
 13100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13101 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13104 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13105 ;;Total ram usage:        2 bytes
 13106 ;; Hardware stack levels used:    1
 13107 ;; Hardware stack levels required when called:    9
 13108 ;; This function calls:
 13109 ;;		_TMR0_Load8bitPeriod
 13110 ;;		___awtoft
 13111 ;;		___ftadd
 13112 ;;		___ftmul
 13113 ;;		___fttol
 13114 ;;		_printf
 13115 ;; This function is called by:
 13116 ;;		_execCmd
 13117 ;; This function uses a non-reentrant model
 13118 ;;
 13119                           
 13120                           
 13121                           ;psect for function _setH2OnTime
 13122  1C5A                     _setH2OnTime:	
 13123                           
 13124                           ;main.c: 448: TMR0_Load8bitPeriod((t*TMR0_RANGE)-1);
 13125                           
 13126                           ;incstack = 0
 13127                           ; Regs used in _setH2OnTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13128  1C5A  0021               	movlb	1	; select bank1
 13129  1C5B  083E               	movf	(setH2OnTime@t+1)^(0+128),w
 13130  1C5C  0020               	movlb	0	; select bank0
 13131  1C5D  00BA               	movwf	___awtoft@c+1
 13132  1C5E  0021               	movlb	1	; select bank1
 13133  1C5F  083D               	movf	setH2OnTime@t^(0+128),w
 13134  1C60  0020               	movlb	0	; select bank0
 13135  1C61  00B9               	movwf	___awtoft@c
 13136  1C62  31A5  2576  319C   	fcall	___awtoft
 13137  1C65  0020               	movlb	0	; select bank0
 13138  1C66  0839               	movf	?___awtoft,w
 13139  1C67  00C2               	movwf	___ftmul@f2
 13140  1C68  083A               	movf	?___awtoft+1,w
 13141  1C69  00C3               	movwf	___ftmul@f2+1
 13142  1C6A  083B               	movf	?___awtoft+2,w
 13143  1C6B  00C4               	movwf	___ftmul@f2+2
 13144  1C6C  3052               	movlw	low (_TMR0_RANGE| (0+32768))
 13145  1C6D  0084               	movwf	4
 13146  1C6E  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 13147  1C6F  0085               	movwf	5
 13148  1C70  3F00               	moviw [0]fsr0
 13149  1C71  00BF               	movwf	___ftmul@f1
 13150  1C72  3F01               	moviw [1]fsr0
 13151  1C73  00C0               	movwf	___ftmul@f1+1
 13152  1C74  3F02               	moviw [2]fsr0
 13153  1C75  00C1               	movwf	___ftmul@f1+2
 13154  1C76  318B  23A8  319C   	fcall	___ftmul
 13155  1C79  0020               	movlb	0	; select bank0
 13156  1C7A  083F               	movf	?___ftmul,w
 13157  1C7B  0021               	movlb	1	; select bank1
 13158  1C7C  00A9               	movwf	___ftadd@f2^(0+128)
 13159  1C7D  0020               	movlb	0	; select bank0
 13160  1C7E  0840               	movf	?___ftmul+1,w
 13161  1C7F  0021               	movlb	1	; select bank1
 13162  1C80  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 13163  1C81  0020               	movlb	0	; select bank0
 13164  1C82  0841               	movf	?___ftmul+2,w
 13165  1C83  0021               	movlb	1	; select bank1
 13166  1C84  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 13167  1C85  3000               	movlw	0
 13168  1C86  00A6               	movwf	___ftadd@f1^(0+128)
 13169  1C87  3080               	movlw	128
 13170  1C88  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 13171  1C89  30BF               	movlw	191
 13172  1C8A  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 13173  1C8B  318C  2489  319C   	fcall	___ftadd
 13174  1C8E  0021               	movlb	1	; select bank1
 13175  1C8F  0826               	movf	?___ftadd^(0+128),w
 13176  1C90  00AF               	movwf	___fttol@f1^(0+128)
 13177  1C91  0827               	movf	(?___ftadd+1)^(0+128),w
 13178  1C92  00B0               	movwf	(___fttol@f1+1)^(0+128)
 13179  1C93  0828               	movf	(?___ftadd+2)^(0+128),w
 13180  1C94  00B1               	movwf	(___fttol@f1+2)^(0+128)
 13181  1C95  3188  2039  319C   	fcall	___fttol
 13182  1C98  0021               	movlb	1	; select bank1
 13183  1C99  082F               	movf	?___fttol^(0+128),w
 13184  1C9A  31A1  2191  319C   	fcall	_TMR0_Load8bitPeriod
 13185                           
 13186                           ;main.c: 449: printf("A\n");
 13187  1C9D  3055               	movlw	low (STR_7| (0+32768))
 13188  1C9E  0021               	movlb	1	; select bank1
 13189  1C9F  00A0               	movwf	printf@f^(0+128)
 13190  1CA0  30AA               	movlw	high (STR_7| (0+32768))
 13191  1CA1  00A1               	movwf	(printf@f^(0+128)+1)
 13192  1CA2  318E  26CE         	fcall	_printf
 13193                           
 13194                           ;main.c: 450: return 0;
 13195  1CA4  0021               	movlb	1	; select bank1
 13196  1CA5  01BD               	clrf	?_setH2OnTime^(0+128)
 13197  1CA6  01BE               	clrf	(?_setH2OnTime+1)^(0+128)
 13198  1CA7  0008               	return
 13199  1CA8                     __end_of_setH2OnTime:	
 13200                           
 13201                           	psect	text33
 13202  1C0C                     __ptext33:	
 13203 ;; *************** function _setH1OffTime *****************
 13204 ;; Defined at:
 13205 ;;		line 440 in file "main.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;  t               2   29[BANK1 ] int 
 13208 ;; Auto vars:     Size  Location     Type
 13209 ;;		None
 13210 ;; Return value:  Size  Location     Type
 13211 ;;                  2   29[BANK1 ] int 
 13212 ;; Registers used:
 13213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13214 ;; Tracked objects:
 13215 ;;		On entry : 0/0
 13216 ;;		On exit  : 0/0
 13217 ;;		Unchanged: 0/0
 13218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13219 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13222 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13223 ;;Total ram usage:        2 bytes
 13224 ;; Hardware stack levels used:    1
 13225 ;; Hardware stack levels required when called:    9
 13226 ;; This function calls:
 13227 ;;		_TMR2_LoadPeriodRegister
 13228 ;;		___awtoft
 13229 ;;		___ftadd
 13230 ;;		___ftmul
 13231 ;;		___fttol
 13232 ;;		_printf
 13233 ;; This function is called by:
 13234 ;;		_execCmd
 13235 ;; This function uses a non-reentrant model
 13236 ;;
 13237                           
 13238                           
 13239                           ;psect for function _setH1OffTime
 13240  1C0C                     _setH1OffTime:	
 13241                           
 13242                           ;main.c: 441: TMR2_LoadPeriodRegister((t*TMR2_RANGE)-1);
 13243                           
 13244                           ;incstack = 0
 13245                           ; Regs used in _setH1OffTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13246  1C0C  0021               	movlb	1	; select bank1
 13247  1C0D  083E               	movf	(setH1OffTime@t+1)^(0+128),w
 13248  1C0E  0020               	movlb	0	; select bank0
 13249  1C0F  00BA               	movwf	___awtoft@c+1
 13250  1C10  0021               	movlb	1	; select bank1
 13251  1C11  083D               	movf	setH1OffTime@t^(0+128),w
 13252  1C12  0020               	movlb	0	; select bank0
 13253  1C13  00B9               	movwf	___awtoft@c
 13254  1C14  31A5  2576  319C   	fcall	___awtoft
 13255  1C17  0020               	movlb	0	; select bank0
 13256  1C18  0839               	movf	?___awtoft,w
 13257  1C19  00C2               	movwf	___ftmul@f2
 13258  1C1A  083A               	movf	?___awtoft+1,w
 13259  1C1B  00C3               	movwf	___ftmul@f2+1
 13260  1C1C  083B               	movf	?___awtoft+2,w
 13261  1C1D  00C4               	movwf	___ftmul@f2+2
 13262  1C1E  304F               	movlw	low (_TMR2_RANGE| (0+32768))
 13263  1C1F  0084               	movwf	4
 13264  1C20  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
 13265  1C21  0085               	movwf	5
 13266  1C22  3F00               	moviw [0]fsr0
 13267  1C23  00BF               	movwf	___ftmul@f1
 13268  1C24  3F01               	moviw [1]fsr0
 13269  1C25  00C0               	movwf	___ftmul@f1+1
 13270  1C26  3F02               	moviw [2]fsr0
 13271  1C27  00C1               	movwf	___ftmul@f1+2
 13272  1C28  318B  23A8  319C   	fcall	___ftmul
 13273  1C2B  0020               	movlb	0	; select bank0
 13274  1C2C  083F               	movf	?___ftmul,w
 13275  1C2D  0021               	movlb	1	; select bank1
 13276  1C2E  00A9               	movwf	___ftadd@f2^(0+128)
 13277  1C2F  0020               	movlb	0	; select bank0
 13278  1C30  0840               	movf	?___ftmul+1,w
 13279  1C31  0021               	movlb	1	; select bank1
 13280  1C32  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 13281  1C33  0020               	movlb	0	; select bank0
 13282  1C34  0841               	movf	?___ftmul+2,w
 13283  1C35  0021               	movlb	1	; select bank1
 13284  1C36  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 13285  1C37  3000               	movlw	0
 13286  1C38  00A6               	movwf	___ftadd@f1^(0+128)
 13287  1C39  3080               	movlw	128
 13288  1C3A  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 13289  1C3B  30BF               	movlw	191
 13290  1C3C  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 13291  1C3D  318C  2489  319C   	fcall	___ftadd
 13292  1C40  0021               	movlb	1	; select bank1
 13293  1C41  0826               	movf	?___ftadd^(0+128),w
 13294  1C42  00AF               	movwf	___fttol@f1^(0+128)
 13295  1C43  0827               	movf	(?___ftadd+1)^(0+128),w
 13296  1C44  00B0               	movwf	(___fttol@f1+1)^(0+128)
 13297  1C45  0828               	movf	(?___ftadd+2)^(0+128),w
 13298  1C46  00B1               	movwf	(___fttol@f1+2)^(0+128)
 13299  1C47  3188  2039  319C   	fcall	___fttol
 13300  1C4A  0021               	movlb	1	; select bank1
 13301  1C4B  082F               	movf	?___fttol^(0+128),w
 13302  1C4C  31A1  2196  319C   	fcall	_TMR2_LoadPeriodRegister
 13303                           
 13304                           ;main.c: 442: printf("A\n");
 13305  1C4F  3055               	movlw	low (STR_7| (0+32768))
 13306  1C50  0021               	movlb	1	; select bank1
 13307  1C51  00A0               	movwf	printf@f^(0+128)
 13308  1C52  30AA               	movlw	high (STR_7| (0+32768))
 13309  1C53  00A1               	movwf	(printf@f^(0+128)+1)
 13310  1C54  318E  26CE         	fcall	_printf
 13311                           
 13312                           ;main.c: 443: return 0;
 13313  1C56  0021               	movlb	1	; select bank1
 13314  1C57  01BD               	clrf	?_setH1OffTime^(0+128)
 13315  1C58  01BE               	clrf	(?_setH1OffTime+1)^(0+128)
 13316  1C59  0008               	return
 13317  1C5A                     __end_of_setH1OffTime:	
 13318                           
 13319                           	psect	text34
 13320  2196                     __ptext34:	
 13321 ;; *************** function _TMR2_LoadPeriodRegister *****************
 13322 ;; Defined at:
 13323 ;;		line 112 in file "mcc_generated_files/tmr2.c"
 13324 ;; Parameters:    Size  Location     Type
 13325 ;;  periodVal       1    wreg     unsigned char 
 13326 ;; Auto vars:     Size  Location     Type
 13327 ;;  periodVal       1   17[BANK0 ] unsigned char 
 13328 ;; Return value:  Size  Location     Type
 13329 ;;                  1    wreg      void 
 13330 ;; Registers used:
 13331 ;;		wreg
 13332 ;; Tracked objects:
 13333 ;;		On entry : 0/0
 13334 ;;		On exit  : 0/0
 13335 ;;		Unchanged: 0/0
 13336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13340 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13341 ;;Total ram usage:        1 bytes
 13342 ;; Hardware stack levels used:    1
 13343 ;; Hardware stack levels required when called:    6
 13344 ;; This function calls:
 13345 ;;		Nothing
 13346 ;; This function is called by:
 13347 ;;		_main_initialize
 13348 ;;		_setH1OffTime
 13349 ;; This function uses a non-reentrant model
 13350 ;;
 13351                           
 13352                           
 13353                           ;psect for function _TMR2_LoadPeriodRegister
 13354  2196                     _TMR2_LoadPeriodRegister:	
 13355                           
 13356                           ;incstack = 0
 13357                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
 13358                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
 13359  2196  0020               	movlb	0	; select bank0
 13360  2197  00B1               	movwf	TMR2_LoadPeriodRegister@periodVal
 13361                           
 13362                           ;tmr2.c: 114: PR2 = periodVal;
 13363  2198  0831               	movf	TMR2_LoadPeriodRegister@periodVal,w
 13364  2199  009E               	movwf	30	;volatile
 13365  219A  0008               	return
 13366  219B                     __end_of_TMR2_LoadPeriodRegister:	
 13367                           
 13368                           	psect	text35
 13369  1DFE                     __ptext35:	
 13370 ;; *************** function _setDrvPiezoOnTime *****************
 13371 ;; Defined at:
 13372 ;;		line 415 in file "main.c"
 13373 ;; Parameters:    Size  Location     Type
 13374 ;;  t               2   29[BANK1 ] int 
 13375 ;; Auto vars:     Size  Location     Type
 13376 ;;		None
 13377 ;; Return value:  Size  Location     Type
 13378 ;;                  2   29[BANK1 ] int 
 13379 ;; Registers used:
 13380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13381 ;; Tracked objects:
 13382 ;;		On entry : 0/0
 13383 ;;		On exit  : 0/0
 13384 ;;		Unchanged: 0/0
 13385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13386 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13388 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13389 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13390 ;;Total ram usage:        4 bytes
 13391 ;; Hardware stack levels used:    1
 13392 ;; Hardware stack levels required when called:    9
 13393 ;; This function calls:
 13394 ;;		_TMR0_Load8bitPeriod
 13395 ;;		___awtoft
 13396 ;;		___ftadd
 13397 ;;		___ftmul
 13398 ;;		___fttol
 13399 ;;		_printf
 13400 ;; This function is called by:
 13401 ;;		_execCmd
 13402 ;; This function uses a non-reentrant model
 13403 ;;
 13404                           
 13405                           
 13406                           ;psect for function _setDrvPiezoOnTime
 13407  1DFE                     _setDrvPiezoOnTime:	
 13408                           
 13409                           ;main.c: 416: piezo_on_time_ms = t;
 13410                           
 13411                           ;incstack = 0
 13412                           ; Regs used in _setDrvPiezoOnTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13413  1DFE  0021               	movlb	1	; select bank1
 13414  1DFF  083E               	movf	(setDrvPiezoOnTime@t+1)^(0+128),w
 13415  1E00  00EC               	movwf	(_piezo_on_time_ms+1)^(0+128)
 13416  1E01  083D               	movf	setDrvPiezoOnTime@t^(0+128),w
 13417  1E02  00EB               	movwf	_piezo_on_time_ms^(0+128)
 13418                           
 13419                           ;main.c: 417: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 13420  1E03  096D               	comf	_heater_pre_time_ms^(0+128),w
 13421  1E04  00BF               	movwf	??_setDrvPiezoOnTime^(0+128)
 13422  1E05  096E               	comf	(_heater_pre_time_ms+1)^(0+128),w
 13423  1E06  00C0               	movwf	(??_setDrvPiezoOnTime^(0+128)+1)
 13424  1E07  0ABF               	incf	??_setDrvPiezoOnTime^(0+128),f
 13425  1E08  1903               	skipnz
 13426  1E09  0AC0               	incf	(??_setDrvPiezoOnTime^(0+128)+1),f
 13427  1E0A  086B               	movf	_piezo_on_time_ms^(0+128),w
 13428  1E0B  073F               	addwf	??_setDrvPiezoOnTime^(0+128),w
 13429  1E0C  0020               	movlb	0	; select bank0
 13430  1E0D  00B9               	movwf	___awtoft@c
 13431  1E0E  0021               	movlb	1	; select bank1
 13432  1E0F  086C               	movf	(_piezo_on_time_ms+1)^(0+128),w
 13433  1E10  3D40               	addwfc	(??_setDrvPiezoOnTime+1)^(0+128),w
 13434  1E11  0020               	movlb	0	; select bank0
 13435  1E12  00BA               	movwf	___awtoft@c+1
 13436  1E13  31A5  2576  319D   	fcall	___awtoft
 13437  1E16  0020               	movlb	0	; select bank0
 13438  1E17  0839               	movf	?___awtoft,w
 13439  1E18  00C2               	movwf	___ftmul@f2
 13440  1E19  083A               	movf	?___awtoft+1,w
 13441  1E1A  00C3               	movwf	___ftmul@f2+1
 13442  1E1B  083B               	movf	?___awtoft+2,w
 13443  1E1C  00C4               	movwf	___ftmul@f2+2
 13444  1E1D  3052               	movlw	low (_TMR0_RANGE| (0+32768))
 13445  1E1E  0084               	movwf	4
 13446  1E1F  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 13447  1E20  0085               	movwf	5
 13448  1E21  3F00               	moviw [0]fsr0
 13449  1E22  00BF               	movwf	___ftmul@f1
 13450  1E23  3F01               	moviw [1]fsr0
 13451  1E24  00C0               	movwf	___ftmul@f1+1
 13452  1E25  3F02               	moviw [2]fsr0
 13453  1E26  00C1               	movwf	___ftmul@f1+2
 13454  1E27  318B  23A8  319D   	fcall	___ftmul
 13455  1E2A  0020               	movlb	0	; select bank0
 13456  1E2B  083F               	movf	?___ftmul,w
 13457  1E2C  0021               	movlb	1	; select bank1
 13458  1E2D  00A9               	movwf	___ftadd@f2^(0+128)
 13459  1E2E  0020               	movlb	0	; select bank0
 13460  1E2F  0840               	movf	?___ftmul+1,w
 13461  1E30  0021               	movlb	1	; select bank1
 13462  1E31  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 13463  1E32  0020               	movlb	0	; select bank0
 13464  1E33  0841               	movf	?___ftmul+2,w
 13465  1E34  0021               	movlb	1	; select bank1
 13466  1E35  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 13467  1E36  3000               	movlw	0
 13468  1E37  00A6               	movwf	___ftadd@f1^(0+128)
 13469  1E38  3080               	movlw	128
 13470  1E39  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 13471  1E3A  30BF               	movlw	191
 13472  1E3B  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 13473  1E3C  318C  2489  319D   	fcall	___ftadd
 13474  1E3F  0021               	movlb	1	; select bank1
 13475  1E40  0826               	movf	?___ftadd^(0+128),w
 13476  1E41  00AF               	movwf	___fttol@f1^(0+128)
 13477  1E42  0827               	movf	(?___ftadd+1)^(0+128),w
 13478  1E43  00B0               	movwf	(___fttol@f1+1)^(0+128)
 13479  1E44  0828               	movf	(?___ftadd+2)^(0+128),w
 13480  1E45  00B1               	movwf	(___fttol@f1+2)^(0+128)
 13481  1E46  3188  2039  319D   	fcall	___fttol
 13482  1E49  0021               	movlb	1	; select bank1
 13483  1E4A  082F               	movf	?___fttol^(0+128),w
 13484  1E4B  31A1  2191  319D   	fcall	_TMR0_Load8bitPeriod
 13485                           
 13486                           ;main.c: 418: printf("A\n");
 13487  1E4E  3055               	movlw	low (STR_7| (0+32768))
 13488  1E4F  0021               	movlb	1	; select bank1
 13489  1E50  00A0               	movwf	printf@f^(0+128)
 13490  1E51  30AA               	movlw	high (STR_7| (0+32768))
 13491  1E52  00A1               	movwf	(printf@f^(0+128)+1)
 13492  1E53  318E  26CE         	fcall	_printf
 13493                           
 13494                           ;main.c: 419: return 0;
 13495  1E55  0021               	movlb	1	; select bank1
 13496  1E56  01BD               	clrf	?_setDrvPiezoOnTime^(0+128)
 13497  1E57  01BE               	clrf	(?_setDrvPiezoOnTime+1)^(0+128)
 13498  1E58  0008               	return
 13499  1E59                     __end_of_setDrvPiezoOnTime:	
 13500                           
 13501                           	psect	text36
 13502  0839                     __ptext36:	
 13503 ;; *************** function ___fttol *****************
 13504 ;; Defined at:
 13505 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;  f1              3   15[BANK1 ] float 
 13508 ;; Auto vars:     Size  Location     Type
 13509 ;;  lval            4   24[BANK1 ] unsigned long 
 13510 ;;  exp1            1   28[BANK1 ] unsigned char 
 13511 ;;  sign1           1   23[BANK1 ] unsigned char 
 13512 ;; Return value:  Size  Location     Type
 13513 ;;                  4   15[BANK1 ] long 
 13514 ;; Registers used:
 13515 ;;		wreg, status,2, status,0
 13516 ;; Tracked objects:
 13517 ;;		On entry : 0/0
 13518 ;;		On exit  : 0/0
 13519 ;;		Unchanged: 0/0
 13520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13521 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13522 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13523 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13524 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13525 ;;Total ram usage:       14 bytes
 13526 ;; Hardware stack levels used:    1
 13527 ;; Hardware stack levels required when called:    6
 13528 ;; This function calls:
 13529 ;;		Nothing
 13530 ;; This function is called by:
 13531 ;;		_main_initialize
 13532 ;;		_setDrvPiezoOnTime
 13533 ;;		_setH1OffTime
 13534 ;;		_setH2OnTime
 13535 ;;		_drv_outputSine
 13536 ;; This function uses a non-reentrant model
 13537 ;;
 13538                           
 13539                           
 13540                           ;psect for function ___fttol
 13541  0839                     ___fttol:	
 13542                           
 13543                           ;incstack = 0
 13544                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 13545  0839  0021               	movlb	1	; select bank1
 13546  083A  082F               	movf	___fttol@f1^(0+128),w
 13547  083B  00B3               	movwf	??___fttol^(0+128)
 13548  083C  0830               	movf	(___fttol@f1+1)^(0+128),w
 13549  083D  00B4               	movwf	(??___fttol^(0+128)+1)
 13550  083E  0831               	movf	(___fttol@f1+2)^(0+128),w
 13551  083F  00B5               	movwf	(??___fttol^(0+128)+2)
 13552  0840  1003               	clrc
 13553  0841  0D34               	rlf	(??___fttol^(0+128)+1),w
 13554  0842  0D35               	rlf	(??___fttol^(0+128)+2),w
 13555  0843  00B6               	movwf	(??___fttol+3)^(0+128)
 13556  0844  0836               	movf	(??___fttol+3)^(0+128),w
 13557  0845  00BC               	movwf	___fttol@exp1^(0+128)
 13558  0846  083C               	movf	___fttol@exp1^(0+128),w
 13559  0847  1D03               	btfss	3,2
 13560  0848  2852               	goto	l5745
 13561  0849  3000               	movlw	0
 13562  084A  00B2               	movwf	(?___fttol+3)^(0+128)
 13563  084B  3000               	movlw	0
 13564  084C  00B1               	movwf	(?___fttol+2)^(0+128)
 13565  084D  3000               	movlw	0
 13566  084E  00B0               	movwf	(?___fttol+1)^(0+128)
 13567  084F  3000               	movlw	0
 13568  0850  00AF               	movwf	?___fttol^(0+128)
 13569  0851  0008               	return
 13570  0852                     l5745:	
 13571  0852  082F               	movf	___fttol@f1^(0+128),w
 13572  0853  00B3               	movwf	??___fttol^(0+128)
 13573  0854  0830               	movf	(___fttol@f1+1)^(0+128),w
 13574  0855  00B4               	movwf	(??___fttol^(0+128)+1)
 13575  0856  0831               	movf	(___fttol@f1+2)^(0+128),w
 13576  0857  00B5               	movwf	(??___fttol^(0+128)+2)
 13577  0858  3017               	movlw	23
 13578  0859                     u5025:	
 13579  0859  36B5               	lsrf	(??___fttol^(0+128)+2),f
 13580  085A  0CB4               	rrf	(??___fttol^(0+128)+1),f
 13581  085B  0CB3               	rrf	??___fttol^(0+128),f
 13582  085C  0B89               	decfsz	9,f
 13583  085D  2859               	goto	u5025
 13584  085E  0833               	movf	??___fttol^(0+128),w
 13585  085F  00B6               	movwf	(??___fttol+3)^(0+128)
 13586  0860  0836               	movf	(??___fttol+3)^(0+128),w
 13587  0861  00B7               	movwf	___fttol@sign1^(0+128)
 13588  0862  17B0               	bsf	(___fttol@f1^(0+128)+1),7
 13589  0863  30FF               	movlw	255
 13590  0864  05AF               	andwf	___fttol@f1^(0+128),f
 13591  0865  30FF               	movlw	255
 13592  0866  05B0               	andwf	(___fttol@f1+1)^(0+128),f
 13593  0867  3000               	movlw	0
 13594  0868  05B1               	andwf	(___fttol@f1+2)^(0+128),f
 13595  0869  082F               	movf	___fttol@f1^(0+128),w
 13596  086A  00B8               	movwf	___fttol@lval^(0+128)
 13597  086B  0830               	movf	(___fttol@f1+1)^(0+128),w
 13598  086C  00B9               	movwf	(___fttol@lval^(0+128)+1)
 13599  086D  0831               	movf	(___fttol@f1+2)^(0+128),w
 13600  086E  00BA               	movwf	(___fttol@lval^(0+128)+2)
 13601  086F  01BB               	clrf	(___fttol@lval^(0+128)+3)
 13602  0870  308E               	movlw	142
 13603  0871  02BC               	subwf	___fttol@exp1^(0+128),f
 13604  0872  1FBC               	btfss	___fttol@exp1^(0+128),7
 13605  0873  2890               	goto	l5765
 13606  0874  083C               	movf	___fttol@exp1^(0+128),w
 13607  0875  3A80               	xorlw	128
 13608  0876  3E8F               	addlw	143
 13609  0877  1803               	skipnc
 13610  0878  2882               	goto	l5763
 13611  0879  3000               	movlw	0
 13612  087A  00B2               	movwf	(?___fttol+3)^(0+128)
 13613  087B  3000               	movlw	0
 13614  087C  00B1               	movwf	(?___fttol+2)^(0+128)
 13615  087D  3000               	movlw	0
 13616  087E  00B0               	movwf	(?___fttol+1)^(0+128)
 13617  087F  3000               	movlw	0
 13618  0880  00AF               	movwf	?___fttol^(0+128)
 13619  0881  0008               	return
 13620  0882                     l5763:	
 13621  0882  3001               	movlw	1
 13622  0883                     u5055:	
 13623  0883  36BB               	lsrf	(___fttol@lval+3)^(0+128),f
 13624  0884  0CBA               	rrf	(___fttol@lval+2)^(0+128),f
 13625  0885  0CB9               	rrf	(___fttol@lval+1)^(0+128),f
 13626  0886  0CB8               	rrf	___fttol@lval^(0+128),f
 13627  0887  0B89               	decfsz	9,f
 13628  0888  2883               	goto	u5055
 13629  0889  3001               	movlw	1
 13630  088A  00B3               	movwf	??___fttol^(0+128)
 13631  088B  0833               	movf	??___fttol^(0+128),w
 13632  088C  07BC               	addwf	___fttol@exp1^(0+128),f
 13633  088D  1903               	btfsc	3,2
 13634  088E  28A9               	goto	l5773
 13635  088F  2882               	goto	l5763
 13636  0890                     l5765:	
 13637  0890  3018               	movlw	24
 13638  0891  023C               	subwf	___fttol@exp1^(0+128),w
 13639  0892  1C03               	skipc
 13640  0893  28A6               	goto	l1886
 13641  0894  3000               	movlw	0
 13642  0895  00B2               	movwf	(?___fttol+3)^(0+128)
 13643  0896  3000               	movlw	0
 13644  0897  00B1               	movwf	(?___fttol+2)^(0+128)
 13645  0898  3000               	movlw	0
 13646  0899  00B0               	movwf	(?___fttol+1)^(0+128)
 13647  089A  3000               	movlw	0
 13648  089B  00AF               	movwf	?___fttol^(0+128)
 13649  089C  0008               	return
 13650  089D                     l5771:	
 13651  089D  3001               	movlw	1
 13652  089E                     u5085:	
 13653  089E  35B8               	lslf	___fttol@lval^(0+128),f
 13654  089F  0DB9               	rlf	(___fttol@lval+1)^(0+128),f
 13655  08A0  0DBA               	rlf	(___fttol@lval+2)^(0+128),f
 13656  08A1  0DBB               	rlf	(___fttol@lval+3)^(0+128),f
 13657  08A2  0B89               	decfsz	9,f
 13658  08A3  289E               	goto	u5085
 13659  08A4  3001               	movlw	1
 13660  08A5  02BC               	subwf	___fttol@exp1^(0+128),f
 13661  08A6                     l1886:	
 13662  08A6  083C               	movf	___fttol@exp1^(0+128),w
 13663  08A7  1D03               	btfss	3,2
 13664  08A8  289D               	goto	l5771
 13665  08A9                     l5773:	
 13666  08A9  0837               	movf	___fttol@sign1^(0+128),w
 13667  08AA  1903               	btfsc	3,2
 13668  08AB  28B7               	goto	l5777
 13669  08AC  09B8               	comf	___fttol@lval^(0+128),f
 13670  08AD  09B9               	comf	(___fttol@lval+1)^(0+128),f
 13671  08AE  09BA               	comf	(___fttol@lval+2)^(0+128),f
 13672  08AF  09BB               	comf	(___fttol@lval+3)^(0+128),f
 13673  08B0  0AB8               	incf	___fttol@lval^(0+128),f
 13674  08B1  1903               	skipnz
 13675  08B2  0AB9               	incf	(___fttol@lval+1)^(0+128),f
 13676  08B3  1903               	skipnz
 13677  08B4  0ABA               	incf	(___fttol@lval+2)^(0+128),f
 13678  08B5  1903               	skipnz
 13679  08B6  0ABB               	incf	(___fttol@lval+3)^(0+128),f
 13680  08B7                     l5777:	
 13681  08B7  083B               	movf	(___fttol@lval+3)^(0+128),w
 13682  08B8  00B2               	movwf	(?___fttol+3)^(0+128)
 13683  08B9  083A               	movf	(___fttol@lval+2)^(0+128),w
 13684  08BA  00B1               	movwf	(?___fttol+2)^(0+128)
 13685  08BB  0839               	movf	(___fttol@lval+1)^(0+128),w
 13686  08BC  00B0               	movwf	(?___fttol+1)^(0+128)
 13687  08BD  0838               	movf	___fttol@lval^(0+128),w
 13688  08BE  00AF               	movwf	?___fttol^(0+128)
 13689  08BF  0008               	return
 13690  08C0                     __end_of___fttol:	
 13691                           
 13692                           	psect	text37
 13693  0BA8                     __ptext37:	
 13694 ;; *************** function ___ftmul *****************
 13695 ;; Defined at:
 13696 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 13697 ;; Parameters:    Size  Location     Type
 13698 ;;  f1              3   31[BANK0 ] float 
 13699 ;;  f2              3   34[BANK0 ] float 
 13700 ;; Auto vars:     Size  Location     Type
 13701 ;;  f3_as_produc    3    1[BANK1 ] unsigned um
 13702 ;;  sign            1    5[BANK1 ] unsigned char 
 13703 ;;  cntr            1    4[BANK1 ] unsigned char 
 13704 ;;  exp             1    0[BANK1 ] unsigned char 
 13705 ;; Return value:  Size  Location     Type
 13706 ;;                  3   31[BANK0 ] float 
 13707 ;; Registers used:
 13708 ;;		wreg, status,2, status,0, pclath, cstack
 13709 ;; Tracked objects:
 13710 ;;		On entry : 0/0
 13711 ;;		On exit  : 0/0
 13712 ;;		Unchanged: 0/0
 13713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13714 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13715 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13716 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13717 ;;      Totals:         0      10       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13718 ;;Total ram usage:       16 bytes
 13719 ;; Hardware stack levels used:    1
 13720 ;; Hardware stack levels required when called:    7
 13721 ;; This function calls:
 13722 ;;		___ftpack
 13723 ;; This function is called by:
 13724 ;;		_main_initialize
 13725 ;;		_setDrvPiezoOnTime
 13726 ;;		_setH1OffTime
 13727 ;;		_setH2OnTime
 13728 ;;		_drv_outputSine
 13729 ;; This function uses a non-reentrant model
 13730 ;;
 13731                           
 13732                           
 13733                           ;psect for function ___ftmul
 13734  0BA8                     ___ftmul:	
 13735                           
 13736                           ;incstack = 0
 13737                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 13738  0BA8  0020               	movlb	0	; select bank0
 13739  0BA9  083F               	movf	___ftmul@f1,w
 13740  0BAA  00C5               	movwf	??___ftmul
 13741  0BAB  0840               	movf	___ftmul@f1+1,w
 13742  0BAC  00C6               	movwf	??___ftmul+1
 13743  0BAD  0841               	movf	___ftmul@f1+2,w
 13744  0BAE  00C7               	movwf	??___ftmul+2
 13745  0BAF  1003               	clrc
 13746  0BB0  0D46               	rlf	??___ftmul+1,w
 13747  0BB1  0D47               	rlf	??___ftmul+2,w
 13748  0BB2  00C8               	movwf	??___ftmul+3
 13749  0BB3  0848               	movf	??___ftmul+3,w
 13750  0BB4  0021               	movlb	1	; select bank1
 13751  0BB5  00A0               	movwf	___ftmul@exp^(0+128)
 13752  0BB6  0820               	movf	___ftmul@exp^(0+128),w
 13753  0BB7  1D03               	btfss	3,2
 13754  0BB8  2BC1               	goto	l7909
 13755  0BB9  3000               	movlw	0
 13756  0BBA  0020               	movlb	0	; select bank0
 13757  0BBB  00BF               	movwf	?___ftmul
 13758  0BBC  3000               	movlw	0
 13759  0BBD  00C0               	movwf	?___ftmul+1
 13760  0BBE  3000               	movlw	0
 13761  0BBF  00C1               	movwf	?___ftmul+2
 13762  0BC0  0008               	return
 13763  0BC1                     l7909:	
 13764  0BC1  0020               	movlb	0	; select bank0
 13765  0BC2  0842               	movf	___ftmul@f2,w
 13766  0BC3  00C5               	movwf	??___ftmul
 13767  0BC4  0843               	movf	___ftmul@f2+1,w
 13768  0BC5  00C6               	movwf	??___ftmul+1
 13769  0BC6  0844               	movf	___ftmul@f2+2,w
 13770  0BC7  00C7               	movwf	??___ftmul+2
 13771  0BC8  1003               	clrc
 13772  0BC9  0D46               	rlf	??___ftmul+1,w
 13773  0BCA  0D47               	rlf	??___ftmul+2,w
 13774  0BCB  00C8               	movwf	??___ftmul+3
 13775  0BCC  0848               	movf	??___ftmul+3,w
 13776  0BCD  0021               	movlb	1	; select bank1
 13777  0BCE  00A5               	movwf	___ftmul@sign^(0+128)
 13778  0BCF  0825               	movf	___ftmul@sign^(0+128),w
 13779  0BD0  1D03               	btfss	3,2
 13780  0BD1  2BDA               	goto	l7915
 13781  0BD2  3000               	movlw	0
 13782  0BD3  0020               	movlb	0	; select bank0
 13783  0BD4  00BF               	movwf	?___ftmul
 13784  0BD5  3000               	movlw	0
 13785  0BD6  00C0               	movwf	?___ftmul+1
 13786  0BD7  3000               	movlw	0
 13787  0BD8  00C1               	movwf	?___ftmul+2
 13788  0BD9  0008               	return
 13789  0BDA                     l7915:	
 13790  0BDA  0021               	movlb	1	; select bank1
 13791  0BDB  0825               	movf	___ftmul@sign^(0+128),w
 13792  0BDC  3E7B               	addlw	123
 13793  0BDD  0020               	movlb	0	; select bank0
 13794  0BDE  00C5               	movwf	??___ftmul
 13795  0BDF  0845               	movf	??___ftmul,w
 13796  0BE0  0021               	movlb	1	; select bank1
 13797  0BE1  07A0               	addwf	___ftmul@exp^(0+128),f
 13798  0BE2  0020               	movlb	0	; select bank0
 13799  0BE3  083F               	movf	___ftmul@f1,w
 13800  0BE4  00C5               	movwf	??___ftmul
 13801  0BE5  0840               	movf	___ftmul@f1+1,w
 13802  0BE6  00C6               	movwf	??___ftmul+1
 13803  0BE7  0841               	movf	___ftmul@f1+2,w
 13804  0BE8  00C7               	movwf	??___ftmul+2
 13805  0BE9  3010               	movlw	16
 13806  0BEA                     u7905:	
 13807  0BEA  36C7               	lsrf	??___ftmul+2,f
 13808  0BEB  0CC6               	rrf	??___ftmul+1,f
 13809  0BEC  0CC5               	rrf	??___ftmul,f
 13810  0BED  0B89               	decfsz	9,f
 13811  0BEE  2BEA               	goto	u7905
 13812  0BEF  0845               	movf	??___ftmul,w
 13813  0BF0  00C8               	movwf	??___ftmul+3
 13814  0BF1  0848               	movf	??___ftmul+3,w
 13815  0BF2  0021               	movlb	1	; select bank1
 13816  0BF3  00A5               	movwf	___ftmul@sign^(0+128)
 13817  0BF4  0020               	movlb	0	; select bank0
 13818  0BF5  0842               	movf	___ftmul@f2,w
 13819  0BF6  00C5               	movwf	??___ftmul
 13820  0BF7  0843               	movf	___ftmul@f2+1,w
 13821  0BF8  00C6               	movwf	??___ftmul+1
 13822  0BF9  0844               	movf	___ftmul@f2+2,w
 13823  0BFA  00C7               	movwf	??___ftmul+2
 13824  0BFB  3010               	movlw	16
 13825  0BFC                     u7915:	
 13826  0BFC  36C7               	lsrf	??___ftmul+2,f
 13827  0BFD  0CC6               	rrf	??___ftmul+1,f
 13828  0BFE  0CC5               	rrf	??___ftmul,f
 13829  0BFF  0B89               	decfsz	9,f
 13830  0C00  2BFC               	goto	u7915
 13831  0C01  0845               	movf	??___ftmul,w
 13832  0C02  00C8               	movwf	??___ftmul+3
 13833  0C03  0848               	movf	??___ftmul+3,w
 13834  0C04  0021               	movlb	1	; select bank1
 13835  0C05  06A5               	xorwf	___ftmul@sign^(0+128),f
 13836  0C06  3080               	movlw	128
 13837  0C07  0020               	movlb	0	; select bank0
 13838  0C08  00C5               	movwf	??___ftmul
 13839  0C09  0845               	movf	??___ftmul,w
 13840  0C0A  0021               	movlb	1	; select bank1
 13841  0C0B  05A5               	andwf	___ftmul@sign^(0+128),f
 13842  0C0C  0020               	movlb	0	; select bank0
 13843  0C0D  17C0               	bsf	___ftmul@f1+1,7
 13844  0C0E  17C3               	bsf	___ftmul@f2+1,7
 13845  0C0F  30FF               	movlw	255
 13846  0C10  05C2               	andwf	___ftmul@f2,f
 13847  0C11  30FF               	movlw	255
 13848  0C12  05C3               	andwf	___ftmul@f2+1,f
 13849  0C13  3000               	movlw	0
 13850  0C14  05C4               	andwf	___ftmul@f2+2,f
 13851  0C15  3000               	movlw	0
 13852  0C16  0021               	movlb	1	; select bank1
 13853  0C17  00A1               	movwf	___ftmul@f3_as_product^(0+128)
 13854  0C18  3000               	movlw	0
 13855  0C19  00A2               	movwf	(___ftmul@f3_as_product+1)^(0+128)
 13856  0C1A  3000               	movlw	0
 13857  0C1B  00A3               	movwf	(___ftmul@f3_as_product+2)^(0+128)
 13858  0C1C  3007               	movlw	7
 13859  0C1D  0020               	movlb	0	; select bank0
 13860  0C1E  00C5               	movwf	??___ftmul
 13861  0C1F  0845               	movf	??___ftmul,w
 13862  0C20  0021               	movlb	1	; select bank1
 13863  0C21  00A4               	movwf	___ftmul@cntr^(0+128)
 13864  0C22                     l7927:	
 13865  0C22  0020               	movlb	0	; select bank0
 13866  0C23  1C3F               	btfss	___ftmul@f1,0
 13867  0C24  2C30               	goto	l7931
 13868  0C25  0842               	movf	___ftmul@f2,w
 13869  0C26  0021               	movlb	1	; select bank1
 13870  0C27  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 13871  0C28  0020               	movlb	0	; select bank0
 13872  0C29  0843               	movf	___ftmul@f2+1,w
 13873  0C2A  0021               	movlb	1	; select bank1
 13874  0C2B  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13875  0C2C  0020               	movlb	0	; select bank0
 13876  0C2D  0844               	movf	___ftmul@f2+2,w
 13877  0C2E  0021               	movlb	1	; select bank1
 13878  0C2F  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13879  0C30                     l7931:	
 13880  0C30  3001               	movlw	1
 13881  0C31                     u7935:	
 13882  0C31  0020               	movlb	0	; select bank0
 13883  0C32  36C1               	lsrf	___ftmul@f1+2,f
 13884  0C33  0CC0               	rrf	___ftmul@f1+1,f
 13885  0C34  0CBF               	rrf	___ftmul@f1,f
 13886  0C35  0B89               	decfsz	9,f
 13887  0C36  2C31               	goto	u7935
 13888  0C37  3001               	movlw	1
 13889  0C38                     u7945:	
 13890  0C38  35C2               	lslf	___ftmul@f2,f
 13891  0C39  0DC3               	rlf	___ftmul@f2+1,f
 13892  0C3A  0DC4               	rlf	___ftmul@f2+2,f
 13893  0C3B  0B89               	decfsz	9,f
 13894  0C3C  2C38               	goto	u7945
 13895  0C3D  3001               	movlw	1
 13896  0C3E  0021               	movlb	1	; select bank1
 13897  0C3F  02A4               	subwf	___ftmul@cntr^(0+128),f
 13898  0C40  1D03               	btfss	3,2
 13899  0C41  2C22               	goto	l7927
 13900  0C42  3009               	movlw	9
 13901  0C43  0020               	movlb	0	; select bank0
 13902  0C44  00C5               	movwf	??___ftmul
 13903  0C45  0845               	movf	??___ftmul,w
 13904  0C46  0021               	movlb	1	; select bank1
 13905  0C47  00A4               	movwf	___ftmul@cntr^(0+128)
 13906  0C48                     l7939:	
 13907  0C48  0020               	movlb	0	; select bank0
 13908  0C49  1C3F               	btfss	___ftmul@f1,0
 13909  0C4A  2C56               	goto	l7943
 13910  0C4B  0842               	movf	___ftmul@f2,w
 13911  0C4C  0021               	movlb	1	; select bank1
 13912  0C4D  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 13913  0C4E  0020               	movlb	0	; select bank0
 13914  0C4F  0843               	movf	___ftmul@f2+1,w
 13915  0C50  0021               	movlb	1	; select bank1
 13916  0C51  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13917  0C52  0020               	movlb	0	; select bank0
 13918  0C53  0844               	movf	___ftmul@f2+2,w
 13919  0C54  0021               	movlb	1	; select bank1
 13920  0C55  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13921  0C56                     l7943:	
 13922  0C56  3001               	movlw	1
 13923  0C57                     u7975:	
 13924  0C57  0020               	movlb	0	; select bank0
 13925  0C58  36C1               	lsrf	___ftmul@f1+2,f
 13926  0C59  0CC0               	rrf	___ftmul@f1+1,f
 13927  0C5A  0CBF               	rrf	___ftmul@f1,f
 13928  0C5B  0B89               	decfsz	9,f
 13929  0C5C  2C57               	goto	u7975
 13930  0C5D  3001               	movlw	1
 13931  0C5E                     u7985:	
 13932  0C5E  0021               	movlb	1	; select bank1
 13933  0C5F  36A3               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
 13934  0C60  0CA2               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
 13935  0C61  0CA1               	rrf	___ftmul@f3_as_product^(0+128),f
 13936  0C62  0B89               	decfsz	9,f
 13937  0C63  2C5E               	goto	u7985
 13938  0C64  3001               	movlw	1
 13939  0C65  02A4               	subwf	___ftmul@cntr^(0+128),f
 13940  0C66  1D03               	btfss	3,2
 13941  0C67  2C48               	goto	l7939
 13942  0C68  0821               	movf	___ftmul@f3_as_product^(0+128),w
 13943  0C69  0020               	movlb	0	; select bank0
 13944  0C6A  00B1               	movwf	___ftpack@arg
 13945  0C6B  0021               	movlb	1	; select bank1
 13946  0C6C  0822               	movf	(___ftmul@f3_as_product+1)^(0+128),w
 13947  0C6D  0020               	movlb	0	; select bank0
 13948  0C6E  00B2               	movwf	___ftpack@arg+1
 13949  0C6F  0021               	movlb	1	; select bank1
 13950  0C70  0823               	movf	(___ftmul@f3_as_product+2)^(0+128),w
 13951  0C71  0020               	movlb	0	; select bank0
 13952  0C72  00B3               	movwf	___ftpack@arg+2
 13953  0C73  0021               	movlb	1	; select bank1
 13954  0C74  0820               	movf	___ftmul@exp^(0+128),w
 13955  0C75  0020               	movlb	0	; select bank0
 13956  0C76  00C5               	movwf	??___ftmul
 13957  0C77  0845               	movf	??___ftmul,w
 13958  0C78  00B4               	movwf	___ftpack@exp
 13959  0C79  0021               	movlb	1	; select bank1
 13960  0C7A  0825               	movf	___ftmul@sign^(0+128),w
 13961  0C7B  0020               	movlb	0	; select bank0
 13962  0C7C  00C6               	movwf	??___ftmul+1
 13963  0C7D  0846               	movf	??___ftmul+1,w
 13964  0C7E  00B5               	movwf	___ftpack@sign
 13965  0C7F  3193  23D0         	fcall	___ftpack
 13966  0C81  0020               	movlb	0	; select bank0
 13967  0C82  0831               	movf	?___ftpack,w
 13968  0C83  00BF               	movwf	?___ftmul
 13969  0C84  0832               	movf	?___ftpack+1,w
 13970  0C85  00C0               	movwf	?___ftmul+1
 13971  0C86  0833               	movf	?___ftpack+2,w
 13972  0C87  00C1               	movwf	?___ftmul+2
 13973  0C88  0008               	return
 13974  0C89                     __end_of___ftmul:	
 13975                           
 13976                           	psect	text38
 13977  0C89                     __ptext38:	
 13978 ;; *************** function ___ftadd *****************
 13979 ;; Defined at:
 13980 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;  f1              3    6[BANK1 ] float 
 13983 ;;  f2              3    9[BANK1 ] float 
 13984 ;; Auto vars:     Size  Location     Type
 13985 ;;  exp1            1   14[BANK1 ] unsigned char 
 13986 ;;  exp2            1   13[BANK1 ] unsigned char 
 13987 ;;  sign            1   12[BANK1 ] unsigned char 
 13988 ;; Return value:  Size  Location     Type
 13989 ;;                  3    6[BANK1 ] float 
 13990 ;; Registers used:
 13991 ;;		wreg, status,2, status,0, pclath, cstack
 13992 ;; Tracked objects:
 13993 ;;		On entry : 0/0
 13994 ;;		On exit  : 0/0
 13995 ;;		Unchanged: 0/0
 13996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13997 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13998 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13999 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14000 ;;      Totals:         0       4       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14001 ;;Total ram usage:       13 bytes
 14002 ;; Hardware stack levels used:    1
 14003 ;; Hardware stack levels required when called:    7
 14004 ;; This function calls:
 14005 ;;		___ftpack
 14006 ;; This function is called by:
 14007 ;;		_main_initialize
 14008 ;;		_setDrvPiezoOnTime
 14009 ;;		_setH1OffTime
 14010 ;;		_setH2OnTime
 14011 ;; This function uses a non-reentrant model
 14012 ;;
 14013                           
 14014                           
 14015                           ;psect for function ___ftadd
 14016  0C89                     ___ftadd:	
 14017                           
 14018                           ;incstack = 0
 14019                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 14020  0C89  0021               	movlb	1	; select bank1
 14021  0C8A  0826               	movf	___ftadd@f1^(0+128),w
 14022  0C8B  0020               	movlb	0	; select bank0
 14023  0C8C  00C9               	movwf	??___ftadd
 14024  0C8D  0021               	movlb	1	; select bank1
 14025  0C8E  0827               	movf	(___ftadd@f1+1)^(0+128),w
 14026  0C8F  0020               	movlb	0	; select bank0
 14027  0C90  00CA               	movwf	??___ftadd+1
 14028  0C91  0021               	movlb	1	; select bank1
 14029  0C92  0828               	movf	(___ftadd@f1+2)^(0+128),w
 14030  0C93  0020               	movlb	0	; select bank0
 14031  0C94  00CB               	movwf	??___ftadd+2
 14032  0C95  1003               	clrc
 14033  0C96  0D4A               	rlf	??___ftadd+1,w
 14034  0C97  0D4B               	rlf	??___ftadd+2,w
 14035  0C98  00CC               	movwf	??___ftadd+3
 14036  0C99  084C               	movf	??___ftadd+3,w
 14037  0C9A  0021               	movlb	1	; select bank1
 14038  0C9B  00AE               	movwf	___ftadd@exp1^(0+128)
 14039  0C9C  0829               	movf	___ftadd@f2^(0+128),w
 14040  0C9D  0020               	movlb	0	; select bank0
 14041  0C9E  00C9               	movwf	??___ftadd
 14042  0C9F  0021               	movlb	1	; select bank1
 14043  0CA0  082A               	movf	(___ftadd@f2+1)^(0+128),w
 14044  0CA1  0020               	movlb	0	; select bank0
 14045  0CA2  00CA               	movwf	??___ftadd+1
 14046  0CA3  0021               	movlb	1	; select bank1
 14047  0CA4  082B               	movf	(___ftadd@f2+2)^(0+128),w
 14048  0CA5  0020               	movlb	0	; select bank0
 14049  0CA6  00CB               	movwf	??___ftadd+2
 14050  0CA7  1003               	clrc
 14051  0CA8  0D4A               	rlf	??___ftadd+1,w
 14052  0CA9  0D4B               	rlf	??___ftadd+2,w
 14053  0CAA  00CC               	movwf	??___ftadd+3
 14054  0CAB  084C               	movf	??___ftadd+3,w
 14055  0CAC  0021               	movlb	1	; select bank1
 14056  0CAD  00AD               	movwf	___ftadd@exp2^(0+128)
 14057  0CAE  082E               	movf	___ftadd@exp1^(0+128),w
 14058  0CAF  1903               	btfsc	3,2
 14059  0CB0  2CBE               	goto	l7839
 14060  0CB1  082D               	movf	___ftadd@exp2^(0+128),w
 14061  0CB2  022E               	subwf	___ftadd@exp1^(0+128),w
 14062  0CB3  1803               	skipnc
 14063  0CB4  2CC6               	goto	l7843
 14064  0CB5  032E               	decf	___ftadd@exp1^(0+128),w
 14065  0CB6  3AFF               	xorlw	255
 14066  0CB7  072D               	addwf	___ftadd@exp2^(0+128),w
 14067  0CB8  0020               	movlb	0	; select bank0
 14068  0CB9  00C9               	movwf	??___ftadd
 14069  0CBA  3019               	movlw	25
 14070  0CBB  0249               	subwf	??___ftadd,w
 14071  0CBC  1C03               	skipc
 14072  0CBD  2CC6               	goto	l7843
 14073  0CBE                     l7839:	
 14074  0CBE  0021               	movlb	1	; select bank1
 14075  0CBF  0829               	movf	___ftadd@f2^(0+128),w
 14076  0CC0  00A6               	movwf	?___ftadd^(0+128)
 14077  0CC1  082A               	movf	(___ftadd@f2+1)^(0+128),w
 14078  0CC2  00A7               	movwf	(?___ftadd+1)^(0+128)
 14079  0CC3  082B               	movf	(___ftadd@f2+2)^(0+128),w
 14080  0CC4  00A8               	movwf	(?___ftadd+2)^(0+128)
 14081  0CC5  0008               	return
 14082  0CC6                     l7843:	
 14083  0CC6  0021               	movlb	1	; select bank1
 14084  0CC7  082D               	movf	___ftadd@exp2^(0+128),w
 14085  0CC8  1903               	btfsc	3,2
 14086  0CC9  0008               	return
 14087  0CCA  082E               	movf	___ftadd@exp1^(0+128),w
 14088  0CCB  022D               	subwf	___ftadd@exp2^(0+128),w
 14089  0CCC  1803               	skipnc
 14090  0CCD  2CD7               	goto	l7849
 14091  0CCE  032D               	decf	___ftadd@exp2^(0+128),w
 14092  0CCF  3AFF               	xorlw	255
 14093  0CD0  072E               	addwf	___ftadd@exp1^(0+128),w
 14094  0CD1  0020               	movlb	0	; select bank0
 14095  0CD2  00C9               	movwf	??___ftadd
 14096  0CD3  3019               	movlw	25
 14097  0CD4  0249               	subwf	??___ftadd,w
 14098  0CD5  1803               	btfsc	3,0
 14099  0CD6  0008               	return
 14100  0CD7                     l7849:	
 14101  0CD7  3006               	movlw	6
 14102  0CD8  0020               	movlb	0	; select bank0
 14103  0CD9  00C9               	movwf	??___ftadd
 14104  0CDA  0849               	movf	??___ftadd,w
 14105  0CDB  0021               	movlb	1	; select bank1
 14106  0CDC  00AC               	movwf	___ftadd@sign^(0+128)
 14107  0CDD  1BA8               	btfsc	(___ftadd@f1+2)^(0+128),7
 14108  0CDE  17AC               	bsf	___ftadd@sign^(0+128),7
 14109  0CDF  1BAB               	btfsc	(___ftadd@f2+2)^(0+128),7
 14110  0CE0  172C               	bsf	___ftadd@sign^(0+128),6
 14111  0CE1  17A7               	bsf	(___ftadd@f1^(0+128)+1),7
 14112  0CE2  30FF               	movlw	255
 14113  0CE3  05A6               	andwf	___ftadd@f1^(0+128),f
 14114  0CE4  30FF               	movlw	255
 14115  0CE5  05A7               	andwf	(___ftadd@f1+1)^(0+128),f
 14116  0CE6  3000               	movlw	0
 14117  0CE7  05A8               	andwf	(___ftadd@f1+2)^(0+128),f
 14118  0CE8  17AA               	bsf	(___ftadd@f2^(0+128)+1),7
 14119  0CE9  30FF               	movlw	255
 14120  0CEA  05A9               	andwf	___ftadd@f2^(0+128),f
 14121  0CEB  30FF               	movlw	255
 14122  0CEC  05AA               	andwf	(___ftadd@f2+1)^(0+128),f
 14123  0CED  3000               	movlw	0
 14124  0CEE  05AB               	andwf	(___ftadd@f2+2)^(0+128),f
 14125  0CEF  082D               	movf	___ftadd@exp2^(0+128),w
 14126  0CF0  022E               	subwf	___ftadd@exp1^(0+128),w
 14127  0CF1  1803               	skipnc
 14128  0CF2  2D17               	goto	l7871
 14129  0CF3                     l7861:	
 14130  0CF3  3001               	movlw	1
 14131  0CF4                     u7745:	
 14132  0CF4  35A9               	lslf	___ftadd@f2^(0+128),f
 14133  0CF5  0DAA               	rlf	(___ftadd@f2+1)^(0+128),f
 14134  0CF6  0DAB               	rlf	(___ftadd@f2+2)^(0+128),f
 14135  0CF7  0B89               	decfsz	9,f
 14136  0CF8  2CF4               	goto	u7745
 14137  0CF9  3001               	movlw	1
 14138  0CFA  02AD               	subwf	___ftadd@exp2^(0+128),f
 14139  0CFB  082D               	movf	___ftadd@exp2^(0+128),w
 14140  0CFC  062E               	xorwf	___ftadd@exp1^(0+128),w
 14141  0CFD  1903               	skipnz
 14142  0CFE  2D12               	goto	l7869
 14143  0CFF  3001               	movlw	1
 14144  0D00  02AC               	subwf	___ftadd@sign^(0+128),f
 14145  0D01  082C               	movf	___ftadd@sign^(0+128),w
 14146  0D02  3907               	andlw	7
 14147  0D03  1903               	btfsc	3,2
 14148  0D04  2D12               	goto	l7869
 14149  0D05  2CF3               	goto	l7861
 14150  0D06                     l7867:	
 14151  0D06  3001               	movlw	1
 14152  0D07                     u7775:	
 14153  0D07  36A8               	lsrf	(___ftadd@f1+2)^(0+128),f
 14154  0D08  0CA7               	rrf	(___ftadd@f1+1)^(0+128),f
 14155  0D09  0CA6               	rrf	___ftadd@f1^(0+128),f
 14156  0D0A  0B89               	decfsz	9,f
 14157  0D0B  2D07               	goto	u7775
 14158  0D0C  3001               	movlw	1
 14159  0D0D  0020               	movlb	0	; select bank0
 14160  0D0E  00C9               	movwf	??___ftadd
 14161  0D0F  0849               	movf	??___ftadd,w
 14162  0D10  0021               	movlb	1	; select bank1
 14163  0D11  07AE               	addwf	___ftadd@exp1^(0+128),f
 14164  0D12                     l7869:	
 14165  0D12  082E               	movf	___ftadd@exp1^(0+128),w
 14166  0D13  062D               	xorwf	___ftadd@exp2^(0+128),w
 14167  0D14  1903               	btfsc	3,2
 14168  0D15  2D3E               	goto	l1826
 14169  0D16  2D06               	goto	l7867
 14170  0D17                     l7871:	
 14171  0D17  082E               	movf	___ftadd@exp1^(0+128),w
 14172  0D18  022D               	subwf	___ftadd@exp2^(0+128),w
 14173  0D19  1803               	skipnc
 14174  0D1A  2D3E               	goto	l1826
 14175  0D1B                     l7873:	
 14176  0D1B  3001               	movlw	1
 14177  0D1C                     u7805:	
 14178  0D1C  35A6               	lslf	___ftadd@f1^(0+128),f
 14179  0D1D  0DA7               	rlf	(___ftadd@f1+1)^(0+128),f
 14180  0D1E  0DA8               	rlf	(___ftadd@f1+2)^(0+128),f
 14181  0D1F  0B89               	decfsz	9,f
 14182  0D20  2D1C               	goto	u7805
 14183  0D21  3001               	movlw	1
 14184  0D22  02AE               	subwf	___ftadd@exp1^(0+128),f
 14185  0D23  082D               	movf	___ftadd@exp2^(0+128),w
 14186  0D24  062E               	xorwf	___ftadd@exp1^(0+128),w
 14187  0D25  1903               	skipnz
 14188  0D26  2D3A               	goto	l7881
 14189  0D27  3001               	movlw	1
 14190  0D28  02AC               	subwf	___ftadd@sign^(0+128),f
 14191  0D29  082C               	movf	___ftadd@sign^(0+128),w
 14192  0D2A  3907               	andlw	7
 14193  0D2B  1903               	btfsc	3,2
 14194  0D2C  2D3A               	goto	l7881
 14195  0D2D  2D1B               	goto	l7873
 14196  0D2E                     l7879:	
 14197  0D2E  3001               	movlw	1
 14198  0D2F                     u7835:	
 14199  0D2F  36AB               	lsrf	(___ftadd@f2+2)^(0+128),f
 14200  0D30  0CAA               	rrf	(___ftadd@f2+1)^(0+128),f
 14201  0D31  0CA9               	rrf	___ftadd@f2^(0+128),f
 14202  0D32  0B89               	decfsz	9,f
 14203  0D33  2D2F               	goto	u7835
 14204  0D34  3001               	movlw	1
 14205  0D35  0020               	movlb	0	; select bank0
 14206  0D36  00C9               	movwf	??___ftadd
 14207  0D37  0849               	movf	??___ftadd,w
 14208  0D38  0021               	movlb	1	; select bank1
 14209  0D39  07AD               	addwf	___ftadd@exp2^(0+128),f
 14210  0D3A                     l7881:	
 14211  0D3A  082E               	movf	___ftadd@exp1^(0+128),w
 14212  0D3B  062D               	xorwf	___ftadd@exp2^(0+128),w
 14213  0D3C  1D03               	skipz
 14214  0D3D  2D2E               	goto	l7879
 14215  0D3E                     l1826:	
 14216  0D3E  1FAC               	btfss	___ftadd@sign^(0+128),7
 14217  0D3F  2D50               	goto	l7885
 14218  0D40  30FF               	movlw	255
 14219  0D41  06A6               	xorwf	___ftadd@f1^(0+128),f
 14220  0D42  30FF               	movlw	255
 14221  0D43  06A7               	xorwf	(___ftadd@f1+1)^(0+128),f
 14222  0D44  30FF               	movlw	255
 14223  0D45  06A8               	xorwf	(___ftadd@f1+2)^(0+128),f
 14224  0D46  3001               	movlw	1
 14225  0D47  07A6               	addwf	___ftadd@f1^(0+128),f
 14226  0D48  3000               	movlw	0
 14227  0D49  1803               	skipnc
 14228  0D4A  3001               	movlw	1
 14229  0D4B  07A7               	addwf	(___ftadd@f1+1)^(0+128),f
 14230  0D4C  3000               	movlw	0
 14231  0D4D  1803               	skipnc
 14232  0D4E  3001               	movlw	1
 14233  0D4F  07A8               	addwf	(___ftadd@f1+2)^(0+128),f
 14234  0D50                     l7885:	
 14235  0D50  1F2C               	btfss	___ftadd@sign^(0+128),6
 14236  0D51  2D62               	goto	l7889
 14237  0D52  30FF               	movlw	255
 14238  0D53  06A9               	xorwf	___ftadd@f2^(0+128),f
 14239  0D54  30FF               	movlw	255
 14240  0D55  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 14241  0D56  30FF               	movlw	255
 14242  0D57  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 14243  0D58  3001               	movlw	1
 14244  0D59  07A9               	addwf	___ftadd@f2^(0+128),f
 14245  0D5A  3000               	movlw	0
 14246  0D5B  1803               	skipnc
 14247  0D5C  3001               	movlw	1
 14248  0D5D  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 14249  0D5E  3000               	movlw	0
 14250  0D5F  1803               	skipnc
 14251  0D60  3001               	movlw	1
 14252  0D61  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 14253  0D62                     l7889:	
 14254  0D62  01AC               	clrf	___ftadd@sign^(0+128)
 14255  0D63  0826               	movf	___ftadd@f1^(0+128),w
 14256  0D64  07A9               	addwf	___ftadd@f2^(0+128),f
 14257  0D65  0827               	movf	(___ftadd@f1+1)^(0+128),w
 14258  0D66  3DAA               	addwfc	(___ftadd@f2+1)^(0+128),f
 14259  0D67  0828               	movf	(___ftadd@f1+2)^(0+128),w
 14260  0D68  3DAB               	addwfc	(___ftadd@f2+2)^(0+128),f
 14261  0D69  1FAB               	btfss	(___ftadd@f2+2)^(0+128),7
 14262  0D6A  2D7D               	goto	l7899
 14263  0D6B  30FF               	movlw	255
 14264  0D6C  06A9               	xorwf	___ftadd@f2^(0+128),f
 14265  0D6D  30FF               	movlw	255
 14266  0D6E  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 14267  0D6F  30FF               	movlw	255
 14268  0D70  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 14269  0D71  3001               	movlw	1
 14270  0D72  07A9               	addwf	___ftadd@f2^(0+128),f
 14271  0D73  3000               	movlw	0
 14272  0D74  1803               	skipnc
 14273  0D75  3001               	movlw	1
 14274  0D76  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 14275  0D77  3000               	movlw	0
 14276  0D78  1803               	skipnc
 14277  0D79  3001               	movlw	1
 14278  0D7A  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 14279  0D7B  01AC               	clrf	___ftadd@sign^(0+128)
 14280  0D7C  0AAC               	incf	___ftadd@sign^(0+128),f
 14281  0D7D                     l7899:	
 14282  0D7D  0829               	movf	___ftadd@f2^(0+128),w
 14283  0D7E  0020               	movlb	0	; select bank0
 14284  0D7F  00B1               	movwf	___ftpack@arg
 14285  0D80  0021               	movlb	1	; select bank1
 14286  0D81  082A               	movf	(___ftadd@f2+1)^(0+128),w
 14287  0D82  0020               	movlb	0	; select bank0
 14288  0D83  00B2               	movwf	___ftpack@arg+1
 14289  0D84  0021               	movlb	1	; select bank1
 14290  0D85  082B               	movf	(___ftadd@f2+2)^(0+128),w
 14291  0D86  0020               	movlb	0	; select bank0
 14292  0D87  00B3               	movwf	___ftpack@arg+2
 14293  0D88  0021               	movlb	1	; select bank1
 14294  0D89  082E               	movf	___ftadd@exp1^(0+128),w
 14295  0D8A  0020               	movlb	0	; select bank0
 14296  0D8B  00C9               	movwf	??___ftadd
 14297  0D8C  0849               	movf	??___ftadd,w
 14298  0D8D  00B4               	movwf	___ftpack@exp
 14299  0D8E  0021               	movlb	1	; select bank1
 14300  0D8F  082C               	movf	___ftadd@sign^(0+128),w
 14301  0D90  0020               	movlb	0	; select bank0
 14302  0D91  00CA               	movwf	??___ftadd+1
 14303  0D92  084A               	movf	??___ftadd+1,w
 14304  0D93  00B5               	movwf	___ftpack@sign
 14305  0D94  3193  23D0         	fcall	___ftpack
 14306  0D96  0020               	movlb	0	; select bank0
 14307  0D97  0831               	movf	?___ftpack,w
 14308  0D98  0021               	movlb	1	; select bank1
 14309  0D99  00A6               	movwf	?___ftadd^(0+128)
 14310  0D9A  0020               	movlb	0	; select bank0
 14311  0D9B  0832               	movf	?___ftpack+1,w
 14312  0D9C  0021               	movlb	1	; select bank1
 14313  0D9D  00A7               	movwf	(?___ftadd+1)^(0+128)
 14314  0D9E  0020               	movlb	0	; select bank0
 14315  0D9F  0833               	movf	?___ftpack+2,w
 14316  0DA0  0021               	movlb	1	; select bank1
 14317  0DA1  00A8               	movwf	(?___ftadd+2)^(0+128)
 14318  0DA2  0008               	return
 14319  0DA3                     __end_of___ftadd:	
 14320                           
 14321                           	psect	text39
 14322  2576                     __ptext39:	
 14323 ;; *************** function ___awtoft *****************
 14324 ;; Defined at:
 14325 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 14326 ;; Parameters:    Size  Location     Type
 14327 ;;  c               2   25[BANK0 ] int 
 14328 ;; Auto vars:     Size  Location     Type
 14329 ;;  sign            1   30[BANK0 ] unsigned char 
 14330 ;; Return value:  Size  Location     Type
 14331 ;;                  3   25[BANK0 ] float 
 14332 ;; Registers used:
 14333 ;;		wreg, status,2, status,0, pclath, cstack
 14334 ;; Tracked objects:
 14335 ;;		On entry : 0/0
 14336 ;;		On exit  : 0/0
 14337 ;;		Unchanged: 0/0
 14338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14339 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14340 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14341 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14342 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14343 ;;Total ram usage:        6 bytes
 14344 ;; Hardware stack levels used:    1
 14345 ;; Hardware stack levels required when called:    7
 14346 ;; This function calls:
 14347 ;;		___ftpack
 14348 ;; This function is called by:
 14349 ;;		_main_initialize
 14350 ;;		_setDrvPiezoOnTime
 14351 ;;		_setH1OffTime
 14352 ;;		_setH2OnTime
 14353 ;;		_drv_outputSine
 14354 ;; This function uses a non-reentrant model
 14355 ;;
 14356                           
 14357                           
 14358                           ;psect for function ___awtoft
 14359  2576                     ___awtoft:	
 14360                           
 14361                           ;incstack = 0
 14362                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 14363  2576  0020               	movlb	0	; select bank0
 14364  2577  01BE               	clrf	___awtoft@sign
 14365  2578  1FBA               	btfss	___awtoft@c+1,7
 14366  2579  2D81               	goto	l7829
 14367  257A  09B9               	comf	___awtoft@c,f
 14368  257B  09BA               	comf	___awtoft@c+1,f
 14369  257C  0AB9               	incf	___awtoft@c,f
 14370  257D  1903               	skipnz
 14371  257E  0ABA               	incf	___awtoft@c+1,f
 14372  257F  01BE               	clrf	___awtoft@sign
 14373  2580  0ABE               	incf	___awtoft@sign,f
 14374  2581                     l7829:	
 14375  2581  0839               	movf	___awtoft@c,w
 14376  2582  00B1               	movwf	___ftpack@arg
 14377  2583  083A               	movf	___awtoft@c+1,w
 14378  2584  00B2               	movwf	___ftpack@arg+1
 14379  2585  01B3               	clrf	___ftpack@arg+2
 14380  2586  308E               	movlw	142
 14381  2587  00BC               	movwf	??___awtoft
 14382  2588  083C               	movf	??___awtoft,w
 14383  2589  00B4               	movwf	___ftpack@exp
 14384  258A  083E               	movf	___awtoft@sign,w
 14385  258B  00BD               	movwf	??___awtoft+1
 14386  258C  083D               	movf	??___awtoft+1,w
 14387  258D  00B5               	movwf	___ftpack@sign
 14388  258E  3193  23D0         	fcall	___ftpack
 14389  2590  0020               	movlb	0	; select bank0
 14390  2591  0831               	movf	?___ftpack,w
 14391  2592  00B9               	movwf	?___awtoft
 14392  2593  0832               	movf	?___ftpack+1,w
 14393  2594  00BA               	movwf	?___awtoft+1
 14394  2595  0833               	movf	?___ftpack+2,w
 14395  2596  00BB               	movwf	?___awtoft+2
 14396  2597  0008               	return
 14397  2598                     __end_of___awtoft:	
 14398                           
 14399                           	psect	text40
 14400  13D0                     __ptext40:	
 14401 ;; *************** function ___ftpack *****************
 14402 ;; Defined at:
 14403 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 14404 ;; Parameters:    Size  Location     Type
 14405 ;;  arg             3   17[BANK0 ] unsigned um
 14406 ;;  exp             1   20[BANK0 ] unsigned char 
 14407 ;;  sign            1   21[BANK0 ] unsigned char 
 14408 ;; Auto vars:     Size  Location     Type
 14409 ;;		None
 14410 ;; Return value:  Size  Location     Type
 14411 ;;                  3   17[BANK0 ] float 
 14412 ;; Registers used:
 14413 ;;		wreg, status,2, status,0
 14414 ;; Tracked objects:
 14415 ;;		On entry : 0/0
 14416 ;;		On exit  : 0/0
 14417 ;;		Unchanged: 0/0
 14418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14419 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14421 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14422 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14423 ;;Total ram usage:        8 bytes
 14424 ;; Hardware stack levels used:    1
 14425 ;; Hardware stack levels required when called:    6
 14426 ;; This function calls:
 14427 ;;		Nothing
 14428 ;; This function is called by:
 14429 ;;		___awtoft
 14430 ;;		___ftadd
 14431 ;;		___ftmul
 14432 ;; This function uses a non-reentrant model
 14433 ;;
 14434                           
 14435                           
 14436                           ;psect for function ___ftpack
 14437  13D0                     ___ftpack:	
 14438                           
 14439                           ;incstack = 0
 14440                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 14441  13D0  0020               	movlb	0	; select bank0
 14442  13D1  0834               	movf	___ftpack@exp,w
 14443  13D2  1903               	btfsc	3,2
 14444  13D3  2BD9               	goto	l7683
 14445  13D4  0833               	movf	___ftpack@arg+2,w
 14446  13D5  0432               	iorwf	___ftpack@arg+1,w
 14447  13D6  0431               	iorwf	___ftpack@arg,w
 14448  13D7  1D03               	skipz
 14449  13D8  2BEA               	goto	l7689
 14450  13D9                     l7683:	
 14451  13D9  3000               	movlw	0
 14452  13DA  00B1               	movwf	?___ftpack
 14453  13DB  3000               	movlw	0
 14454  13DC  00B2               	movwf	?___ftpack+1
 14455  13DD  3000               	movlw	0
 14456  13DE  00B3               	movwf	?___ftpack+2
 14457  13DF  0008               	return
 14458  13E0                     l7687:	
 14459  13E0  3001               	movlw	1
 14460  13E1  00B6               	movwf	??___ftpack
 14461  13E2  0836               	movf	??___ftpack,w
 14462  13E3  07B4               	addwf	___ftpack@exp,f
 14463  13E4  3001               	movlw	1
 14464  13E5                     u7375:	
 14465  13E5  36B3               	lsrf	___ftpack@arg+2,f
 14466  13E6  0CB2               	rrf	___ftpack@arg+1,f
 14467  13E7  0CB1               	rrf	___ftpack@arg,f
 14468  13E8  0B89               	decfsz	9,f
 14469  13E9  2BE5               	goto	u7375
 14470  13EA                     l7689:	
 14471  13EA  30FE               	movlw	254
 14472  13EB  0533               	andwf	___ftpack@arg+2,w
 14473  13EC  1903               	btfsc	3,2
 14474  13ED  2C03               	goto	l1795
 14475  13EE  2BE0               	goto	l7687
 14476  13EF                     l7691:	
 14477  13EF  3001               	movlw	1
 14478  13F0  00B6               	movwf	??___ftpack
 14479  13F1  0836               	movf	??___ftpack,w
 14480  13F2  07B4               	addwf	___ftpack@exp,f
 14481  13F3  3001               	movlw	1
 14482  13F4  07B1               	addwf	___ftpack@arg,f
 14483  13F5  3000               	movlw	0
 14484  13F6  1803               	skipnc
 14485  13F7  3001               	movlw	1
 14486  13F8  07B2               	addwf	___ftpack@arg+1,f
 14487  13F9  3000               	movlw	0
 14488  13FA  1803               	skipnc
 14489  13FB  3001               	movlw	1
 14490  13FC  07B3               	addwf	___ftpack@arg+2,f
 14491  13FD  3001               	movlw	1
 14492  13FE                     u7395:	
 14493  13FE  36B3               	lsrf	___ftpack@arg+2,f
 14494  13FF  0CB2               	rrf	___ftpack@arg+1,f
 14495  1400  0CB1               	rrf	___ftpack@arg,f
 14496  1401  0B89               	decfsz	9,f
 14497  1402  2BFE               	goto	u7395
 14498  1403                     l1795:	
 14499  1403  30FF               	movlw	255
 14500  1404  0533               	andwf	___ftpack@arg+2,w
 14501  1405  1903               	btfsc	3,2
 14502  1406  2C10               	goto	l7699
 14503  1407  2BEF               	goto	l7691
 14504  1408                     l7697:	
 14505  1408  3001               	movlw	1
 14506  1409  02B4               	subwf	___ftpack@exp,f
 14507  140A  3001               	movlw	1
 14508  140B                     u7415:	
 14509  140B  35B1               	lslf	___ftpack@arg,f
 14510  140C  0DB2               	rlf	___ftpack@arg+1,f
 14511  140D  0DB3               	rlf	___ftpack@arg+2,f
 14512  140E  0B89               	decfsz	9,f
 14513  140F  2C0B               	goto	u7415
 14514  1410                     l7699:	
 14515  1410  1BB2               	btfsc	___ftpack@arg+1,7
 14516  1411  2C16               	goto	l1802
 14517  1412  3002               	movlw	2
 14518  1413  0234               	subwf	___ftpack@exp,w
 14519  1414  1803               	skipnc
 14520  1415  2C08               	goto	l7697
 14521  1416                     l1802:	
 14522  1416  1834               	btfsc	___ftpack@exp,0
 14523  1417  2C1E               	goto	l1803
 14524  1418  30FF               	movlw	255
 14525  1419  05B1               	andwf	___ftpack@arg,f
 14526  141A  307F               	movlw	127
 14527  141B  05B2               	andwf	___ftpack@arg+1,f
 14528  141C  30FF               	movlw	255
 14529  141D  05B3               	andwf	___ftpack@arg+2,f
 14530  141E                     l1803:	
 14531  141E  1003               	clrc
 14532  141F  0CB4               	rrf	___ftpack@exp,f
 14533  1420  0834               	movf	___ftpack@exp,w
 14534  1421  00B6               	movwf	??___ftpack
 14535  1422  01B7               	clrf	??___ftpack+1
 14536  1423  01B8               	clrf	??___ftpack+2
 14537  1424  3010               	movlw	16
 14538  1425                     u7455:	
 14539  1425  35B6               	lslf	??___ftpack,f
 14540  1426  0DB7               	rlf	??___ftpack+1,f
 14541  1427  0DB8               	rlf	??___ftpack+2,f
 14542  1428  0B89               	decfsz	9,f
 14543  1429  2C25               	goto	u7455
 14544  142A  0836               	movf	??___ftpack,w
 14545  142B  04B1               	iorwf	___ftpack@arg,f
 14546  142C  0837               	movf	??___ftpack+1,w
 14547  142D  04B2               	iorwf	___ftpack@arg+1,f
 14548  142E  0838               	movf	??___ftpack+2,w
 14549  142F  04B3               	iorwf	___ftpack@arg+2,f
 14550  1430  0835               	movf	___ftpack@sign,w
 14551  1431  1903               	btfsc	3,2
 14552  1432  0008               	return
 14553  1433  17B3               	bsf	___ftpack@arg+2,7
 14554  1434  0008               	return
 14555  1435                     __end_of___ftpack:	
 14556                           
 14557                           	psect	text41
 14558  2191                     __ptext41:	
 14559 ;; *************** function _TMR0_Load8bitPeriod *****************
 14560 ;; Defined at:
 14561 ;;		line 113 in file "mcc_generated_files/tmr0.c"
 14562 ;; Parameters:    Size  Location     Type
 14563 ;;  periodVal       1    wreg     unsigned char 
 14564 ;; Auto vars:     Size  Location     Type
 14565 ;;  periodVal       1   17[BANK0 ] unsigned char 
 14566 ;; Return value:  Size  Location     Type
 14567 ;;                  1    wreg      void 
 14568 ;; Registers used:
 14569 ;;		wreg
 14570 ;; Tracked objects:
 14571 ;;		On entry : 0/0
 14572 ;;		On exit  : 0/0
 14573 ;;		Unchanged: 0/0
 14574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14576 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14578 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14579 ;;Total ram usage:        1 bytes
 14580 ;; Hardware stack levels used:    1
 14581 ;; Hardware stack levels required when called:    6
 14582 ;; This function calls:
 14583 ;;		Nothing
 14584 ;; This function is called by:
 14585 ;;		_main_initialize
 14586 ;;		_setDrvPiezoOnTime
 14587 ;;		_setH2OnTime
 14588 ;; This function uses a non-reentrant model
 14589 ;;
 14590                           
 14591                           
 14592                           ;psect for function _TMR0_Load8bitPeriod
 14593  2191                     _TMR0_Load8bitPeriod:	
 14594                           
 14595                           ;incstack = 0
 14596                           ; Regs used in _TMR0_Load8bitPeriod: [wreg]
 14597                           ;TMR0_Load8bitPeriod@periodVal stored from wreg
 14598  2191  0020               	movlb	0	; select bank0
 14599  2192  00B1               	movwf	TMR0_Load8bitPeriod@periodVal
 14600                           
 14601                           ;tmr0.c: 116: TMR0H = periodVal;
 14602  2193  0831               	movf	TMR0_Load8bitPeriod@periodVal,w
 14603  2194  0096               	movwf	22	;volatile
 14604  2195  0008               	return
 14605  2196                     __end_of_TMR0_Load8bitPeriod:	
 14606                           
 14607                           	psect	text42
 14608  2342                     __ptext42:	
 14609 ;; *************** function _setDrvPeak *****************
 14610 ;; Defined at:
 14611 ;;		line 394 in file "main.c"
 14612 ;; Parameters:    Size  Location     Type
 14613 ;;  pk              2   21[BANK1 ] int 
 14614 ;; Auto vars:     Size  Location     Type
 14615 ;;		None
 14616 ;; Return value:  Size  Location     Type
 14617 ;;                  2   21[BANK1 ] int 
 14618 ;; Registers used:
 14619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14620 ;; Tracked objects:
 14621 ;;		On entry : 0/0
 14622 ;;		On exit  : 0/0
 14623 ;;		Unchanged: 0/0
 14624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14625 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14628 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14629 ;;Total ram usage:        2 bytes
 14630 ;; Hardware stack levels used:    1
 14631 ;; Hardware stack levels required when called:    9
 14632 ;; This function calls:
 14633 ;;		_printf
 14634 ;; This function is called by:
 14635 ;;		_execCmd
 14636 ;; This function uses a non-reentrant model
 14637 ;;
 14638                           
 14639                           
 14640                           ;psect for function _setDrvPeak
 14641  2342                     _setDrvPeak:	
 14642                           
 14643                           ;main.c: 395: drv_peak_val = pk;
 14644                           
 14645                           ;incstack = 0
 14646                           ; Regs used in _setDrvPeak: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14647  2342  0021               	movlb	1	; select bank1
 14648  2343  0836               	movf	(setDrvPeak@pk+1)^(0+128),w
 14649  2344  0022               	movlb	2	; select bank2
 14650  2345  00EF               	movwf	(_drv_peak_val+1)^(0+256)
 14651  2346  0021               	movlb	1	; select bank1
 14652  2347  0835               	movf	setDrvPeak@pk^(0+128),w
 14653  2348  0022               	movlb	2	; select bank2
 14654  2349  00EE               	movwf	_drv_peak_val^(0+256)
 14655                           
 14656                           ;main.c: 396: printf("A\n");
 14657  234A  3055               	movlw	low (STR_7| (0+32768))
 14658  234B  0021               	movlb	1	; select bank1
 14659  234C  00A0               	movwf	printf@f^(0+128)
 14660  234D  30AA               	movlw	high (STR_7| (0+32768))
 14661  234E  00A1               	movwf	(printf@f^(0+128)+1)
 14662  234F  318E  26CE         	fcall	_printf
 14663                           
 14664                           ;main.c: 397: return 0;
 14665  2351  0021               	movlb	1	; select bank1
 14666  2352  01B5               	clrf	?_setDrvPeak^(0+128)
 14667  2353  01B6               	clrf	(?_setDrvPeak+1)^(0+128)
 14668  2354  0008               	return
 14669  2355                     __end_of_setDrvPeak:	
 14670                           
 14671                           	psect	text43
 14672  1932                     __ptext43:	
 14673 ;; *************** function _setDrvGain *****************
 14674 ;; Defined at:
 14675 ;;		line 401 in file "main.c"
 14676 ;; Parameters:    Size  Location     Type
 14677 ;;  gain            2   21[BANK1 ] int 
 14678 ;; Auto vars:     Size  Location     Type
 14679 ;;  setGain         2   24[BANK1 ] int 
 14680 ;; Return value:  Size  Location     Type
 14681 ;;                  2   21[BANK1 ] int 
 14682 ;; Registers used:
 14683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14684 ;; Tracked objects:
 14685 ;;		On entry : 0/0
 14686 ;;		On exit  : 0/0
 14687 ;;		Unchanged: 0/0
 14688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14689 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14690 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14691 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14692 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14693 ;;Total ram usage:        5 bytes
 14694 ;; Hardware stack levels used:    1
 14695 ;; Hardware stack levels required when called:   13
 14696 ;; This function calls:
 14697 ;;		_drv_write
 14698 ;;		_printf
 14699 ;; This function is called by:
 14700 ;;		_execCmd
 14701 ;; This function uses a non-reentrant model
 14702 ;;
 14703                           
 14704                           
 14705                           ;psect for function _setDrvGain
 14706  1932                     _setDrvGain:	
 14707                           
 14708                           ;main.c: 402: int setGain = 0;
 14709                           
 14710                           ;incstack = 0
 14711                           ; Regs used in _setDrvGain: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14712  1932  0021               	movlb	1	; select bank1
 14713  1933  01B8               	clrf	setDrvGain@setGain^(0+128)
 14714  1934  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 14715                           
 14716                           ;main.c: 403: switch (gain){
 14717  1935  294E               	goto	l8149
 14718  1936                     l8133:	
 14719                           ;main.c: 404: case 0: setGain = 0x00; break;
 14720                           
 14721  1936  01B8               	clrf	setDrvGain@setGain^(0+128)
 14722  1937  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 14723  1938  2961               	goto	l8151
 14724  1939                     l8135:	
 14725                           ;main.c: 405: case 1: setGain = 0x01; break;
 14726                           
 14727  1939  3001               	movlw	1
 14728  193A  293E               	goto	L28
 14729  193B                     l8137:	
 14730                           ;main.c: 406: case 2: setGain = 0x02; break;
 14731                           
 14732  193B  3002               	movlw	2
 14733  193C  293E               	goto	L28
 14734  193D                     l8139:	
 14735                           ;main.c: 407: case 3: setGain = 0x03; break;
 14736                           
 14737  193D  3003               	movlw	3
 14738  193E                     L28:	
 14739  193E  00B8               	movwf	setDrvGain@setGain^(0+128)
 14740  193F  3000               	movlw	0
 14741  1940  00B9               	movwf	(setDrvGain@setGain^(0+128)+1)
 14742  1941  2961               	goto	l8151
 14743  1942                     l8141:	
 14744                           ;main.c: 408: default: printf("E\n"); return 1;
 14745                           
 14746  1942  3058               	movlw	low (STR_14| (0+32768))
 14747  1943  00A0               	movwf	printf@f^(0+128)
 14748  1944  30AA               	movlw	high (STR_14| (0+32768))
 14749  1945  00A1               	movwf	(printf@f^(0+128)+1)
 14750  1946  318E  26CE         	fcall	_printf
 14751  1948  3001               	movlw	1
 14752  1949  0021               	movlb	1	; select bank1
 14753  194A  00B5               	movwf	?_setDrvGain^(0+128)
 14754  194B  3000               	movlw	0
 14755  194C  00B6               	movwf	(?_setDrvGain^(0+128)+1)
 14756  194D  0008               	return
 14757  194E                     l8149:	
 14758                           ;main.c: 409: }
 14759                           
 14760                           
 14761                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14762                           ; Switch size 1, requested type "space"
 14763                           ; Number of cases is 1, Range of values is 0 to 0
 14764                           ; switch strategies available:
 14765                           ; Name         Instructions Cycles
 14766                           ; simple_byte            4     3 (average)
 14767                           ; direct_byte            8     6 (fixed)
 14768                           ; jumptable            260     6 (fixed)
 14769                           ;	Chosen strategy is simple_byte
 14770  194E  0836               	movf	(setDrvGain@gain+1)^(0+128),w
 14771  194F  3A00               	xorlw	0	; case 0
 14772  1950  1903               	skipnz
 14773  1951  2953               	goto	l8871
 14774  1952  2942               	goto	l8141
 14775  1953                     l8871:	
 14776                           
 14777                           ; Switch size 1, requested type "space"
 14778                           ; Number of cases is 4, Range of values is 0 to 3
 14779                           ; switch strategies available:
 14780                           ; Name         Instructions Cycles
 14781                           ; simple_byte           13     7 (average)
 14782                           ; direct_byte           14     6 (fixed)
 14783                           ; jumptable            260     6 (fixed)
 14784                           ;	Chosen strategy is simple_byte
 14785  1953  0835               	movf	setDrvGain@gain^(0+128),w
 14786  1954  3A00               	xorlw	0	; case 0
 14787  1955  1903               	skipnz
 14788  1956  2936               	goto	l8133
 14789  1957  3A01               	xorlw	1	; case 1
 14790  1958  1903               	skipnz
 14791  1959  2939               	goto	l8135
 14792  195A  3A03               	xorlw	3	; case 2
 14793  195B  1903               	skipnz
 14794  195C  293B               	goto	l8137
 14795  195D  3A01               	xorlw	1	; case 3
 14796  195E  1903               	skipnz
 14797  195F  293D               	goto	l8139
 14798  1960  2942               	goto	l8141
 14799  1961                     l8151:	
 14800                           
 14801                           ;main.c: 410: drv_write(0x01, setGain);
 14802  1961  0838               	movf	setDrvGain@setGain^(0+128),w
 14803  1962  00B7               	movwf	??_setDrvGain^(0+128)
 14804  1963  0837               	movf	??_setDrvGain^(0+128),w
 14805  1964  0020               	movlb	0	; select bank0
 14806  1965  00C9               	movwf	drv_write@data
 14807  1966  3001               	movlw	1
 14808  1967  31A6  2603  3199   	fcall	_drv_write
 14809                           
 14810                           ;main.c: 411: printf("A\n");
 14811  196A  3055               	movlw	low (STR_7| (0+32768))
 14812  196B  0021               	movlb	1	; select bank1
 14813  196C  00A0               	movwf	printf@f^(0+128)
 14814  196D  30AA               	movlw	high (STR_7| (0+32768))
 14815  196E  00A1               	movwf	(printf@f^(0+128)+1)
 14816  196F  318E  26CE         	fcall	_printf
 14817                           
 14818                           ;main.c: 412: return 0;
 14819  1971  0021               	movlb	1	; select bank1
 14820  1972  01B5               	clrf	?_setDrvGain^(0+128)
 14821  1973  01B6               	clrf	(?_setDrvGain+1)^(0+128)
 14822  1974  0008               	return
 14823  1975                     __end_of_setDrvGain:	
 14824                           
 14825                           	psect	text44
 14826  1593                     __ptext44:	
 14827 ;; *************** function _setActive *****************
 14828 ;; Defined at:
 14829 ;;		line 518 in file "main.c"
 14830 ;; Parameters:    Size  Location     Type
 14831 ;;  probeNum        2   21[BANK1 ] int 
 14832 ;;  onOff           2   23[BANK1 ] int 
 14833 ;; Auto vars:     Size  Location     Type
 14834 ;;		None
 14835 ;; Return value:  Size  Location     Type
 14836 ;;                  2   21[BANK1 ] int 
 14837 ;; Registers used:
 14838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14839 ;; Tracked objects:
 14840 ;;		On entry : 0/0
 14841 ;;		On exit  : 0/0
 14842 ;;		Unchanged: 0/0
 14843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14844 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14846 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14847 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14848 ;;Total ram usage:       12 bytes
 14849 ;; Hardware stack levels used:    1
 14850 ;; Hardware stack levels required when called:    9
 14851 ;; This function calls:
 14852 ;;		_printf
 14853 ;; This function is called by:
 14854 ;;		_execCmd
 14855 ;; This function uses a non-reentrant model
 14856 ;;
 14857                           
 14858                           
 14859                           ;psect for function _setActive
 14860  1593                     _setActive:	
 14861                           
 14862                           ;main.c: 521: if(moveMask & 1UL << probeNum){
 14863                           
 14864                           ;incstack = 0
 14865                           ; Regs used in _setActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14866  1593  0021               	movlb	1	; select bank1
 14867  1594  085F               	movf	_moveMask^(0+128),w
 14868  1595  00B9               	movwf	??_setActive^(0+128)
 14869  1596  0860               	movf	(_moveMask+1)^(0+128),w
 14870  1597  00BA               	movwf	(??_setActive^(0+128)+1)
 14871  1598  0861               	movf	(_moveMask+2)^(0+128),w
 14872  1599  00BB               	movwf	(??_setActive^(0+128)+2)
 14873  159A  0862               	movf	(_moveMask+3)^(0+128),w
 14874  159B  00BC               	movwf	(??_setActive^(0+128)+3)
 14875  159C  3001               	movlw	1
 14876  159D  00BD               	movwf	(??_setActive+4)^(0+128)
 14877  159E  3000               	movlw	0
 14878  159F  00BE               	movwf	((??_setActive+4)^(0+128)+1)
 14879  15A0  3000               	movlw	0
 14880  15A1  00BF               	movwf	((??_setActive+4)^(0+128)+2)
 14881  15A2  3000               	movlw	0
 14882  15A3  00C0               	movwf	((??_setActive+4)^(0+128)+3)
 14883  15A4  0A35               	incf	setActive@probeNum^(0+128),w
 14884  15A5  2DAA               	goto	u8170
 14885  15A6                     u8175:	
 14886  15A6  35BD               	lslf	(??_setActive+4)^(0+128),f
 14887  15A7  0DBE               	rlf	((??_setActive+4)^(0+128)+1),f
 14888  15A8  0DBF               	rlf	((??_setActive+4)^(0+128)+2),f
 14889  15A9  0DC0               	rlf	((??_setActive+4)^(0+128)+3),f
 14890  15AA                     u8170:	
 14891  15AA  0B89               	decfsz	9,f
 14892  15AB  2DA6               	goto	u8175
 14893  15AC  083D               	movf	(??_setActive+4)^(0+128),w
 14894  15AD  05B9               	andwf	??_setActive^(0+128),f
 14895  15AE  083E               	movf	(??_setActive+5)^(0+128),w
 14896  15AF  05BA               	andwf	(??_setActive^(0+128)+1),f
 14897  15B0  083F               	movf	(??_setActive+6)^(0+128),w
 14898  15B1  05BB               	andwf	(??_setActive^(0+128)+2),f
 14899  15B2  0840               	movf	(??_setActive+7)^(0+128),w
 14900  15B3  05BC               	andwf	(??_setActive^(0+128)+3),f
 14901  15B4  083C               	movf	(??_setActive+3)^(0+128),w
 14902  15B5  043B               	iorwf	(??_setActive+2)^(0+128),w
 14903  15B6  043A               	iorwf	(??_setActive+1)^(0+128),w
 14904  15B7  0439               	iorwf	??_setActive^(0+128),w
 14905  15B8  1903               	skipnz
 14906  15B9  2DFD               	goto	l8279
 14907                           
 14908                           ;main.c: 522: if (onOff)
 14909  15BA  0837               	movf	setActive@onOff^(0+128),w
 14910  15BB  0438               	iorwf	(setActive@onOff+1)^(0+128),w
 14911  15BC  1903               	btfsc	3,2
 14912  15BD  2DD7               	goto	l8271
 14913                           
 14914                           ;main.c: 523: activeMask |= 1UL << probeNum;
 14915  15BE  3001               	movlw	1
 14916  15BF  00B9               	movwf	??_setActive^(0+128)
 14917  15C0  3000               	movlw	0
 14918  15C1  00BA               	movwf	(??_setActive^(0+128)+1)
 14919  15C2  3000               	movlw	0
 14920  15C3  00BB               	movwf	(??_setActive^(0+128)+2)
 14921  15C4  3000               	movlw	0
 14922  15C5  00BC               	movwf	(??_setActive^(0+128)+3)
 14923  15C6  0A35               	incf	setActive@probeNum^(0+128),w
 14924  15C7  2DCC               	goto	u8200
 14925  15C8                     u8205:	
 14926  15C8  35B9               	lslf	??_setActive^(0+128),f
 14927  15C9  0DBA               	rlf	(??_setActive^(0+128)+1),f
 14928  15CA  0DBB               	rlf	(??_setActive^(0+128)+2),f
 14929  15CB  0DBC               	rlf	(??_setActive^(0+128)+3),f
 14930  15CC                     u8200:	
 14931  15CC  0B89               	decfsz	9,f
 14932  15CD  2DC8               	goto	u8205
 14933  15CE  0839               	movf	??_setActive^(0+128),w
 14934  15CF  04E3               	iorwf	_activeMask^(0+128),f
 14935  15D0  083A               	movf	(??_setActive+1)^(0+128),w
 14936  15D1  04E4               	iorwf	(_activeMask+1)^(0+128),f
 14937  15D2  083B               	movf	(??_setActive+2)^(0+128),w
 14938  15D3  04E5               	iorwf	(_activeMask+2)^(0+128),f
 14939  15D4  083C               	movf	(??_setActive+3)^(0+128),w
 14940  15D5  04E6               	iorwf	(_activeMask+3)^(0+128),f
 14941  15D6  2DF3               	goto	l8273
 14942  15D7                     l8271:	
 14943                           
 14944                           ;main.c: 524: else
 14945                           ;main.c: 525: activeMask &= ~(1UL << probeNum);
 14946  15D7  3001               	movlw	1
 14947  15D8  00B9               	movwf	??_setActive^(0+128)
 14948  15D9  3000               	movlw	0
 14949  15DA  00BA               	movwf	(??_setActive^(0+128)+1)
 14950  15DB  3000               	movlw	0
 14951  15DC  00BB               	movwf	(??_setActive^(0+128)+2)
 14952  15DD  3000               	movlw	0
 14953  15DE  00BC               	movwf	(??_setActive^(0+128)+3)
 14954  15DF  0A35               	incf	setActive@probeNum^(0+128),w
 14955  15E0  2DE5               	goto	u8210
 14956  15E1                     u8215:	
 14957  15E1  35B9               	lslf	??_setActive^(0+128),f
 14958  15E2  0DBA               	rlf	(??_setActive^(0+128)+1),f
 14959  15E3  0DBB               	rlf	(??_setActive^(0+128)+2),f
 14960  15E4  0DBC               	rlf	(??_setActive^(0+128)+3),f
 14961  15E5                     u8210:	
 14962  15E5  0B89               	decfsz	9,f
 14963  15E6  2DE1               	goto	u8215
 14964  15E7  09B9               	comf	??_setActive^(0+128),f
 14965  15E8  09BA               	comf	(??_setActive^(0+128)+1),f
 14966  15E9  09BB               	comf	(??_setActive^(0+128)+2),f
 14967  15EA  09BC               	comf	(??_setActive^(0+128)+3),f
 14968  15EB  0839               	movf	??_setActive^(0+128),w
 14969  15EC  05E3               	andwf	_activeMask^(0+128),f
 14970  15ED  083A               	movf	(??_setActive+1)^(0+128),w
 14971  15EE  05E4               	andwf	(_activeMask+1)^(0+128),f
 14972  15EF  083B               	movf	(??_setActive+2)^(0+128),w
 14973  15F0  05E5               	andwf	(_activeMask+2)^(0+128),f
 14974  15F1  083C               	movf	(??_setActive+3)^(0+128),w
 14975  15F2  05E6               	andwf	(_activeMask+3)^(0+128),f
 14976  15F3                     l8273:	
 14977                           
 14978                           ;main.c: 526: printf("A\n");
 14979  15F3  3055               	movlw	low (STR_7| (0+32768))
 14980  15F4  00A0               	movwf	printf@f^(0+128)
 14981  15F5  30AA               	movlw	high (STR_7| (0+32768))
 14982  15F6  00A1               	movwf	(printf@f^(0+128)+1)
 14983  15F7  318E  26CE         	fcall	_printf
 14984                           
 14985                           ;main.c: 527: return 0;
 14986  15F9  0021               	movlb	1	; select bank1
 14987  15FA  01B5               	clrf	?_setActive^(0+128)
 14988  15FB  01B6               	clrf	(?_setActive+1)^(0+128)
 14989  15FC  0008               	return
 14990  15FD                     l8279:	
 14991                           
 14992                           ;main.c: 528: }
 14993                           ;main.c: 529: printf("E\n");
 14994  15FD  3058               	movlw	low (STR_14| (0+32768))
 14995  15FE  00A0               	movwf	printf@f^(0+128)
 14996  15FF  30AA               	movlw	high (STR_14| (0+32768))
 14997  1600  00A1               	movwf	(printf@f^(0+128)+1)
 14998  1601  318E  26CE         	fcall	_printf
 14999                           
 15000                           ;main.c: 530: return 1;
 15001  1603  3001               	movlw	1
 15002  1604  0021               	movlb	1	; select bank1
 15003  1605  00B5               	movwf	?_setActive^(0+128)
 15004  1606  3000               	movlw	0
 15005  1607  00B6               	movwf	(?_setActive^(0+128)+1)
 15006  1608  0008               	return
 15007  1609                     __end_of_setActive:	
 15008                           
 15009                           	psect	text45
 15010  18B0                     __ptext45:	
 15011 ;; *************** function _getPosition *****************
 15012 ;; Defined at:
 15013 ;;		line 383 in file "main.c"
 15014 ;; Parameters:    Size  Location     Type
 15015 ;;  a               2   21[BANK1 ] int 
 15016 ;; Auto vars:     Size  Location     Type
 15017 ;;		None
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  2   21[BANK1 ] int 
 15020 ;; Registers used:
 15021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15022 ;; Tracked objects:
 15023 ;;		On entry : 0/0
 15024 ;;		On exit  : 0/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15027 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15029 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15030 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15031 ;;Total ram usage:        6 bytes
 15032 ;; Hardware stack levels used:    1
 15033 ;; Hardware stack levels required when called:    9
 15034 ;; This function calls:
 15035 ;;		_printf
 15036 ;; This function is called by:
 15037 ;;		_execCmd
 15038 ;; This function uses a non-reentrant model
 15039 ;;
 15040                           
 15041                           
 15042                           ;psect for function _getPosition
 15043  18B0                     _getPosition:	
 15044                           
 15045                           ;main.c: 385: if (a>=0 && a < 24){
 15046                           
 15047                           ;incstack = 0
 15048                           ; Regs used in _getPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15049  18B0  0021               	movlb	1	; select bank1
 15050  18B1  1BB6               	btfsc	(getPosition@a+1)^(0+128),7
 15051  18B2  28E9               	goto	l8119
 15052  18B3  0836               	movf	(getPosition@a+1)^(0+128),w
 15053  18B4  3A80               	xorlw	128
 15054  18B5  0020               	movlb	0	; select bank0
 15055  18B6  00C9               	movwf	??_getPosition
 15056  18B7  3080               	movlw	128
 15057  18B8  0249               	subwf	??_getPosition,w
 15058  18B9  1D03               	skipz
 15059  18BA  28BE               	goto	u8085
 15060  18BB  3018               	movlw	24
 15061  18BC  0021               	movlb	1	; select bank1
 15062  18BD  0235               	subwf	getPosition@a^(0+128),w
 15063  18BE                     u8085:	
 15064  18BE  1803               	skipnc
 15065  18BF  28E9               	goto	l8119
 15066                           
 15067                           ;main.c: 386: printf("%d\n", currentPositions_steps[a]);
 15068  18C0  3047               	movlw	low (STR_12| (0+32768))
 15069  18C1  0021               	movlb	1	; select bank1
 15070  18C2  00A0               	movwf	printf@f^(0+128)
 15071  18C3  30AA               	movlw	high (STR_12| (0+32768))
 15072  18C4  00A1               	movwf	(printf@f^(0+128)+1)
 15073  18C5  0836               	movf	(getPosition@a+1)^(0+128),w
 15074  18C6  0020               	movlb	0	; select bank0
 15075  18C7  00CA               	movwf	??_getPosition+1
 15076  18C8  0021               	movlb	1	; select bank1
 15077  18C9  0835               	movf	getPosition@a^(0+128),w
 15078  18CA  0020               	movlb	0	; select bank0
 15079  18CB  00C9               	movwf	??_getPosition
 15080  18CC  35C9               	lslf	??_getPosition,f
 15081  18CD  0DCA               	rlf	??_getPosition+1,f
 15082  18CE  35C9               	lslf	??_getPosition,f
 15083  18CF  0DCA               	rlf	??_getPosition+1,f
 15084  18D0  3090               	movlw	144
 15085  18D1  00CB               	movwf	??_getPosition+2
 15086  18D2  3027               	movlw	39
 15087  18D3  00CC               	movwf	??_getPosition+3
 15088  18D4  0849               	movf	??_getPosition,w
 15089  18D5  074B               	addwf	??_getPosition+2,w
 15090  18D6  0086               	movwf	6
 15091  18D7  084A               	movf	??_getPosition+1,w
 15092  18D8  3D4C               	addwfc	??_getPosition+3,w
 15093  18D9  0087               	movwf	7
 15094  18DA  3F40               	moviw [0]fsr1
 15095  18DB  0021               	movlb	1	; select bank1
 15096  18DC  00A2               	movwf	(?_printf^(0+128)+2)
 15097  18DD  3F41               	moviw [1]fsr1
 15098  18DE  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15099  18DF  3F42               	moviw [2]fsr1
 15100  18E0  00A4               	movwf	((?_printf+2)^(0+128)+2)
 15101  18E1  3F43               	moviw [3]fsr1
 15102  18E2  00A5               	movwf	((?_printf+3)^(0+128)+2)
 15103  18E3  318E  26CE         	fcall	_printf
 15104                           
 15105                           ;main.c: 387: return 0;
 15106  18E5  0021               	movlb	1	; select bank1
 15107  18E6  01B5               	clrf	?_getPosition^(0+128)
 15108  18E7  01B6               	clrf	(?_getPosition+1)^(0+128)
 15109  18E8  0008               	return
 15110  18E9                     l8119:	
 15111                           
 15112                           ;main.c: 388: }
 15113                           ;main.c: 390: return 1;
 15114  18E9  3001               	movlw	1
 15115  18EA  0021               	movlb	1	; select bank1
 15116  18EB  00B5               	movwf	?_getPosition^(0+128)
 15117  18EC  3000               	movlw	0
 15118  18ED  00B6               	movwf	(?_getPosition^(0+128)+1)
 15119  18EE  0008               	return
 15120  18EF                     __end_of_getPosition:	
 15121                           
 15122                           	psect	text46
 15123  1B71                     __ptext46:	
 15124 ;; *************** function _getMoveMask *****************
 15125 ;; Defined at:
 15126 ;;		line 558 in file "main.c"
 15127 ;; Parameters:    Size  Location     Type
 15128 ;;		None
 15129 ;; Auto vars:     Size  Location     Type
 15130 ;;  i               2   23[BANK1 ] int 
 15131 ;; Return value:  Size  Location     Type
 15132 ;;                  2   21[BANK1 ] int 
 15133 ;; Registers used:
 15134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15135 ;; Tracked objects:
 15136 ;;		On entry : 0/0
 15137 ;;		On exit  : 0/0
 15138 ;;		Unchanged: 0/0
 15139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15140 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15141 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15142 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15143 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15144 ;;Total ram usage:        8 bytes
 15145 ;; Hardware stack levels used:    1
 15146 ;; Hardware stack levels required when called:    9
 15147 ;; This function calls:
 15148 ;;		_printf
 15149 ;; This function is called by:
 15150 ;;		_execCmd
 15151 ;; This function uses a non-reentrant model
 15152 ;;
 15153                           
 15154                           
 15155                           ;psect for function _getMoveMask
 15156  1B71                     _getMoveMask:	
 15157                           
 15158                           ;main.c: 559: for(int i=24-1; i>=0; i--){
 15159                           
 15160                           ;incstack = 0
 15161                           ; Regs used in _getMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15162  1B71  3017               	movlw	23
 15163  1B72  0021               	movlb	1	; select bank1
 15164  1B73  00B7               	movwf	getMoveMask@i^(0+128)
 15165  1B74  3000               	movlw	0
 15166  1B75  00B8               	movwf	(getMoveMask@i^(0+128)+1)
 15167  1B76  1BB8               	btfsc	(getMoveMask@i+1)^(0+128),7
 15168  1B77  2BB4               	goto	l8335
 15169  1B78                     l8329:	
 15170                           
 15171                           ;main.c: 560: printf("%d ", (moveMask >> i) & 1 );
 15172  1B78  304B               	movlw	low (STR_1| (0+32768))
 15173  1B79  00A0               	movwf	printf@f^(0+128)
 15174  1B7A  30AA               	movlw	high (STR_1| (0+32768))
 15175  1B7B  00A1               	movwf	(printf@f^(0+128)+1)
 15176  1B7C  085F               	movf	_moveMask^(0+128),w
 15177  1B7D  0020               	movlb	0	; select bank0
 15178  1B7E  00C9               	movwf	??_getMoveMask
 15179  1B7F  0021               	movlb	1	; select bank1
 15180  1B80  0860               	movf	(_moveMask+1)^(0+128),w
 15181  1B81  0020               	movlb	0	; select bank0
 15182  1B82  00CA               	movwf	??_getMoveMask+1
 15183  1B83  0021               	movlb	1	; select bank1
 15184  1B84  0861               	movf	(_moveMask+2)^(0+128),w
 15185  1B85  0020               	movlb	0	; select bank0
 15186  1B86  00CB               	movwf	??_getMoveMask+2
 15187  1B87  0021               	movlb	1	; select bank1
 15188  1B88  0862               	movf	(_moveMask+3)^(0+128),w
 15189  1B89  0020               	movlb	0	; select bank0
 15190  1B8A  00CC               	movwf	??_getMoveMask+3
 15191  1B8B  0021               	movlb	1	; select bank1
 15192  1B8C  0A37               	incf	getMoveMask@i^(0+128),w
 15193  1B8D  0020               	movlb	0	; select bank0
 15194  1B8E  2B94               	goto	u8300
 15195  1B8F                     u8305:	
 15196  1B8F  1003               	clrc
 15197  1B90  0CCC               	rrf	??_getMoveMask+3,f
 15198  1B91  0CCB               	rrf	??_getMoveMask+2,f
 15199  1B92  0CCA               	rrf	??_getMoveMask+1,f
 15200  1B93  0CC9               	rrf	??_getMoveMask,f
 15201  1B94                     u8300:	
 15202  1B94  3EFF               	addlw	-1
 15203  1B95  1D03               	skipz
 15204  1B96  2B8F               	goto	u8305
 15205  1B97  3001               	movlw	1
 15206  1B98  0549               	andwf	??_getMoveMask,w
 15207  1B99  0021               	movlb	1	; select bank1
 15208  1B9A  00A2               	movwf	(?_printf^(0+128)+2)
 15209  1B9B  3000               	movlw	0
 15210  1B9C  0020               	movlb	0	; select bank0
 15211  1B9D  054A               	andwf	??_getMoveMask+1,w
 15212  1B9E  0021               	movlb	1	; select bank1
 15213  1B9F  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15214  1BA0  3000               	movlw	0
 15215  1BA1  0020               	movlb	0	; select bank0
 15216  1BA2  054B               	andwf	??_getMoveMask+2,w
 15217  1BA3  0021               	movlb	1	; select bank1
 15218  1BA4  00A4               	movwf	((?_printf+2)^(0+128)+2)
 15219  1BA5  3000               	movlw	0
 15220  1BA6  0020               	movlb	0	; select bank0
 15221  1BA7  054C               	andwf	??_getMoveMask+3,w
 15222  1BA8  0021               	movlb	1	; select bank1
 15223  1BA9  00A5               	movwf	((?_printf+3)^(0+128)+2)
 15224  1BAA  318E  26CE  319B   	fcall	_printf
 15225  1BAD  30FF               	movlw	255
 15226  1BAE  0021               	movlb	1	; select bank1
 15227  1BAF  07B7               	addwf	getMoveMask@i^(0+128),f
 15228  1BB0  30FF               	movlw	255
 15229  1BB1  3DB8               	addwfc	(getMoveMask@i+1)^(0+128),f
 15230  1BB2  1FB8               	btfss	(getMoveMask@i+1)^(0+128),7
 15231  1BB3  2B78               	goto	l8329
 15232  1BB4                     l8335:	
 15233                           
 15234                           ;main.c: 561: }
 15235                           ;main.c: 562: printf("\n");
 15236  1BB4  3063               	movlw	low ((STR_36+28)| (0+32768))
 15237  1BB5  00A0               	movwf	printf@f^(0+128)
 15238  1BB6  30A8               	movlw	high ((STR_36+28)| (0+32768))
 15239  1BB7  00A1               	movwf	(printf@f^(0+128)+1)
 15240  1BB8  318E  26CE         	fcall	_printf
 15241                           
 15242                           ;main.c: 563: return 0;
 15243  1BBA  0021               	movlb	1	; select bank1
 15244  1BBB  01B5               	clrf	?_getMoveMask^(0+128)
 15245  1BBC  01B6               	clrf	(?_getMoveMask+1)^(0+128)
 15246  1BBD  0008               	return
 15247  1BBE                     __end_of_getMoveMask:	
 15248                           
 15249                           	psect	text47
 15250  2598                     __ptext47:	
 15251 ;; *************** function _getMotionStatus *****************
 15252 ;; Defined at:
 15253 ;;		line 565 in file "main.c"
 15254 ;; Parameters:    Size  Location     Type
 15255 ;;		None
 15256 ;; Auto vars:     Size  Location     Type
 15257 ;;		None
 15258 ;; Return value:  Size  Location     Type
 15259 ;;                  2   21[BANK1 ] int 
 15260 ;; Registers used:
 15261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15262 ;; Tracked objects:
 15263 ;;		On entry : 0/0
 15264 ;;		On exit  : 0/0
 15265 ;;		Unchanged: 0/0
 15266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15267 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15270 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15271 ;;Total ram usage:        2 bytes
 15272 ;; Hardware stack levels used:    1
 15273 ;; Hardware stack levels required when called:    9
 15274 ;; This function calls:
 15275 ;;		_printf
 15276 ;; This function is called by:
 15277 ;;		_execCmd
 15278 ;; This function uses a non-reentrant model
 15279 ;;
 15280                           
 15281                           
 15282                           ;psect for function _getMotionStatus
 15283  2598                     _getMotionStatus:	
 15284                           
 15285                           ;main.c: 566: switch(motionType){
 15286                           
 15287                           ;incstack = 0
 15288                           ; Regs used in _getMotionStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15289  2598  2DB1               	goto	l8351
 15290  2599                     l8343:	
 15291                           ;main.c: 567: case REL_MOVE: printf("R\n"); break;
 15292                           
 15293  2599  305E               	movlw	low (STR_33| (0+32768))
 15294  259A  0021               	movlb	1	; select bank1
 15295  259B  00A0               	movwf	printf@f^(0+128)
 15296  259C  30AA               	movlw	high (STR_33| (0+32768))
 15297  259D  00A1               	movwf	(printf@f^(0+128)+1)
 15298  259E  318E  26CE         	fcall	_printf
 15299  25A0  0008               	return
 15300  25A1                     l8345:	
 15301                           ;main.c: 568: case ABS_MOVE: printf("A\n"); break;
 15302                           
 15303  25A1  3055               	movlw	low (STR_7| (0+32768))
 15304  25A2  0021               	movlb	1	; select bank1
 15305  25A3  00A0               	movwf	printf@f^(0+128)
 15306  25A4  30AA               	movlw	high (STR_7| (0+32768))
 15307  25A5  00A1               	movwf	(printf@f^(0+128)+1)
 15308  25A6  318E  26CE         	fcall	_printf
 15309  25A8  0008               	return
 15310  25A9                     l8347:	
 15311                           ;main.c: 569: default: printf("N\n"); break;
 15312                           
 15313  25A9  305B               	movlw	low (STR_35| (0+32768))
 15314  25AA  0021               	movlb	1	; select bank1
 15315  25AB  00A0               	movwf	printf@f^(0+128)
 15316  25AC  30AA               	movlw	high (STR_35| (0+32768))
 15317  25AD  00A1               	movwf	(printf@f^(0+128)+1)
 15318  25AE  318E  26CE         	fcall	_printf
 15319                           
 15320                           ;main.c: 570: }
 15321  25B0  0008               	return
 15322  25B1                     l8351:	
 15323  25B1  0020               	movlb	0	; select bank0
 15324  25B2  0855               	movf	_motionType,w
 15325                           
 15326                           ; Switch size 1, requested type "space"
 15327                           ; Number of cases is 2, Range of values is 1 to 2
 15328                           ; switch strategies available:
 15329                           ; Name         Instructions Cycles
 15330                           ; simple_byte            7     4 (average)
 15331                           ; direct_byte           13     9 (fixed)
 15332                           ; jumptable            263     9 (fixed)
 15333                           ;	Chosen strategy is simple_byte
 15334  25B3  3A01               	xorlw	1	; case 1
 15335  25B4  1903               	skipnz
 15336  25B5  2D99               	goto	l8343
 15337  25B6  3A03               	xorlw	3	; case 2
 15338  25B7  1903               	skipnz
 15339  25B8  2DA1               	goto	l8345
 15340  25B9  2DA9               	goto	l8347
 15341  25BA  0008               	return
 15342  25BB                     __end_of_getMotionStatus:	
 15343                           
 15344                           	psect	text48
 15345  1B24                     __ptext48:	
 15346 ;; *************** function _getActive *****************
 15347 ;; Defined at:
 15348 ;;		line 550 in file "main.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;		None
 15351 ;; Auto vars:     Size  Location     Type
 15352 ;;  i               2   23[BANK1 ] int 
 15353 ;; Return value:  Size  Location     Type
 15354 ;;                  2   21[BANK1 ] int 
 15355 ;; Registers used:
 15356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15357 ;; Tracked objects:
 15358 ;;		On entry : 0/0
 15359 ;;		On exit  : 0/0
 15360 ;;		Unchanged: 0/0
 15361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15362 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15363 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15364 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15365 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15366 ;;Total ram usage:        8 bytes
 15367 ;; Hardware stack levels used:    1
 15368 ;; Hardware stack levels required when called:    9
 15369 ;; This function calls:
 15370 ;;		_printf
 15371 ;; This function is called by:
 15372 ;;		_execCmd
 15373 ;; This function uses a non-reentrant model
 15374 ;;
 15375                           
 15376                           
 15377                           ;psect for function _getActive
 15378  1B24                     _getActive:	
 15379                           
 15380                           ;main.c: 551: for(int i=24-1; i>=0; i--){
 15381                           
 15382                           ;incstack = 0
 15383                           ; Regs used in _getActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15384  1B24  3017               	movlw	23
 15385  1B25  0021               	movlb	1	; select bank1
 15386  1B26  00B7               	movwf	getActive@i^(0+128)
 15387  1B27  3000               	movlw	0
 15388  1B28  00B8               	movwf	(getActive@i^(0+128)+1)
 15389  1B29  1BB8               	btfsc	(getActive@i+1)^(0+128),7
 15390  1B2A  2B67               	goto	l8317
 15391  1B2B                     l8311:	
 15392                           
 15393                           ;main.c: 552: printf("%d ", (activeMask >> i) & 1 );
 15394  1B2B  304B               	movlw	low (STR_1| (0+32768))
 15395  1B2C  00A0               	movwf	printf@f^(0+128)
 15396  1B2D  30AA               	movlw	high (STR_1| (0+32768))
 15397  1B2E  00A1               	movwf	(printf@f^(0+128)+1)
 15398  1B2F  0863               	movf	_activeMask^(0+128),w
 15399  1B30  0020               	movlb	0	; select bank0
 15400  1B31  00C9               	movwf	??_getActive
 15401  1B32  0021               	movlb	1	; select bank1
 15402  1B33  0864               	movf	(_activeMask+1)^(0+128),w
 15403  1B34  0020               	movlb	0	; select bank0
 15404  1B35  00CA               	movwf	??_getActive+1
 15405  1B36  0021               	movlb	1	; select bank1
 15406  1B37  0865               	movf	(_activeMask+2)^(0+128),w
 15407  1B38  0020               	movlb	0	; select bank0
 15408  1B39  00CB               	movwf	??_getActive+2
 15409  1B3A  0021               	movlb	1	; select bank1
 15410  1B3B  0866               	movf	(_activeMask+3)^(0+128),w
 15411  1B3C  0020               	movlb	0	; select bank0
 15412  1B3D  00CC               	movwf	??_getActive+3
 15413  1B3E  0021               	movlb	1	; select bank1
 15414  1B3F  0A37               	incf	getActive@i^(0+128),w
 15415  1B40  0020               	movlb	0	; select bank0
 15416  1B41  2B47               	goto	u8270
 15417  1B42                     u8275:	
 15418  1B42  1003               	clrc
 15419  1B43  0CCC               	rrf	??_getActive+3,f
 15420  1B44  0CCB               	rrf	??_getActive+2,f
 15421  1B45  0CCA               	rrf	??_getActive+1,f
 15422  1B46  0CC9               	rrf	??_getActive,f
 15423  1B47                     u8270:	
 15424  1B47  3EFF               	addlw	-1
 15425  1B48  1D03               	skipz
 15426  1B49  2B42               	goto	u8275
 15427  1B4A  3001               	movlw	1
 15428  1B4B  0549               	andwf	??_getActive,w
 15429  1B4C  0021               	movlb	1	; select bank1
 15430  1B4D  00A2               	movwf	(?_printf^(0+128)+2)
 15431  1B4E  3000               	movlw	0
 15432  1B4F  0020               	movlb	0	; select bank0
 15433  1B50  054A               	andwf	??_getActive+1,w
 15434  1B51  0021               	movlb	1	; select bank1
 15435  1B52  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15436  1B53  3000               	movlw	0
 15437  1B54  0020               	movlb	0	; select bank0
 15438  1B55  054B               	andwf	??_getActive+2,w
 15439  1B56  0021               	movlb	1	; select bank1
 15440  1B57  00A4               	movwf	((?_printf+2)^(0+128)+2)
 15441  1B58  3000               	movlw	0
 15442  1B59  0020               	movlb	0	; select bank0
 15443  1B5A  054C               	andwf	??_getActive+3,w
 15444  1B5B  0021               	movlb	1	; select bank1
 15445  1B5C  00A5               	movwf	((?_printf+3)^(0+128)+2)
 15446  1B5D  318E  26CE  319B   	fcall	_printf
 15447  1B60  30FF               	movlw	255
 15448  1B61  0021               	movlb	1	; select bank1
 15449  1B62  07B7               	addwf	getActive@i^(0+128),f
 15450  1B63  30FF               	movlw	255
 15451  1B64  3DB8               	addwfc	(getActive@i+1)^(0+128),f
 15452  1B65  1FB8               	btfss	(getActive@i+1)^(0+128),7
 15453  1B66  2B2B               	goto	l8311
 15454  1B67                     l8317:	
 15455                           
 15456                           ;main.c: 553: }
 15457                           ;main.c: 554: printf("\n");
 15458  1B67  3063               	movlw	low ((STR_36+28)| (0+32768))
 15459  1B68  00A0               	movwf	printf@f^(0+128)
 15460  1B69  30A8               	movlw	high ((STR_36+28)| (0+32768))
 15461  1B6A  00A1               	movwf	(printf@f^(0+128)+1)
 15462  1B6B  318E  26CE         	fcall	_printf
 15463                           
 15464                           ;main.c: 555: return 0;
 15465  1B6D  0021               	movlb	1	; select bank1
 15466  1B6E  01B5               	clrf	?_getActive^(0+128)
 15467  1B6F  01B6               	clrf	(?_getActive+1)^(0+128)
 15468  1B70  0008               	return
 15469  1B71                     __end_of_getActive:	
 15470                           
 15471                           	psect	text49
 15472  0A0D                     __ptext49:	
 15473 ;; *************** function _commCheck *****************
 15474 ;; Defined at:
 15475 ;;		line 573 in file "main.c"
 15476 ;; Parameters:    Size  Location     Type
 15477 ;;		None
 15478 ;; Auto vars:     Size  Location     Type
 15479 ;;		None
 15480 ;; Return value:  Size  Location     Type
 15481 ;;                  2   52[BANK1 ] int 
 15482 ;; Registers used:
 15483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15484 ;; Tracked objects:
 15485 ;;		On entry : 0/0
 15486 ;;		On exit  : 0/0
 15487 ;;		Unchanged: 0/0
 15488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15489 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15491 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15492 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15493 ;;Total ram usage:        3 bytes
 15494 ;; Hardware stack levels used:    1
 15495 ;; Hardware stack levels required when called:   13
 15496 ;; This function calls:
 15497 ;;		_LED_testComm
 15498 ;;		_LED_test_openshort
 15499 ;;		_drv_read
 15500 ;;		_printf
 15501 ;; This function is called by:
 15502 ;;		_execCmd
 15503 ;; This function uses a non-reentrant model
 15504 ;;
 15505                           
 15506                           
 15507                           ;psect for function _commCheck
 15508  0A0D                     _commCheck:	
 15509                           
 15510                           ;main.c: 574: printf("\n----starting comm test----\n\n");
 15511                           
 15512                           ;incstack = 0
 15513                           ; Regs used in _commCheck: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15514  0A0D  3047               	movlw	low (STR_36| (0+32768))
 15515  0A0E  0021               	movlb	1	; select bank1
 15516  0A0F  00A0               	movwf	printf@f^(0+128)
 15517  0A10  30A8               	movlw	high (STR_36| (0+32768))
 15518  0A11  00A1               	movwf	(printf@f^(0+128)+1)
 15519  0A12  318E  26CE  318A   	fcall	_printf
 15520                           
 15521                           ;main.c: 577: printf("testing top LED driver...");
 15522  0A15  3081               	movlw	low (STR_37| (0+32768))
 15523  0A16  0021               	movlb	1	; select bank1
 15524  0A17  00A0               	movwf	printf@f^(0+128)
 15525  0A18  30A8               	movlw	high (STR_37| (0+32768))
 15526  0A19  00A1               	movwf	(printf@f^(0+128)+1)
 15527  0A1A  318E  26CE  318A   	fcall	_printf
 15528                           
 15529                           ;main.c: 578: if (!LED_testComm(1))
 15530  0A1D  3001               	movlw	1
 15531  0A1E  0021               	movlb	1	; select bank1
 15532  0A1F  00CA               	movwf	LED_testComm@topOrBottom^(0+128)
 15533  0A20  3000               	movlw	0
 15534  0A21  00CB               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 15535  0A22  3196  2609  318A   	fcall	_LED_testComm
 15536  0A25  0021               	movlb	1	; select bank1
 15537  0A26  084A               	movf	?_LED_testComm^(0+128),w
 15538  0A27  044B               	iorwf	(?_LED_testComm+1)^(0+128),w
 15539  0A28  1D03               	btfss	3,2
 15540  0A29  2A2E               	goto	l8357
 15541                           
 15542                           ;main.c: 579: printf("passed\n");
 15543  0A2A  30FF               	movlw	low (STR_38| (0+32768))
 15544  0A2B  00A0               	movwf	printf@f^(0+128)
 15545  0A2C  30A9               	movlw	high (STR_38| (0+32768))
 15546  0A2D  2A32               	goto	L29
 15547  0A2E                     l8357:	
 15548                           
 15549                           ;main.c: 580: else
 15550                           ;main.c: 581: printf("FAILED\n");
 15551  0A2E  30F7               	movlw	low (STR_39| (0+32768))
 15552  0A2F  0021               	movlb	1	; select bank1
 15553  0A30  00A0               	movwf	printf@f^(0+128)
 15554  0A31  30A9               	movlw	high (STR_39| (0+32768))
 15555  0A32                     L29:	
 15556  0A32  00A1               	movwf	(printf@f^(0+128)+1)
 15557  0A33  318E  26CE  318A   	fcall	_printf
 15558                           
 15559                           ;main.c: 583: printf("opens: ");
 15560  0A36  3007               	movlw	low (STR_40| (0+32768))
 15561  0A37  0021               	movlb	1	; select bank1
 15562  0A38  00A0               	movwf	printf@f^(0+128)
 15563  0A39  30AA               	movlw	high (STR_40| (0+32768))
 15564  0A3A  00A1               	movwf	(printf@f^(0+128)+1)
 15565  0A3B  318E  26CE  318A   	fcall	_printf
 15566                           
 15567                           ;main.c: 584: LED_test_openshort(10, 1);
 15568  0A3E  300A               	movlw	10
 15569  0A3F  0021               	movlb	1	; select bank1
 15570  0A40  00B5               	movwf	LED_test_openshort@type^(0+128)
 15571  0A41  3000               	movlw	0
 15572  0A42  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15573  0A43  3001               	movlw	1
 15574  0A44  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15575  0A45  3000               	movlw	0
 15576  0A46  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15577  0A47  3196  2680  318A   	fcall	_LED_test_openshort
 15578                           
 15579                           ;main.c: 585: printf("\n\nshorts: ");
 15580  0A4A  30A6               	movlw	low (STR_41| (0+32768))
 15581  0A4B  0021               	movlb	1	; select bank1
 15582  0A4C  00A0               	movwf	printf@f^(0+128)
 15583  0A4D  30A9               	movlw	high (STR_41| (0+32768))
 15584  0A4E  00A1               	movwf	(printf@f^(0+128)+1)
 15585  0A4F  318E  26CE  318A   	fcall	_printf
 15586                           
 15587                           ;main.c: 586: LED_test_openshort(11, 1);
 15588  0A52  300B               	movlw	11
 15589  0A53  0021               	movlb	1	; select bank1
 15590  0A54  00B5               	movwf	LED_test_openshort@type^(0+128)
 15591  0A55  3000               	movlw	0
 15592  0A56  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15593  0A57  3001               	movlw	1
 15594  0A58  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15595  0A59  3000               	movlw	0
 15596  0A5A  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15597  0A5B  3196  2680  318A   	fcall	_LED_test_openshort
 15598                           
 15599                           ;main.c: 589: printf("\ntesting bottom LED driver...\n");
 15600  0A5E  3028               	movlw	low (STR_42| (0+32768))
 15601  0A5F  0021               	movlb	1	; select bank1
 15602  0A60  00A0               	movwf	printf@f^(0+128)
 15603  0A61  30A8               	movlw	high (STR_42| (0+32768))
 15604  0A62  00A1               	movwf	(printf@f^(0+128)+1)
 15605  0A63  318E  26CE  318A   	fcall	_printf
 15606                           
 15607                           ;main.c: 590: if (!LED_testComm(2))
 15608  0A66  3002               	movlw	2
 15609  0A67  0021               	movlb	1	; select bank1
 15610  0A68  00CA               	movwf	LED_testComm@topOrBottom^(0+128)
 15611  0A69  3000               	movlw	0
 15612  0A6A  00CB               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 15613  0A6B  3196  2609  318A   	fcall	_LED_testComm
 15614  0A6E  0021               	movlb	1	; select bank1
 15615  0A6F  084A               	movf	?_LED_testComm^(0+128),w
 15616  0A70  044B               	iorwf	(?_LED_testComm+1)^(0+128),w
 15617  0A71  1D03               	btfss	3,2
 15618  0A72  2A77               	goto	l8361
 15619                           
 15620                           ;main.c: 591: printf("passed\n");
 15621  0A73  30FF               	movlw	low (STR_38| (0+32768))
 15622  0A74  00A0               	movwf	printf@f^(0+128)
 15623  0A75  30A9               	movlw	high (STR_38| (0+32768))
 15624  0A76  2A7B               	goto	L30
 15625  0A77                     l8361:	
 15626                           
 15627                           ;main.c: 592: else
 15628                           ;main.c: 593: printf("FAILED\n");
 15629  0A77  30F7               	movlw	low (STR_39| (0+32768))
 15630  0A78  0021               	movlb	1	; select bank1
 15631  0A79  00A0               	movwf	printf@f^(0+128)
 15632  0A7A  30A9               	movlw	high (STR_39| (0+32768))
 15633  0A7B                     L30:	
 15634  0A7B  00A1               	movwf	(printf@f^(0+128)+1)
 15635  0A7C  318E  26CE  318A   	fcall	_printf
 15636                           
 15637                           ;main.c: 595: printf("opens: ");
 15638  0A7F  3007               	movlw	low (STR_40| (0+32768))
 15639  0A80  0021               	movlb	1	; select bank1
 15640  0A81  00A0               	movwf	printf@f^(0+128)
 15641  0A82  30AA               	movlw	high (STR_40| (0+32768))
 15642  0A83  00A1               	movwf	(printf@f^(0+128)+1)
 15643  0A84  318E  26CE  318A   	fcall	_printf
 15644                           
 15645                           ;main.c: 596: LED_test_openshort(10, 2);
 15646  0A87  300A               	movlw	10
 15647  0A88  0021               	movlb	1	; select bank1
 15648  0A89  00B5               	movwf	LED_test_openshort@type^(0+128)
 15649  0A8A  3000               	movlw	0
 15650  0A8B  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15651  0A8C  3002               	movlw	2
 15652  0A8D  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15653  0A8E  3000               	movlw	0
 15654  0A8F  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15655  0A90  3196  2680  318A   	fcall	_LED_test_openshort
 15656                           
 15657                           ;main.c: 597: printf("\n\nshorts: ");
 15658  0A93  30A6               	movlw	low (STR_41| (0+32768))
 15659  0A94  0021               	movlb	1	; select bank1
 15660  0A95  00A0               	movwf	printf@f^(0+128)
 15661  0A96  30A9               	movlw	high (STR_41| (0+32768))
 15662  0A97  00A1               	movwf	(printf@f^(0+128)+1)
 15663  0A98  318E  26CE  318A   	fcall	_printf
 15664                           
 15665                           ;main.c: 598: LED_test_openshort(11, 2);
 15666  0A9B  300B               	movlw	11
 15667  0A9C  0021               	movlb	1	; select bank1
 15668  0A9D  00B5               	movwf	LED_test_openshort@type^(0+128)
 15669  0A9E  3000               	movlw	0
 15670  0A9F  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15671  0AA0  3002               	movlw	2
 15672  0AA1  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15673  0AA2  3000               	movlw	0
 15674  0AA3  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15675  0AA4  3196  2680  318A   	fcall	_LED_test_openshort
 15676                           
 15677                           ;main.c: 600: printf("\ntesting piezo driver...");
 15678  0AA7  309B               	movlw	low (STR_47| (0+32768))
 15679  0AA8  0021               	movlb	1	; select bank1
 15680  0AA9  00A0               	movwf	printf@f^(0+128)
 15681  0AAA  30A8               	movlw	high (STR_47| (0+32768))
 15682  0AAB  00A1               	movwf	(printf@f^(0+128)+1)
 15683  0AAC  318E  26CE  318A   	fcall	_printf
 15684                           
 15685                           ;main.c: 601: if(drv_read(0x01) > 0)
 15686  0AAF  3001               	movlw	1
 15687  0AB0  3199  21FD  318A   	fcall	_drv_read
 15688  0AB3  0021               	movlb	1	; select bank1
 15689  0AB4  0836               	movf	(?_drv_read+1)^(0+128),w
 15690  0AB5  3A80               	xorlw	128
 15691  0AB6  00D6               	movwf	??_commCheck^(0+128)
 15692  0AB7  3080               	movlw	128
 15693  0AB8  0256               	subwf	??_commCheck^(0+128),w
 15694  0AB9  1D03               	skipz
 15695  0ABA  2ABD               	goto	u8345
 15696  0ABB  3001               	movlw	1
 15697  0ABC  0235               	subwf	?_drv_read^(0+128),w
 15698  0ABD                     u8345:	
 15699  0ABD  1C03               	skipc
 15700  0ABE  2AC4               	goto	l8365
 15701                           
 15702                           ;main.c: 602: printf("passed\n\n");
 15703  0ABF  30CE               	movlw	low (STR_48| (0+32768))
 15704  0AC0  0021               	movlb	1	; select bank1
 15705  0AC1  00A0               	movwf	printf@f^(0+128)
 15706  0AC2  30A9               	movlw	high (STR_48| (0+32768))
 15707  0AC3  2AC8               	goto	L31
 15708  0AC4                     l8365:	
 15709                           
 15710                           ;main.c: 603: else
 15711                           ;main.c: 604: printf("FAILED\n\n");
 15712  0AC4  30C5               	movlw	low (STR_49| (0+32768))
 15713  0AC5  0021               	movlb	1	; select bank1
 15714  0AC6  00A0               	movwf	printf@f^(0+128)
 15715  0AC7  30A9               	movlw	high (STR_49| (0+32768))
 15716  0AC8                     L31:	
 15717  0AC8  00A1               	movwf	(printf@f^(0+128)+1)
 15718  0AC9  318E  26CE  318A   	fcall	_printf
 15719                           
 15720                           ;main.c: 605: printf("----finished comm test----\n");
 15721  0ACC  3065               	movlw	low (STR_50| (0+32768))
 15722  0ACD  0021               	movlb	1	; select bank1
 15723  0ACE  00A0               	movwf	printf@f^(0+128)
 15724  0ACF  30A8               	movlw	high (STR_50| (0+32768))
 15725  0AD0  00A1               	movwf	(printf@f^(0+128)+1)
 15726  0AD1  318E  26CE         	fcall	_printf
 15727  0AD3  0008               	return
 15728  0AD4                     __end_of_commCheck:	
 15729                           
 15730                           	psect	text50
 15731  1680                     __ptext50:	
 15732 ;; *************** function _LED_test_openshort *****************
 15733 ;; Defined at:
 15734 ;;		line 99 in file "LEDcomm.c"
 15735 ;; Parameters:    Size  Location     Type
 15736 ;;  type            2   21[BANK1 ] int 
 15737 ;;  topOrBottom     2   23[BANK1 ] int 
 15738 ;; Auto vars:     Size  Location     Type
 15739 ;;  j               2   26[BANK1 ] int 
 15740 ;; Return value:  Size  Location     Type
 15741 ;;                  1    wreg      void 
 15742 ;; Registers used:
 15743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15744 ;; Tracked objects:
 15745 ;;		On entry : 0/0
 15746 ;;		On exit  : 0/0
 15747 ;;		Unchanged: 0/0
 15748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15749 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15750 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15751 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15752 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15753 ;;Total ram usage:        7 bytes
 15754 ;; Hardware stack levels used:    1
 15755 ;; Hardware stack levels required when called:    9
 15756 ;; This function calls:
 15757 ;;		_LEDsOn
 15758 ;;		_printf
 15759 ;;		_send_2length_2bytes_IK
 15760 ;; This function is called by:
 15761 ;;		_commCheck
 15762 ;; This function uses a non-reentrant model
 15763 ;;
 15764                           
 15765                           
 15766                           ;psect for function _LED_test_openshort
 15767  1680                     _LED_test_openshort:	
 15768                           
 15769                           ;incstack = 0
 15770                           ; Regs used in _LED_test_openshort: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15771                           ;LEDcomm.c: 101: do { LATCbits.LATC1 = 1; } while(0);
 15772  1680  0022               	movlb	2	; select bank2
 15773  1681  148E               	bsf	14,1	;volatile
 15774                           
 15775                           ;LEDcomm.c: 102: LEDsOn(0xFFFFFFFF, topOrBottom);
 15776  1682  30FF               	movlw	255
 15777  1683  0020               	movlb	0	; select bank0
 15778  1684  00C7               	movwf	LEDsOn@LEDpins+3
 15779  1685  30FF               	movlw	255
 15780  1686  00C6               	movwf	LEDsOn@LEDpins+2
 15781  1687  30FF               	movlw	255
 15782  1688  00C5               	movwf	LEDsOn@LEDpins+1
 15783  1689  30FF               	movlw	255
 15784  168A  00C4               	movwf	LEDsOn@LEDpins
 15785  168B  0021               	movlb	1	; select bank1
 15786  168C  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15787  168D  0020               	movlb	0	; select bank0
 15788  168E  00C9               	movwf	LEDsOn@topOrBottom+1
 15789  168F  0021               	movlb	1	; select bank1
 15790  1690  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15791  1691  0020               	movlb	0	; select bank0
 15792  1692  00C8               	movwf	LEDsOn@topOrBottom
 15793  1693  31A5  2555  3196   	fcall	_LEDsOn
 15794                           
 15795                           ;LEDcomm.c: 103: send_2length_2bytes_IK(0,0,type,topOrBottom);
 15796  1696  3000               	movlw	0
 15797  1697  0020               	movlb	0	; select bank0
 15798  1698  00BC               	movwf	send_2length_2bytes_IK@data1
 15799  1699  00BD               	movwf	send_2length_2bytes_IK@data1+1
 15800  169A  3000               	movlw	0
 15801  169B  00BE               	movwf	send_2length_2bytes_IK@data2
 15802  169C  00BF               	movwf	send_2length_2bytes_IK@data2+1
 15803  169D  0021               	movlb	1	; select bank1
 15804  169E  0835               	movf	LED_test_openshort@type^(0+128),w
 15805  169F  00B9               	movwf	??_LED_test_openshort^(0+128)
 15806  16A0  0839               	movf	??_LED_test_openshort^(0+128),w
 15807  16A1  0020               	movlb	0	; select bank0
 15808  16A2  00C0               	movwf	send_2length_2bytes_IK@latch_start
 15809  16A3  0021               	movlb	1	; select bank1
 15810  16A4  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15811  16A5  0020               	movlb	0	; select bank0
 15812  16A6  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 15813  16A7  0021               	movlb	1	; select bank1
 15814  16A8  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15815  16A9  0020               	movlb	0	; select bank0
 15816  16AA  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 15817  16AB  31A3  23BE  3196   	fcall	_send_2length_2bytes_IK
 15818                           
 15819                           ;LEDcomm.c: 105: do { LATCbits.LATC1 = 0; } while(0);
 15820  16AE  0022               	movlb	2	; select bank2
 15821  16AF  108E               	bcf	14,1	;volatile
 15822                           
 15823                           ;LEDcomm.c: 107: for(int j = 23; j>=0; j--){
 15824  16B0  3017               	movlw	23
 15825  16B1  0021               	movlb	1	; select bank1
 15826  16B2  00BA               	movwf	LED_test_openshort@j^(0+128)
 15827  16B3  3000               	movlw	0
 15828  16B4  00BB               	movwf	(LED_test_openshort@j^(0+128)+1)
 15829  16B5  1BBB               	btfsc	(LED_test_openshort@j+1)^(0+128),7
 15830  16B6  2EF5               	goto	l7751
 15831  16B7                     l281:	
 15832                           ;LEDcomm.c: 108: do { LATAbits.LATA2 = 1; } while(0);
 15833                           
 15834  16B7  0022               	movlb	2	; select bank2
 15835  16B8  150C               	bsf	12,2	;volatile
 15836                           
 15837                           ;LEDcomm.c: 109: _delay((unsigned long)((10)*(1000000/4000000.0)));
 15838  16B9  3200               	nop2	;2 cycle nop
 15839                           
 15840                           ;LEDcomm.c: 110: do { LATAbits.LATA2 = 0; } while(0);
 15841  16BA  0022               	movlb	2	; select bank2
 15842  16BB  110C               	bcf	12,2	;volatile
 15843                           
 15844                           ;LEDcomm.c: 111: if (topOrBottom == 1)
 15845  16BC  0021               	movlb	1	; select bank1
 15846  16BD  0337               	decf	LED_test_openshort@topOrBottom^(0+128),w
 15847  16BE  0438               	iorwf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15848  16BF  1D03               	btfss	3,2
 15849  16C0  2ED2               	goto	l7743
 15850                           
 15851                           ;LEDcomm.c: 112: if (PORTCbits.RC6){ printf("%d ", j);}
 15852  16C1  0020               	movlb	0	; select bank0
 15853  16C2  1B0E               	btfsc	14,6	;volatile
 15854  16C3  2EC6               	goto	l7741
 15855                           
 15856                           ;LEDcomm.c: 113: else
 15857                           ;LEDcomm.c: 114: if (PORTCbits.RC3){ printf("%d ", j);}
 15858  16C4  1D8E               	btfss	14,3	;volatile
 15859  16C5  2ED2               	goto	l7743
 15860  16C6                     l7741:	
 15861  16C6  304B               	movlw	low (STR_1| (0+32768))
 15862  16C7  0021               	movlb	1	; select bank1
 15863  16C8  00A0               	movwf	printf@f^(0+128)
 15864  16C9  30AA               	movlw	high (STR_1| (0+32768))
 15865  16CA  00A1               	movwf	(printf@f^(0+128)+1)
 15866  16CB  083B               	movf	(LED_test_openshort@j+1)^(0+128),w
 15867  16CC  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15868  16CD  083A               	movf	LED_test_openshort@j^(0+128),w
 15869  16CE  00A2               	movwf	(?_printf^(0+128)+2)
 15870  16CF  318E  26CE  3196   	fcall	_printf
 15871  16D2                     l7743:	
 15872                           
 15873                           ;LEDcomm.c: 117: if (j == 23) {do { LATCbits.LATC1 = 1; } while(0); LEDsOn(0, topOrBotto
      +                          m); }
 15874  16D2  3017               	movlw	23
 15875  16D3  0021               	movlb	1	; select bank1
 15876  16D4  063A               	xorwf	LED_test_openshort@j^(0+128),w
 15877  16D5  043B               	iorwf	(LED_test_openshort@j+1)^(0+128),w
 15878  16D6  1D03               	btfss	3,2
 15879  16D7  2EEE               	goto	l7747
 15880  16D8  0022               	movlb	2	; select bank2
 15881  16D9  148E               	bsf	14,1	;volatile
 15882  16DA  3000               	movlw	0
 15883  16DB  0020               	movlb	0	; select bank0
 15884  16DC  00C7               	movwf	LEDsOn@LEDpins+3
 15885  16DD  3000               	movlw	0
 15886  16DE  00C6               	movwf	LEDsOn@LEDpins+2
 15887  16DF  3000               	movlw	0
 15888  16E0  00C5               	movwf	LEDsOn@LEDpins+1
 15889  16E1  3000               	movlw	0
 15890  16E2  00C4               	movwf	LEDsOn@LEDpins
 15891  16E3  0021               	movlb	1	; select bank1
 15892  16E4  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15893  16E5  0020               	movlb	0	; select bank0
 15894  16E6  00C9               	movwf	LEDsOn@topOrBottom+1
 15895  16E7  0021               	movlb	1	; select bank1
 15896  16E8  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15897  16E9  0020               	movlb	0	; select bank0
 15898  16EA  00C8               	movwf	LEDsOn@topOrBottom
 15899  16EB  31A5  2555  3196   	fcall	_LEDsOn
 15900  16EE                     l7747:	
 15901  16EE  30FF               	movlw	255
 15902  16EF  0021               	movlb	1	; select bank1
 15903  16F0  07BA               	addwf	LED_test_openshort@j^(0+128),f
 15904  16F1  30FF               	movlw	255
 15905  16F2  3DBB               	addwfc	(LED_test_openshort@j+1)^(0+128),f
 15906  16F3  1FBB               	btfss	(LED_test_openshort@j+1)^(0+128),7
 15907  16F4  2EB7               	goto	l281
 15908  16F5                     l7751:	
 15909                           
 15910                           ;LEDcomm.c: 118: }
 15911                           ;LEDcomm.c: 119: printf("\n");
 15912  16F5  3063               	movlw	low ((STR_36+28)| (0+32768))
 15913  16F6  00A0               	movwf	printf@f^(0+128)
 15914  16F7  30A8               	movlw	high ((STR_36+28)| (0+32768))
 15915  16F8  00A1               	movwf	(printf@f^(0+128)+1)
 15916  16F9  318E  26CE         	fcall	_printf
 15917  16FB  0008               	return
 15918  16FC                     __end_of_LED_test_openshort:	
 15919                           
 15920                           	psect	text51
 15921  1609                     __ptext51:	
 15922 ;; *************** function _LED_testComm *****************
 15923 ;; Defined at:
 15924 ;;		line 158 in file "LEDcomm.c"
 15925 ;; Parameters:    Size  Location     Type
 15926 ;;  topOrBottom     2   42[BANK1 ] int 
 15927 ;; Auto vars:     Size  Location     Type
 15928 ;;  oldConfigReg    4   48[BANK1 ] long 
 15929 ;;  readResult      2   46[BANK1 ] int 
 15930 ;; Return value:  Size  Location     Type
 15931 ;;                  2   42[BANK1 ] int 
 15932 ;; Registers used:
 15933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15934 ;; Tracked objects:
 15935 ;;		On entry : 0/0
 15936 ;;		On exit  : 0/0
 15937 ;;		Unchanged: 0/0
 15938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15939 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15940 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15941 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15942 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15943 ;;Total ram usage:       10 bytes
 15944 ;; Hardware stack levels used:    1
 15945 ;; Hardware stack levels required when called:   11
 15946 ;; This function calls:
 15947 ;;		_LED_readConfig
 15948 ;;		_LED_setBrightnessRange
 15949 ;; This function is called by:
 15950 ;;		_commCheck
 15951 ;; This function uses a non-reentrant model
 15952 ;;
 15953                           
 15954                           
 15955                           ;psect for function _LED_testComm
 15956  1609                     _LED_testComm:	
 15957                           
 15958                           ;LEDcomm.c: 160: long oldConfigReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 15959                           
 15960                           ;incstack = 0
 15961                           ; Regs used in _LED_testComm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15962  1609  0021               	movlb	1	; select bank1
 15963  160A  034A               	decf	LED_testComm@topOrBottom^(0+128),w
 15964  160B  044B               	iorwf	(LED_testComm@topOrBottom+1)^(0+128),w
 15965  160C  1903               	btfsc	3,2
 15966  160D  2E1D               	goto	l7757
 15967  160E  0022               	movlb	2	; select bank2
 15968  160F  0849               	movf	(_LED_configReg_bot+3)^(0+256),w
 15969  1610  0021               	movlb	1	; select bank1
 15970  1611  00D3               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 15971  1612  0022               	movlb	2	; select bank2
 15972  1613  0848               	movf	(_LED_configReg_bot+2)^(0+256),w
 15973  1614  0021               	movlb	1	; select bank1
 15974  1615  00D2               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 15975  1616  0022               	movlb	2	; select bank2
 15976  1617  0847               	movf	(_LED_configReg_bot+1)^(0+256),w
 15977  1618  0021               	movlb	1	; select bank1
 15978  1619  00D1               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 15979  161A  0022               	movlb	2	; select bank2
 15980  161B  0846               	movf	_LED_configReg_bot^(0+256),w
 15981  161C  2E2B               	goto	L32
 15982  161D                     l7757:	
 15983  161D  0022               	movlb	2	; select bank2
 15984  161E  084D               	movf	(_LED_configReg_top+3)^(0+256),w
 15985  161F  0021               	movlb	1	; select bank1
 15986  1620  00D3               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 15987  1621  0022               	movlb	2	; select bank2
 15988  1622  084C               	movf	(_LED_configReg_top+2)^(0+256),w
 15989  1623  0021               	movlb	1	; select bank1
 15990  1624  00D2               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 15991  1625  0022               	movlb	2	; select bank2
 15992  1626  084B               	movf	(_LED_configReg_top+1)^(0+256),w
 15993  1627  0021               	movlb	1	; select bank1
 15994  1628  00D1               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 15995  1629  0022               	movlb	2	; select bank2
 15996  162A  084A               	movf	_LED_configReg_top^(0+256),w
 15997  162B                     L32:	
 15998  162B  0021               	movlb	1	; select bank1
 15999  162C  00D0               	movwf	LED_testComm@oldConfigReg^(0+128)
 16000                           
 16001                           ;LEDcomm.c: 161: LED_setBrightnessRange(1, topOrBottom);
 16002  162D  3001               	movlw	1
 16003  162E  0020               	movlb	0	; select bank0
 16004  162F  00C4               	movwf	LED_setBrightnessRange@range
 16005  1630  3000               	movlw	0
 16006  1631  00C5               	movwf	LED_setBrightnessRange@range+1
 16007  1632  0021               	movlb	1	; select bank1
 16008  1633  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 16009  1634  0020               	movlb	0	; select bank0
 16010  1635  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 16011  1636  0021               	movlb	1	; select bank1
 16012  1637  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 16013  1638  0020               	movlb	0	; select bank0
 16014  1639  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 16015  163A  3188  20C0  3196   	fcall	_LED_setBrightnessRange
 16016                           
 16017                           ;LEDcomm.c: 162: int readResult = LED_readConfig(topOrBottom);
 16018  163D  0021               	movlb	1	; select bank1
 16019  163E  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 16020  163F  00C7               	movwf	(LED_readConfig@topOrBottom+1)^(0+128)
 16021  1640  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 16022  1641  00C6               	movwf	LED_readConfig@topOrBottom^(0+128)
 16023  1642  31A6  26C3  3196   	fcall	_LED_readConfig
 16024  1645  0021               	movlb	1	; select bank1
 16025  1646  0847               	movf	(?_LED_readConfig+1)^(0+128),w
 16026  1647  00CF               	movwf	(LED_testComm@readResult+1)^(0+128)
 16027  1648  0846               	movf	?_LED_readConfig^(0+128),w
 16028  1649  00CE               	movwf	LED_testComm@readResult^(0+128)
 16029                           
 16030                           ;LEDcomm.c: 164: LED_setBrightnessRange(oldConfigReg > 0, topOrBottom);
 16031  164A  1BD3               	btfsc	(LED_testComm@oldConfigReg+3)^(0+128),7
 16032  164B  2E5B               	goto	u7570
 16033  164C  0853               	movf	(LED_testComm@oldConfigReg+3)^(0+128),w
 16034  164D  1D03               	btfss	3,2
 16035  164E  2E59               	goto	u7571
 16036  164F  0852               	movf	(LED_testComm@oldConfigReg+2)^(0+128),w
 16037  1650  1D03               	btfss	3,2
 16038  1651  2E59               	goto	u7571
 16039  1652  0851               	movf	(LED_testComm@oldConfigReg+1)^(0+128),w
 16040  1653  1D03               	btfss	3,2
 16041  1654  2E59               	goto	u7571
 16042  1655  3001               	movlw	1
 16043  1656  0250               	subwf	LED_testComm@oldConfigReg^(0+128),w
 16044  1657  1C03               	btfss	3,0
 16045  1658  2E5B               	goto	u7570
 16046  1659                     u7571:	
 16047  1659  3001               	movlw	1
 16048  165A  2E5C               	goto	u7580
 16049  165B                     u7570:	
 16050  165B  3000               	movlw	0
 16051  165C                     u7580:	
 16052  165C  00CC               	movwf	??_LED_testComm^(0+128)
 16053  165D  01CD               	clrf	(??_LED_testComm^(0+128)+1)
 16054  165E  084C               	movf	??_LED_testComm^(0+128),w
 16055  165F  0020               	movlb	0	; select bank0
 16056  1660  00C4               	movwf	LED_setBrightnessRange@range
 16057  1661  0021               	movlb	1	; select bank1
 16058  1662  084D               	movf	(??_LED_testComm+1)^(0+128),w
 16059  1663  0020               	movlb	0	; select bank0
 16060  1664  00C5               	movwf	LED_setBrightnessRange@range+1
 16061  1665  0021               	movlb	1	; select bank1
 16062  1666  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 16063  1667  0020               	movlb	0	; select bank0
 16064  1668  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 16065  1669  0021               	movlb	1	; select bank1
 16066  166A  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 16067  166B  0020               	movlb	0	; select bank0
 16068  166C  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 16069  166D  3188  20C0  3196   	fcall	_LED_setBrightnessRange
 16070                           
 16071                           ;LEDcomm.c: 166: return (readResult != 7);
 16072  1670  3007               	movlw	7
 16073  1671  0021               	movlb	1	; select bank1
 16074  1672  064E               	xorwf	LED_testComm@readResult^(0+128),w
 16075  1673  044F               	iorwf	(LED_testComm@readResult+1)^(0+128),w
 16076  1674  1903               	btfsc	3,2
 16077  1675  2E78               	goto	u7590
 16078  1676  3001               	movlw	1
 16079  1677  2E79               	goto	u7600
 16080  1678                     u7590:	
 16081  1678  3000               	movlw	0
 16082  1679                     u7600:	
 16083  1679  00CC               	movwf	??_LED_testComm^(0+128)
 16084  167A  01CD               	clrf	(??_LED_testComm^(0+128)+1)
 16085  167B  084C               	movf	??_LED_testComm^(0+128),w
 16086  167C  00CA               	movwf	?_LED_testComm^(0+128)
 16087  167D  084D               	movf	(??_LED_testComm+1)^(0+128),w
 16088  167E  00CB               	movwf	(?_LED_testComm+1)^(0+128)
 16089  167F  0008               	return
 16090  1680                     __end_of_LED_testComm:	
 16091                           
 16092                           	psect	text52
 16093  08C0                     __ptext52:	
 16094 ;; *************** function _LED_setBrightnessRange *****************
 16095 ;; Defined at:
 16096 ;;		line 77 in file "LEDcomm.c"
 16097 ;; Parameters:    Size  Location     Type
 16098 ;;  range           2   36[BANK0 ] int 
 16099 ;;  topOrBottom     2   38[BANK0 ] int 
 16100 ;; Auto vars:     Size  Location     Type
 16101 ;;  LED_configRe    4    0[BANK1 ] long 
 16102 ;; Return value:  Size  Location     Type
 16103 ;;                  1    wreg      void 
 16104 ;; Registers used:
 16105 ;;		wreg, status,2, status,0, pclath, cstack
 16106 ;; Tracked objects:
 16107 ;;		On entry : 0/0
 16108 ;;		On exit  : 0/0
 16109 ;;		Unchanged: 0/0
 16110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16111 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16112 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16113 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16114 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16115 ;;Total ram usage:       14 bytes
 16116 ;; Hardware stack levels used:    1
 16117 ;; Hardware stack levels required when called:    8
 16118 ;; This function calls:
 16119 ;;		_send_2length_2bytes_IK
 16120 ;; This function is called by:
 16121 ;;		_LED_testComm
 16122 ;;		_main_initialize
 16123 ;;		_setLEDBrightnessRange
 16124 ;; This function uses a non-reentrant model
 16125 ;;
 16126                           
 16127                           
 16128                           ;psect for function _LED_setBrightnessRange
 16129  08C0                     _LED_setBrightnessRange:	
 16130                           
 16131                           ;LEDcomm.c: 79: long LED_configReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 16132                           
 16133                           ;incstack = 0
 16134                           ; Regs used in _LED_setBrightnessRange: [wreg+status,2+status,0+pclath+cstack]
 16135  08C0  0020               	movlb	0	; select bank0
 16136  08C1  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 16137  08C2  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 16138  08C3  1903               	btfsc	3,2
 16139  08C4  28D4               	goto	l7641
 16140  08C5  0022               	movlb	2	; select bank2
 16141  08C6  0849               	movf	(_LED_configReg_bot+3)^(0+256),w
 16142  08C7  0021               	movlb	1	; select bank1
 16143  08C8  00A3               	movwf	(LED_setBrightnessRange@LED_configReg+3)^(0+128)
 16144  08C9  0022               	movlb	2	; select bank2
 16145  08CA  0848               	movf	(_LED_configReg_bot+2)^(0+256),w
 16146  08CB  0021               	movlb	1	; select bank1
 16147  08CC  00A2               	movwf	(LED_setBrightnessRange@LED_configReg+2)^(0+128)
 16148  08CD  0022               	movlb	2	; select bank2
 16149  08CE  0847               	movf	(_LED_configReg_bot+1)^(0+256),w
 16150  08CF  0021               	movlb	1	; select bank1
 16151  08D0  00A1               	movwf	(LED_setBrightnessRange@LED_configReg+1)^(0+128)
 16152  08D1  0022               	movlb	2	; select bank2
 16153  08D2  0846               	movf	_LED_configReg_bot^(0+256),w
 16154  08D3  28E2               	goto	L33
 16155  08D4                     l7641:	
 16156  08D4  0022               	movlb	2	; select bank2
 16157  08D5  084D               	movf	(_LED_configReg_top+3)^(0+256),w
 16158  08D6  0021               	movlb	1	; select bank1
 16159  08D7  00A3               	movwf	(LED_setBrightnessRange@LED_configReg+3)^(0+128)
 16160  08D8  0022               	movlb	2	; select bank2
 16161  08D9  084C               	movf	(_LED_configReg_top+2)^(0+256),w
 16162  08DA  0021               	movlb	1	; select bank1
 16163  08DB  00A2               	movwf	(LED_setBrightnessRange@LED_configReg+2)^(0+128)
 16164  08DC  0022               	movlb	2	; select bank2
 16165  08DD  084B               	movf	(_LED_configReg_top+1)^(0+256),w
 16166  08DE  0021               	movlb	1	; select bank1
 16167  08DF  00A1               	movwf	(LED_setBrightnessRange@LED_configReg+1)^(0+128)
 16168  08E0  0022               	movlb	2	; select bank2
 16169  08E1  084A               	movf	_LED_configReg_top^(0+256),w
 16170  08E2                     L33:	
 16171  08E2  0021               	movlb	1	; select bank1
 16172  08E3  00A0               	movwf	LED_setBrightnessRange@LED_configReg^(0+128)
 16173                           
 16174                           ;LEDcomm.c: 80: if(range > 0)
 16175  08E4  0020               	movlb	0	; select bank0
 16176  08E5  0845               	movf	LED_setBrightnessRange@range+1,w
 16177  08E6  3A80               	xorlw	128
 16178  08E7  00C8               	movwf	??_LED_setBrightnessRange
 16179  08E8  3080               	movlw	128
 16180  08E9  0248               	subwf	??_LED_setBrightnessRange,w
 16181  08EA  1D03               	skipz
 16182  08EB  28EE               	goto	u7305
 16183  08EC  3001               	movlw	1
 16184  08ED  0244               	subwf	LED_setBrightnessRange@range,w
 16185  08EE                     u7305:	
 16186  08EE  1C03               	skipc
 16187  08EF  28FA               	goto	l7645
 16188                           
 16189                           ;LEDcomm.c: 81: LED_configReg |= (0b111);
 16190  08F0  3007               	movlw	7
 16191  08F1  0021               	movlb	1	; select bank1
 16192  08F2  04A0               	iorwf	LED_setBrightnessRange@LED_configReg^(0+128),f
 16193  08F3  3000               	movlw	0
 16194  08F4  04A1               	iorwf	(LED_setBrightnessRange@LED_configReg+1)^(0+128),f
 16195  08F5  3000               	movlw	0
 16196  08F6  04A2               	iorwf	(LED_setBrightnessRange@LED_configReg+2)^(0+128),f
 16197  08F7  3000               	movlw	0
 16198  08F8  04A3               	iorwf	(LED_setBrightnessRange@LED_configReg+3)^(0+128),f
 16199  08F9  2903               	goto	l7647
 16200  08FA                     l7645:	
 16201                           
 16202                           ;LEDcomm.c: 82: else
 16203                           ;LEDcomm.c: 83: LED_configReg &= ~(0b111);
 16204  08FA  30F8               	movlw	248
 16205  08FB  0021               	movlb	1	; select bank1
 16206  08FC  05A0               	andwf	LED_setBrightnessRange@LED_configReg^(0+128),f
 16207  08FD  30FF               	movlw	255
 16208  08FE  05A1               	andwf	(LED_setBrightnessRange@LED_configReg+1)^(0+128),f
 16209  08FF  30FF               	movlw	255
 16210  0900  05A2               	andwf	(LED_setBrightnessRange@LED_configReg+2)^(0+128),f
 16211  0901  30FF               	movlw	255
 16212  0902  05A3               	andwf	(LED_setBrightnessRange@LED_configReg+3)^(0+128),f
 16213  0903                     l7647:	
 16214                           
 16215                           ;LEDcomm.c: 85: send_2length_2bytes_IK((unsigned int)((LED_configReg>>16) & 0xFFFF),(uns
      +                          igned int)LED_configReg, 3, topOrBottom);
 16216  0903  0820               	movf	LED_setBrightnessRange@LED_configReg^(0+128),w
 16217  0904  0020               	movlb	0	; select bank0
 16218  0905  00C8               	movwf	??_LED_setBrightnessRange
 16219  0906  0021               	movlb	1	; select bank1
 16220  0907  0821               	movf	(LED_setBrightnessRange@LED_configReg+1)^(0+128),w
 16221  0908  0020               	movlb	0	; select bank0
 16222  0909  00C9               	movwf	??_LED_setBrightnessRange+1
 16223  090A  0021               	movlb	1	; select bank1
 16224  090B  0822               	movf	(LED_setBrightnessRange@LED_configReg+2)^(0+128),w
 16225  090C  0020               	movlb	0	; select bank0
 16226  090D  00CA               	movwf	??_LED_setBrightnessRange+2
 16227  090E  0021               	movlb	1	; select bank1
 16228  090F  0823               	movf	(LED_setBrightnessRange@LED_configReg+3)^(0+128),w
 16229  0910  0020               	movlb	0	; select bank0
 16230  0911  00CB               	movwf	??_LED_setBrightnessRange+3
 16231  0912  3010               	movlw	16
 16232  0913  00CC               	movwf	??_LED_setBrightnessRange+4
 16233  0914                     u7315:	
 16234  0914  37CB               	asrf	??_LED_setBrightnessRange+3,f
 16235  0915  0CCA               	rrf	??_LED_setBrightnessRange+2,f
 16236  0916  0CC9               	rrf	??_LED_setBrightnessRange+1,f
 16237  0917  0CC8               	rrf	??_LED_setBrightnessRange,f
 16238  0918  0BCC               	decfsz	??_LED_setBrightnessRange+4,f
 16239  0919  2914               	goto	u7315
 16240  091A  0849               	movf	??_LED_setBrightnessRange+1,w
 16241  091B  00BD               	movwf	send_2length_2bytes_IK@data1+1
 16242  091C  0848               	movf	??_LED_setBrightnessRange,w
 16243  091D  00BC               	movwf	send_2length_2bytes_IK@data1
 16244  091E  0021               	movlb	1	; select bank1
 16245  091F  0821               	movf	(LED_setBrightnessRange@LED_configReg+1)^(0+128),w
 16246  0920  0020               	movlb	0	; select bank0
 16247  0921  00BF               	movwf	send_2length_2bytes_IK@data2+1
 16248  0922  0021               	movlb	1	; select bank1
 16249  0923  0820               	movf	LED_setBrightnessRange@LED_configReg^(0+128),w
 16250  0924  0020               	movlb	0	; select bank0
 16251  0925  00BE               	movwf	send_2length_2bytes_IK@data2
 16252  0926  3003               	movlw	3
 16253  0927  00CD               	movwf	??_LED_setBrightnessRange+5
 16254  0928  084D               	movf	??_LED_setBrightnessRange+5,w
 16255  0929  00C0               	movwf	send_2length_2bytes_IK@latch_start
 16256  092A  0847               	movf	LED_setBrightnessRange@topOrBottom+1,w
 16257  092B  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 16258  092C  0846               	movf	LED_setBrightnessRange@topOrBottom,w
 16259  092D  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 16260  092E  31A3  23BE  3188   	fcall	_send_2length_2bytes_IK
 16261                           
 16262                           ;LEDcomm.c: 88: if (topOrBottom == 1)
 16263  0931  0020               	movlb	0	; select bank0
 16264  0932  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 16265  0933  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 16266  0934  1D03               	btfss	3,2
 16267  0935  2947               	goto	l7653
 16268                           
 16269                           ;LEDcomm.c: 89: LED_configReg_top = LED_configReg;
 16270  0936  0021               	movlb	1	; select bank1
 16271  0937  0823               	movf	(LED_setBrightnessRange@LED_configReg+3)^(0+128),w
 16272  0938  0022               	movlb	2	; select bank2
 16273  0939  00CD               	movwf	(_LED_configReg_top+3)^(0+256)
 16274  093A  0021               	movlb	1	; select bank1
 16275  093B  0822               	movf	(LED_setBrightnessRange@LED_configReg+2)^(0+128),w
 16276  093C  0022               	movlb	2	; select bank2
 16277  093D  00CC               	movwf	(_LED_configReg_top+2)^(0+256)
 16278  093E  0021               	movlb	1	; select bank1
 16279  093F  0821               	movf	(LED_setBrightnessRange@LED_configReg+1)^(0+128),w
 16280  0940  0022               	movlb	2	; select bank2
 16281  0941  00CB               	movwf	(_LED_configReg_top+1)^(0+256)
 16282  0942  0021               	movlb	1	; select bank1
 16283  0943  0820               	movf	LED_setBrightnessRange@LED_configReg^(0+128),w
 16284  0944  0022               	movlb	2	; select bank2
 16285  0945  00CA               	movwf	_LED_configReg_top^(0+256)
 16286  0946  0008               	return
 16287  0947                     l7653:	
 16288                           
 16289                           ;LEDcomm.c: 90: else
 16290                           ;LEDcomm.c: 91: LED_configReg_bot = LED_configReg;
 16291  0947  0021               	movlb	1	; select bank1
 16292  0948  0823               	movf	(LED_setBrightnessRange@LED_configReg+3)^(0+128),w
 16293  0949  0022               	movlb	2	; select bank2
 16294  094A  00C9               	movwf	(_LED_configReg_bot+3)^(0+256)
 16295  094B  0021               	movlb	1	; select bank1
 16296  094C  0822               	movf	(LED_setBrightnessRange@LED_configReg+2)^(0+128),w
 16297  094D  0022               	movlb	2	; select bank2
 16298  094E  00C8               	movwf	(_LED_configReg_bot+2)^(0+256)
 16299  094F  0021               	movlb	1	; select bank1
 16300  0950  0821               	movf	(LED_setBrightnessRange@LED_configReg+1)^(0+128),w
 16301  0951  0022               	movlb	2	; select bank2
 16302  0952  00C7               	movwf	(_LED_configReg_bot+1)^(0+256)
 16303  0953  0021               	movlb	1	; select bank1
 16304  0954  0820               	movf	LED_setBrightnessRange@LED_configReg^(0+128),w
 16305  0955  0022               	movlb	2	; select bank2
 16306  0956  00C6               	movwf	_LED_configReg_bot^(0+256)
 16307  0957  0008               	return
 16308  0958                     __end_of_LED_setBrightnessRange:	
 16309                           
 16310                           	psect	text53
 16311  26C3                     __ptext53:	
 16312 ;; *************** function _LED_readConfig *****************
 16313 ;; Defined at:
 16314 ;;		line 124 in file "LEDcomm.c"
 16315 ;; Parameters:    Size  Location     Type
 16316 ;;  topOrBottom     2   38[BANK1 ] int 
 16317 ;; Auto vars:     Size  Location     Type
 16318 ;;		None
 16319 ;; Return value:  Size  Location     Type
 16320 ;;                  4   38[BANK1 ] long 
 16321 ;; Registers used:
 16322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16323 ;; Tracked objects:
 16324 ;;		On entry : 0/0
 16325 ;;		On exit  : 0/0
 16326 ;;		Unchanged: 0/0
 16327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16328 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16330 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16331 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16332 ;;Total ram usage:        5 bytes
 16333 ;; Hardware stack levels used:    1
 16334 ;; Hardware stack levels required when called:   10
 16335 ;; This function calls:
 16336 ;;		_LED_getData
 16337 ;;		_send_2length_2bytes_IK
 16338 ;; This function is called by:
 16339 ;;		_LED_testComm
 16340 ;; This function uses a non-reentrant model
 16341 ;;
 16342                           
 16343                           
 16344                           ;psect for function _LED_readConfig
 16345  26C3                     _LED_readConfig:	
 16346                           
 16347                           ;incstack = 0
 16348                           ; Regs used in _LED_readConfig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16349                           ;LEDcomm.c: 125: do { LATCbits.LATC1 = 1; } while(0);
 16350  26C3  0022               	movlb	2	; select bank2
 16351  26C4  148E               	bsf	14,1	;volatile
 16352                           
 16353                           ;LEDcomm.c: 126: send_2length_2bytes_IK(0,0,5,topOrBottom);
 16354  26C5  3000               	movlw	0
 16355  26C6  0020               	movlb	0	; select bank0
 16356  26C7  00BC               	movwf	send_2length_2bytes_IK@data1
 16357  26C8  00BD               	movwf	send_2length_2bytes_IK@data1+1
 16358  26C9  3000               	movlw	0
 16359  26CA  00BE               	movwf	send_2length_2bytes_IK@data2
 16360  26CB  00BF               	movwf	send_2length_2bytes_IK@data2+1
 16361  26CC  3005               	movlw	5
 16362  26CD  00C9               	movwf	??_LED_readConfig
 16363  26CE  0849               	movf	??_LED_readConfig,w
 16364  26CF  00C0               	movwf	send_2length_2bytes_IK@latch_start
 16365  26D0  0021               	movlb	1	; select bank1
 16366  26D1  0847               	movf	(LED_readConfig@topOrBottom+1)^(0+128),w
 16367  26D2  0020               	movlb	0	; select bank0
 16368  26D3  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 16369  26D4  0021               	movlb	1	; select bank1
 16370  26D5  0846               	movf	LED_readConfig@topOrBottom^(0+128),w
 16371  26D6  0020               	movlb	0	; select bank0
 16372  26D7  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 16373  26D8  31A3  23BE  31A6   	fcall	_send_2length_2bytes_IK
 16374                           
 16375                           ;LEDcomm.c: 127: return LED_getData(topOrBottom);
 16376  26DB  0021               	movlb	1	; select bank1
 16377  26DC  0847               	movf	(LED_readConfig@topOrBottom+1)^(0+128),w
 16378  26DD  00B6               	movwf	(LED_getData@topOrBottom+1)^(0+128)
 16379  26DE  0846               	movf	LED_readConfig@topOrBottom^(0+128),w
 16380  26DF  00B5               	movwf	LED_getData@topOrBottom^(0+128)
 16381  26E0  3197  2779         	fcall	_LED_getData
 16382  26E2  0021               	movlb	1	; select bank1
 16383  26E3  0838               	movf	(?_LED_getData+3)^(0+128),w
 16384  26E4  00C9               	movwf	(?_LED_readConfig+3)^(0+128)
 16385  26E5  0837               	movf	(?_LED_getData+2)^(0+128),w
 16386  26E6  00C8               	movwf	(?_LED_readConfig+2)^(0+128)
 16387  26E7  0836               	movf	(?_LED_getData+1)^(0+128),w
 16388  26E8  00C7               	movwf	(?_LED_readConfig+1)^(0+128)
 16389  26E9  0835               	movf	?_LED_getData^(0+128),w
 16390  26EA  00C6               	movwf	?_LED_readConfig^(0+128)
 16391  26EB  0008               	return
 16392  26EC                     __end_of_LED_readConfig:	
 16393                           
 16394                           	psect	text54
 16395  1779                     __ptext54:	
 16396 ;; *************** function _LED_getData *****************
 16397 ;; Defined at:
 16398 ;;		line 130 in file "LEDcomm.c"
 16399 ;; Parameters:    Size  Location     Type
 16400 ;;  topOrBottom     2   21[BANK1 ] int 
 16401 ;; Auto vars:     Size  Location     Type
 16402 ;;  j               2   36[BANK1 ] int 
 16403 ;;  readData        4   32[BANK1 ] long 
 16404 ;; Return value:  Size  Location     Type
 16405 ;;                  4   21[BANK1 ] long 
 16406 ;; Registers used:
 16407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16408 ;; Tracked objects:
 16409 ;;		On entry : 0/0
 16410 ;;		On exit  : 0/0
 16411 ;;		Unchanged: 0/0
 16412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16413 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16414 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16415 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16416 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16417 ;;Total ram usage:       17 bytes
 16418 ;; Hardware stack levels used:    1
 16419 ;; Hardware stack levels required when called:    9
 16420 ;; This function calls:
 16421 ;;		_printf
 16422 ;; This function is called by:
 16423 ;;		_LED_readConfig
 16424 ;; This function uses a non-reentrant model
 16425 ;;
 16426                           
 16427                           
 16428                           ;psect for function _LED_getData
 16429  1779                     _LED_getData:	
 16430                           
 16431                           ;LEDcomm.c: 132: long readData = 0;
 16432                           
 16433                           ;incstack = 0
 16434                           ; Regs used in _LED_getData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16435  1779  3000               	movlw	0
 16436  177A  0021               	movlb	1	; select bank1
 16437  177B  00C3               	movwf	(LED_getData@readData+3)^(0+128)
 16438  177C  3000               	movlw	0
 16439  177D  00C2               	movwf	(LED_getData@readData+2)^(0+128)
 16440  177E  3000               	movlw	0
 16441  177F  00C1               	movwf	(LED_getData@readData+1)^(0+128)
 16442  1780  3000               	movlw	0
 16443  1781  00C0               	movwf	LED_getData@readData^(0+128)
 16444                           
 16445                           ;LEDcomm.c: 134: if (topOrBottom == 1) do { LATBbits.LATB4 = 0; } while(0);
 16446  1782  0335               	decf	LED_getData@topOrBottom^(0+128),w
 16447  1783  0436               	iorwf	(LED_getData@topOrBottom+1)^(0+128),w
 16448  1784  1D03               	btfss	3,2
 16449  1785  2F89               	goto	l304
 16450  1786  0022               	movlb	2	; select bank2
 16451  1787  120D               	bcf	13,4	;volatile
 16452  1788  2F8B               	goto	l7589
 16453  1789                     l304:	
 16454                           ;LEDcomm.c: 135: else do { LATCbits.LATC0 = 0; } while(0);
 16455                           
 16456  1789  0022               	movlb	2	; select bank2
 16457  178A  100E               	bcf	14,0	;volatile
 16458  178B                     l7589:	
 16459                           
 16460                           ;LEDcomm.c: 137: for(int j = 23; j>=0; j--){
 16461  178B  3017               	movlw	23
 16462  178C  0021               	movlb	1	; select bank1
 16463  178D  00C4               	movwf	LED_getData@j^(0+128)
 16464  178E  3000               	movlw	0
 16465  178F  00C5               	movwf	(LED_getData@j^(0+128)+1)
 16466  1790  1BC5               	btfsc	(LED_getData@j+1)^(0+128),7
 16467  1791  2FE5               	goto	l314
 16468  1792                     l308:	
 16469                           ;LEDcomm.c: 138: do { LATAbits.LATA2 = 1; } while(0);
 16470                           
 16471  1792  0022               	movlb	2	; select bank2
 16472  1793  150C               	bsf	12,2	;volatile
 16473                           
 16474                           ;LEDcomm.c: 140: if (topOrBottom == 1)
 16475  1794  0021               	movlb	1	; select bank1
 16476  1795  0335               	decf	LED_getData@topOrBottom^(0+128),w
 16477  1796  0436               	iorwf	(LED_getData@topOrBottom+1)^(0+128),w
 16478  1797  1D03               	btfss	3,2
 16479  1798  2FB8               	goto	l7599
 16480                           
 16481                           ;LEDcomm.c: 141: {readData |= (PORTCbits.RC6 << j);}
 16482  1799  0020               	movlb	0	; select bank0
 16483  179A  0E0E               	swapf	14,w	;volatile
 16484  179B  0C89               	rrf	9,f
 16485  179C  0C89               	rrf	9,f
 16486  179D  3901               	andlw	1
 16487  179E  0021               	movlb	1	; select bank1
 16488  179F  00B9               	movwf	??_LED_getData^(0+128)
 16489  17A0  01BA               	clrf	(??_LED_getData^(0+128)+1)
 16490  17A1  0A44               	incf	LED_getData@j^(0+128),w
 16491  17A2  2FA5               	goto	u7234
 16492  17A3                     u7235:	
 16493  17A3  35B9               	lslf	??_LED_getData^(0+128),f
 16494  17A4  0DBA               	rlf	(??_LED_getData^(0+128)+1),f
 16495  17A5                     u7234:	
 16496  17A5  0B89               	decfsz	9,f
 16497  17A6  2FA3               	goto	u7235
 16498  17A7  0839               	movf	??_LED_getData^(0+128),w
 16499  17A8  00BB               	movwf	(??_LED_getData+2)^(0+128)
 16500  17A9  083A               	movf	(??_LED_getData+1)^(0+128),w
 16501  17AA  00BC               	movwf	((??_LED_getData+2)^(0+128)+1)
 16502  17AB  3000               	movlw	0
 16503  17AC  1BBC               	btfsc	((??_LED_getData+2)^(0+128)+1),7
 16504  17AD  30FF               	movlw	255
 16505  17AE  00BD               	movwf	((??_LED_getData+2)^(0+128)+2)
 16506  17AF  00BE               	movwf	((??_LED_getData+2)^(0+128)+3)
 16507  17B0  083B               	movf	(??_LED_getData+2)^(0+128),w
 16508  17B1  04C0               	iorwf	LED_getData@readData^(0+128),f
 16509  17B2  083C               	movf	(??_LED_getData+3)^(0+128),w
 16510  17B3  04C1               	iorwf	(LED_getData@readData+1)^(0+128),f
 16511  17B4  083D               	movf	(??_LED_getData+4)^(0+128),w
 16512  17B5  04C2               	iorwf	(LED_getData@readData+2)^(0+128),f
 16513  17B6  083E               	movf	(??_LED_getData+5)^(0+128),w
 16514  17B7  2FD7               	goto	L34
 16515  17B8                     l7599:	
 16516                           
 16517                           ;LEDcomm.c: 142: else
 16518                           ;LEDcomm.c: 143: {readData |= (PORTCbits.RC3 << j);}
 16519  17B8  0020               	movlb	0	; select bank0
 16520  17B9  0C0E               	rrf	14,w	;volatile
 16521  17BA  0021               	movlb	1	; select bank1
 16522  17BB  00B9               	movwf	??_LED_getData^(0+128)
 16523  17BC  0CB9               	rrf	??_LED_getData^(0+128),f
 16524  17BD  0C39               	rrf	??_LED_getData^(0+128),w
 16525  17BE  3901               	andlw	1
 16526  17BF  00BA               	movwf	(??_LED_getData+1)^(0+128)
 16527  17C0  01BB               	clrf	((??_LED_getData+1)^(0+128)+1)
 16528  17C1  0A44               	incf	LED_getData@j^(0+128),w
 16529  17C2  2FC5               	goto	u7244
 16530  17C3                     u7245:	
 16531  17C3  35BA               	lslf	(??_LED_getData+1)^(0+128),f
 16532  17C4  0DBB               	rlf	((??_LED_getData+1)^(0+128)+1),f
 16533  17C5                     u7244:	
 16534  17C5  0B89               	decfsz	9,f
 16535  17C6  2FC3               	goto	u7245
 16536  17C7  083A               	movf	(??_LED_getData+1)^(0+128),w
 16537  17C8  00BC               	movwf	(??_LED_getData+3)^(0+128)
 16538  17C9  083B               	movf	(??_LED_getData+2)^(0+128),w
 16539  17CA  00BD               	movwf	((??_LED_getData+3)^(0+128)+1)
 16540  17CB  3000               	movlw	0
 16541  17CC  1BBD               	btfsc	((??_LED_getData+3)^(0+128)+1),7
 16542  17CD  30FF               	movlw	255
 16543  17CE  00BE               	movwf	((??_LED_getData+3)^(0+128)+2)
 16544  17CF  00BF               	movwf	((??_LED_getData+3)^(0+128)+3)
 16545  17D0  083C               	movf	(??_LED_getData+3)^(0+128),w
 16546  17D1  04C0               	iorwf	LED_getData@readData^(0+128),f
 16547  17D2  083D               	movf	(??_LED_getData+4)^(0+128),w
 16548  17D3  04C1               	iorwf	(LED_getData@readData+1)^(0+128),f
 16549  17D4  083E               	movf	(??_LED_getData+5)^(0+128),w
 16550  17D5  04C2               	iorwf	(LED_getData@readData+2)^(0+128),f
 16551  17D6  083F               	movf	(??_LED_getData+6)^(0+128),w
 16552  17D7                     L34:	
 16553  17D7  04C3               	iorwf	(LED_getData@readData+3)^(0+128),f
 16554                           
 16555                           ;LEDcomm.c: 145: do { LATAbits.LATA2 = 0; } while(0);
 16556  17D8  0022               	movlb	2	; select bank2
 16557  17D9  110C               	bcf	12,2	;volatile
 16558                           
 16559                           ;LEDcomm.c: 146: _delay((unsigned long)((100)*(1000000/4000000.0)));
 16560  17DA  3008               	movlw	8
 16561  17DB                     u9097:	
 16562  17DB  0B89               	decfsz	9,f
 16563  17DC  2FDB               	goto	u9097
 16564  17DD  0000               	nop
 16565  17DE  30FF               	movlw	255
 16566  17DF  0021               	movlb	1	; select bank1
 16567  17E0  07C4               	addwf	LED_getData@j^(0+128),f
 16568  17E1  30FF               	movlw	255
 16569  17E2  3DC5               	addwfc	(LED_getData@j+1)^(0+128),f
 16570  17E3  1FC5               	btfss	(LED_getData@j+1)^(0+128),7
 16571  17E4  2F92               	goto	l308
 16572  17E5                     l314:	
 16573                           ;LEDcomm.c: 148: }
 16574                           ;LEDcomm.c: 150: do { LATAbits.LATA2 = 0; } while(0);
 16575                           
 16576  17E5  0022               	movlb	2	; select bank2
 16577  17E6  110C               	bcf	12,2	;volatile
 16578                           
 16579                           ;LEDcomm.c: 151: printf("read data: %lu\n", readData);
 16580  17E7  3020               	movlw	low (STR_4| (0+32768))
 16581  17E8  0021               	movlb	1	; select bank1
 16582  17E9  00A0               	movwf	printf@f^(0+128)
 16583  17EA  30A9               	movlw	high (STR_4| (0+32768))
 16584  17EB  00A1               	movwf	(printf@f^(0+128)+1)
 16585  17EC  0843               	movf	(LED_getData@readData+3)^(0+128),w
 16586  17ED  00A5               	movwf	((?_printf+3)^(0+128)+2)
 16587  17EE  0842               	movf	(LED_getData@readData+2)^(0+128),w
 16588  17EF  00A4               	movwf	((?_printf+2)^(0+128)+2)
 16589  17F0  0841               	movf	(LED_getData@readData+1)^(0+128),w
 16590  17F1  00A3               	movwf	((?_printf+1)^(0+128)+2)
 16591  17F2  0840               	movf	LED_getData@readData^(0+128),w
 16592  17F3  00A2               	movwf	(?_printf^(0+128)+2)
 16593  17F4  318E  26CE         	fcall	_printf
 16594                           
 16595                           ;LEDcomm.c: 152: return readData;
 16596  17F6  0021               	movlb	1	; select bank1
 16597  17F7  0843               	movf	(LED_getData@readData+3)^(0+128),w
 16598  17F8  00B8               	movwf	(?_LED_getData+3)^(0+128)
 16599  17F9  0842               	movf	(LED_getData@readData+2)^(0+128),w
 16600  17FA  00B7               	movwf	(?_LED_getData+2)^(0+128)
 16601  17FB  0841               	movf	(LED_getData@readData+1)^(0+128),w
 16602  17FC  00B6               	movwf	(?_LED_getData+1)^(0+128)
 16603  17FD  0840               	movf	LED_getData@readData^(0+128),w
 16604  17FE  00B5               	movwf	?_LED_getData^(0+128)
 16605  17FF  0008               	return
 16606  1800                     __end_of_LED_getData:	
 16607                           
 16608                           	psect	text55
 16609  0DA3                     __ptext55:	
 16610 ;; *************** function _doRelMove *****************
 16611 ;; Defined at:
 16612 ;;		line 338 in file "main.c"
 16613 ;; Parameters:    Size  Location     Type
 16614 ;;		None
 16615 ;; Auto vars:     Size  Location     Type
 16616 ;;  j               2   60[BANK1 ] int 
 16617 ;; Return value:  Size  Location     Type
 16618 ;;                  1    wreg      void 
 16619 ;; Registers used:
 16620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16621 ;; Tracked objects:
 16622 ;;		On entry : 0/0
 16623 ;;		On exit  : 0/0
 16624 ;;		Unchanged: 0/0
 16625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16627 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16628 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16629 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16630 ;;Total ram usage:       18 bytes
 16631 ;; Hardware stack levels used:    1
 16632 ;; Hardware stack levels required when called:   16
 16633 ;; This function calls:
 16634 ;;		_doMove
 16635 ;; This function is called by:
 16636 ;;		_main
 16637 ;; This function uses a non-reentrant model
 16638 ;;
 16639                           
 16640                           
 16641                           ;psect for function _doRelMove
 16642  0DA3                     _doRelMove:	
 16643                           
 16644                           ;main.c: 339: if(remainingSteps == 0){
 16645                           
 16646                           ;incstack = 0
 16647 ;; hardware stack exceeded
 16648                           ; Regs used in _doRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16649  0DA3  0022               	movlb	2	; select bank2
 16650  0DA4  0845               	movf	(_remainingSteps+3)^(0+256),w
 16651  0DA5  0444               	iorwf	(_remainingSteps+2)^(0+256),w
 16652  0DA6  0443               	iorwf	(_remainingSteps+1)^(0+256),w
 16653  0DA7  0442               	iorwf	_remainingSteps^(0+256),w
 16654  0DA8  1D03               	skipz
 16655  0DA9  2DBF               	goto	l8563
 16656                           
 16657                           ;main.c: 340: motionType = NONE;
 16658  0DAA  0020               	movlb	0	; select bank0
 16659  0DAB  01D5               	clrf	_motionType
 16660                           
 16661                           ;main.c: 341: moveVector_ups = 0;
 16662  0DAC  3000               	movlw	0
 16663  0DAD  0021               	movlb	1	; select bank1
 16664  0DAE  00EA               	movwf	(_moveVector_ups+3)^(0+128)
 16665  0DAF  3000               	movlw	0
 16666  0DB0  00E9               	movwf	(_moveVector_ups+2)^(0+128)
 16667  0DB1  3000               	movlw	0
 16668  0DB2  00E8               	movwf	(_moveVector_ups+1)^(0+128)
 16669  0DB3  3000               	movlw	0
 16670  0DB4  00E7               	movwf	_moveVector_ups^(0+128)
 16671                           
 16672                           ;main.c: 342: moveVector_downs = 0;
 16673  0DB5  3000               	movlw	0
 16674  0DB6  0020               	movlb	0	; select bank0
 16675  0DB7  00D1               	movwf	_moveVector_downs+3
 16676  0DB8  3000               	movlw	0
 16677  0DB9  00D0               	movwf	_moveVector_downs+2
 16678  0DBA  3000               	movlw	0
 16679  0DBB  00CF               	movwf	_moveVector_downs+1
 16680  0DBC  3000               	movlw	0
 16681  0DBD  00CE               	movwf	_moveVector_downs
 16682                           
 16683                           ;main.c: 344: }
 16684                           
 16685                           ;main.c: 343: return;
 16686  0DBE  0008               	return
 16687  0DBF                     l8563:	
 16688                           
 16689                           ;main.c: 345: else{
 16690                           ;main.c: 346: int j;
 16691                           ;main.c: 347: if (remainingSteps > 0){
 16692  0DBF  0022               	movlb	2	; select bank2
 16693  0DC0  1BC5               	btfsc	(_remainingSteps+3)^(0+256),7
 16694  0DC1  2E51               	goto	l8583
 16695  0DC2  0845               	movf	(_remainingSteps+3)^(0+256),w
 16696  0DC3  1D03               	btfss	3,2
 16697  0DC4  2DCF               	goto	l8565
 16698  0DC5  0844               	movf	(_remainingSteps+2)^(0+256),w
 16699  0DC6  1D03               	btfss	3,2
 16700  0DC7  2DCF               	goto	l8565
 16701  0DC8  0843               	movf	(_remainingSteps+1)^(0+256),w
 16702  0DC9  1D03               	btfss	3,2
 16703  0DCA  2DCF               	goto	l8565
 16704  0DCB  3001               	movlw	1
 16705  0DCC  0242               	subwf	_remainingSteps^(0+256),w
 16706  0DCD  1C03               	btfss	3,0
 16707  0DCE  2E51               	goto	l8583
 16708  0DCF                     l8565:	
 16709                           
 16710                           ;main.c: 348: moveVector_ups = 0;
 16711  0DCF  3000               	movlw	0
 16712  0DD0  0021               	movlb	1	; select bank1
 16713  0DD1  00EA               	movwf	(_moveVector_ups+3)^(0+128)
 16714  0DD2  3000               	movlw	0
 16715  0DD3  00E9               	movwf	(_moveVector_ups+2)^(0+128)
 16716  0DD4  3000               	movlw	0
 16717  0DD5  00E8               	movwf	(_moveVector_ups+1)^(0+128)
 16718  0DD6  3000               	movlw	0
 16719  0DD7  00E7               	movwf	_moveVector_ups^(0+128)
 16720                           
 16721                           ;main.c: 349: moveVector_downs = activeMask;
 16722  0DD8  0866               	movf	(_activeMask+3)^(0+128),w
 16723  0DD9  0020               	movlb	0	; select bank0
 16724  0DDA  00D1               	movwf	_moveVector_downs+3
 16725  0DDB  0021               	movlb	1	; select bank1
 16726  0DDC  0865               	movf	(_activeMask+2)^(0+128),w
 16727  0DDD  0020               	movlb	0	; select bank0
 16728  0DDE  00D0               	movwf	_moveVector_downs+2
 16729  0DDF  0021               	movlb	1	; select bank1
 16730  0DE0  0864               	movf	(_activeMask+1)^(0+128),w
 16731  0DE1  0020               	movlb	0	; select bank0
 16732  0DE2  00CF               	movwf	_moveVector_downs+1
 16733  0DE3  0021               	movlb	1	; select bank1
 16734  0DE4  0863               	movf	_activeMask^(0+128),w
 16735  0DE5  0020               	movlb	0	; select bank0
 16736  0DE6  00CE               	movwf	_moveVector_downs
 16737                           
 16738                           ;main.c: 351: doMove();
 16739  0DE7  3187  273B  318D   	fcall	_doMove
 16740                           
 16741                           ;main.c: 352: remainingSteps--;
 16742  0DEA  30FF               	movlw	255
 16743  0DEB  0022               	movlb	2	; select bank2
 16744  0DEC  07C2               	addwf	_remainingSteps^(0+256),f
 16745  0DED  30FF               	movlw	255
 16746  0DEE  3DC3               	addwfc	(_remainingSteps+1)^(0+256),f
 16747  0DEF  30FF               	movlw	255
 16748  0DF0  3DC4               	addwfc	(_remainingSteps+2)^(0+256),f
 16749  0DF1  30FF               	movlw	255
 16750  0DF2  3DC5               	addwfc	(_remainingSteps+3)^(0+256),f
 16751                           
 16752                           ;main.c: 355: for(j = 0; j<24; j++)
 16753  0DF3  0021               	movlb	1	; select bank1
 16754  0DF4  01DC               	clrf	doRelMove@j^(0+128)
 16755  0DF5  01DD               	clrf	(doRelMove@j+1)^(0+128)
 16756  0DF6                     L35:	
 16757  0DF6  085D               	movf	(doRelMove@j+1)^(0+128),w
 16758  0DF7  3A80               	xorlw	128
 16759  0DF8  00CC               	movwf	??_doRelMove^(0+128)
 16760  0DF9  3080               	movlw	128
 16761  0DFA  024C               	subwf	??_doRelMove^(0+128),w
 16762  0DFB  1D03               	skipz
 16763  0DFC  2DFF               	goto	u8405
 16764  0DFD  3018               	movlw	24
 16765  0DFE  025C               	subwf	doRelMove@j^(0+128),w
 16766  0DFF                     u8405:	
 16767  0DFF  1803               	btfsc	3,0
 16768  0E00  0008               	return
 16769                           
 16770                           ;main.c: 356: currentPositions_steps[j] += (activeMask & (1UL<<j) > 0);
 16771  0E01  0021               	movlb	1	; select bank1
 16772  0E02  0863               	movf	_activeMask^(0+128),w
 16773  0E03  00CC               	movwf	??_doRelMove^(0+128)
 16774  0E04  0864               	movf	(_activeMask+1)^(0+128),w
 16775  0E05  00CD               	movwf	(??_doRelMove^(0+128)+1)
 16776  0E06  0865               	movf	(_activeMask+2)^(0+128),w
 16777  0E07  00CE               	movwf	(??_doRelMove^(0+128)+2)
 16778  0E08  0866               	movf	(_activeMask+3)^(0+128),w
 16779  0E09  00CF               	movwf	(??_doRelMove^(0+128)+3)
 16780  0E0A  3001               	movlw	1
 16781  0E0B  00D0               	movwf	(??_doRelMove+4)^(0+128)
 16782  0E0C  3000               	movlw	0
 16783  0E0D  00D1               	movwf	((??_doRelMove+4)^(0+128)+1)
 16784  0E0E  3000               	movlw	0
 16785  0E0F  00D2               	movwf	((??_doRelMove+4)^(0+128)+2)
 16786  0E10  3000               	movlw	0
 16787  0E11  00D3               	movwf	((??_doRelMove+4)^(0+128)+3)
 16788  0E12  0A5C               	incf	doRelMove@j^(0+128),w
 16789  0E13  2E18               	goto	u8410
 16790  0E14                     u8415:	
 16791  0E14  35D0               	lslf	(??_doRelMove+4)^(0+128),f
 16792  0E15  0DD1               	rlf	((??_doRelMove+4)^(0+128)+1),f
 16793  0E16  0DD2               	rlf	((??_doRelMove+4)^(0+128)+2),f
 16794  0E17  0DD3               	rlf	((??_doRelMove+4)^(0+128)+3),f
 16795  0E18                     u8410:	
 16796  0E18  0B89               	decfsz	9,f
 16797  0E19  2E14               	goto	u8415
 16798  0E1A  0853               	movf	(??_doRelMove+7)^(0+128),w
 16799  0E1B  0452               	iorwf	(??_doRelMove+6)^(0+128),w
 16800  0E1C  0451               	iorwf	(??_doRelMove+5)^(0+128),w
 16801  0E1D  0450               	iorwf	(??_doRelMove+4)^(0+128),w
 16802  0E1E  1903               	btfsc	3,2
 16803  0E1F  2E22               	goto	u8420
 16804  0E20  3001               	movlw	1
 16805  0E21  2E23               	goto	u8430
 16806  0E22                     u8420:	
 16807  0E22  3000               	movlw	0
 16808  0E23                     u8430:	
 16809  0E23  00D4               	movwf	(??_doRelMove+8)^(0+128)
 16810  0E24  01D5               	clrf	((??_doRelMove+8)^(0+128)+1)
 16811  0E25  01D6               	clrf	((??_doRelMove+8)^(0+128)+2)
 16812  0E26  01D7               	clrf	((??_doRelMove+8)^(0+128)+3)
 16813  0E27  0854               	movf	(??_doRelMove+8)^(0+128),w
 16814  0E28  05CC               	andwf	??_doRelMove^(0+128),f
 16815  0E29  0855               	movf	(??_doRelMove+9)^(0+128),w
 16816  0E2A  05CD               	andwf	(??_doRelMove^(0+128)+1),f
 16817  0E2B  0856               	movf	(??_doRelMove+10)^(0+128),w
 16818  0E2C  05CE               	andwf	(??_doRelMove^(0+128)+2),f
 16819  0E2D  0857               	movf	(??_doRelMove+11)^(0+128),w
 16820  0E2E  05CF               	andwf	(??_doRelMove^(0+128)+3),f
 16821  0E2F  085D               	movf	(doRelMove@j+1)^(0+128),w
 16822  0E30  00D9               	movwf	((??_doRelMove+12)^(0+128)+1)
 16823  0E31  085C               	movf	doRelMove@j^(0+128),w
 16824  0E32  00D8               	movwf	(??_doRelMove+12)^(0+128)
 16825  0E33  35D8               	lslf	(??_doRelMove+12)^(0+128),f
 16826  0E34  0DD9               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16827  0E35  35D8               	lslf	(??_doRelMove+12)^(0+128),f
 16828  0E36  0DD9               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16829  0E37  3090               	movlw	144
 16830  0E38  00DA               	movwf	(??_doRelMove+14)^(0+128)
 16831  0E39  3027               	movlw	39
 16832  0E3A  00DB               	movwf	((??_doRelMove+14)^(0+128)+1)
 16833  0E3B  0858               	movf	(??_doRelMove+12)^(0+128),w
 16834  0E3C  075A               	addwf	(??_doRelMove+14)^(0+128),w
 16835  0E3D  0086               	movwf	6
 16836  0E3E  0859               	movf	(??_doRelMove+13)^(0+128),w
 16837  0E3F  3D5B               	addwfc	(??_doRelMove+15)^(0+128),w
 16838  0E40  0087               	movwf	7
 16839  0E41  084C               	movf	??_doRelMove^(0+128),w
 16840  0E42  0781               	addwf	1,f
 16841  0E43  3141               	addfsr 1,1
 16842  0E44  084D               	movf	(??_doRelMove+1)^(0+128),w
 16843  0E45  3D81               	addwfc	1,f
 16844  0E46  3141               	addfsr 1,1
 16845  0E47  084E               	movf	(??_doRelMove+2)^(0+128),w
 16846  0E48  3D81               	addwfc	1,f
 16847  0E49  3141               	addfsr 1,1
 16848  0E4A  084F               	movf	(??_doRelMove+3)^(0+128),w
 16849  0E4B  3D81               	addwfc	1,f
 16850  0E4C  3001               	movlw	1
 16851  0E4D  07DC               	addwf	doRelMove@j^(0+128),f
 16852  0E4E  3000               	movlw	0
 16853  0E4F  3DDD               	addwfc	(doRelMove@j+1)^(0+128),f
 16854  0E50  2DF6               	goto	L35
 16855  0E51                     l8583:	
 16856                           ;main.c: 358: }
 16857                           
 16858                           
 16859                           ;main.c: 359: else{
 16860                           ;main.c: 360: moveVector_ups = activeMask;
 16861  0E51  0021               	movlb	1	; select bank1
 16862  0E52  0866               	movf	(_activeMask+3)^(0+128),w
 16863  0E53  00EA               	movwf	(_moveVector_ups+3)^(0+128)
 16864  0E54  0865               	movf	(_activeMask+2)^(0+128),w
 16865  0E55  00E9               	movwf	(_moveVector_ups+2)^(0+128)
 16866  0E56  0864               	movf	(_activeMask+1)^(0+128),w
 16867  0E57  00E8               	movwf	(_moveVector_ups+1)^(0+128)
 16868  0E58  0863               	movf	_activeMask^(0+128),w
 16869  0E59  00E7               	movwf	_moveVector_ups^(0+128)
 16870                           
 16871                           ;main.c: 361: moveVector_downs = 0;
 16872  0E5A  3000               	movlw	0
 16873  0E5B  0020               	movlb	0	; select bank0
 16874  0E5C  00D1               	movwf	_moveVector_downs+3
 16875  0E5D  3000               	movlw	0
 16876  0E5E  00D0               	movwf	_moveVector_downs+2
 16877  0E5F  3000               	movlw	0
 16878  0E60  00CF               	movwf	_moveVector_downs+1
 16879  0E61  3000               	movlw	0
 16880  0E62  00CE               	movwf	_moveVector_downs
 16881                           
 16882                           ;main.c: 363: doMove();
 16883  0E63  3187  273B  318D   	fcall	_doMove
 16884                           
 16885                           ;main.c: 364: remainingSteps++;
 16886  0E66  3001               	movlw	1
 16887  0E67  0022               	movlb	2	; select bank2
 16888  0E68  07C2               	addwf	_remainingSteps^(0+256),f
 16889  0E69  3000               	movlw	0
 16890  0E6A  3DC3               	addwfc	(_remainingSteps+1)^(0+256),f
 16891  0E6B  3000               	movlw	0
 16892  0E6C  3DC4               	addwfc	(_remainingSteps+2)^(0+256),f
 16893  0E6D  3000               	movlw	0
 16894  0E6E  3DC5               	addwfc	(_remainingSteps+3)^(0+256),f
 16895                           
 16896                           ;main.c: 365: for(j = 0; j<24; j++)
 16897  0E6F  0021               	movlb	1	; select bank1
 16898  0E70  01DC               	clrf	doRelMove@j^(0+128)
 16899  0E71  01DD               	clrf	(doRelMove@j+1)^(0+128)
 16900  0E72                     L36:	
 16901  0E72  085D               	movf	(doRelMove@j+1)^(0+128),w
 16902  0E73  3A80               	xorlw	128
 16903  0E74  00CC               	movwf	??_doRelMove^(0+128)
 16904  0E75  3080               	movlw	128
 16905  0E76  024C               	subwf	??_doRelMove^(0+128),w
 16906  0E77  1D03               	skipz
 16907  0E78  2E7B               	goto	u8455
 16908  0E79  3018               	movlw	24
 16909  0E7A  025C               	subwf	doRelMove@j^(0+128),w
 16910  0E7B                     u8455:	
 16911  0E7B  1803               	btfsc	3,0
 16912  0E7C  0008               	return
 16913                           
 16914                           ;main.c: 366: currentPositions_steps[j] -= (activeMask & (1UL<<j) > 0);
 16915  0E7D  0021               	movlb	1	; select bank1
 16916  0E7E  0863               	movf	_activeMask^(0+128),w
 16917  0E7F  00CC               	movwf	??_doRelMove^(0+128)
 16918  0E80  0864               	movf	(_activeMask+1)^(0+128),w
 16919  0E81  00CD               	movwf	(??_doRelMove^(0+128)+1)
 16920  0E82  0865               	movf	(_activeMask+2)^(0+128),w
 16921  0E83  00CE               	movwf	(??_doRelMove^(0+128)+2)
 16922  0E84  0866               	movf	(_activeMask+3)^(0+128),w
 16923  0E85  00CF               	movwf	(??_doRelMove^(0+128)+3)
 16924  0E86  3001               	movlw	1
 16925  0E87  00D0               	movwf	(??_doRelMove+4)^(0+128)
 16926  0E88  3000               	movlw	0
 16927  0E89  00D1               	movwf	((??_doRelMove+4)^(0+128)+1)
 16928  0E8A  3000               	movlw	0
 16929  0E8B  00D2               	movwf	((??_doRelMove+4)^(0+128)+2)
 16930  0E8C  3000               	movlw	0
 16931  0E8D  00D3               	movwf	((??_doRelMove+4)^(0+128)+3)
 16932  0E8E  0A5C               	incf	doRelMove@j^(0+128),w
 16933  0E8F  2E94               	goto	u8460
 16934  0E90                     u8465:	
 16935  0E90  35D0               	lslf	(??_doRelMove+4)^(0+128),f
 16936  0E91  0DD1               	rlf	((??_doRelMove+4)^(0+128)+1),f
 16937  0E92  0DD2               	rlf	((??_doRelMove+4)^(0+128)+2),f
 16938  0E93  0DD3               	rlf	((??_doRelMove+4)^(0+128)+3),f
 16939  0E94                     u8460:	
 16940  0E94  0B89               	decfsz	9,f
 16941  0E95  2E90               	goto	u8465
 16942  0E96  0853               	movf	(??_doRelMove+7)^(0+128),w
 16943  0E97  0452               	iorwf	(??_doRelMove+6)^(0+128),w
 16944  0E98  0451               	iorwf	(??_doRelMove+5)^(0+128),w
 16945  0E99  0450               	iorwf	(??_doRelMove+4)^(0+128),w
 16946  0E9A  1903               	btfsc	3,2
 16947  0E9B  2E9E               	goto	u8470
 16948  0E9C  3001               	movlw	1
 16949  0E9D  2E9F               	goto	u8480
 16950  0E9E                     u8470:	
 16951  0E9E  3000               	movlw	0
 16952  0E9F                     u8480:	
 16953  0E9F  00D4               	movwf	(??_doRelMove+8)^(0+128)
 16954  0EA0  01D5               	clrf	((??_doRelMove+8)^(0+128)+1)
 16955  0EA1  01D6               	clrf	((??_doRelMove+8)^(0+128)+2)
 16956  0EA2  01D7               	clrf	((??_doRelMove+8)^(0+128)+3)
 16957  0EA3  0854               	movf	(??_doRelMove+8)^(0+128),w
 16958  0EA4  05CC               	andwf	??_doRelMove^(0+128),f
 16959  0EA5  0855               	movf	(??_doRelMove+9)^(0+128),w
 16960  0EA6  05CD               	andwf	(??_doRelMove^(0+128)+1),f
 16961  0EA7  0856               	movf	(??_doRelMove+10)^(0+128),w
 16962  0EA8  05CE               	andwf	(??_doRelMove^(0+128)+2),f
 16963  0EA9  0857               	movf	(??_doRelMove+11)^(0+128),w
 16964  0EAA  05CF               	andwf	(??_doRelMove^(0+128)+3),f
 16965  0EAB  085D               	movf	(doRelMove@j+1)^(0+128),w
 16966  0EAC  00D9               	movwf	((??_doRelMove+12)^(0+128)+1)
 16967  0EAD  085C               	movf	doRelMove@j^(0+128),w
 16968  0EAE  00D8               	movwf	(??_doRelMove+12)^(0+128)
 16969  0EAF  35D8               	lslf	(??_doRelMove+12)^(0+128),f
 16970  0EB0  0DD9               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16971  0EB1  35D8               	lslf	(??_doRelMove+12)^(0+128),f
 16972  0EB2  0DD9               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16973  0EB3  3090               	movlw	144
 16974  0EB4  00DA               	movwf	(??_doRelMove+14)^(0+128)
 16975  0EB5  3027               	movlw	39
 16976  0EB6  00DB               	movwf	((??_doRelMove+14)^(0+128)+1)
 16977  0EB7  0858               	movf	(??_doRelMove+12)^(0+128),w
 16978  0EB8  075A               	addwf	(??_doRelMove+14)^(0+128),w
 16979  0EB9  0086               	movwf	6
 16980  0EBA  0859               	movf	(??_doRelMove+13)^(0+128),w
 16981  0EBB  3D5B               	addwfc	(??_doRelMove+15)^(0+128),w
 16982  0EBC  0087               	movwf	7
 16983  0EBD  084C               	movf	??_doRelMove^(0+128),w
 16984  0EBE  0281               	subwf	1,f
 16985  0EBF  3141               	addfsr 1,1
 16986  0EC0  084D               	movf	(??_doRelMove+1)^(0+128),w
 16987  0EC1  3B81               	subwfb	1,f
 16988  0EC2  3141               	addfsr 1,1
 16989  0EC3  084E               	movf	(??_doRelMove+2)^(0+128),w
 16990  0EC4  3B81               	subwfb	1,f
 16991  0EC5  3141               	addfsr 1,1
 16992  0EC6  084F               	movf	(??_doRelMove+3)^(0+128),w
 16993  0EC7  3B81               	subwfb	1,f
 16994  0EC8  317D               	addfsr 1,-3
 16995  0EC9  3001               	movlw	1
 16996  0ECA  07DC               	addwf	doRelMove@j^(0+128),f
 16997  0ECB  3000               	movlw	0
 16998  0ECC  3DDD               	addwfc	(doRelMove@j+1)^(0+128),f
 16999  0ECD  2E72               	goto	L36
 17000  0ECE                     __end_of_doRelMove:	
 17001                           
 17002                           	psect	text56
 17003  00C5                     __ptext56:	
 17004 ;; *************** function _doAbsMove *****************
 17005 ;; Defined at:
 17006 ;;		line 306 in file "main.c"
 17007 ;; Parameters:    Size  Location     Type
 17008 ;;		None
 17009 ;; Auto vars:     Size  Location     Type
 17010 ;;  i               2   48[BANK1 ] int 
 17011 ;;  i               2   50[BANK1 ] int 
 17012 ;;  i               2   46[BANK1 ] int 
 17013 ;;  allThere        2   44[BANK1 ] int 
 17014 ;; Return value:  Size  Location     Type
 17015 ;;                  1    wreg      void 
 17016 ;; Registers used:
 17017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17018 ;; Tracked objects:
 17019 ;;		On entry : 0/0
 17020 ;;		On exit  : 0/0
 17021 ;;		Unchanged: 0/0
 17022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17024 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17025 ;;      Temps:          0       0       0       0       0      28       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17026 ;;      Totals:         0       0       8       0       0      28       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17027 ;;Total ram usage:       36 bytes
 17028 ;; Hardware stack levels used:    1
 17029 ;; Hardware stack levels required when called:   16
 17030 ;; This function calls:
 17031 ;;		_doMove
 17032 ;;		_printf
 17033 ;; This function is called by:
 17034 ;;		_main
 17035 ;; This function uses a non-reentrant model
 17036 ;;
 17037                           
 17038                           
 17039                           ;psect for function _doAbsMove
 17040  00C5                     _doAbsMove:	
 17041                           
 17042                           ;main.c: 309: int allThere=1;
 17043                           
 17044                           ;incstack = 0
 17045 ;; hardware stack exceeded
 17046                           ; Regs used in _doAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17047  00C5  3001               	movlw	1
 17048  00C6  0021               	movlb	1	; select bank1
 17049  00C7  00CC               	movwf	doAbsMove@allThere^(0+128)
 17050  00C8  3000               	movlw	0
 17051  00C9  00CD               	movwf	(doAbsMove@allThere^(0+128)+1)
 17052                           
 17053                           ;main.c: 310: for(int i=0;i<24;i++){
 17054  00CA  01CE               	clrf	doAbsMove@i^(0+128)
 17055  00CB  01CF               	clrf	(doAbsMove@i+1)^(0+128)
 17056  00CC  084F               	movf	(doAbsMove@i+1)^(0+128),w
 17057  00CD  3A80               	xorlw	128
 17058  00CE  0024               	movlb	4	; select bank4
 17059  00CF  00C0               	movwf	??_doAbsMove^(0+512)
 17060  00D0  3080               	movlw	128
 17061  00D1  0240               	subwf	??_doAbsMove^(0+512),w
 17062  00D2  1D03               	skipz
 17063  00D3  28D7               	goto	u8505
 17064  00D4  3018               	movlw	24
 17065  00D5  0021               	movlb	1	; select bank1
 17066  00D6  024E               	subwf	doAbsMove@i^(0+128),w
 17067  00D7                     u8505:	
 17068  00D7  1803               	btfsc	3,0
 17069  00D8  295D               	goto	l8617
 17070  00D9                     l8609:	
 17071                           
 17072                           ;main.c: 311: if((activeMask & (1UL << i)) > 0)
 17073  00D9  0021               	movlb	1	; select bank1
 17074  00DA  0863               	movf	_activeMask^(0+128),w
 17075  00DB  0024               	movlb	4	; select bank4
 17076  00DC  00C0               	movwf	??_doAbsMove^(0+512)
 17077  00DD  0021               	movlb	1	; select bank1
 17078  00DE  0864               	movf	(_activeMask+1)^(0+128),w
 17079  00DF  0024               	movlb	4	; select bank4
 17080  00E0  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 17081  00E1  0021               	movlb	1	; select bank1
 17082  00E2  0865               	movf	(_activeMask+2)^(0+128),w
 17083  00E3  0024               	movlb	4	; select bank4
 17084  00E4  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 17085  00E5  0021               	movlb	1	; select bank1
 17086  00E6  0866               	movf	(_activeMask+3)^(0+128),w
 17087  00E7  0024               	movlb	4	; select bank4
 17088  00E8  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 17089  00E9  3001               	movlw	1
 17090  00EA  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17091  00EB  3000               	movlw	0
 17092  00EC  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17093  00ED  3000               	movlw	0
 17094  00EE  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 17095  00EF  3000               	movlw	0
 17096  00F0  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 17097  00F1  0021               	movlb	1	; select bank1
 17098  00F2  0A4E               	incf	doAbsMove@i^(0+128),w
 17099  00F3  0024               	movlb	4	; select bank4
 17100  00F4  28F9               	goto	u8510
 17101  00F5                     u8515:	
 17102  00F5  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17103  00F6  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17104  00F7  0DC6               	rlf	((??_doAbsMove+4)^(0+512)+2),f
 17105  00F8  0DC7               	rlf	((??_doAbsMove+4)^(0+512)+3),f
 17106  00F9                     u8510:	
 17107  00F9  0B89               	decfsz	9,f
 17108  00FA  28F5               	goto	u8515
 17109  00FB  0844               	movf	(??_doAbsMove+4)^(0+512),w
 17110  00FC  05C0               	andwf	??_doAbsMove^(0+512),f
 17111  00FD  0845               	movf	(??_doAbsMove+5)^(0+512),w
 17112  00FE  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17113  00FF  0846               	movf	(??_doAbsMove+6)^(0+512),w
 17114  0100  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17115  0101  0847               	movf	(??_doAbsMove+7)^(0+512),w
 17116  0102  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17117  0103  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17118  0104  0442               	iorwf	(??_doAbsMove+2)^(0+512),w
 17119  0105  0441               	iorwf	(??_doAbsMove+1)^(0+512),w
 17120  0106  0440               	iorwf	??_doAbsMove^(0+512),w
 17121  0107  1903               	skipnz
 17122  0108  294B               	goto	l8613
 17123                           
 17124                           ;main.c: 312: allThere &= (currentPositions_steps[i] == absCommand);
 17125  0109  0021               	movlb	1	; select bank1
 17126  010A  084F               	movf	(doAbsMove@i+1)^(0+128),w
 17127  010B  0024               	movlb	4	; select bank4
 17128  010C  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 17129  010D  0021               	movlb	1	; select bank1
 17130  010E  084E               	movf	doAbsMove@i^(0+128),w
 17131  010F  0024               	movlb	4	; select bank4
 17132  0110  00C0               	movwf	??_doAbsMove^(0+512)
 17133  0111  35C0               	lslf	??_doAbsMove^(0+512),f
 17134  0112  0DC1               	rlf	(??_doAbsMove^(0+512)+1),f
 17135  0113  35C0               	lslf	??_doAbsMove^(0+512),f
 17136  0114  0DC1               	rlf	(??_doAbsMove^(0+512)+1),f
 17137  0115  3090               	movlw	144
 17138  0116  00C2               	movwf	(??_doAbsMove+2)^(0+512)
 17139  0117  3027               	movlw	39
 17140  0118  00C3               	movwf	((??_doAbsMove+2)^(0+512)+1)
 17141  0119  0840               	movf	??_doAbsMove^(0+512),w
 17142  011A  0742               	addwf	(??_doAbsMove+2)^(0+512),w
 17143  011B  0086               	movwf	6
 17144  011C  0841               	movf	(??_doAbsMove+1)^(0+512),w
 17145  011D  3D43               	addwfc	(??_doAbsMove+3)^(0+512),w
 17146  011E  0087               	movwf	7
 17147  011F  3F40               	moviw [0]fsr1
 17148  0120  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17149  0121  3F41               	moviw [1]fsr1
 17150  0122  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17151  0123  3F42               	moviw [2]fsr1
 17152  0124  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 17153  0125  3F43               	moviw [3]fsr1
 17154  0126  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 17155  0127  0022               	movlb	2	; select bank2
 17156  0128  0841               	movf	(_absCommand+3)^(0+256),w
 17157  0129  0024               	movlb	4	; select bank4
 17158  012A  0647               	xorwf	(??_doAbsMove+7)^(0+512),w
 17159  012B  1D03               	skipz
 17160  012C  293D               	goto	u8535
 17161  012D  0022               	movlb	2	; select bank2
 17162  012E  0840               	movf	(_absCommand+2)^(0+256),w
 17163  012F  0024               	movlb	4	; select bank4
 17164  0130  0646               	xorwf	(??_doAbsMove+6)^(0+512),w
 17165  0131  1D03               	skipz
 17166  0132  293D               	goto	u8535
 17167  0133  0022               	movlb	2	; select bank2
 17168  0134  083F               	movf	(_absCommand+1)^(0+256),w
 17169  0135  0024               	movlb	4	; select bank4
 17170  0136  0645               	xorwf	(??_doAbsMove+5)^(0+512),w
 17171  0137  1D03               	skipz
 17172  0138  293D               	goto	u8535
 17173  0139  0022               	movlb	2	; select bank2
 17174  013A  083E               	movf	_absCommand^(0+256),w
 17175  013B  0024               	movlb	4	; select bank4
 17176  013C  0644               	xorwf	(??_doAbsMove+4)^(0+512),w
 17177  013D                     u8535:	
 17178  013D  1D03               	btfss	3,2
 17179  013E  2941               	goto	u8530
 17180  013F  3001               	movlw	1
 17181  0140  2942               	goto	u8540
 17182  0141                     u8530:	
 17183  0141  3000               	movlw	0
 17184  0142                     u8540:	
 17185  0142  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 17186  0143  01C9               	clrf	((??_doAbsMove+8)^(0+512)+1)
 17187  0144  0848               	movf	(??_doAbsMove+8)^(0+512),w
 17188  0145  0021               	movlb	1	; select bank1
 17189  0146  05CC               	andwf	doAbsMove@allThere^(0+128),f
 17190  0147  0024               	movlb	4	; select bank4
 17191  0148  0849               	movf	(??_doAbsMove+9)^(0+512),w
 17192  0149  0021               	movlb	1	; select bank1
 17193  014A  05CD               	andwf	(doAbsMove@allThere+1)^(0+128),f
 17194  014B                     l8613:	
 17195  014B  3001               	movlw	1
 17196  014C  0021               	movlb	1	; select bank1
 17197  014D  07CE               	addwf	doAbsMove@i^(0+128),f
 17198  014E  3000               	movlw	0
 17199  014F  3DCF               	addwfc	(doAbsMove@i+1)^(0+128),f
 17200  0150  084F               	movf	(doAbsMove@i+1)^(0+128),w
 17201  0151  3A80               	xorlw	128
 17202  0152  0024               	movlb	4	; select bank4
 17203  0153  00C0               	movwf	??_doAbsMove^(0+512)
 17204  0154  3080               	movlw	128
 17205  0155  0240               	subwf	??_doAbsMove^(0+512),w
 17206  0156  1D03               	skipz
 17207  0157  295B               	goto	u8555
 17208  0158  3018               	movlw	24
 17209  0159  0021               	movlb	1	; select bank1
 17210  015A  024E               	subwf	doAbsMove@i^(0+128),w
 17211  015B                     u8555:	
 17212  015B  1C03               	skipc
 17213  015C  28D9               	goto	l8609
 17214  015D                     l8617:	
 17215                           
 17216                           ;main.c: 313: }
 17217                           ;main.c: 315: if(allThere){
 17218  015D  0021               	movlb	1	; select bank1
 17219  015E  084C               	movf	doAbsMove@allThere^(0+128),w
 17220  015F  044D               	iorwf	(doAbsMove@allThere+1)^(0+128),w
 17221  0160  1903               	btfsc	3,2
 17222  0161  297D               	goto	l8631
 17223                           
 17224                           ;main.c: 316: printf("abs: all there\n");
 17225  0162  3010               	movlw	low (STR_10| (0+32768))
 17226  0163  00A0               	movwf	printf@f^(0+128)
 17227  0164  30A9               	movlw	high (STR_10| (0+32768))
 17228  0165  00A1               	movwf	(printf@f^(0+128)+1)
 17229  0166  318E  26CE         	fcall	_printf
 17230                           
 17231                           ;main.c: 317: motionType = NONE;
 17232  0168  0020               	movlb	0	; select bank0
 17233  0169  01D5               	clrf	_motionType
 17234                           
 17235                           ;main.c: 318: moveVector_ups = 0;
 17236  016A  3000               	movlw	0
 17237  016B  0021               	movlb	1	; select bank1
 17238  016C  00EA               	movwf	(_moveVector_ups+3)^(0+128)
 17239  016D  3000               	movlw	0
 17240  016E  00E9               	movwf	(_moveVector_ups+2)^(0+128)
 17241  016F  3000               	movlw	0
 17242  0170  00E8               	movwf	(_moveVector_ups+1)^(0+128)
 17243  0171  3000               	movlw	0
 17244  0172  00E7               	movwf	_moveVector_ups^(0+128)
 17245                           
 17246                           ;main.c: 319: moveVector_downs = 0;
 17247  0173  3000               	movlw	0
 17248  0174  0020               	movlb	0	; select bank0
 17249  0175  00D1               	movwf	_moveVector_downs+3
 17250  0176  3000               	movlw	0
 17251  0177  00D0               	movwf	_moveVector_downs+2
 17252  0178  3000               	movlw	0
 17253  0179  00CF               	movwf	_moveVector_downs+1
 17254  017A  3000               	movlw	0
 17255  017B  00CE               	movwf	_moveVector_downs
 17256                           
 17257                           ;main.c: 321: }
 17258                           
 17259                           ;main.c: 320: return;
 17260  017C  0008               	return
 17261  017D                     l8631:	
 17262                           
 17263                           ;main.c: 322: else{
 17264                           ;main.c: 323: for(int i=0;i<24;i++){
 17265  017D  0021               	movlb	1	; select bank1
 17266  017E  01D2               	clrf	doAbsMove@i_1584^(0+128)
 17267  017F  01D3               	clrf	(doAbsMove@i_1584+1)^(0+128)
 17268  0180  0853               	movf	(doAbsMove@i_1584+1)^(0+128),w
 17269  0181  3A80               	xorlw	128
 17270  0182  0024               	movlb	4	; select bank4
 17271  0183  00C0               	movwf	??_doAbsMove^(0+512)
 17272  0184  3080               	movlw	128
 17273  0185  0240               	subwf	??_doAbsMove^(0+512),w
 17274  0186  1D03               	skipz
 17275  0187  298B               	goto	u8575
 17276  0188  3018               	movlw	24
 17277  0189  0021               	movlb	1	; select bank1
 17278  018A  0252               	subwf	doAbsMove@i_1584^(0+128),w
 17279  018B                     u8575:	
 17280  018B  1803               	btfsc	3,0
 17281  018C  2AC2               	goto	l8643
 17282  018D                     l8637:	
 17283                           
 17284                           ;main.c: 325: moveVector_ups |= (activeMask & (1UL << i)) & ((currentPositions_steps[i] 
      +                          > absCommand)<<i);
 17285  018D  0021               	movlb	1	; select bank1
 17286  018E  0863               	movf	_activeMask^(0+128),w
 17287  018F  0024               	movlb	4	; select bank4
 17288  0190  00C0               	movwf	??_doAbsMove^(0+512)
 17289  0191  0021               	movlb	1	; select bank1
 17290  0192  0864               	movf	(_activeMask+1)^(0+128),w
 17291  0193  0024               	movlb	4	; select bank4
 17292  0194  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 17293  0195  0021               	movlb	1	; select bank1
 17294  0196  0865               	movf	(_activeMask+2)^(0+128),w
 17295  0197  0024               	movlb	4	; select bank4
 17296  0198  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 17297  0199  0021               	movlb	1	; select bank1
 17298  019A  0866               	movf	(_activeMask+3)^(0+128),w
 17299  019B  0024               	movlb	4	; select bank4
 17300  019C  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 17301  019D  0021               	movlb	1	; select bank1
 17302  019E  0853               	movf	(doAbsMove@i_1584+1)^(0+128),w
 17303  019F  0024               	movlb	4	; select bank4
 17304  01A0  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17305  01A1  0021               	movlb	1	; select bank1
 17306  01A2  0852               	movf	doAbsMove@i_1584^(0+128),w
 17307  01A3  0024               	movlb	4	; select bank4
 17308  01A4  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17309  01A5  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17310  01A6  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17311  01A7  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17312  01A8  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17313  01A9  3090               	movlw	144
 17314  01AA  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 17315  01AB  3027               	movlw	39
 17316  01AC  00C7               	movwf	((??_doAbsMove+6)^(0+512)+1)
 17317  01AD  0844               	movf	(??_doAbsMove+4)^(0+512),w
 17318  01AE  0746               	addwf	(??_doAbsMove+6)^(0+512),w
 17319  01AF  0086               	movwf	6
 17320  01B0  0845               	movf	(??_doAbsMove+5)^(0+512),w
 17321  01B1  3D47               	addwfc	(??_doAbsMove+7)^(0+512),w
 17322  01B2  0087               	movwf	7
 17323  01B3  3F40               	moviw [0]fsr1
 17324  01B4  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 17325  01B5  3F41               	moviw [1]fsr1
 17326  01B6  00C9               	movwf	((??_doAbsMove+8)^(0+512)+1)
 17327  01B7  3F42               	moviw [2]fsr1
 17328  01B8  00CA               	movwf	((??_doAbsMove+8)^(0+512)+2)
 17329  01B9  3F43               	moviw [3]fsr1
 17330  01BA  00CB               	movwf	((??_doAbsMove+8)^(0+512)+3)
 17331  01BB  0022               	movlb	2	; select bank2
 17332  01BC  0841               	movf	(_absCommand+3)^(0+256),w
 17333  01BD  3A80               	xorlw	128
 17334  01BE  0024               	movlb	4	; select bank4
 17335  01BF  00CC               	movwf	(??_doAbsMove+12)^(0+512)
 17336  01C0  084B               	movf	(??_doAbsMove+11)^(0+512),w
 17337  01C1  3A80               	xorlw	128
 17338  01C2  024C               	subwf	(??_doAbsMove+12)^(0+512),w
 17339  01C3  0022               	movlb	2	; select bank2
 17340  01C4  1D03               	skipz
 17341  01C5  29D6               	goto	u8583
 17342  01C6  0024               	movlb	4	; select bank4
 17343  01C7  084A               	movf	(??_doAbsMove+10)^(0+512),w
 17344  01C8  0022               	movlb	2	; select bank2
 17345  01C9  0240               	subwf	(_absCommand+2)^(0+256),w
 17346  01CA  1D03               	skipz
 17347  01CB  29D6               	goto	u8583
 17348  01CC  0024               	movlb	4	; select bank4
 17349  01CD  0849               	movf	(??_doAbsMove+9)^(0+512),w
 17350  01CE  0022               	movlb	2	; select bank2
 17351  01CF  023F               	subwf	(_absCommand+1)^(0+256),w
 17352  01D0  1D03               	skipz
 17353  01D1  29D6               	goto	u8583
 17354  01D2  0024               	movlb	4	; select bank4
 17355  01D3  0848               	movf	(??_doAbsMove+8)^(0+512),w
 17356  01D4  0022               	movlb	2	; select bank2
 17357  01D5  023E               	subwf	_absCommand^(0+256),w
 17358  01D6                     u8583:	
 17359  01D6  1803               	btfsc	3,0
 17360  01D7  29DA               	goto	u8580
 17361  01D8  3001               	movlw	1
 17362  01D9  29DB               	goto	u8590
 17363  01DA                     u8580:	
 17364  01DA  3000               	movlw	0
 17365  01DB                     u8590:	
 17366  01DB  0024               	movlb	4	; select bank4
 17367  01DC  00CD               	movwf	(??_doAbsMove+13)^(0+512)
 17368  01DD  01CE               	clrf	((??_doAbsMove+13)^(0+512)+1)
 17369  01DE  0021               	movlb	1	; select bank1
 17370  01DF  0A52               	incf	doAbsMove@i_1584^(0+128),w
 17371  01E0  0024               	movlb	4	; select bank4
 17372  01E1  29E4               	goto	u8604
 17373  01E2                     u8605:	
 17374  01E2  35CD               	lslf	(??_doAbsMove+13)^(0+512),f
 17375  01E3  0DCE               	rlf	((??_doAbsMove+13)^(0+512)+1),f
 17376  01E4                     u8604:	
 17377  01E4  0B89               	decfsz	9,f
 17378  01E5  29E2               	goto	u8605
 17379  01E6  084D               	movf	(??_doAbsMove+13)^(0+512),w
 17380  01E7  00CF               	movwf	(??_doAbsMove+15)^(0+512)
 17381  01E8  084E               	movf	(??_doAbsMove+14)^(0+512),w
 17382  01E9  00D0               	movwf	((??_doAbsMove+15)^(0+512)+1)
 17383  01EA  3000               	movlw	0
 17384  01EB  1BD0               	btfsc	((??_doAbsMove+15)^(0+512)+1),7
 17385  01EC  30FF               	movlw	255
 17386  01ED  00D1               	movwf	((??_doAbsMove+15)^(0+512)+2)
 17387  01EE  00D2               	movwf	((??_doAbsMove+15)^(0+512)+3)
 17388  01EF  3001               	movlw	1
 17389  01F0  00D3               	movwf	(??_doAbsMove+19)^(0+512)
 17390  01F1  3000               	movlw	0
 17391  01F2  00D4               	movwf	((??_doAbsMove+19)^(0+512)+1)
 17392  01F3  3000               	movlw	0
 17393  01F4  00D5               	movwf	((??_doAbsMove+19)^(0+512)+2)
 17394  01F5  3000               	movlw	0
 17395  01F6  00D6               	movwf	((??_doAbsMove+19)^(0+512)+3)
 17396  01F7  0021               	movlb	1	; select bank1
 17397  01F8  0A52               	incf	doAbsMove@i_1584^(0+128),w
 17398  01F9  0024               	movlb	4	; select bank4
 17399  01FA  29FF               	goto	u8610
 17400  01FB                     u8615:	
 17401  01FB  35D3               	lslf	(??_doAbsMove+19)^(0+512),f
 17402  01FC  0DD4               	rlf	((??_doAbsMove+19)^(0+512)+1),f
 17403  01FD  0DD5               	rlf	((??_doAbsMove+19)^(0+512)+2),f
 17404  01FE  0DD6               	rlf	((??_doAbsMove+19)^(0+512)+3),f
 17405  01FF                     u8610:	
 17406  01FF  0B89               	decfsz	9,f
 17407  0200  29FB               	goto	u8615
 17408  0201  0853               	movf	(??_doAbsMove+19)^(0+512),w
 17409  0202  05CF               	andwf	(??_doAbsMove+15)^(0+512),f
 17410  0203  0854               	movf	(??_doAbsMove+20)^(0+512),w
 17411  0204  05D0               	andwf	((??_doAbsMove+15)^(0+512)+1),f
 17412  0205  0855               	movf	(??_doAbsMove+21)^(0+512),w
 17413  0206  05D1               	andwf	((??_doAbsMove+15)^(0+512)+2),f
 17414  0207  0856               	movf	(??_doAbsMove+22)^(0+512),w
 17415  0208  05D2               	andwf	((??_doAbsMove+15)^(0+512)+3),f
 17416  0209  084F               	movf	(??_doAbsMove+15)^(0+512),w
 17417  020A  05C0               	andwf	??_doAbsMove^(0+512),f
 17418  020B  0850               	movf	(??_doAbsMove+16)^(0+512),w
 17419  020C  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17420  020D  0851               	movf	(??_doAbsMove+17)^(0+512),w
 17421  020E  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17422  020F  0852               	movf	(??_doAbsMove+18)^(0+512),w
 17423  0210  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17424  0211  0840               	movf	??_doAbsMove^(0+512),w
 17425  0212  0021               	movlb	1	; select bank1
 17426  0213  04E7               	iorwf	_moveVector_ups^(0+128),f
 17427  0214  0024               	movlb	4	; select bank4
 17428  0215  0841               	movf	(??_doAbsMove+1)^(0+512),w
 17429  0216  0021               	movlb	1	; select bank1
 17430  0217  04E8               	iorwf	(_moveVector_ups+1)^(0+128),f
 17431  0218  0024               	movlb	4	; select bank4
 17432  0219  0842               	movf	(??_doAbsMove+2)^(0+512),w
 17433  021A  0021               	movlb	1	; select bank1
 17434  021B  04E9               	iorwf	(_moveVector_ups+2)^(0+128),f
 17435  021C  0024               	movlb	4	; select bank4
 17436  021D  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17437  021E  0021               	movlb	1	; select bank1
 17438  021F  04EA               	iorwf	(_moveVector_ups+3)^(0+128),f
 17439                           
 17440                           ;main.c: 326: moveVector_downs |= (activeMask & (1UL << i)) & ((currentPositions_steps[i
      +                          ] < absCommand)<<i);
 17441  0220  0863               	movf	_activeMask^(0+128),w
 17442  0221  0024               	movlb	4	; select bank4
 17443  0222  00C0               	movwf	??_doAbsMove^(0+512)
 17444  0223  0021               	movlb	1	; select bank1
 17445  0224  0864               	movf	(_activeMask+1)^(0+128),w
 17446  0225  0024               	movlb	4	; select bank4
 17447  0226  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 17448  0227  0021               	movlb	1	; select bank1
 17449  0228  0865               	movf	(_activeMask+2)^(0+128),w
 17450  0229  0024               	movlb	4	; select bank4
 17451  022A  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 17452  022B  0021               	movlb	1	; select bank1
 17453  022C  0866               	movf	(_activeMask+3)^(0+128),w
 17454  022D  0024               	movlb	4	; select bank4
 17455  022E  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 17456  022F  0021               	movlb	1	; select bank1
 17457  0230  0853               	movf	(doAbsMove@i_1584+1)^(0+128),w
 17458  0231  0024               	movlb	4	; select bank4
 17459  0232  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17460  0233  0021               	movlb	1	; select bank1
 17461  0234  0852               	movf	doAbsMove@i_1584^(0+128),w
 17462  0235  0024               	movlb	4	; select bank4
 17463  0236  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17464  0237  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17465  0238  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17466  0239  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17467  023A  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17468  023B  3090               	movlw	144
 17469  023C  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 17470  023D  3027               	movlw	39
 17471  023E  00C7               	movwf	((??_doAbsMove+6)^(0+512)+1)
 17472  023F  0844               	movf	(??_doAbsMove+4)^(0+512),w
 17473  0240  0746               	addwf	(??_doAbsMove+6)^(0+512),w
 17474  0241  0086               	movwf	6
 17475  0242  0845               	movf	(??_doAbsMove+5)^(0+512),w
 17476  0243  3D47               	addwfc	(??_doAbsMove+7)^(0+512),w
 17477  0244  0087               	movwf	7
 17478  0245  3F40               	moviw [0]fsr1
 17479  0246  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 17480  0247  3F41               	moviw [1]fsr1
 17481  0248  00C9               	movwf	((??_doAbsMove+8)^(0+512)+1)
 17482  0249  3F42               	moviw [2]fsr1
 17483  024A  00CA               	movwf	((??_doAbsMove+8)^(0+512)+2)
 17484  024B  3F43               	moviw [3]fsr1
 17485  024C  00CB               	movwf	((??_doAbsMove+8)^(0+512)+3)
 17486  024D  084B               	movf	(??_doAbsMove+11)^(0+512),w
 17487  024E  3A80               	xorlw	128
 17488  024F  00CC               	movwf	(??_doAbsMove+12)^(0+512)
 17489  0250  0022               	movlb	2	; select bank2
 17490  0251  0841               	movf	(_absCommand+3)^(0+256),w
 17491  0252  3A80               	xorlw	128
 17492  0253  0024               	movlb	4	; select bank4
 17493  0254  024C               	subwf	(??_doAbsMove+12)^(0+512),w
 17494  0255  1D03               	skipz
 17495  0256  2A67               	goto	u8623
 17496  0257  0022               	movlb	2	; select bank2
 17497  0258  0840               	movf	(_absCommand+2)^(0+256),w
 17498  0259  0024               	movlb	4	; select bank4
 17499  025A  024A               	subwf	(??_doAbsMove+10)^(0+512),w
 17500  025B  1D03               	skipz
 17501  025C  2A67               	goto	u8623
 17502  025D  0022               	movlb	2	; select bank2
 17503  025E  083F               	movf	(_absCommand+1)^(0+256),w
 17504  025F  0024               	movlb	4	; select bank4
 17505  0260  0249               	subwf	(??_doAbsMove+9)^(0+512),w
 17506  0261  1D03               	skipz
 17507  0262  2A67               	goto	u8623
 17508  0263  0022               	movlb	2	; select bank2
 17509  0264  083E               	movf	_absCommand^(0+256),w
 17510  0265  0024               	movlb	4	; select bank4
 17511  0266  0248               	subwf	(??_doAbsMove+8)^(0+512),w
 17512  0267                     u8623:	
 17513  0267  1803               	btfsc	3,0
 17514  0268  2A6B               	goto	u8620
 17515  0269  3001               	movlw	1
 17516  026A  2A6C               	goto	u8630
 17517  026B                     u8620:	
 17518  026B  3000               	movlw	0
 17519  026C                     u8630:	
 17520  026C  00CD               	movwf	(??_doAbsMove+13)^(0+512)
 17521  026D  01CE               	clrf	((??_doAbsMove+13)^(0+512)+1)
 17522  026E  0021               	movlb	1	; select bank1
 17523  026F  0A52               	incf	doAbsMove@i_1584^(0+128),w
 17524  0270  0024               	movlb	4	; select bank4
 17525  0271  2A74               	goto	u8644
 17526  0272                     u8645:	
 17527  0272  35CD               	lslf	(??_doAbsMove+13)^(0+512),f
 17528  0273  0DCE               	rlf	((??_doAbsMove+13)^(0+512)+1),f
 17529  0274                     u8644:	
 17530  0274  0B89               	decfsz	9,f
 17531  0275  2A72               	goto	u8645
 17532  0276  084D               	movf	(??_doAbsMove+13)^(0+512),w
 17533  0277  00CF               	movwf	(??_doAbsMove+15)^(0+512)
 17534  0278  084E               	movf	(??_doAbsMove+14)^(0+512),w
 17535  0279  00D0               	movwf	((??_doAbsMove+15)^(0+512)+1)
 17536  027A  3000               	movlw	0
 17537  027B  1BD0               	btfsc	((??_doAbsMove+15)^(0+512)+1),7
 17538  027C  30FF               	movlw	255
 17539  027D  00D1               	movwf	((??_doAbsMove+15)^(0+512)+2)
 17540  027E  00D2               	movwf	((??_doAbsMove+15)^(0+512)+3)
 17541  027F  3001               	movlw	1
 17542  0280  00D3               	movwf	(??_doAbsMove+19)^(0+512)
 17543  0281  3000               	movlw	0
 17544  0282  00D4               	movwf	((??_doAbsMove+19)^(0+512)+1)
 17545  0283  3000               	movlw	0
 17546  0284  00D5               	movwf	((??_doAbsMove+19)^(0+512)+2)
 17547  0285  3000               	movlw	0
 17548  0286  00D6               	movwf	((??_doAbsMove+19)^(0+512)+3)
 17549  0287  0021               	movlb	1	; select bank1
 17550  0288  0A52               	incf	doAbsMove@i_1584^(0+128),w
 17551  0289  0024               	movlb	4	; select bank4
 17552  028A  2A8F               	goto	u8650
 17553  028B                     u8655:	
 17554  028B  35D3               	lslf	(??_doAbsMove+19)^(0+512),f
 17555  028C  0DD4               	rlf	((??_doAbsMove+19)^(0+512)+1),f
 17556  028D  0DD5               	rlf	((??_doAbsMove+19)^(0+512)+2),f
 17557  028E  0DD6               	rlf	((??_doAbsMove+19)^(0+512)+3),f
 17558  028F                     u8650:	
 17559  028F  0B89               	decfsz	9,f
 17560  0290  2A8B               	goto	u8655
 17561  0291  0853               	movf	(??_doAbsMove+19)^(0+512),w
 17562  0292  05CF               	andwf	(??_doAbsMove+15)^(0+512),f
 17563  0293  0854               	movf	(??_doAbsMove+20)^(0+512),w
 17564  0294  05D0               	andwf	((??_doAbsMove+15)^(0+512)+1),f
 17565  0295  0855               	movf	(??_doAbsMove+21)^(0+512),w
 17566  0296  05D1               	andwf	((??_doAbsMove+15)^(0+512)+2),f
 17567  0297  0856               	movf	(??_doAbsMove+22)^(0+512),w
 17568  0298  05D2               	andwf	((??_doAbsMove+15)^(0+512)+3),f
 17569  0299  084F               	movf	(??_doAbsMove+15)^(0+512),w
 17570  029A  05C0               	andwf	??_doAbsMove^(0+512),f
 17571  029B  0850               	movf	(??_doAbsMove+16)^(0+512),w
 17572  029C  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17573  029D  0851               	movf	(??_doAbsMove+17)^(0+512),w
 17574  029E  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17575  029F  0852               	movf	(??_doAbsMove+18)^(0+512),w
 17576  02A0  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17577  02A1  0840               	movf	??_doAbsMove^(0+512),w
 17578  02A2  0020               	movlb	0	; select bank0
 17579  02A3  04CE               	iorwf	_moveVector_downs,f
 17580  02A4  0024               	movlb	4	; select bank4
 17581  02A5  0841               	movf	(??_doAbsMove+1)^(0+512),w
 17582  02A6  0020               	movlb	0	; select bank0
 17583  02A7  04CF               	iorwf	_moveVector_downs+1,f
 17584  02A8  0024               	movlb	4	; select bank4
 17585  02A9  0842               	movf	(??_doAbsMove+2)^(0+512),w
 17586  02AA  0020               	movlb	0	; select bank0
 17587  02AB  04D0               	iorwf	_moveVector_downs+2,f
 17588  02AC  0024               	movlb	4	; select bank4
 17589  02AD  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17590  02AE  0020               	movlb	0	; select bank0
 17591  02AF  04D1               	iorwf	_moveVector_downs+3,f
 17592  02B0  3001               	movlw	1
 17593  02B1  0021               	movlb	1	; select bank1
 17594  02B2  07D2               	addwf	doAbsMove@i_1584^(0+128),f
 17595  02B3  3000               	movlw	0
 17596  02B4  3DD3               	addwfc	(doAbsMove@i_1584+1)^(0+128),f
 17597  02B5  0853               	movf	(doAbsMove@i_1584+1)^(0+128),w
 17598  02B6  3A80               	xorlw	128
 17599  02B7  0024               	movlb	4	; select bank4
 17600  02B8  00C0               	movwf	??_doAbsMove^(0+512)
 17601  02B9  3080               	movlw	128
 17602  02BA  0240               	subwf	??_doAbsMove^(0+512),w
 17603  02BB  1D03               	skipz
 17604  02BC  2AC0               	goto	u8665
 17605  02BD  3018               	movlw	24
 17606  02BE  0021               	movlb	1	; select bank1
 17607  02BF  0252               	subwf	doAbsMove@i_1584^(0+128),w
 17608  02C0                     u8665:	
 17609  02C0  1C03               	skipc
 17610  02C1  298D               	goto	l8637
 17611  02C2                     l8643:	
 17612                           
 17613                           ;main.c: 328: }
 17614                           ;main.c: 329: doMove();
 17615  02C2  3187  273B  3180   	fcall	_doMove
 17616                           
 17617                           ;main.c: 331: for(int i=0;i<24;i++)
 17618  02C5  0021               	movlb	1	; select bank1
 17619  02C6  01D0               	clrf	doAbsMove@i_1586^(0+128)
 17620  02C7  01D1               	clrf	(doAbsMove@i_1586+1)^(0+128)
 17621  02C8                     L37:	
 17622  02C8  0851               	movf	(doAbsMove@i_1586+1)^(0+128),w
 17623  02C9  3A80               	xorlw	128
 17624  02CA  0024               	movlb	4	; select bank4
 17625  02CB  00C0               	movwf	??_doAbsMove^(0+512)
 17626  02CC  3080               	movlw	128
 17627  02CD  0240               	subwf	??_doAbsMove^(0+512),w
 17628  02CE  1D03               	skipz
 17629  02CF  2AD3               	goto	u8675
 17630  02D0  3018               	movlw	24
 17631  02D1  0021               	movlb	1	; select bank1
 17632  02D2  0250               	subwf	doAbsMove@i_1586^(0+128),w
 17633  02D3                     u8675:	
 17634  02D3  1803               	btfsc	3,0
 17635  02D4  0008               	return
 17636                           
 17637                           ;main.c: 332: currentPositions_steps[i] += ((moveVector_downs & (1UL << i)) > 0) - ((mov
      +                          eVector_ups & (1UL << i)) > 0);
 17638  02D5  0021               	movlb	1	; select bank1
 17639  02D6  0867               	movf	_moveVector_ups^(0+128),w
 17640  02D7  0024               	movlb	4	; select bank4
 17641  02D8  00C0               	movwf	??_doAbsMove^(0+512)
 17642  02D9  0021               	movlb	1	; select bank1
 17643  02DA  0868               	movf	(_moveVector_ups+1)^(0+128),w
 17644  02DB  0024               	movlb	4	; select bank4
 17645  02DC  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 17646  02DD  0021               	movlb	1	; select bank1
 17647  02DE  0869               	movf	(_moveVector_ups+2)^(0+128),w
 17648  02DF  0024               	movlb	4	; select bank4
 17649  02E0  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 17650  02E1  0021               	movlb	1	; select bank1
 17651  02E2  086A               	movf	(_moveVector_ups+3)^(0+128),w
 17652  02E3  0024               	movlb	4	; select bank4
 17653  02E4  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 17654  02E5  3001               	movlw	1
 17655  02E6  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17656  02E7  3000               	movlw	0
 17657  02E8  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17658  02E9  3000               	movlw	0
 17659  02EA  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 17660  02EB  3000               	movlw	0
 17661  02EC  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 17662  02ED  0021               	movlb	1	; select bank1
 17663  02EE  0A50               	incf	doAbsMove@i_1586^(0+128),w
 17664  02EF  0024               	movlb	4	; select bank4
 17665  02F0  2AF5               	goto	u8680
 17666  02F1                     u8685:	
 17667  02F1  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17668  02F2  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17669  02F3  0DC6               	rlf	((??_doAbsMove+4)^(0+512)+2),f
 17670  02F4  0DC7               	rlf	((??_doAbsMove+4)^(0+512)+3),f
 17671  02F5                     u8680:	
 17672  02F5  0B89               	decfsz	9,f
 17673  02F6  2AF1               	goto	u8685
 17674  02F7  0844               	movf	(??_doAbsMove+4)^(0+512),w
 17675  02F8  05C0               	andwf	??_doAbsMove^(0+512),f
 17676  02F9  0845               	movf	(??_doAbsMove+5)^(0+512),w
 17677  02FA  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17678  02FB  0846               	movf	(??_doAbsMove+6)^(0+512),w
 17679  02FC  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17680  02FD  0847               	movf	(??_doAbsMove+7)^(0+512),w
 17681  02FE  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17682  02FF  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17683  0300  0442               	iorwf	(??_doAbsMove+2)^(0+512),w
 17684  0301  0441               	iorwf	(??_doAbsMove+1)^(0+512),w
 17685  0302  0440               	iorwf	??_doAbsMove^(0+512),w
 17686  0303  1903               	btfsc	3,2
 17687  0304  2B07               	goto	u8690
 17688  0305  3001               	movlw	1
 17689  0306  2B08               	goto	u8700
 17690  0307                     u8690:	
 17691  0307  3000               	movlw	0
 17692  0308                     u8700:	
 17693  0308  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 17694  0309  01C9               	clrf	((??_doAbsMove+8)^(0+512)+1)
 17695  030A  09C8               	comf	(??_doAbsMove+8)^(0+512),f
 17696  030B  09C9               	comf	((??_doAbsMove+8)^(0+512)+1),f
 17697  030C  0AC8               	incf	(??_doAbsMove+8)^(0+512),f
 17698  030D  1903               	skipnz
 17699  030E  0AC9               	incf	((??_doAbsMove+8)^(0+512)+1),f
 17700  030F  0020               	movlb	0	; select bank0
 17701  0310  084E               	movf	_moveVector_downs,w
 17702  0311  0024               	movlb	4	; select bank4
 17703  0312  00CA               	movwf	(??_doAbsMove+10)^(0+512)
 17704  0313  0020               	movlb	0	; select bank0
 17705  0314  084F               	movf	_moveVector_downs+1,w
 17706  0315  0024               	movlb	4	; select bank4
 17707  0316  00CB               	movwf	((??_doAbsMove+10)^(0+512)+1)
 17708  0317  0020               	movlb	0	; select bank0
 17709  0318  0850               	movf	_moveVector_downs+2,w
 17710  0319  0024               	movlb	4	; select bank4
 17711  031A  00CC               	movwf	((??_doAbsMove+10)^(0+512)+2)
 17712  031B  0020               	movlb	0	; select bank0
 17713  031C  0851               	movf	_moveVector_downs+3,w
 17714  031D  0024               	movlb	4	; select bank4
 17715  031E  00CD               	movwf	((??_doAbsMove+10)^(0+512)+3)
 17716  031F  3001               	movlw	1
 17717  0320  00CE               	movwf	(??_doAbsMove+14)^(0+512)
 17718  0321  3000               	movlw	0
 17719  0322  00CF               	movwf	((??_doAbsMove+14)^(0+512)+1)
 17720  0323  3000               	movlw	0
 17721  0324  00D0               	movwf	((??_doAbsMove+14)^(0+512)+2)
 17722  0325  3000               	movlw	0
 17723  0326  00D1               	movwf	((??_doAbsMove+14)^(0+512)+3)
 17724  0327  0021               	movlb	1	; select bank1
 17725  0328  0A50               	incf	doAbsMove@i_1586^(0+128),w
 17726  0329  0024               	movlb	4	; select bank4
 17727  032A  2B2F               	goto	u8710
 17728  032B                     u8715:	
 17729  032B  35CE               	lslf	(??_doAbsMove+14)^(0+512),f
 17730  032C  0DCF               	rlf	((??_doAbsMove+14)^(0+512)+1),f
 17731  032D  0DD0               	rlf	((??_doAbsMove+14)^(0+512)+2),f
 17732  032E  0DD1               	rlf	((??_doAbsMove+14)^(0+512)+3),f
 17733  032F                     u8710:	
 17734  032F  0B89               	decfsz	9,f
 17735  0330  2B2B               	goto	u8715
 17736  0331  084E               	movf	(??_doAbsMove+14)^(0+512),w
 17737  0332  05CA               	andwf	(??_doAbsMove+10)^(0+512),f
 17738  0333  084F               	movf	(??_doAbsMove+15)^(0+512),w
 17739  0334  05CB               	andwf	((??_doAbsMove+10)^(0+512)+1),f
 17740  0335  0850               	movf	(??_doAbsMove+16)^(0+512),w
 17741  0336  05CC               	andwf	((??_doAbsMove+10)^(0+512)+2),f
 17742  0337  0851               	movf	(??_doAbsMove+17)^(0+512),w
 17743  0338  05CD               	andwf	((??_doAbsMove+10)^(0+512)+3),f
 17744  0339  084D               	movf	(??_doAbsMove+13)^(0+512),w
 17745  033A  044C               	iorwf	(??_doAbsMove+12)^(0+512),w
 17746  033B  044B               	iorwf	(??_doAbsMove+11)^(0+512),w
 17747  033C  044A               	iorwf	(??_doAbsMove+10)^(0+512),w
 17748  033D  1903               	btfsc	3,2
 17749  033E  2B41               	goto	u8720
 17750  033F  3001               	movlw	1
 17751  0340  2B42               	goto	u8730
 17752  0341                     u8720:	
 17753  0341  3000               	movlw	0
 17754  0342                     u8730:	
 17755  0342  0748               	addwf	(??_doAbsMove+8)^(0+512),w
 17756  0343  00D2               	movwf	(??_doAbsMove+18)^(0+512)
 17757  0344  0849               	movf	(??_doAbsMove+9)^(0+512),w
 17758  0345  1803               	skipnc
 17759  0346  0A49               	incf	(??_doAbsMove+9)^(0+512),w
 17760  0347  00D3               	movwf	((??_doAbsMove+18)^(0+512)+1)
 17761  0348  0852               	movf	(??_doAbsMove+18)^(0+512),w
 17762  0349  00D4               	movwf	(??_doAbsMove+20)^(0+512)
 17763  034A  0853               	movf	(??_doAbsMove+19)^(0+512),w
 17764  034B  00D5               	movwf	((??_doAbsMove+20)^(0+512)+1)
 17765  034C  3000               	movlw	0
 17766  034D  1BD5               	btfsc	((??_doAbsMove+20)^(0+512)+1),7
 17767  034E  30FF               	movlw	255
 17768  034F  00D6               	movwf	((??_doAbsMove+20)^(0+512)+2)
 17769  0350  00D7               	movwf	((??_doAbsMove+20)^(0+512)+3)
 17770  0351  0021               	movlb	1	; select bank1
 17771  0352  0851               	movf	(doAbsMove@i_1586+1)^(0+128),w
 17772  0353  0024               	movlb	4	; select bank4
 17773  0354  00D9               	movwf	((??_doAbsMove+24)^(0+512)+1)
 17774  0355  0021               	movlb	1	; select bank1
 17775  0356  0850               	movf	doAbsMove@i_1586^(0+128),w
 17776  0357  0024               	movlb	4	; select bank4
 17777  0358  00D8               	movwf	(??_doAbsMove+24)^(0+512)
 17778  0359  35D8               	lslf	(??_doAbsMove+24)^(0+512),f
 17779  035A  0DD9               	rlf	((??_doAbsMove+24)^(0+512)+1),f
 17780  035B  35D8               	lslf	(??_doAbsMove+24)^(0+512),f
 17781  035C  0DD9               	rlf	((??_doAbsMove+24)^(0+512)+1),f
 17782  035D  3090               	movlw	144
 17783  035E  00DA               	movwf	(??_doAbsMove+26)^(0+512)
 17784  035F  3027               	movlw	39
 17785  0360  00DB               	movwf	((??_doAbsMove+26)^(0+512)+1)
 17786  0361  0858               	movf	(??_doAbsMove+24)^(0+512),w
 17787  0362  075A               	addwf	(??_doAbsMove+26)^(0+512),w
 17788  0363  0086               	movwf	6
 17789  0364  0859               	movf	(??_doAbsMove+25)^(0+512),w
 17790  0365  3D5B               	addwfc	(??_doAbsMove+27)^(0+512),w
 17791  0366  0087               	movwf	7
 17792  0367  0854               	movf	(??_doAbsMove+20)^(0+512),w
 17793  0368  0781               	addwf	1,f
 17794  0369  3141               	addfsr 1,1
 17795  036A  0855               	movf	(??_doAbsMove+21)^(0+512),w
 17796  036B  3D81               	addwfc	1,f
 17797  036C  3141               	addfsr 1,1
 17798  036D  0856               	movf	(??_doAbsMove+22)^(0+512),w
 17799  036E  3D81               	addwfc	1,f
 17800  036F  3141               	addfsr 1,1
 17801  0370  0857               	movf	(??_doAbsMove+23)^(0+512),w
 17802  0371  3D81               	addwfc	1,f
 17803  0372  3001               	movlw	1
 17804  0373  0021               	movlb	1	; select bank1
 17805  0374  07D0               	addwf	doAbsMove@i_1586^(0+128),f
 17806  0375  3000               	movlw	0
 17807  0376  3DD1               	addwfc	(doAbsMove@i_1586+1)^(0+128),f
 17808  0377  2AC8               	goto	L37
 17809  0378                     __end_of_doAbsMove:	
 17810                           
 17811                           	psect	text57
 17812  073B                     __ptext57:	
 17813 ;; *************** function _doMove *****************
 17814 ;; Defined at:
 17815 ;;		line 236 in file "main.c"
 17816 ;; Parameters:    Size  Location     Type
 17817 ;;		None
 17818 ;; Auto vars:     Size  Location     Type
 17819 ;;  t               2   42[BANK1 ] int 
 17820 ;;  t               2   40[BANK1 ] int 
 17821 ;;  t               2   38[BANK1 ] int 
 17822 ;; Return value:  Size  Location     Type
 17823 ;;                  2   31[BANK1 ] int 
 17824 ;; Registers used:
 17825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17826 ;; Tracked objects:
 17827 ;;		On entry : 0/0
 17828 ;;		On exit  : 0/0
 17829 ;;		Unchanged: 0/0
 17830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17831 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17832 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17833 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17834 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17835 ;;Total ram usage:       13 bytes
 17836 ;; Hardware stack levels used:    1
 17837 ;; Hardware stack levels required when called:   15
 17838 ;; This function calls:
 17839 ;;		_LEDsOn
 17840 ;;		_TMR0_StartTimer
 17841 ;;		_TMR2_StartTimer
 17842 ;;		_calcHeaterPins
 17843 ;;		_drv_write_DC
 17844 ;; This function is called by:
 17845 ;;		_doAbsMove
 17846 ;;		_doRelMove
 17847 ;;		_execCmd
 17848 ;; This function uses a non-reentrant model
 17849 ;;
 17850                           
 17851                           
 17852                           ;psect for function _doMove
 17853  073B                     _doMove:	
 17854                           
 17855                           ;main.c: 238: calcHeaterPins();
 17856                           
 17857                           ;incstack = 0
 17858 ;; hardware stack exceeded
 17859                           ; Regs used in _doMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17860  073B  3195  251D  3187   	fcall	_calcHeaterPins
 17861                           
 17862                           ;main.c: 239: do { LATCbits.LATC1 = 1; } while(0);
 17863  073E  0022               	movlb	2	; select bank2
 17864  073F  148E               	bsf	14,1	;volatile
 17865                           
 17866                           ;main.c: 240: LEDsOn(first_top, 1);
 17867  0740  0855               	movf	(_first_top+3)^(0+256),w
 17868  0741  0020               	movlb	0	; select bank0
 17869  0742  00C7               	movwf	LEDsOn@LEDpins+3
 17870  0743  0022               	movlb	2	; select bank2
 17871  0744  0854               	movf	(_first_top+2)^(0+256),w
 17872  0745  0020               	movlb	0	; select bank0
 17873  0746  00C6               	movwf	LEDsOn@LEDpins+2
 17874  0747  0022               	movlb	2	; select bank2
 17875  0748  0853               	movf	(_first_top+1)^(0+256),w
 17876  0749  0020               	movlb	0	; select bank0
 17877  074A  00C5               	movwf	LEDsOn@LEDpins+1
 17878  074B  0022               	movlb	2	; select bank2
 17879  074C  0852               	movf	_first_top^(0+256),w
 17880  074D  0020               	movlb	0	; select bank0
 17881  074E  00C4               	movwf	LEDsOn@LEDpins
 17882  074F  3001               	movlw	1
 17883  0750  00C8               	movwf	LEDsOn@topOrBottom
 17884  0751  3000               	movlw	0
 17885  0752  00C9               	movwf	LEDsOn@topOrBottom+1
 17886  0753  31A5  2555  3187   	fcall	_LEDsOn
 17887                           
 17888                           ;main.c: 241: LEDsOn(first_bottom,2);
 17889  0756  0022               	movlb	2	; select bank2
 17890  0757  0859               	movf	(_first_bottom+3)^(0+256),w
 17891  0758  0020               	movlb	0	; select bank0
 17892  0759  00C7               	movwf	LEDsOn@LEDpins+3
 17893  075A  0022               	movlb	2	; select bank2
 17894  075B  0858               	movf	(_first_bottom+2)^(0+256),w
 17895  075C  0020               	movlb	0	; select bank0
 17896  075D  00C6               	movwf	LEDsOn@LEDpins+2
 17897  075E  0022               	movlb	2	; select bank2
 17898  075F  0857               	movf	(_first_bottom+1)^(0+256),w
 17899  0760  0020               	movlb	0	; select bank0
 17900  0761  00C5               	movwf	LEDsOn@LEDpins+1
 17901  0762  0022               	movlb	2	; select bank2
 17902  0763  0856               	movf	_first_bottom^(0+256),w
 17903  0764  0020               	movlb	0	; select bank0
 17904  0765  00C4               	movwf	LEDsOn@LEDpins
 17905  0766  3002               	movlw	2
 17906  0767  00C8               	movwf	LEDsOn@topOrBottom
 17907  0768  3000               	movlw	0
 17908  0769  00C9               	movwf	LEDsOn@topOrBottom+1
 17909  076A  31A5  2555  3187   	fcall	_LEDsOn
 17910                           
 17911                           ;main.c: 242: do { LATCbits.LATC1 = 0; } while(0);
 17912  076D  0022               	movlb	2	; select bank2
 17913  076E  108E               	bcf	14,1	;volatile
 17914                           
 17915                           ;main.c: 243: for(int t=0; t<heater_pre_time_ms; t++) _delay((unsigned long)((1)*(100000
      +                          0/4000.0)));
 17916  076F  0021               	movlb	1	; select bank1
 17917  0770  01C6               	clrf	doMove@t^(0+128)
 17918  0771  01C7               	clrf	(doMove@t+1)^(0+128)
 17919  0772                     l1101:	
 17920  0772  0847               	movf	(doMove@t+1)^(0+128),w
 17921  0773  3A80               	xorlw	128
 17922  0774  00C1               	movwf	??_doMove^(0+128)
 17923  0775  086E               	movf	(_heater_pre_time_ms+1)^(0+128),w
 17924  0776  3A80               	xorlw	128
 17925  0777  0241               	subwf	??_doMove^(0+128),w
 17926  0778  1D03               	skipz
 17927  0779  2F7C               	goto	u8005
 17928  077A  086D               	movf	_heater_pre_time_ms^(0+128),w
 17929  077B  0246               	subwf	doMove@t^(0+128),w
 17930  077C                     u8005:	
 17931  077C  1803               	btfsc	3,0
 17932  077D  2F88               	goto	l8041
 17933  077E  3053               	movlw	83
 17934  077F                     u9107:	
 17935  077F  0B89               	decfsz	9,f
 17936  0780  2F7F               	goto	u9107
 17937  0781  0000               	nop
 17938  0782  3001               	movlw	1
 17939  0783  0021               	movlb	1	; select bank1
 17940  0784  07C6               	addwf	doMove@t^(0+128),f
 17941  0785  3000               	movlw	0
 17942  0786  3DC7               	addwfc	(doMove@t+1)^(0+128),f
 17943  0787  2F72               	goto	l1101
 17944  0788                     l8041:	
 17945                           
 17946                           ;main.c: 244: TMR2_StartTimer();
 17947  0788  31A1  2131  3187   	fcall	_TMR2_StartTimer
 17948                           
 17949                           ;main.c: 245: TMR0_StartTimer();
 17950  078B  31A1  212E  3187   	fcall	_TMR0_StartTimer
 17951                           
 17952                           ;main.c: 247: drv_write_DC(drv_peak_val, piezo_on_time_ms);
 17953  078E  0022               	movlb	2	; select bank2
 17954  078F  086F               	movf	(_drv_peak_val+1)^(0+256),w
 17955  0790  0021               	movlb	1	; select bank1
 17956  0791  00B9               	movwf	(drv_write_DC@val+1)^(0+128)
 17957  0792  0022               	movlb	2	; select bank2
 17958  0793  086E               	movf	_drv_peak_val^(0+256),w
 17959  0794  0021               	movlb	1	; select bank1
 17960  0795  00B8               	movwf	drv_write_DC@val^(0+128)
 17961  0796  086C               	movf	(_piezo_on_time_ms+1)^(0+128),w
 17962  0797  00BB               	movwf	(drv_write_DC@duration_ms+1)^(0+128)
 17963  0798  086B               	movf	_piezo_on_time_ms^(0+128),w
 17964  0799  00BA               	movwf	drv_write_DC@duration_ms^(0+128)
 17965  079A  3199  21B9  3187   	fcall	_drv_write_DC
 17966                           
 17967                           ;main.c: 249: for(int t=0; t<heater_post_time_ms; t++) _delay((unsigned long)((1)*(10000
      +                          00/4000.0)));
 17968  079D  0021               	movlb	1	; select bank1
 17969  079E  01C8               	clrf	doMove@t_1568^(0+128)
 17970  079F  01C9               	clrf	(doMove@t_1568+1)^(0+128)
 17971  07A0                     l1104:	
 17972  07A0  0849               	movf	(doMove@t_1568+1)^(0+128),w
 17973  07A1  3A80               	xorlw	128
 17974  07A2  00C1               	movwf	??_doMove^(0+128)
 17975  07A3  0022               	movlb	2	; select bank2
 17976  07A4  086D               	movf	(_heater_post_time_ms+1)^(0+256),w
 17977  07A5  3A80               	xorlw	128
 17978  07A6  0021               	movlb	1	; select bank1
 17979  07A7  0241               	subwf	??_doMove^(0+128),w
 17980  07A8  1D03               	skipz
 17981  07A9  2FAE               	goto	u8015
 17982  07AA  0022               	movlb	2	; select bank2
 17983  07AB  086C               	movf	_heater_post_time_ms^(0+256),w
 17984  07AC  0021               	movlb	1	; select bank1
 17985  07AD  0248               	subwf	doMove@t_1568^(0+128),w
 17986  07AE                     u8015:	
 17987  07AE  1803               	btfsc	3,0
 17988  07AF  2FBA               	goto	l1107
 17989  07B0  3053               	movlw	83
 17990  07B1                     u9117:	
 17991  07B1  0B89               	decfsz	9,f
 17992  07B2  2FB1               	goto	u9117
 17993  07B3  0000               	nop
 17994  07B4  3001               	movlw	1
 17995  07B5  0021               	movlb	1	; select bank1
 17996  07B6  07C8               	addwf	doMove@t_1568^(0+128),f
 17997  07B7  3000               	movlw	0
 17998  07B8  3DC9               	addwfc	(doMove@t_1568+1)^(0+128),f
 17999  07B9  2FA0               	goto	l1104
 18000  07BA                     l1107:	
 18001                           ;main.c: 251: do { LATCbits.LATC1 = 1; } while(0);
 18002                           
 18003  07BA  0022               	movlb	2	; select bank2
 18004  07BB  148E               	bsf	14,1	;volatile
 18005                           
 18006                           ;main.c: 253: for(int t=0; t<inter_step_interval_ms; t++) _delay((unsigned long)((1)*(10
      +                          00000/4000.0)));
 18007  07BC  0021               	movlb	1	; select bank1
 18008  07BD  01CA               	clrf	doMove@t_1569^(0+128)
 18009  07BE  01CB               	clrf	(doMove@t_1569+1)^(0+128)
 18010  07BF                     l1109:	
 18011  07BF  084A               	movf	doMove@t_1569^(0+128),w
 18012  07C0  00C1               	movwf	??_doMove^(0+128)
 18013  07C1  084B               	movf	(doMove@t_1569+1)^(0+128),w
 18014  07C2  00C2               	movwf	(??_doMove^(0+128)+1)
 18015  07C3  3000               	movlw	0
 18016  07C4  1BC2               	btfsc	(??_doMove^(0+128)+1),7
 18017  07C5  30FF               	movlw	255
 18018  07C6  00C3               	movwf	(??_doMove^(0+128)+2)
 18019  07C7  00C4               	movwf	(??_doMove^(0+128)+3)
 18020  07C8  0844               	movf	(??_doMove+3)^(0+128),w
 18021  07C9  3A80               	xorlw	128
 18022  07CA  00C5               	movwf	(??_doMove+4)^(0+128)
 18023  07CB  0022               	movlb	2	; select bank2
 18024  07CC  086B               	movf	(_inter_step_interval_ms+3)^(0+256),w
 18025  07CD  3A80               	xorlw	128
 18026  07CE  0021               	movlb	1	; select bank1
 18027  07CF  0245               	subwf	(??_doMove+4)^(0+128),w
 18028  07D0  1D03               	skipz
 18029  07D1  2FE2               	goto	u8023
 18030  07D2  0022               	movlb	2	; select bank2
 18031  07D3  086A               	movf	(_inter_step_interval_ms+2)^(0+256),w
 18032  07D4  0021               	movlb	1	; select bank1
 18033  07D5  0243               	subwf	(??_doMove+2)^(0+128),w
 18034  07D6  1D03               	skipz
 18035  07D7  2FE2               	goto	u8023
 18036  07D8  0022               	movlb	2	; select bank2
 18037  07D9  0869               	movf	(_inter_step_interval_ms+1)^(0+256),w
 18038  07DA  0021               	movlb	1	; select bank1
 18039  07DB  0242               	subwf	(??_doMove+1)^(0+128),w
 18040  07DC  1D03               	skipz
 18041  07DD  2FE2               	goto	u8023
 18042  07DE  0022               	movlb	2	; select bank2
 18043  07DF  0868               	movf	_inter_step_interval_ms^(0+256),w
 18044  07E0  0021               	movlb	1	; select bank1
 18045  07E1  0241               	subwf	??_doMove^(0+128),w
 18046  07E2                     u8023:	
 18047  07E2  1803               	btfsc	3,0
 18048  07E3  2FEE               	goto	l8053
 18049  07E4  3053               	movlw	83
 18050  07E5                     u9127:	
 18051  07E5  0B89               	decfsz	9,f
 18052  07E6  2FE5               	goto	u9127
 18053  07E7  0000               	nop
 18054  07E8  3001               	movlw	1
 18055  07E9  0021               	movlb	1	; select bank1
 18056  07EA  07CA               	addwf	doMove@t_1569^(0+128),f
 18057  07EB  3000               	movlw	0
 18058  07EC  3DCB               	addwfc	(doMove@t_1569+1)^(0+128),f
 18059  07ED  2FBF               	goto	l1109
 18060  07EE                     l8053:	
 18061                           
 18062                           ;main.c: 254: return 0;
 18063  07EE  01BF               	clrf	?_doMove^(0+128)
 18064  07EF  01C0               	clrf	(?_doMove+1)^(0+128)
 18065  07F0  0008               	return
 18066  07F1                     __end_of_doMove:	
 18067                           
 18068                           	psect	text58
 18069  19B9                     __ptext58:	
 18070 ;; *************** function _drv_write_DC *****************
 18071 ;; Defined at:
 18072 ;;		line 106 in file "drv2665.c"
 18073 ;; Parameters:    Size  Location     Type
 18074 ;;  val             2   24[BANK1 ] int 
 18075 ;;  duration_ms     2   26[BANK1 ] int 
 18076 ;; Auto vars:     Size  Location     Type
 18077 ;;  i               2   29[BANK1 ] int 
 18078 ;; Return value:  Size  Location     Type
 18079 ;;                  1    wreg      void 
 18080 ;; Registers used:
 18081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18082 ;; Tracked objects:
 18083 ;;		On entry : 0/0
 18084 ;;		On exit  : 0/0
 18085 ;;		Unchanged: 0/0
 18086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18087 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18088 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18089 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18090 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18091 ;;Total ram usage:        7 bytes
 18092 ;; Hardware stack levels used:    1
 18093 ;; Hardware stack levels required when called:   14
 18094 ;; This function calls:
 18095 ;;		___awdiv
 18096 ;;		_drv_write
 18097 ;;		_fifo_check
 18098 ;;		_printf
 18099 ;; This function is called by:
 18100 ;;		_doMove
 18101 ;; This function uses a non-reentrant model
 18102 ;;
 18103                           
 18104                           
 18105                           ;psect for function _drv_write_DC
 18106  19B9                     _drv_write_DC:	
 18107                           
 18108                           ;drv2665.c: 116: for(int i=0;i<duration_ms/5; i++){
 18109                           
 18110                           ;incstack = 0
 18111 ;; hardware stack exceeded
 18112                           ; Regs used in _drv_write_DC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18113  19B9  0021               	movlb	1	; select bank1
 18114  19BA  01BD               	clrf	drv_write_DC@i^(0+128)
 18115  19BB  01BE               	clrf	(drv_write_DC@i+1)^(0+128)
 18116  19BC                     l7813:	
 18117  19BC  3005               	movlw	5
 18118  19BD  0020               	movlb	0	; select bank0
 18119  19BE  00B1               	movwf	___awdiv@divisor
 18120  19BF  3000               	movlw	0
 18121  19C0  00B2               	movwf	___awdiv@divisor+1
 18122  19C1  0021               	movlb	1	; select bank1
 18123  19C2  083B               	movf	(drv_write_DC@duration_ms+1)^(0+128),w
 18124  19C3  0020               	movlb	0	; select bank0
 18125  19C4  00B4               	movwf	___awdiv@dividend+1
 18126  19C5  0021               	movlb	1	; select bank1
 18127  19C6  083A               	movf	drv_write_DC@duration_ms^(0+128),w
 18128  19C7  0020               	movlb	0	; select bank0
 18129  19C8  00B3               	movwf	___awdiv@dividend
 18130  19C9  319C  24A8  3199   	fcall	___awdiv
 18131  19CC  0021               	movlb	1	; select bank1
 18132  19CD  083E               	movf	(drv_write_DC@i+1)^(0+128),w
 18133  19CE  3A80               	xorlw	128
 18134  19CF  00BC               	movwf	??_drv_write_DC^(0+128)
 18135  19D0  0020               	movlb	0	; select bank0
 18136  19D1  0832               	movf	?___awdiv+1,w
 18137  19D2  3A80               	xorlw	128
 18138  19D3  0021               	movlb	1	; select bank1
 18139  19D4  023C               	subwf	??_drv_write_DC^(0+128),w
 18140  19D5  1D03               	skipz
 18141  19D6  29DB               	goto	u7625
 18142  19D7  0020               	movlb	0	; select bank0
 18143  19D8  0831               	movf	?___awdiv,w
 18144  19D9  0021               	movlb	1	; select bank1
 18145  19DA  023D               	subwf	drv_write_DC@i^(0+128),w
 18146  19DB                     u7625:	
 18147  19DB  1803               	btfsc	3,0
 18148  19DC  29F0               	goto	l7815
 18149                           
 18150                           ;drv2665.c: 117: drv_write(0x0b, val);
 18151  19DD  0021               	movlb	1	; select bank1
 18152  19DE  0838               	movf	drv_write_DC@val^(0+128),w
 18153  19DF  00BC               	movwf	??_drv_write_DC^(0+128)
 18154  19E0  083C               	movf	??_drv_write_DC^(0+128),w
 18155  19E1  0020               	movlb	0	; select bank0
 18156  19E2  00C9               	movwf	drv_write@data
 18157  19E3  300B               	movlw	11
 18158  19E4  31A6  2603  3199   	fcall	_drv_write
 18159                           
 18160                           ;drv2665.c: 118: _delay((unsigned long)((20)*(1000000/4000000.0)));
 18161  19E7  3200               	nop2	;2 cycle nop
 18162  19E8  3200               	nop2	;2 cycle nop
 18163  19E9  0000               	nop
 18164  19EA  3001               	movlw	1
 18165  19EB  0021               	movlb	1	; select bank1
 18166  19EC  07BD               	addwf	drv_write_DC@i^(0+128),f
 18167  19ED  3000               	movlw	0
 18168  19EE  3DBE               	addwfc	(drv_write_DC@i+1)^(0+128),f
 18169  19EF  29BC               	goto	l7813
 18170  19F0                     l7815:	
 18171                           
 18172                           ;drv2665.c: 120: }
 18173                           ;drv2665.c: 131: if(!fifo_check()) printf("fifo not ready!\n");
 18174  19F0  31A3  231F  3199   	fcall	_fifo_check
 18175  19F3  1803               	btfsc	3,0
 18176  19F4  0008               	return
 18177  19F5  30EE               	movlw	low (STR_55| (0+32768))
 18178  19F6  0021               	movlb	1	; select bank1
 18179  19F7  00A0               	movwf	printf@f^(0+128)
 18180  19F8  30A8               	movlw	high (STR_55| (0+32768))
 18181  19F9  00A1               	movwf	(printf@f^(0+128)+1)
 18182  19FA  318E  26CE         	fcall	_printf
 18183  19FC  0008               	return
 18184  19FD                     __end_of_drv_write_DC:	
 18185                           
 18186                           	psect	text59
 18187  231F                     __ptext59:	
 18188 ;; *************** function _fifo_check *****************
 18189 ;; Defined at:
 18190 ;;		line 139 in file "drv2665.c"
 18191 ;; Parameters:    Size  Location     Type
 18192 ;;		None
 18193 ;; Auto vars:     Size  Location     Type
 18194 ;;  reply           1   23[BANK1 ] unsigned char 
 18195 ;; Return value:  Size  Location     Type
 18196 ;;		None               void
 18197 ;; Registers used:
 18198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18199 ;; Tracked objects:
 18200 ;;		On entry : 0/0
 18201 ;;		On exit  : 0/0
 18202 ;;		Unchanged: 0/0
 18203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18205 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18206 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18207 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18208 ;;Total ram usage:        2 bytes
 18209 ;; Hardware stack levels used:    1
 18210 ;; Hardware stack levels required when called:   13
 18211 ;; This function calls:
 18212 ;;		_drv_read
 18213 ;; This function is called by:
 18214 ;;		_drv_write_DC
 18215 ;; This function uses a non-reentrant model
 18216 ;;
 18217                           
 18218                           
 18219                           ;psect for function _fifo_check
 18220  231F                     _fifo_check:	
 18221                           
 18222                           ;drv2665.c: 141: uint8_t reply;
 18223                           ;drv2665.c: 142: reply = drv_read(0x00);
 18224                           
 18225                           ;incstack = 0
 18226 ;; hardware stack exceeded
 18227                           ; Regs used in _fifo_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18228  231F  3000               	movlw	0
 18229  2320  3199  21FD  31A3   	fcall	_drv_read
 18230  2323  0021               	movlb	1	; select bank1
 18231  2324  0835               	movf	?_drv_read^(0+128),w
 18232  2325  0020               	movlb	0	; select bank0
 18233  2326  00CD               	movwf	??_fifo_check
 18234  2327  084D               	movf	??_fifo_check,w
 18235  2328  0021               	movlb	1	; select bank1
 18236  2329  00B7               	movwf	fifo_check@reply^(0+128)
 18237                           
 18238                           ;drv2665.c: 144: return !(reply & 0x01);
 18239  232A  1C37               	btfss	fifo_check@reply^(0+128),0
 18240  232B  2B2E               	goto	l7675
 18241  232C  1003               	clrc
 18242  232D  0008               	return
 18243  232E                     l7675:	
 18244  232E  1403               	setc
 18245  232F  0008               	return
 18246  2330                     __end_of_fifo_check:	
 18247                           
 18248                           	psect	text60
 18249  19FD                     __ptext60:	
 18250 ;; *************** function _drv_read *****************
 18251 ;; Defined at:
 18252 ;;		line 84 in file "drv2665.c"
 18253 ;; Parameters:    Size  Location     Type
 18254 ;;  reg             1    wreg     unsigned char 
 18255 ;; Auto vars:     Size  Location     Type
 18256 ;;  reg             1   43[BANK0 ] unsigned char 
 18257 ;;  buff            1   44[BANK0 ] unsigned char 
 18258 ;; Return value:  Size  Location     Type
 18259 ;;                  2   21[BANK1 ] int 
 18260 ;; Registers used:
 18261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18262 ;; Tracked objects:
 18263 ;;		On entry : 0/0
 18264 ;;		On exit  : 0/0
 18265 ;;		Unchanged: 0/0
 18266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18267 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18268 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18269 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18270 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18271 ;;Total ram usage:        6 bytes
 18272 ;; Hardware stack levels used:    1
 18273 ;; Hardware stack levels required when called:   12
 18274 ;; This function calls:
 18275 ;;		_i2c_masterOperation
 18276 ;;		_i2c_setBuffer
 18277 ;;		_printf
 18278 ;; This function is called by:
 18279 ;;		_commCheck
 18280 ;;		_fifo_check
 18281 ;; This function uses a non-reentrant model
 18282 ;;
 18283                           
 18284                           
 18285                           ;psect for function _drv_read
 18286  19FD                     _drv_read:	
 18287                           
 18288                           ;incstack = 0
 18289 ;; hardware stack exceeded
 18290                           ; Regs used in _drv_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18291                           ;drv_read@reg stored from wreg
 18292  19FD  0020               	movlb	0	; select bank0
 18293  19FE  00CB               	movwf	drv_read@reg
 18294                           
 18295                           ;drv2665.c: 86: char buff=0;
 18296  19FF  01CC               	clrf	drv_read@buff
 18297                           
 18298                           ;drv2665.c: 89: i2c_setBuffer(&reg, 1);
 18299  1A00  304B               	movlw	low drv_read@reg
 18300  1A01  00B1               	movwf	i2c_setBuffer@buffer
 18301  1A02  3000               	movlw	high drv_read@reg
 18302  1A03  00B2               	movwf	i2c_setBuffer@buffer+1
 18303  1A04  3001               	movlw	1
 18304  1A05  00B3               	movwf	i2c_setBuffer@bufferSize
 18305  1A06  3000               	movlw	0
 18306  1A07  00B4               	movwf	i2c_setBuffer@bufferSize+1
 18307  1A08  31A3  2391  3199   	fcall	_i2c_setBuffer
 18308                           
 18309                           ;drv2665.c: 90: if(i2c_masterOperation(0) != I2C_NOERR)
 18310  1A0B  3000               	movlw	0
 18311  1A0C  31A5  25DF  3199   	fcall	_i2c_masterOperation
 18312  1A0F  3A00               	xorlw	0
 18313  1A10  1903               	skipnz
 18314  1A11  2A1A               	goto	l7623
 18315                           
 18316                           ;drv2665.c: 91: printf("drv_write error!\n");
 18317  1A12  30CB               	movlw	low (STR_52| (0+32768))
 18318  1A13  0021               	movlb	1	; select bank1
 18319  1A14  00A0               	movwf	printf@f^(0+128)
 18320  1A15  30A8               	movlw	high (STR_52| (0+32768))
 18321  1A16  00A1               	movwf	(printf@f^(0+128)+1)
 18322  1A17  318E  26CE  3199   	fcall	_printf
 18323  1A1A                     l7623:	
 18324                           
 18325                           ;drv2665.c: 94: _delay((unsigned long)((100)*(1000000/4000000.0)));
 18326  1A1A  3008               	movlw	8
 18327  1A1B                     u9137:	
 18328  1A1B  0B89               	decfsz	9,f
 18329  1A1C  2A1B               	goto	u9137
 18330  1A1D  0000               	nop
 18331                           
 18332                           ;drv2665.c: 97: i2c_setBuffer(&buff, 1);
 18333  1A1E  304C               	movlw	low drv_read@buff
 18334  1A1F  0020               	movlb	0	; select bank0
 18335  1A20  00B1               	movwf	i2c_setBuffer@buffer
 18336  1A21  3000               	movlw	high drv_read@buff
 18337  1A22  00B2               	movwf	i2c_setBuffer@buffer+1
 18338  1A23  3001               	movlw	1
 18339  1A24  00B3               	movwf	i2c_setBuffer@bufferSize
 18340  1A25  3000               	movlw	0
 18341  1A26  00B4               	movwf	i2c_setBuffer@bufferSize+1
 18342  1A27  31A3  2391  3199   	fcall	_i2c_setBuffer
 18343                           
 18344                           ;drv2665.c: 99: if(i2c_masterOperation(1) != I2C_NOERR)
 18345  1A2A  3001               	movlw	1
 18346  1A2B  31A5  25DF  3199   	fcall	_i2c_masterOperation
 18347  1A2E  3A00               	xorlw	0
 18348  1A2F  1903               	skipnz
 18349  1A30  2A38               	goto	l7631
 18350                           
 18351                           ;drv2665.c: 100: printf("drv_read error!\n");
 18352  1A31  30DD               	movlw	low (STR_54| (0+32768))
 18353  1A32  0021               	movlb	1	; select bank1
 18354  1A33  00A0               	movwf	printf@f^(0+128)
 18355  1A34  30A8               	movlw	high (STR_54| (0+32768))
 18356  1A35  00A1               	movwf	(printf@f^(0+128)+1)
 18357  1A36  318E  26CE         	fcall	_printf
 18358  1A38                     l7631:	
 18359                           
 18360                           ;drv2665.c: 102: return buff;
 18361  1A38  0020               	movlb	0	; select bank0
 18362  1A39  084C               	movf	drv_read@buff,w
 18363  1A3A  00C9               	movwf	??_drv_read
 18364  1A3B  01CA               	clrf	??_drv_read+1
 18365  1A3C  0849               	movf	??_drv_read,w
 18366  1A3D  0021               	movlb	1	; select bank1
 18367  1A3E  00B5               	movwf	?_drv_read^(0+128)
 18368  1A3F  0020               	movlb	0	; select bank0
 18369  1A40  084A               	movf	??_drv_read+1,w
 18370  1A41  0021               	movlb	1	; select bank1
 18371  1A42  00B6               	movwf	(?_drv_read+1)^(0+128)
 18372  1A43  0008               	return
 18373  1A44                     __end_of_drv_read:	
 18374                           
 18375                           	psect	text61
 18376  2603                     __ptext61:	
 18377 ;; *************** function _drv_write *****************
 18378 ;; Defined at:
 18379 ;;		line 57 in file "drv2665.c"
 18380 ;; Parameters:    Size  Location     Type
 18381 ;;  reg             1    wreg     unsigned char 
 18382 ;;  data            1   41[BANK0 ] unsigned char 
 18383 ;; Auto vars:     Size  Location     Type
 18384 ;;  reg             1   43[BANK0 ] unsigned char 
 18385 ;;  buff            2   44[BANK0 ] unsigned char [2]
 18386 ;; Return value:  Size  Location     Type
 18387 ;;                  1    wreg      void 
 18388 ;; Registers used:
 18389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18390 ;; Tracked objects:
 18391 ;;		On entry : 0/0
 18392 ;;		On exit  : 0/0
 18393 ;;		Unchanged: 0/0
 18394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18395 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18396 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18397 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18398 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18399 ;;Total ram usage:        5 bytes
 18400 ;; Hardware stack levels used:    1
 18401 ;; Hardware stack levels required when called:   12
 18402 ;; This function calls:
 18403 ;;		_i2c_masterOperation
 18404 ;;		_i2c_setBuffer
 18405 ;;		_printf
 18406 ;; This function is called by:
 18407 ;;		_setDrvGain
 18408 ;;		_drv_init
 18409 ;;		_drv_reset
 18410 ;;		_drv_write_DC
 18411 ;;		_drv_outputSine
 18412 ;;		_drv_outputWave
 18413 ;; This function uses a non-reentrant model
 18414 ;;
 18415                           
 18416                           
 18417                           ;psect for function _drv_write
 18418  2603                     _drv_write:	
 18419                           
 18420                           ;incstack = 0
 18421                           ; Regs used in _drv_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18422                           ;drv_write@reg stored from wreg
 18423  2603  0020               	movlb	0	; select bank0
 18424  2604  00CB               	movwf	drv_write@reg
 18425                           
 18426                           ;drv2665.c: 62: uint8_t buff[2];
 18427                           ;drv2665.c: 64: buff[0] = reg;
 18428  2605  084B               	movf	drv_write@reg,w
 18429  2606  00CA               	movwf	??_drv_write
 18430  2607  084A               	movf	??_drv_write,w
 18431  2608  00CC               	movwf	drv_write@buff
 18432                           
 18433                           ;drv2665.c: 65: buff[1] = data;
 18434  2609  0849               	movf	drv_write@data,w
 18435  260A  00CA               	movwf	??_drv_write
 18436  260B  084A               	movf	??_drv_write,w
 18437  260C  00CD               	movwf	drv_write@buff+1
 18438                           
 18439                           ;drv2665.c: 68: i2c_setBuffer(buff, 2);
 18440  260D  304C               	movlw	low drv_write@buff
 18441  260E  00B1               	movwf	i2c_setBuffer@buffer
 18442  260F  3000               	movlw	high drv_write@buff
 18443  2610  00B2               	movwf	i2c_setBuffer@buffer+1
 18444  2611  3002               	movlw	2
 18445  2612  00B3               	movwf	i2c_setBuffer@bufferSize
 18446  2613  3000               	movlw	0
 18447  2614  00B4               	movwf	i2c_setBuffer@bufferSize+1
 18448  2615  31A3  2391  31A6   	fcall	_i2c_setBuffer
 18449                           
 18450                           ;drv2665.c: 69: if(i2c_masterOperation(0) != I2C_NOERR)
 18451  2618  3000               	movlw	0
 18452  2619  31A5  25DF  31A6   	fcall	_i2c_masterOperation
 18453  261C  3A00               	xorlw	0
 18454  261D  1903               	skipnz
 18455  261E  0008               	return
 18456                           
 18457                           ;drv2665.c: 70: printf("drv_write error!\n");
 18458  261F  30CB               	movlw	low (STR_52| (0+32768))
 18459  2620  0021               	movlb	1	; select bank1
 18460  2621  00A0               	movwf	printf@f^(0+128)
 18461  2622  30A8               	movlw	high (STR_52| (0+32768))
 18462  2623  00A1               	movwf	(printf@f^(0+128)+1)
 18463  2624  318E  26CE         	fcall	_printf
 18464  2626  0008               	return
 18465  2627                     __end_of_drv_write:	
 18466                           
 18467                           	psect	text62
 18468  0ECE                     __ptext62:	
 18469 ;; *************** function _printf *****************
 18470 ;; Defined at:
 18471 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 18472 ;; Parameters:    Size  Location     Type
 18473 ;;  f               2    0[BANK1 ] PTR const unsigned char 
 18474 ;;		 -> STR_84(23), STR_83(3), STR_55(17), STR_54(17), 
 18475 ;;		 -> STR_53(18), STR_52(18), STR_51(17), STR_50(28), 
 18476 ;;		 -> STR_49(9), STR_48(9), STR_47(25), STR_46(11), 
 18477 ;;		 -> STR_45(8), STR_44(8), STR_43(8), STR_42(31), 
 18478 ;;		 -> STR_41(11), STR_40(8), STR_39(8), STR_38(8), 
 18479 ;;		 -> STR_37(26), STR_36(30), STR_35(3), STR_34(3), 
 18480 ;;		 -> STR_33(3), STR_32(2), STR_31(4), STR_30(2), 
 18481 ;;		 -> STR_29(4), STR_28(3), STR_27(3), STR_26(3), 
 18482 ;;		 -> STR_25(3), STR_24(3), STR_23(3), STR_22(3), 
 18483 ;;		 -> STR_21(3), STR_20(3), STR_19(3), STR_18(3), 
 18484 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(3), 
 18485 ;;		 -> STR_13(3), STR_12(4), STR_11(3), STR_10(16), 
 18486 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(13), 
 18487 ;;		 -> STR_5(15), STR_4(16), STR_3(2), STR_2(4), 
 18488 ;;		 -> STR_1(4), 
 18489 ;; Auto vars:     Size  Location     Type
 18490 ;;  val             4   14[BANK1 ] unsigned long 
 18491 ;;  tmpval          4    0        struct .
 18492 ;;  prec            2   12[BANK1 ] int 
 18493 ;;  cp              2    0        PTR const unsigned char 
 18494 ;;  len             2    0        unsigned int 
 18495 ;;  c               1   20[BANK1 ] char 
 18496 ;;  ap              1   19[BANK1 ] PTR void [1]
 18497 ;;		 -> ?_printf(2), 
 18498 ;;  flag            1   18[BANK1 ] unsigned char 
 18499 ;; Return value:  Size  Location     Type
 18500 ;;                  2    0[BANK1 ] int 
 18501 ;; Registers used:
 18502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18503 ;; Tracked objects:
 18504 ;;		On entry : 0/0
 18505 ;;		On exit  : 0/0
 18506 ;;		Unchanged: 0/0
 18507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18508 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18509 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18510 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18511 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18512 ;;Total ram usage:       21 bytes
 18513 ;; Hardware stack levels used:    1
 18514 ;; Hardware stack levels required when called:    8
 18515 ;; This function calls:
 18516 ;;		___lldiv
 18517 ;;		___llmod
 18518 ;;		_putch
 18519 ;; This function is called by:
 18520 ;;		_LED_test_openshort
 18521 ;;		_LED_getData
 18522 ;;		_main
 18523 ;;		_main_initialize
 18524 ;;		_startRelMove
 18525 ;;		_startAbsMove
 18526 ;;		_stop
 18527 ;;		_doAbsMove
 18528 ;;		_zeroPosition
 18529 ;;		_getPosition
 18530 ;;		_setDrvPeak
 18531 ;;		_setDrvGain
 18532 ;;		_setDrvPiezoOnTime
 18533 ;;		_setHeaterPreTime
 18534 ;;		_setHeaterPostTime
 18535 ;;		_setH1OffTime
 18536 ;;		_setH2OnTime
 18537 ;;		_setLEDBrightnessRange
 18538 ;;		_setLEDPwr
 18539 ;;		_setHeaterToggle
 18540 ;;		_timedActiveHeatOn
 18541 ;;		_setActive
 18542 ;;		_setMoveMask
 18543 ;;		_getActive
 18544 ;;		_getMoveMask
 18545 ;;		_getMotionStatus
 18546 ;;		_commCheck
 18547 ;;		_drv_init
 18548 ;;		_drv_write
 18549 ;;		_drv_read
 18550 ;;		_drv_write_DC
 18551 ;;		_execCmd
 18552 ;; This function uses a non-reentrant model
 18553 ;;
 18554                           
 18555                           
 18556                           ;psect for function _printf
 18557  0ECE                     _printf:	
 18558                           
 18559                           ;doprnt.c: 466: va_list ap;
 18560                           ;doprnt.c: 499: signed char c;
 18561                           ;doprnt.c: 504: int prec;
 18562                           ;doprnt.c: 508: unsigned char flag;
 18563                           ;doprnt.c: 523: union {
 18564                           ;doprnt.c: 524: unsigned long vd;
 18565                           ;doprnt.c: 525: double integ;
 18566                           ;doprnt.c: 526: } tmpval;
 18567                           ;doprnt.c: 528: unsigned long val;
 18568                           ;doprnt.c: 529: unsigned len;
 18569                           ;doprnt.c: 530: const char * cp;
 18570                           ;doprnt.c: 533: *ap = __va_start();
 18571                           
 18572                           ;incstack = 0
 18573                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18574  0ECE  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 18575  0ECF  0021               	movlb	1	; select bank1
 18576  0ED0  00A6               	movwf	??_printf^(0+128)
 18577  0ED1  0826               	movf	??_printf^(0+128),w
 18578  0ED2  00B3               	movwf	printf@ap^(0+128)
 18579  0ED3                     l7555:	
 18580                           ;doprnt.c: 536: while(c = *f++) {
 18581                           
 18582  0ED3  0021               	movlb	1	; select bank1
 18583  0ED4  0821               	movf	(printf@f+1)^(0+128),w
 18584  0ED5  00A7               	movwf	(??_printf^(0+128)+1)
 18585  0ED6  0820               	movf	printf@f^(0+128),w
 18586  0ED7  00A6               	movwf	??_printf^(0+128)
 18587  0ED8  0AA0               	incf	printf@f^(0+128),f
 18588  0ED9  1903               	skipnz
 18589  0EDA  0AA1               	incf	(printf@f+1)^(0+128),f
 18590  0EDB  0826               	movf	??_printf^(0+128),w
 18591  0EDC  0084               	movwf	4
 18592  0EDD  0827               	movf	(??_printf+1)^(0+128),w
 18593  0EDE  0085               	movwf	5
 18594  0EDF  0800               	movf	0,w	;code access
 18595  0EE0  00A8               	movwf	(??_printf+2)^(0+128)
 18596  0EE1  0828               	movf	(??_printf+2)^(0+128),w
 18597  0EE2  00B4               	movwf	printf@c^(0+128)
 18598  0EE3  0834               	movf	printf@c^(0+128),w
 18599  0EE4  1903               	btfsc	3,2
 18600  0EE5  0008               	return
 18601                           
 18602                           ;doprnt.c: 538: if(c != '%')
 18603  0EE6  3025               	movlw	37
 18604  0EE7  0634               	xorwf	printf@c^(0+128),w
 18605  0EE8  1903               	btfsc	3,2
 18606  0EE9  2EEF               	goto	l7501
 18607                           
 18608                           ;doprnt.c: 540: {
 18609                           ;doprnt.c: 541: (putch(c) );
 18610  0EEA  0834               	movf	printf@c^(0+128),w
 18611  0EEB  31A1  21B3  318E   	fcall	_putch
 18612                           
 18613                           ;doprnt.c: 542: continue;
 18614  0EEE  2ED3               	goto	l7555
 18615  0EEF                     l7501:	
 18616                           
 18617                           ;doprnt.c: 543: }
 18618                           ;doprnt.c: 548: flag = 0;
 18619  0EEF  0021               	movlb	1	; select bank1
 18620  0EF0  01B2               	clrf	printf@flag^(0+128)
 18621                           
 18622                           ;doprnt.c: 635: switch(c = *f++) {
 18623                           
 18624                           ;doprnt.c: 633: loop:
 18625  0EF1  2EF6               	goto	l7505
 18626  0EF2                     l1516:	
 18627                           ;doprnt.c: 641: case 'l':
 18628                           
 18629                           ;doprnt.c: 638: goto alldone;
 18630                           
 18631                           ;doprnt.c: 637: case 0:
 18632                           
 18633                           
 18634                           ;doprnt.c: 643: flag |= 0x10;
 18635  0EF2  1632               	bsf	printf@flag^(0+128),4
 18636                           
 18637                           ;doprnt.c: 644: goto loop;
 18638  0EF3  2EF6               	goto	l7505
 18639  0EF4                     l1521:	
 18640                           ;doprnt.c: 817: case 'u':
 18641                           
 18642                           ;doprnt.c: 813: continue;
 18643                           
 18644                           ;doprnt.c: 802: default:
 18645                           
 18646                           ;doprnt.c: 698: case 'i':
 18647                           ;doprnt.c: 699: break;
 18648                           
 18649                           ;doprnt.c: 697: case 'd':
 18650                           
 18651                           
 18652                           ;doprnt.c: 818: flag |= 0x40;
 18653  0EF4  1732               	bsf	printf@flag^(0+128),6
 18654                           
 18655                           ;doprnt.c: 822: }
 18656                           
 18657                           ;doprnt.c: 819: break;
 18658  0EF5  2F13               	goto	l1519
 18659  0EF6                     l7505:	
 18660  0EF6  0821               	movf	(printf@f+1)^(0+128),w
 18661  0EF7  00A7               	movwf	(??_printf^(0+128)+1)
 18662  0EF8  0820               	movf	printf@f^(0+128),w
 18663  0EF9  00A6               	movwf	??_printf^(0+128)
 18664  0EFA  0AA0               	incf	printf@f^(0+128),f
 18665  0EFB  1903               	skipnz
 18666  0EFC  0AA1               	incf	(printf@f+1)^(0+128),f
 18667  0EFD  0826               	movf	??_printf^(0+128),w
 18668  0EFE  0084               	movwf	4
 18669  0EFF  0827               	movf	(??_printf+1)^(0+128),w
 18670  0F00  0085               	movwf	5
 18671  0F01  0800               	movf	0,w	;code access
 18672  0F02  00B4               	movwf	printf@c^(0+128)
 18673                           
 18674                           ; Switch size 1, requested type "space"
 18675                           ; Number of cases is 5, Range of values is 0 to 117
 18676                           ; switch strategies available:
 18677                           ; Name         Instructions Cycles
 18678                           ; simple_byte           16     9 (average)
 18679                           ; direct_byte          242     6 (fixed)
 18680                           ; jumptable            260     6 (fixed)
 18681                           ;	Chosen strategy is simple_byte
 18682  0F03  3A00               	xorlw	0	; case 0
 18683  0F04  1903               	skipnz
 18684  0F05  2FFF               	goto	l1537
 18685  0F06  3A64               	xorlw	100	; case 100
 18686  0F07  1903               	skipnz
 18687  0F08  2F13               	goto	l1519
 18688  0F09  3A0D               	xorlw	13	; case 105
 18689  0F0A  1903               	skipnz
 18690  0F0B  2F13               	goto	l1519
 18691  0F0C  3A05               	xorlw	5	; case 108
 18692  0F0D  1903               	skipnz
 18693  0F0E  2EF2               	goto	l1516
 18694  0F0F  3A19               	xorlw	25	; case 117
 18695  0F10  1903               	skipnz
 18696  0F11  2EF4               	goto	l1521
 18697  0F12  2ED3               	goto	l7555
 18698  0F13                     l1519:	
 18699                           
 18700                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 18701  0F13  1B32               	btfsc	printf@flag^(0+128),6
 18702  0F14  2F4A               	goto	l1522
 18703                           
 18704                           ;doprnt.c: 1253: {
 18705                           ;doprnt.c: 1255: if(flag & 0x10)
 18706  0F15  1E32               	btfss	printf@flag^(0+128),4
 18707  0F16  2F24               	goto	l7513
 18708                           
 18709                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 18710  0F17  0833               	movf	printf@ap^(0+128),w
 18711  0F18  0086               	movwf	6
 18712  0F19  0187               	clrf	7
 18713  0F1A  3F40               	moviw [0]fsr1
 18714  0F1B  00AE               	movwf	printf@val^(0+128)
 18715  0F1C  3F41               	moviw [1]fsr1
 18716  0F1D  00AF               	movwf	(printf@val+1)^(0+128)
 18717  0F1E  3F42               	moviw [2]fsr1
 18718  0F1F  00B0               	movwf	(printf@val+2)^(0+128)
 18719  0F20  3F43               	moviw [3]fsr1
 18720  0F21  00B1               	movwf	(printf@val+3)^(0+128)
 18721  0F22  3004               	movlw	4
 18722  0F23  2F35               	goto	L38
 18723  0F24                     l7513:	
 18724                           
 18725                           ;doprnt.c: 1257: else
 18726                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 18727  0F24  0833               	movf	printf@ap^(0+128),w
 18728  0F25  0086               	movwf	6
 18729  0F26  0187               	clrf	7
 18730  0F27  3F40               	moviw [0]fsr1
 18731  0F28  00A6               	movwf	??_printf^(0+128)
 18732  0F29  3F41               	moviw [1]fsr1
 18733  0F2A  00A7               	movwf	(??_printf^(0+128)+1)
 18734  0F2B  0826               	movf	??_printf^(0+128),w
 18735  0F2C  00AE               	movwf	printf@val^(0+128)
 18736  0F2D  0827               	movf	(??_printf+1)^(0+128),w
 18737  0F2E  00AF               	movwf	(printf@val+1)^(0+128)
 18738  0F2F  0D89               	rlf	9,f
 18739  0F30  3B89               	subwfb	9,f
 18740  0F31  0989               	comf	9,f
 18741  0F32  00B0               	movwf	(printf@val+2)^(0+128)
 18742  0F33  00B1               	movwf	(printf@val+3)^(0+128)
 18743  0F34  3002               	movlw	2
 18744  0F35                     L38:	
 18745  0F35  00A6               	movwf	??_printf^(0+128)
 18746  0F36  0826               	movf	??_printf^(0+128),w
 18747  0F37  07B3               	addwf	printf@ap^(0+128),f
 18748                           
 18749                           ;doprnt.c: 1261: if((long)val < 0) {
 18750  0F38  1FB1               	btfss	(printf@val+3)^(0+128),7
 18751  0F39  2F6A               	goto	l7531
 18752                           
 18753                           ;doprnt.c: 1262: flag |= 0x03;
 18754  0F3A  3003               	movlw	3
 18755  0F3B  00A6               	movwf	??_printf^(0+128)
 18756  0F3C  0826               	movf	??_printf^(0+128),w
 18757  0F3D  04B2               	iorwf	printf@flag^(0+128),f
 18758                           
 18759                           ;doprnt.c: 1263: val = -val;
 18760  0F3E  09AE               	comf	printf@val^(0+128),f
 18761  0F3F  09AF               	comf	(printf@val+1)^(0+128),f
 18762  0F40  09B0               	comf	(printf@val+2)^(0+128),f
 18763  0F41  09B1               	comf	(printf@val+3)^(0+128),f
 18764  0F42  0AAE               	incf	printf@val^(0+128),f
 18765  0F43  1903               	skipnz
 18766  0F44  0AAF               	incf	(printf@val+1)^(0+128),f
 18767  0F45  1903               	skipnz
 18768  0F46  0AB0               	incf	(printf@val+2)^(0+128),f
 18769  0F47  1903               	skipnz
 18770  0F48  0AB1               	incf	(printf@val+3)^(0+128),f
 18771                           
 18772                           ;doprnt.c: 1264: }
 18773                           ;doprnt.c: 1266: }
 18774  0F49  2F6A               	goto	l7531
 18775  0F4A                     l1522:	
 18776                           
 18777                           ;doprnt.c: 1268: else
 18778                           ;doprnt.c: 1273: {
 18779                           ;doprnt.c: 1281: if(flag & 0x10)
 18780  0F4A  1E32               	btfss	printf@flag^(0+128),4
 18781  0F4B  2F59               	goto	l7527
 18782                           
 18783                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 18784  0F4C  0833               	movf	printf@ap^(0+128),w
 18785  0F4D  0086               	movwf	6
 18786  0F4E  0187               	clrf	7
 18787  0F4F  3F40               	moviw [0]fsr1
 18788  0F50  00AE               	movwf	printf@val^(0+128)
 18789  0F51  3F41               	moviw [1]fsr1
 18790  0F52  00AF               	movwf	(printf@val+1)^(0+128)
 18791  0F53  3F42               	moviw [2]fsr1
 18792  0F54  00B0               	movwf	(printf@val+2)^(0+128)
 18793  0F55  3F43               	moviw [3]fsr1
 18794  0F56  00B1               	movwf	(printf@val+3)^(0+128)
 18795  0F57  3004               	movlw	4
 18796  0F58  2F67               	goto	L39
 18797  0F59                     l7527:	
 18798                           
 18799                           ;doprnt.c: 1283: else
 18800                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 18801  0F59  0833               	movf	printf@ap^(0+128),w
 18802  0F5A  0086               	movwf	6
 18803  0F5B  0187               	clrf	7
 18804  0F5C  3F40               	moviw [0]fsr1
 18805  0F5D  00A6               	movwf	??_printf^(0+128)
 18806  0F5E  3F41               	moviw [1]fsr1
 18807  0F5F  00A7               	movwf	(??_printf^(0+128)+1)
 18808  0F60  0826               	movf	??_printf^(0+128),w
 18809  0F61  00AE               	movwf	printf@val^(0+128)
 18810  0F62  0827               	movf	(??_printf+1)^(0+128),w
 18811  0F63  00AF               	movwf	(printf@val^(0+128)+1)
 18812  0F64  01B0               	clrf	(printf@val^(0+128)+2)
 18813  0F65  01B1               	clrf	(printf@val^(0+128)+3)
 18814  0F66  3002               	movlw	2
 18815  0F67                     L39:	
 18816  0F67  00A6               	movwf	??_printf^(0+128)
 18817  0F68  0826               	movf	??_printf^(0+128),w
 18818  0F69  07B3               	addwf	printf@ap^(0+128),f
 18819  0F6A                     l7531:	
 18820                           
 18821                           ;doprnt.c: 1287: }
 18822                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 18823  0F6A  01B4               	clrf	printf@c^(0+128)
 18824  0F6B  0AB4               	incf	printf@c^(0+128),f
 18825  0F6C  300A               	movlw	10
 18826  0F6D  0634               	xorwf	printf@c^(0+128),w
 18827  0F6E  1903               	btfsc	3,2
 18828  0F6F  2F9D               	goto	l7543
 18829  0F70                     l7537:	
 18830                           
 18831                           ;doprnt.c: 1306: if(val < dpowers[c])
 18832  0F70  0834               	movf	printf@c^(0+128),w
 18833  0F71  00A6               	movwf	??_printf^(0+128)
 18834  0F72  01A7               	clrf	(??_printf^(0+128)+1)
 18835  0F73  35A6               	lslf	??_printf^(0+128),f
 18836  0F74  0DA7               	rlf	(??_printf^(0+128)+1),f
 18837  0F75  35A6               	lslf	??_printf^(0+128),f
 18838  0F76  0DA7               	rlf	(??_printf^(0+128)+1),f
 18839  0F77  3000               	movlw	low (_dpowers| (0+32768))
 18840  0F78  0726               	addwf	??_printf^(0+128),w
 18841  0F79  0084               	movwf	4
 18842  0F7A  30A8               	movlw	high (_dpowers| (0+32768))
 18843  0F7B  3D27               	addwfc	(??_printf+1)^(0+128),w
 18844  0F7C  0085               	movwf	5
 18845  0F7D  3F00               	moviw [0]fsr0
 18846  0F7E  00A8               	movwf	(??_printf+2)^(0+128)
 18847  0F7F  3F01               	moviw [1]fsr0
 18848  0F80  00A9               	movwf	((??_printf+2)^(0+128)+1)
 18849  0F81  3F02               	moviw [2]fsr0
 18850  0F82  00AA               	movwf	((??_printf+2)^(0+128)+2)
 18851  0F83  3F03               	moviw [3]fsr0
 18852  0F84  00AB               	movwf	((??_printf+2)^(0+128)+3)
 18853  0F85  082B               	movf	(??_printf+5)^(0+128),w
 18854  0F86  0231               	subwf	(printf@val+3)^(0+128),w
 18855  0F87  1D03               	skipz
 18856  0F88  2F93               	goto	u7115
 18857  0F89  082A               	movf	(??_printf+4)^(0+128),w
 18858  0F8A  0230               	subwf	(printf@val+2)^(0+128),w
 18859  0F8B  1D03               	skipz
 18860  0F8C  2F93               	goto	u7115
 18861  0F8D  0829               	movf	(??_printf+3)^(0+128),w
 18862  0F8E  022F               	subwf	(printf@val+1)^(0+128),w
 18863  0F8F  1D03               	skipz
 18864  0F90  2F93               	goto	u7115
 18865  0F91  0828               	movf	(??_printf+2)^(0+128),w
 18866  0F92  022E               	subwf	printf@val^(0+128),w
 18867  0F93                     u7115:	
 18868  0F93  1C03               	btfss	3,0
 18869  0F94  2F9D               	goto	l7543
 18870                           
 18871                           ;doprnt.c: 1307: break;
 18872  0F95  3001               	movlw	1
 18873  0F96  00A6               	movwf	??_printf^(0+128)
 18874  0F97  0826               	movf	??_printf^(0+128),w
 18875  0F98  07B4               	addwf	printf@c^(0+128),f
 18876  0F99  300A               	movlw	10
 18877  0F9A  0634               	xorwf	printf@c^(0+128),w
 18878  0F9B  1D03               	btfss	3,2
 18879  0F9C  2F70               	goto	l7537
 18880  0F9D                     l7543:	
 18881                           
 18882                           ;doprnt.c: 1422: {
 18883                           ;doprnt.c: 1438: if(flag & 0x03)
 18884  0F9D  0832               	movf	printf@flag^(0+128),w
 18885  0F9E  3903               	andlw	3
 18886  0F9F  1903               	btfsc	3,2
 18887  0FA0  2FA5               	goto	l7547
 18888                           
 18889                           ;doprnt.c: 1439: (putch('-') );
 18890  0FA1  302D               	movlw	45
 18891  0FA2  31A1  21B3  318E   	fcall	_putch
 18892  0FA5                     l7547:	
 18893                           
 18894                           ;doprnt.c: 1469: }
 18895                           ;doprnt.c: 1472: prec = c;
 18896  0FA5  0021               	movlb	1	; select bank1
 18897  0FA6  0834               	movf	printf@c^(0+128),w
 18898  0FA7  00AC               	movwf	printf@prec^(0+128)
 18899  0FA8  01AD               	clrf	(printf@prec+1)^(0+128)
 18900  0FA9  1BAC               	btfsc	printf@prec^(0+128),7
 18901  0FAA  03AD               	decf	(printf@prec+1)^(0+128),f
 18902  0FAB                     l7553:	
 18903                           ;doprnt.c: 1474: while(prec--) {
 18904                           
 18905  0FAB  30FF               	movlw	255
 18906  0FAC  0021               	movlb	1	; select bank1
 18907  0FAD  07AC               	addwf	printf@prec^(0+128),f
 18908  0FAE  30FF               	movlw	255
 18909  0FAF  3DAD               	addwfc	(printf@prec+1)^(0+128),f
 18910  0FB0  0A2C               	incf	printf@prec^(0+128),w
 18911  0FB1  1903               	btfsc	3,2
 18912  0FB2  0A2D               	incf	(printf@prec+1)^(0+128),w
 18913  0FB3  1903               	btfsc	3,2
 18914  0FB4  2ED3               	goto	l7555
 18915                           
 18916                           ;doprnt.c: 1478: {
 18917                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 18918  0FB5  3000               	movlw	0
 18919  0FB6  0020               	movlb	0	; select bank0
 18920  0FB7  00C2               	movwf	___llmod@divisor+3
 18921  0FB8  3000               	movlw	0
 18922  0FB9  00C1               	movwf	___llmod@divisor+2
 18923  0FBA  3000               	movlw	0
 18924  0FBB  00C0               	movwf	___llmod@divisor+1
 18925  0FBC  300A               	movlw	10
 18926  0FBD  00BF               	movwf	___llmod@divisor
 18927  0FBE  0021               	movlb	1	; select bank1
 18928  0FBF  082D               	movf	(printf@prec+1)^(0+128),w
 18929  0FC0  0085               	movwf	5
 18930  0FC1  082C               	movf	printf@prec^(0+128),w
 18931  0FC2  0084               	movwf	4
 18932  0FC3  3584               	lslf	4,f
 18933  0FC4  0D85               	rlf	5,f
 18934  0FC5  3584               	lslf	4,f
 18935  0FC6  0D85               	rlf	5,f
 18936  0FC7  3000               	movlw	low (_dpowers| (0+32768))
 18937  0FC8  0784               	addwf	4,f
 18938  0FC9  30A8               	movlw	high (_dpowers| (0+32768))
 18939  0FCA  3D85               	addwfc	5,f
 18940  0FCB  3F00               	moviw [0]fsr0
 18941  0FCC  0020               	movlb	0	; select bank0
 18942  0FCD  00B1               	movwf	___lldiv@divisor
 18943  0FCE  3F01               	moviw [1]fsr0
 18944  0FCF  00B2               	movwf	___lldiv@divisor+1
 18945  0FD0  3F02               	moviw [2]fsr0
 18946  0FD1  00B3               	movwf	___lldiv@divisor+2
 18947  0FD2  3F03               	moviw [3]fsr0
 18948  0FD3  00B4               	movwf	___lldiv@divisor+3
 18949  0FD4  0021               	movlb	1	; select bank1
 18950  0FD5  0831               	movf	(printf@val+3)^(0+128),w
 18951  0FD6  0020               	movlb	0	; select bank0
 18952  0FD7  00B8               	movwf	___lldiv@dividend+3
 18953  0FD8  0021               	movlb	1	; select bank1
 18954  0FD9  0830               	movf	(printf@val+2)^(0+128),w
 18955  0FDA  0020               	movlb	0	; select bank0
 18956  0FDB  00B7               	movwf	___lldiv@dividend+2
 18957  0FDC  0021               	movlb	1	; select bank1
 18958  0FDD  082F               	movf	(printf@val+1)^(0+128),w
 18959  0FDE  0020               	movlb	0	; select bank0
 18960  0FDF  00B6               	movwf	___lldiv@dividend+1
 18961  0FE0  0021               	movlb	1	; select bank1
 18962  0FE1  082E               	movf	printf@val^(0+128),w
 18963  0FE2  0020               	movlb	0	; select bank0
 18964  0FE3  00B5               	movwf	___lldiv@dividend
 18965  0FE4  319C  24FA  318E   	fcall	___lldiv
 18966  0FE7  0020               	movlb	0	; select bank0
 18967  0FE8  0834               	movf	?___lldiv+3,w
 18968  0FE9  00C6               	movwf	___llmod@dividend+3
 18969  0FEA  0833               	movf	?___lldiv+2,w
 18970  0FEB  00C5               	movwf	___llmod@dividend+2
 18971  0FEC  0832               	movf	?___lldiv+1,w
 18972  0FED  00C4               	movwf	___llmod@dividend+1
 18973  0FEE  0831               	movf	?___lldiv,w
 18974  0FEF  00C3               	movwf	___llmod@dividend
 18975  0FF0  3198  20EF  318E   	fcall	___llmod
 18976  0FF3  0020               	movlb	0	; select bank0
 18977  0FF4  083F               	movf	?___llmod,w
 18978  0FF5  3E30               	addlw	48
 18979  0FF6  0021               	movlb	1	; select bank1
 18980  0FF7  00A6               	movwf	??_printf^(0+128)
 18981  0FF8  0826               	movf	??_printf^(0+128),w
 18982  0FF9  00B4               	movwf	printf@c^(0+128)
 18983                           
 18984                           ;doprnt.c: 1523: }
 18985                           ;doprnt.c: 1524: (putch(c) );
 18986  0FFA  0834               	movf	printf@c^(0+128),w
 18987  0FFB  31A1  21B3  318E   	fcall	_putch
 18988  0FFE  2FAB               	goto	l7553
 18989  0FFF                     l1537:	
 18990                           ;doprnt.c: 1540: return 0;
 18991                           ;	Return value of _printf is never used
 18992                           
 18993                           ;doprnt.c: 1525: }
 18994                           ;doprnt.c: 1533: }
 18995                           ;doprnt.c: 1535: alldone:
 18996                           
 18997  0FFF  0008               	return
 18998  1000                     __end_of_printf:	
 18999                           
 19000                           	psect	text63
 19001  21B3                     __ptext63:	
 19002 ;; *************** function _putch *****************
 19003 ;; Defined at:
 19004 ;;		line 156 in file "mcc_generated_files/eusart.c"
 19005 ;; Parameters:    Size  Location     Type
 19006 ;;  txData          1    wreg     unsigned char 
 19007 ;; Auto vars:     Size  Location     Type
 19008 ;;  txData          1   19[BANK0 ] unsigned char 
 19009 ;; Return value:  Size  Location     Type
 19010 ;;                  1    wreg      void 
 19011 ;; Registers used:
 19012 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19013 ;; Tracked objects:
 19014 ;;		On entry : 0/0
 19015 ;;		On exit  : 0/0
 19016 ;;		Unchanged: 0/0
 19017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19019 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19021 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19022 ;;Total ram usage:        1 bytes
 19023 ;; Hardware stack levels used:    1
 19024 ;; Hardware stack levels required when called:    7
 19025 ;; This function calls:
 19026 ;;		_EUSART_Write
 19027 ;; This function is called by:
 19028 ;;		_printf
 19029 ;; This function uses a non-reentrant model
 19030 ;;
 19031                           
 19032                           
 19033                           ;psect for function _putch
 19034  21B3                     _putch:	
 19035                           
 19036                           ;incstack = 0
 19037                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19038                           ;putch@txData stored from wreg
 19039  21B3  0020               	movlb	0	; select bank0
 19040  21B4  00B3               	movwf	putch@txData
 19041                           
 19042                           ;eusart.c: 158: EUSART_Write(txData);
 19043  21B5  0833               	movf	putch@txData,w
 19044  21B6  31A6  2627         	fcall	_EUSART_Write
 19045  21B8  0008               	return
 19046  21B9                     __end_of_putch:	
 19047                           
 19048                           	psect	text64
 19049  2627                     __ptext64:	
 19050 ;; *************** function _EUSART_Write *****************
 19051 ;; Defined at:
 19052 ;;		line 128 in file "mcc_generated_files/eusart.c"
 19053 ;; Parameters:    Size  Location     Type
 19054 ;;  txData          1    wreg     unsigned char 
 19055 ;; Auto vars:     Size  Location     Type
 19056 ;;  txData          1   18[BANK0 ] unsigned char 
 19057 ;; Return value:  Size  Location     Type
 19058 ;;                  1    wreg      void 
 19059 ;; Registers used:
 19060 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19061 ;; Tracked objects:
 19062 ;;		On entry : 0/0
 19063 ;;		On exit  : 0/0
 19064 ;;		Unchanged: 0/0
 19065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19068 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19069 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19070 ;;Total ram usage:        2 bytes
 19071 ;; Hardware stack levels used:    1
 19072 ;; Hardware stack levels required when called:    6
 19073 ;; This function calls:
 19074 ;;		Nothing
 19075 ;; This function is called by:
 19076 ;;		_putch
 19077 ;; This function uses a non-reentrant model
 19078 ;;
 19079                           
 19080                           
 19081                           ;psect for function _EUSART_Write
 19082  2627                     _EUSART_Write:	
 19083                           
 19084                           ;incstack = 0
 19085                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 19086                           ;EUSART_Write@txData stored from wreg
 19087  2627  0020               	movlb	0	; select bank0
 19088  2628  00B2               	movwf	EUSART_Write@txData
 19089  2629                     l7371:	
 19090                           ;eusart.c: 131: {
 19091                           
 19092                           ;eusart.c: 130: while(0 == eusartTxBufferRemaining)
 19093                           
 19094  2629  085E               	movf	_eusartTxBufferRemaining,w	;volatile
 19095  262A  1903               	btfsc	3,2
 19096  262B  2E29               	goto	l7371
 19097                           
 19098                           ;eusart.c: 132: }
 19099                           ;eusart.c: 134: if(0 == PIE1bits.TXIE)
 19100  262C  0021               	movlb	1	; select bank1
 19101  262D  1A11               	btfsc	17,4	;volatile
 19102  262E  2E34               	goto	l426
 19103                           
 19104                           ;eusart.c: 135: {
 19105                           ;eusart.c: 136: TX1REG = txData;
 19106  262F  0020               	movlb	0	; select bank0
 19107  2630  0832               	movf	EUSART_Write@txData,w
 19108  2631  0023               	movlb	3	; select bank3
 19109  2632  009A               	movwf	26	;volatile
 19110                           
 19111                           ;eusart.c: 137: }
 19112  2633  2E49               	goto	l7385
 19113  2634                     l426:	
 19114                           
 19115                           ;eusart.c: 138: else
 19116                           ;eusart.c: 139: {
 19117                           ;eusart.c: 140: PIE1bits.TXIE = 0;
 19118  2634  1211               	bcf	17,4	;volatile
 19119                           
 19120                           ;eusart.c: 141: eusartTxBuffer[eusartTxHead++] = txData;
 19121  2635  0020               	movlb	0	; select bank0
 19122  2636  0832               	movf	EUSART_Write@txData,w
 19123  2637  00B1               	movwf	??_EUSART_Write
 19124  2638  087D               	movf	_eusartTxHead,w
 19125  2639  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 19126  263A  0086               	movwf	6
 19127  263B  3001               	movlw	1	; select bank3/4
 19128  263C  0087               	movwf	7
 19129  263D  0831               	movf	??_EUSART_Write,w
 19130  263E  0081               	movwf	1
 19131  263F  3001               	movlw	1
 19132  2640  00B1               	movwf	??_EUSART_Write
 19133  2641  0831               	movf	??_EUSART_Write,w
 19134  2642  07FD               	addwf	_eusartTxHead,f	;volatile
 19135                           
 19136                           ;eusart.c: 142: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 19137  2643  3008               	movlw	8
 19138  2644  027D               	subwf	_eusartTxHead,w	;volatile
 19139  2645  1803               	btfsc	3,0
 19140                           
 19141                           ;eusart.c: 143: {
 19142                           ;eusart.c: 144: eusartTxHead = 0;
 19143  2646  01FD               	clrf	_eusartTxHead	;volatile
 19144                           
 19145                           ;eusart.c: 145: }
 19146                           ;eusart.c: 146: eusartTxBufferRemaining--;
 19147  2647  3001               	movlw	1
 19148  2648  02DE               	subwf	_eusartTxBufferRemaining,f	;volatile
 19149  2649                     l7385:	
 19150                           
 19151                           ;eusart.c: 147: }
 19152                           ;eusart.c: 148: PIE1bits.TXIE = 1;
 19153  2649  0021               	movlb	1	; select bank1
 19154  264A  1611               	bsf	17,4	;volatile
 19155  264B  0008               	return
 19156  264C                     __end_of_EUSART_Write:	
 19157                           
 19158                           	psect	text65
 19159  18EF                     __ptext65:	
 19160 ;; *************** function ___llmod *****************
 19161 ;; Defined at:
 19162 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 19163 ;; Parameters:    Size  Location     Type
 19164 ;;  divisor         4   31[BANK0 ] unsigned long 
 19165 ;;  dividend        4   35[BANK0 ] unsigned long 
 19166 ;; Auto vars:     Size  Location     Type
 19167 ;;  counter         1   40[BANK0 ] unsigned char 
 19168 ;; Return value:  Size  Location     Type
 19169 ;;                  4   31[BANK0 ] unsigned long 
 19170 ;; Registers used:
 19171 ;;		wreg, status,2, status,0
 19172 ;; Tracked objects:
 19173 ;;		On entry : 0/0
 19174 ;;		On exit  : 0/0
 19175 ;;		Unchanged: 0/0
 19176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19177 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19178 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19179 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19180 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19181 ;;Total ram usage:       10 bytes
 19182 ;; Hardware stack levels used:    1
 19183 ;; Hardware stack levels required when called:    6
 19184 ;; This function calls:
 19185 ;;		Nothing
 19186 ;; This function is called by:
 19187 ;;		_printf
 19188 ;; This function uses a non-reentrant model
 19189 ;;
 19190                           
 19191                           
 19192                           ;psect for function ___llmod
 19193  18EF                     ___llmod:	
 19194                           
 19195                           ;incstack = 0
 19196                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 19197  18EF  0020               	movlb	0	; select bank0
 19198  18F0  0842               	movf	___llmod@divisor+3,w
 19199  18F1  0441               	iorwf	___llmod@divisor+2,w
 19200  18F2  0440               	iorwf	___llmod@divisor+1,w
 19201  18F3  043F               	iorwf	___llmod@divisor,w
 19202  18F4  1903               	skipnz
 19203  18F5  2929               	goto	l7459
 19204  18F6  01C8               	clrf	___llmod@counter
 19205  18F7  0AC8               	incf	___llmod@counter,f
 19206  18F8                     l7449:	
 19207  18F8  1BC2               	btfsc	___llmod@divisor+3,7
 19208  18F9  2906               	goto	l7451
 19209  18FA  3001               	movlw	1
 19210  18FB                     u6885:	
 19211  18FB  35BF               	lslf	___llmod@divisor,f
 19212  18FC  0DC0               	rlf	___llmod@divisor+1,f
 19213  18FD  0DC1               	rlf	___llmod@divisor+2,f
 19214  18FE  0DC2               	rlf	___llmod@divisor+3,f
 19215  18FF  0B89               	decfsz	9,f
 19216  1900  28FB               	goto	u6885
 19217  1901  3001               	movlw	1
 19218  1902  00C7               	movwf	??___llmod
 19219  1903  0847               	movf	??___llmod,w
 19220  1904  07C8               	addwf	___llmod@counter,f
 19221  1905  28F8               	goto	l7449
 19222  1906                     l7451:	
 19223  1906  0842               	movf	___llmod@divisor+3,w
 19224  1907  0246               	subwf	___llmod@dividend+3,w
 19225  1908  1D03               	skipz
 19226  1909  2914               	goto	u6905
 19227  190A  0841               	movf	___llmod@divisor+2,w
 19228  190B  0245               	subwf	___llmod@dividend+2,w
 19229  190C  1D03               	skipz
 19230  190D  2914               	goto	u6905
 19231  190E  0840               	movf	___llmod@divisor+1,w
 19232  190F  0244               	subwf	___llmod@dividend+1,w
 19233  1910  1D03               	skipz
 19234  1911  2914               	goto	u6905
 19235  1912  083F               	movf	___llmod@divisor,w
 19236  1913  0243               	subwf	___llmod@dividend,w
 19237  1914                     u6905:	
 19238  1914  1C03               	skipc
 19239  1915  291E               	goto	l7455
 19240  1916  083F               	movf	___llmod@divisor,w
 19241  1917  02C3               	subwf	___llmod@dividend,f
 19242  1918  0840               	movf	___llmod@divisor+1,w
 19243  1919  3BC4               	subwfb	___llmod@dividend+1,f
 19244  191A  0841               	movf	___llmod@divisor+2,w
 19245  191B  3BC5               	subwfb	___llmod@dividend+2,f
 19246  191C  0842               	movf	___llmod@divisor+3,w
 19247  191D  3BC6               	subwfb	___llmod@dividend+3,f
 19248  191E                     l7455:	
 19249  191E  3001               	movlw	1
 19250  191F                     u6915:	
 19251  191F  36C2               	lsrf	___llmod@divisor+3,f
 19252  1920  0CC1               	rrf	___llmod@divisor+2,f
 19253  1921  0CC0               	rrf	___llmod@divisor+1,f
 19254  1922  0CBF               	rrf	___llmod@divisor,f
 19255  1923  0B89               	decfsz	9,f
 19256  1924  291F               	goto	u6915
 19257  1925  3001               	movlw	1
 19258  1926  02C8               	subwf	___llmod@counter,f
 19259  1927  1D03               	btfss	3,2
 19260  1928  2906               	goto	l7451
 19261  1929                     l7459:	
 19262  1929  0846               	movf	___llmod@dividend+3,w
 19263  192A  00C2               	movwf	?___llmod+3
 19264  192B  0845               	movf	___llmod@dividend+2,w
 19265  192C  00C1               	movwf	?___llmod+2
 19266  192D  0844               	movf	___llmod@dividend+1,w
 19267  192E  00C0               	movwf	?___llmod+1
 19268  192F  0843               	movf	___llmod@dividend,w
 19269  1930  00BF               	movwf	?___llmod
 19270  1931  0008               	return
 19271  1932                     __end_of___llmod:	
 19272                           
 19273                           	psect	text66
 19274  1CFA                     __ptext66:	
 19275 ;; *************** function ___lldiv *****************
 19276 ;; Defined at:
 19277 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 19278 ;; Parameters:    Size  Location     Type
 19279 ;;  divisor         4   17[BANK0 ] unsigned long 
 19280 ;;  dividend        4   21[BANK0 ] unsigned long 
 19281 ;; Auto vars:     Size  Location     Type
 19282 ;;  quotient        4   26[BANK0 ] unsigned long 
 19283 ;;  counter         1   30[BANK0 ] unsigned char 
 19284 ;; Return value:  Size  Location     Type
 19285 ;;                  4   17[BANK0 ] unsigned long 
 19286 ;; Registers used:
 19287 ;;		wreg, status,2, status,0
 19288 ;; Tracked objects:
 19289 ;;		On entry : 0/0
 19290 ;;		On exit  : 0/0
 19291 ;;		Unchanged: 0/0
 19292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19293 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19294 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19295 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19296 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19297 ;;Total ram usage:       14 bytes
 19298 ;; Hardware stack levels used:    1
 19299 ;; Hardware stack levels required when called:    6
 19300 ;; This function calls:
 19301 ;;		Nothing
 19302 ;; This function is called by:
 19303 ;;		_printf
 19304 ;; This function uses a non-reentrant model
 19305 ;;
 19306                           
 19307                           
 19308                           ;psect for function ___lldiv
 19309  1CFA                     ___lldiv:	
 19310                           
 19311                           ;incstack = 0
 19312                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 19313  1CFA  3000               	movlw	0
 19314  1CFB  0020               	movlb	0	; select bank0
 19315  1CFC  00BD               	movwf	___lldiv@quotient+3
 19316  1CFD  3000               	movlw	0
 19317  1CFE  00BC               	movwf	___lldiv@quotient+2
 19318  1CFF  3000               	movlw	0
 19319  1D00  00BB               	movwf	___lldiv@quotient+1
 19320  1D01  3000               	movlw	0
 19321  1D02  00BA               	movwf	___lldiv@quotient
 19322  1D03  0834               	movf	___lldiv@divisor+3,w
 19323  1D04  0433               	iorwf	___lldiv@divisor+2,w
 19324  1D05  0432               	iorwf	___lldiv@divisor+1,w
 19325  1D06  0431               	iorwf	___lldiv@divisor,w
 19326  1D07  1903               	skipnz
 19327  1D08  2D44               	goto	l7439
 19328  1D09  01BE               	clrf	___lldiv@counter
 19329  1D0A  0ABE               	incf	___lldiv@counter,f
 19330  1D0B                     l7425:	
 19331  1D0B  1BB4               	btfsc	___lldiv@divisor+3,7
 19332  1D0C  2D19               	goto	l7427
 19333  1D0D  3001               	movlw	1
 19334  1D0E                     u6815:	
 19335  1D0E  35B1               	lslf	___lldiv@divisor,f
 19336  1D0F  0DB2               	rlf	___lldiv@divisor+1,f
 19337  1D10  0DB3               	rlf	___lldiv@divisor+2,f
 19338  1D11  0DB4               	rlf	___lldiv@divisor+3,f
 19339  1D12  0B89               	decfsz	9,f
 19340  1D13  2D0E               	goto	u6815
 19341  1D14  3001               	movlw	1
 19342  1D15  00B9               	movwf	??___lldiv
 19343  1D16  0839               	movf	??___lldiv,w
 19344  1D17  07BE               	addwf	___lldiv@counter,f
 19345  1D18  2D0B               	goto	l7425
 19346  1D19                     l7427:	
 19347  1D19  3001               	movlw	1
 19348  1D1A                     u6835:	
 19349  1D1A  35BA               	lslf	___lldiv@quotient,f
 19350  1D1B  0DBB               	rlf	___lldiv@quotient+1,f
 19351  1D1C  0DBC               	rlf	___lldiv@quotient+2,f
 19352  1D1D  0DBD               	rlf	___lldiv@quotient+3,f
 19353  1D1E  0B89               	decfsz	9,f
 19354  1D1F  2D1A               	goto	u6835
 19355  1D20  0834               	movf	___lldiv@divisor+3,w
 19356  1D21  0238               	subwf	___lldiv@dividend+3,w
 19357  1D22  1D03               	skipz
 19358  1D23  2D2E               	goto	u6845
 19359  1D24  0833               	movf	___lldiv@divisor+2,w
 19360  1D25  0237               	subwf	___lldiv@dividend+2,w
 19361  1D26  1D03               	skipz
 19362  1D27  2D2E               	goto	u6845
 19363  1D28  0832               	movf	___lldiv@divisor+1,w
 19364  1D29  0236               	subwf	___lldiv@dividend+1,w
 19365  1D2A  1D03               	skipz
 19366  1D2B  2D2E               	goto	u6845
 19367  1D2C  0831               	movf	___lldiv@divisor,w
 19368  1D2D  0235               	subwf	___lldiv@dividend,w
 19369  1D2E                     u6845:	
 19370  1D2E  1C03               	skipc
 19371  1D2F  2D39               	goto	l7435
 19372  1D30  0831               	movf	___lldiv@divisor,w
 19373  1D31  02B5               	subwf	___lldiv@dividend,f
 19374  1D32  0832               	movf	___lldiv@divisor+1,w
 19375  1D33  3BB6               	subwfb	___lldiv@dividend+1,f
 19376  1D34  0833               	movf	___lldiv@divisor+2,w
 19377  1D35  3BB7               	subwfb	___lldiv@dividend+2,f
 19378  1D36  0834               	movf	___lldiv@divisor+3,w
 19379  1D37  3BB8               	subwfb	___lldiv@dividend+3,f
 19380  1D38  143A               	bsf	___lldiv@quotient,0
 19381  1D39                     l7435:	
 19382  1D39  3001               	movlw	1
 19383  1D3A                     u6855:	
 19384  1D3A  36B4               	lsrf	___lldiv@divisor+3,f
 19385  1D3B  0CB3               	rrf	___lldiv@divisor+2,f
 19386  1D3C  0CB2               	rrf	___lldiv@divisor+1,f
 19387  1D3D  0CB1               	rrf	___lldiv@divisor,f
 19388  1D3E  0B89               	decfsz	9,f
 19389  1D3F  2D3A               	goto	u6855
 19390  1D40  3001               	movlw	1
 19391  1D41  02BE               	subwf	___lldiv@counter,f
 19392  1D42  1D03               	btfss	3,2
 19393  1D43  2D19               	goto	l7427
 19394  1D44                     l7439:	
 19395  1D44  083D               	movf	___lldiv@quotient+3,w
 19396  1D45  00B4               	movwf	?___lldiv+3
 19397  1D46  083C               	movf	___lldiv@quotient+2,w
 19398  1D47  00B3               	movwf	?___lldiv+2
 19399  1D48  083B               	movf	___lldiv@quotient+1,w
 19400  1D49  00B2               	movwf	?___lldiv+1
 19401  1D4A  083A               	movf	___lldiv@quotient,w
 19402  1D4B  00B1               	movwf	?___lldiv
 19403  1D4C  0008               	return
 19404  1D4D                     __end_of___lldiv:	
 19405                           
 19406                           	psect	text67
 19407  2391                     __ptext67:	
 19408 ;; *************** function _i2c_setBuffer *****************
 19409 ;; Defined at:
 19410 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 19411 ;; Parameters:    Size  Location     Type
 19412 ;;  buffer          2   17[BANK0 ] PTR void 
 19413 ;;		 -> drv_read@reg(1), drv_read@buff(1), drv2665@drv_fifo_sine(244), drv_write@buff(2), 
 19414 ;;  bufferSize      2   19[BANK0 ] unsigned int 
 19415 ;; Auto vars:     Size  Location     Type
 19416 ;;		None
 19417 ;; Return value:  Size  Location     Type
 19418 ;;                  1    wreg      void 
 19419 ;; Registers used:
 19420 ;;		wreg
 19421 ;; Tracked objects:
 19422 ;;		On entry : 0/0
 19423 ;;		On exit  : 0/0
 19424 ;;		Unchanged: 0/0
 19425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19426 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19429 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19430 ;;Total ram usage:        4 bytes
 19431 ;; Hardware stack levels used:    1
 19432 ;; Hardware stack levels required when called:    6
 19433 ;; This function calls:
 19434 ;;		Nothing
 19435 ;; This function is called by:
 19436 ;;		_drv_write
 19437 ;;		_drv_read
 19438 ;;		_drv_write_wvfrm
 19439 ;; This function uses a non-reentrant model
 19440 ;;
 19441                           
 19442                           
 19443                           ;psect for function _i2c_setBuffer
 19444  2391                     _i2c_setBuffer:	
 19445                           
 19446                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 19447                           
 19448                           ;incstack = 0
 19449                           ; Regs used in _i2c_setBuffer: [wreg]
 19450  2391  0022               	movlb	2	; select bank2
 19451  2392  1D20               	btfss	_i2c_status^(0+256),2
 19452  2393  0008               	return
 19453                           
 19454                           ;i2c_master.c: 187: {
 19455                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 19456  2394  0020               	movlb	0	; select bank0
 19457  2395  0832               	movf	i2c_setBuffer@buffer+1,w
 19458  2396  0022               	movlb	2	; select bank2
 19459  2397  00A3               	movwf	((low ((_i2c_status| (0+256)+2))+1))^0
 19460  2398  0020               	movlb	0	; select bank0
 19461  2399  0831               	movf	i2c_setBuffer@buffer,w
 19462  239A  0022               	movlb	2	; select bank2
 19463  239B  00A2               	movwf	(low ((_i2c_status| (0+256)+2)))^0
 19464                           
 19465                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 19466  239C  0020               	movlb	0	; select bank0
 19467  239D  0834               	movf	i2c_setBuffer@bufferSize+1,w
 19468  239E  0022               	movlb	2	; select bank2
 19469  239F  00A5               	movwf	((_i2c_status+1)^(0+256)+4)
 19470  23A0  0020               	movlb	0	; select bank0
 19471  23A1  0833               	movf	i2c_setBuffer@bufferSize,w
 19472  23A2  0022               	movlb	2	; select bank2
 19473  23A3  00A4               	movwf	(_i2c_status^(0+256)+4)
 19474                           
 19475                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 19476  23A4  1120               	bcf	_i2c_status^(0+256),2
 19477  23A5  0008               	return
 19478  23A6                     __end_of_i2c_setBuffer:	
 19479                           
 19480                           	psect	text68
 19481  25DF                     __ptext68:	
 19482 ;; *************** function _i2c_masterOperation *****************
 19483 ;; Defined at:
 19484 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 19485 ;; Parameters:    Size  Location     Type
 19486 ;;  read            1    wreg     unsigned char 
 19487 ;; Auto vars:     Size  Location     Type
 19488 ;;  read            1   24[BANK0 ] unsigned char 
 19489 ;;  ret             1   25[BANK0 ] enum E8193
 19490 ;; Return value:  Size  Location     Type
 19491 ;;                  1    wreg      enum E8193
 19492 ;; Registers used:
 19493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19494 ;; Tracked objects:
 19495 ;;		On entry : 0/0
 19496 ;;		On exit  : 0/0
 19497 ;;		Unchanged: 0/0
 19498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19500 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19501 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19502 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19503 ;;Total ram usage:        3 bytes
 19504 ;; Hardware stack levels used:    1
 19505 ;; Hardware stack levels required when called:   11
 19506 ;; This function calls:
 19507 ;;		_i2c1_driver_start
 19508 ;;		_i2c_poller
 19509 ;;		_mssp1_IRQisEnabled
 19510 ;; This function is called by:
 19511 ;;		_drv_write
 19512 ;;		_drv_read
 19513 ;;		_i2c_masterRead
 19514 ;;		_i2c_masterWrite
 19515 ;;		_drv_write_wvfrm
 19516 ;; This function uses a non-reentrant model
 19517 ;;
 19518                           
 19519                           
 19520                           ;psect for function _i2c_masterOperation
 19521  25DF                     _i2c_masterOperation:	
 19522                           
 19523                           ;incstack = 0
 19524                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19525                           ;i2c_masterOperation@read stored from wreg
 19526  25DF  0020               	movlb	0	; select bank0
 19527  25E0  00B8               	movwf	i2c_masterOperation@read
 19528                           
 19529                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 19530  25E1  01B9               	clrf	i2c_masterOperation@ret
 19531  25E2  0AB9               	incf	i2c_masterOperation@ret,f
 19532                           
 19533                           ;i2c_master.c: 196: if(!i2c_status.busy)
 19534  25E3  0022               	movlb	2	; select bank2
 19535  25E4  1820               	btfsc	_i2c_status^(0+256),0
 19536  25E5  2E00               	goto	l7579
 19537                           
 19538                           ;i2c_master.c: 197: {
 19539                           ;i2c_master.c: 198: i2c_status.busy = 1;
 19540  25E6  1420               	bsf	_i2c_status^(0+256),0
 19541                           
 19542                           ;i2c_master.c: 199: ret = I2C_NOERR;
 19543  25E7  0020               	movlb	0	; select bank0
 19544  25E8  01B9               	clrf	i2c_masterOperation@ret
 19545                           
 19546                           ;i2c_master.c: 201: if(read)
 19547  25E9  0838               	movf	i2c_masterOperation@read,w
 19548  25EA  1903               	btfsc	3,2
 19549  25EB  2DF0               	goto	l7573
 19550                           
 19551                           ;i2c_master.c: 202: {
 19552                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 19553  25EC  0022               	movlb	2	; select bank2
 19554  25ED  01AA               	clrf	(_i2c_status^(0+256)+10)
 19555  25EE  0AAA               	incf	(_i2c_status^(0+256)+10),f
 19556                           
 19557                           ;i2c_master.c: 204: }
 19558  25EF  2DF6               	goto	l7575
 19559  25F0                     l7573:	
 19560                           
 19561                           ;i2c_master.c: 205: else
 19562                           ;i2c_master.c: 206: {
 19563                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 19564  25F0  3002               	movlw	2
 19565  25F1  0020               	movlb	0	; select bank0
 19566  25F2  00B7               	movwf	??_i2c_masterOperation
 19567  25F3  0837               	movf	??_i2c_masterOperation,w
 19568  25F4  0022               	movlb	2	; select bank2
 19569  25F5  00AA               	movwf	(_i2c_status^(0+256)+10)
 19570  25F6                     l7575:	
 19571                           
 19572                           ;i2c_master.c: 208: }
 19573                           ;i2c_master.c: 209: i2c1_driver_start();
 19574  25F6  31A1  2134  31A5   	fcall	_i2c1_driver_start
 19575                           
 19576                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 19577  25F9  31A2  2269  31A5   	fcall	_mssp1_IRQisEnabled
 19578  25FC  1803               	btfsc	3,0
 19579  25FD  2E00               	goto	l7579
 19580                           
 19581                           ;i2c_master.c: 212: i2c_poller();
 19582  25FE  31A2  229E         	fcall	_i2c_poller
 19583  2600                     l7579:	
 19584                           
 19585                           ;i2c_master.c: 213: }
 19586                           ;i2c_master.c: 214: return ret;
 19587  2600  0020               	movlb	0	; select bank0
 19588  2601  0839               	movf	i2c_masterOperation@ret,w
 19589  2602  0008               	return
 19590  2603                     __end_of_i2c_masterOperation:	
 19591                           
 19592                           	psect	text69
 19593  2269                     __ptext69:	
 19594 ;; *************** function _mssp1_IRQisEnabled *****************
 19595 ;; Defined at:
 19596 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
 19597 ;; Parameters:    Size  Location     Type
 19598 ;;		None
 19599 ;; Auto vars:     Size  Location     Type
 19600 ;;		None
 19601 ;; Return value:  Size  Location     Type
 19602 ;;		None               void
 19603 ;; Registers used:
 19604 ;;		wreg, status,2, status,0
 19605 ;; Tracked objects:
 19606 ;;		On entry : 0/0
 19607 ;;		On exit  : 0/0
 19608 ;;		Unchanged: 0/0
 19609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19612 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19613 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19614 ;;Total ram usage:        2 bytes
 19615 ;; Hardware stack levels used:    1
 19616 ;; Hardware stack levels required when called:    6
 19617 ;; This function calls:
 19618 ;;		Nothing
 19619 ;; This function is called by:
 19620 ;;		_i2c_masterOperation
 19621 ;; This function uses a non-reentrant model
 19622 ;;
 19623                           
 19624                           
 19625                           ;psect for function _mssp1_IRQisEnabled
 19626  2269                     _mssp1_IRQisEnabled:	
 19627                           
 19628                           ;i2c1_driver.c: 45: return PIE1bits.SSP1IE;
 19629                           
 19630                           ;incstack = 0
 19631                           ; Regs used in _mssp1_IRQisEnabled: [wreg+status,2+status,0]
 19632  2269  0021               	movlb	1	; select bank1
 19633  226A  0C11               	rrf	17,w	;volatile
 19634  226B  0020               	movlb	0	; select bank0
 19635  226C  00B1               	movwf	??_mssp1_IRQisEnabled
 19636  226D  0CB1               	rrf	??_mssp1_IRQisEnabled,f
 19637  226E  0C31               	rrf	??_mssp1_IRQisEnabled,w
 19638  226F  3901               	andlw	1
 19639  2270  00B2               	movwf	??_mssp1_IRQisEnabled+1
 19640  2271  0C32               	rrf	??_mssp1_IRQisEnabled+1,w
 19641  2272  0008               	return
 19642  2273                     __end_of_mssp1_IRQisEnabled:	
 19643                           
 19644                           	psect	text70
 19645  229E                     __ptext70:	
 19646 ;; *************** function _i2c_poller *****************
 19647 ;; Defined at:
 19648 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 19649 ;; Parameters:    Size  Location     Type
 19650 ;;		None
 19651 ;; Auto vars:     Size  Location     Type
 19652 ;;		None
 19653 ;; Return value:  Size  Location     Type
 19654 ;;                  1    wreg      void 
 19655 ;; Registers used:
 19656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19657 ;; Tracked objects:
 19658 ;;		On entry : 0/0
 19659 ;;		On exit  : 0/0
 19660 ;;		Unchanged: 0/0
 19661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19666 ;;Total ram usage:        0 bytes
 19667 ;; Hardware stack levels used:    1
 19668 ;; Hardware stack levels required when called:   10
 19669 ;; This function calls:
 19670 ;;		_i2c_ISR
 19671 ;;		_mssp1_waitForEvent
 19672 ;; This function is called by:
 19673 ;;		_i2c_masterOperation
 19674 ;; This function uses a non-reentrant model
 19675 ;;
 19676                           
 19677                           
 19678                           ;psect for function _i2c_poller
 19679  229E                     _i2c_poller:	
 19680  229E                     l7417:	
 19681                           ;i2c_master.c: 232: while(i2c_status.busy)
 19682                           
 19683                           ;incstack = 0
 19684                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19685                           
 19686  229E  0022               	movlb	2	; select bank2
 19687  229F  1C20               	btfss	_i2c_status^(0+256),0
 19688  22A0  0008               	return
 19689                           
 19690                           ;i2c_master.c: 233: {
 19691                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 19692  22A1  3000               	movlw	0
 19693  22A2  31A2  2293  31A2   	fcall	_mssp1_waitForEvent
 19694                           
 19695                           ;i2c_master.c: 235: i2c_ISR();
 19696  22A5  31A6  264C  31A2   	fcall	_i2c_ISR
 19697  22A8  2A9E               	goto	l7417
 19698  22A9                     __end_of_i2c_poller:	
 19699                           
 19700                           	psect	text71
 19701  2293                     __ptext71:	
 19702 ;; *************** function _mssp1_waitForEvent *****************
 19703 ;; Defined at:
 19704 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
 19705 ;; Parameters:    Size  Location     Type
 19706 ;;  timeout         1    wreg     PTR unsigned int 
 19707 ;;		 -> NULL(0), 
 19708 ;; Auto vars:     Size  Location     Type
 19709 ;;  timeout         1   17[BANK0 ] PTR unsigned int 
 19710 ;;		 -> NULL(0), 
 19711 ;; Return value:  Size  Location     Type
 19712 ;;                  1    wreg      void 
 19713 ;; Registers used:
 19714 ;;		wreg
 19715 ;; Tracked objects:
 19716 ;;		On entry : 0/0
 19717 ;;		On exit  : 0/0
 19718 ;;		Unchanged: 0/0
 19719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19723 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19724 ;;Total ram usage:        1 bytes
 19725 ;; Hardware stack levels used:    1
 19726 ;; Hardware stack levels required when called:    6
 19727 ;; This function calls:
 19728 ;;		Nothing
 19729 ;; This function is called by:
 19730 ;;		_i2c_poller
 19731 ;; This function uses a non-reentrant model
 19732 ;;
 19733                           
 19734                           
 19735                           ;psect for function _mssp1_waitForEvent
 19736  2293                     _mssp1_waitForEvent:	
 19737                           
 19738                           ;i2c1_driver.c: 73: if(PIR1bits.SSP1IF == 0)
 19739                           
 19740                           ;incstack = 0
 19741                           ; Regs used in _mssp1_waitForEvent: [wreg]
 19742  2293  0020               	movlb	0	; select bank0
 19743  2294  1991               	btfsc	17,3	;volatile
 19744  2295  0008               	return
 19745  2296                     l511:	
 19746                           ;i2c1_driver.c: 74: {
 19747                           ;i2c1_driver.c: 75: while(1)
 19748                           
 19749                           
 19750                           ;i2c1_driver.c: 76: {
 19751                           ;i2c1_driver.c: 77: if(PIR1bits.SSP1IF) break;
 19752  2296  0020               	movlb	0	; select bank0
 19753  2297  1991               	btfsc	17,3	;volatile
 19754  2298  0008               	return
 19755                           
 19756                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(1000000/4000000.0)));
 19757  2299  3008               	movlw	8
 19758  229A                     u9147:	
 19759  229A  0B89               	decfsz	9,f
 19760  229B  2A9A               	goto	u9147
 19761  229C  0000               	nop
 19762  229D  2A96               	goto	l511
 19763  229E                     __end_of_mssp1_waitForEvent:	
 19764                           
 19765                           	psect	text72
 19766  264C                     __ptext72:	
 19767 ;; *************** function _i2c_ISR *****************
 19768 ;; Defined at:
 19769 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 19770 ;; Parameters:    Size  Location     Type
 19771 ;;		None
 19772 ;; Auto vars:     Size  Location     Type
 19773 ;;		None
 19774 ;; Return value:  Size  Location     Type
 19775 ;;                  1    wreg      void 
 19776 ;; Registers used:
 19777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19778 ;; Tracked objects:
 19779 ;;		On entry : 0/0
 19780 ;;		On exit  : 0/0
 19781 ;;		Unchanged: 0/0
 19782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19785 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19786 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19787 ;;Total ram usage:        1 bytes
 19788 ;; Hardware stack levels used:    1
 19789 ;; Hardware stack levels required when called:    9
 19790 ;; This function calls:
 19791 ;;		_do_I2C_DO_ACK
 19792 ;;		_do_I2C_DO_ADDRESS_NACK
 19793 ;;		_do_I2C_DO_NACK_RESTART
 19794 ;;		_do_I2C_DO_NACK_STOP
 19795 ;;		_do_I2C_IDLE
 19796 ;;		_do_I2C_RCEN
 19797 ;;		_do_I2C_RESET
 19798 ;;		_do_I2C_RX
 19799 ;;		_do_I2C_SEND_ADR_READ
 19800 ;;		_do_I2C_SEND_ADR_WRITE
 19801 ;;		_do_I2C_SEND_RESTART
 19802 ;;		_do_I2C_SEND_RESTART_READ
 19803 ;;		_do_I2C_SEND_RESTART_WRITE
 19804 ;;		_do_I2C_SEND_STOP
 19805 ;;		_do_I2C_TX
 19806 ;;		_do_I2C_TX_EMPTY
 19807 ;;		_i2c1_driver_isNACK
 19808 ;;		_mssp1_clearIRQ
 19809 ;; This function is called by:
 19810 ;;		_i2c_open
 19811 ;;		_i2c_poller
 19812 ;;		_INTERRUPT_InterruptManager
 19813 ;; This function uses a non-reentrant model
 19814 ;;
 19815                           
 19816                           
 19817                           ;psect for function _i2c_ISR
 19818  264C                     _i2c_ISR:	
 19819                           
 19820                           ;Skip over the trampoline to the duplicate function for level 1
 19821  264C  1C7E               	btfss	126,0
 19822  264D  2E50               	goto	l7393
 19823  264E  31A4  2CD4         	ljmp	i1l8657
 19824  2650                     _i2c_ISR$intlevel0:	
 19825  2650                     l7393:	
 19826                           ;incstack = 0
 19827                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19828                           
 19829                           
 19830                           ;i2c_master.c: 421: mssp1_clearIRQ();
 19831  2650  31A1  2146  31A6   	fcall	_mssp1_clearIRQ
 19832                           
 19833                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 19834  2653  0022               	movlb	2	; select bank2
 19835  2654  1DA0               	btfss	_i2c_status^(0+256),3
 19836  2655  2E61               	goto	l7401
 19837  2656  31A2  22F3  31A6   	fcall	_i2c1_driver_isNACK
 19838  2659  1C03               	btfss	3,0
 19839  265A  2E61               	goto	l7401
 19840                           
 19841                           ;i2c_master.c: 428: {
 19842                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 19843  265B  300F               	movlw	15
 19844  265C  0020               	movlb	0	; select bank0
 19845  265D  00B6               	movwf	??_i2c_ISR
 19846  265E  0836               	movf	??_i2c_ISR,w
 19847  265F  0022               	movlb	2	; select bank2
 19848  2660  00AA               	movwf	(_i2c_status^(0+256)+10)
 19849  2661                     l7401:	
 19850                           
 19851                           ;i2c_master.c: 430: }
 19852                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 19853  2661  0022               	movlb	2	; select bank2
 19854  2662  352A               	lslf	(_i2c_status^(0+256)+10),w
 19855  2663  3E20               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 19856  2664  0086               	movwf	6
 19857  2665  3002               	movlw	2	; select bank4/5
 19858  2666  0087               	movwf	7
 19859  2667  3F41               	moviw [1]fsr1
 19860  2668  008A               	movwf	10
 19861  2669  3F40               	moviw [0]fsr1
 19862  266A  000A               	callw
 19863  266B  31A6               	pagesel	$
 19864  266C  0020               	movlb	0	; select bank0
 19865  266D  00B6               	movwf	??_i2c_ISR
 19866  266E  0836               	movf	??_i2c_ISR,w
 19867  266F  0022               	movlb	2	; select bank2
 19868  2670  00AA               	movwf	(_i2c_status^(0+256)+10)
 19869  2671  0008               	return
 19870  2672                     __end_of_i2c_ISR:	
 19871                           
 19872                           	psect	text73
 19873  2146                     __ptext73:	
 19874 ;; *************** function _mssp1_clearIRQ *****************
 19875 ;; Defined at:
 19876 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 19877 ;; Parameters:    Size  Location     Type
 19878 ;;		None
 19879 ;; Auto vars:     Size  Location     Type
 19880 ;;		None
 19881 ;; Return value:  Size  Location     Type
 19882 ;;                  1    wreg      void 
 19883 ;; Registers used:
 19884 ;;		None
 19885 ;; Tracked objects:
 19886 ;;		On entry : 0/0
 19887 ;;		On exit  : 0/0
 19888 ;;		Unchanged: 0/0
 19889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19894 ;;Total ram usage:        0 bytes
 19895 ;; Hardware stack levels used:    1
 19896 ;; Hardware stack levels required when called:    6
 19897 ;; This function calls:
 19898 ;;		Nothing
 19899 ;; This function is called by:
 19900 ;;		_i2c_open
 19901 ;;		_i2c_ISR
 19902 ;;		_i2c_close
 19903 ;; This function uses a non-reentrant model
 19904 ;;
 19905                           
 19906                           
 19907                           ;psect for function _mssp1_clearIRQ
 19908  2146                     _mssp1_clearIRQ:	
 19909                           
 19910                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 19911                           
 19912                           ;incstack = 0
 19913                           ; Regs used in _mssp1_clearIRQ: []
 19914  2146  0020               	movlb	0	; select bank0
 19915  2147  1191               	bcf	17,3	;volatile
 19916  2148  0008               	return
 19917  2149                     __end_of_mssp1_clearIRQ:	
 19918                           
 19919                           	psect	text74
 19920  1975                     __ptext74:	
 19921 ;; *************** function _do_I2C_RX *****************
 19922 ;; Defined at:
 19923 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 19924 ;; Parameters:    Size  Location     Type
 19925 ;;		None
 19926 ;; Auto vars:     Size  Location     Type
 19927 ;;		None
 19928 ;; Return value:  Size  Location     Type
 19929 ;;                  1    wreg      enum E8364
 19930 ;; Registers used:
 19931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19932 ;; Tracked objects:
 19933 ;;		On entry : 0/0
 19934 ;;		On exit  : 0/0
 19935 ;;		Unchanged: 0/0
 19936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19939 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19940 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19941 ;;Total ram usage:        1 bytes
 19942 ;; Hardware stack levels used:    1
 19943 ;; Hardware stack levels required when called:    8
 19944 ;; This function calls:
 19945 ;;		_do_I2C_DO_NACK_RESTART
 19946 ;;		_do_I2C_DO_NACK_STOP
 19947 ;;		_i2c1_driver_getRXData
 19948 ;;		_i2c1_driver_sendACK
 19949 ;;		_returnReset
 19950 ;;		_returnStop
 19951 ;; This function is called by:
 19952 ;;		_i2c_ISR
 19953 ;;		i1_i2c_ISR
 19954 ;; This function uses a non-reentrant model
 19955 ;;
 19956                           
 19957                           
 19958                           ;psect for function _do_I2C_RX
 19959  1975                     _do_I2C_RX:	
 19960                           
 19961                           ;Skip over the trampoline to the duplicate function for level 1
 19962  1975  1C7E               	btfss	126,0
 19963  1976  2979               	goto	l7323
 19964  1977  3198  2871         	ljmp	i1l8435
 19965  1979                     _do_I2C_RX$intlevel0:	
 19966  1979                     l7323:	
 19967                           ;incstack = 0
 19968                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19969                           
 19970                           
 19971                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 19972  1979  0022               	movlb	2	; select bank2
 19973  197A  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 19974  197B  0086               	movwf	6
 19975  197C  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 19976  197D  0087               	movwf	7
 19977  197E  31A1  2140  3199   	fcall	_i2c1_driver_getRXData
 19978  1981  0081               	movwf	1
 19979  1982  3001               	movlw	1
 19980  1983  0022               	movlb	2	; select bank2
 19981  1984  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 19982  1985  3000               	movlw	0
 19983  1986  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 19984                           
 19985                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 19986  1987  3001               	movlw	1
 19987  1988  02A4               	subwf	(_i2c_status^(0+256)+4),f
 19988  1989  3000               	movlw	0
 19989  198A  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 19990  198B  0824               	movf	(_i2c_status^(0+256)+4),w
 19991  198C  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 19992  198D  1903               	btfsc	3,2
 19993  198E  2993               	goto	l772
 19994                           
 19995                           ;i2c_master.c: 361: {
 19996                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 19997  198F  31A1  2171         	fcall	_i2c1_driver_sendACK
 19998                           
 19999                           ;i2c_master.c: 363: return I2C_RCEN;
 20000  1991  3005               	movlw	5
 20001                           
 20002                           ;i2c_master.c: 364: }
 20003  1992  0008               	return
 20004  1993                     l772:	
 20005                           
 20006                           ;i2c_master.c: 365: else
 20007                           ;i2c_master.c: 366: {
 20008                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 20009  1993  1520               	bsf	_i2c_status^(0+256),2
 20010                           
 20011                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 20012  1994  299B               	goto	l7347
 20013  1995                     l7337:	
 20014                           ;i2c_master.c: 369: {
 20015                           ;i2c_master.c: 370: case i2c_restart_write:
 20016                           
 20017                           
 20018                           ;i2c_master.c: 371: case i2c_restart_read:
 20019                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 20020  1995  31A2  2207         	fcall	_do_I2C_DO_NACK_RESTART
 20021  1997  0008               	return
 20022  1998                     l7341:	
 20023                           ;i2c_master.c: 374: case i2c_continue:
 20024                           
 20025                           ;i2c_master.c: 373: default:
 20026                           
 20027                           
 20028                           ;i2c_master.c: 375: case i2c_stop:
 20029                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 20030  1998  31A1  21FF         	fcall	_do_I2C_DO_NACK_STOP
 20031                           
 20032                           ;i2c_master.c: 377: }
 20033  199A  0008               	return
 20034  199B                     l7347:	
 20035  199B  0022               	movlb	2	; select bank2
 20036  199C  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 20037  199D  0020               	movlb	0	; select bank0
 20038  199E  00B1               	movwf	??_do_I2C_RX
 20039  199F  0831               	movf	??_do_I2C_RX,w
 20040  19A0  00B1               	movwf	returnReset@p
 20041  19A1  300C               	movlw	12
 20042  19A2  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 20043  19A3  0086               	movwf	6
 20044  19A4  3001               	movlw	1	; select bank2/3
 20045  19A5  0087               	movwf	7
 20046  19A6  3F41               	moviw [1]fsr1
 20047  19A7  008A               	movwf	10
 20048  19A8  3F40               	moviw [0]fsr1
 20049  19A9  000A               	callw
 20050  19AA  3199               	pagesel	$
 20051                           
 20052                           ; Switch size 1, requested type "space"
 20053                           ; Number of cases is 4, Range of values is 1 to 4
 20054                           ; switch strategies available:
 20055                           ; Name         Instructions Cycles
 20056                           ; simple_byte           13     7 (average)
 20057                           ; direct_byte           17     9 (fixed)
 20058                           ; jumptable            263     9 (fixed)
 20059                           ;	Chosen strategy is simple_byte
 20060  19AB  3A01               	xorlw	1	; case 1
 20061  19AC  1903               	skipnz
 20062  19AD  2998               	goto	l7341
 20063  19AE  3A03               	xorlw	3	; case 2
 20064  19AF  1903               	skipnz
 20065  19B0  2995               	goto	l7337
 20066  19B1  3A01               	xorlw	1	; case 3
 20067  19B2  1903               	skipnz
 20068  19B3  2995               	goto	l7337
 20069  19B4  3A07               	xorlw	7	; case 4
 20070  19B5  1903               	skipnz
 20071  19B6  2998               	goto	l7341
 20072  19B7  2998               	goto	l7341
 20073  19B8  0008               	return
 20074  19B9                     __end_of_do_I2C_RX:	
 20075                           
 20076                           	psect	text75
 20077  1DA5                     __ptext75:	
 20078 ;; *************** function _do_I2C_TX *****************
 20079 ;; Defined at:
 20080 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 20081 ;; Parameters:    Size  Location     Type
 20082 ;;		None
 20083 ;; Auto vars:     Size  Location     Type
 20084 ;;		None
 20085 ;; Return value:  Size  Location     Type
 20086 ;;                  1    wreg      enum E8364
 20087 ;; Registers used:
 20088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20089 ;; Tracked objects:
 20090 ;;		On entry : 0/0
 20091 ;;		On exit  : 0/0
 20092 ;;		Unchanged: 0/0
 20093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20095 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20096 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20097 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20098 ;;Total ram usage:        4 bytes
 20099 ;; Hardware stack levels used:    1
 20100 ;; Hardware stack levels required when called:    8
 20101 ;; This function calls:
 20102 ;;		_do_I2C_SEND_RESTART_READ
 20103 ;;		_do_I2C_SEND_RESTART_WRITE
 20104 ;;		_do_I2C_SEND_STOP
 20105 ;;		_i2c1_driver_TXData
 20106 ;;		_i2c1_driver_isNACK
 20107 ;;		_returnReset
 20108 ;;		_returnStop
 20109 ;; This function is called by:
 20110 ;;		_i2c_ISR
 20111 ;;		i1_i2c_ISR
 20112 ;; This function uses a non-reentrant model
 20113 ;;
 20114                           
 20115                           
 20116                           ;psect for function _do_I2C_TX
 20117  1DA5                     _do_I2C_TX:	
 20118                           
 20119                           ;Skip over the trampoline to the duplicate function for level 1
 20120  1DA5  1C7E               	btfss	126,0
 20121  1DA6  2DA9               	goto	l7293
 20122  1DA7  319B  2BBE         	ljmp	i1l8405
 20123  1DA9                     _do_I2C_TX$intlevel0:	
 20124  1DA9                     l7293:	
 20125                           ;incstack = 0
 20126                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20127                           
 20128                           
 20129                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 20130  1DA9  31A2  22F3  319D   	fcall	_i2c1_driver_isNACK
 20131  1DAC  1803               	btfsc	3,0
 20132  1DAD  2DB8               	goto	l7311
 20133  1DAE  2DD6               	goto	l756
 20134  1DAF                     l7297:	
 20135                           ;i2c_master.c: 338: {
 20136                           ;i2c_master.c: 339: case i2c_restart_read:
 20137                           
 20138                           ;i2c_master.c: 336: {
 20139                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 20140                           
 20141                           
 20142                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 20143  1DAF  31A1  21D7         	fcall	_do_I2C_SEND_RESTART_READ
 20144  1DB1  0008               	return
 20145  1DB2                     l7301:	
 20146                           ;i2c_master.c: 341: case i2c_restart_write:
 20147                           
 20148                           
 20149                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 20150  1DB2  31A1  21DF         	fcall	_do_I2C_SEND_RESTART_WRITE
 20151  1DB4  0008               	return
 20152  1DB5                     l7305:	
 20153                           ;i2c_master.c: 344: case i2c_continue:
 20154                           
 20155                           ;i2c_master.c: 343: default:
 20156                           
 20157                           
 20158                           ;i2c_master.c: 345: case i2c_stop:
 20159                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 20160  1DB5  31A1  21EF         	fcall	_do_I2C_SEND_STOP
 20161                           
 20162                           ;i2c_master.c: 347: }
 20163  1DB7  0008               	return
 20164  1DB8                     l7311:	
 20165  1DB8  0022               	movlb	2	; select bank2
 20166  1DB9  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 20167  1DBA  0020               	movlb	0	; select bank0
 20168  1DBB  00B2               	movwf	??_do_I2C_TX
 20169  1DBC  0832               	movf	??_do_I2C_TX,w
 20170  1DBD  00B1               	movwf	returnReset@p
 20171  1DBE  3012               	movlw	18
 20172  1DBF  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 20173  1DC0  0086               	movwf	6
 20174  1DC1  3001               	movlw	1	; select bank2/3
 20175  1DC2  0087               	movwf	7
 20176  1DC3  3F41               	moviw [1]fsr1
 20177  1DC4  008A               	movwf	10
 20178  1DC5  3F40               	moviw [0]fsr1
 20179  1DC6  000A               	callw
 20180  1DC7  319D               	pagesel	$
 20181                           
 20182                           ; Switch size 1, requested type "space"
 20183                           ; Number of cases is 4, Range of values is 1 to 4
 20184                           ; switch strategies available:
 20185                           ; Name         Instructions Cycles
 20186                           ; simple_byte           13     7 (average)
 20187                           ; direct_byte           17     9 (fixed)
 20188                           ; jumptable            263     9 (fixed)
 20189                           ;	Chosen strategy is simple_byte
 20190  1DC8  3A01               	xorlw	1	; case 1
 20191  1DC9  1903               	skipnz
 20192  1DCA  2DB5               	goto	l7305
 20193  1DCB  3A03               	xorlw	3	; case 2
 20194  1DCC  1903               	skipnz
 20195  1DCD  2DAF               	goto	l7297
 20196  1DCE  3A01               	xorlw	1	; case 3
 20197  1DCF  1903               	skipnz
 20198  1DD0  2DB2               	goto	l7301
 20199  1DD1  3A07               	xorlw	7	; case 4
 20200  1DD2  1903               	skipnz
 20201  1DD3  2DB5               	goto	l7305
 20202  1DD4  2DB5               	goto	l7305
 20203                           
 20204                           ;i2c_master.c: 348: }
 20205  1DD5  0008               	return
 20206  1DD6                     l756:	
 20207                           
 20208                           ;i2c_master.c: 349: else
 20209                           ;i2c_master.c: 350: {
 20210                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 20211  1DD6  0022               	movlb	2	; select bank2
 20212  1DD7  11A0               	bcf	_i2c_status^(0+256),3
 20213                           
 20214                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 20215  1DD8  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 20216  1DD9  0020               	movlb	0	; select bank0
 20217  1DDA  00B3               	movwf	??_do_I2C_TX+1
 20218  1DDB  0022               	movlb	2	; select bank2
 20219  1DDC  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 20220  1DDD  0020               	movlb	0	; select bank0
 20221  1DDE  00B2               	movwf	??_do_I2C_TX
 20222  1DDF  0022               	movlb	2	; select bank2
 20223  1DE0  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 20224  1DE1  1903               	skipnz
 20225  1DE2  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 20226  1DE3  0020               	movlb	0	; select bank0
 20227  1DE4  0832               	movf	??_do_I2C_TX,w
 20228  1DE5  0084               	movwf	4
 20229  1DE6  0833               	movf	??_do_I2C_TX+1,w
 20230  1DE7  0085               	movwf	5
 20231  1DE8  0800               	movf	0,w	;code access
 20232  1DE9  31A1  21AD  319D   	fcall	_i2c1_driver_TXData
 20233                           
 20234                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 20235  1DEC  3001               	movlw	1
 20236  1DED  0022               	movlb	2	; select bank2
 20237  1DEE  02A4               	subwf	(_i2c_status^(0+256)+4),f
 20238  1DEF  3000               	movlw	0
 20239  1DF0  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 20240  1DF1  0824               	movf	(_i2c_status^(0+256)+4),w
 20241  1DF2  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 20242  1DF3  1D03               	btfss	3,2
 20243  1DF4  2DF7               	goto	l7319
 20244  1DF5  3006               	movlw	6
 20245  1DF6  2DF8               	goto	L40
 20246  1DF7                     l7319:	
 20247  1DF7  3003               	movlw	3
 20248  1DF8                     L40:	
 20249  1DF8  0020               	movlb	0	; select bank0
 20250  1DF9  00B4               	movwf	_do_I2C_TX$1134
 20251  1DFA  3000               	movlw	0
 20252  1DFB  00B5               	movwf	_do_I2C_TX$1134+1
 20253  1DFC  0834               	movf	_do_I2C_TX$1134,w
 20254  1DFD  0008               	return
 20255  1DFE                     __end_of_do_I2C_TX:	
 20256                           
 20257                           	psect	text76
 20258  2716                     __ptext76:	
 20259 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 20260 ;; Defined at:
 20261 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 20262 ;; Parameters:    Size  Location     Type
 20263 ;;		None
 20264 ;; Auto vars:     Size  Location     Type
 20265 ;;		None
 20266 ;; Return value:  Size  Location     Type
 20267 ;;                  1    wreg      enum E8364
 20268 ;; Registers used:
 20269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20270 ;; Tracked objects:
 20271 ;;		On entry : 0/0
 20272 ;;		On exit  : 0/0
 20273 ;;		Unchanged: 0/0
 20274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20278 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20279 ;;Total ram usage:        1 bytes
 20280 ;; Hardware stack levels used:    1
 20281 ;; Hardware stack levels required when called:    8
 20282 ;; This function calls:
 20283 ;;		_do_I2C_SEND_RESTART
 20284 ;;		_do_I2C_SEND_STOP
 20285 ;;		_returnReset
 20286 ;;		_returnStop
 20287 ;; This function is called by:
 20288 ;;		_i2c_ISR
 20289 ;;		i1_i2c_ISR
 20290 ;; This function uses a non-reentrant model
 20291 ;;
 20292                           
 20293                           
 20294                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 20295  2716                     _do_I2C_DO_ADDRESS_NACK:	
 20296                           
 20297                           ;Skip over the trampoline to the duplicate function for level 1
 20298  2716  1C7E               	btfss	126,0
 20299  2717  2F1A               	goto	l7277
 20300  2718  31A5  2DBB         	ljmp	i1l8389
 20301  271A                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
 20302  271A                     l7277:	
 20303                           ;incstack = 0
 20304                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20305                           
 20306                           
 20307                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 20308  271A  0022               	movlb	2	; select bank2
 20309  271B  11A0               	bcf	_i2c_status^(0+256),3
 20310                           
 20311                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 20312  271C  3002               	movlw	2
 20313  271D  0020               	movlb	0	; select bank0
 20314  271E  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 20315  271F  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 20316  2720  0022               	movlb	2	; select bank2
 20317  2721  00AB               	movwf	(_i2c_status^(0+256)+11)
 20318                           
 20319                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 20320  2722  2F29               	goto	l7291
 20321  2723                     l7281:	
 20322                           ;i2c_master.c: 324: {
 20323                           ;i2c_master.c: 325: case i2c_restart_read:
 20324                           
 20325                           
 20326                           ;i2c_master.c: 326: case i2c_restart_write:
 20327                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 20328  2723  31A1  21E7         	fcall	_do_I2C_SEND_RESTART
 20329  2725  0008               	return
 20330  2726                     l7285:	
 20331                           ;i2c_master.c: 328: default:
 20332                           
 20333                           
 20334                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 20335  2726  31A1  21EF         	fcall	_do_I2C_SEND_STOP
 20336                           
 20337                           ;i2c_master.c: 330: }
 20338  2728  0008               	return
 20339  2729                     l7291:	
 20340  2729  0022               	movlb	2	; select bank2
 20341  272A  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 20342  272B  0020               	movlb	0	; select bank0
 20343  272C  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 20344  272D  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 20345  272E  00B1               	movwf	returnReset@p
 20346  272F  3010               	movlw	16
 20347  2730  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 20348  2731  0086               	movwf	6
 20349  2732  3001               	movlw	1	; select bank2/3
 20350  2733  0087               	movwf	7
 20351  2734  3F41               	moviw [1]fsr1
 20352  2735  008A               	movwf	10
 20353  2736  3F40               	moviw [0]fsr1
 20354  2737  000A               	callw
 20355  2738  31A7               	pagesel	$
 20356                           
 20357                           ; Switch size 1, requested type "space"
 20358                           ; Number of cases is 2, Range of values is 2 to 3
 20359                           ; switch strategies available:
 20360                           ; Name         Instructions Cycles
 20361                           ; simple_byte            7     4 (average)
 20362                           ; direct_byte           13     9 (fixed)
 20363                           ; jumptable            263     9 (fixed)
 20364                           ;	Chosen strategy is simple_byte
 20365  2739  3A02               	xorlw	2	; case 2
 20366  273A  1903               	skipnz
 20367  273B  2F23               	goto	l7281
 20368  273C  3A01               	xorlw	1	; case 3
 20369  273D  1903               	skipnz
 20370  273E  2F23               	goto	l7281
 20371  273F  2F26               	goto	l7285
 20372  2740  0008               	return
 20373  2741                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 20374                           
 20375                           	psect	text77
 20376  2207                     __ptext77:	
 20377 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 20378 ;; Defined at:
 20379 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 20380 ;; Parameters:    Size  Location     Type
 20381 ;;		None
 20382 ;; Auto vars:     Size  Location     Type
 20383 ;;		None
 20384 ;; Return value:  Size  Location     Type
 20385 ;;                  1    wreg      enum E8364
 20386 ;; Registers used:
 20387 ;;		wreg, status,2, status,0, pclath, cstack
 20388 ;; Tracked objects:
 20389 ;;		On entry : 0/0
 20390 ;;		On exit  : 0/0
 20391 ;;		Unchanged: 0/0
 20392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20397 ;;Total ram usage:        0 bytes
 20398 ;; Hardware stack levels used:    1
 20399 ;; Hardware stack levels required when called:    7
 20400 ;; This function calls:
 20401 ;;		_i2c1_driver_sendNACK
 20402 ;; This function is called by:
 20403 ;;		_do_I2C_RX
 20404 ;;		_i2c_ISR
 20405 ;;		i1_i2c_ISR
 20406 ;; This function uses a non-reentrant model
 20407 ;;
 20408                           
 20409                           
 20410                           ;psect for function _do_I2C_DO_NACK_RESTART
 20411  2207                     _do_I2C_DO_NACK_RESTART:	
 20412                           
 20413                           ;Skip over the trampoline to the duplicate function for level 1
 20414  2207  1C7E               	btfss	126,0
 20415  2208  2A0B               	goto	l7213
 20416  2209  31A1  2969         	ljmp	i1l7995
 20417  220B                     _do_I2C_DO_NACK_RESTART$intlevel0:	
 20418  220B                     l7213:	
 20419                           ;incstack = 0
 20420                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20421                           
 20422                           
 20423                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 20424  220B  31A1  2175         	fcall	_i2c1_driver_sendNACK
 20425                           
 20426                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 20427  220D  3009               	movlw	9
 20428  220E  0008               	return
 20429  220F                     __end_of_do_I2C_DO_NACK_RESTART:	
 20430                           
 20431                           	psect	text78
 20432  21FF                     __ptext78:	
 20433 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 20434 ;; Defined at:
 20435 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 20436 ;; Parameters:    Size  Location     Type
 20437 ;;		None
 20438 ;; Auto vars:     Size  Location     Type
 20439 ;;		None
 20440 ;; Return value:  Size  Location     Type
 20441 ;;                  1    wreg      enum E8364
 20442 ;; Registers used:
 20443 ;;		wreg, status,2, status,0, pclath, cstack
 20444 ;; Tracked objects:
 20445 ;;		On entry : 0/0
 20446 ;;		On exit  : 0/0
 20447 ;;		Unchanged: 0/0
 20448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20453 ;;Total ram usage:        0 bytes
 20454 ;; Hardware stack levels used:    1
 20455 ;; Hardware stack levels required when called:    7
 20456 ;; This function calls:
 20457 ;;		_i2c1_driver_sendNACK
 20458 ;; This function is called by:
 20459 ;;		_do_I2C_RX
 20460 ;;		_i2c_ISR
 20461 ;;		i1_i2c_ISR
 20462 ;; This function uses a non-reentrant model
 20463 ;;
 20464                           
 20465                           
 20466                           ;psect for function _do_I2C_DO_NACK_STOP
 20467  21FF                     _do_I2C_DO_NACK_STOP:	
 20468                           
 20469                           ;Skip over the trampoline to the duplicate function for level 1
 20470  21FF  1C7E               	btfss	126,0
 20471  2200  2A03               	goto	l7207
 20472  2201  31A1  2965         	ljmp	i1l7989
 20473  2203                     _do_I2C_DO_NACK_STOP$intlevel0:	
 20474  2203                     l7207:	
 20475                           ;incstack = 0
 20476                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 20477                           
 20478                           
 20479                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 20480  2203  31A1  2175         	fcall	_i2c1_driver_sendNACK
 20481                           
 20482                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 20483  2205  300A               	movlw	10
 20484  2206  0008               	return
 20485  2207                     __end_of_do_I2C_DO_NACK_STOP:	
 20486                           
 20487                           	psect	text79
 20488  21F7                     __ptext79:	
 20489 ;; *************** function _do_I2C_DO_ACK *****************
 20490 ;; Defined at:
 20491 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 20492 ;; Parameters:    Size  Location     Type
 20493 ;;		None
 20494 ;; Auto vars:     Size  Location     Type
 20495 ;;		None
 20496 ;; Return value:  Size  Location     Type
 20497 ;;                  1    wreg      enum E8364
 20498 ;; Registers used:
 20499 ;;		wreg, status,2, status,0, pclath, cstack
 20500 ;; Tracked objects:
 20501 ;;		On entry : 0/0
 20502 ;;		On exit  : 0/0
 20503 ;;		Unchanged: 0/0
 20504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20509 ;;Total ram usage:        0 bytes
 20510 ;; Hardware stack levels used:    1
 20511 ;; Hardware stack levels required when called:    7
 20512 ;; This function calls:
 20513 ;;		_i2c1_driver_sendACK
 20514 ;; This function is called by:
 20515 ;;		_i2c_ISR
 20516 ;;		i1_i2c_ISR
 20517 ;; This function uses a non-reentrant model
 20518 ;;
 20519                           
 20520                           
 20521                           ;psect for function _do_I2C_DO_ACK
 20522  21F7                     _do_I2C_DO_ACK:	
 20523                           
 20524                           ;Skip over the trampoline to the duplicate function for level 1
 20525  21F7  1C7E               	btfss	126,0
 20526  21F8  29FB               	goto	l7271
 20527  21F9  31A1  2961         	ljmp	i1l8383
 20528  21FB                     _do_I2C_DO_ACK$intlevel0:	
 20529  21FB                     l7271:	
 20530                           ;incstack = 0
 20531                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 20532                           
 20533                           
 20534                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 20535  21FB  31A1  2171         	fcall	_i2c1_driver_sendACK
 20536                           
 20537                           ;i2c_master.c: 302: return I2C_RCEN;
 20538  21FD  3005               	movlw	5
 20539  21FE  0008               	return
 20540  21FF                     __end_of_do_I2C_DO_ACK:	
 20541                           
 20542                           	psect	text80
 20543  225F                     __ptext80:	
 20544 ;; *************** function _do_I2C_RCEN *****************
 20545 ;; Defined at:
 20546 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 20547 ;; Parameters:    Size  Location     Type
 20548 ;;		None
 20549 ;; Auto vars:     Size  Location     Type
 20550 ;;		None
 20551 ;; Return value:  Size  Location     Type
 20552 ;;                  1    wreg      enum E8364
 20553 ;; Registers used:
 20554 ;;		wreg, status,2, status,0, pclath, cstack
 20555 ;; Tracked objects:
 20556 ;;		On entry : 0/0
 20557 ;;		On exit  : 0/0
 20558 ;;		Unchanged: 0/0
 20559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20564 ;;Total ram usage:        0 bytes
 20565 ;; Hardware stack levels used:    1
 20566 ;; Hardware stack levels required when called:    7
 20567 ;; This function calls:
 20568 ;;		_i2c1_driver_startRX
 20569 ;; This function is called by:
 20570 ;;		_i2c_ISR
 20571 ;;		i1_i2c_ISR
 20572 ;; This function uses a non-reentrant model
 20573 ;;
 20574                           
 20575                           
 20576                           ;psect for function _do_I2C_RCEN
 20577  225F                     _do_I2C_RCEN:	
 20578                           
 20579                           ;Skip over the trampoline to the duplicate function for level 1
 20580  225F  1C7E               	btfss	126,0
 20581  2260  2A63               	goto	l7263
 20582  2261  31A1  299B         	ljmp	i1l6447
 20583  2263                     _do_I2C_RCEN$intlevel0:	
 20584  2263                     l7263:	
 20585                           ;incstack = 0
 20586                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 20587                           
 20588                           
 20589                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 20590  2263  0022               	movlb	2	; select bank2
 20591  2264  11A0               	bcf	_i2c_status^(0+256),3
 20592                           
 20593                           ;i2c_master.c: 295: i2c1_driver_startRX();
 20594  2265  31A1  213D         	fcall	_i2c1_driver_startRX
 20595                           
 20596                           ;i2c_master.c: 296: return I2C_RX;
 20597  2267  3004               	movlw	4
 20598  2268  0008               	return
 20599  2269                     __end_of_do_I2C_RCEN:	
 20600                           
 20601                           	psect	text81
 20602  2288                     __ptext81:	
 20603 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 20604 ;; Defined at:
 20605 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 20606 ;; Parameters:    Size  Location     Type
 20607 ;;		None
 20608 ;; Auto vars:     Size  Location     Type
 20609 ;;		None
 20610 ;; Return value:  Size  Location     Type
 20611 ;;                  1    wreg      enum E8364
 20612 ;; Registers used:
 20613 ;;		wreg, status,2, status,0, pclath, cstack
 20614 ;; Tracked objects:
 20615 ;;		On entry : 0/0
 20616 ;;		On exit  : 0/0
 20617 ;;		Unchanged: 0/0
 20618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20623 ;;Total ram usage:        0 bytes
 20624 ;; Hardware stack levels used:    1
 20625 ;; Hardware stack levels required when called:    7
 20626 ;; This function calls:
 20627 ;;		_i2c1_driver_TXData
 20628 ;; This function is called by:
 20629 ;;		_i2c_ISR
 20630 ;;		i1_i2c_ISR
 20631 ;; This function uses a non-reentrant model
 20632 ;;
 20633                           
 20634                           
 20635                           ;psect for function _do_I2C_SEND_ADR_WRITE
 20636  2288                     _do_I2C_SEND_ADR_WRITE:	
 20637                           
 20638                           ;Skip over the trampoline to the duplicate function for level 1
 20639  2288  1C7E               	btfss	126,0
 20640  2289  2A8C               	goto	l7255
 20641  228A  31A1  29C0         	ljmp	i1l8375
 20642  228C                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
 20643  228C                     l7255:	
 20644                           ;incstack = 0
 20645                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20646                           
 20647                           
 20648                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 20649  228C  0022               	movlb	2	; select bank2
 20650  228D  15A0               	bsf	_i2c_status^(0+256),3
 20651                           
 20652                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 20653  228E  3521               	lslf	(_i2c_status^(0+256)+1),w
 20654  228F  31A1  21AD         	fcall	_i2c1_driver_TXData
 20655                           
 20656                           ;i2c_master.c: 289: return I2C_TX;
 20657  2291  3003               	movlw	3
 20658  2292  0008               	return
 20659  2293                     __end_of_do_I2C_SEND_ADR_WRITE:	
 20660                           
 20661                           	psect	text82
 20662  22B5                     __ptext82:	
 20663 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 20664 ;; Defined at:
 20665 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 20666 ;; Parameters:    Size  Location     Type
 20667 ;;		None
 20668 ;; Auto vars:     Size  Location     Type
 20669 ;;		None
 20670 ;; Return value:  Size  Location     Type
 20671 ;;                  1    wreg      enum E8364
 20672 ;; Registers used:
 20673 ;;		wreg, status,2, status,0, pclath, cstack
 20674 ;; Tracked objects:
 20675 ;;		On entry : 0/0
 20676 ;;		On exit  : 0/0
 20677 ;;		Unchanged: 0/0
 20678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20683 ;;Total ram usage:        0 bytes
 20684 ;; Hardware stack levels used:    1
 20685 ;; Hardware stack levels required when called:    7
 20686 ;; This function calls:
 20687 ;;		_i2c1_driver_TXData
 20688 ;; This function is called by:
 20689 ;;		_i2c_ISR
 20690 ;;		i1_i2c_ISR
 20691 ;; This function uses a non-reentrant model
 20692 ;;
 20693                           
 20694                           
 20695                           ;psect for function _do_I2C_SEND_ADR_READ
 20696  22B5                     _do_I2C_SEND_ADR_READ:	
 20697                           
 20698                           ;Skip over the trampoline to the duplicate function for level 1
 20699  22B5  1C7E               	btfss	126,0
 20700  22B6  2AB9               	goto	l7247
 20701  22B7  31A1  29C7         	ljmp	i1l8367
 20702  22B9                     _do_I2C_SEND_ADR_READ$intlevel0:	
 20703  22B9                     l7247:	
 20704                           ;incstack = 0
 20705                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 20706                           
 20707                           
 20708                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 20709  22B9  0022               	movlb	2	; select bank2
 20710  22BA  15A0               	bsf	_i2c_status^(0+256),3
 20711                           
 20712                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 20713  22BB  1403               	setc
 20714  22BC  0D21               	rlf	(_i2c_status^(0+256)+1),w
 20715  22BD  31A1  21AD         	fcall	_i2c1_driver_TXData
 20716                           
 20717                           ;i2c_master.c: 282: return I2C_RCEN;
 20718  22BF  3005               	movlw	5
 20719  22C0  0008               	return
 20720  22C1                     __end_of_do_I2C_SEND_ADR_READ:	
 20721                           
 20722                           	psect	text83
 20723  21EF                     __ptext83:	
 20724 ;; *************** function _do_I2C_SEND_STOP *****************
 20725 ;; Defined at:
 20726 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 20727 ;; Parameters:    Size  Location     Type
 20728 ;;		None
 20729 ;; Auto vars:     Size  Location     Type
 20730 ;;		None
 20731 ;; Return value:  Size  Location     Type
 20732 ;;                  1    wreg      enum E8364
 20733 ;; Registers used:
 20734 ;;		wreg, status,2, status,0, pclath, cstack
 20735 ;; Tracked objects:
 20736 ;;		On entry : 0/0
 20737 ;;		On exit  : 0/0
 20738 ;;		Unchanged: 0/0
 20739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20744 ;;Total ram usage:        0 bytes
 20745 ;; Hardware stack levels used:    1
 20746 ;; Hardware stack levels required when called:    7
 20747 ;; This function calls:
 20748 ;;		_i2c1_driver_stop
 20749 ;; This function is called by:
 20750 ;;		_do_I2C_DO_ADDRESS_NACK
 20751 ;;		_do_I2C_TX
 20752 ;;		_do_I2C_TX_EMPTY
 20753 ;;		_i2c_ISR
 20754 ;;		i1_i2c_ISR
 20755 ;; This function uses a non-reentrant model
 20756 ;;
 20757                           
 20758                           
 20759                           ;psect for function _do_I2C_SEND_STOP
 20760  21EF                     _do_I2C_SEND_STOP:	
 20761                           
 20762                           ;Skip over the trampoline to the duplicate function for level 1
 20763  21EF  1C7E               	btfss	126,0
 20764  21F0  29F3               	goto	l7201
 20765  21F1  31A1  295D         	ljmp	i1l7983
 20766  21F3                     _do_I2C_SEND_STOP$intlevel0:	
 20767  21F3                     l7201:	
 20768                           ;incstack = 0
 20769                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 20770                           
 20771                           
 20772                           ;i2c_master.c: 274: i2c1_driver_stop();
 20773  21F3  31A1  213A         	fcall	_i2c1_driver_stop
 20774                           
 20775                           ;i2c_master.c: 275: return I2C_IDLE;
 20776  21F5  3000               	movlw	0
 20777  21F6  0008               	return
 20778  21F7                     __end_of_do_I2C_SEND_STOP:	
 20779                           
 20780                           	psect	text84
 20781  21E7                     __ptext84:	
 20782 ;; *************** function _do_I2C_SEND_RESTART *****************
 20783 ;; Defined at:
 20784 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 20785 ;; Parameters:    Size  Location     Type
 20786 ;;		None
 20787 ;; Auto vars:     Size  Location     Type
 20788 ;;		None
 20789 ;; Return value:  Size  Location     Type
 20790 ;;                  1    wreg      enum E8364
 20791 ;; Registers used:
 20792 ;;		wreg, status,2, status,0, pclath, cstack
 20793 ;; Tracked objects:
 20794 ;;		On entry : 0/0
 20795 ;;		On exit  : 0/0
 20796 ;;		Unchanged: 0/0
 20797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20802 ;;Total ram usage:        0 bytes
 20803 ;; Hardware stack levels used:    1
 20804 ;; Hardware stack levels required when called:    7
 20805 ;; This function calls:
 20806 ;;		_i2c1_driver_restart
 20807 ;; This function is called by:
 20808 ;;		_do_I2C_DO_ADDRESS_NACK
 20809 ;;		_do_I2C_TX_EMPTY
 20810 ;;		_i2c_ISR
 20811 ;;		i1_i2c_ISR
 20812 ;; This function uses a non-reentrant model
 20813 ;;
 20814                           
 20815                           
 20816                           ;psect for function _do_I2C_SEND_RESTART
 20817  21E7                     _do_I2C_SEND_RESTART:	
 20818                           
 20819                           ;Skip over the trampoline to the duplicate function for level 1
 20820  21E7  1C7E               	btfss	126,0
 20821  21E8  29EB               	goto	l7195
 20822  21E9  31A1  2959         	ljmp	i1l7977
 20823  21EB                     _do_I2C_SEND_RESTART$intlevel0:	
 20824  21EB                     l7195:	
 20825                           ;incstack = 0
 20826                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20827                           
 20828                           
 20829                           ;i2c_master.c: 268: i2c1_driver_restart();
 20830  21EB  31A1  2137         	fcall	_i2c1_driver_restart
 20831                           
 20832                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 20833  21ED  3001               	movlw	1
 20834  21EE  0008               	return
 20835  21EF                     __end_of_do_I2C_SEND_RESTART:	
 20836                           
 20837                           	psect	text85
 20838  21DF                     __ptext85:	
 20839 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 20840 ;; Defined at:
 20841 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 20842 ;; Parameters:    Size  Location     Type
 20843 ;;		None
 20844 ;; Auto vars:     Size  Location     Type
 20845 ;;		None
 20846 ;; Return value:  Size  Location     Type
 20847 ;;                  1    wreg      enum E8364
 20848 ;; Registers used:
 20849 ;;		wreg, status,2, status,0, pclath, cstack
 20850 ;; Tracked objects:
 20851 ;;		On entry : 0/0
 20852 ;;		On exit  : 0/0
 20853 ;;		Unchanged: 0/0
 20854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20859 ;;Total ram usage:        0 bytes
 20860 ;; Hardware stack levels used:    1
 20861 ;; Hardware stack levels required when called:    7
 20862 ;; This function calls:
 20863 ;;		_i2c1_driver_restart
 20864 ;; This function is called by:
 20865 ;;		_do_I2C_TX
 20866 ;;		_i2c_ISR
 20867 ;;		i1_i2c_ISR
 20868 ;; This function uses a non-reentrant model
 20869 ;;
 20870                           
 20871                           
 20872                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 20873  21DF                     _do_I2C_SEND_RESTART_WRITE:	
 20874                           
 20875                           ;Skip over the trampoline to the duplicate function for level 1
 20876  21DF  1C7E               	btfss	126,0
 20877  21E0  29E3               	goto	l7189
 20878  21E1  31A1  2955         	ljmp	i1l7971
 20879  21E3                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
 20880  21E3                     l7189:	
 20881                           ;incstack = 0
 20882                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20883                           
 20884                           
 20885                           ;i2c_master.c: 262: i2c1_driver_restart();
 20886  21E3  31A1  2137         	fcall	_i2c1_driver_restart
 20887                           
 20888                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 20889  21E5  3002               	movlw	2
 20890  21E6  0008               	return
 20891  21E7                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 20892                           
 20893                           	psect	text86
 20894  21D7                     __ptext86:	
 20895 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 20896 ;; Defined at:
 20897 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 20898 ;; Parameters:    Size  Location     Type
 20899 ;;		None
 20900 ;; Auto vars:     Size  Location     Type
 20901 ;;		None
 20902 ;; Return value:  Size  Location     Type
 20903 ;;                  1    wreg      enum E8364
 20904 ;; Registers used:
 20905 ;;		wreg, status,2, status,0, pclath, cstack
 20906 ;; Tracked objects:
 20907 ;;		On entry : 0/0
 20908 ;;		On exit  : 0/0
 20909 ;;		Unchanged: 0/0
 20910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20915 ;;Total ram usage:        0 bytes
 20916 ;; Hardware stack levels used:    1
 20917 ;; Hardware stack levels required when called:    7
 20918 ;; This function calls:
 20919 ;;		_i2c1_driver_restart
 20920 ;; This function is called by:
 20921 ;;		_do_I2C_TX
 20922 ;;		_i2c_ISR
 20923 ;;		i1_i2c_ISR
 20924 ;; This function uses a non-reentrant model
 20925 ;;
 20926                           
 20927                           
 20928                           ;psect for function _do_I2C_SEND_RESTART_READ
 20929  21D7                     _do_I2C_SEND_RESTART_READ:	
 20930                           
 20931                           ;Skip over the trampoline to the duplicate function for level 1
 20932  21D7  1C7E               	btfss	126,0
 20933  21D8  29DB               	goto	l7183
 20934  21D9  31A1  2951         	ljmp	i1l7965
 20935  21DB                     _do_I2C_SEND_RESTART_READ$intlevel0:	
 20936  21DB                     l7183:	
 20937                           ;incstack = 0
 20938                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 20939                           
 20940                           
 20941                           ;i2c_master.c: 256: i2c1_driver_restart();
 20942  21DB  31A1  2137         	fcall	_i2c1_driver_restart
 20943                           
 20944                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 20945  21DD  3001               	movlw	1
 20946  21DE  0008               	return
 20947  21DF                     __end_of_do_I2C_SEND_RESTART_READ:	
 20948                           
 20949                           	psect	text87
 20950  223A                     __ptext87:	
 20951 ;; *************** function _do_I2C_IDLE *****************
 20952 ;; Defined at:
 20953 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 20954 ;; Parameters:    Size  Location     Type
 20955 ;;		None
 20956 ;; Auto vars:     Size  Location     Type
 20957 ;;		None
 20958 ;; Return value:  Size  Location     Type
 20959 ;;                  1    wreg      enum E8364
 20960 ;; Registers used:
 20961 ;;		wreg, status,2
 20962 ;; Tracked objects:
 20963 ;;		On entry : 0/0
 20964 ;;		On exit  : 0/0
 20965 ;;		Unchanged: 0/0
 20966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20971 ;;Total ram usage:        0 bytes
 20972 ;; Hardware stack levels used:    1
 20973 ;; Hardware stack levels required when called:    6
 20974 ;; This function calls:
 20975 ;;		Nothing
 20976 ;; This function is called by:
 20977 ;;		_i2c_ISR
 20978 ;;		i1_i2c_ISR
 20979 ;; This function uses a non-reentrant model
 20980 ;;
 20981                           
 20982                           
 20983                           ;psect for function _do_I2C_IDLE
 20984  223A                     _do_I2C_IDLE:	
 20985                           
 20986                           ;Skip over the trampoline to the duplicate function for level 1
 20987  223A  1C7E               	btfss	126,0
 20988  223B  2A3E               	goto	l7239
 20989  223C  31A1  298C         	ljmp	i1l6423
 20990  223E                     _do_I2C_IDLE$intlevel0:	
 20991  223E                     l7239:	
 20992                           ;incstack = 0
 20993                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 20994                           
 20995                           
 20996                           ;i2c_master.c: 249: i2c_status.busy = 0;
 20997  223E  0022               	movlb	2	; select bank2
 20998  223F  1020               	bcf	_i2c_status^(0+256),0
 20999                           
 21000                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 21001  2240  01AB               	clrf	(_i2c_status^(0+256)+11)
 21002                           
 21003                           ;i2c_master.c: 251: return I2C_RESET;
 21004  2241  300E               	movlw	14
 21005  2242  0008               	return
 21006  2243                     __end_of_do_I2C_IDLE:	
 21007                           
 21008                           	psect	text88
 21009  227D                     __ptext88:	
 21010 ;; *************** function _do_I2C_RESET *****************
 21011 ;; Defined at:
 21012 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 21013 ;; Parameters:    Size  Location     Type
 21014 ;;		None
 21015 ;; Auto vars:     Size  Location     Type
 21016 ;;		None
 21017 ;; Return value:  Size  Location     Type
 21018 ;;                  1    wreg      enum E8364
 21019 ;; Registers used:
 21020 ;;		wreg, status,2, status,0, pclath, cstack
 21021 ;; Tracked objects:
 21022 ;;		On entry : 0/0
 21023 ;;		On exit  : 0/0
 21024 ;;		Unchanged: 0/0
 21025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21030 ;;Total ram usage:        0 bytes
 21031 ;; Hardware stack levels used:    1
 21032 ;; Hardware stack levels required when called:    7
 21033 ;; This function calls:
 21034 ;;		_i2c1_driver_resetBus
 21035 ;; This function is called by:
 21036 ;;		_i2c_ISR
 21037 ;;		i1_i2c_ISR
 21038 ;; This function uses a non-reentrant model
 21039 ;;
 21040                           
 21041                           
 21042                           ;psect for function _do_I2C_RESET
 21043  227D                     _do_I2C_RESET:	
 21044                           
 21045                           ;Skip over the trampoline to the duplicate function for level 1
 21046  227D  1C7E               	btfss	126,0
 21047  227E  2A81               	goto	l7229
 21048  227F  31A1  29B9         	ljmp	i1l6413
 21049  2281                     _do_I2C_RESET$intlevel0:	
 21050  2281                     l7229:	
 21051                           ;incstack = 0
 21052                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 21053                           
 21054                           
 21055                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 21056  2281  31A1  210F         	fcall	_i2c1_driver_resetBus
 21057                           
 21058                           ;i2c_master.c: 242: i2c_status.busy = 0;
 21059  2283  0022               	movlb	2	; select bank2
 21060  2284  1020               	bcf	_i2c_status^(0+256),0
 21061                           
 21062                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 21063  2285  01AB               	clrf	(_i2c_status^(0+256)+11)
 21064                           
 21065                           ;i2c_master.c: 244: return I2C_RESET;
 21066  2286  300E               	movlw	14
 21067  2287  0008               	return
 21068  2288                     __end_of_do_I2C_RESET:	
 21069                           
 21070                           	psect	text89
 21071  2741                     __ptext89:	
 21072 ;; *************** function _do_I2C_TX_EMPTY *****************
 21073 ;; Defined at:
 21074 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 21075 ;; Parameters:    Size  Location     Type
 21076 ;;		None
 21077 ;; Auto vars:     Size  Location     Type
 21078 ;;		None
 21079 ;; Return value:  Size  Location     Type
 21080 ;;                  1    wreg      enum E8364
 21081 ;; Registers used:
 21082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21083 ;; Tracked objects:
 21084 ;;		On entry : 0/0
 21085 ;;		On exit  : 0/0
 21086 ;;		Unchanged: 0/0
 21087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21090 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21091 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21092 ;;Total ram usage:        1 bytes
 21093 ;; Hardware stack levels used:    1
 21094 ;; Hardware stack levels required when called:    8
 21095 ;; This function calls:
 21096 ;;		_do_I2C_SEND_RESTART
 21097 ;;		_do_I2C_SEND_STOP
 21098 ;;		_mssp1_setIRQ
 21099 ;;		_returnReset
 21100 ;;		_returnStop
 21101 ;; This function is called by:
 21102 ;;		_i2c_ISR
 21103 ;;		i1_i2c_ISR
 21104 ;; This function uses a non-reentrant model
 21105 ;;
 21106                           
 21107                           
 21108                           ;psect for function _do_I2C_TX_EMPTY
 21109  2741                     _do_I2C_TX_EMPTY:	
 21110                           
 21111                           ;Skip over the trampoline to the duplicate function for level 1
 21112  2741  1C7E               	btfss	126,0
 21113  2742  2F45               	goto	l7349
 21114  2743  31A6  2EEC         	ljmp	i1l8461
 21115  2745                     _do_I2C_TX_EMPTY$intlevel0:	
 21116  2745                     l7349:	
 21117                           ;incstack = 0
 21118                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21119                           
 21120                           
 21121                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 21122  2745  0022               	movlb	2	; select bank2
 21123  2746  1520               	bsf	_i2c_status^(0+256),2
 21124                           
 21125                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 21126  2747  2F52               	goto	l7367
 21127  2748                     l7351:	
 21128                           ;i2c_master.c: 386: {
 21129                           ;i2c_master.c: 387: case i2c_restart_read:
 21130                           
 21131                           
 21132                           ;i2c_master.c: 388: case i2c_restart_write:
 21133                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 21134  2748  31A1  21E7         	fcall	_do_I2C_SEND_RESTART
 21135  274A  0008               	return
 21136  274B                     l7355:	
 21137                           ;i2c_master.c: 390: case i2c_continue:
 21138                           
 21139                           
 21140                           ;i2c_master.c: 391: mssp1_setIRQ();
 21141  274B  31A1  2143         	fcall	_mssp1_setIRQ
 21142                           
 21143                           ;i2c_master.c: 392: return I2C_TX;
 21144  274D  3003               	movlw	3
 21145  274E  0008               	return
 21146  274F                     l7361:	
 21147                           ;i2c_master.c: 394: case i2c_stop:
 21148                           
 21149                           ;i2c_master.c: 393: default:
 21150                           
 21151                           
 21152                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 21153  274F  31A1  21EF         	fcall	_do_I2C_SEND_STOP
 21154                           
 21155                           ;i2c_master.c: 396: }
 21156  2751  0008               	return
 21157  2752                     l7367:	
 21158  2752  0022               	movlb	2	; select bank2
 21159  2753  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 21160  2754  0020               	movlb	0	; select bank0
 21161  2755  00B1               	movwf	??_do_I2C_TX_EMPTY
 21162  2756  0831               	movf	??_do_I2C_TX_EMPTY,w
 21163  2757  00B1               	movwf	returnReset@p
 21164  2758  300C               	movlw	12
 21165  2759  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 21166  275A  0086               	movwf	6
 21167  275B  3001               	movlw	1	; select bank2/3
 21168  275C  0087               	movwf	7
 21169  275D  3F41               	moviw [1]fsr1
 21170  275E  008A               	movwf	10
 21171  275F  3F40               	moviw [0]fsr1
 21172  2760  000A               	callw
 21173  2761  31A7               	pagesel	$
 21174                           
 21175                           ; Switch size 1, requested type "space"
 21176                           ; Number of cases is 4, Range of values is 1 to 4
 21177                           ; switch strategies available:
 21178                           ; Name         Instructions Cycles
 21179                           ; simple_byte           13     7 (average)
 21180                           ; direct_byte           17     9 (fixed)
 21181                           ; jumptable            263     9 (fixed)
 21182                           ;	Chosen strategy is simple_byte
 21183  2762  3A01               	xorlw	1	; case 1
 21184  2763  1903               	skipnz
 21185  2764  2F4F               	goto	l7361
 21186  2765  3A03               	xorlw	3	; case 2
 21187  2766  1903               	skipnz
 21188  2767  2F48               	goto	l7351
 21189  2768  3A01               	xorlw	1	; case 3
 21190  2769  1903               	skipnz
 21191  276A  2F48               	goto	l7351
 21192  276B  3A07               	xorlw	7	; case 4
 21193  276C  1903               	skipnz
 21194  276D  2F4B               	goto	l7355
 21195  276E  2F4F               	goto	l7361
 21196  276F  0008               	return
 21197  2770                     __end_of_do_I2C_TX_EMPTY:	
 21198                           
 21199                           	psect	text90
 21200  2143                     __ptext90:	
 21201 ;; *************** function _mssp1_setIRQ *****************
 21202 ;; Defined at:
 21203 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 21204 ;; Parameters:    Size  Location     Type
 21205 ;;		None
 21206 ;; Auto vars:     Size  Location     Type
 21207 ;;		None
 21208 ;; Return value:  Size  Location     Type
 21209 ;;                  1    wreg      void 
 21210 ;; Registers used:
 21211 ;;		None
 21212 ;; Tracked objects:
 21213 ;;		On entry : 0/0
 21214 ;;		On exit  : 0/0
 21215 ;;		Unchanged: 0/0
 21216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21221 ;;Total ram usage:        0 bytes
 21222 ;; Hardware stack levels used:    1
 21223 ;; Hardware stack levels required when called:    6
 21224 ;; This function calls:
 21225 ;;		Nothing
 21226 ;; This function is called by:
 21227 ;;		_do_I2C_TX_EMPTY
 21228 ;; This function uses a non-reentrant model
 21229 ;;
 21230                           
 21231                           
 21232                           ;psect for function _mssp1_setIRQ
 21233  2143                     _mssp1_setIRQ:	
 21234                           
 21235                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 21236                           
 21237                           ;incstack = 0
 21238                           ; Regs used in _mssp1_setIRQ: []
 21239  2143  0020               	movlb	0	; select bank0
 21240  2144  1591               	bsf	17,3	;volatile
 21241  2145  0008               	return
 21242  2146                     __end_of_mssp1_setIRQ:	
 21243                           
 21244                           	psect	text91
 21245  22F3                     __ptext91:	
 21246 ;; *************** function _i2c1_driver_isNACK *****************
 21247 ;; Defined at:
 21248 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 21249 ;; Parameters:    Size  Location     Type
 21250 ;;		None
 21251 ;; Auto vars:     Size  Location     Type
 21252 ;;		None
 21253 ;; Return value:  Size  Location     Type
 21254 ;;		None               void
 21255 ;; Registers used:
 21256 ;;		wreg, status,2, status,0
 21257 ;; Tracked objects:
 21258 ;;		On entry : 0/0
 21259 ;;		On exit  : 0/0
 21260 ;;		Unchanged: 0/0
 21261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21264 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21265 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21266 ;;Total ram usage:        1 bytes
 21267 ;; Hardware stack levels used:    1
 21268 ;; Hardware stack levels required when called:    6
 21269 ;; This function calls:
 21270 ;;		Nothing
 21271 ;; This function is called by:
 21272 ;;		_do_I2C_TX
 21273 ;;		_i2c_ISR
 21274 ;; This function uses a non-reentrant model
 21275 ;;
 21276                           
 21277                           
 21278                           ;psect for function _i2c1_driver_isNACK
 21279  22F3                     _i2c1_driver_isNACK:	
 21280                           
 21281                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 21282                           
 21283                           ;incstack = 0
 21284                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 21285  22F3  0024               	movlb	4	; select bank4
 21286  22F4  0816               	movf	22,w	;volatile
 21287  22F5  39BF               	andlw	-65
 21288  22F6  3840               	iorlw	64
 21289  22F7  0096               	movwf	22	;volatile
 21290  22F8  0E16               	swapf	22,w	;volatile
 21291  22F9  0C89               	rrf	9,f
 21292  22FA  0C89               	rrf	9,f
 21293  22FB  3901               	andlw	1
 21294  22FC  0020               	movlb	0	; select bank0
 21295  22FD  00B1               	movwf	??_i2c1_driver_isNACK
 21296  22FE  0C31               	rrf	??_i2c1_driver_isNACK,w
 21297  22FF  0008               	return
 21298  2300                     __end_of_i2c1_driver_isNACK:	
 21299                           
 21300                           	psect	text92
 21301  21AD                     __ptext92:	
 21302 ;; *************** function _i2c1_driver_TXData *****************
 21303 ;; Defined at:
 21304 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 21305 ;; Parameters:    Size  Location     Type
 21306 ;;  d               1    wreg     unsigned char 
 21307 ;; Auto vars:     Size  Location     Type
 21308 ;;  d               1   17[BANK0 ] unsigned char 
 21309 ;; Return value:  Size  Location     Type
 21310 ;;                  1    wreg      void 
 21311 ;; Registers used:
 21312 ;;		wreg
 21313 ;; Tracked objects:
 21314 ;;		On entry : 0/0
 21315 ;;		On exit  : 0/0
 21316 ;;		Unchanged: 0/0
 21317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21319 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21321 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21322 ;;Total ram usage:        1 bytes
 21323 ;; Hardware stack levels used:    1
 21324 ;; Hardware stack levels required when called:    6
 21325 ;; This function calls:
 21326 ;;		Nothing
 21327 ;; This function is called by:
 21328 ;;		_do_I2C_SEND_ADR_READ
 21329 ;;		_do_I2C_SEND_ADR_WRITE
 21330 ;;		_do_I2C_TX
 21331 ;; This function uses a non-reentrant model
 21332 ;;
 21333                           
 21334                           
 21335                           ;psect for function _i2c1_driver_TXData
 21336  21AD                     _i2c1_driver_TXData:	
 21337                           
 21338                           ;incstack = 0
 21339                           ; Regs used in _i2c1_driver_TXData: [wreg]
 21340                           ;i2c1_driver_TXData@d stored from wreg
 21341  21AD  0020               	movlb	0	; select bank0
 21342  21AE  00B1               	movwf	i2c1_driver_TXData@d
 21343                           
 21344                           ;i2c1_driver.c: 188: SSP1BUF = d;
 21345  21AF  0831               	movf	i2c1_driver_TXData@d,w
 21346  21B0  0024               	movlb	4	; select bank4
 21347  21B1  0091               	movwf	17	;volatile
 21348  21B2  0008               	return
 21349  21B3                     __end_of_i2c1_driver_TXData:	
 21350                           
 21351                           	psect	text93
 21352  2140                     __ptext93:	
 21353 ;; *************** function _i2c1_driver_getRXData *****************
 21354 ;; Defined at:
 21355 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 21356 ;; Parameters:    Size  Location     Type
 21357 ;;		None
 21358 ;; Auto vars:     Size  Location     Type
 21359 ;;		None
 21360 ;; Return value:  Size  Location     Type
 21361 ;;                  1    wreg      unsigned char 
 21362 ;; Registers used:
 21363 ;;		wreg
 21364 ;; Tracked objects:
 21365 ;;		On entry : 0/0
 21366 ;;		On exit  : 0/0
 21367 ;;		Unchanged: 0/0
 21368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21373 ;;Total ram usage:        0 bytes
 21374 ;; Hardware stack levels used:    1
 21375 ;; Hardware stack levels required when called:    6
 21376 ;; This function calls:
 21377 ;;		Nothing
 21378 ;; This function is called by:
 21379 ;;		_do_I2C_RX
 21380 ;; This function uses a non-reentrant model
 21381 ;;
 21382                           
 21383                           
 21384                           ;psect for function _i2c1_driver_getRXData
 21385  2140                     _i2c1_driver_getRXData:	
 21386                           
 21387                           ;i2c1_driver.c: 173: return SSP1BUF;
 21388                           
 21389                           ;incstack = 0
 21390                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 21391  2140  0024               	movlb	4	; select bank4
 21392  2141  0811               	movf	17,w	;volatile
 21393  2142  0008               	return
 21394  2143                     __end_of_i2c1_driver_getRXData:	
 21395                           
 21396                           	psect	text94
 21397  2175                     __ptext94:	
 21398 ;; *************** function _i2c1_driver_sendNACK *****************
 21399 ;; Defined at:
 21400 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 21401 ;; Parameters:    Size  Location     Type
 21402 ;;		None
 21403 ;; Auto vars:     Size  Location     Type
 21404 ;;		None
 21405 ;; Return value:  Size  Location     Type
 21406 ;;                  1    wreg      void 
 21407 ;; Registers used:
 21408 ;;		None
 21409 ;; Tracked objects:
 21410 ;;		On entry : 0/0
 21411 ;;		On exit  : 0/0
 21412 ;;		Unchanged: 0/0
 21413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21418 ;;Total ram usage:        0 bytes
 21419 ;; Hardware stack levels used:    1
 21420 ;; Hardware stack levels required when called:    6
 21421 ;; This function calls:
 21422 ;;		Nothing
 21423 ;; This function is called by:
 21424 ;;		_do_I2C_DO_NACK_STOP
 21425 ;;		_do_I2C_DO_NACK_RESTART
 21426 ;; This function uses a non-reentrant model
 21427 ;;
 21428                           
 21429                           
 21430                           ;psect for function _i2c1_driver_sendNACK
 21431  2175                     _i2c1_driver_sendNACK:	
 21432                           
 21433                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 21434                           
 21435                           ;incstack = 0
 21436                           ; Regs used in _i2c1_driver_sendNACK: []
 21437  2175  0024               	movlb	4	; select bank4
 21438  2176  1696               	bsf	22,5	;volatile
 21439                           
 21440                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 21441  2177  1616               	bsf	22,4	;volatile
 21442  2178  0008               	return
 21443  2179                     __end_of_i2c1_driver_sendNACK:	
 21444                           
 21445                           	psect	text95
 21446  210F                     __ptext95:	
 21447 ;; *************** function _i2c1_driver_resetBus *****************
 21448 ;; Defined at:
 21449 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 21450 ;; Parameters:    Size  Location     Type
 21451 ;;		None
 21452 ;; Auto vars:     Size  Location     Type
 21453 ;;		None
 21454 ;; Return value:  Size  Location     Type
 21455 ;;                  1    wreg      void 
 21456 ;; Registers used:
 21457 ;;		None
 21458 ;; Tracked objects:
 21459 ;;		On entry : 0/0
 21460 ;;		On exit  : 0/0
 21461 ;;		Unchanged: 0/0
 21462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21467 ;;Total ram usage:        0 bytes
 21468 ;; Hardware stack levels used:    1
 21469 ;; Hardware stack levels required when called:    6
 21470 ;; This function calls:
 21471 ;;		Nothing
 21472 ;; This function is called by:
 21473 ;;		_do_I2C_RESET
 21474 ;; This function uses a non-reentrant model
 21475 ;;
 21476                           
 21477                           
 21478                           ;psect for function _i2c1_driver_resetBus
 21479  210F                     _i2c1_driver_resetBus:	
 21480                           
 21481                           ;incstack = 0
 21482                           ; Regs used in _i2c1_driver_resetBus: []
 21483  210F  0008               	return
 21484  2110                     __end_of_i2c1_driver_resetBus:	
 21485                           
 21486                           	psect	text96
 21487  213D                     __ptext96:	
 21488 ;; *************** function _i2c1_driver_startRX *****************
 21489 ;; Defined at:
 21490 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 21491 ;; Parameters:    Size  Location     Type
 21492 ;;		None
 21493 ;; Auto vars:     Size  Location     Type
 21494 ;;		None
 21495 ;; Return value:  Size  Location     Type
 21496 ;;                  1    wreg      void 
 21497 ;; Registers used:
 21498 ;;		None
 21499 ;; Tracked objects:
 21500 ;;		On entry : 0/0
 21501 ;;		On exit  : 0/0
 21502 ;;		Unchanged: 0/0
 21503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21508 ;;Total ram usage:        0 bytes
 21509 ;; Hardware stack levels used:    1
 21510 ;; Hardware stack levels required when called:    6
 21511 ;; This function calls:
 21512 ;;		Nothing
 21513 ;; This function is called by:
 21514 ;;		_do_I2C_RCEN
 21515 ;; This function uses a non-reentrant model
 21516 ;;
 21517                           
 21518                           
 21519                           ;psect for function _i2c1_driver_startRX
 21520  213D                     _i2c1_driver_startRX:	
 21521                           
 21522                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 21523                           
 21524                           ;incstack = 0
 21525                           ; Regs used in _i2c1_driver_startRX: []
 21526  213D  0024               	movlb	4	; select bank4
 21527  213E  1596               	bsf	22,3	;volatile
 21528  213F  0008               	return
 21529  2140                     __end_of_i2c1_driver_startRX:	
 21530                           
 21531                           	psect	text97
 21532  21A7                     __ptext97:	
 21533 ;; *************** function _returnReset *****************
 21534 ;; Defined at:
 21535 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 21536 ;; Parameters:    Size  Location     Type
 21537 ;;  p               1   17[BANK0 ] PTR void 
 21538 ;;		 -> NULL(0), 
 21539 ;; Auto vars:     Size  Location     Type
 21540 ;;		None
 21541 ;; Return value:  Size  Location     Type
 21542 ;;                  1    wreg      enum E8198
 21543 ;; Registers used:
 21544 ;;		wreg
 21545 ;; Tracked objects:
 21546 ;;		On entry : 0/0
 21547 ;;		On exit  : 0/0
 21548 ;;		Unchanged: 0/0
 21549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21550 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21553 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21554 ;;Total ram usage:        1 bytes
 21555 ;; Hardware stack levels used:    1
 21556 ;; Hardware stack levels required when called:    6
 21557 ;; This function calls:
 21558 ;;		Nothing
 21559 ;; This function is called by:
 21560 ;;		_i2c_open
 21561 ;;		_do_I2C_DO_ADDRESS_NACK
 21562 ;;		_do_I2C_TX
 21563 ;;		_do_I2C_RX
 21564 ;;		_do_I2C_TX_EMPTY
 21565 ;;		i1_do_I2C_DO_ADDRESS_NACK
 21566 ;;		i1_do_I2C_TX
 21567 ;;		i1_do_I2C_RX
 21568 ;;		i1_do_I2C_TX_EMPTY
 21569 ;; This function uses a non-reentrant model
 21570 ;;
 21571                           
 21572                           
 21573                           ;psect for function _returnReset
 21574  21A7                     _returnReset:	
 21575                           
 21576                           ;Skip over the trampoline to the duplicate function for level 1
 21577  21A7  1C7E               	btfss	126,0
 21578  21A8  29AB               	goto	l7223
 21579  21A9  3180  2802         	ljmp	i1l8005
 21580  21AB                     _returnReset$intlevel0:	
 21581  21AB                     l7223:	
 21582                           ;incstack = 0
 21583                           ; Regs used in _returnReset: [wreg]
 21584                           
 21585                           
 21586                           ;i2c_master.c: 450: return i2c_reset_link;
 21587  21AB  3005               	movlw	5
 21588  21AC  0008               	return
 21589  21AD                     __end_of_returnReset:	
 21590                           
 21591                           	psect	text98
 21592  21A1                     __ptext98:	
 21593 ;; *************** function _returnStop *****************
 21594 ;; Defined at:
 21595 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 21596 ;; Parameters:    Size  Location     Type
 21597 ;;  p               1   17[BANK0 ] PTR void 
 21598 ;;		 -> NULL(0), 
 21599 ;; Auto vars:     Size  Location     Type
 21600 ;;		None
 21601 ;; Return value:  Size  Location     Type
 21602 ;;                  1    wreg      enum E8198
 21603 ;; Registers used:
 21604 ;;		wreg
 21605 ;; Tracked objects:
 21606 ;;		On entry : 0/0
 21607 ;;		On exit  : 0/0
 21608 ;;		Unchanged: 0/0
 21609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21610 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21613 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21614 ;;Total ram usage:        1 bytes
 21615 ;; Hardware stack levels used:    1
 21616 ;; Hardware stack levels required when called:    6
 21617 ;; This function calls:
 21618 ;;		Nothing
 21619 ;; This function is called by:
 21620 ;;		_i2c_open
 21621 ;;		_setCallBack
 21622 ;;		_do_I2C_DO_ADDRESS_NACK
 21623 ;;		_do_I2C_TX
 21624 ;;		_do_I2C_RX
 21625 ;;		_do_I2C_TX_EMPTY
 21626 ;;		i1_do_I2C_DO_ADDRESS_NACK
 21627 ;;		i1_do_I2C_TX
 21628 ;;		i1_do_I2C_RX
 21629 ;;		i1_do_I2C_TX_EMPTY
 21630 ;; This function uses a non-reentrant model
 21631 ;;
 21632                           
 21633                           
 21634                           ;psect for function _returnStop
 21635  21A1                     _returnStop:	
 21636                           
 21637                           ;Skip over the trampoline to the duplicate function for level 1
 21638  21A1  1C7E               	btfss	126,0
 21639  21A2  29A5               	goto	l7219
 21640  21A3  3188  2800         	ljmp	i1l8001
 21641  21A5                     _returnStop$intlevel0:	
 21642  21A5                     l7219:	
 21643                           ;incstack = 0
 21644                           ; Regs used in _returnStop: [wreg]
 21645                           
 21646                           
 21647                           ;i2c_master.c: 445: return i2c_stop;
 21648  21A5  3001               	movlw	1
 21649  21A6  0008               	return
 21650  21A7                     __end_of_returnStop:	
 21651                           
 21652                           	psect	text99
 21653  213A                     __ptext99:	
 21654 ;; *************** function _i2c1_driver_stop *****************
 21655 ;; Defined at:
 21656 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 21657 ;; Parameters:    Size  Location     Type
 21658 ;;		None
 21659 ;; Auto vars:     Size  Location     Type
 21660 ;;		None
 21661 ;; Return value:  Size  Location     Type
 21662 ;;                  1    wreg      void 
 21663 ;; Registers used:
 21664 ;;		None
 21665 ;; Tracked objects:
 21666 ;;		On entry : 0/0
 21667 ;;		On exit  : 0/0
 21668 ;;		Unchanged: 0/0
 21669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21674 ;;Total ram usage:        0 bytes
 21675 ;; Hardware stack levels used:    1
 21676 ;; Hardware stack levels required when called:    6
 21677 ;; This function calls:
 21678 ;;		Nothing
 21679 ;; This function is called by:
 21680 ;;		_do_I2C_SEND_STOP
 21681 ;; This function uses a non-reentrant model
 21682 ;;
 21683                           
 21684                           
 21685                           ;psect for function _i2c1_driver_stop
 21686  213A                     _i2c1_driver_stop:	
 21687                           
 21688                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 21689                           
 21690                           ;incstack = 0
 21691                           ; Regs used in _i2c1_driver_stop: []
 21692  213A  0024               	movlb	4	; select bank4
 21693  213B  1516               	bsf	22,2	;volatile
 21694  213C  0008               	return
 21695  213D                     __end_of_i2c1_driver_stop:	
 21696                           
 21697                           	psect	text100
 21698  2137                     __ptext100:	
 21699 ;; *************** function _i2c1_driver_restart *****************
 21700 ;; Defined at:
 21701 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 21702 ;; Parameters:    Size  Location     Type
 21703 ;;		None
 21704 ;; Auto vars:     Size  Location     Type
 21705 ;;		None
 21706 ;; Return value:  Size  Location     Type
 21707 ;;                  1    wreg      void 
 21708 ;; Registers used:
 21709 ;;		None
 21710 ;; Tracked objects:
 21711 ;;		On entry : 0/0
 21712 ;;		On exit  : 0/0
 21713 ;;		Unchanged: 0/0
 21714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21719 ;;Total ram usage:        0 bytes
 21720 ;; Hardware stack levels used:    1
 21721 ;; Hardware stack levels required when called:    6
 21722 ;; This function calls:
 21723 ;;		Nothing
 21724 ;; This function is called by:
 21725 ;;		_do_I2C_SEND_RESTART_READ
 21726 ;;		_do_I2C_SEND_RESTART_WRITE
 21727 ;;		_do_I2C_SEND_RESTART
 21728 ;; This function uses a non-reentrant model
 21729 ;;
 21730                           
 21731                           
 21732                           ;psect for function _i2c1_driver_restart
 21733  2137                     _i2c1_driver_restart:	
 21734                           
 21735                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 21736                           
 21737                           ;incstack = 0
 21738                           ; Regs used in _i2c1_driver_restart: []
 21739  2137  0024               	movlb	4	; select bank4
 21740  2138  1496               	bsf	22,1	;volatile
 21741  2139  0008               	return
 21742  213A                     __end_of_i2c1_driver_restart:	
 21743                           
 21744                           	psect	text101
 21745  2171                     __ptext101:	
 21746 ;; *************** function _i2c1_driver_sendACK *****************
 21747 ;; Defined at:
 21748 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 21749 ;; Parameters:    Size  Location     Type
 21750 ;;		None
 21751 ;; Auto vars:     Size  Location     Type
 21752 ;;		None
 21753 ;; Return value:  Size  Location     Type
 21754 ;;                  1    wreg      void 
 21755 ;; Registers used:
 21756 ;;		None
 21757 ;; Tracked objects:
 21758 ;;		On entry : 0/0
 21759 ;;		On exit  : 0/0
 21760 ;;		Unchanged: 0/0
 21761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21766 ;;Total ram usage:        0 bytes
 21767 ;; Hardware stack levels used:    1
 21768 ;; Hardware stack levels required when called:    6
 21769 ;; This function calls:
 21770 ;;		Nothing
 21771 ;; This function is called by:
 21772 ;;		_do_I2C_DO_ACK
 21773 ;;		_do_I2C_RX
 21774 ;; This function uses a non-reentrant model
 21775 ;;
 21776                           
 21777                           
 21778                           ;psect for function _i2c1_driver_sendACK
 21779  2171                     _i2c1_driver_sendACK:	
 21780                           
 21781                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 21782                           
 21783                           ;incstack = 0
 21784                           ; Regs used in _i2c1_driver_sendACK: []
 21785  2171  0024               	movlb	4	; select bank4
 21786  2172  1296               	bcf	22,5	;volatile
 21787                           
 21788                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 21789  2173  1616               	bsf	22,4	;volatile
 21790  2174  0008               	return
 21791  2175                     __end_of_i2c1_driver_sendACK:	
 21792                           
 21793                           	psect	text102
 21794  2134                     __ptext102:	
 21795 ;; *************** function _i2c1_driver_start *****************
 21796 ;; Defined at:
 21797 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 21798 ;; Parameters:    Size  Location     Type
 21799 ;;		None
 21800 ;; Auto vars:     Size  Location     Type
 21801 ;;		None
 21802 ;; Return value:  Size  Location     Type
 21803 ;;                  1    wreg      void 
 21804 ;; Registers used:
 21805 ;;		None
 21806 ;; Tracked objects:
 21807 ;;		On entry : 0/0
 21808 ;;		On exit  : 0/0
 21809 ;;		Unchanged: 0/0
 21810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21815 ;;Total ram usage:        0 bytes
 21816 ;; Hardware stack levels used:    1
 21817 ;; Hardware stack levels required when called:    6
 21818 ;; This function calls:
 21819 ;;		Nothing
 21820 ;; This function is called by:
 21821 ;;		_i2c_masterOperation
 21822 ;; This function uses a non-reentrant model
 21823 ;;
 21824                           
 21825                           
 21826                           ;psect for function _i2c1_driver_start
 21827  2134                     _i2c1_driver_start:	
 21828                           
 21829                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
 21830                           
 21831                           ;incstack = 0
 21832                           ; Regs used in _i2c1_driver_start: []
 21833  2134  0024               	movlb	4	; select bank4
 21834  2135  1416               	bsf	22,0	;volatile
 21835  2136  0008               	return
 21836  2137                     __end_of_i2c1_driver_start:	
 21837                           
 21838                           	psect	text103
 21839  1CA8                     __ptext103:	
 21840 ;; *************** function ___awdiv *****************
 21841 ;; Defined at:
 21842 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 21843 ;; Parameters:    Size  Location     Type
 21844 ;;  divisor         2   17[BANK0 ] int 
 21845 ;;  dividend        2   19[BANK0 ] int 
 21846 ;; Auto vars:     Size  Location     Type
 21847 ;;  quotient        2   24[BANK0 ] int 
 21848 ;;  sign            1   23[BANK0 ] unsigned char 
 21849 ;;  counter         1   22[BANK0 ] unsigned char 
 21850 ;; Return value:  Size  Location     Type
 21851 ;;                  2   17[BANK0 ] int 
 21852 ;; Registers used:
 21853 ;;		wreg, status,2, status,0
 21854 ;; Tracked objects:
 21855 ;;		On entry : 0/0
 21856 ;;		On exit  : 0/0
 21857 ;;		Unchanged: 0/0
 21858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21859 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21860 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21861 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21862 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21863 ;;Total ram usage:        9 bytes
 21864 ;; Hardware stack levels used:    1
 21865 ;; Hardware stack levels required when called:    6
 21866 ;; This function calls:
 21867 ;;		Nothing
 21868 ;; This function is called by:
 21869 ;;		_drv_write_DC
 21870 ;;		_drv_outputSine
 21871 ;; This function uses a non-reentrant model
 21872 ;;
 21873                           
 21874                           
 21875                           ;psect for function ___awdiv
 21876  1CA8                     ___awdiv:	
 21877                           
 21878                           ;incstack = 0
 21879                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 21880  1CA8  0020               	movlb	0	; select bank0
 21881  1CA9  01B7               	clrf	___awdiv@sign
 21882  1CAA  1FB2               	btfss	___awdiv@divisor+1,7
 21883  1CAB  2CB3               	goto	l5395
 21884  1CAC  09B1               	comf	___awdiv@divisor,f
 21885  1CAD  09B2               	comf	___awdiv@divisor+1,f
 21886  1CAE  0AB1               	incf	___awdiv@divisor,f
 21887  1CAF  1903               	skipnz
 21888  1CB0  0AB2               	incf	___awdiv@divisor+1,f
 21889  1CB1  01B7               	clrf	___awdiv@sign
 21890  1CB2  0AB7               	incf	___awdiv@sign,f
 21891  1CB3                     l5395:	
 21892  1CB3  1FB4               	btfss	___awdiv@dividend+1,7
 21893  1CB4  2CBE               	goto	l5401
 21894  1CB5  09B3               	comf	___awdiv@dividend,f
 21895  1CB6  09B4               	comf	___awdiv@dividend+1,f
 21896  1CB7  0AB3               	incf	___awdiv@dividend,f
 21897  1CB8  1903               	skipnz
 21898  1CB9  0AB4               	incf	___awdiv@dividend+1,f
 21899  1CBA  3001               	movlw	1
 21900  1CBB  00B5               	movwf	??___awdiv
 21901  1CBC  0835               	movf	??___awdiv,w
 21902  1CBD  06B7               	xorwf	___awdiv@sign,f
 21903  1CBE                     l5401:	
 21904  1CBE  01B8               	clrf	___awdiv@quotient
 21905  1CBF  01B9               	clrf	___awdiv@quotient+1
 21906  1CC0  0831               	movf	___awdiv@divisor,w
 21907  1CC1  0432               	iorwf	___awdiv@divisor+1,w
 21908  1CC2  1903               	btfsc	3,2
 21909  1CC3  2CED               	goto	l5423
 21910  1CC4  01B6               	clrf	___awdiv@counter
 21911  1CC5  0AB6               	incf	___awdiv@counter,f
 21912  1CC6                     l5411:	
 21913  1CC6  1BB2               	btfsc	___awdiv@divisor+1,7
 21914  1CC7  2CD2               	goto	l5413
 21915  1CC8  3001               	movlw	1
 21916  1CC9                     u4335:	
 21917  1CC9  35B1               	lslf	___awdiv@divisor,f
 21918  1CCA  0DB2               	rlf	___awdiv@divisor+1,f
 21919  1CCB  0B89               	decfsz	9,f
 21920  1CCC  2CC9               	goto	u4335
 21921  1CCD  3001               	movlw	1
 21922  1CCE  00B5               	movwf	??___awdiv
 21923  1CCF  0835               	movf	??___awdiv,w
 21924  1CD0  07B6               	addwf	___awdiv@counter,f
 21925  1CD1  2CC6               	goto	l5411
 21926  1CD2                     l5413:	
 21927  1CD2  3001               	movlw	1
 21928  1CD3                     u4355:	
 21929  1CD3  35B8               	lslf	___awdiv@quotient,f
 21930  1CD4  0DB9               	rlf	___awdiv@quotient+1,f
 21931  1CD5  0B89               	decfsz	9,f
 21932  1CD6  2CD3               	goto	u4355
 21933  1CD7  0832               	movf	___awdiv@divisor+1,w
 21934  1CD8  0234               	subwf	___awdiv@dividend+1,w
 21935  1CD9  1D03               	skipz
 21936  1CDA  2CDD               	goto	u4365
 21937  1CDB  0831               	movf	___awdiv@divisor,w
 21938  1CDC  0233               	subwf	___awdiv@dividend,w
 21939  1CDD                     u4365:	
 21940  1CDD  1C03               	skipc
 21941  1CDE  2CE4               	goto	l5419
 21942  1CDF  0831               	movf	___awdiv@divisor,w
 21943  1CE0  02B3               	subwf	___awdiv@dividend,f
 21944  1CE1  0832               	movf	___awdiv@divisor+1,w
 21945  1CE2  3BB4               	subwfb	___awdiv@dividend+1,f
 21946  1CE3  1438               	bsf	___awdiv@quotient,0
 21947  1CE4                     l5419:	
 21948  1CE4  3001               	movlw	1
 21949  1CE5                     u4375:	
 21950  1CE5  36B2               	lsrf	___awdiv@divisor+1,f
 21951  1CE6  0CB1               	rrf	___awdiv@divisor,f
 21952  1CE7  0B89               	decfsz	9,f
 21953  1CE8  2CE5               	goto	u4375
 21954  1CE9  3001               	movlw	1
 21955  1CEA  02B6               	subwf	___awdiv@counter,f
 21956  1CEB  1D03               	btfss	3,2
 21957  1CEC  2CD2               	goto	l5413
 21958  1CED                     l5423:	
 21959  1CED  0837               	movf	___awdiv@sign,w
 21960  1CEE  1903               	btfsc	3,2
 21961  1CEF  2CF5               	goto	l5427
 21962  1CF0  09B8               	comf	___awdiv@quotient,f
 21963  1CF1  09B9               	comf	___awdiv@quotient+1,f
 21964  1CF2  0AB8               	incf	___awdiv@quotient,f
 21965  1CF3  1903               	skipnz
 21966  1CF4  0AB9               	incf	___awdiv@quotient+1,f
 21967  1CF5                     l5427:	
 21968  1CF5  0839               	movf	___awdiv@quotient+1,w
 21969  1CF6  00B2               	movwf	?___awdiv+1
 21970  1CF7  0838               	movf	___awdiv@quotient,w
 21971  1CF8  00B1               	movwf	?___awdiv
 21972  1CF9  0008               	return
 21973  1CFA                     __end_of___awdiv:	
 21974                           
 21975                           	psect	text104
 21976  151D                     __ptext104:	
 21977 ;; *************** function _calcHeaterPins *****************
 21978 ;; Defined at:
 21979 ;;		line 260 in file "main.c"
 21980 ;; Parameters:    Size  Location     Type
 21981 ;;		None
 21982 ;; Auto vars:     Size  Location     Type
 21983 ;;		None
 21984 ;; Return value:  Size  Location     Type
 21985 ;;                  1    wreg      void 
 21986 ;; Registers used:
 21987 ;;		wreg, status,2, status,0
 21988 ;; Tracked objects:
 21989 ;;		On entry : 0/0
 21990 ;;		On exit  : 0/0
 21991 ;;		Unchanged: 0/0
 21992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21995 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21996 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21997 ;;Total ram usage:        4 bytes
 21998 ;; Hardware stack levels used:    1
 21999 ;; Hardware stack levels required when called:    6
 22000 ;; This function calls:
 22001 ;;		Nothing
 22002 ;; This function is called by:
 22003 ;;		_doMove
 22004 ;; This function uses a non-reentrant model
 22005 ;;
 22006                           
 22007                           
 22008                           ;psect for function _calcHeaterPins
 22009  151D                     _calcHeaterPins:	
 22010                           
 22011                           ;main.c: 261: first_top = moveVector_downs & moveMask;
 22012                           
 22013                           ;incstack = 0
 22014                           ; Regs used in _calcHeaterPins: [wreg+status,2+status,0]
 22015  151D  0021               	movlb	1	; select bank1
 22016  151E  085F               	movf	_moveMask^(0+128),w
 22017  151F  0020               	movlb	0	; select bank0
 22018  1520  054E               	andwf	_moveVector_downs,w
 22019  1521  0022               	movlb	2	; select bank2
 22020  1522  00D2               	movwf	_first_top^(0+256)
 22021  1523  0021               	movlb	1	; select bank1
 22022  1524  0860               	movf	(_moveMask+1)^(0+128),w
 22023  1525  0020               	movlb	0	; select bank0
 22024  1526  054F               	andwf	_moveVector_downs+1,w
 22025  1527  0022               	movlb	2	; select bank2
 22026  1528  00D3               	movwf	(_first_top+1)^(0+256)
 22027  1529  0021               	movlb	1	; select bank1
 22028  152A  0861               	movf	(_moveMask+2)^(0+128),w
 22029  152B  0020               	movlb	0	; select bank0
 22030  152C  0550               	andwf	_moveVector_downs+2,w
 22031  152D  0022               	movlb	2	; select bank2
 22032  152E  00D4               	movwf	(_first_top+2)^(0+256)
 22033  152F  0021               	movlb	1	; select bank1
 22034  1530  0862               	movf	(_moveMask+3)^(0+128),w
 22035  1531  0020               	movlb	0	; select bank0
 22036  1532  0551               	andwf	_moveVector_downs+3,w
 22037  1533  0022               	movlb	2	; select bank2
 22038  1534  00D5               	movwf	(_first_top+3)^(0+256)
 22039                           
 22040                           ;main.c: 262: first_bottom = (~moveVector_downs) & moveMask;
 22041  1535  0020               	movlb	0	; select bank0
 22042  1536  094E               	comf	_moveVector_downs,w
 22043  1537  00B1               	movwf	??_calcHeaterPins
 22044  1538  094F               	comf	_moveVector_downs+1,w
 22045  1539  00B2               	movwf	??_calcHeaterPins+1
 22046  153A  0950               	comf	_moveVector_downs+2,w
 22047  153B  00B3               	movwf	??_calcHeaterPins+2
 22048  153C  0951               	comf	_moveVector_downs+3,w
 22049  153D  00B4               	movwf	??_calcHeaterPins+3
 22050  153E  0021               	movlb	1	; select bank1
 22051  153F  085F               	movf	_moveMask^(0+128),w
 22052  1540  0020               	movlb	0	; select bank0
 22053  1541  0531               	andwf	??_calcHeaterPins,w
 22054  1542  0022               	movlb	2	; select bank2
 22055  1543  00D6               	movwf	_first_bottom^(0+256)
 22056  1544  0021               	movlb	1	; select bank1
 22057  1545  0860               	movf	(_moveMask+1)^(0+128),w
 22058  1546  0020               	movlb	0	; select bank0
 22059  1547  0532               	andwf	??_calcHeaterPins+1,w
 22060  1548  0022               	movlb	2	; select bank2
 22061  1549  00D7               	movwf	(_first_bottom+1)^(0+256)
 22062  154A  0021               	movlb	1	; select bank1
 22063  154B  0861               	movf	(_moveMask+2)^(0+128),w
 22064  154C  0020               	movlb	0	; select bank0
 22065  154D  0533               	andwf	??_calcHeaterPins+2,w
 22066  154E  0022               	movlb	2	; select bank2
 22067  154F  00D8               	movwf	(_first_bottom+2)^(0+256)
 22068  1550  0021               	movlb	1	; select bank1
 22069  1551  0862               	movf	(_moveMask+3)^(0+128),w
 22070  1552  0020               	movlb	0	; select bank0
 22071  1553  0534               	andwf	??_calcHeaterPins+3,w
 22072  1554  0022               	movlb	2	; select bank2
 22073  1555  00D9               	movwf	(_first_bottom+3)^(0+256)
 22074                           
 22075                           ;main.c: 263: second_top = moveVector_ups & moveMask;
 22076  1556  0021               	movlb	1	; select bank1
 22077  1557  085F               	movf	_moveMask^(0+128),w
 22078  1558  0567               	andwf	_moveVector_ups^(0+128),w
 22079  1559  0022               	movlb	2	; select bank2
 22080  155A  00DA               	movwf	_second_top^(0+256)
 22081  155B  0021               	movlb	1	; select bank1
 22082  155C  0860               	movf	(_moveMask+1)^(0+128),w
 22083  155D  0568               	andwf	(_moveVector_ups+1)^(0+128),w
 22084  155E  0022               	movlb	2	; select bank2
 22085  155F  00DB               	movwf	(_second_top+1)^(0+256)
 22086  1560  0021               	movlb	1	; select bank1
 22087  1561  0861               	movf	(_moveMask+2)^(0+128),w
 22088  1562  0569               	andwf	(_moveVector_ups+2)^(0+128),w
 22089  1563  0022               	movlb	2	; select bank2
 22090  1564  00DC               	movwf	(_second_top+2)^(0+256)
 22091  1565  0021               	movlb	1	; select bank1
 22092  1566  0862               	movf	(_moveMask+3)^(0+128),w
 22093  1567  056A               	andwf	(_moveVector_ups+3)^(0+128),w
 22094  1568  0022               	movlb	2	; select bank2
 22095  1569  00DD               	movwf	(_second_top+3)^(0+256)
 22096                           
 22097                           ;main.c: 264: second_bottom = (~moveVector_ups) & moveMask;
 22098  156A  0021               	movlb	1	; select bank1
 22099  156B  0967               	comf	_moveVector_ups^(0+128),w
 22100  156C  0020               	movlb	0	; select bank0
 22101  156D  00B1               	movwf	??_calcHeaterPins
 22102  156E  0021               	movlb	1	; select bank1
 22103  156F  0968               	comf	(_moveVector_ups+1)^(0+128),w
 22104  1570  0020               	movlb	0	; select bank0
 22105  1571  00B2               	movwf	??_calcHeaterPins+1
 22106  1572  0021               	movlb	1	; select bank1
 22107  1573  0969               	comf	(_moveVector_ups+2)^(0+128),w
 22108  1574  0020               	movlb	0	; select bank0
 22109  1575  00B3               	movwf	??_calcHeaterPins+2
 22110  1576  0021               	movlb	1	; select bank1
 22111  1577  096A               	comf	(_moveVector_ups+3)^(0+128),w
 22112  1578  0020               	movlb	0	; select bank0
 22113  1579  00B4               	movwf	??_calcHeaterPins+3
 22114  157A  0021               	movlb	1	; select bank1
 22115  157B  085F               	movf	_moveMask^(0+128),w
 22116  157C  0020               	movlb	0	; select bank0
 22117  157D  0531               	andwf	??_calcHeaterPins,w
 22118  157E  0022               	movlb	2	; select bank2
 22119  157F  00CE               	movwf	_second_bottom^(0+256)
 22120  1580  0021               	movlb	1	; select bank1
 22121  1581  0860               	movf	(_moveMask+1)^(0+128),w
 22122  1582  0020               	movlb	0	; select bank0
 22123  1583  0532               	andwf	??_calcHeaterPins+1,w
 22124  1584  0022               	movlb	2	; select bank2
 22125  1585  00CF               	movwf	(_second_bottom+1)^(0+256)
 22126  1586  0021               	movlb	1	; select bank1
 22127  1587  0861               	movf	(_moveMask+2)^(0+128),w
 22128  1588  0020               	movlb	0	; select bank0
 22129  1589  0533               	andwf	??_calcHeaterPins+2,w
 22130  158A  0022               	movlb	2	; select bank2
 22131  158B  00D0               	movwf	(_second_bottom+2)^(0+256)
 22132  158C  0021               	movlb	1	; select bank1
 22133  158D  0862               	movf	(_moveMask+3)^(0+128),w
 22134  158E  0020               	movlb	0	; select bank0
 22135  158F  0534               	andwf	??_calcHeaterPins+3,w
 22136  1590  0022               	movlb	2	; select bank2
 22137  1591  00D1               	movwf	(_second_bottom+3)^(0+256)
 22138  1592  0008               	return
 22139  1593                     __end_of_calcHeaterPins:	
 22140                           
 22141                           	psect	text105
 22142  2131                     __ptext105:	
 22143 ;; *************** function _TMR2_StartTimer *****************
 22144 ;; Defined at:
 22145 ;;		line 85 in file "mcc_generated_files/tmr2.c"
 22146 ;; Parameters:    Size  Location     Type
 22147 ;;		None
 22148 ;; Auto vars:     Size  Location     Type
 22149 ;;		None
 22150 ;; Return value:  Size  Location     Type
 22151 ;;                  1    wreg      void 
 22152 ;; Registers used:
 22153 ;;		None
 22154 ;; Tracked objects:
 22155 ;;		On entry : 0/0
 22156 ;;		On exit  : 0/0
 22157 ;;		Unchanged: 0/0
 22158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22163 ;;Total ram usage:        0 bytes
 22164 ;; Hardware stack levels used:    1
 22165 ;; Hardware stack levels required when called:    6
 22166 ;; This function calls:
 22167 ;;		Nothing
 22168 ;; This function is called by:
 22169 ;;		_doMove
 22170 ;; This function uses a non-reentrant model
 22171 ;;
 22172                           
 22173                           
 22174                           ;psect for function _TMR2_StartTimer
 22175  2131                     _TMR2_StartTimer:	
 22176                           
 22177                           ;tmr2.c: 88: T2CONbits.TMR2ON = 1;
 22178                           
 22179                           ;incstack = 0
 22180                           ; Regs used in _TMR2_StartTimer: []
 22181  2131  0020               	movlb	0	; select bank0
 22182  2132  151F               	bsf	31,2	;volatile
 22183  2133  0008               	return
 22184  2134                     __end_of_TMR2_StartTimer:	
 22185                           
 22186                           	psect	text106
 22187  212E                     __ptext106:	
 22188 ;; *************** function _TMR0_StartTimer *****************
 22189 ;; Defined at:
 22190 ;;		line 85 in file "mcc_generated_files/tmr0.c"
 22191 ;; Parameters:    Size  Location     Type
 22192 ;;		None
 22193 ;; Auto vars:     Size  Location     Type
 22194 ;;		None
 22195 ;; Return value:  Size  Location     Type
 22196 ;;                  1    wreg      void 
 22197 ;; Registers used:
 22198 ;;		None
 22199 ;; Tracked objects:
 22200 ;;		On entry : 0/0
 22201 ;;		On exit  : 0/0
 22202 ;;		Unchanged: 0/0
 22203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22208 ;;Total ram usage:        0 bytes
 22209 ;; Hardware stack levels used:    1
 22210 ;; Hardware stack levels required when called:    6
 22211 ;; This function calls:
 22212 ;;		Nothing
 22213 ;; This function is called by:
 22214 ;;		_doMove
 22215 ;; This function uses a non-reentrant model
 22216 ;;
 22217                           
 22218                           
 22219                           ;psect for function _TMR0_StartTimer
 22220  212E                     _TMR0_StartTimer:	
 22221                           
 22222                           ;tmr0.c: 88: T0CON0bits.T0EN = 1;
 22223                           
 22224                           ;incstack = 0
 22225                           ; Regs used in _TMR0_StartTimer: []
 22226  212E  0020               	movlb	0	; select bank0
 22227  212F  1797               	bsf	23,7	;volatile
 22228  2130  0008               	return
 22229  2131                     __end_of_TMR0_StartTimer:	
 22230                           
 22231                           	psect	text107
 22232  2555                     __ptext107:	
 22233 ;; *************** function _LEDsOn *****************
 22234 ;; Defined at:
 22235 ;;		line 6 in file "LEDcomm.c"
 22236 ;; Parameters:    Size  Location     Type
 22237 ;;  LEDpins         4   36[BANK0 ] unsigned long 
 22238 ;;  topOrBottom     2   40[BANK0 ] int 
 22239 ;; Auto vars:     Size  Location     Type
 22240 ;;		None
 22241 ;; Return value:  Size  Location     Type
 22242 ;;                  1    wreg      void 
 22243 ;; Registers used:
 22244 ;;		wreg, status,2, status,0, pclath, cstack
 22245 ;; Tracked objects:
 22246 ;;		On entry : 0/0
 22247 ;;		On exit  : 0/0
 22248 ;;		Unchanged: 0/0
 22249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22250 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22253 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22254 ;;Total ram usage:       10 bytes
 22255 ;; Hardware stack levels used:    1
 22256 ;; Hardware stack levels required when called:    8
 22257 ;; This function calls:
 22258 ;;		_send_2length_2bytes_IK
 22259 ;; This function is called by:
 22260 ;;		_LED_test_openshort
 22261 ;;		_doMove
 22262 ;;		_setHeaterToggle
 22263 ;;		_timedActiveHeatOn
 22264 ;;		_demoSequence
 22265 ;; This function uses a non-reentrant model
 22266 ;;
 22267                           
 22268                           
 22269                           ;psect for function _LEDsOn
 22270  2555                     _LEDsOn:	
 22271                           
 22272                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 22273                           
 22274                           ;incstack = 0
 22275                           ; Regs used in _LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 22276  2555  0020               	movlb	0	; select bank0
 22277  2556  0844               	movf	LEDsOn@LEDpins,w
 22278  2557  00CA               	movwf	??_LEDsOn
 22279  2558  0845               	movf	LEDsOn@LEDpins+1,w
 22280  2559  00CB               	movwf	??_LEDsOn+1
 22281  255A  0846               	movf	LEDsOn@LEDpins+2,w
 22282  255B  00CC               	movwf	??_LEDsOn+2
 22283  255C  0847               	movf	LEDsOn@LEDpins+3,w
 22284  255D  00CD               	movwf	??_LEDsOn+3
 22285  255E  3010               	movlw	16
 22286  255F                     u7285:	
 22287  255F  36CD               	lsrf	??_LEDsOn+3,f
 22288  2560  0CCC               	rrf	??_LEDsOn+2,f
 22289  2561  0CCB               	rrf	??_LEDsOn+1,f
 22290  2562  0CCA               	rrf	??_LEDsOn,f
 22291  2563  0B89               	decfsz	9,f
 22292  2564  2D5F               	goto	u7285
 22293  2565  084B               	movf	??_LEDsOn+1,w
 22294  2566  00BD               	movwf	send_2length_2bytes_IK@data1+1
 22295  2567  084A               	movf	??_LEDsOn,w
 22296  2568  00BC               	movwf	send_2length_2bytes_IK@data1
 22297  2569  0845               	movf	LEDsOn@LEDpins+1,w
 22298  256A  00BF               	movwf	send_2length_2bytes_IK@data2+1
 22299  256B  0844               	movf	LEDsOn@LEDpins,w
 22300  256C  00BE               	movwf	send_2length_2bytes_IK@data2
 22301  256D  01C0               	clrf	send_2length_2bytes_IK@latch_start
 22302  256E  0AC0               	incf	send_2length_2bytes_IK@latch_start,f
 22303  256F  0849               	movf	LEDsOn@topOrBottom+1,w
 22304  2570  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 22305  2571  0848               	movf	LEDsOn@topOrBottom,w
 22306  2572  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 22307  2573  31A3  23BE         	fcall	_send_2length_2bytes_IK
 22308  2575  0008               	return
 22309  2576                     __end_of_LEDsOn:	
 22310                           
 22311                           	psect	text108
 22312  23BE                     __ptext108:	
 22313 ;; *************** function _send_2length_2bytes_IK *****************
 22314 ;; Defined at:
 22315 ;;		line 70 in file "LEDcomm.c"
 22316 ;; Parameters:    Size  Location     Type
 22317 ;;  data1           2   28[BANK0 ] unsigned int 
 22318 ;;  data2           2   30[BANK0 ] unsigned int 
 22319 ;;  latch_start     1   32[BANK0 ] unsigned char 
 22320 ;;  topOrBottom     2   33[BANK0 ] int 
 22321 ;; Auto vars:     Size  Location     Type
 22322 ;;		None
 22323 ;; Return value:  Size  Location     Type
 22324 ;;                  1    wreg      void 
 22325 ;; Registers used:
 22326 ;;		wreg, status,2, status,0, pclath, cstack
 22327 ;; Tracked objects:
 22328 ;;		On entry : 0/0
 22329 ;;		On exit  : 0/0
 22330 ;;		Unchanged: 0/0
 22331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22332 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22334 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22335 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22336 ;;Total ram usage:        8 bytes
 22337 ;; Hardware stack levels used:    1
 22338 ;; Hardware stack levels required when called:    7
 22339 ;; This function calls:
 22340 ;;		_send_2bytes_latchless_IK
 22341 ;;		_send_last_2bytes_IK
 22342 ;; This function is called by:
 22343 ;;		_LEDsOn
 22344 ;;		_LEDsPwr
 22345 ;;		_LED_setBrightnessRange
 22346 ;;		_LED_test_openshort
 22347 ;;		_LED_readConfig
 22348 ;; This function uses a non-reentrant model
 22349 ;;
 22350                           
 22351                           
 22352                           ;psect for function _send_2length_2bytes_IK
 22353  23BE                     _send_2length_2bytes_IK:	
 22354                           
 22355                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 22356                           
 22357                           ;incstack = 0
 22358                           ; Regs used in _send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 22359  23BE  0020               	movlb	0	; select bank0
 22360  23BF  083D               	movf	send_2length_2bytes_IK@data1+1,w
 22361  23C0  00B2               	movwf	send_2bytes_latchless_IK@data+1
 22362  23C1  083C               	movf	send_2length_2bytes_IK@data1,w
 22363  23C2  00B1               	movwf	send_2bytes_latchless_IK@data
 22364  23C3  31A7  2770  31A3   	fcall	_send_2bytes_latchless_IK
 22365                           
 22366                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 22367  23C6  0020               	movlb	0	; select bank0
 22368  23C7  083F               	movf	send_2length_2bytes_IK@data2+1,w
 22369  23C8  00B2               	movwf	send_last_2bytes_IK@data+1
 22370  23C9  083E               	movf	send_2length_2bytes_IK@data2,w
 22371  23CA  00B1               	movwf	send_last_2bytes_IK@data
 22372  23CB  0840               	movf	send_2length_2bytes_IK@latch_start,w
 22373  23CC  00C3               	movwf	??_send_2length_2bytes_IK
 22374  23CD  0843               	movf	??_send_2length_2bytes_IK,w
 22375  23CE  00B3               	movwf	send_last_2bytes_IK@latch_start
 22376  23CF  0842               	movf	send_2length_2bytes_IK@topOrBottom+1,w
 22377  23D0  00B5               	movwf	send_last_2bytes_IK@topOrBottom+1
 22378  23D1  0841               	movf	send_2length_2bytes_IK@topOrBottom,w
 22379  23D2  00B4               	movwf	send_last_2bytes_IK@topOrBottom
 22380  23D3  319D  254D         	fcall	_send_last_2bytes_IK
 22381  23D5  0008               	return
 22382  23D6                     __end_of_send_2length_2bytes_IK:	
 22383                           
 22384                           	psect	text109
 22385  1D4D                     __ptext109:	
 22386 ;; *************** function _send_last_2bytes_IK *****************
 22387 ;; Defined at:
 22388 ;;		line 19 in file "LEDcomm.c"
 22389 ;; Parameters:    Size  Location     Type
 22390 ;;  data            2   17[BANK0 ] unsigned int 
 22391 ;;  latch_start     1   19[BANK0 ] unsigned char 
 22392 ;;  topOrBottom     2   20[BANK0 ] int 
 22393 ;; Auto vars:     Size  Location     Type
 22394 ;;  j               2   26[BANK0 ] int 
 22395 ;; Return value:  Size  Location     Type
 22396 ;;                  1    wreg      void 
 22397 ;; Registers used:
 22398 ;;		wreg, status,2, status,0
 22399 ;; Tracked objects:
 22400 ;;		On entry : 0/0
 22401 ;;		On exit  : 0/0
 22402 ;;		Unchanged: 0/0
 22403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22404 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22405 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22406 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22407 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22408 ;;Total ram usage:       11 bytes
 22409 ;; Hardware stack levels used:    1
 22410 ;; Hardware stack levels required when called:    6
 22411 ;; This function calls:
 22412 ;;		Nothing
 22413 ;; This function is called by:
 22414 ;;		_send_2length_2bytes_IK
 22415 ;; This function uses a non-reentrant model
 22416 ;;
 22417                           
 22418                           
 22419                           ;psect for function _send_last_2bytes_IK
 22420  1D4D                     _send_last_2bytes_IK:	
 22421                           
 22422                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 22423                           
 22424                           ;incstack = 0
 22425                           ; Regs used in _send_last_2bytes_IK: [wreg+status,2+status,0]
 22426  1D4D  0020               	movlb	0	; select bank0
 22427  1D4E  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 22428  1D4F  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 22429  1D50  1D03               	btfss	3,2
 22430  1D51  2D55               	goto	l210
 22431  1D52  0022               	movlb	2	; select bank2
 22432  1D53  120D               	bcf	13,4	;volatile
 22433  1D54  2D57               	goto	l7465
 22434  1D55                     l210:	
 22435  1D55  0022               	movlb	2	; select bank2
 22436  1D56  100E               	bcf	14,0	;volatile
 22437  1D57                     l7465:	
 22438                           
 22439                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 22440  1D57  300F               	movlw	15
 22441  1D58  0020               	movlb	0	; select bank0
 22442  1D59  00BA               	movwf	send_last_2bytes_IK@j
 22443  1D5A  3000               	movlw	0
 22444  1D5B  00BB               	movwf	send_last_2bytes_IK@j+1
 22445  1D5C  1BBB               	btfsc	send_last_2bytes_IK@j+1,7
 22446  1D5D  2D98               	goto	l231
 22447  1D5E                     l214:	
 22448                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 22449                           
 22450  1D5E  0022               	movlb	2	; select bank2
 22451  1D5F  110C               	bcf	12,2	;volatile
 22452                           
 22453                           ;LEDcomm.c: 28: if (data & 1 << j){
 22454  1D60  3001               	movlw	1
 22455  1D61  0020               	movlb	0	; select bank0
 22456  1D62  00B6               	movwf	??_send_last_2bytes_IK
 22457  1D63  3000               	movlw	0
 22458  1D64  00B7               	movwf	??_send_last_2bytes_IK+1
 22459  1D65  0A3A               	incf	send_last_2bytes_IK@j,w
 22460  1D66  2D69               	goto	u6954
 22461  1D67                     u6955:	
 22462  1D67  35B6               	lslf	??_send_last_2bytes_IK,f
 22463  1D68  0DB7               	rlf	??_send_last_2bytes_IK+1,f
 22464  1D69                     u6954:	
 22465  1D69  0B89               	decfsz	9,f
 22466  1D6A  2D67               	goto	u6955
 22467  1D6B  0831               	movf	send_last_2bytes_IK@data,w
 22468  1D6C  0536               	andwf	??_send_last_2bytes_IK,w
 22469  1D6D  00B8               	movwf	??_send_last_2bytes_IK+2
 22470  1D6E  0832               	movf	send_last_2bytes_IK@data+1,w
 22471  1D6F  0537               	andwf	??_send_last_2bytes_IK+1,w
 22472  1D70  00B9               	movwf	??_send_last_2bytes_IK+3
 22473  1D71  0838               	movf	??_send_last_2bytes_IK+2,w
 22474  1D72  0439               	iorwf	??_send_last_2bytes_IK+3,w
 22475  1D73  1903               	btfsc	3,2
 22476  1D74  2D78               	goto	l220
 22477                           
 22478                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 22479  1D75  0022               	movlb	2	; select bank2
 22480  1D76  150E               	bsf	14,2	;volatile
 22481                           
 22482                           ;LEDcomm.c: 30: }
 22483  1D77  2D7A               	goto	l7473
 22484  1D78                     l220:	
 22485                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 22486                           
 22487  1D78  0022               	movlb	2	; select bank2
 22488  1D79  110E               	bcf	14,2	;volatile
 22489  1D7A                     l7473:	
 22490                           
 22491                           ;LEDcomm.c: 33: if( j == latch_start) {
 22492  1D7A  0020               	movlb	0	; select bank0
 22493  1D7B  0833               	movf	send_last_2bytes_IK@latch_start,w
 22494  1D7C  00B6               	movwf	??_send_last_2bytes_IK
 22495  1D7D  01B7               	clrf	??_send_last_2bytes_IK+1
 22496  1D7E  083B               	movf	send_last_2bytes_IK@j+1,w
 22497  1D7F  0637               	xorwf	??_send_last_2bytes_IK+1,w
 22498  1D80  1D03               	skipz
 22499  1D81  2D84               	goto	u6975
 22500  1D82  083A               	movf	send_last_2bytes_IK@j,w
 22501  1D83  0636               	xorwf	??_send_last_2bytes_IK,w
 22502  1D84                     u6975:	
 22503  1D84  1D03               	skipz
 22504  1D85  2D8F               	goto	l229
 22505                           
 22506                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 22507  1D86  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 22508  1D87  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 22509  1D88  1D03               	btfss	3,2
 22510  1D89  2D8D               	goto	l227
 22511  1D8A  0022               	movlb	2	; select bank2
 22512  1D8B  160D               	bsf	13,4	;volatile
 22513  1D8C  2D8F               	goto	l229
 22514  1D8D                     l227:	
 22515  1D8D  0022               	movlb	2	; select bank2
 22516  1D8E  140E               	bsf	14,0	;volatile
 22517  1D8F                     l229:	
 22518                           ;LEDcomm.c: 37: }
 22519                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 22520                           
 22521  1D8F  0022               	movlb	2	; select bank2
 22522  1D90  150C               	bsf	12,2	;volatile
 22523  1D91  30FF               	movlw	255
 22524  1D92  0020               	movlb	0	; select bank0
 22525  1D93  07BA               	addwf	send_last_2bytes_IK@j,f
 22526  1D94  30FF               	movlw	255
 22527  1D95  3DBB               	addwfc	send_last_2bytes_IK@j+1,f
 22528  1D96  1FBB               	btfss	send_last_2bytes_IK@j+1,7
 22529  1D97  2D5E               	goto	l214
 22530  1D98                     l231:	
 22531                           ;LEDcomm.c: 41: }
 22532                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 22533                           
 22534  1D98  0022               	movlb	2	; select bank2
 22535  1D99  110C               	bcf	12,2	;volatile
 22536                           
 22537                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 22538  1D9A  0020               	movlb	0	; select bank0
 22539  1D9B  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 22540  1D9C  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 22541  1D9D  1D03               	btfss	3,2
 22542  1D9E  2DA2               	goto	l237
 22543  1D9F  0022               	movlb	2	; select bank2
 22544  1DA0  120D               	bcf	13,4	;volatile
 22545  1DA1  0008               	return
 22546  1DA2                     l237:	
 22547  1DA2  0022               	movlb	2	; select bank2
 22548  1DA3  100E               	bcf	14,0	;volatile
 22549  1DA4  0008               	return
 22550  1DA5                     __end_of_send_last_2bytes_IK:	
 22551                           
 22552                           	psect	text110
 22553  2770                     __ptext110:	
 22554 ;; *************** function _send_2bytes_latchless_IK *****************
 22555 ;; Defined at:
 22556 ;;		line 49 in file "LEDcomm.c"
 22557 ;; Parameters:    Size  Location     Type
 22558 ;;  data            2   17[BANK0 ] unsigned int 
 22559 ;; Auto vars:     Size  Location     Type
 22560 ;;  j               2   23[BANK0 ] int 
 22561 ;; Return value:  Size  Location     Type
 22562 ;;                  1    wreg      void 
 22563 ;; Registers used:
 22564 ;;		wreg, status,2, status,0
 22565 ;; Tracked objects:
 22566 ;;		On entry : 0/0
 22567 ;;		On exit  : 0/0
 22568 ;;		Unchanged: 0/0
 22569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22570 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22571 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22572 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22573 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22574 ;;Total ram usage:        8 bytes
 22575 ;; Hardware stack levels used:    1
 22576 ;; Hardware stack levels required when called:    6
 22577 ;; This function calls:
 22578 ;;		Nothing
 22579 ;; This function is called by:
 22580 ;;		_send_2length_2bytes_IK
 22581 ;; This function uses a non-reentrant model
 22582 ;;
 22583                           
 22584                           
 22585                           ;psect for function _send_2bytes_latchless_IK
 22586  2770                     _send_2bytes_latchless_IK:	
 22587                           
 22588                           ;incstack = 0
 22589                           ; Regs used in _send_2bytes_latchless_IK: [wreg+status,2+status,0]
 22590                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 22591  2770  0022               	movlb	2	; select bank2
 22592  2771  120D               	bcf	13,4	;volatile
 22593                           
 22594                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 22595  2772  300F               	movlw	15
 22596  2773  0020               	movlb	0	; select bank0
 22597  2774  00B7               	movwf	send_2bytes_latchless_IK@j
 22598  2775  3000               	movlw	0
 22599  2776  00B8               	movwf	send_2bytes_latchless_IK@j+1
 22600  2777  1BB8               	btfsc	send_2bytes_latchless_IK@j+1,7
 22601  2778  2F9D               	goto	l256
 22602  2779                     l246:	
 22603                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 22604                           
 22605  2779  0022               	movlb	2	; select bank2
 22606  277A  110C               	bcf	12,2	;volatile
 22607                           
 22608                           ;LEDcomm.c: 56: if (data & 1 << j){
 22609  277B  3001               	movlw	1
 22610  277C  0020               	movlb	0	; select bank0
 22611  277D  00B3               	movwf	??_send_2bytes_latchless_IK
 22612  277E  3000               	movlw	0
 22613  277F  00B4               	movwf	??_send_2bytes_latchless_IK+1
 22614  2780  0A37               	incf	send_2bytes_latchless_IK@j,w
 22615  2781  2F84               	goto	u7024
 22616  2782                     u7025:	
 22617  2782  35B3               	lslf	??_send_2bytes_latchless_IK,f
 22618  2783  0DB4               	rlf	??_send_2bytes_latchless_IK+1,f
 22619  2784                     u7024:	
 22620  2784  0B89               	decfsz	9,f
 22621  2785  2F82               	goto	u7025
 22622  2786  0831               	movf	send_2bytes_latchless_IK@data,w
 22623  2787  0533               	andwf	??_send_2bytes_latchless_IK,w
 22624  2788  00B5               	movwf	??_send_2bytes_latchless_IK+2
 22625  2789  0832               	movf	send_2bytes_latchless_IK@data+1,w
 22626  278A  0534               	andwf	??_send_2bytes_latchless_IK+1,w
 22627  278B  00B6               	movwf	??_send_2bytes_latchless_IK+3
 22628  278C  0835               	movf	??_send_2bytes_latchless_IK+2,w
 22629  278D  0436               	iorwf	??_send_2bytes_latchless_IK+3,w
 22630  278E  1903               	btfsc	3,2
 22631  278F  2F93               	goto	l252
 22632                           
 22633                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 22634  2790  0022               	movlb	2	; select bank2
 22635  2791  150E               	bsf	14,2	;volatile
 22636                           
 22637                           ;LEDcomm.c: 58: }
 22638  2792  2F95               	goto	l254
 22639  2793                     l252:	
 22640                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 22641                           
 22642  2793  0022               	movlb	2	; select bank2
 22643  2794  110E               	bcf	14,2	;volatile
 22644  2795                     l254:	
 22645                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 22646                           
 22647  2795  150C               	bsf	12,2	;volatile
 22648  2796  30FF               	movlw	255
 22649  2797  0020               	movlb	0	; select bank0
 22650  2798  07B7               	addwf	send_2bytes_latchless_IK@j,f
 22651  2799  30FF               	movlw	255
 22652  279A  3DB8               	addwfc	send_2bytes_latchless_IK@j+1,f
 22653  279B  1FB8               	btfss	send_2bytes_latchless_IK@j+1,7
 22654  279C  2F79               	goto	l246
 22655  279D                     l256:	
 22656                           ;LEDcomm.c: 64: }
 22657                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 22658                           
 22659  279D  0022               	movlb	2	; select bank2
 22660  279E  110C               	bcf	12,2	;volatile
 22661  279F  0008               	return
 22662  27A0                     __end_of_send_2bytes_latchless_IK:	
 22663                           
 22664                           	psect	text111
 22665  237C                     __ptext111:	
 22666 ;; *************** function _SYSTEM_Initialize *****************
 22667 ;; Defined at:
 22668 ;;		line 77 in file "mcc_generated_files/mcc.c"
 22669 ;; Parameters:    Size  Location     Type
 22670 ;;		None
 22671 ;; Auto vars:     Size  Location     Type
 22672 ;;		None
 22673 ;; Return value:  Size  Location     Type
 22674 ;;                  1    wreg      void 
 22675 ;; Registers used:
 22676 ;;		wreg, status,2, status,0, pclath, cstack
 22677 ;; Tracked objects:
 22678 ;;		On entry : 0/0
 22679 ;;		On exit  : 0/0
 22680 ;;		Unchanged: 0/0
 22681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22686 ;;Total ram usage:        0 bytes
 22687 ;; Hardware stack levels used:    1
 22688 ;; Hardware stack levels required when called:    8
 22689 ;; This function calls:
 22690 ;;		_EUSART_Initialize
 22691 ;;		_OSCILLATOR_Initialize
 22692 ;;		_PIN_MANAGER_Initialize
 22693 ;;		_PMD_Initialize
 22694 ;;		_TMR0_Initialize
 22695 ;;		_TMR2_Initialize
 22696 ;;		_WDT_Initialize
 22697 ;; This function is called by:
 22698 ;;		_main
 22699 ;; This function uses a non-reentrant model
 22700 ;;
 22701                           
 22702                           
 22703                           ;psect for function _SYSTEM_Initialize
 22704  237C                     _SYSTEM_Initialize:	
 22705                           
 22706                           ;mcc.c: 80: PMD_Initialize();
 22707                           
 22708                           ;incstack = 0
 22709                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22710  237C  31A1  21CF  31A3   	fcall	_PMD_Initialize
 22711                           
 22712                           ;mcc.c: 81: PIN_MANAGER_Initialize();
 22713  237F  3198  200A  31A3   	fcall	_PIN_MANAGER_Initialize
 22714                           
 22715                           ;mcc.c: 82: OSCILLATOR_Initialize();
 22716  2382  31A2  2255  31A3   	fcall	_OSCILLATOR_Initialize
 22717                           
 22718                           ;mcc.c: 83: WDT_Initialize();
 22719  2385  31A1  216D  31A3   	fcall	_WDT_Initialize
 22720                           
 22721                           ;mcc.c: 84: TMR2_Initialize();
 22722  2388  31A3  2330  31A3   	fcall	_TMR2_Initialize
 22723                           
 22724                           ;mcc.c: 85: TMR0_Initialize();
 22725  238B  31A3  2368  31A3   	fcall	_TMR0_Initialize
 22726                           
 22727                           ;mcc.c: 86: EUSART_Initialize();
 22728  238E  31A3  23D6         	fcall	_EUSART_Initialize
 22729  2390  0008               	return
 22730  2391                     __end_of_SYSTEM_Initialize:	
 22731                           
 22732                           	psect	text112
 22733  216D                     __ptext112:	
 22734 ;; *************** function _WDT_Initialize *****************
 22735 ;; Defined at:
 22736 ;;		line 103 in file "mcc_generated_files/mcc.c"
 22737 ;; Parameters:    Size  Location     Type
 22738 ;;		None
 22739 ;; Auto vars:     Size  Location     Type
 22740 ;;		None
 22741 ;; Return value:  Size  Location     Type
 22742 ;;                  1    wreg      void 
 22743 ;; Registers used:
 22744 ;;		wreg
 22745 ;; Tracked objects:
 22746 ;;		On entry : 0/0
 22747 ;;		On exit  : 0/0
 22748 ;;		Unchanged: 0/0
 22749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22754 ;;Total ram usage:        0 bytes
 22755 ;; Hardware stack levels used:    1
 22756 ;; Hardware stack levels required when called:    6
 22757 ;; This function calls:
 22758 ;;		Nothing
 22759 ;; This function is called by:
 22760 ;;		_SYSTEM_Initialize
 22761 ;; This function uses a non-reentrant model
 22762 ;;
 22763                           
 22764                           
 22765                           ;psect for function _WDT_Initialize
 22766  216D                     _WDT_Initialize:	
 22767                           
 22768                           ;mcc.c: 106: WDTCON = 0x16;
 22769                           
 22770                           ;incstack = 0
 22771                           ; Regs used in _WDT_Initialize: [wreg]
 22772  216D  3016               	movlw	22
 22773  216E  0021               	movlb	1	; select bank1
 22774  216F  0097               	movwf	23	;volatile
 22775  2170  0008               	return
 22776  2171                     __end_of_WDT_Initialize:	
 22777                           
 22778                           	psect	text113
 22779  2330                     __ptext113:	
 22780 ;; *************** function _TMR2_Initialize *****************
 22781 ;; Defined at:
 22782 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22783 ;; Parameters:    Size  Location     Type
 22784 ;;		None
 22785 ;; Auto vars:     Size  Location     Type
 22786 ;;		None
 22787 ;; Return value:  Size  Location     Type
 22788 ;;                  1    wreg      void 
 22789 ;; Registers used:
 22790 ;;		wreg, status,2, status,0, pclath, cstack
 22791 ;; Tracked objects:
 22792 ;;		On entry : 0/0
 22793 ;;		On exit  : 0/0
 22794 ;;		Unchanged: 0/0
 22795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22800 ;;Total ram usage:        0 bytes
 22801 ;; Hardware stack levels used:    1
 22802 ;; Hardware stack levels required when called:    7
 22803 ;; This function calls:
 22804 ;;		_TMR2_SetInterruptHandler
 22805 ;; This function is called by:
 22806 ;;		_SYSTEM_Initialize
 22807 ;; This function uses a non-reentrant model
 22808 ;;
 22809                           
 22810                           
 22811                           ;psect for function _TMR2_Initialize
 22812  2330                     _TMR2_Initialize:	
 22813                           
 22814                           ;tmr2.c: 67: PR2 = 0x0F;
 22815                           
 22816                           ;incstack = 0
 22817                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22818  2330  300F               	movlw	15
 22819  2331  0020               	movlb	0	; select bank0
 22820  2332  009E               	movwf	30	;volatile
 22821                           
 22822                           ;tmr2.c: 70: TMR2 = 0x00;
 22823  2333  019D               	clrf	29	;volatile
 22824                           
 22825                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 22826  2334  1091               	bcf	17,1	;volatile
 22827                           
 22828                           ;tmr2.c: 76: PIE1bits.TMR2IE = 1;
 22829  2335  0021               	movlb	1	; select bank1
 22830  2336  1491               	bsf	17,1	;volatile
 22831                           
 22832                           ;tmr2.c: 79: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 22833  2337  301F               	movlw	low _TMR2_DefaultInterruptHandler
 22834  2338  0020               	movlb	0	; select bank0
 22835  2339  00B1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 22836  233A  3022               	movlw	high _TMR2_DefaultInterruptHandler
 22837  233B  00B2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 22838  233C  31A2  2231         	fcall	_TMR2_SetInterruptHandler
 22839                           
 22840                           ;tmr2.c: 82: T2CON = 0x4E;
 22841  233E  304E               	movlw	78
 22842  233F  0020               	movlb	0	; select bank0
 22843  2340  009F               	movwf	31	;volatile
 22844  2341  0008               	return
 22845  2342                     __end_of_TMR2_Initialize:	
 22846                           
 22847                           	psect	text114
 22848  2231                     __ptext114:	
 22849 ;; *************** function _TMR2_SetInterruptHandler *****************
 22850 ;; Defined at:
 22851 ;;		line 130 in file "mcc_generated_files/tmr2.c"
 22852 ;; Parameters:    Size  Location     Type
 22853 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 22854 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 22855 ;; Auto vars:     Size  Location     Type
 22856 ;;		None
 22857 ;; Return value:  Size  Location     Type
 22858 ;;                  1    wreg      void 
 22859 ;; Registers used:
 22860 ;;		wreg
 22861 ;; Tracked objects:
 22862 ;;		On entry : 0/0
 22863 ;;		On exit  : 0/0
 22864 ;;		Unchanged: 0/0
 22865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22866 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22869 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22870 ;;Total ram usage:        2 bytes
 22871 ;; Hardware stack levels used:    1
 22872 ;; Hardware stack levels required when called:    6
 22873 ;; This function calls:
 22874 ;;		Nothing
 22875 ;; This function is called by:
 22876 ;;		_TMR2_Initialize
 22877 ;; This function uses a non-reentrant model
 22878 ;;
 22879                           
 22880                           
 22881                           ;psect for function _TMR2_SetInterruptHandler
 22882  2231                     _TMR2_SetInterruptHandler:	
 22883                           
 22884                           ;tmr2.c: 131: TMR2_InterruptHandler = InterruptHandler;
 22885                           
 22886                           ;incstack = 0
 22887                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 22888  2231  0020               	movlb	0	; select bank0
 22889  2232  0832               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 22890  2233  0023               	movlb	3	; select bank3
 22891  2234  00E2               	movwf	(_TMR2_InterruptHandler+1)^(0+384)
 22892  2235  0020               	movlb	0	; select bank0
 22893  2236  0831               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 22894  2237  0023               	movlb	3	; select bank3
 22895  2238  00E1               	movwf	_TMR2_InterruptHandler^(0+384)
 22896  2239  0008               	return
 22897  223A                     __end_of_TMR2_SetInterruptHandler:	
 22898                           
 22899                           	psect	text115
 22900  2368                     __ptext115:	
 22901 ;; *************** function _TMR0_Initialize *****************
 22902 ;; Defined at:
 22903 ;;		line 59 in file "mcc_generated_files/tmr0.c"
 22904 ;; Parameters:    Size  Location     Type
 22905 ;;		None
 22906 ;; Auto vars:     Size  Location     Type
 22907 ;;		None
 22908 ;; Return value:  Size  Location     Type
 22909 ;;                  1    wreg      void 
 22910 ;; Registers used:
 22911 ;;		wreg, status,2, status,0, pclath, cstack
 22912 ;; Tracked objects:
 22913 ;;		On entry : 0/0
 22914 ;;		On exit  : 0/0
 22915 ;;		Unchanged: 0/0
 22916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22921 ;;Total ram usage:        0 bytes
 22922 ;; Hardware stack levels used:    1
 22923 ;; Hardware stack levels required when called:    7
 22924 ;; This function calls:
 22925 ;;		_TMR0_SetInterruptHandler
 22926 ;; This function is called by:
 22927 ;;		_SYSTEM_Initialize
 22928 ;; This function uses a non-reentrant model
 22929 ;;
 22930                           
 22931                           
 22932                           ;psect for function _TMR0_Initialize
 22933  2368                     _TMR0_Initialize:	
 22934                           
 22935                           ;tmr0.c: 64: T0CON1 = 0x58;
 22936                           
 22937                           ;incstack = 0
 22938                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22939  2368  3058               	movlw	88
 22940  2369  0020               	movlb	0	; select bank0
 22941  236A  0098               	movwf	24	;volatile
 22942                           
 22943                           ;tmr0.c: 67: TMR0H = 0x61;
 22944  236B  3061               	movlw	97
 22945  236C  0096               	movwf	22	;volatile
 22946                           
 22947                           ;tmr0.c: 70: TMR0L = 0x00;
 22948  236D  0195               	clrf	21	;volatile
 22949                           
 22950                           ;tmr0.c: 73: PIR0bits.TMR0IF = 0;
 22951  236E  1290               	bcf	16,5	;volatile
 22952                           
 22953                           ;tmr0.c: 76: PIE0bits.TMR0IE = 1;
 22954  236F  0021               	movlb	1	; select bank1
 22955  2370  1690               	bsf	16,5	;volatile
 22956                           
 22957                           ;tmr0.c: 79: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 22958  2371  3002               	movlw	low _TMR0_DefaultInterruptHandler
 22959  2372  0020               	movlb	0	; select bank0
 22960  2373  00B1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 22961  2374  3008               	movlw	high _TMR0_DefaultInterruptHandler
 22962  2375  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 22963  2376  31A2  2228         	fcall	_TMR0_SetInterruptHandler
 22964                           
 22965                           ;tmr0.c: 82: T0CON0 = 0x89;
 22966  2378  3089               	movlw	137
 22967  2379  0020               	movlb	0	; select bank0
 22968  237A  0097               	movwf	23	;volatile
 22969  237B  0008               	return
 22970  237C                     __end_of_TMR0_Initialize:	
 22971                           
 22972                           	psect	text116
 22973  2228                     __ptext116:	
 22974 ;; *************** function _TMR0_SetInterruptHandler *****************
 22975 ;; Defined at:
 22976 ;;		line 132 in file "mcc_generated_files/tmr0.c"
 22977 ;; Parameters:    Size  Location     Type
 22978 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 22979 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 22980 ;; Auto vars:     Size  Location     Type
 22981 ;;		None
 22982 ;; Return value:  Size  Location     Type
 22983 ;;                  1    wreg      void 
 22984 ;; Registers used:
 22985 ;;		wreg
 22986 ;; Tracked objects:
 22987 ;;		On entry : 0/0
 22988 ;;		On exit  : 0/0
 22989 ;;		Unchanged: 0/0
 22990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22991 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22994 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22995 ;;Total ram usage:        2 bytes
 22996 ;; Hardware stack levels used:    1
 22997 ;; Hardware stack levels required when called:    6
 22998 ;; This function calls:
 22999 ;;		Nothing
 23000 ;; This function is called by:
 23001 ;;		_TMR0_Initialize
 23002 ;; This function uses a non-reentrant model
 23003 ;;
 23004                           
 23005                           
 23006                           ;psect for function _TMR0_SetInterruptHandler
 23007  2228                     _TMR0_SetInterruptHandler:	
 23008                           
 23009                           ;tmr0.c: 133: TMR0_InterruptHandler = InterruptHandler;
 23010                           
 23011                           ;incstack = 0
 23012                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 23013  2228  0020               	movlb	0	; select bank0
 23014  2229  0832               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 23015  222A  0023               	movlb	3	; select bank3
 23016  222B  00E4               	movwf	(_TMR0_InterruptHandler+1)^(0+384)
 23017  222C  0020               	movlb	0	; select bank0
 23018  222D  0831               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 23019  222E  0023               	movlb	3	; select bank3
 23020  222F  00E3               	movwf	_TMR0_InterruptHandler^(0+384)
 23021  2230  0008               	return
 23022  2231                     __end_of_TMR0_SetInterruptHandler:	
 23023                           
 23024                           	psect	text117
 23025  21CF                     __ptext117:	
 23026 ;; *************** function _PMD_Initialize *****************
 23027 ;; Defined at:
 23028 ;;		line 109 in file "mcc_generated_files/mcc.c"
 23029 ;; Parameters:    Size  Location     Type
 23030 ;;		None
 23031 ;; Auto vars:     Size  Location     Type
 23032 ;;		None
 23033 ;; Return value:  Size  Location     Type
 23034 ;;                  1    wreg      void 
 23035 ;; Registers used:
 23036 ;;		status,2
 23037 ;; Tracked objects:
 23038 ;;		On entry : 0/0
 23039 ;;		On exit  : 0/0
 23040 ;;		Unchanged: 0/0
 23041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23046 ;;Total ram usage:        0 bytes
 23047 ;; Hardware stack levels used:    1
 23048 ;; Hardware stack levels required when called:    6
 23049 ;; This function calls:
 23050 ;;		Nothing
 23051 ;; This function is called by:
 23052 ;;		_SYSTEM_Initialize
 23053 ;; This function uses a non-reentrant model
 23054 ;;
 23055                           
 23056                           
 23057                           ;psect for function _PMD_Initialize
 23058  21CF                     _PMD_Initialize:	
 23059                           
 23060                           ;mcc.c: 112: PMD0 = 0x00;
 23061                           
 23062                           ;incstack = 0
 23063                           ; Regs used in _PMD_Initialize: [status,2]
 23064  21CF  0032               	movlb	18	; select bank18
 23065  21D0  0191               	clrf	17	;volatile
 23066                           
 23067                           ;mcc.c: 114: PMD1 = 0x00;
 23068  21D1  0192               	clrf	18	;volatile
 23069                           
 23070                           ;mcc.c: 116: PMD2 = 0x00;
 23071  21D2  0193               	clrf	19	;volatile
 23072                           
 23073                           ;mcc.c: 118: PMD3 = 0x00;
 23074  21D3  0194               	clrf	20	;volatile
 23075                           
 23076                           ;mcc.c: 120: PMD4 = 0x00;
 23077  21D4  0195               	clrf	21	;volatile
 23078                           
 23079                           ;mcc.c: 122: PMD5 = 0x00;
 23080  21D5  0196               	clrf	22	;volatile
 23081  21D6  0008               	return
 23082  21D7                     __end_of_PMD_Initialize:	
 23083                           
 23084                           	psect	text118
 23085  180A                     __ptext118:	
 23086 ;; *************** function _PIN_MANAGER_Initialize *****************
 23087 ;; Defined at:
 23088 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 23089 ;; Parameters:    Size  Location     Type
 23090 ;;		None
 23091 ;; Auto vars:     Size  Location     Type
 23092 ;;		None
 23093 ;; Return value:  Size  Location     Type
 23094 ;;                  1    wreg      void 
 23095 ;; Registers used:
 23096 ;;		wreg, status,2, status,0
 23097 ;; Tracked objects:
 23098 ;;		On entry : 0/0
 23099 ;;		On exit  : 0/0
 23100 ;;		Unchanged: 0/0
 23101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23106 ;;Total ram usage:        0 bytes
 23107 ;; Hardware stack levels used:    1
 23108 ;; Hardware stack levels required when called:    6
 23109 ;; This function calls:
 23110 ;;		Nothing
 23111 ;; This function is called by:
 23112 ;;		_SYSTEM_Initialize
 23113 ;; This function uses a non-reentrant model
 23114 ;;
 23115                           
 23116                           
 23117                           ;psect for function _PIN_MANAGER_Initialize
 23118  180A                     _PIN_MANAGER_Initialize:	
 23119                           
 23120                           ;pin_manager.c: 57: LATA = 0x00;
 23121                           
 23122                           ;incstack = 0
 23123                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 23124  180A  0022               	movlb	2	; select bank2
 23125  180B  018C               	clrf	12	;volatile
 23126                           
 23127                           ;pin_manager.c: 58: LATB = 0x00;
 23128  180C  018D               	clrf	13	;volatile
 23129                           
 23130                           ;pin_manager.c: 59: LATC = 0x00;
 23131  180D  018E               	clrf	14	;volatile
 23132                           
 23133                           ;pin_manager.c: 64: TRISA = 0x33;
 23134  180E  3033               	movlw	51
 23135  180F  0021               	movlb	1	; select bank1
 23136  1810  008C               	movwf	12	;volatile
 23137                           
 23138                           ;pin_manager.c: 65: TRISB = 0x60;
 23139  1811  3060               	movlw	96
 23140  1812  008D               	movwf	13	;volatile
 23141                           
 23142                           ;pin_manager.c: 66: TRISC = 0xF8;
 23143  1813  30F8               	movlw	248
 23144  1814  008E               	movwf	14	;volatile
 23145                           
 23146                           ;pin_manager.c: 71: ANSELC = 0x00;
 23147  1815  0023               	movlb	3	; select bank3
 23148  1816  018E               	clrf	14	;volatile
 23149                           
 23150                           ;pin_manager.c: 72: ANSELB = 0x00;
 23151  1817  018D               	clrf	13	;volatile
 23152                           
 23153                           ;pin_manager.c: 73: ANSELA = 0x00;
 23154  1818  018C               	clrf	12	;volatile
 23155                           
 23156                           ;pin_manager.c: 78: WPUB = 0x00;
 23157  1819  0024               	movlb	4	; select bank4
 23158  181A  018D               	clrf	13	;volatile
 23159                           
 23160                           ;pin_manager.c: 79: WPUA = 0x00;
 23161  181B  018C               	clrf	12	;volatile
 23162                           
 23163                           ;pin_manager.c: 80: WPUC = 0xC8;
 23164  181C  30C8               	movlw	200
 23165  181D  008E               	movwf	14	;volatile
 23166                           
 23167                           ;pin_manager.c: 85: ODCONA = 0x00;
 23168  181E  0025               	movlb	5	; select bank5
 23169  181F  018C               	clrf	12	;volatile
 23170                           
 23171                           ;pin_manager.c: 86: ODCONB = 0x00;
 23172  1820  018D               	clrf	13	;volatile
 23173                           
 23174                           ;pin_manager.c: 87: ODCONC = 0x00;
 23175  1821  018E               	clrf	14	;volatile
 23176                           
 23177                           ;pin_manager.c: 94: SSP1DATPPSbits.SSP1DATPPS = 0x0D;
 23178  1822  003C               	movlb	28	; select bank28
 23179  1823  0821               	movf	33,w	;volatile
 23180  1824  39E0               	andlw	-32
 23181  1825  380D               	iorlw	13
 23182  1826  00A1               	movwf	33	;volatile
 23183                           
 23184                           ;pin_manager.c: 95: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 23185  1827  0820               	movf	32,w	;volatile
 23186  1828  39E0               	andlw	-32
 23187  1829  380E               	iorlw	14
 23188  182A  00A0               	movwf	32	;volatile
 23189                           
 23190                           ;pin_manager.c: 96: RXPPSbits.RXPPS = 0x17;
 23191  182B  0824               	movf	36,w	;volatile
 23192  182C  39E0               	andlw	-32
 23193  182D  3817               	iorlw	23
 23194  182E  00A4               	movwf	36	;volatile
 23195                           
 23196                           ;pin_manager.c: 97: RB7PPSbits.RB7PPS = 0x14;
 23197  182F  003D               	movlb	29	; select bank29
 23198  1830  081F               	movf	31,w	;volatile
 23199  1831  39E0               	andlw	-32
 23200  1832  3814               	iorlw	20
 23201  1833  009F               	movwf	31	;volatile
 23202                           
 23203                           ;pin_manager.c: 98: RB6PPSbits.RB6PPS = 0x18;
 23204  1834  081E               	movf	30,w	;volatile
 23205  1835  39E0               	andlw	-32
 23206  1836  3818               	iorlw	24
 23207  1837  009E               	movwf	30	;volatile
 23208                           
 23209                           ;pin_manager.c: 99: RB5PPSbits.RB5PPS = 0x19;
 23210  1838  081D               	movf	29,w	;volatile
 23211  1839  39E0               	andlw	-32
 23212  183A  3819               	iorlw	25
 23213  183B  009D               	movwf	29	;volatile
 23214  183C  0008               	return
 23215  183D                     __end_of_PIN_MANAGER_Initialize:	
 23216                           
 23217                           	psect	text119
 23218  2255                     __ptext119:	
 23219 ;; *************** function _OSCILLATOR_Initialize *****************
 23220 ;; Defined at:
 23221 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23222 ;; Parameters:    Size  Location     Type
 23223 ;;		None
 23224 ;; Auto vars:     Size  Location     Type
 23225 ;;		None
 23226 ;; Return value:  Size  Location     Type
 23227 ;;                  1    wreg      void 
 23228 ;; Registers used:
 23229 ;;		wreg, status,2
 23230 ;; Tracked objects:
 23231 ;;		On entry : 0/0
 23232 ;;		On exit  : 0/0
 23233 ;;		Unchanged: 0/0
 23234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23239 ;;Total ram usage:        0 bytes
 23240 ;; Hardware stack levels used:    1
 23241 ;; Hardware stack levels required when called:    6
 23242 ;; This function calls:
 23243 ;;		Nothing
 23244 ;; This function is called by:
 23245 ;;		_SYSTEM_Initialize
 23246 ;; This function uses a non-reentrant model
 23247 ;;
 23248                           
 23249                           
 23250                           ;psect for function _OSCILLATOR_Initialize
 23251  2255                     _OSCILLATOR_Initialize:	
 23252                           
 23253                           ;mcc.c: 92: OSCCON1 = 0x62;
 23254                           
 23255                           ;incstack = 0
 23256                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 23257  2255  3062               	movlw	98
 23258  2256  0032               	movlb	18	; select bank18
 23259  2257  0099               	movwf	25	;volatile
 23260                           
 23261                           ;mcc.c: 94: OSCCON3 = 0x00;
 23262  2258  019B               	clrf	27	;volatile
 23263                           
 23264                           ;mcc.c: 96: OSCEN = 0x00;
 23265  2259  019D               	clrf	29	;volatile
 23266                           
 23267                           ;mcc.c: 98: OSCFRQ = 0x03;
 23268  225A  3003               	movlw	3
 23269  225B  009F               	movwf	31	;volatile
 23270                           
 23271                           ;mcc.c: 100: OSCTUNE = 0x20;
 23272  225C  3020               	movlw	32
 23273  225D  009E               	movwf	30	;volatile
 23274  225E  0008               	return
 23275  225F                     __end_of_OSCILLATOR_Initialize:	
 23276                           
 23277                           	psect	text120
 23278  23D6                     __ptext120:	
 23279 ;; *************** function _EUSART_Initialize *****************
 23280 ;; Defined at:
 23281 ;;		line 72 in file "mcc_generated_files/eusart.c"
 23282 ;; Parameters:    Size  Location     Type
 23283 ;;		None
 23284 ;; Auto vars:     Size  Location     Type
 23285 ;;		None
 23286 ;; Return value:  Size  Location     Type
 23287 ;;                  1    wreg      void 
 23288 ;; Registers used:
 23289 ;;		wreg, status,2
 23290 ;; Tracked objects:
 23291 ;;		On entry : 0/0
 23292 ;;		On exit  : 0/0
 23293 ;;		Unchanged: 0/0
 23294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23297 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23298 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23299 ;;Total ram usage:        1 bytes
 23300 ;; Hardware stack levels used:    1
 23301 ;; Hardware stack levels required when called:    6
 23302 ;; This function calls:
 23303 ;;		Nothing
 23304 ;; This function is called by:
 23305 ;;		_SYSTEM_Initialize
 23306 ;; This function uses a non-reentrant model
 23307 ;;
 23308                           
 23309                           
 23310                           ;psect for function _EUSART_Initialize
 23311  23D6                     _EUSART_Initialize:	
 23312                           
 23313                           ;eusart.c: 75: PIE1bits.RCIE = 0;
 23314                           
 23315                           ;incstack = 0
 23316                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 23317  23D6  0021               	movlb	1	; select bank1
 23318  23D7  1291               	bcf	17,5	;volatile
 23319                           
 23320                           ;eusart.c: 76: PIE1bits.TXIE = 0;
 23321  23D8  1211               	bcf	17,4	;volatile
 23322                           
 23323                           ;eusart.c: 80: BAUD1CON = 0x08;
 23324  23D9  3008               	movlw	8
 23325  23DA  0023               	movlb	3	; select bank3
 23326  23DB  009F               	movwf	31	;volatile
 23327                           
 23328                           ;eusart.c: 83: RC1STA = 0x90;
 23329  23DC  3090               	movlw	144
 23330  23DD  009D               	movwf	29	;volatile
 23331                           
 23332                           ;eusart.c: 86: TX1STA = 0x24;
 23333  23DE  3024               	movlw	36
 23334  23DF  009E               	movwf	30	;volatile
 23335                           
 23336                           ;eusart.c: 89: SP1BRGL = 0x19;
 23337  23E0  3019               	movlw	25
 23338  23E1  009B               	movwf	27	;volatile
 23339                           
 23340                           ;eusart.c: 92: SP1BRGH = 0x00;
 23341  23E2  019C               	clrf	28	;volatile
 23342                           
 23343                           ;eusart.c: 96: eusartTxHead = 0;
 23344  23E3  01FD               	clrf	_eusartTxHead	;volatile
 23345                           
 23346                           ;eusart.c: 97: eusartTxTail = 0;
 23347  23E4  0020               	movlb	0	; select bank0
 23348  23E5  01D9               	clrf	_eusartTxTail	;volatile
 23349                           
 23350                           ;eusart.c: 98: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 23351  23E6  3008               	movlw	8
 23352  23E7  00B1               	movwf	??_EUSART_Initialize
 23353  23E8  0831               	movf	??_EUSART_Initialize,w
 23354  23E9  00DE               	movwf	_eusartTxBufferRemaining	;volatile
 23355                           
 23356                           ;eusart.c: 100: eusartRxHead = 0;
 23357  23EA  01D8               	clrf	_eusartRxHead	;volatile
 23358                           
 23359                           ;eusart.c: 101: eusartRxTail = 0;
 23360  23EB  01D7               	clrf	_eusartRxTail	;volatile
 23361                           
 23362                           ;eusart.c: 102: eusartRxCount = 0;
 23363  23EC  01D6               	clrf	_eusartRxCount	;volatile
 23364                           
 23365                           ;eusart.c: 105: PIE1bits.RCIE = 1;
 23366  23ED  0021               	movlb	1	; select bank1
 23367  23EE  1691               	bsf	17,5	;volatile
 23368  23EF  0008               	return
 23369  23F0                     __end_of_EUSART_Initialize:	
 23370                           
 23371                           	psect	text121
 23372  24F4                     __ptext121:	
 23373 ;; *************** function _EUSART_Read *****************
 23374 ;; Defined at:
 23375 ;;		line 108 in file "mcc_generated_files/eusart.c"
 23376 ;; Parameters:    Size  Location     Type
 23377 ;;		None
 23378 ;; Auto vars:     Size  Location     Type
 23379 ;;  readValue       1   18[BANK0 ] unsigned char 
 23380 ;; Return value:  Size  Location     Type
 23381 ;;                  1    wreg      unsigned char 
 23382 ;; Registers used:
 23383 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23384 ;; Tracked objects:
 23385 ;;		On entry : 0/0
 23386 ;;		On exit  : 0/0
 23387 ;;		Unchanged: 0/0
 23388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23391 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23392 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23393 ;;Total ram usage:        2 bytes
 23394 ;; Hardware stack levels used:    1
 23395 ;; Hardware stack levels required when called:    6
 23396 ;; This function calls:
 23397 ;;		Nothing
 23398 ;; This function is called by:
 23399 ;;		_main
 23400 ;;		_getch
 23401 ;; This function uses a non-reentrant model
 23402 ;;
 23403                           
 23404                           
 23405                           ;psect for function _EUSART_Read
 23406  24F4                     _EUSART_Read:	
 23407                           
 23408                           ;eusart.c: 110: uint8_t readValue = 0;
 23409                           
 23410                           ;incstack = 0
 23411                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 23412  24F4  0020               	movlb	0	; select bank0
 23413  24F5  01B2               	clrf	EUSART_Read@readValue
 23414  24F6                     l6607:	
 23415                           ;eusart.c: 113: {
 23416                           
 23417                           ;eusart.c: 112: while(0 == eusartRxCount)
 23418                           
 23419  24F6  0856               	movf	_eusartRxCount,w	;volatile
 23420  24F7  1903               	btfsc	3,2
 23421  24F8  2CF6               	goto	l6607
 23422                           
 23423                           ;eusart.c: 114: }
 23424                           ;eusart.c: 116: readValue = eusartRxBuffer[eusartRxTail++];
 23425  24F9  0857               	movf	_eusartRxTail,w
 23426  24FA  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 23427  24FB  0086               	movwf	6
 23428  24FC  3001               	movlw	1	; select bank3/4
 23429  24FD  0087               	movwf	7
 23430  24FE  0801               	movf	1,w
 23431  24FF  00B1               	movwf	??_EUSART_Read
 23432  2500  0831               	movf	??_EUSART_Read,w
 23433  2501  00B2               	movwf	EUSART_Read@readValue
 23434  2502  3001               	movlw	1
 23435  2503  00B1               	movwf	??_EUSART_Read
 23436  2504  0831               	movf	??_EUSART_Read,w
 23437  2505  07D7               	addwf	_eusartRxTail,f	;volatile
 23438                           
 23439                           ;eusart.c: 117: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 23440  2506  3008               	movlw	8
 23441  2507  0257               	subwf	_eusartRxTail,w	;volatile
 23442  2508  1803               	btfsc	3,0
 23443                           
 23444                           ;eusart.c: 118: {
 23445                           ;eusart.c: 119: eusartRxTail = 0;
 23446  2509  01D7               	clrf	_eusartRxTail	;volatile
 23447                           
 23448                           ;eusart.c: 120: }
 23449                           ;eusart.c: 121: PIE1bits.RCIE = 0;
 23450  250A  0021               	movlb	1	; select bank1
 23451  250B  1291               	bcf	17,5	;volatile
 23452                           
 23453                           ;eusart.c: 122: eusartRxCount--;
 23454  250C  3001               	movlw	1
 23455  250D  0020               	movlb	0	; select bank0
 23456  250E  02D6               	subwf	_eusartRxCount,f	;volatile
 23457                           
 23458                           ;eusart.c: 123: PIE1bits.RCIE = 1;
 23459  250F  0021               	movlb	1	; select bank1
 23460  2510  1691               	bsf	17,5	;volatile
 23461                           
 23462                           ;eusart.c: 125: return readValue;
 23463  2511  0020               	movlb	0	; select bank0
 23464  2512  0832               	movf	EUSART_Read@readValue,w
 23465  2513  0008               	return
 23466  2514                     __end_of_EUSART_Read:	
 23467                           
 23468                           	psect	intentry
 23469  0004                     __pintentry:	
 23470 ;; *************** function _INTERRUPT_InterruptManager *****************
 23471 ;; Defined at:
 23472 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 23473 ;; Parameters:    Size  Location     Type
 23474 ;;		None
 23475 ;; Auto vars:     Size  Location     Type
 23476 ;;		None
 23477 ;; Return value:  Size  Location     Type
 23478 ;;                  1    wreg      void 
 23479 ;; Registers used:
 23480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23481 ;; Tracked objects:
 23482 ;;		On entry : 0/0
 23483 ;;		On exit  : 0/0
 23484 ;;		Unchanged: 0/0
 23485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23488 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23489 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23490 ;;Total ram usage:        1 bytes
 23491 ;; Hardware stack levels used:    1
 23492 ;; Hardware stack levels required when called:    5
 23493 ;; This function calls:
 23494 ;;		Absolute function
 23495 ;;		_EUSART_Receive_ISR
 23496 ;;		_EUSART_Transmit_ISR
 23497 ;;		_TMR0_ISR
 23498 ;;		_TMR2_ISR
 23499 ;;		_i2c_busCollisionISR
 23500 ;;		i1_i2c_ISR
 23501 ;; This function is called by:
 23502 ;;		Interrupt level 1
 23503 ;; This function uses a non-reentrant model
 23504 ;;
 23505                           
 23506  0004                     _INTERRUPT_InterruptManager:	
 23507                           
 23508                           ;incstack = 0
 23509 ;; hardware stack exceeded
 23510  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 23511                           
 23512                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23513  0005  3180               	pagesel	$
 23514  0006  0020               	movlb	0	; select bank0
 23515  0007  087F               	movf	127,w
 23516  0008  00FC               	movwf	??_INTERRUPT_InterruptManager
 23517                           
 23518                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 23519  0009  0021               	movlb	1	; select bank1
 23520  000A  1E90               	btfss	16,5	;volatile
 23521  000B  2813               	goto	i1l362
 23522  000C  0020               	movlb	0	; select bank0
 23523  000D  1E90               	btfss	16,5	;volatile
 23524  000E  2813               	goto	i1l362
 23525                           
 23526                           ;interrupt_manager.c: 55: {
 23527                           ;interrupt_manager.c: 56: TMR0_ISR();
 23528  000F  31A2  22D9  3180   	fcall	_TMR0_ISR
 23529                           
 23530                           ;interrupt_manager.c: 57: }
 23531  0012  284B               	goto	i1l376
 23532  0013                     i1l362:	
 23533                           
 23534                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1)
 23535  0013  1F0B               	btfss	11,6	;volatile
 23536  0014  284B               	goto	i1l376
 23537                           
 23538                           ;interrupt_manager.c: 59: {
 23539                           ;interrupt_manager.c: 60: if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
 23540  0015  0021               	movlb	1	; select bank1
 23541  0016  1D11               	btfss	17,2	;volatile
 23542  0017  2822               	goto	i1l365
 23543  0018  0020               	movlb	0	; select bank0
 23544  0019  1D11               	btfss	17,2	;volatile
 23545  001A  2822               	goto	i1l365
 23546                           
 23547                           ;interrupt_manager.c: 61: {
 23548                           ;interrupt_manager.c: 62: i2c1_driver_busCollisionISR();
 23549  001B  0022               	movlb	2	; select bank2
 23550  001C  0867               	movf	(_i2c1_driver_busCollisionISR+1)^(0+256),w
 23551  001D  008A               	movwf	10
 23552  001E  0866               	movf	_i2c1_driver_busCollisionISR^(0+256),w
 23553  001F  000A               	callw
 23554  0020  3180               	pagesel	$
 23555                           
 23556                           ;interrupt_manager.c: 63: }
 23557  0021  284B               	goto	i1l376
 23558  0022                     i1l365:	
 23559                           
 23560                           ;interrupt_manager.c: 64: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 23561  0022  0021               	movlb	1	; select bank1
 23562  0023  1D91               	btfss	17,3	;volatile
 23563  0024  282F               	goto	i1l367
 23564  0025  0020               	movlb	0	; select bank0
 23565  0026  1D91               	btfss	17,3	;volatile
 23566  0027  282F               	goto	i1l367
 23567                           
 23568                           ;interrupt_manager.c: 65: {
 23569                           ;interrupt_manager.c: 66: i2c1_driver_i2cISR();
 23570  0028  0022               	movlb	2	; select bank2
 23571  0029  0865               	movf	(_i2c1_driver_i2cISR+1)^(0+256),w
 23572  002A  008A               	movwf	10
 23573  002B  0864               	movf	_i2c1_driver_i2cISR^(0+256),w
 23574  002C  000A               	callw
 23575  002D  3180               	pagesel	$
 23576                           
 23577                           ;interrupt_manager.c: 67: }
 23578  002E  284B               	goto	i1l376
 23579  002F                     i1l367:	
 23580                           
 23581                           ;interrupt_manager.c: 68: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 23582  002F  0021               	movlb	1	; select bank1
 23583  0030  1C91               	btfss	17,1	;volatile
 23584  0031  2839               	goto	i1l369
 23585  0032  0020               	movlb	0	; select bank0
 23586  0033  1C91               	btfss	17,1	;volatile
 23587  0034  2839               	goto	i1l369
 23588                           
 23589                           ;interrupt_manager.c: 69: {
 23590                           ;interrupt_manager.c: 70: TMR2_ISR();
 23591  0035  31A2  22E6  3180   	fcall	_TMR2_ISR
 23592                           
 23593                           ;interrupt_manager.c: 71: }
 23594  0038  284B               	goto	i1l376
 23595  0039                     i1l369:	
 23596                           
 23597                           ;interrupt_manager.c: 72: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 23598  0039  0021               	movlb	1	; select bank1
 23599  003A  1E91               	btfss	17,5	;volatile
 23600  003B  2843               	goto	i1l371
 23601  003C  0020               	movlb	0	; select bank0
 23602  003D  1E91               	btfss	17,5	;volatile
 23603  003E  2843               	goto	i1l371
 23604                           
 23605                           ;interrupt_manager.c: 73: {
 23606                           ;interrupt_manager.c: 74: EUSART_Receive_ISR();
 23607  003F  31A4  2425  3180   	fcall	_EUSART_Receive_ISR
 23608                           
 23609                           ;interrupt_manager.c: 75: }
 23610  0042  284B               	goto	i1l376
 23611  0043                     i1l371:	
 23612                           
 23613                           ;interrupt_manager.c: 76: else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 23614  0043  0021               	movlb	1	; select bank1
 23615  0044  1E11               	btfss	17,4	;volatile
 23616  0045  284B               	goto	i1l376
 23617  0046  0020               	movlb	0	; select bank0
 23618  0047  1E11               	btfss	17,4	;volatile
 23619  0048  284B               	goto	i1l376
 23620                           
 23621                           ;interrupt_manager.c: 77: {
 23622                           ;interrupt_manager.c: 78: EUSART_Transmit_ISR();
 23623  0049  31A4  247A         	fcall	_EUSART_Transmit_ISR
 23624  004B                     i1l376:	
 23625                           ;interrupt_manager.c: 85: else
 23626                           ;interrupt_manager.c: 86: {
 23627                           
 23628                           ;interrupt_manager.c: 83: }
 23629                           ;interrupt_manager.c: 84: }
 23630                           
 23631                           ;interrupt_manager.c: 80: else
 23632                           ;interrupt_manager.c: 81: {
 23633                           
 23634                           ;interrupt_manager.c: 79: }
 23635                           
 23636  004B  087C               	movf	??_INTERRUPT_InterruptManager,w
 23637  004C  0020               	movlb	0	; select bank0
 23638  004D  00FF               	movwf	127
 23639  004E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 23640  004F  0009               	retfie
 23641  0050                     __end_of_INTERRUPT_InterruptManager:	
 23642                           
 23643                           	psect	text123
 23644  24D4                     __ptext123:	
 23645 ;; *************** function i1_i2c_ISR *****************
 23646 ;; Defined at:
 23647 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 23648 ;; Parameters:    Size  Location     Type
 23649 ;;		None
 23650 ;; Auto vars:     Size  Location     Type
 23651 ;;		None
 23652 ;; Return value:  Size  Location     Type
 23653 ;;                  1    wreg      void 
 23654 ;; Registers used:
 23655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23656 ;; Tracked objects:
 23657 ;;		On entry : 0/0
 23658 ;;		On exit  : 0/0
 23659 ;;		Unchanged: 0/0
 23660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23664 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23665 ;;Total ram usage:        1 bytes
 23666 ;; Hardware stack levels used:    1
 23667 ;; Hardware stack levels required when called:    3
 23668 ;; This function calls:
 23669 ;;		i1_do_I2C_DO_ACK
 23670 ;;		i1_do_I2C_DO_ADDRESS_NACK
 23671 ;;		i1_do_I2C_DO_NACK_RESTART
 23672 ;;		i1_do_I2C_DO_NACK_STOP
 23673 ;;		i1_do_I2C_IDLE
 23674 ;;		i1_do_I2C_RCEN
 23675 ;;		i1_do_I2C_RESET
 23676 ;;		i1_do_I2C_RX
 23677 ;;		i1_do_I2C_SEND_ADR_READ
 23678 ;;		i1_do_I2C_SEND_ADR_WRITE
 23679 ;;		i1_do_I2C_SEND_RESTART
 23680 ;;		i1_do_I2C_SEND_RESTART_READ
 23681 ;;		i1_do_I2C_SEND_RESTART_WRITE
 23682 ;;		i1_do_I2C_SEND_STOP
 23683 ;;		i1_do_I2C_TX
 23684 ;;		i1_do_I2C_TX_EMPTY
 23685 ;;		i1_i2c1_driver_isNACK
 23686 ;;		i1_mssp1_clearIRQ
 23687 ;; This function is called by:
 23688 ;; This function uses a non-reentrant model
 23689 ;;
 23690                           
 23691                           
 23692                           ;psect for function i1_i2c_ISR
 23693  24D4                     i1_i2c_ISR:	
 23694  24D4                     i1l8657:	
 23695                           ;incstack = 0
 23696                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23697                           
 23698                           
 23699                           ;i2c_master.c: 421: mssp1_clearIRQ();
 23700  24D4  31A1  212B  31A4   	fcall	i1_mssp1_clearIRQ
 23701                           
 23702                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 23703  24D7  0022               	movlb	2	; select bank2
 23704  24D8  1DA0               	btfss	_i2c_status^(0+256),3
 23705  24D9  2CE4               	goto	i1l8665
 23706  24DA  31A2  22A9  31A4   	fcall	i1_i2c1_driver_isNACK
 23707  24DD  1C03               	btfss	3,0
 23708  24DE  2CE4               	goto	i1l8665
 23709                           
 23710                           ;i2c_master.c: 428: {
 23711                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 23712  24DF  300F               	movlw	15
 23713  24E0  00F5               	movwf	??i1_i2c_ISR
 23714  24E1  0875               	movf	??i1_i2c_ISR,w
 23715  24E2  0022               	movlb	2	; select bank2
 23716  24E3  00AA               	movwf	(_i2c_status^(0+256)+10)
 23717  24E4                     i1l8665:	
 23718                           
 23719                           ;i2c_master.c: 430: }
 23720                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 23721  24E4  0022               	movlb	2	; select bank2
 23722  24E5  352A               	lslf	(_i2c_status^(0+256)+10),w
 23723  24E6  3E20               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 23724  24E7  0086               	movwf	6
 23725  24E8  3002               	movlw	2	; select bank4/5
 23726  24E9  0087               	movwf	7
 23727  24EA  3F41               	moviw [1]fsr1
 23728  24EB  008A               	movwf	10
 23729  24EC  3F40               	moviw [0]fsr1
 23730  24ED  000A               	callw
 23731  24EE  31A4               	pagesel	$
 23732  24EF  00F5               	movwf	??i1_i2c_ISR
 23733  24F0  0875               	movf	??i1_i2c_ISR,w
 23734  24F1  0022               	movlb	2	; select bank2
 23735  24F2  00AA               	movwf	(_i2c_status^(0+256)+10)
 23736  24F3  0008               	return
 23737  24F4                     __end_ofi1_i2c_ISR:	
 23738                           
 23739                           	psect	text124
 23740  212B                     __ptext124:	
 23741 ;; *************** function i1_mssp1_clearIRQ *****************
 23742 ;; Defined at:
 23743 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 23744 ;; Parameters:    Size  Location     Type
 23745 ;;		None
 23746 ;; Auto vars:     Size  Location     Type
 23747 ;;		None
 23748 ;; Return value:  Size  Location     Type
 23749 ;;                  1    wreg      void 
 23750 ;; Registers used:
 23751 ;;		None
 23752 ;; Tracked objects:
 23753 ;;		On entry : 0/0
 23754 ;;		On exit  : 0/0
 23755 ;;		Unchanged: 0/0
 23756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23761 ;;Total ram usage:        0 bytes
 23762 ;; Hardware stack levels used:    1
 23763 ;; This function calls:
 23764 ;;		Nothing
 23765 ;; This function is called by:
 23766 ;;		i1_i2c_ISR
 23767 ;; This function uses a non-reentrant model
 23768 ;;
 23769                           
 23770                           
 23771                           ;psect for function i1_mssp1_clearIRQ
 23772  212B                     i1_mssp1_clearIRQ:	
 23773                           
 23774                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 23775                           
 23776                           ;incstack = 0
 23777                           ; Regs used in i1_mssp1_clearIRQ: []
 23778  212B  0020               	movlb	0	; select bank0
 23779  212C  1191               	bcf	17,3	;volatile
 23780  212D  0008               	return
 23781  212E                     __end_ofi1_mssp1_clearIRQ:	
 23782                           
 23783                           	psect	text125
 23784  1871                     __ptext125:	
 23785 ;; *************** function i1_do_I2C_RX *****************
 23786 ;; Defined at:
 23787 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 23788 ;; Parameters:    Size  Location     Type
 23789 ;;		None
 23790 ;; Auto vars:     Size  Location     Type
 23791 ;;		None
 23792 ;; Return value:  Size  Location     Type
 23793 ;;                  1    wreg      enum E8364
 23794 ;; Registers used:
 23795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23796 ;; Tracked objects:
 23797 ;;		On entry : 0/0
 23798 ;;		On exit  : 0/0
 23799 ;;		Unchanged: 0/0
 23800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23805 ;;Total ram usage:        1 bytes
 23806 ;; Hardware stack levels used:    1
 23807 ;; Hardware stack levels required when called:    2
 23808 ;; This function calls:
 23809 ;;		i1_do_I2C_DO_NACK_RESTART
 23810 ;;		i1_do_I2C_DO_NACK_STOP
 23811 ;;		i1_i2c1_driver_getRXData
 23812 ;;		i1_i2c1_driver_sendACK
 23813 ;;		i1_returnReset
 23814 ;;		i1_returnStop
 23815 ;; This function is called by:
 23816 ;; This function uses a non-reentrant model
 23817 ;;
 23818                           
 23819                           
 23820                           ;psect for function i1_do_I2C_RX
 23821  1871                     i1_do_I2C_RX:	
 23822  1871                     i1l8435:	
 23823                           ;incstack = 0
 23824                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23825                           
 23826                           
 23827                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 23828  1871  0022               	movlb	2	; select bank2
 23829  1872  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 23830  1873  0086               	movwf	6
 23831  1874  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 23832  1875  0087               	movwf	7
 23833  1876  31A1  2125  3198   	fcall	i1_i2c1_driver_getRXData
 23834  1879  0081               	movwf	1
 23835  187A  3001               	movlw	1
 23836  187B  0022               	movlb	2	; select bank2
 23837  187C  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 23838  187D  3000               	movlw	0
 23839  187E  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 23840                           
 23841                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 23842  187F  3001               	movlw	1
 23843  1880  02A4               	subwf	(_i2c_status^(0+256)+4),f
 23844  1881  3000               	movlw	0
 23845  1882  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 23846  1883  0824               	movf	(_i2c_status^(0+256)+4),w
 23847  1884  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 23848  1885  1903               	btfsc	3,2
 23849  1886  288B               	goto	i1l772
 23850                           
 23851                           ;i2c_master.c: 361: {
 23852                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 23853  1887  31A1  2149         	fcall	i1_i2c1_driver_sendACK
 23854                           
 23855                           ;i2c_master.c: 363: return I2C_RCEN;
 23856  1889  3005               	movlw	5
 23857                           
 23858                           ;i2c_master.c: 364: }
 23859  188A  0008               	return
 23860  188B                     i1l772:	
 23861                           
 23862                           ;i2c_master.c: 365: else
 23863                           ;i2c_master.c: 366: {
 23864                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 23865  188B  1520               	bsf	_i2c_status^(0+256),2
 23866                           
 23867                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 23868  188C  2893               	goto	i1l8459
 23869  188D                     i1l8449:	
 23870                           ;i2c_master.c: 369: {
 23871                           ;i2c_master.c: 370: case i2c_restart_write:
 23872                           
 23873                           
 23874                           ;i2c_master.c: 371: case i2c_restart_read:
 23875                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 23876  188D  31A1  2169         	fcall	i1_do_I2C_DO_NACK_RESTART
 23877  188F  0008               	return
 23878  1890                     i1l8453:	
 23879                           ;i2c_master.c: 374: case i2c_continue:
 23880                           
 23881                           ;i2c_master.c: 373: default:
 23882                           
 23883                           
 23884                           ;i2c_master.c: 375: case i2c_stop:
 23885                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 23886  1890  31A1  2165         	fcall	i1_do_I2C_DO_NACK_STOP
 23887                           
 23888                           ;i2c_master.c: 377: }
 23889  1892  0008               	return
 23890  1893                     i1l8459:	
 23891  1893  0022               	movlb	2	; select bank2
 23892  1894  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 23893  1895  00F0               	movwf	??i1_do_I2C_RX
 23894  1896  0870               	movf	??i1_do_I2C_RX,w
 23895  1897  00F0               	movwf	i1returnReset@p
 23896  1898  300C               	movlw	12
 23897  1899  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23898  189A  0086               	movwf	6
 23899  189B  3001               	movlw	1	; select bank2/3
 23900  189C  0087               	movwf	7
 23901  189D  3F41               	moviw [1]fsr1
 23902  189E  008A               	movwf	10
 23903  189F  3F40               	moviw [0]fsr1
 23904  18A0  000A               	callw
 23905  18A1  3198               	pagesel	$
 23906                           
 23907                           ; Switch size 1, requested type "space"
 23908                           ; Number of cases is 4, Range of values is 1 to 4
 23909                           ; switch strategies available:
 23910                           ; Name         Instructions Cycles
 23911                           ; simple_byte           13     7 (average)
 23912                           ; direct_byte           17     9 (fixed)
 23913                           ; jumptable            263     9 (fixed)
 23914                           ;	Chosen strategy is simple_byte
 23915  18A2  3A01               	xorlw	1	; case 1
 23916  18A3  1903               	skipnz
 23917  18A4  2890               	goto	i1l8453
 23918  18A5  3A03               	xorlw	3	; case 2
 23919  18A6  1903               	skipnz
 23920  18A7  288D               	goto	i1l8449
 23921  18A8  3A01               	xorlw	1	; case 3
 23922  18A9  1903               	skipnz
 23923  18AA  288D               	goto	i1l8449
 23924  18AB  3A07               	xorlw	7	; case 4
 23925  18AC  1903               	skipnz
 23926  18AD  2890               	goto	i1l8453
 23927  18AE  2890               	goto	i1l8453
 23928  18AF  0008               	return
 23929  18B0                     __end_ofi1_do_I2C_RX:	
 23930                           
 23931                           	psect	text126
 23932  1BBE                     __ptext126:	
 23933 ;; *************** function i1_do_I2C_TX *****************
 23934 ;; Defined at:
 23935 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 23936 ;; Parameters:    Size  Location     Type
 23937 ;;		None
 23938 ;; Auto vars:     Size  Location     Type
 23939 ;;		None
 23940 ;; Return value:  Size  Location     Type
 23941 ;;                  1    wreg      enum E8364
 23942 ;; Registers used:
 23943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23944 ;; Tracked objects:
 23945 ;;		On entry : 0/0
 23946 ;;		On exit  : 0/0
 23947 ;;		Unchanged: 0/0
 23948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23951 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23952 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23953 ;;Total ram usage:        4 bytes
 23954 ;; Hardware stack levels used:    1
 23955 ;; Hardware stack levels required when called:    2
 23956 ;; This function calls:
 23957 ;;		i1_do_I2C_SEND_RESTART_READ
 23958 ;;		i1_do_I2C_SEND_RESTART_WRITE
 23959 ;;		i1_do_I2C_SEND_STOP
 23960 ;;		i1_i2c1_driver_TXData
 23961 ;;		i1_i2c1_driver_isNACK
 23962 ;;		i1_returnReset
 23963 ;;		i1_returnStop
 23964 ;; This function is called by:
 23965 ;; This function uses a non-reentrant model
 23966 ;;
 23967                           
 23968                           
 23969                           ;psect for function i1_do_I2C_TX
 23970  1BBE                     i1_do_I2C_TX:	
 23971  1BBE                     i1l8405:	
 23972                           ;incstack = 0
 23973                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23974                           
 23975                           
 23976                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 23977  1BBE  31A2  22A9  319B   	fcall	i1_i2c1_driver_isNACK
 23978  1BC1  1803               	btfsc	3,0
 23979  1BC2  2BCD               	goto	i1l8423
 23980  1BC3  2BEA               	goto	i1l756
 23981  1BC4                     i1l8409:	
 23982                           ;i2c_master.c: 338: {
 23983                           ;i2c_master.c: 339: case i2c_restart_read:
 23984                           
 23985                           ;i2c_master.c: 336: {
 23986                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 23987                           
 23988                           
 23989                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 23990  1BC4  31A1  2151         	fcall	i1_do_I2C_SEND_RESTART_READ
 23991  1BC6  0008               	return
 23992  1BC7                     i1l8413:	
 23993                           ;i2c_master.c: 341: case i2c_restart_write:
 23994                           
 23995                           
 23996                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 23997  1BC7  31A1  2155         	fcall	i1_do_I2C_SEND_RESTART_WRITE
 23998  1BC9  0008               	return
 23999  1BCA                     i1l8417:	
 24000                           ;i2c_master.c: 344: case i2c_continue:
 24001                           
 24002                           ;i2c_master.c: 343: default:
 24003                           
 24004                           
 24005                           ;i2c_master.c: 345: case i2c_stop:
 24006                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 24007  1BCA  31A1  215D         	fcall	i1_do_I2C_SEND_STOP
 24008                           
 24009                           ;i2c_master.c: 347: }
 24010  1BCC  0008               	return
 24011  1BCD                     i1l8423:	
 24012  1BCD  0022               	movlb	2	; select bank2
 24013  1BCE  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 24014  1BCF  00F1               	movwf	??i1_do_I2C_TX
 24015  1BD0  0871               	movf	??i1_do_I2C_TX,w
 24016  1BD1  00F0               	movwf	i1returnReset@p
 24017  1BD2  3012               	movlw	18
 24018  1BD3  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 24019  1BD4  0086               	movwf	6
 24020  1BD5  3001               	movlw	1	; select bank2/3
 24021  1BD6  0087               	movwf	7
 24022  1BD7  3F41               	moviw [1]fsr1
 24023  1BD8  008A               	movwf	10
 24024  1BD9  3F40               	moviw [0]fsr1
 24025  1BDA  000A               	callw
 24026  1BDB  319B               	pagesel	$
 24027                           
 24028                           ; Switch size 1, requested type "space"
 24029                           ; Number of cases is 4, Range of values is 1 to 4
 24030                           ; switch strategies available:
 24031                           ; Name         Instructions Cycles
 24032                           ; simple_byte           13     7 (average)
 24033                           ; direct_byte           17     9 (fixed)
 24034                           ; jumptable            263     9 (fixed)
 24035                           ;	Chosen strategy is simple_byte
 24036  1BDC  3A01               	xorlw	1	; case 1
 24037  1BDD  1903               	skipnz
 24038  1BDE  2BCA               	goto	i1l8417
 24039  1BDF  3A03               	xorlw	3	; case 2
 24040  1BE0  1903               	skipnz
 24041  1BE1  2BC4               	goto	i1l8409
 24042  1BE2  3A01               	xorlw	1	; case 3
 24043  1BE3  1903               	skipnz
 24044  1BE4  2BC7               	goto	i1l8413
 24045  1BE5  3A07               	xorlw	7	; case 4
 24046  1BE6  1903               	skipnz
 24047  1BE7  2BCA               	goto	i1l8417
 24048  1BE8  2BCA               	goto	i1l8417
 24049                           
 24050                           ;i2c_master.c: 348: }
 24051  1BE9  0008               	return
 24052  1BEA                     i1l756:	
 24053                           
 24054                           ;i2c_master.c: 349: else
 24055                           ;i2c_master.c: 350: {
 24056                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 24057  1BEA  0022               	movlb	2	; select bank2
 24058  1BEB  11A0               	bcf	_i2c_status^(0+256),3
 24059                           
 24060                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 24061  1BEC  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 24062  1BED  00F2               	movwf	??i1_do_I2C_TX+1
 24063  1BEE  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 24064  1BEF  00F1               	movwf	??i1_do_I2C_TX
 24065  1BF0  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 24066  1BF1  1903               	skipnz
 24067  1BF2  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 24068  1BF3  0871               	movf	??i1_do_I2C_TX,w
 24069  1BF4  0084               	movwf	4
 24070  1BF5  0872               	movf	??i1_do_I2C_TX+1,w
 24071  1BF6  0085               	movwf	5
 24072  1BF7  0800               	movf	0,w	;code access
 24073  1BF8  31A1  2187  319B   	fcall	i1_i2c1_driver_TXData
 24074                           
 24075                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 24076  1BFB  3001               	movlw	1
 24077  1BFC  0022               	movlb	2	; select bank2
 24078  1BFD  02A4               	subwf	(_i2c_status^(0+256)+4),f
 24079  1BFE  3000               	movlw	0
 24080  1BFF  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 24081  1C00  0824               	movf	(_i2c_status^(0+256)+4),w
 24082  1C01  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 24083  1C02  1D03               	btfss	3,2
 24084  1C03  2C06               	goto	i1l8431
 24085  1C04  3006               	movlw	6
 24086  1C05  2C07               	goto	L41
 24087  1C06                     i1l8431:	
 24088  1C06  3003               	movlw	3
 24089  1C07                     L41:	
 24090  1C07  00F3               	movwf	i1_do_I2C_TX$1134
 24091  1C08  3000               	movlw	0
 24092  1C09  00F4               	movwf	i1_do_I2C_TX$1134+1
 24093  1C0A  0873               	movf	i1_do_I2C_TX$1134,w
 24094  1C0B  0008               	return
 24095  1C0C                     __end_ofi1_do_I2C_TX:	
 24096                           
 24097                           	psect	text127
 24098  25BB                     __ptext127:	
 24099 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 24100 ;; Defined at:
 24101 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 24102 ;; Parameters:    Size  Location     Type
 24103 ;;		None
 24104 ;; Auto vars:     Size  Location     Type
 24105 ;;		None
 24106 ;; Return value:  Size  Location     Type
 24107 ;;                  1    wreg      enum E8364
 24108 ;; Registers used:
 24109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24110 ;; Tracked objects:
 24111 ;;		On entry : 0/0
 24112 ;;		On exit  : 0/0
 24113 ;;		Unchanged: 0/0
 24114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24119 ;;Total ram usage:        1 bytes
 24120 ;; Hardware stack levels used:    1
 24121 ;; Hardware stack levels required when called:    2
 24122 ;; This function calls:
 24123 ;;		i1_do_I2C_SEND_RESTART
 24124 ;;		i1_do_I2C_SEND_STOP
 24125 ;;		i1_returnReset
 24126 ;;		i1_returnStop
 24127 ;; This function is called by:
 24128 ;; This function uses a non-reentrant model
 24129 ;;
 24130                           
 24131                           
 24132                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 24133  25BB                     i1_do_I2C_DO_ADDRESS_NACK:	
 24134  25BB                     i1l8389:	
 24135                           ;incstack = 0
 24136                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24137                           
 24138                           
 24139                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 24140  25BB  0022               	movlb	2	; select bank2
 24141  25BC  11A0               	bcf	_i2c_status^(0+256),3
 24142                           
 24143                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 24144  25BD  3002               	movlw	2
 24145  25BE  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 24146  25BF  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 24147  25C0  00AB               	movwf	(_i2c_status^(0+256)+11)
 24148                           
 24149                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 24150  25C1  2DC8               	goto	i1l8403
 24151  25C2                     i1l8393:	
 24152                           ;i2c_master.c: 324: {
 24153                           ;i2c_master.c: 325: case i2c_restart_read:
 24154                           
 24155                           
 24156                           ;i2c_master.c: 326: case i2c_restart_write:
 24157                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 24158  25C2  31A1  2159         	fcall	i1_do_I2C_SEND_RESTART
 24159  25C4  0008               	return
 24160  25C5                     i1l8397:	
 24161                           ;i2c_master.c: 328: default:
 24162                           
 24163                           
 24164                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 24165  25C5  31A1  215D         	fcall	i1_do_I2C_SEND_STOP
 24166                           
 24167                           ;i2c_master.c: 330: }
 24168  25C7  0008               	return
 24169  25C8                     i1l8403:	
 24170  25C8  0022               	movlb	2	; select bank2
 24171  25C9  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 24172  25CA  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 24173  25CB  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 24174  25CC  00F0               	movwf	i1returnReset@p
 24175  25CD  3010               	movlw	16
 24176  25CE  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 24177  25CF  0086               	movwf	6
 24178  25D0  3001               	movlw	1	; select bank2/3
 24179  25D1  0087               	movwf	7
 24180  25D2  3F41               	moviw [1]fsr1
 24181  25D3  008A               	movwf	10
 24182  25D4  3F40               	moviw [0]fsr1
 24183  25D5  000A               	callw
 24184  25D6  31A5               	pagesel	$
 24185                           
 24186                           ; Switch size 1, requested type "space"
 24187                           ; Number of cases is 2, Range of values is 2 to 3
 24188                           ; switch strategies available:
 24189                           ; Name         Instructions Cycles
 24190                           ; simple_byte            7     4 (average)
 24191                           ; direct_byte           13     9 (fixed)
 24192                           ; jumptable            263     9 (fixed)
 24193                           ;	Chosen strategy is simple_byte
 24194  25D7  3A02               	xorlw	2	; case 2
 24195  25D8  1903               	skipnz
 24196  25D9  2DC2               	goto	i1l8393
 24197  25DA  3A01               	xorlw	1	; case 3
 24198  25DB  1903               	skipnz
 24199  25DC  2DC2               	goto	i1l8393
 24200  25DD  2DC5               	goto	i1l8397
 24201  25DE  0008               	return
 24202  25DF                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 24203                           
 24204                           	psect	text128
 24205  2169                     __ptext128:	
 24206 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 24207 ;; Defined at:
 24208 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 24209 ;; Parameters:    Size  Location     Type
 24210 ;;		None
 24211 ;; Auto vars:     Size  Location     Type
 24212 ;;		None
 24213 ;; Return value:  Size  Location     Type
 24214 ;;                  1    wreg      enum E8364
 24215 ;; Registers used:
 24216 ;;		wreg, status,2, status,0, pclath, cstack
 24217 ;; Tracked objects:
 24218 ;;		On entry : 0/0
 24219 ;;		On exit  : 0/0
 24220 ;;		Unchanged: 0/0
 24221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24226 ;;Total ram usage:        0 bytes
 24227 ;; Hardware stack levels used:    1
 24228 ;; Hardware stack levels required when called:    1
 24229 ;; This function calls:
 24230 ;;		i1_i2c1_driver_sendNACK
 24231 ;; This function is called by:
 24232 ;;		i1_do_I2C_RX
 24233 ;; This function uses a non-reentrant model
 24234 ;;
 24235                           
 24236                           
 24237                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 24238  2169                     i1_do_I2C_DO_NACK_RESTART:	
 24239  2169                     i1l7995:	
 24240                           ;incstack = 0
 24241                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 24242                           
 24243                           
 24244                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 24245  2169  31A1  214D         	fcall	i1_i2c1_driver_sendNACK
 24246                           
 24247                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 24248  216B  3009               	movlw	9
 24249  216C  0008               	return
 24250  216D                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 24251                           
 24252                           	psect	text129
 24253  2165                     __ptext129:	
 24254 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 24255 ;; Defined at:
 24256 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 24257 ;; Parameters:    Size  Location     Type
 24258 ;;		None
 24259 ;; Auto vars:     Size  Location     Type
 24260 ;;		None
 24261 ;; Return value:  Size  Location     Type
 24262 ;;                  1    wreg      enum E8364
 24263 ;; Registers used:
 24264 ;;		wreg, status,2, status,0, pclath, cstack
 24265 ;; Tracked objects:
 24266 ;;		On entry : 0/0
 24267 ;;		On exit  : 0/0
 24268 ;;		Unchanged: 0/0
 24269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24274 ;;Total ram usage:        0 bytes
 24275 ;; Hardware stack levels used:    1
 24276 ;; Hardware stack levels required when called:    1
 24277 ;; This function calls:
 24278 ;;		i1_i2c1_driver_sendNACK
 24279 ;; This function is called by:
 24280 ;;		i1_do_I2C_RX
 24281 ;; This function uses a non-reentrant model
 24282 ;;
 24283                           
 24284                           
 24285                           ;psect for function i1_do_I2C_DO_NACK_STOP
 24286  2165                     i1_do_I2C_DO_NACK_STOP:	
 24287  2165                     i1l7989:	
 24288                           ;incstack = 0
 24289                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 24290                           
 24291                           
 24292                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 24293  2165  31A1  214D         	fcall	i1_i2c1_driver_sendNACK
 24294                           
 24295                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 24296  2167  300A               	movlw	10
 24297  2168  0008               	return
 24298  2169                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 24299                           
 24300                           	psect	text130
 24301  2161                     __ptext130:	
 24302 ;; *************** function i1_do_I2C_DO_ACK *****************
 24303 ;; Defined at:
 24304 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 24305 ;; Parameters:    Size  Location     Type
 24306 ;;		None
 24307 ;; Auto vars:     Size  Location     Type
 24308 ;;		None
 24309 ;; Return value:  Size  Location     Type
 24310 ;;                  1    wreg      enum E8364
 24311 ;; Registers used:
 24312 ;;		wreg, status,2, status,0, pclath, cstack
 24313 ;; Tracked objects:
 24314 ;;		On entry : 0/0
 24315 ;;		On exit  : 0/0
 24316 ;;		Unchanged: 0/0
 24317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24322 ;;Total ram usage:        0 bytes
 24323 ;; Hardware stack levels used:    1
 24324 ;; Hardware stack levels required when called:    1
 24325 ;; This function calls:
 24326 ;;		i1_i2c1_driver_sendACK
 24327 ;; This function is called by:
 24328 ;; This function uses a non-reentrant model
 24329 ;;
 24330                           
 24331                           
 24332                           ;psect for function i1_do_I2C_DO_ACK
 24333  2161                     i1_do_I2C_DO_ACK:	
 24334  2161                     i1l8383:	
 24335                           ;incstack = 0
 24336                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 24337                           
 24338                           
 24339                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 24340  2161  31A1  2149         	fcall	i1_i2c1_driver_sendACK
 24341                           
 24342                           ;i2c_master.c: 302: return I2C_RCEN;
 24343  2163  3005               	movlw	5
 24344  2164  0008               	return
 24345  2165                     __end_ofi1_do_I2C_DO_ACK:	
 24346                           
 24347                           	psect	text131
 24348  219B                     __ptext131:	
 24349 ;; *************** function i1_do_I2C_RCEN *****************
 24350 ;; Defined at:
 24351 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 24352 ;; Parameters:    Size  Location     Type
 24353 ;;		None
 24354 ;; Auto vars:     Size  Location     Type
 24355 ;;		None
 24356 ;; Return value:  Size  Location     Type
 24357 ;;                  1    wreg      enum E8364
 24358 ;; Registers used:
 24359 ;;		wreg, status,2, status,0, pclath, cstack
 24360 ;; Tracked objects:
 24361 ;;		On entry : 0/0
 24362 ;;		On exit  : 0/0
 24363 ;;		Unchanged: 0/0
 24364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24369 ;;Total ram usage:        0 bytes
 24370 ;; Hardware stack levels used:    1
 24371 ;; Hardware stack levels required when called:    1
 24372 ;; This function calls:
 24373 ;;		i1_i2c1_driver_startRX
 24374 ;; This function is called by:
 24375 ;; This function uses a non-reentrant model
 24376 ;;
 24377                           
 24378                           
 24379                           ;psect for function i1_do_I2C_RCEN
 24380  219B                     i1_do_I2C_RCEN:	
 24381  219B                     i1l6447:	
 24382                           ;incstack = 0
 24383                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 24384                           
 24385                           
 24386                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 24387  219B  0022               	movlb	2	; select bank2
 24388  219C  11A0               	bcf	_i2c_status^(0+256),3
 24389                           
 24390                           ;i2c_master.c: 295: i2c1_driver_startRX();
 24391  219D  31A1  2122         	fcall	i1_i2c1_driver_startRX
 24392                           
 24393                           ;i2c_master.c: 296: return I2C_RX;
 24394  219F  3004               	movlw	4
 24395  21A0  0008               	return
 24396  21A1                     __end_ofi1_do_I2C_RCEN:	
 24397                           
 24398                           	psect	text132
 24399  21C0                     __ptext132:	
 24400 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 24401 ;; Defined at:
 24402 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 24403 ;; Parameters:    Size  Location     Type
 24404 ;;		None
 24405 ;; Auto vars:     Size  Location     Type
 24406 ;;		None
 24407 ;; Return value:  Size  Location     Type
 24408 ;;                  1    wreg      enum E8364
 24409 ;; Registers used:
 24410 ;;		wreg, status,2, status,0, pclath, cstack
 24411 ;; Tracked objects:
 24412 ;;		On entry : 0/0
 24413 ;;		On exit  : 0/0
 24414 ;;		Unchanged: 0/0
 24415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24420 ;;Total ram usage:        0 bytes
 24421 ;; Hardware stack levels used:    1
 24422 ;; Hardware stack levels required when called:    1
 24423 ;; This function calls:
 24424 ;;		i1_i2c1_driver_TXData
 24425 ;; This function is called by:
 24426 ;; This function uses a non-reentrant model
 24427 ;;
 24428                           
 24429                           
 24430                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 24431  21C0                     i1_do_I2C_SEND_ADR_WRITE:	
 24432  21C0                     i1l8375:	
 24433                           ;incstack = 0
 24434                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 24435                           
 24436                           
 24437                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 24438  21C0  0022               	movlb	2	; select bank2
 24439  21C1  15A0               	bsf	_i2c_status^(0+256),3
 24440                           
 24441                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 24442  21C2  3521               	lslf	(_i2c_status^(0+256)+1),w
 24443  21C3  31A1  2187         	fcall	i1_i2c1_driver_TXData
 24444                           
 24445                           ;i2c_master.c: 289: return I2C_TX;
 24446  21C5  3003               	movlw	3
 24447  21C6  0008               	return
 24448  21C7                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 24449                           
 24450                           	psect	text133
 24451  21C7                     __ptext133:	
 24452 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 24453 ;; Defined at:
 24454 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 24455 ;; Parameters:    Size  Location     Type
 24456 ;;		None
 24457 ;; Auto vars:     Size  Location     Type
 24458 ;;		None
 24459 ;; Return value:  Size  Location     Type
 24460 ;;                  1    wreg      enum E8364
 24461 ;; Registers used:
 24462 ;;		wreg, status,2, status,0, pclath, cstack
 24463 ;; Tracked objects:
 24464 ;;		On entry : 0/0
 24465 ;;		On exit  : 0/0
 24466 ;;		Unchanged: 0/0
 24467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24472 ;;Total ram usage:        0 bytes
 24473 ;; Hardware stack levels used:    1
 24474 ;; Hardware stack levels required when called:    1
 24475 ;; This function calls:
 24476 ;;		i1_i2c1_driver_TXData
 24477 ;; This function is called by:
 24478 ;; This function uses a non-reentrant model
 24479 ;;
 24480                           
 24481                           
 24482                           ;psect for function i1_do_I2C_SEND_ADR_READ
 24483  21C7                     i1_do_I2C_SEND_ADR_READ:	
 24484  21C7                     i1l8367:	
 24485                           ;incstack = 0
 24486                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 24487                           
 24488                           
 24489                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 24490  21C7  0022               	movlb	2	; select bank2
 24491  21C8  15A0               	bsf	_i2c_status^(0+256),3
 24492                           
 24493                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 24494  21C9  1403               	setc
 24495  21CA  0D21               	rlf	(_i2c_status^(0+256)+1),w
 24496  21CB  31A1  2187         	fcall	i1_i2c1_driver_TXData
 24497                           
 24498                           ;i2c_master.c: 282: return I2C_RCEN;
 24499  21CD  3005               	movlw	5
 24500  21CE  0008               	return
 24501  21CF                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 24502                           
 24503                           	psect	text134
 24504  215D                     __ptext134:	
 24505 ;; *************** function i1_do_I2C_SEND_STOP *****************
 24506 ;; Defined at:
 24507 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 24508 ;; Parameters:    Size  Location     Type
 24509 ;;		None
 24510 ;; Auto vars:     Size  Location     Type
 24511 ;;		None
 24512 ;; Return value:  Size  Location     Type
 24513 ;;                  1    wreg      enum E8364
 24514 ;; Registers used:
 24515 ;;		wreg, status,2, status,0, pclath, cstack
 24516 ;; Tracked objects:
 24517 ;;		On entry : 0/0
 24518 ;;		On exit  : 0/0
 24519 ;;		Unchanged: 0/0
 24520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24525 ;;Total ram usage:        0 bytes
 24526 ;; Hardware stack levels used:    1
 24527 ;; Hardware stack levels required when called:    1
 24528 ;; This function calls:
 24529 ;;		i1_i2c1_driver_stop
 24530 ;; This function is called by:
 24531 ;;		i1_do_I2C_DO_ADDRESS_NACK
 24532 ;;		i1_do_I2C_TX
 24533 ;;		i1_do_I2C_TX_EMPTY
 24534 ;; This function uses a non-reentrant model
 24535 ;;
 24536                           
 24537                           
 24538                           ;psect for function i1_do_I2C_SEND_STOP
 24539  215D                     i1_do_I2C_SEND_STOP:	
 24540  215D                     i1l7983:	
 24541                           ;incstack = 0
 24542                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 24543                           
 24544                           
 24545                           ;i2c_master.c: 274: i2c1_driver_stop();
 24546  215D  31A1  211F         	fcall	i1_i2c1_driver_stop
 24547                           
 24548                           ;i2c_master.c: 275: return I2C_IDLE;
 24549  215F  3000               	movlw	0
 24550  2160  0008               	return
 24551  2161                     __end_ofi1_do_I2C_SEND_STOP:	
 24552                           
 24553                           	psect	text135
 24554  2159                     __ptext135:	
 24555 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 24556 ;; Defined at:
 24557 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 24558 ;; Parameters:    Size  Location     Type
 24559 ;;		None
 24560 ;; Auto vars:     Size  Location     Type
 24561 ;;		None
 24562 ;; Return value:  Size  Location     Type
 24563 ;;                  1    wreg      enum E8364
 24564 ;; Registers used:
 24565 ;;		wreg, status,2, status,0, pclath, cstack
 24566 ;; Tracked objects:
 24567 ;;		On entry : 0/0
 24568 ;;		On exit  : 0/0
 24569 ;;		Unchanged: 0/0
 24570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24575 ;;Total ram usage:        0 bytes
 24576 ;; Hardware stack levels used:    1
 24577 ;; Hardware stack levels required when called:    1
 24578 ;; This function calls:
 24579 ;;		i1_i2c1_driver_restart
 24580 ;; This function is called by:
 24581 ;;		i1_do_I2C_DO_ADDRESS_NACK
 24582 ;;		i1_do_I2C_TX_EMPTY
 24583 ;; This function uses a non-reentrant model
 24584 ;;
 24585                           
 24586                           
 24587                           ;psect for function i1_do_I2C_SEND_RESTART
 24588  2159                     i1_do_I2C_SEND_RESTART:	
 24589  2159                     i1l7977:	
 24590                           ;incstack = 0
 24591                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 24592                           
 24593                           
 24594                           ;i2c_master.c: 268: i2c1_driver_restart();
 24595  2159  31A1  211C         	fcall	i1_i2c1_driver_restart
 24596                           
 24597                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 24598  215B  3001               	movlw	1
 24599  215C  0008               	return
 24600  215D                     __end_ofi1_do_I2C_SEND_RESTART:	
 24601                           
 24602                           	psect	text136
 24603  2155                     __ptext136:	
 24604 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 24605 ;; Defined at:
 24606 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 24607 ;; Parameters:    Size  Location     Type
 24608 ;;		None
 24609 ;; Auto vars:     Size  Location     Type
 24610 ;;		None
 24611 ;; Return value:  Size  Location     Type
 24612 ;;                  1    wreg      enum E8364
 24613 ;; Registers used:
 24614 ;;		wreg, status,2, status,0, pclath, cstack
 24615 ;; Tracked objects:
 24616 ;;		On entry : 0/0
 24617 ;;		On exit  : 0/0
 24618 ;;		Unchanged: 0/0
 24619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24624 ;;Total ram usage:        0 bytes
 24625 ;; Hardware stack levels used:    1
 24626 ;; Hardware stack levels required when called:    1
 24627 ;; This function calls:
 24628 ;;		i1_i2c1_driver_restart
 24629 ;; This function is called by:
 24630 ;;		i1_do_I2C_TX
 24631 ;; This function uses a non-reentrant model
 24632 ;;
 24633                           
 24634                           
 24635                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 24636  2155                     i1_do_I2C_SEND_RESTART_WRITE:	
 24637  2155                     i1l7971:	
 24638                           ;incstack = 0
 24639                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 24640                           
 24641                           
 24642                           ;i2c_master.c: 262: i2c1_driver_restart();
 24643  2155  31A1  211C         	fcall	i1_i2c1_driver_restart
 24644                           
 24645                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 24646  2157  3002               	movlw	2
 24647  2158  0008               	return
 24648  2159                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 24649                           
 24650                           	psect	text137
 24651  2151                     __ptext137:	
 24652 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 24653 ;; Defined at:
 24654 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 24655 ;; Parameters:    Size  Location     Type
 24656 ;;		None
 24657 ;; Auto vars:     Size  Location     Type
 24658 ;;		None
 24659 ;; Return value:  Size  Location     Type
 24660 ;;                  1    wreg      enum E8364
 24661 ;; Registers used:
 24662 ;;		wreg, status,2, status,0, pclath, cstack
 24663 ;; Tracked objects:
 24664 ;;		On entry : 0/0
 24665 ;;		On exit  : 0/0
 24666 ;;		Unchanged: 0/0
 24667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24672 ;;Total ram usage:        0 bytes
 24673 ;; Hardware stack levels used:    1
 24674 ;; Hardware stack levels required when called:    1
 24675 ;; This function calls:
 24676 ;;		i1_i2c1_driver_restart
 24677 ;; This function is called by:
 24678 ;;		i1_do_I2C_TX
 24679 ;; This function uses a non-reentrant model
 24680 ;;
 24681                           
 24682                           
 24683                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 24684  2151                     i1_do_I2C_SEND_RESTART_READ:	
 24685  2151                     i1l7965:	
 24686                           ;incstack = 0
 24687                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 24688                           
 24689                           
 24690                           ;i2c_master.c: 256: i2c1_driver_restart();
 24691  2151  31A1  211C         	fcall	i1_i2c1_driver_restart
 24692                           
 24693                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 24694  2153  3001               	movlw	1
 24695  2154  0008               	return
 24696  2155                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 24697                           
 24698                           	psect	text138
 24699  218C                     __ptext138:	
 24700 ;; *************** function i1_do_I2C_IDLE *****************
 24701 ;; Defined at:
 24702 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 24703 ;; Parameters:    Size  Location     Type
 24704 ;;		None
 24705 ;; Auto vars:     Size  Location     Type
 24706 ;;		None
 24707 ;; Return value:  Size  Location     Type
 24708 ;;                  1    wreg      enum E8364
 24709 ;; Registers used:
 24710 ;;		wreg, status,2
 24711 ;; Tracked objects:
 24712 ;;		On entry : 0/0
 24713 ;;		On exit  : 0/0
 24714 ;;		Unchanged: 0/0
 24715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24720 ;;Total ram usage:        0 bytes
 24721 ;; Hardware stack levels used:    1
 24722 ;; This function calls:
 24723 ;;		Nothing
 24724 ;; This function is called by:
 24725 ;; This function uses a non-reentrant model
 24726 ;;
 24727                           
 24728                           
 24729                           ;psect for function i1_do_I2C_IDLE
 24730  218C                     i1_do_I2C_IDLE:	
 24731  218C                     i1l6423:	
 24732                           ;incstack = 0
 24733                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 24734                           
 24735                           
 24736                           ;i2c_master.c: 249: i2c_status.busy = 0;
 24737  218C  0022               	movlb	2	; select bank2
 24738  218D  1020               	bcf	_i2c_status^(0+256),0
 24739                           
 24740                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 24741  218E  01AB               	clrf	(_i2c_status^(0+256)+11)
 24742                           
 24743                           ;i2c_master.c: 251: return I2C_RESET;
 24744  218F  300E               	movlw	14
 24745  2190  0008               	return
 24746  2191                     __end_ofi1_do_I2C_IDLE:	
 24747                           
 24748                           	psect	text139
 24749  21B9                     __ptext139:	
 24750 ;; *************** function i1_do_I2C_RESET *****************
 24751 ;; Defined at:
 24752 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 24753 ;; Parameters:    Size  Location     Type
 24754 ;;		None
 24755 ;; Auto vars:     Size  Location     Type
 24756 ;;		None
 24757 ;; Return value:  Size  Location     Type
 24758 ;;                  1    wreg      enum E8364
 24759 ;; Registers used:
 24760 ;;		wreg, status,2, status,0, pclath, cstack
 24761 ;; Tracked objects:
 24762 ;;		On entry : 0/0
 24763 ;;		On exit  : 0/0
 24764 ;;		Unchanged: 0/0
 24765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24770 ;;Total ram usage:        0 bytes
 24771 ;; Hardware stack levels used:    1
 24772 ;; Hardware stack levels required when called:    1
 24773 ;; This function calls:
 24774 ;;		i1_i2c1_driver_resetBus
 24775 ;; This function is called by:
 24776 ;; This function uses a non-reentrant model
 24777 ;;
 24778                           
 24779                           
 24780                           ;psect for function i1_do_I2C_RESET
 24781  21B9                     i1_do_I2C_RESET:	
 24782  21B9                     i1l6413:	
 24783                           ;incstack = 0
 24784                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 24785                           
 24786                           
 24787                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 24788  21B9  31A1  210E         	fcall	i1_i2c1_driver_resetBus
 24789                           
 24790                           ;i2c_master.c: 242: i2c_status.busy = 0;
 24791  21BB  0022               	movlb	2	; select bank2
 24792  21BC  1020               	bcf	_i2c_status^(0+256),0
 24793                           
 24794                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 24795  21BD  01AB               	clrf	(_i2c_status^(0+256)+11)
 24796                           
 24797                           ;i2c_master.c: 244: return I2C_RESET;
 24798  21BE  300E               	movlw	14
 24799  21BF  0008               	return
 24800  21C0                     __end_ofi1_do_I2C_RESET:	
 24801                           
 24802                           	psect	text140
 24803  26EC                     __ptext140:	
 24804 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 24805 ;; Defined at:
 24806 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 24807 ;; Parameters:    Size  Location     Type
 24808 ;;		None
 24809 ;; Auto vars:     Size  Location     Type
 24810 ;;		None
 24811 ;; Return value:  Size  Location     Type
 24812 ;;                  1    wreg      enum E8364
 24813 ;; Registers used:
 24814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24815 ;; Tracked objects:
 24816 ;;		On entry : 0/0
 24817 ;;		On exit  : 0/0
 24818 ;;		Unchanged: 0/0
 24819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24822 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24824 ;;Total ram usage:        1 bytes
 24825 ;; Hardware stack levels used:    1
 24826 ;; Hardware stack levels required when called:    2
 24827 ;; This function calls:
 24828 ;;		i1_do_I2C_SEND_RESTART
 24829 ;;		i1_do_I2C_SEND_STOP
 24830 ;;		i1_mssp1_setIRQ
 24831 ;;		i1_returnReset
 24832 ;;		i1_returnStop
 24833 ;; This function is called by:
 24834 ;; This function uses a non-reentrant model
 24835 ;;
 24836                           
 24837                           
 24838                           ;psect for function i1_do_I2C_TX_EMPTY
 24839  26EC                     i1_do_I2C_TX_EMPTY:	
 24840  26EC                     i1l8461:	
 24841                           ;incstack = 0
 24842                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24843                           
 24844                           
 24845                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 24846  26EC  0022               	movlb	2	; select bank2
 24847  26ED  1520               	bsf	_i2c_status^(0+256),2
 24848                           
 24849                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 24850  26EE  2EF9               	goto	i1l8479
 24851  26EF                     i1l8463:	
 24852                           ;i2c_master.c: 386: {
 24853                           ;i2c_master.c: 387: case i2c_restart_read:
 24854                           
 24855                           
 24856                           ;i2c_master.c: 388: case i2c_restart_write:
 24857                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 24858  26EF  31A1  2159         	fcall	i1_do_I2C_SEND_RESTART
 24859  26F1  0008               	return
 24860  26F2                     i1l8467:	
 24861                           ;i2c_master.c: 390: case i2c_continue:
 24862                           
 24863                           
 24864                           ;i2c_master.c: 391: mssp1_setIRQ();
 24865  26F2  31A1  2128         	fcall	i1_mssp1_setIRQ
 24866                           
 24867                           ;i2c_master.c: 392: return I2C_TX;
 24868  26F4  3003               	movlw	3
 24869  26F5  0008               	return
 24870  26F6                     i1l8473:	
 24871                           ;i2c_master.c: 394: case i2c_stop:
 24872                           
 24873                           ;i2c_master.c: 393: default:
 24874                           
 24875                           
 24876                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 24877  26F6  31A1  215D         	fcall	i1_do_I2C_SEND_STOP
 24878                           
 24879                           ;i2c_master.c: 396: }
 24880  26F8  0008               	return
 24881  26F9                     i1l8479:	
 24882  26F9  0022               	movlb	2	; select bank2
 24883  26FA  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 24884  26FB  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 24885  26FC  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 24886  26FD  00F0               	movwf	i1returnReset@p
 24887  26FE  300C               	movlw	12
 24888  26FF  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 24889  2700  0086               	movwf	6
 24890  2701  3001               	movlw	1	; select bank2/3
 24891  2702  0087               	movwf	7
 24892  2703  3F41               	moviw [1]fsr1
 24893  2704  008A               	movwf	10
 24894  2705  3F40               	moviw [0]fsr1
 24895  2706  000A               	callw
 24896  2707  31A6               	pagesel	$
 24897                           
 24898                           ; Switch size 1, requested type "space"
 24899                           ; Number of cases is 4, Range of values is 1 to 4
 24900                           ; switch strategies available:
 24901                           ; Name         Instructions Cycles
 24902                           ; simple_byte           13     7 (average)
 24903                           ; direct_byte           17     9 (fixed)
 24904                           ; jumptable            263     9 (fixed)
 24905                           ;	Chosen strategy is simple_byte
 24906  2708  3A01               	xorlw	1	; case 1
 24907  2709  1903               	skipnz
 24908  270A  2EF6               	goto	i1l8473
 24909  270B  3A03               	xorlw	3	; case 2
 24910  270C  1903               	skipnz
 24911  270D  2EEF               	goto	i1l8463
 24912  270E  3A01               	xorlw	1	; case 3
 24913  270F  1903               	skipnz
 24914  2710  2EEF               	goto	i1l8463
 24915  2711  3A07               	xorlw	7	; case 4
 24916  2712  1903               	skipnz
 24917  2713  2EF2               	goto	i1l8467
 24918  2714  2EF6               	goto	i1l8473
 24919  2715  0008               	return
 24920  2716                     __end_ofi1_do_I2C_TX_EMPTY:	
 24921                           
 24922                           	psect	text141
 24923  2128                     __ptext141:	
 24924 ;; *************** function i1_mssp1_setIRQ *****************
 24925 ;; Defined at:
 24926 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 24927 ;; Parameters:    Size  Location     Type
 24928 ;;		None
 24929 ;; Auto vars:     Size  Location     Type
 24930 ;;		None
 24931 ;; Return value:  Size  Location     Type
 24932 ;;                  1    wreg      void 
 24933 ;; Registers used:
 24934 ;;		None
 24935 ;; Tracked objects:
 24936 ;;		On entry : 0/0
 24937 ;;		On exit  : 0/0
 24938 ;;		Unchanged: 0/0
 24939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24944 ;;Total ram usage:        0 bytes
 24945 ;; Hardware stack levels used:    1
 24946 ;; This function calls:
 24947 ;;		Nothing
 24948 ;; This function is called by:
 24949 ;;		i1_do_I2C_TX_EMPTY
 24950 ;; This function uses a non-reentrant model
 24951 ;;
 24952                           
 24953                           
 24954                           ;psect for function i1_mssp1_setIRQ
 24955  2128                     i1_mssp1_setIRQ:	
 24956                           
 24957                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 24958                           
 24959                           ;incstack = 0
 24960                           ; Regs used in i1_mssp1_setIRQ: []
 24961  2128  0020               	movlb	0	; select bank0
 24962  2129  1591               	bsf	17,3	;volatile
 24963  212A  0008               	return
 24964  212B                     __end_ofi1_mssp1_setIRQ:	
 24965                           
 24966                           	psect	text142
 24967  22A9                     __ptext142:	
 24968 ;; *************** function i1_i2c1_driver_isNACK *****************
 24969 ;; Defined at:
 24970 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 24971 ;; Parameters:    Size  Location     Type
 24972 ;;		None
 24973 ;; Auto vars:     Size  Location     Type
 24974 ;;		None
 24975 ;; Return value:  Size  Location     Type
 24976 ;;		None               void
 24977 ;; Registers used:
 24978 ;;		wreg, status,2, status,0
 24979 ;; Tracked objects:
 24980 ;;		On entry : 0/0
 24981 ;;		On exit  : 0/0
 24982 ;;		Unchanged: 0/0
 24983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24986 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24987 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24988 ;;Total ram usage:        1 bytes
 24989 ;; Hardware stack levels used:    1
 24990 ;; This function calls:
 24991 ;;		Nothing
 24992 ;; This function is called by:
 24993 ;;		i1_do_I2C_TX
 24994 ;;		i1_i2c_ISR
 24995 ;; This function uses a non-reentrant model
 24996 ;;
 24997                           
 24998                           
 24999                           ;psect for function i1_i2c1_driver_isNACK
 25000  22A9                     i1_i2c1_driver_isNACK:	
 25001                           
 25002                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 25003                           
 25004                           ;incstack = 0
 25005                           ; Regs used in i1_i2c1_driver_isNACK: [wreg+status,2+status,0]
 25006  22A9  0024               	movlb	4	; select bank4
 25007  22AA  0816               	movf	22,w	;volatile
 25008  22AB  39BF               	andlw	-65
 25009  22AC  3840               	iorlw	64
 25010  22AD  0096               	movwf	22	;volatile
 25011  22AE  0E16               	swapf	22,w	;volatile
 25012  22AF  0C89               	rrf	9,f
 25013  22B0  0C89               	rrf	9,f
 25014  22B1  3901               	andlw	1
 25015  22B2  00F0               	movwf	??i1_i2c1_driver_isNACK
 25016  22B3  0C70               	rrf	??i1_i2c1_driver_isNACK,w
 25017  22B4  0008               	return
 25018  22B5                     __end_ofi1_i2c1_driver_isNACK:	
 25019                           
 25020                           	psect	text143
 25021  2187                     __ptext143:	
 25022 ;; *************** function i1_i2c1_driver_TXData *****************
 25023 ;; Defined at:
 25024 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 25025 ;; Parameters:    Size  Location     Type
 25026 ;;  d               1    wreg     unsigned char 
 25027 ;; Auto vars:     Size  Location     Type
 25028 ;;  d               1    0[COMMON] unsigned char 
 25029 ;; Return value:  Size  Location     Type
 25030 ;;                  1    wreg      void 
 25031 ;; Registers used:
 25032 ;;		wreg
 25033 ;; Tracked objects:
 25034 ;;		On entry : 0/0
 25035 ;;		On exit  : 0/0
 25036 ;;		Unchanged: 0/0
 25037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25042 ;;Total ram usage:        1 bytes
 25043 ;; Hardware stack levels used:    1
 25044 ;; This function calls:
 25045 ;;		Nothing
 25046 ;; This function is called by:
 25047 ;;		i1_do_I2C_SEND_ADR_READ
 25048 ;;		i1_do_I2C_SEND_ADR_WRITE
 25049 ;;		i1_do_I2C_TX
 25050 ;; This function uses a non-reentrant model
 25051 ;;
 25052                           
 25053                           
 25054                           ;psect for function i1_i2c1_driver_TXData
 25055  2187                     i1_i2c1_driver_TXData:	
 25056                           
 25057                           ;incstack = 0
 25058                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 25059                           ;i1i2c1_driver_TXData@d stored from wreg
 25060  2187  00F0               	movwf	i1i2c1_driver_TXData@d
 25061                           
 25062                           ;i2c1_driver.c: 188: SSP1BUF = d;
 25063  2188  0870               	movf	i1i2c1_driver_TXData@d,w
 25064  2189  0024               	movlb	4	; select bank4
 25065  218A  0091               	movwf	17	;volatile
 25066  218B  0008               	return
 25067  218C                     __end_ofi1_i2c1_driver_TXData:	
 25068                           
 25069                           	psect	text144
 25070  2125                     __ptext144:	
 25071 ;; *************** function i1_i2c1_driver_getRXData *****************
 25072 ;; Defined at:
 25073 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 25074 ;; Parameters:    Size  Location     Type
 25075 ;;		None
 25076 ;; Auto vars:     Size  Location     Type
 25077 ;;		None
 25078 ;; Return value:  Size  Location     Type
 25079 ;;                  1    wreg      unsigned char 
 25080 ;; Registers used:
 25081 ;;		wreg
 25082 ;; Tracked objects:
 25083 ;;		On entry : 0/0
 25084 ;;		On exit  : 0/0
 25085 ;;		Unchanged: 0/0
 25086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25091 ;;Total ram usage:        0 bytes
 25092 ;; Hardware stack levels used:    1
 25093 ;; This function calls:
 25094 ;;		Nothing
 25095 ;; This function is called by:
 25096 ;;		i1_do_I2C_RX
 25097 ;; This function uses a non-reentrant model
 25098 ;;
 25099                           
 25100                           
 25101                           ;psect for function i1_i2c1_driver_getRXData
 25102  2125                     i1_i2c1_driver_getRXData:	
 25103                           
 25104                           ;i2c1_driver.c: 173: return SSP1BUF;
 25105                           
 25106                           ;incstack = 0
 25107                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 25108  2125  0024               	movlb	4	; select bank4
 25109  2126  0811               	movf	17,w	;volatile
 25110  2127  0008               	return
 25111  2128                     __end_ofi1_i2c1_driver_getRXData:	
 25112                           
 25113                           	psect	text145
 25114  214D                     __ptext145:	
 25115 ;; *************** function i1_i2c1_driver_sendNACK *****************
 25116 ;; Defined at:
 25117 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 25118 ;; Parameters:    Size  Location     Type
 25119 ;;		None
 25120 ;; Auto vars:     Size  Location     Type
 25121 ;;		None
 25122 ;; Return value:  Size  Location     Type
 25123 ;;                  1    wreg      void 
 25124 ;; Registers used:
 25125 ;;		None
 25126 ;; Tracked objects:
 25127 ;;		On entry : 0/0
 25128 ;;		On exit  : 0/0
 25129 ;;		Unchanged: 0/0
 25130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25135 ;;Total ram usage:        0 bytes
 25136 ;; Hardware stack levels used:    1
 25137 ;; This function calls:
 25138 ;;		Nothing
 25139 ;; This function is called by:
 25140 ;;		i1_do_I2C_DO_NACK_STOP
 25141 ;;		i1_do_I2C_DO_NACK_RESTART
 25142 ;; This function uses a non-reentrant model
 25143 ;;
 25144                           
 25145                           
 25146                           ;psect for function i1_i2c1_driver_sendNACK
 25147  214D                     i1_i2c1_driver_sendNACK:	
 25148                           
 25149                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 25150                           
 25151                           ;incstack = 0
 25152                           ; Regs used in i1_i2c1_driver_sendNACK: []
 25153  214D  0024               	movlb	4	; select bank4
 25154  214E  1696               	bsf	22,5	;volatile
 25155                           
 25156                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 25157  214F  1616               	bsf	22,4	;volatile
 25158  2150  0008               	return
 25159  2151                     __end_ofi1_i2c1_driver_sendNACK:	
 25160                           
 25161                           	psect	text146
 25162  210E                     __ptext146:	
 25163 ;; *************** function i1_i2c1_driver_resetBus *****************
 25164 ;; Defined at:
 25165 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 25166 ;; Parameters:    Size  Location     Type
 25167 ;;		None
 25168 ;; Auto vars:     Size  Location     Type
 25169 ;;		None
 25170 ;; Return value:  Size  Location     Type
 25171 ;;                  1    wreg      void 
 25172 ;; Registers used:
 25173 ;;		None
 25174 ;; Tracked objects:
 25175 ;;		On entry : 0/0
 25176 ;;		On exit  : 0/0
 25177 ;;		Unchanged: 0/0
 25178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25183 ;;Total ram usage:        0 bytes
 25184 ;; Hardware stack levels used:    1
 25185 ;; This function calls:
 25186 ;;		Nothing
 25187 ;; This function is called by:
 25188 ;;		i1_do_I2C_RESET
 25189 ;; This function uses a non-reentrant model
 25190 ;;
 25191                           
 25192                           
 25193                           ;psect for function i1_i2c1_driver_resetBus
 25194  210E                     i1_i2c1_driver_resetBus:	
 25195                           
 25196                           ;incstack = 0
 25197                           ; Regs used in i1_i2c1_driver_resetBus: []
 25198  210E  0008               	return
 25199  210F                     __end_ofi1_i2c1_driver_resetBus:	
 25200                           
 25201                           	psect	text147
 25202  2122                     __ptext147:	
 25203 ;; *************** function i1_i2c1_driver_startRX *****************
 25204 ;; Defined at:
 25205 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 25206 ;; Parameters:    Size  Location     Type
 25207 ;;		None
 25208 ;; Auto vars:     Size  Location     Type
 25209 ;;		None
 25210 ;; Return value:  Size  Location     Type
 25211 ;;                  1    wreg      void 
 25212 ;; Registers used:
 25213 ;;		None
 25214 ;; Tracked objects:
 25215 ;;		On entry : 0/0
 25216 ;;		On exit  : 0/0
 25217 ;;		Unchanged: 0/0
 25218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25223 ;;Total ram usage:        0 bytes
 25224 ;; Hardware stack levels used:    1
 25225 ;; This function calls:
 25226 ;;		Nothing
 25227 ;; This function is called by:
 25228 ;;		i1_do_I2C_RCEN
 25229 ;; This function uses a non-reentrant model
 25230 ;;
 25231                           
 25232                           
 25233                           ;psect for function i1_i2c1_driver_startRX
 25234  2122                     i1_i2c1_driver_startRX:	
 25235                           
 25236                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 25237                           
 25238                           ;incstack = 0
 25239                           ; Regs used in i1_i2c1_driver_startRX: []
 25240  2122  0024               	movlb	4	; select bank4
 25241  2123  1596               	bsf	22,3	;volatile
 25242  2124  0008               	return
 25243  2125                     __end_ofi1_i2c1_driver_startRX:	
 25244                           
 25245                           	psect	text148
 25246  0002                     __ptext148:	
 25247 ;; *************** function i1_returnReset *****************
 25248 ;; Defined at:
 25249 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 25250 ;; Parameters:    Size  Location     Type
 25251 ;;  p               1    0[COMMON] PTR void 
 25252 ;;		 -> NULL(0), 
 25253 ;; Auto vars:     Size  Location     Type
 25254 ;;		None
 25255 ;; Return value:  Size  Location     Type
 25256 ;;                  1    wreg      enum E8198
 25257 ;; Registers used:
 25258 ;;		wreg
 25259 ;; Tracked objects:
 25260 ;;		On entry : 0/0
 25261 ;;		On exit  : 0/0
 25262 ;;		Unchanged: 0/0
 25263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25264 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25267 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25268 ;;Total ram usage:        1 bytes
 25269 ;; Hardware stack levels used:    1
 25270 ;; This function calls:
 25271 ;;		Nothing
 25272 ;; This function is called by:
 25273 ;; This function uses a non-reentrant model
 25274 ;;
 25275                           
 25276                           
 25277                           ;psect for function i1_returnReset
 25278  0002                     i1_returnReset:	
 25279  0002                     i1l8005:	
 25280                           ;incstack = 0
 25281                           ; Regs used in i1_returnReset: [wreg]
 25282                           
 25283                           
 25284                           ;i2c_master.c: 450: return i2c_reset_link;
 25285  0002  3005               	movlw	5
 25286  0003  0008               	return
 25287  0004                     __end_ofi1_returnReset:	
 25288                           
 25289                           	psect	text149
 25290  0800                     __ptext149:	
 25291 ;; *************** function i1_returnStop *****************
 25292 ;; Defined at:
 25293 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 25294 ;; Parameters:    Size  Location     Type
 25295 ;;  p               1    0[COMMON] PTR void 
 25296 ;;		 -> NULL(0), 
 25297 ;; Auto vars:     Size  Location     Type
 25298 ;;		None
 25299 ;; Return value:  Size  Location     Type
 25300 ;;                  1    wreg      enum E8198
 25301 ;; Registers used:
 25302 ;;		wreg
 25303 ;; Tracked objects:
 25304 ;;		On entry : 0/0
 25305 ;;		On exit  : 0/0
 25306 ;;		Unchanged: 0/0
 25307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25308 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25311 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25312 ;;Total ram usage:        1 bytes
 25313 ;; Hardware stack levels used:    1
 25314 ;; This function calls:
 25315 ;;		Nothing
 25316 ;; This function is called by:
 25317 ;; This function uses a non-reentrant model
 25318 ;;
 25319                           
 25320                           
 25321                           ;psect for function i1_returnStop
 25322  0800                     i1_returnStop:	
 25323  0800                     i1l8001:	
 25324                           ;incstack = 0
 25325                           ; Regs used in i1_returnStop: [wreg]
 25326                           
 25327                           
 25328                           ;i2c_master.c: 445: return i2c_stop;
 25329  0800  3001               	movlw	1
 25330  0801  0008               	return
 25331  0802                     __end_ofi1_returnStop:	
 25332                           
 25333                           	psect	text150
 25334  211F                     __ptext150:	
 25335 ;; *************** function i1_i2c1_driver_stop *****************
 25336 ;; Defined at:
 25337 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 25338 ;; Parameters:    Size  Location     Type
 25339 ;;		None
 25340 ;; Auto vars:     Size  Location     Type
 25341 ;;		None
 25342 ;; Return value:  Size  Location     Type
 25343 ;;                  1    wreg      void 
 25344 ;; Registers used:
 25345 ;;		None
 25346 ;; Tracked objects:
 25347 ;;		On entry : 0/0
 25348 ;;		On exit  : 0/0
 25349 ;;		Unchanged: 0/0
 25350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25355 ;;Total ram usage:        0 bytes
 25356 ;; Hardware stack levels used:    1
 25357 ;; This function calls:
 25358 ;;		Nothing
 25359 ;; This function is called by:
 25360 ;;		i1_do_I2C_SEND_STOP
 25361 ;; This function uses a non-reentrant model
 25362 ;;
 25363                           
 25364                           
 25365                           ;psect for function i1_i2c1_driver_stop
 25366  211F                     i1_i2c1_driver_stop:	
 25367                           
 25368                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 25369                           
 25370                           ;incstack = 0
 25371                           ; Regs used in i1_i2c1_driver_stop: []
 25372  211F  0024               	movlb	4	; select bank4
 25373  2120  1516               	bsf	22,2	;volatile
 25374  2121  0008               	return
 25375  2122                     __end_ofi1_i2c1_driver_stop:	
 25376                           
 25377                           	psect	text151
 25378  211C                     __ptext151:	
 25379 ;; *************** function i1_i2c1_driver_restart *****************
 25380 ;; Defined at:
 25381 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 25382 ;; Parameters:    Size  Location     Type
 25383 ;;		None
 25384 ;; Auto vars:     Size  Location     Type
 25385 ;;		None
 25386 ;; Return value:  Size  Location     Type
 25387 ;;                  1    wreg      void 
 25388 ;; Registers used:
 25389 ;;		None
 25390 ;; Tracked objects:
 25391 ;;		On entry : 0/0
 25392 ;;		On exit  : 0/0
 25393 ;;		Unchanged: 0/0
 25394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25399 ;;Total ram usage:        0 bytes
 25400 ;; Hardware stack levels used:    1
 25401 ;; This function calls:
 25402 ;;		Nothing
 25403 ;; This function is called by:
 25404 ;;		i1_do_I2C_SEND_RESTART_READ
 25405 ;;		i1_do_I2C_SEND_RESTART_WRITE
 25406 ;;		i1_do_I2C_SEND_RESTART
 25407 ;; This function uses a non-reentrant model
 25408 ;;
 25409                           
 25410                           
 25411                           ;psect for function i1_i2c1_driver_restart
 25412  211C                     i1_i2c1_driver_restart:	
 25413                           
 25414                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 25415                           
 25416                           ;incstack = 0
 25417                           ; Regs used in i1_i2c1_driver_restart: []
 25418  211C  0024               	movlb	4	; select bank4
 25419  211D  1496               	bsf	22,1	;volatile
 25420  211E  0008               	return
 25421  211F                     __end_ofi1_i2c1_driver_restart:	
 25422                           
 25423                           	psect	text152
 25424  2149                     __ptext152:	
 25425 ;; *************** function i1_i2c1_driver_sendACK *****************
 25426 ;; Defined at:
 25427 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 25428 ;; Parameters:    Size  Location     Type
 25429 ;;		None
 25430 ;; Auto vars:     Size  Location     Type
 25431 ;;		None
 25432 ;; Return value:  Size  Location     Type
 25433 ;;                  1    wreg      void 
 25434 ;; Registers used:
 25435 ;;		None
 25436 ;; Tracked objects:
 25437 ;;		On entry : 0/0
 25438 ;;		On exit  : 0/0
 25439 ;;		Unchanged: 0/0
 25440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25445 ;;Total ram usage:        0 bytes
 25446 ;; Hardware stack levels used:    1
 25447 ;; This function calls:
 25448 ;;		Nothing
 25449 ;; This function is called by:
 25450 ;;		i1_do_I2C_DO_ACK
 25451 ;;		i1_do_I2C_RX
 25452 ;; This function uses a non-reentrant model
 25453 ;;
 25454                           
 25455                           
 25456                           ;psect for function i1_i2c1_driver_sendACK
 25457  2149                     i1_i2c1_driver_sendACK:	
 25458                           
 25459                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 25460                           
 25461                           ;incstack = 0
 25462                           ; Regs used in i1_i2c1_driver_sendACK: []
 25463  2149  0024               	movlb	4	; select bank4
 25464  214A  1296               	bcf	22,5	;volatile
 25465                           
 25466                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 25467  214B  1616               	bsf	22,4	;volatile
 25468  214C  0008               	return
 25469  214D                     __end_ofi1_i2c1_driver_sendACK:	
 25470                           
 25471                           	psect	text153
 25472  2119                     __ptext153:	
 25473 ;; *************** function _i2c_busCollisionISR *****************
 25474 ;; Defined at:
 25475 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 25476 ;; Parameters:    Size  Location     Type
 25477 ;;		None
 25478 ;; Auto vars:     Size  Location     Type
 25479 ;;		None
 25480 ;; Return value:  Size  Location     Type
 25481 ;;                  1    wreg      void 
 25482 ;; Registers used:
 25483 ;;		status,2, status,0, pclath, cstack
 25484 ;; Tracked objects:
 25485 ;;		On entry : 0/0
 25486 ;;		On exit  : 0/0
 25487 ;;		Unchanged: 0/0
 25488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25493 ;;Total ram usage:        0 bytes
 25494 ;; Hardware stack levels used:    1
 25495 ;; Hardware stack levels required when called:    1
 25496 ;; This function calls:
 25497 ;;		_i2c1_driver_clearBusCollision
 25498 ;; This function is called by:
 25499 ;;		_i2c_open
 25500 ;;		_INTERRUPT_InterruptManager
 25501 ;; This function uses a non-reentrant model
 25502 ;;
 25503                           
 25504                           
 25505                           ;psect for function _i2c_busCollisionISR
 25506  2119                     _i2c_busCollisionISR:	
 25507                           
 25508                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 25509                           
 25510                           ;incstack = 0
 25511                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 25512  2119  31A1  2116         	fcall	_i2c1_driver_clearBusCollision
 25513  211B  0008               	return
 25514  211C                     __end_of_i2c_busCollisionISR:	
 25515                           
 25516                           	psect	text154
 25517  2116                     __ptext154:	
 25518 ;; *************** function _i2c1_driver_clearBusCollision *****************
 25519 ;; Defined at:
 25520 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 25521 ;; Parameters:    Size  Location     Type
 25522 ;;		None
 25523 ;; Auto vars:     Size  Location     Type
 25524 ;;		None
 25525 ;; Return value:  Size  Location     Type
 25526 ;;                  1    wreg      void 
 25527 ;; Registers used:
 25528 ;;		None
 25529 ;; Tracked objects:
 25530 ;;		On entry : 0/0
 25531 ;;		On exit  : 0/0
 25532 ;;		Unchanged: 0/0
 25533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25538 ;;Total ram usage:        0 bytes
 25539 ;; Hardware stack levels used:    1
 25540 ;; This function calls:
 25541 ;;		Nothing
 25542 ;; This function is called by:
 25543 ;;		_i2c_busCollisionISR
 25544 ;; This function uses a non-reentrant model
 25545 ;;
 25546                           
 25547                           
 25548                           ;psect for function _i2c1_driver_clearBusCollision
 25549  2116                     _i2c1_driver_clearBusCollision:	
 25550                           
 25551                           ;i2c1_driver.c: 255: PIR1bits.BCL1IF = 0;
 25552                           
 25553                           ;incstack = 0
 25554                           ; Regs used in _i2c1_driver_clearBusCollision: []
 25555  2116  0020               	movlb	0	; select bank0
 25556  2117  1111               	bcf	17,2	;volatile
 25557  2118  0008               	return
 25558  2119                     __end_of_i2c1_driver_clearBusCollision:	
 25559                           
 25560                           	psect	text155
 25561  22E6                     __ptext155:	
 25562 ;; *************** function _TMR2_ISR *****************
 25563 ;; Defined at:
 25564 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 25565 ;; Parameters:    Size  Location     Type
 25566 ;;		None
 25567 ;; Auto vars:     Size  Location     Type
 25568 ;;		None
 25569 ;; Return value:  Size  Location     Type
 25570 ;;                  1    wreg      void 
 25571 ;; Registers used:
 25572 ;;		wreg, status,2, status,0, pclath, cstack
 25573 ;; Tracked objects:
 25574 ;;		On entry : 0/0
 25575 ;;		On exit  : 0/0
 25576 ;;		Unchanged: 0/0
 25577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25582 ;;Total ram usage:        0 bytes
 25583 ;; Hardware stack levels used:    1
 25584 ;; Hardware stack levels required when called:    2
 25585 ;; This function calls:
 25586 ;;		Absolute function
 25587 ;;		_TMR2_DefaultInterruptHandler
 25588 ;; This function is called by:
 25589 ;;		_INTERRUPT_InterruptManager
 25590 ;; This function uses a non-reentrant model
 25591 ;;
 25592                           
 25593                           
 25594                           ;psect for function _TMR2_ISR
 25595  22E6                     _TMR2_ISR:	
 25596                           
 25597                           ;tmr2.c: 121: PIR1bits.TMR2IF = 0;
 25598                           
 25599                           ;incstack = 0
 25600                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 25601  22E6  0020               	movlb	0	; select bank0
 25602  22E7  1091               	bcf	17,1	;volatile
 25603                           
 25604                           ;tmr2.c: 123: if(TMR2_InterruptHandler)
 25605  22E8  0023               	movlb	3	; select bank3
 25606  22E9  0861               	movf	_TMR2_InterruptHandler^(0+384),w
 25607  22EA  0462               	iorwf	(_TMR2_InterruptHandler+1)^(0+384),w
 25608  22EB  1903               	btfsc	3,2
 25609  22EC  0008               	return
 25610                           
 25611                           ;tmr2.c: 124: {
 25612                           ;tmr2.c: 125: TMR2_InterruptHandler();
 25613  22ED  0862               	movf	(_TMR2_InterruptHandler+1)^(0+384),w
 25614  22EE  008A               	movwf	10
 25615  22EF  0861               	movf	_TMR2_InterruptHandler^(0+384),w
 25616  22F0  000A               	callw
 25617  22F1  31A2               	pagesel	$
 25618  22F2  0008               	return
 25619  22F3                     __end_of_TMR2_ISR:	
 25620                           
 25621                           	psect	text156
 25622  221F                     __ptext156:	
 25623 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 25624 ;; Defined at:
 25625 ;;		line 134 in file "mcc_generated_files/tmr2.c"
 25626 ;; Parameters:    Size  Location     Type
 25627 ;;		None
 25628 ;; Auto vars:     Size  Location     Type
 25629 ;;		None
 25630 ;; Return value:  Size  Location     Type
 25631 ;;                  1    wreg      void 
 25632 ;; Registers used:
 25633 ;;		wreg, status,2, status,0, pclath, cstack
 25634 ;; Tracked objects:
 25635 ;;		On entry : 0/0
 25636 ;;		On exit  : 0/0
 25637 ;;		Unchanged: 0/0
 25638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25643 ;;Total ram usage:        0 bytes
 25644 ;; Hardware stack levels used:    1
 25645 ;; Hardware stack levels required when called:    1
 25646 ;; This function calls:
 25647 ;;		_TMR2_StopTimer
 25648 ;;		_TMR2_WriteTimer
 25649 ;; This function is called by:
 25650 ;;		_TMR2_Initialize
 25651 ;;		_TMR2_ISR
 25652 ;; This function uses a non-reentrant model
 25653 ;;
 25654                           
 25655                           
 25656                           ;psect for function _TMR2_DefaultInterruptHandler
 25657  221F                     _TMR2_DefaultInterruptHandler:	
 25658                           
 25659                           ;incstack = 0
 25660                           ; Regs used in _TMR2_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 25661                           ;tmr2.c: 138: do { LATCbits.LATC1 = 1; } while(0);
 25662  221F  0022               	movlb	2	; select bank2
 25663  2220  148E               	bsf	14,1	;volatile
 25664                           
 25665                           ;tmr2.c: 141: TMR2_StopTimer();
 25666  2221  31A1  2113  31A2   	fcall	_TMR2_StopTimer
 25667                           
 25668                           ;tmr2.c: 142: TMR2_WriteTimer(0);
 25669  2224  3000               	movlw	0
 25670  2225  31A1  2182         	fcall	_TMR2_WriteTimer
 25671  2227  0008               	return
 25672  2228                     __end_of_TMR2_DefaultInterruptHandler:	
 25673                           
 25674                           	psect	text157
 25675  2182                     __ptext157:	
 25676 ;; *************** function _TMR2_WriteTimer *****************
 25677 ;; Defined at:
 25678 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 25679 ;; Parameters:    Size  Location     Type
 25680 ;;  timerVal        1    wreg     unsigned char 
 25681 ;; Auto vars:     Size  Location     Type
 25682 ;;  timerVal        1    0[COMMON] unsigned char 
 25683 ;; Return value:  Size  Location     Type
 25684 ;;                  1    wreg      void 
 25685 ;; Registers used:
 25686 ;;		wreg
 25687 ;; Tracked objects:
 25688 ;;		On entry : 0/0
 25689 ;;		On exit  : 0/0
 25690 ;;		Unchanged: 0/0
 25691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25696 ;;Total ram usage:        1 bytes
 25697 ;; Hardware stack levels used:    1
 25698 ;; This function calls:
 25699 ;;		Nothing
 25700 ;; This function is called by:
 25701 ;;		_TMR2_DefaultInterruptHandler
 25702 ;; This function uses a non-reentrant model
 25703 ;;
 25704                           
 25705                           
 25706                           ;psect for function _TMR2_WriteTimer
 25707  2182                     _TMR2_WriteTimer:	
 25708                           
 25709                           ;incstack = 0
 25710                           ; Regs used in _TMR2_WriteTimer: [wreg]
 25711                           ;TMR2_WriteTimer@timerVal stored from wreg
 25712  2182  00F0               	movwf	TMR2_WriteTimer@timerVal
 25713                           
 25714                           ;tmr2.c: 109: TMR2 = timerVal;
 25715  2183  0870               	movf	TMR2_WriteTimer@timerVal,w
 25716  2184  0020               	movlb	0	; select bank0
 25717  2185  009D               	movwf	29	;volatile
 25718  2186  0008               	return
 25719  2187                     __end_of_TMR2_WriteTimer:	
 25720                           
 25721                           	psect	text158
 25722  2113                     __ptext158:	
 25723 ;; *************** function _TMR2_StopTimer *****************
 25724 ;; Defined at:
 25725 ;;		line 91 in file "mcc_generated_files/tmr2.c"
 25726 ;; Parameters:    Size  Location     Type
 25727 ;;		None
 25728 ;; Auto vars:     Size  Location     Type
 25729 ;;		None
 25730 ;; Return value:  Size  Location     Type
 25731 ;;                  1    wreg      void 
 25732 ;; Registers used:
 25733 ;;		None
 25734 ;; Tracked objects:
 25735 ;;		On entry : 0/0
 25736 ;;		On exit  : 0/0
 25737 ;;		Unchanged: 0/0
 25738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25743 ;;Total ram usage:        0 bytes
 25744 ;; Hardware stack levels used:    1
 25745 ;; This function calls:
 25746 ;;		Nothing
 25747 ;; This function is called by:
 25748 ;;		_TMR2_DefaultInterruptHandler
 25749 ;; This function uses a non-reentrant model
 25750 ;;
 25751                           
 25752                           
 25753                           ;psect for function _TMR2_StopTimer
 25754  2113                     _TMR2_StopTimer:	
 25755                           
 25756                           ;tmr2.c: 94: T2CONbits.TMR2ON = 0;
 25757                           
 25758                           ;incstack = 0
 25759                           ; Regs used in _TMR2_StopTimer: []
 25760  2113  0020               	movlb	0	; select bank0
 25761  2114  111F               	bcf	31,2	;volatile
 25762  2115  0008               	return
 25763  2116                     __end_of_TMR2_StopTimer:	
 25764                           
 25765                           	psect	text159
 25766  22D9                     __ptext159:	
 25767 ;; *************** function _TMR0_ISR *****************
 25768 ;; Defined at:
 25769 ;;		line 119 in file "mcc_generated_files/tmr0.c"
 25770 ;; Parameters:    Size  Location     Type
 25771 ;;		None
 25772 ;; Auto vars:     Size  Location     Type
 25773 ;;		None
 25774 ;; Return value:  Size  Location     Type
 25775 ;;                  1    wreg      void 
 25776 ;; Registers used:
 25777 ;;		wreg, status,2, status,0, pclath, cstack
 25778 ;; Tracked objects:
 25779 ;;		On entry : 0/0
 25780 ;;		On exit  : 0/0
 25781 ;;		Unchanged: 0/0
 25782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25787 ;;Total ram usage:        0 bytes
 25788 ;; Hardware stack levels used:    1
 25789 ;; Hardware stack levels required when called:    4
 25790 ;; This function calls:
 25791 ;;		Absolute function
 25792 ;;		_TMR0_DefaultInterruptHandler
 25793 ;; This function is called by:
 25794 ;;		_INTERRUPT_InterruptManager
 25795 ;; This function uses a non-reentrant model
 25796 ;;
 25797                           
 25798                           
 25799                           ;psect for function _TMR0_ISR
 25800  22D9                     _TMR0_ISR:	
 25801                           
 25802                           ;tmr0.c: 122: PIR0bits.TMR0IF = 0;
 25803                           
 25804                           ;incstack = 0
 25805 ;; hardware stack exceeded
 25806                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 25807  22D9  0020               	movlb	0	; select bank0
 25808  22DA  1290               	bcf	16,5	;volatile
 25809                           
 25810                           ;tmr0.c: 123: if(TMR0_InterruptHandler)
 25811  22DB  0023               	movlb	3	; select bank3
 25812  22DC  0863               	movf	_TMR0_InterruptHandler^(0+384),w
 25813  22DD  0464               	iorwf	(_TMR0_InterruptHandler+1)^(0+384),w
 25814  22DE  1903               	btfsc	3,2
 25815  22DF  0008               	return
 25816                           
 25817                           ;tmr0.c: 124: {
 25818                           ;tmr0.c: 125: TMR0_InterruptHandler();
 25819  22E0  0864               	movf	(_TMR0_InterruptHandler+1)^(0+384),w
 25820  22E1  008A               	movwf	10
 25821  22E2  0863               	movf	_TMR0_InterruptHandler^(0+384),w
 25822  22E3  000A               	callw
 25823  22E4  31A2               	pagesel	$
 25824  22E5  0008               	return
 25825  22E6                     __end_of_TMR0_ISR:	
 25826                           
 25827                           	psect	text160
 25828  0802                     __ptext160:	
 25829 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 25830 ;; Defined at:
 25831 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 25832 ;; Parameters:    Size  Location     Type
 25833 ;;		None
 25834 ;; Auto vars:     Size  Location     Type
 25835 ;;		None
 25836 ;; Return value:  Size  Location     Type
 25837 ;;                  1    wreg      void 
 25838 ;; Registers used:
 25839 ;;		wreg, status,2, status,0, pclath, cstack
 25840 ;; Tracked objects:
 25841 ;;		On entry : 0/0
 25842 ;;		On exit  : 0/0
 25843 ;;		Unchanged: 0/0
 25844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25849 ;;Total ram usage:        0 bytes
 25850 ;; Hardware stack levels used:    1
 25851 ;; Hardware stack levels required when called:    3
 25852 ;; This function calls:
 25853 ;;		_TMR0_StopTimer
 25854 ;;		_TMR0_Write8bitTimer
 25855 ;;		i1_LEDsOn
 25856 ;; This function is called by:
 25857 ;;		_TMR0_Initialize
 25858 ;;		_TMR0_ISR
 25859 ;; This function uses a non-reentrant model
 25860 ;;
 25861                           
 25862                           
 25863                           ;psect for function _TMR0_DefaultInterruptHandler
 25864  0802                     _TMR0_DefaultInterruptHandler:	
 25865                           
 25866                           ;tmr0.c: 141: LEDsOn(second_top, 1);
 25867                           
 25868                           ;incstack = 0
 25869 ;; hardware stack exceeded
 25870                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 25871  0802  0022               	movlb	2	; select bank2
 25872  0803  085D               	movf	(_second_top+3)^(0+256),w
 25873  0804  0020               	movlb	0	; select bank0
 25874  0805  00AA               	movwf	i1LEDsOn@LEDpins+3
 25875  0806  0022               	movlb	2	; select bank2
 25876  0807  085C               	movf	(_second_top+2)^(0+256),w
 25877  0808  0020               	movlb	0	; select bank0
 25878  0809  00A9               	movwf	i1LEDsOn@LEDpins+2
 25879  080A  0022               	movlb	2	; select bank2
 25880  080B  085B               	movf	(_second_top+1)^(0+256),w
 25881  080C  0020               	movlb	0	; select bank0
 25882  080D  00A8               	movwf	i1LEDsOn@LEDpins+1
 25883  080E  0022               	movlb	2	; select bank2
 25884  080F  085A               	movf	_second_top^(0+256),w
 25885  0810  0020               	movlb	0	; select bank0
 25886  0811  00A7               	movwf	i1LEDsOn@LEDpins
 25887  0812  3001               	movlw	1
 25888  0813  00AB               	movwf	i1LEDsOn@topOrBottom
 25889  0814  3000               	movlw	0
 25890  0815  00AC               	movwf	i1LEDsOn@topOrBottom+1
 25891  0816  31A5  2534  3188   	fcall	i1_LEDsOn
 25892                           
 25893                           ;tmr0.c: 142: LEDsOn(second_bottom,2);
 25894  0819  0022               	movlb	2	; select bank2
 25895  081A  0851               	movf	(_second_bottom+3)^(0+256),w
 25896  081B  0020               	movlb	0	; select bank0
 25897  081C  00AA               	movwf	i1LEDsOn@LEDpins+3
 25898  081D  0022               	movlb	2	; select bank2
 25899  081E  0850               	movf	(_second_bottom+2)^(0+256),w
 25900  081F  0020               	movlb	0	; select bank0
 25901  0820  00A9               	movwf	i1LEDsOn@LEDpins+2
 25902  0821  0022               	movlb	2	; select bank2
 25903  0822  084F               	movf	(_second_bottom+1)^(0+256),w
 25904  0823  0020               	movlb	0	; select bank0
 25905  0824  00A8               	movwf	i1LEDsOn@LEDpins+1
 25906  0825  0022               	movlb	2	; select bank2
 25907  0826  084E               	movf	_second_bottom^(0+256),w
 25908  0827  0020               	movlb	0	; select bank0
 25909  0828  00A7               	movwf	i1LEDsOn@LEDpins
 25910  0829  3002               	movlw	2
 25911  082A  00AB               	movwf	i1LEDsOn@topOrBottom
 25912  082B  3000               	movlw	0
 25913  082C  00AC               	movwf	i1LEDsOn@topOrBottom+1
 25914  082D  31A5  2534  3188   	fcall	i1_LEDsOn
 25915                           
 25916                           ;tmr0.c: 144: do { LATCbits.LATC1 = 0; } while(0);
 25917  0830  0022               	movlb	2	; select bank2
 25918  0831  108E               	bcf	14,1	;volatile
 25919                           
 25920                           ;tmr0.c: 145: TMR0_StopTimer();
 25921  0832  31A1  2110  3188   	fcall	_TMR0_StopTimer
 25922                           
 25923                           ;tmr0.c: 146: TMR0_Write8bitTimer(0);
 25924  0835  3000               	movlw	0
 25925  0836  31A1  217D         	fcall	_TMR0_Write8bitTimer
 25926  0838  0008               	return
 25927  0839                     __end_of_TMR0_DefaultInterruptHandler:	
 25928                           
 25929                           	psect	text161
 25930  2534                     __ptext161:	
 25931 ;; *************** function i1_LEDsOn *****************
 25932 ;; Defined at:
 25933 ;;		line 6 in file "LEDcomm.c"
 25934 ;; Parameters:    Size  Location     Type
 25935 ;;  LEDpins         4    7[BANK0 ] unsigned long 
 25936 ;;  topOrBottom     2   11[BANK0 ] int 
 25937 ;; Auto vars:     Size  Location     Type
 25938 ;;		None
 25939 ;; Return value:  Size  Location     Type
 25940 ;;                  1    wreg      void 
 25941 ;; Registers used:
 25942 ;;		wreg, status,2, status,0, pclath, cstack
 25943 ;; Tracked objects:
 25944 ;;		On entry : 0/0
 25945 ;;		On exit  : 0/0
 25946 ;;		Unchanged: 0/0
 25947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25948 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25950 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25951 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25952 ;;Total ram usage:       10 bytes
 25953 ;; Hardware stack levels used:    1
 25954 ;; Hardware stack levels required when called:    2
 25955 ;; This function calls:
 25956 ;;		i1_send_2length_2bytes_IK
 25957 ;; This function is called by:
 25958 ;;		_TMR0_DefaultInterruptHandler
 25959 ;; This function uses a non-reentrant model
 25960 ;;
 25961                           
 25962                           
 25963                           ;psect for function i1_LEDsOn
 25964  2534                     i1_LEDsOn:	
 25965                           
 25966                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 25967                           
 25968                           ;incstack = 0
 25969 ;; hardware stack exceeded
 25970                           ; Regs used in i1_LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 25971  2534  0020               	movlb	0	; select bank0
 25972  2535  0827               	movf	i1LEDsOn@LEDpins,w
 25973  2536  00AD               	movwf	??i1_LEDsOn
 25974  2537  0828               	movf	i1LEDsOn@LEDpins+1,w
 25975  2538  00AE               	movwf	??i1_LEDsOn+1
 25976  2539  0829               	movf	i1LEDsOn@LEDpins+2,w
 25977  253A  00AF               	movwf	??i1_LEDsOn+2
 25978  253B  082A               	movf	i1LEDsOn@LEDpins+3,w
 25979  253C  00B0               	movwf	??i1_LEDsOn+3
 25980  253D  3010               	movlw	16
 25981  253E                     u517_25:	
 25982  253E  36B0               	lsrf	??i1_LEDsOn+3,f
 25983  253F  0CAF               	rrf	??i1_LEDsOn+2,f
 25984  2540  0CAE               	rrf	??i1_LEDsOn+1,f
 25985  2541  0CAD               	rrf	??i1_LEDsOn,f
 25986  2542  0B89               	decfsz	9,f
 25987  2543  2D3E               	goto	u517_25
 25988  2544  082E               	movf	??i1_LEDsOn+1,w
 25989  2545  00A1               	movwf	i1send_2length_2bytes_IK@data1+1
 25990  2546  082D               	movf	??i1_LEDsOn,w
 25991  2547  00A0               	movwf	i1send_2length_2bytes_IK@data1
 25992  2548  0828               	movf	i1LEDsOn@LEDpins+1,w
 25993  2549  00A3               	movwf	i1send_2length_2bytes_IK@data2+1
 25994  254A  0827               	movf	i1LEDsOn@LEDpins,w
 25995  254B  00A2               	movwf	i1send_2length_2bytes_IK@data2
 25996  254C  01A4               	clrf	i1send_2length_2bytes_IK@latch_start
 25997  254D  0AA4               	incf	i1send_2length_2bytes_IK@latch_start,f
 25998  254E  082C               	movf	i1LEDsOn@topOrBottom+1,w
 25999  254F  00A6               	movwf	i1send_2length_2bytes_IK@topOrBottom+1
 26000  2550  082B               	movf	i1LEDsOn@topOrBottom,w
 26001  2551  00A5               	movwf	i1send_2length_2bytes_IK@topOrBottom
 26002  2552  31A3  23A6         	fcall	i1_send_2length_2bytes_IK
 26003  2554  0008               	return
 26004  2555                     __end_ofi1_LEDsOn:	
 26005                           
 26006                           	psect	text162
 26007  23A6                     __ptext162:	
 26008 ;; *************** function i1_send_2length_2bytes_IK *****************
 26009 ;; Defined at:
 26010 ;;		line 70 in file "LEDcomm.c"
 26011 ;; Parameters:    Size  Location     Type
 26012 ;;  data1           2    0[BANK0 ] unsigned int 
 26013 ;;  data2           2    2[BANK0 ] unsigned int 
 26014 ;;  latch_start     1    4[BANK0 ] unsigned char 
 26015 ;;  topOrBottom     2    5[BANK0 ] int 
 26016 ;; Auto vars:     Size  Location     Type
 26017 ;;		None
 26018 ;; Return value:  Size  Location     Type
 26019 ;;                  1    wreg      void 
 26020 ;; Registers used:
 26021 ;;		wreg, status,2, status,0, pclath, cstack
 26022 ;; Tracked objects:
 26023 ;;		On entry : 0/0
 26024 ;;		On exit  : 0/0
 26025 ;;		Unchanged: 0/0
 26026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26027 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26030 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26031 ;;Total ram usage:        8 bytes
 26032 ;; Hardware stack levels used:    1
 26033 ;; Hardware stack levels required when called:    1
 26034 ;; This function calls:
 26035 ;;		i1_send_2bytes_latchless_IK
 26036 ;;		i1_send_last_2bytes_IK
 26037 ;; This function is called by:
 26038 ;;		i1_LEDsOn
 26039 ;; This function uses a non-reentrant model
 26040 ;;
 26041                           
 26042                           
 26043                           ;psect for function i1_send_2length_2bytes_IK
 26044  23A6                     i1_send_2length_2bytes_IK:	
 26045                           
 26046                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 26047                           
 26048                           ;incstack = 0
 26049 ;; hardware stack exceeded
 26050                           ; Regs used in i1_send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 26051  23A6  0020               	movlb	0	; select bank0
 26052  23A7  0821               	movf	i1send_2length_2bytes_IK@data1+1,w
 26053  23A8  00F1               	movwf	i1send_2bytes_latchless_IK@data+1
 26054  23A9  0820               	movf	i1send_2length_2bytes_IK@data1,w
 26055  23AA  00F0               	movwf	i1send_2bytes_latchless_IK@data
 26056  23AB  31A6  269A  31A3   	fcall	i1_send_2bytes_latchless_IK
 26057                           
 26058                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 26059  23AE  0020               	movlb	0	; select bank0
 26060  23AF  0823               	movf	i1send_2length_2bytes_IK@data2+1,w
 26061  23B0  00F1               	movwf	i1send_last_2bytes_IK@data+1
 26062  23B1  0822               	movf	i1send_2length_2bytes_IK@data2,w
 26063  23B2  00F0               	movwf	i1send_last_2bytes_IK@data
 26064  23B3  0824               	movf	i1send_2length_2bytes_IK@latch_start,w
 26065  23B4  00FB               	movwf	??i1_send_2length_2bytes_IK
 26066  23B5  087B               	movf	??i1_send_2length_2bytes_IK,w
 26067  23B6  00F2               	movwf	i1send_last_2bytes_IK@latch_start
 26068  23B7  0826               	movf	i1send_2length_2bytes_IK@topOrBottom+1,w
 26069  23B8  00F4               	movwf	i1send_last_2bytes_IK@topOrBottom+1
 26070  23B9  0825               	movf	i1send_2length_2bytes_IK@topOrBottom,w
 26071  23BA  00F3               	movwf	i1send_last_2bytes_IK@topOrBottom
 26072  23BB  319A  2244         	fcall	i1_send_last_2bytes_IK
 26073  23BD  0008               	return
 26074  23BE                     __end_ofi1_send_2length_2bytes_IK:	
 26075                           
 26076                           	psect	text163
 26077  1A44                     __ptext163:	
 26078 ;; *************** function i1_send_last_2bytes_IK *****************
 26079 ;; Defined at:
 26080 ;;		line 19 in file "LEDcomm.c"
 26081 ;; Parameters:    Size  Location     Type
 26082 ;;  data            2    0[COMMON] unsigned int 
 26083 ;;  latch_start     1    2[COMMON] unsigned char 
 26084 ;;  topOrBottom     2    3[COMMON] int 
 26085 ;; Auto vars:     Size  Location     Type
 26086 ;;  send_last_2b    2    9[COMMON] int 
 26087 ;; Return value:  Size  Location     Type
 26088 ;;                  1    wreg      void 
 26089 ;; Registers used:
 26090 ;;		wreg, status,2, status,0
 26091 ;; Tracked objects:
 26092 ;;		On entry : 0/0
 26093 ;;		On exit  : 0/0
 26094 ;;		Unchanged: 0/0
 26095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26096 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26097 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26098 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26099 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26100 ;;Total ram usage:       11 bytes
 26101 ;; Hardware stack levels used:    1
 26102 ;; This function calls:
 26103 ;;		Nothing
 26104 ;; This function is called by:
 26105 ;;		i1_send_2length_2bytes_IK
 26106 ;; This function uses a non-reentrant model
 26107 ;;
 26108                           
 26109                           
 26110                           ;psect for function i1_send_last_2bytes_IK
 26111  1A44                     i1_send_last_2bytes_IK:	
 26112                           
 26113                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 26114                           
 26115                           ;incstack = 0
 26116 ;; hardware stack exceeded
 26117                           ; Regs used in i1_send_last_2bytes_IK: [wreg+status,2+status,0]
 26118  1A44  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 26119  1A45  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 26120  1A46  1D03               	btfss	3,2
 26121  1A47  2A4B               	goto	i1l210
 26122  1A48  0022               	movlb	2	; select bank2
 26123  1A49  120D               	bcf	13,4	;volatile
 26124  1A4A  2A4D               	goto	i1l5265
 26125  1A4B                     i1l210:	
 26126  1A4B  0022               	movlb	2	; select bank2
 26127  1A4C  100E               	bcf	14,0	;volatile
 26128  1A4D                     i1l5265:	
 26129                           
 26130                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 26131  1A4D  300F               	movlw	15
 26132  1A4E  00F9               	movwf	i1send_last_2bytes_IK@j
 26133  1A4F  3000               	movlw	0
 26134  1A50  00FA               	movwf	i1send_last_2bytes_IK@j+1
 26135  1A51  1BFA               	btfsc	i1send_last_2bytes_IK@j+1,7
 26136  1A52  2A84               	goto	i1l231
 26137  1A53                     i1l214:	
 26138                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 26139                           
 26140  1A53  110C               	bcf	12,2	;volatile
 26141                           
 26142                           ;LEDcomm.c: 28: if (data & 1 << j){
 26143  1A54  3001               	movlw	1
 26144  1A55  00F5               	movwf	??i1_send_last_2bytes_IK
 26145  1A56  3000               	movlw	0
 26146  1A57  00F6               	movwf	??i1_send_last_2bytes_IK+1
 26147  1A58  0A79               	incf	i1send_last_2bytes_IK@j,w
 26148  1A59  2A5C               	goto	u400_24
 26149  1A5A                     u400_25:	
 26150  1A5A  35F5               	lslf	??i1_send_last_2bytes_IK,f
 26151  1A5B  0DF6               	rlf	??i1_send_last_2bytes_IK+1,f
 26152  1A5C                     u400_24:	
 26153  1A5C  0B89               	decfsz	9,f
 26154  1A5D  2A5A               	goto	u400_25
 26155  1A5E  0870               	movf	i1send_last_2bytes_IK@data,w
 26156  1A5F  0575               	andwf	??i1_send_last_2bytes_IK,w
 26157  1A60  00F7               	movwf	??i1_send_last_2bytes_IK+2
 26158  1A61  0871               	movf	i1send_last_2bytes_IK@data+1,w
 26159  1A62  0576               	andwf	??i1_send_last_2bytes_IK+1,w
 26160  1A63  00F8               	movwf	??i1_send_last_2bytes_IK+3
 26161  1A64  0877               	movf	??i1_send_last_2bytes_IK+2,w
 26162  1A65  0478               	iorwf	??i1_send_last_2bytes_IK+3,w
 26163  1A66  1903               	btfsc	3,2
 26164  1A67  2A6A               	goto	i1l220
 26165                           
 26166                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 26167  1A68  150E               	bsf	14,2	;volatile
 26168                           
 26169                           ;LEDcomm.c: 30: }
 26170  1A69  2A6B               	goto	i1l5273
 26171  1A6A                     i1l220:	
 26172                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 26173                           
 26174  1A6A  110E               	bcf	14,2	;volatile
 26175  1A6B                     i1l5273:	
 26176                           
 26177                           ;LEDcomm.c: 33: if( j == latch_start) {
 26178  1A6B  0872               	movf	i1send_last_2bytes_IK@latch_start,w
 26179  1A6C  00F5               	movwf	??i1_send_last_2bytes_IK
 26180  1A6D  01F6               	clrf	??i1_send_last_2bytes_IK+1
 26181  1A6E  087A               	movf	i1send_last_2bytes_IK@j+1,w
 26182  1A6F  0676               	xorwf	??i1_send_last_2bytes_IK+1,w
 26183  1A70  1D03               	skipz
 26184  1A71  2A74               	goto	u402_25
 26185  1A72  0879               	movf	i1send_last_2bytes_IK@j,w
 26186  1A73  0675               	xorwf	??i1_send_last_2bytes_IK,w
 26187  1A74                     u402_25:	
 26188  1A74  1D03               	skipz
 26189  1A75  2A7D               	goto	i1l229
 26190                           
 26191                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 26192  1A76  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 26193  1A77  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 26194  1A78  1D03               	btfss	3,2
 26195  1A79  2A7C               	goto	i1l227
 26196  1A7A  160D               	bsf	13,4	;volatile
 26197  1A7B  2A7D               	goto	i1l229
 26198  1A7C                     i1l227:	
 26199  1A7C  140E               	bsf	14,0	;volatile
 26200  1A7D                     i1l229:	
 26201                           ;LEDcomm.c: 37: }
 26202                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 26203                           
 26204  1A7D  150C               	bsf	12,2	;volatile
 26205  1A7E  30FF               	movlw	255
 26206  1A7F  07F9               	addwf	i1send_last_2bytes_IK@j,f
 26207  1A80  30FF               	movlw	255
 26208  1A81  3DFA               	addwfc	i1send_last_2bytes_IK@j+1,f
 26209  1A82  1FFA               	btfss	i1send_last_2bytes_IK@j+1,7
 26210  1A83  2A53               	goto	i1l214
 26211  1A84                     i1l231:	
 26212                           ;LEDcomm.c: 41: }
 26213                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 26214                           
 26215  1A84  110C               	bcf	12,2	;volatile
 26216                           
 26217                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 26218  1A85  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 26219  1A86  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 26220  1A87  1D03               	btfss	3,2
 26221  1A88  2A8B               	goto	i1l237
 26222  1A89  120D               	bcf	13,4	;volatile
 26223  1A8A  0008               	return
 26224  1A8B                     i1l237:	
 26225  1A8B  100E               	bcf	14,0	;volatile
 26226  1A8C  0008               	return
 26227  1A8D                     __end_ofi1_send_last_2bytes_IK:	
 26228                           
 26229                           	psect	text164
 26230  269A                     __ptext164:	
 26231 ;; *************** function i1_send_2bytes_latchless_IK *****************
 26232 ;; Defined at:
 26233 ;;		line 49 in file "LEDcomm.c"
 26234 ;; Parameters:    Size  Location     Type
 26235 ;;  data            2    0[COMMON] unsigned int 
 26236 ;; Auto vars:     Size  Location     Type
 26237 ;;  send_2bytes_    2    6[COMMON] int 
 26238 ;; Return value:  Size  Location     Type
 26239 ;;                  1    wreg      void 
 26240 ;; Registers used:
 26241 ;;		wreg, status,2, status,0
 26242 ;; Tracked objects:
 26243 ;;		On entry : 0/0
 26244 ;;		On exit  : 0/0
 26245 ;;		Unchanged: 0/0
 26246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26249 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26250 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26251 ;;Total ram usage:        8 bytes
 26252 ;; Hardware stack levels used:    1
 26253 ;; This function calls:
 26254 ;;		Nothing
 26255 ;; This function is called by:
 26256 ;;		i1_send_2length_2bytes_IK
 26257 ;; This function uses a non-reentrant model
 26258 ;;
 26259                           
 26260                           
 26261                           ;psect for function i1_send_2bytes_latchless_IK
 26262  269A                     i1_send_2bytes_latchless_IK:	
 26263                           
 26264                           ;incstack = 0
 26265 ;; hardware stack exceeded
 26266                           ; Regs used in i1_send_2bytes_latchless_IK: [wreg+status,2+status,0]
 26267                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 26268  269A  0022               	movlb	2	; select bank2
 26269  269B  120D               	bcf	13,4	;volatile
 26270                           
 26271                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 26272  269C  300F               	movlw	15
 26273  269D  00F6               	movwf	i1send_2bytes_latchless_IK@j
 26274  269E  3000               	movlw	0
 26275  269F  00F7               	movwf	i1send_2bytes_latchless_IK@j+1
 26276  26A0  1BF7               	btfsc	i1send_2bytes_latchless_IK@j+1,7
 26277  26A1  2EC1               	goto	i1l256
 26278  26A2                     i1l246:	
 26279                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 26280                           
 26281  26A2  110C               	bcf	12,2	;volatile
 26282                           
 26283                           ;LEDcomm.c: 56: if (data & 1 << j){
 26284  26A3  3001               	movlw	1
 26285  26A4  00F2               	movwf	??i1_send_2bytes_latchless_IK
 26286  26A5  3000               	movlw	0
 26287  26A6  00F3               	movwf	??i1_send_2bytes_latchless_IK+1
 26288  26A7  0A76               	incf	i1send_2bytes_latchless_IK@j,w
 26289  26A8  2EAB               	goto	u407_24
 26290  26A9                     u407_25:	
 26291  26A9  35F2               	lslf	??i1_send_2bytes_latchless_IK,f
 26292  26AA  0DF3               	rlf	??i1_send_2bytes_latchless_IK+1,f
 26293  26AB                     u407_24:	
 26294  26AB  0B89               	decfsz	9,f
 26295  26AC  2EA9               	goto	u407_25
 26296  26AD  0870               	movf	i1send_2bytes_latchless_IK@data,w
 26297  26AE  0572               	andwf	??i1_send_2bytes_latchless_IK,w
 26298  26AF  00F4               	movwf	??i1_send_2bytes_latchless_IK+2
 26299  26B0  0871               	movf	i1send_2bytes_latchless_IK@data+1,w
 26300  26B1  0573               	andwf	??i1_send_2bytes_latchless_IK+1,w
 26301  26B2  00F5               	movwf	??i1_send_2bytes_latchless_IK+3
 26302  26B3  0874               	movf	??i1_send_2bytes_latchless_IK+2,w
 26303  26B4  0475               	iorwf	??i1_send_2bytes_latchless_IK+3,w
 26304  26B5  1903               	btfsc	3,2
 26305  26B6  2EB9               	goto	i1l252
 26306                           
 26307                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 26308  26B7  150E               	bsf	14,2	;volatile
 26309                           
 26310                           ;LEDcomm.c: 58: }
 26311  26B8  2EBA               	goto	i1l254
 26312  26B9                     i1l252:	
 26313                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 26314                           
 26315  26B9  110E               	bcf	14,2	;volatile
 26316  26BA                     i1l254:	
 26317                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 26318                           
 26319  26BA  150C               	bsf	12,2	;volatile
 26320  26BB  30FF               	movlw	255
 26321  26BC  07F6               	addwf	i1send_2bytes_latchless_IK@j,f
 26322  26BD  30FF               	movlw	255
 26323  26BE  3DF7               	addwfc	i1send_2bytes_latchless_IK@j+1,f
 26324  26BF  1FF7               	btfss	i1send_2bytes_latchless_IK@j+1,7
 26325  26C0  2EA2               	goto	i1l246
 26326  26C1                     i1l256:	
 26327                           ;LEDcomm.c: 64: }
 26328                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 26329                           
 26330  26C1  110C               	bcf	12,2	;volatile
 26331  26C2  0008               	return
 26332  26C3                     __end_ofi1_send_2bytes_latchless_IK:	
 26333                           
 26334                           	psect	text165
 26335  217D                     __ptext165:	
 26336 ;; *************** function _TMR0_Write8bitTimer *****************
 26337 ;; Defined at:
 26338 ;;		line 107 in file "mcc_generated_files/tmr0.c"
 26339 ;; Parameters:    Size  Location     Type
 26340 ;;  timerVal        1    wreg     unsigned char 
 26341 ;; Auto vars:     Size  Location     Type
 26342 ;;  timerVal        1    0[COMMON] unsigned char 
 26343 ;; Return value:  Size  Location     Type
 26344 ;;                  1    wreg      void 
 26345 ;; Registers used:
 26346 ;;		wreg
 26347 ;; Tracked objects:
 26348 ;;		On entry : 0/0
 26349 ;;		On exit  : 0/0
 26350 ;;		Unchanged: 0/0
 26351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26355 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26356 ;;Total ram usage:        1 bytes
 26357 ;; Hardware stack levels used:    1
 26358 ;; This function calls:
 26359 ;;		Nothing
 26360 ;; This function is called by:
 26361 ;;		_TMR0_DefaultInterruptHandler
 26362 ;; This function uses a non-reentrant model
 26363 ;;
 26364                           
 26365                           
 26366                           ;psect for function _TMR0_Write8bitTimer
 26367  217D                     _TMR0_Write8bitTimer:	
 26368                           
 26369                           ;incstack = 0
 26370                           ; Regs used in _TMR0_Write8bitTimer: [wreg]
 26371                           ;TMR0_Write8bitTimer@timerVal stored from wreg
 26372  217D  00F0               	movwf	TMR0_Write8bitTimer@timerVal
 26373                           
 26374                           ;tmr0.c: 110: TMR0L = timerVal;
 26375  217E  0870               	movf	TMR0_Write8bitTimer@timerVal,w
 26376  217F  0020               	movlb	0	; select bank0
 26377  2180  0095               	movwf	21	;volatile
 26378  2181  0008               	return
 26379  2182                     __end_of_TMR0_Write8bitTimer:	
 26380                           
 26381                           	psect	text166
 26382  2110                     __ptext166:	
 26383 ;; *************** function _TMR0_StopTimer *****************
 26384 ;; Defined at:
 26385 ;;		line 91 in file "mcc_generated_files/tmr0.c"
 26386 ;; Parameters:    Size  Location     Type
 26387 ;;		None
 26388 ;; Auto vars:     Size  Location     Type
 26389 ;;		None
 26390 ;; Return value:  Size  Location     Type
 26391 ;;                  1    wreg      void 
 26392 ;; Registers used:
 26393 ;;		None
 26394 ;; Tracked objects:
 26395 ;;		On entry : 0/0
 26396 ;;		On exit  : 0/0
 26397 ;;		Unchanged: 0/0
 26398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26403 ;;Total ram usage:        0 bytes
 26404 ;; Hardware stack levels used:    1
 26405 ;; This function calls:
 26406 ;;		Nothing
 26407 ;; This function is called by:
 26408 ;;		_TMR0_DefaultInterruptHandler
 26409 ;; This function uses a non-reentrant model
 26410 ;;
 26411                           
 26412                           
 26413                           ;psect for function _TMR0_StopTimer
 26414  2110                     _TMR0_StopTimer:	
 26415                           
 26416                           ;tmr0.c: 94: T0CON0bits.T0EN = 0;
 26417                           
 26418                           ;incstack = 0
 26419                           ; Regs used in _TMR0_StopTimer: []
 26420  2110  0020               	movlb	0	; select bank0
 26421  2111  1397               	bcf	23,7	;volatile
 26422  2112  0008               	return
 26423  2113                     __end_of_TMR0_StopTimer:	
 26424                           
 26425                           	psect	text167
 26426  247A                     __ptext167:	
 26427 ;; *************** function _EUSART_Transmit_ISR *****************
 26428 ;; Defined at:
 26429 ;;		line 161 in file "mcc_generated_files/eusart.c"
 26430 ;; Parameters:    Size  Location     Type
 26431 ;;		None
 26432 ;; Auto vars:     Size  Location     Type
 26433 ;;		None
 26434 ;; Return value:  Size  Location     Type
 26435 ;;                  1    wreg      void 
 26436 ;; Registers used:
 26437 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26438 ;; Tracked objects:
 26439 ;;		On entry : 0/0
 26440 ;;		On exit  : 0/0
 26441 ;;		Unchanged: 0/0
 26442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26446 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26447 ;;Total ram usage:        1 bytes
 26448 ;; Hardware stack levels used:    1
 26449 ;; This function calls:
 26450 ;;		Nothing
 26451 ;; This function is called by:
 26452 ;;		_INTERRUPT_InterruptManager
 26453 ;; This function uses a non-reentrant model
 26454 ;;
 26455                           
 26456                           
 26457                           ;psect for function _EUSART_Transmit_ISR
 26458  247A                     _EUSART_Transmit_ISR:	
 26459                           
 26460                           ;eusart.c: 165: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 26461                           
 26462                           ;incstack = 0
 26463                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 26464  247A  3008               	movlw	8
 26465  247B  0020               	movlb	0	; select bank0
 26466  247C  025E               	subwf	_eusartTxBufferRemaining,w	;volatile
 26467  247D  1803               	skipnc
 26468  247E  2C95               	goto	i1l438
 26469                           
 26470                           ;eusart.c: 166: {
 26471                           ;eusart.c: 167: TX1REG = eusartTxBuffer[eusartTxTail++];
 26472  247F  0859               	movf	_eusartTxTail,w
 26473  2480  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 26474  2481  0086               	movwf	6
 26475  2482  3001               	movlw	1	; select bank3/4
 26476  2483  0087               	movwf	7
 26477  2484  0801               	movf	1,w
 26478  2485  0023               	movlb	3	; select bank3
 26479  2486  009A               	movwf	26	;volatile
 26480  2487  3001               	movlw	1
 26481  2488  00F0               	movwf	??_EUSART_Transmit_ISR
 26482  2489  0870               	movf	??_EUSART_Transmit_ISR,w
 26483  248A  0020               	movlb	0	; select bank0
 26484  248B  07D9               	addwf	_eusartTxTail,f	;volatile
 26485                           
 26486                           ;eusart.c: 168: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 26487  248C  3008               	movlw	8
 26488  248D  0259               	subwf	_eusartTxTail,w	;volatile
 26489  248E  1803               	btfsc	3,0
 26490                           
 26491                           ;eusart.c: 169: {
 26492                           ;eusart.c: 170: eusartTxTail = 0;
 26493  248F  01D9               	clrf	_eusartTxTail	;volatile
 26494                           
 26495                           ;eusart.c: 171: }
 26496                           ;eusart.c: 172: eusartTxBufferRemaining++;
 26497  2490  3001               	movlw	1
 26498  2491  00F0               	movwf	??_EUSART_Transmit_ISR
 26499  2492  0870               	movf	??_EUSART_Transmit_ISR,w
 26500  2493  07DE               	addwf	_eusartTxBufferRemaining,f	;volatile
 26501                           
 26502                           ;eusart.c: 173: }
 26503  2494  0008               	return
 26504  2495                     i1l438:	
 26505                           
 26506                           ;eusart.c: 174: else
 26507                           ;eusart.c: 175: {
 26508                           ;eusart.c: 176: PIE1bits.TXIE = 0;
 26509  2495  0021               	movlb	1	; select bank1
 26510  2496  1211               	bcf	17,4	;volatile
 26511  2497  0008               	return
 26512  2498                     __end_of_EUSART_Transmit_ISR:	
 26513                           
 26514                           	psect	text168
 26515  2425                     __ptext168:	
 26516 ;; *************** function _EUSART_Receive_ISR *****************
 26517 ;; Defined at:
 26518 ;;		line 180 in file "mcc_generated_files/eusart.c"
 26519 ;; Parameters:    Size  Location     Type
 26520 ;;		None
 26521 ;; Auto vars:     Size  Location     Type
 26522 ;;		None
 26523 ;; Return value:  Size  Location     Type
 26524 ;;                  1    wreg      void 
 26525 ;; Registers used:
 26526 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26527 ;; Tracked objects:
 26528 ;;		On entry : 0/0
 26529 ;;		On exit  : 0/0
 26530 ;;		Unchanged: 0/0
 26531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26535 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26536 ;;Total ram usage:        1 bytes
 26537 ;; Hardware stack levels used:    1
 26538 ;; This function calls:
 26539 ;;		Nothing
 26540 ;; This function is called by:
 26541 ;;		_INTERRUPT_InterruptManager
 26542 ;; This function uses a non-reentrant model
 26543 ;;
 26544                           
 26545                           
 26546                           ;psect for function _EUSART_Receive_ISR
 26547  2425                     _EUSART_Receive_ISR:	
 26548                           
 26549                           ;eusart.c: 183: if(1 == RC1STAbits.OERR)
 26550                           
 26551                           ;incstack = 0
 26552                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 26553  2425  0023               	movlb	3	; select bank3
 26554  2426  1C9D               	btfss	29,1	;volatile
 26555  2427  2C2A               	goto	i1l6583
 26556                           
 26557                           ;eusart.c: 184: {
 26558                           ;eusart.c: 187: RC1STAbits.CREN = 0;
 26559  2428  121D               	bcf	29,4	;volatile
 26560                           
 26561                           ;eusart.c: 188: RC1STAbits.CREN = 1;
 26562  2429  161D               	bsf	29,4	;volatile
 26563  242A                     i1l6583:	
 26564                           
 26565                           ;eusart.c: 189: }
 26566                           ;eusart.c: 192: eusartRxBuffer[eusartRxHead++] = RC1REG;
 26567  242A  0819               	movf	25,w	;volatile
 26568  242B  00F0               	movwf	??_EUSART_Receive_ISR
 26569  242C  0020               	movlb	0	; select bank0
 26570  242D  0858               	movf	_eusartRxHead,w
 26571  242E  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 26572  242F  0086               	movwf	6
 26573  2430  3001               	movlw	1	; select bank3/4
 26574  2431  0087               	movwf	7
 26575  2432  0870               	movf	??_EUSART_Receive_ISR,w
 26576  2433  0081               	movwf	1
 26577  2434  3001               	movlw	1
 26578  2435  00F0               	movwf	??_EUSART_Receive_ISR
 26579  2436  0870               	movf	??_EUSART_Receive_ISR,w
 26580  2437  07D8               	addwf	_eusartRxHead,f	;volatile
 26581                           
 26582                           ;eusart.c: 193: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 26583  2438  3008               	movlw	8
 26584  2439  0258               	subwf	_eusartRxHead,w	;volatile
 26585  243A  1803               	btfsc	3,0
 26586                           
 26587                           ;eusart.c: 194: {
 26588                           ;eusart.c: 195: eusartRxHead = 0;
 26589  243B  01D8               	clrf	_eusartRxHead	;volatile
 26590                           
 26591                           ;eusart.c: 196: }
 26592                           ;eusart.c: 197: eusartRxCount++;
 26593  243C  3001               	movlw	1
 26594  243D  00F0               	movwf	??_EUSART_Receive_ISR
 26595  243E  0870               	movf	??_EUSART_Receive_ISR,w
 26596  243F  07D6               	addwf	_eusartRxCount,f	;volatile
 26597  2440  0008               	return
 26598  2441                     __end_of_EUSART_Receive_ISR:	
 26599  007E                     btemp	set	126	;btemp
 26600  007E                     int$flags	set	126
 26601  007E                     wtemp0	set	126


Data Sizes:
    Strings     538
    Constant    1048
    Data        48
    BSS         162
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     46      63
    BANK1            80     63      79
    BANK2            80      0      80
    BANK3            80      0      69
    BANK4            80     28      60
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           16      0       0
    BANK25            0      0       0

Pointer List with Targets:

    i2c_ISR$2781	PTR const FTN()enum E8364 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    returnStop@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S931$11$0	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_82(CODE[10]), STR_81(CODE[5]), STR_80(CODE[5]), STR_79(CODE[7]), 
		 -> STR_78(CODE[8]), STR_77(CODE[5]), STR_76(CODE[5]), STR_75(CODE[11]), 
		 -> STR_74(CODE[13]), STR_73(CODE[7]), STR_72(CODE[8]), STR_71(CODE[10]), 
		 -> STR_70(CODE[11]), STR_69(CODE[15]), STR_68(CODE[14]), STR_67(CODE[12]), 
		 -> STR_66(CODE[8]), STR_65(CODE[8]), STR_64(CODE[2]), STR_63(CODE[5]), 
		 -> STR_62(CODE[5]), STR_61(CODE[2]), STR_60(CODE[4]), STR_59(CODE[4]), 
		 -> STR_58(CODE[4]), 

    stricmp@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_84(CODE[23]), STR_83(CODE[3]), STR_55(CODE[17]), STR_54(CODE[17]), 
		 -> STR_53(CODE[18]), STR_52(CODE[18]), STR_51(CODE[17]), STR_50(CODE[28]), 
		 -> STR_49(CODE[9]), STR_48(CODE[9]), STR_47(CODE[25]), STR_46(CODE[11]), 
		 -> STR_45(CODE[8]), STR_44(CODE[8]), STR_43(CODE[8]), STR_42(CODE[31]), 
		 -> STR_41(CODE[11]), STR_40(CODE[8]), STR_39(CODE[8]), STR_38(CODE[8]), 
		 -> STR_37(CODE[26]), STR_36(CODE[30]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[3]), STR_32(CODE[2]), STR_31(CODE[4]), STR_30(CODE[2]), 
		 -> STR_29(CODE[4]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[3]), STR_18(CODE[3]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[3]), 
		 -> STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[3]), STR_10(CODE[16]), 
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[13]), 
		 -> STR_5(CODE[15]), STR_4(CODE[16]), STR_3(CODE[2]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    execCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    parseCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    parseCmd@cmdString	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), 

    parseCmd@p	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E8364[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    S931$callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S931$callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S931$data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c1_driver_setI2cISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_i2c_ISR->i1_do_I2C_TX
    i1_do_I2C_TX->i1_i2c1_driver_TXData
    i1_do_I2C_TX->i1_i2c1_driver_isNACK
    i1_do_I2C_TX->i1_returnReset
    i1_do_I2C_TX->i1_returnStop
    i1_do_I2C_SEND_ADR_WRITE->i1_i2c1_driver_TXData
    i1_do_I2C_SEND_ADR_READ->i1_i2c1_driver_TXData
    _TMR2_DefaultInterruptHandler->_TMR2_WriteTimer
    i1_LEDsOn->i1_send_2length_2bytes_IK
    i1_send_2length_2bytes_IK->i1_send_last_2bytes_IK

Critical Paths under _main in BANK0

    _parseCmd->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _stricmp->_toupper
    _atoi->___wmul
    _main_initialize->_LED_setBrightnessRange
    _main_initialize->_LEDsPwr
    _drv_init->_drv_write
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _drv_reset->_drv_write
    _timedActiveHeatOn->_LEDsOn
    _setLEDPwr->_LEDsPwr
    _LEDsPwr->_send_2length_2bytes_IK
    _setLEDBrightnessRange->_LED_setBrightnessRange
    _setHeaterToggle->_LEDsOn
    _setH2OnTime->___ftadd
    _setH1OffTime->___ftadd
    _setDrvPiezoOnTime->___ftadd
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _setDrvGain->_drv_write
    _LED_test_openshort->_LEDsOn
    _LED_testComm->_LED_setBrightnessRange
    _LED_setBrightnessRange->_send_2length_2bytes_IK
    _doMove->_LEDsOn
    _drv_write_DC->_drv_write
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _printf->___llmod
    _putch->_EUSART_Write
    ___llmod->___lldiv
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _LEDsOn->_send_2length_2bytes_IK
    _send_2length_2bytes_IK->_send_last_2bytes_IK
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_DefaultInterruptHandler->i1_LEDsOn
    i1_LEDsOn->i1_send_2length_2bytes_IK

Critical Paths under _main in BANK1

    _main->_doRelMove
    _main_initialize->___fttol
    _drv_init->_drv_reset
    _execCmd->_commCheck
    _zeroPosition->_printf
    _timedActiveHeatOn->_printf
    _stop->_printf
    _startRelMove->_printf
    _startAbsMove->_printf
    _setMoveMask->_printf
    _setLEDPwr->_printf
    _setLEDBrightnessRange->_printf
    _setHeaterToggle->_printf
    _setHeaterPreTime->_printf
    _setHeaterPostTime->_printf
    _setH2OnTime->___fttol
    _setH1OffTime->___fttol
    _setDrvPiezoOnTime->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul
    _setDrvPeak->_printf
    _setDrvGain->_printf
    _setActive->_printf
    _getPosition->_printf
    _getMoveMask->_printf
    _getMotionStatus->_printf
    _getActive->_printf
    _commCheck->_LED_testComm
    _LED_test_openshort->_printf
    _LED_testComm->_LED_readConfig
    _LED_readConfig->_LED_getData
    _LED_getData->_printf
    _doRelMove->_doMove
    _doAbsMove->_doMove
    _doMove->_drv_write_DC
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _drv_read->_printf
    _drv_write->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_doAbsMove

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  397678
                                             62 BANK1      1     1      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                          _doAbsMove
                          _doRelMove
                            _execCmd
                    _main_initialize
                           _parseCmd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _parseCmd                                             6     5      1    7292
                                             37 BANK0      6     5      1
                               _atoi
                            _stricmp
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               6     4      2    1446
                                             31 BANK0      6     4      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               7     3      4     344
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _stricmp                                              6     4      2    2508
                                             19 BANK0      6     4      2
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    1920
                                             23 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1564
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _main_initialize                                      0     0      0   49618
             _LED_setBrightnessRange
                            _LEDsPwr
                _TMR0_Load8bitPeriod
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                           _drv_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drv_init                                             5     1      4   23968
                                             22 BANK1      5     1      4
                          _drv_reset
                          _drv_write
                           _i2c_open
                     _i2c_setAddress
                             _printf
 ---------------------------------------------------------------------------------
 (3) _i2c_setAddress                                       2     2      0      22
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _i2c_open                                             3     3      0     216
                                             19 BANK0      3     3      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setI2cISR                                2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setBusCollisionISR                       2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drv_reset                                            1     1      0    8739
                                             21 BANK1      1     1      0
                          _drv_write
 ---------------------------------------------------------------------------------
 (1) _execCmd                                              1     1      0  270384
                                             55 BANK1      1     1      0
                          _commCheck
                             _doMove
                          _getActive
                    _getMotionStatus
                        _getMoveMask
                        _getPosition
                             _printf
                          _setActive
                         _setDrvGain
                         _setDrvPeak
                  _setDrvPiezoOnTime
                       _setH1OffTime
                        _setH2OnTime
                  _setHeaterPostTime
                   _setHeaterPreTime
                    _setHeaterToggle
              _setLEDBrightnessRange
                          _setLEDPwr
                        _setMoveMask
                       _startAbsMove
                       _startRelMove
                               _stop
                  _timedActiveHeatOn
                       _zeroPosition
 ---------------------------------------------------------------------------------
 (2) _zeroPosition                                        12    10      2    6166
                                             41 BANK0      2     2      0
                                             21 BANK1     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _timedActiveHeatOn                                   13     7      6   11155
                                             21 BANK1     13     7      6
                             _LEDsOn
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stop                                                 2     0      2    6036
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startRelMove                                         2     0      2    6144
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startAbsMove                                         3     1      2    6144
                                             41 BANK0      1     1      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setMoveMask                                          8     4      4    6314
                                             41 BANK0      4     4      0
                                             21 BANK1      4     0      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setLEDPwr                                            4     0      4    9324
                                             21 BANK1      4     0      4
                            _LEDsPwr
                             _printf
 ---------------------------------------------------------------------------------
 (2) _LEDsPwr                                             14    10      4    3072
                                             36 BANK0     10     6      4
                                              0 BANK1      4     4      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (2) _setLEDBrightnessRange                                4     0      4    9669
                                             21 BANK1      4     0      4
             _LED_setBrightnessRange
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterToggle                                      8     4      4   11118
                                             21 BANK1      8     4      4
                             _LEDsOn
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPreTime                                     2     0      2    6144
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPostTime                                    2     0      2    6144
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setH2OnTime                                          2     0      2   19247
                                             29 BANK1      2     0      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setH1OffTime                                         2     0      2   19247
                                             29 BANK1      2     0      2
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TMR2_LoadPeriodRegister                              1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPiezoOnTime                                    4     2      2   19247
                                             29 BANK1      4     2      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     687
                                             15 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    4540
                                             31 BANK0     10     4      6
                                              0 BANK1      6     6      0
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4855
                                             41 BANK0      4     4      0
                                              6 BANK1      9     3      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2999
                                             25 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2404
                                             17 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _TMR0_Load8bitPeriod                                  1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPeak                                           2     0      2    6144
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setDrvGain                                           5     3      2   14929
                                             21 BANK1      5     3      2
                          _drv_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setActive                                           12     8      4    6314
                                             21 BANK1     12     8      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getPosition                                          6     4      2    6206
                                             41 BANK0      4     4      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMoveMask                                          8     6      2    6135
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMotionStatus                                      2     0      2    6036
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getActive                                            8     6      2    6135
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _commCheck                                            3     1      2   40967
                                             52 BANK1      3     1      2
                       _LED_testComm
                 _LED_test_openshort
                           _drv_read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _LED_test_openshort                                   7     3      4   14159
                                             21 BANK1      7     3      4
                             _LEDsOn
                             _printf
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _LED_testComm                                        10     8      2   12668
                                             42 BANK1     10     8      2
                     _LED_readConfig
             _LED_setBrightnessRange
 ---------------------------------------------------------------------------------
 (2) _LED_setBrightnessRange                              14    10      4    3417
                                             36 BANK0     10     6      4
                                              0 BANK1      4     4      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _LED_readConfig                                       5     1      4    8902
                                             41 BANK0      1     1      0
                                             38 BANK1      4     0      4
                        _LED_getData
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (5) _LED_getData                                         17    13      4    6376
                                             21 BANK1     17    13      4
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doRelMove                                           18    18      0   28897
                                             44 BANK1     18    18      0
                             _doMove
 ---------------------------------------------------------------------------------
 (1) _doAbsMove                                           36    36      0   35255
                                             44 BANK1      8     8      0
                                              0 BANK4     28    28      0
                             _doMove
                             _printf
 ---------------------------------------------------------------------------------
 (2) _doMove                                              13    11      2   28637
                                             31 BANK1     13    11      2
                             _LEDsOn
                    _TMR0_StartTimer
                    _TMR2_StartTimer
                     _calcHeaterPins
                       _drv_write_DC
 ---------------------------------------------------------------------------------
 (3) _drv_write_DC                                         7     3      4   23722
                                             24 BANK1      7     3      4
                            ___awdiv
                          _drv_write
                         _fifo_check
                             _printf
 ---------------------------------------------------------------------------------
 (4) _fifo_check                                           2     2      0    8138
                                             45 BANK0      1     1      0
                                             23 BANK1      1     1      0
                           _drv_read
 ---------------------------------------------------------------------------------
 (5) _drv_read                                             6     4      2    8104
                                             41 BANK0      4     4      0
                                             21 BANK1      2     0      2
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drv_write                                            5     4      1    8739
                                             41 BANK0      5     4      1
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              29    23      6    6036
                                              0 BANK1     21    15      6
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                             19 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                             31 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     395
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) _i2c_setBuffer                                        4     0      4     832
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _i2c_masterOperation                                  3     3      0    1104
                                             23 BANK0      3     3      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (5) _mssp1_IRQisEnabled                                   2     2      0       0
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _i2c_poller                                           0     0      0    1036
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (6) _mssp1_waitForEvent                                   1     1      0      42
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              1     1      0     994
                                             22 BANK0      1     1      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                       _mssp1_setIRQ
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            4     4      0     284
                                             18 BANK0      4     4      0
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            1     1      0     216
                                             17 BANK0      1     1      0
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1     216
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     556
                                             17 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _calcHeaterPins                                       4     4      0       0
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LEDsOn                                              10     4      6    4804
                                             36 BANK0     10     4      6
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _send_2length_2bytes_IK                               8     1      7    2387
                                             28 BANK0      8     1      7
           _send_2bytes_latchless_IK
                _send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _send_last_2bytes_IK                                 11     6      5     516
                                             17 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (4) _send_2bytes_latchless_IK                             8     6      2     207
                                             17 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      86
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          1     1      0    1490
                                             12 COMMON     1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
                           _TMR2_ISR
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (13) i1_i2c_ISR                                           1     1      0     690
                                              5 COMMON     1     1      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
               i1_i2c1_driver_isNACK
                   i1_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (14) i1_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX_EMPTY                                   1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                     i1_mssp1_setIRQ
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX                                         4     4      0     208
                                              1 COMMON     4     4      0
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
               i1_i2c1_driver_TXData
               i1_i2c1_driver_isNACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_READ                              0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_TXData                                1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RX                                         1     1      0     140
                                              0 COMMON     1     1      0
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
            i1_i2c1_driver_getRXData
              i1_i2c1_driver_sendACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RESET                                      0     0      0       0
             i1_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RCEN                                       0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ADDRESS_NACK                            1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_returnStop                                        1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_returnReset                                       1     0      1     140
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_STOP                                  0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART                               0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ACK                                     0     0      0       0
              i1_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (14) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0      22
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultInterruptHandler                        0     0      0      22
                     _TMR2_StopTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR2_WriteTimer                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR2_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0     778
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultInterruptHandler                        0     0      0     778
                     _TMR0_StopTimer
                _TMR0_Write8bitTimer
                           i1_LEDsOn
 ---------------------------------------------------------------------------------
 (15) i1_LEDsOn                                           10     4      6     756
                                              7 BANK0     10     4      6
           i1_send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (16) i1_send_2length_2bytes_IK                            8     1      7     586
                                             11 COMMON     1     1      0
                                              0 BANK0      7     0      7
         i1_send_2bytes_latchless_IK
              i1_send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (17) i1_send_last_2bytes_IK                              11     6      5     278
                                              0 COMMON    11     6      5
 ---------------------------------------------------------------------------------
 (17) i1_send_2bytes_latchless_IK                          8     6      2     116
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (15) _TMR0_Write8bitTimer                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _doAbsMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _doRelMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
   _execCmd
     _commCheck
       _LED_testComm
         _LED_readConfig
           _LED_getData
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _LED_setBrightnessRange
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
       _LED_test_openshort
         _LEDsOn
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _drv_read
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
     _getActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMotionStatus
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
     _setActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvGain
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPeak
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPiezoOnTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setH1OffTime
       _TMR2_LoadPeriodRegister
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setH2OnTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPostTime
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPreTime
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterToggle
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDBrightnessRange
       _LED_setBrightnessRange
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDPwr
       _LEDsPwr
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startAbsMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startRelMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _stop
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _timedActiveHeatOn
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _zeroPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
   _main_initialize
     _LED_setBrightnessRange
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _LEDsPwr
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _TMR0_Load8bitPeriod
     _TMR2_LoadPeriodRegister
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _drv_init
       _drv_reset
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _i2c_open
         _i2c1_driver_open
         _i2c1_driver_setBusCollisionISR
         _i2c1_driver_setI2cISR
         _mssp1_clearIRQ
       _i2c_setAddress
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _parseCmd
     _atoi
       ___wmul
       _isdigit
     _stricmp
       _toupper
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _TMR0_StopTimer
       _TMR0_Write8bitTimer
       i1_LEDsOn
         i1_send_2length_2bytes_IK
           i1_send_2bytes_latchless_IK
           i1_send_last_2bytes_IK
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
       _TMR2_StopTimer
       _TMR2_WriteTimer
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c1_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c1_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c1_driver_resetBus
     i1_do_I2C_RX *
       i1_do_I2C_DO_NACK_RESTART
         i1_i2c1_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP
         i1_i2c1_driver_sendNACK
       i1_i2c1_driver_getRXData
       i1_i2c1_driver_sendACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     i1_do_I2C_TX *
       i1_do_I2C_SEND_RESTART_READ
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_i2c1_driver_TXData
       i1_i2c1_driver_isNACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_TX_EMPTY *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_mssp1_setIRQ
       i1_returnReset *
       i1_returnStop *
     i1_i2c1_driver_isNACK *
     i1_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3F      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      45      11       86.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     1C      3C      13       75.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     16D      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     16D      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              10      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jul 21 09:34:25 2018

        i1send_last_2bytes_IK@topOrBottom 0073                              returnReset@p 0031  
        __end_of_TMR2_SetInterruptHandler 223A                                         pc 0002  
            __end_ofdrv2665@drv_fifo_sine 11E8                    setLEDBrightnessRange@r 00B5  
           _do_I2C_SEND_RESTART$intlevel0 21EB                         ??_getMotionStatus 0049  
                             __CFG_CP$OFF 0000                              ___awdiv@sign 0037  
                    __size_of_do_I2C_IDLE 0009                       _do_I2C_SEND_RESTART 21E7  
                            _startAbsMove 245D                      __size_of_do_I2C_RCEN 000A  
                     ___wmul@multiplicand 0033                    i1send_last_2bytes_IK@j 0079  
                    __end_ofi1_returnStop 0802                              ___ftadd@exp1 00AE  
                            ___ftadd@exp2 00AD                               i1_do_I2C_RX 1871  
                             i1_do_I2C_TX 1BBE                               __CFG_LVP$ON 0000  
                            ___ftadd@sign 00AC                                       l210 1D55  
                                     l202 1ECD                                       l220 1D78  
                                     l214 1D5E                                       l231 1D98  
                                     l304 1789                                       l314 17E5  
                                     l227 1D8D                                       l252 2793  
                                     l308 1792                                       l237 1DA2  
                                     l229 1D8F                                       l254 2795  
                                     l246 2779                                       l511 2296  
                                     l256 279D                                       l281 16B7  
                                     l426 2634                                       l756 1DD6  
                                     l772 1993                                       _PR2 001E  
                            __CFG_CPD$OFF 0000                  i1_do_I2C_DO_NACK_RESTART 2169  
            __size_of_i2c_masterOperation 0024                      _returnStop$intlevel0 21A5  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 2330  
                   __size_of_do_I2C_RESET 000B                                       wreg 0009  
                            _startRelMove 240A                           _setHeaterToggle 16FC  
                   __end_ofi1_returnReset 0004                           ?i1_mssp1_setIRQ 0070  
                      i1_i2c1_driver_stop 211F           i2c1_driver_setBusCollisionISR@f 0031  
                                    S8869 2000                  setLEDBrightnessRange@tOB 00B7  
                       setDrvGain@setGain 00B8                              ?_EUSART_Read 0070  
                                    l1101 0772                                      l1104 07A0  
                                    l1107 07BA                                      l1109 07BF  
                                    l1221 09E0                                      l1218 09B9  
                                    l1521 0EF4                                      l1522 0F4A  
                                    l1516 0EF2                                      l2092 23F0  
                                    l1519 0F13                                      l1537 0FFF  
                                    l1802 1416                                      l1803 141E  
                                    l1619 244A                                      l1826 0D3E  
                           i1returnStop@p 0070                                      l5401 1CBE  
                                    l5411 1CC6                                      l1795 1403  
                                    l5413 1CD2                                      l1886 08A6  
                                    l5423 1CED                                      l7201 21F3  
                                    l6401 1FEB                                      l5427 1CF5  
                                    l5419 1CE4                                      l5603 07FE  
                                    l7213 220B                                      l7301 1DB2  
                                    l7223 21AB                                      l7207 2203  
                                    l7311 1DB8                                      l8103 1512  
                                    l6407 1FFB                                      l6351 1AB2  
                                    l6343 1A9B                                      l7305 1DB5  
                                    l7401 2661                                      l8041 0788  
                                    l6361 1AD6                                      l6337 1A96  
                                    l5395 1CB3                                      l7219 21A5  
                                    l7323 1979                                      l5811 27CB  
                                    l7229 2281                                      l7341 1998  
                                    l7501 0EEF                                      l8053 07EE  
                                    l8141 1942                                      l8133 1936  
                                    l6381 1F91                                      l6373 186B  
                                    l5805 27A5                                      l6607 24F6  
                                    l7351 2748                                      l7239 223E  
                                    l7183 21DB                                      l7247 22B9  
                                    l7255 228C                                      l7263 2263  
                                    l7271 21FB                                      l7319 1DF7  
                                    l8311 1B2B                                      l8119 18E9  
                                    l8135 1939                                      l8151 1961  
                                    l8231 176E                                      l5583 2444  
                                    l6391 1FB6                                      l6383 1F9E  
                                    l6367 1840                                      l5807 27AD  
                                    l6359 1AD5                                      l6711 0658  
                                    l6703 063A                                      l7361 274F  
                                    l7281 2723                                      l7337 1995  
                                    l7417 229E                                      l7425 1D0B  
                                    l7513 0F24                                      l7505 0EF6  
                                    l8137 193B                                      l5745 0852  
                                    l8225 1733                                      l6369 1848  
                                    l7355 274B                                      l7195 21EB  
                                    l7291 2729                                      l7347 199B  
                                    l7435 1D39                                      l7427 1D19  
                                    l7451 1906                                      l7371 2629  
                                    l7531 0F6A                                      l8139 193D  
                                    l5771 089D                                      l5763 0882  
                                    l6379 1F99                                      l6731 06A3  
                                    l6723 0685                                      l6715 0667  
                                    l6707 0649                                      l7349 2745  
                                    l7189 21E3                                      l7285 2726  
                                    l7277 271A                                      l7293 1DA9  
                                    l8317 1B67                                      l8149 194E  
                                    l5773 08A9                                      l5765 0890  
                                    l8253 09B6                                      l8245 097D  
                                    l8501 03BC                                      l6397 1FBE  
                                    l7367 2752                                      l7439 1D44  
                                    l7455 191E                                      l7543 0F9D  
                                    l7527 0F59                                      l7631 1A38  
                                    l7623 1A1A                                      l8343 2599  
                                    l8351 25B1                                      l8335 1BB4  
                                    l8271 15D7                                      l8095 14B8  
                                    l8511 040E                                      l8503 03C7  
                                    l6399 1FC2                                      l6751 06F5  
                                    l6743 06D0                                      l6735 06B2  
                                    l6727 0694                                      l6719 0676  
                                    l6671 05C2                                      l6663 05A4  
                                    l7473 1D7A                                      l7465 1D57  
                                    l7297 1DAF                                      l7393 2650  
                                    l7449 18F8                                      l7385 2649  
                                    l7553 0FAB                                      l7537 0F70  
                                    l7641 08D4                                      l8361 0A77  
                                    l8345 25A1                                      l8329 1B78  
                                    l8273 15F3                                      l5777 08B7  
                                    l8521 047B                                      l8513 0422  
                                    l8505 03D2                                      l5793 27D5  
                                    l6761 071D                                      l7459 1929  
                                    l7547 0FA5                                      l7555 0ED3  
                                    l8347 25A9                                      l8291 146B  
                                    l8099 1500                                      l8531 0510  
                                    l8523 0498                                      l8515 0436  
                                    l8507 03E6                                      l5787 231D  
                                    l5795 27DD                                      l6755 0704  
                                    l6747 06DF                                      l6739 06C1  
                                    l6691 060D                                      l6683 05EF  
                                    l6675 05D1                                      l6667 05B3  
                                    l6659 0590                                      l7573 25F0  
                                    l7813 19BC                                      l8613 014B  
                                    l7653 0947                                      l7645 08FA  
                                    l7741 16C6                                      l8365 0AC4  
                                    l8357 0A2E                                      l8293 1491  
                                    l8541 0547                                      l8533 051B  
                                    l8525 04B5                                      l8517 044A  
                                    l8509 03FA                                      l6765 0730  
                                    l6757 070B                                      l7575 25F6  
                                    l7815 19F0                                      l8631 017D  
                                    l7647 0903                                      l7743 16D2  
                                    l7751 16F5                                      l8279 15FD  
                                    l8543 054F                                      l8535 0526  
                                    l8527 04D6                                      l8519 045E  
                                    l5799 27FB                                      l6695 061C  
                                    l6687 05FE                                      l6679 05E0  
                                    l8617 015D                                      l8609 00D9  
                                    l8537 0531                                      l8529 04F3  
                                    l8545 0557                                      l7579 2600  
                                    l7675 232E                                      l8643 02C2  
                                    l8563 0DBF                                      l7747 16EE  
                                    l7691 13EF                                      l7683 13D9  
                                    l7843 0CC6                                      l7931 0C30  
                                    l7915 0BDA                                      l8299 149B  
                                    l8539 053C                                      l6699 062B  
                                    l8637 018D                                      l8565 0DCF  
                                    l7589 178B                                      l7757 161D  
                                    l7829 2581                                      l7861 0CF3  
                                    l7909 0BC1                                      l8583 0E51  
                                    l7599 17B8                                      l7687 13E0  
                                    l7871 0D17                                      l7839 0CBE  
                                    l7943 0C56                                      l7927 0C22  
                                    l8495 0380                                      l8743 1F40  
            TMR0_Load8bitPeriod@periodVal 0031                                      l7697 1408  
                                    l7689 13EA                                      l7881 0D3A  
                                    l7873 0D1B                                      l7849 0CD7  
                                    l8497 0394                                      l8753 1F67  
                                    l7699 1410                                      l7867 0D06  
                                    l7939 0C48                                      l8499 03A8  
                                    l8763 1F39                                      l8755 1F6C  
                                    l7885 0D50                                      l7869 0D12  
                                    l8765 1F3D                                      l8871 1953  
                                    l7879 0D2E                                      l7889 0D62  
                                    l8769 1F85                                      l7899 0D7D  
                         __end_of_LEDsPwr 1F20                                      STR_1 2A4B  
                                    STR_2 2A4B                                      STR_3 2863  
                     drv_init@output_gain 00B6                                      STR_4 2920  
                                    STR_5 294E                                      STR_6 2903  
                                    STR_7 2A55                                      STR_8 2A55  
                                    STR_9 2A55                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    u5025 0859                                      u4335 1CC9  
                                    u5055 0883                                      u4355 1CD3  
                                    _PMD0 0911                                      u4365 1CDD  
                                    u5085 089E                                      u4605 244B  
                                    _PMD1 0912                                      _PMD2 0913  
                                    u4375 1CE5                                      u4615 2450  
                                    _PMD3 0914                                      u7024 2784  
                                    _PMD4 0915                                      u7025 2782  
                                    _PMD5 0916                                      u7115 0F93  
                                    u8100 1711                                      u8005 077C  
                                    u8023 07E2                                      u8015 07AE  
                                    u8200 15CC                                      u8120 1747  
                                    u8040 14D1                                      u7305 08EE  
                                    u8105 170D                                      u7234 17A5  
                                    u8210 15E5                                      u7235 17A3  
                                    u7315 0914                                      u8035 14B6  
                                    u7244 17C5                                      u8300 1B94  
                                    u7245 17C3                                      u8205 15C8  
                                    u8125 1743                                      u8045 14CD  
                                    u8215 15E1                                      u7415 140B  
                                    u7600 1679                                      u8240 1459  
                                    u8305 1B8F                                      u8225 1441  
                                    u8065 1510                                      u9017 1F27  
                                    u8410 0E18                                      u8170 15AA  
                                    u8250 147C                                      u9107 077F  
                                    u8163 09D4                                      u9027 1E6D  
                                    u8420 0E22                                      u7285 255F  
                                    u9117 07B1                                      u8405 0DFF  
                                    u8085 18BE                                      u8245 1455  
                                    u9037 1E79                                      u8510 00F9  
                                    u8430 0E23                                      u8270 1B47  
                    ?_do_I2C_SEND_RESTART 0070                                      u6815 1D0E  
                                    u9127 07E5                                      u8415 0E14  
                                    u8175 15A6                                      u7455 1425  
                                    u7375 13E5                                      u8255 1478  
                                    u9047 1E88                                      u6905 1914  
                                    u9137 1A1B                                      u7625 19DB  
                                    u8505 00D7                                      u8345 0ABD  
                                    u9057 1E9C                                      u8610 01FF  
                                    u8530 0141                                      u7570 165B  
                                    u9147 229A                                      u6835 1D1A  
                                    u6915 191F                                      u8515 00F5  
                                    u7571 1659                                      u8275 1B42  
                                    u7395 13FE                                      u7475 1EC6  
                                    u9067 1EAF                                      u8700 0308  
                                    u8620 026B                                      u8604 01E4  
                                    u8540 0142                                      u8460 0E94  
                                    u7580 165C                                      u6845 1D2E  
                                    u8605 01E2                                      u7805 0D1C  
                                    u7485 1EDB                                      u9077 095E  
                                    u8710 032F                                      u8630 026C  
                                    u8470 0E9E                                      u7590 1678  
                                    u6855 1D3A                                      u8623 0267  
                                    u8615 01FB                                      u8535 013D  
                                    u8455 0E7B                                      u7495 1F03  
                                    u9087 09D7                                      u8720 0341  
                                    u8480 0E9F                                      u8465 0E90  
                                    u9097 17DB                                      u7745 0CF4  
                                    u7905 0BEA                                      u6954 1D69  
                                    u8730 0342                                      u8650 028F  
                                    u6955 1D67                                      u8715 032B  
                                    u8555 015B                                      u7835 0D2F  
                                    u7915 0BFC                                      u8644 0274  
                                    u8580 01DA                                      u6885 18FB  
                                    u8645 0272                                      u8590 01DB  
                                    u6975 1D84                                      u8655 028B  
                                    u8583 01D6                                      u8575 018B  
                                    u7775 0D07                                      u7935 0C31  
                                    u8680 02F5                                      u8665 02C0  
                                    u7945 0C38                                      u8690 0307  
                                    u8675 02D3                                      u8685 02F1  
                                    u7975 0C57                                      u7985 0C5E  
                                    _TMR2 001D                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0008                       ?i1_i2c1_driver_stop 0070  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _atoi 1F8F  
                                    _main 1F20                              ___ftpack@arg 0031  
               __size_of_do_I2C_SEND_STOP 0008                    __size_of_do_I2C_DO_ACK 0008  
                            ___ftpack@exp 0034                           _TMR0_StartTimer 212E  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      _stop 2672  
                       ??i1_do_I2C_DO_ACK 0070                             __CFG_BOREN$ON 0000  
                            ?_LED_getData 00B5                   i1_i2c1_driver_getRXData 2125  
                   ?_do_I2C_SEND_ADR_READ 0070                             __CFG_BORV$LOW 0000  
         ??_i2c1_driver_clearBusCollision 0070                                      start 0050  
                        _setHeaterPreTime 2300                     __size_of_zeroPosition 0075  
                           _i2c_setBuffer 2391                    LED_test_openshort@type 00B5  
                 ??_setLEDBrightnessRange 004E                             __CFG_CSWEN$ON 0000  
                           __CFG_MCLRE$ON 0000                              ___ftmul@cntr 00A4  
                _send_2bytes_latchless_IK 2770                           __end_of_i2c_ISR 2672  
                            ___ftmul@sign 00A5                        timedActiveHeatOn@t 00C0  
                ??_do_I2C_DO_NACK_RESTART 0031                             i1_do_I2C_IDLE 218C  
                            ___fttol@exp1 00BC                              ?_setH2OnTime 00BD  
                           i1_do_I2C_RCEN 219B                              ___fttol@lval 00B8  
                 __end_of_TMR0_Initialize 237C                              _do_I2C_RESET 227D  
                          i1returnReset@p 0070              __size_of_TMR0_Write8bitTimer 0005  
          ??_TMR0_DefaultInterruptHandler 007C                             ?_EUSART_Write 0070  
          __size_of_OSCILLATOR_Initialize 000A             __end_of_OSCILLATOR_Initialize 225F  
                    ??i1_i2c1_driver_stop 0070                                     ?_atoi 0037  
                __end_of_i2c1_driver_open 180A                                     ?_main 0070  
                         __end_of___awdiv 1CFA                  __end_of_i2c1_driver_stop 213D  
                         __end_of___ftadd 0DA3                                     STR_10 2910  
                                   STR_11 2A55                                     STR_20 2A55  
                                   STR_12 2A47                                     STR_21 2A55  
                                   STR_13 2A55                                     STR_30 2863  
                                   STR_22 2A55                                     STR_14 2A58  
                                   STR_23 2A55                                     STR_15 2A55  
                                   STR_31 2A4B                                     STR_32 2863  
                                   STR_24 2A55                                     STR_16 2A55  
                                   STR_40 2A07                                     STR_25 2A55  
                                   STR_17 2A55                                     STR_33 2A5E  
                                   STR_41 29A6                             __CFG_WDTE$OFF 0000  
                                   STR_34 2A55                                     STR_18 2A55  
                                   STR_26 2A58                                     STR_50 2865  
                                   STR_42 2828                      send_last_2bytes_IK@j 003A  
                                   STR_27 2A55                                     STR_19 2A55  
                                   STR_43 29FF                                     STR_35 2A5B  
                                   STR_51 28FF                                     STR_44 29F7  
                                   STR_28 2A58                                     STR_60 2A43  
                                   STR_52 28CB                                     STR_36 2847  
                                   STR_53 28CB                                     STR_45 2A07  
                                   STR_29 2A4B                                     STR_61 2A41  
                                   STR_37 2881                                     STR_46 29A6  
                                   STR_62 2A22                                     STR_38 29FF  
                                   STR_70 2990                                     STR_54 28DD  
                                   STR_63 2A2C                                     STR_39 29F7  
                                   STR_71 29B1                                     STR_55 28EE  
                                   STR_47 289B                                     STR_56 2A0D  
                                   STR_64 2A63                                     STR_80 2A36  
                                   STR_72 29E7                                     STR_48 29CE  
                                   STR_57 2A0D                                     STR_81 2A31  
                                   STR_73 2A16                                     STR_65 29D7  
                                   STR_49 29C5                                     STR_58 2A3B  
                                   STR_66 29DF                                     STR_82 29BB  
                                   STR_74 296B                                     STR_83 28C8  
                                   STR_59 2A3F                                     STR_75 299B  
                                   STR_67 2984                                     STR_76 2A1D  
                                   STR_68 295D                                     STR_84 28B4  
                                   STR_77 2A27                                     STR_69 293F  
                                   STR_78 29EF                                     STR_79 2A0F  
                         __end_of___lldiv 1D4D                                     ?_stop 00B5  
                         __end_of___ftmul 0C89                           ___awdiv@divisor 0031  
                         __end_of___llmod 1932                           __end_of___fttol 08C0  
                                   _T2CON 001F                __end_of_i2c1_driver_TXData 21B3  
                          __CFG_DEBUG$OFF 0000                          __end_ofi1_LEDsOn 2555  
                                   i1l210 1A4B                                     i1l220 1A6A  
                                   i1l214 1A53                                     i1l231 1A84  
                                   i1l227 1A7C                                     i1l252 26B9  
                                   i1l237 1A8B                                     i1l229 1A7D  
                                   i1l254 26BA                                     i1l246 26A2  
                                   i1l256 26C1                                     i1l362 0013  
                                   i1l371 0043                                     i1l365 0022  
                                   i1l438 2495                                     i1l367 002F  
                                   i1l376 004B                                     i1l369 0039  
                                   i1l756 1BEA                                     i1l772 188B  
                         ___awdiv@counter 0036                          __end_of_LEDpower 2A63  
                                   _OSCEN 091D                                     _TMR0H 0016  
                                   _TMR0L 0015                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                      __end_ofsin@coeff_a 293F                        __end_ofsin@coeff_b 2984  
       __size_of_TMR0_SetInterruptHandler 0009             i1send_2length_2bytes_IK@data1 0020  
           i1send_2length_2bytes_IK@data2 0022                 ?_TMR0_SetInterruptHandler 0031  
                             i2c_open@ret 0034                          __end_of_TMR0_ISR 22E6  
                        __end_of_TMR2_ISR 22F3                           __end_of_execCmd 056A  
                      __size_ofi1_i2c_ISR 0020                             ___awtoft@sign 003E  
              __end_of_i2c1_driver_isNACK 2300                           __end_of_dpowers 2828  
                          _WDT_Initialize 216D                                     _errno 015E  
                       _timedActiveHeatOn 0958                           __end_of_isdigit 0800  
            ?i1_do_I2C_SEND_RESTART_WRITE 0070                ?_do_I2C_SEND_RESTART_WRITE 0070  
                           ___ftpack@sign 0035                                     atoi@a 003C  
                                   atoi@s 003E                                     _putch 21B3  
                   ??_do_I2C_SEND_RESTART 0031                 send_2bytes_latchless_IK@j 0037  
                       ?i1_mssp1_clearIRQ 0070    __end_of_i2c1_driver_setBusCollisionISR 224C  
 __size_of_i2c1_driver_setBusCollisionISR 0009            _i2c1_driver_setBusCollisionISR 2243  
                            _zeroPosition 14A8                                     pclath 000A  
                      setDrvPiezoOnTime@t 00BD                   __size_of_mssp1_clearIRQ 0003  
                    i1_i2c1_driver_TXData 2187                        ?_timedActiveHeatOn 00B5  
      __end_ofi1_send_2bytes_latchless_IK 26C3                i1_send_2bytes_latchless_IK 269A  
                    setLEDPwr@topOrBottom 00B7                            _i2c_setAddress 220F  
                  ?_do_I2C_SEND_ADR_WRITE 0070                                     status 0003  
                      ??i1_mssp1_clearIRQ 0070                                     wtemp0 007E  
                         _TMR2_StartTimer 2131                           __end_of_stricmp 1871  
        __size_of_TMR2_LoadPeriodRegister 0005                           __end_of_strcspn 27D0  
                         __end_of_toupper 231F                         ??_main_initialize 004E  
                          ?_i2c_setBuffer 0031                       _send_last_2bytes_IK 1D4D  
                    i1_i2c1_driver_isNACK 22A9                         _setHeaterPostTime 2355  
                     ??_timedActiveHeatOn 00BB                             _fsmStateTable 0220  
                         __initialization 0052            __size_ofi1_do_I2C_SEND_RESTART 0004  
                              _i2c_poller 229E             __end_ofi1_do_I2C_SEND_RESTART 215D  
                          _remainingSteps 0142                              __end_of_atoi 2000  
                              _i2c_status 0120                            ?i1_do_I2C_IDLE 0070  
                            __end_of_main 1F8F                        ?_setHeaterPostTime 00B5  
                          ?i1_do_I2C_RCEN 0070                              __end_of_stop 269A  
               LED_readConfig@topOrBottom 00C6                __end_ofi1_do_I2C_SEND_STOP 2161  
                        __end_of_i2c_open 1B24                            ??_EUSART_Write 0031  
                 __end_of_TMR2_Initialize 2342                             ?_setH1OffTime 00BD  
             ?_INTERRUPT_InterruptManager 0070                             ?_LED_testComm 00CA  
                 __end_of_setHeaterToggle 1779                            i1_do_I2C_RESET 21B9  
                           _do_I2C_DO_ACK 21F7                                    ??_atoi 0039  
                _TMR2_SetInterruptHandler 2231                                    ??_main 00DE  
                           ___fttol@sign1 00B7                       ??_setHeaterPostTime 0049  
                                  ??_stop 0049             __size_of_i2c1_driver_sendNACK 0004  
                         _TMR2_WriteTimer 2182                      ?_send_last_2bytes_IK 0031  
                           ?_drv_write_DC 00B8                                 ??_LEDsPwr 0048  
                  __end_of_WDT_Initialize 2171             __size_of_i2c1_driver_resetBus 0001  
                             drv_read@reg 004B                        setHeaterPostTime@t 00B5  
               __end_of_timedActiveHeatOn 0A0D                   ?_do_I2C_DO_ADDRESS_NACK 0070  
                            ?_setMoveMask 00B5                        setHeaterToggle@num 00B5  
                        _piezo_on_time_ms 00EB                   __end_of_TMR0_StartTimer 2131  
                           _drv_fifo_sine 1000                          ___llmod@dividend 0043  
                    __size_of_getMoveMask 004D                          ___awdiv@dividend 0033  
                        __end_of___awtoft 2598                                    _ANSELA 018C  
                                  ?_putch 0070                                    _ANSELB 018D  
                                  _ANSELC 018E                    __end_of_i2c_setAddress 2217  
                        __end_of___ftpack 1435                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 0017                                    _T0CON1 0018  
                 ?i1_do_I2C_SEND_ADR_READ 0070                      drv2665@drv_fifo_sine 10F4  
                   ?i1_i2c1_driver_TXData 0070                                    _RC1REG 0199  
                                  _RC1STA 019D                                    _ODCONA 028C  
                                  _ODCONB 028D                                    _ODCONC 028E  
                                  i1l5273 1A6B                                    i1l5265 1A4D  
                                  i1l8001 0800                                    i1l8005 0002  
                                  i1l6413 21B9                                    i1l6423 218C  
               ??i1_i2c1_driver_getRXData 0070                                    i1l6447 219B  
                                  i1l8403 25C8                                    i1l8413 1BC7  
                                  i1l8405 1BBE                                    i1l6583 242A  
                                  i1l8431 1C06                                    i1l8423 1BCD  
                                  i1l8417 1BCA                                    i1l8409 1BC4  
                                  i1l8435 1871                                    i1l8461 26EC  
                                  i1l8453 1890                                    i1l8463 26EF  
                                  i1l8367 21C7                                    i1l8375 21C0  
                                  i1l8383 2161                                    i1l8473 26F6  
                                  i1l8393 25C2                                    i1l8449 188D  
                                  i1l8467 26F2                                    i1l8459 1893  
                                  u400_24 1A5C                                    u400_25 1A5A  
                                  i1l8397 25C5                                    i1l8389 25BB  
                                  i1l8479 26F9                                    i1l8665 24E4  
                                  i1l8657 24D4                                    i1l7971 2155  
                                  i1l7965 2151                                    i1l7983 215D  
                                  i1l7977 2159                                    i1l7995 2169  
                                  u402_25 1A74                                    i1l7989 2165  
                                  _LEDsOn 2555                                    u407_24 26AB  
                                  u407_25 26A9             ??i1_do_I2C_SEND_RESTART_WRITE 0070  
                                  u517_25 253E                                    _OSCFRQ 091F  
                  ??_do_I2C_SEND_ADR_READ 0032                           drv_write_DC@val 00B8  
                                  _TX1REG 019A                      __size_of_getPosition 003F  
                                  _WDTCON 0097                                    _TX1STA 019E  
                               ??_i2c_ISR 0036               __size_of_LED_test_openshort 007C  
               __end_of_setHeaterPostTime 2368                     ?i1_i2c1_driver_isNACK 0070  
                          __CFG_PWRTE$OFF 0000             LED_test_openshort@topOrBottom 00B7  
                   _i2c1_driver_getRXData 2140                       LED_getData@readData 00C0  
                 __size_of_LED_readConfig 0029                       _do_I2C_RX$intlevel0 1979  
                   __size_ofi1_returnStop 0002               __end_of_do_I2C_DO_NACK_STOP 2207  
                       __end_ofi1_i2c_ISR 24F4                                    ___wmul 2441  
                               ??___awdiv 0035     __end_of_i2c1_driver_clearBusCollision 2119  
  __size_of_i2c1_driver_clearBusCollision 0003             _i2c1_driver_clearBusCollision 2116  
                               ??___ftadd 0049                            __CFG_STVREN$ON 0000  
                                  _doMove 073B                                 ??___lldiv 0039  
                               ??___ftmul 0045                                 ??___llmod 0047  
                               ??___fttol 00B3               i1send_2bytes_latchless_IK@j 0076  
         __size_of_do_I2C_DO_NACK_RESTART 0008                         startAbsMove@steps 00B5  
                          ??_setH1OffTime 004D                          __end_of_drv_init 1EBC  
                        __end_of_drv_read 1A44                    __end_ofi1_do_I2C_RESET 21C0  
                        __end_of_drv_sine 13CC                   ?_send_2length_2bytes_IK 003C  
                     _EUSART_Transmit_ISR 247A                            ??_LED_testComm 00CC  
                        ?_TMR0_Initialize 0070                          ___awdiv@quotient 0038  
                          ?_do_I2C_DO_ACK 0070                          __end_of_parseCmd 073B  
                                  _printf 0ECE                                    _strchr 23F0  
                                  _strtok 1A8D                                    _strspn 27D0  
                               ??_execCmd 004E                     ___ftmul@f3_as_product 00A1  
                  i2c1_driver_setI2cISR@f 0031                     i2c_setAddress@address 0032  
                   ??_send_last_2bytes_IK 0036               __end_of_i2c1_driver_sendACK 2175  
                          _PMD_Initialize 21CF            __end_of_do_I2C_DO_ADDRESS_NACK 2741  
                          ??_drv_write_DC 00BC                                 ??_isdigit 0031  
                         ?_WDT_Initialize 0070               __end_of_i2c1_driver_restart 213A  
                            ?_returnReset 0031                   timedActiveHeatOn@onTime 00B5  
           _do_I2C_DO_NACK_STOP$intlevel0 2203                     _i2c1_driver_setI2cISR 224C  
             __end_of_i2c1_driver_startRX 2140                        LEDsPwr@topOrBottom 0046  
       __size_ofi1_do_I2C_DO_ADDRESS_NACK 0024            __end_ofi1_do_I2C_SEND_ADR_READ 21CF  
                 __end_of_TMR2_StartTimer 2134  TMR2_SetInterruptHandler@InterruptHandler 0031  
TMR0_SetInterruptHandler@InterruptHandler 0031                 ?i1_do_I2C_DO_ADDRESS_NACK 0070  
           timedActiveHeatOn@topOrBorBoth 00B9                                 ??_stricmp 0035  
                               ??_strcspn 003A                                 ??_toupper 0031  
                    ?_EUSART_Transmit_ISR 0070                           ?_i2c_setAddress 0070  
                       i1_do_I2C_TX_EMPTY 26EC                      __size_of_EUSART_Read 0020  
                       _SYSTEM_Initialize 237C            __size_ofi1_send_last_2bytes_IK 0049  
                 __end_of__initialization 00C1             __end_ofi1_send_last_2bytes_IK 1A8D  
                         ??_i2c_setBuffer 0035            _do_I2C_SEND_ADR_READ$intlevel0 22B9  
                        _do_I2C_SEND_STOP 21EF                              i1_returnStop 0800  
                              ___ftadd@f1 00A6                                ___ftadd@f2 00A9  
                         _getMotionStatus 2598                     i1_do_I2C_DO_NACK_STOP 2165  
                      __size_of_do_I2C_RX 0044                        __size_of_do_I2C_TX 0059  
                      ?i1_do_I2C_TX_EMPTY 0070                        ?_SYSTEM_Initialize 0070  
                      __size_of_doAbsMove 02B3                          _moveVector_downs 004E  
              __end_of_mssp1_IRQisEnabled 2273                       _i2c_masterOperation 25DF  
                __size_of_do_I2C_TX_EMPTY 002F                                ___awtoft@c 0039  
                               ?i1_LEDsOn 0027                           ??i1_do_I2C_IDLE 0070  
                         ??i1_do_I2C_RCEN 0070                                ___ftmul@f1 003F  
                              ___ftmul@f2 0042                __end_of_mssp1_waitForEvent 229E  
                    __size_of_LED_getData 0087                                ___fttol@f1 00AF  
                             ?_i2c_poller 0070                            __pcstackCOMMON 0070  
              ??i1_do_I2C_DO_NACK_RESTART 0070                       _do_I2C_TX$intlevel0 1DA9  
                     ??i1_do_I2C_TX_EMPTY 0070            __end_of_send_2length_2bytes_IK 23D6  
                            __pidataBANK0 13CC                              __pidataBANK1 2179  
                            __pidataBANK2 2217                              __pidataBANK4 2514  
                     ??_SYSTEM_Initialize 0033                                _absCommand 013E  
                               ?_TMR0_ISR 0070                                 ?_TMR2_ISR 0070  
                      __size_of_doRelMove 012B                   __end_of_TMR2_WriteTimer 2187  
                   i1_i2c1_driver_sendACK 2149                     i1i2c1_driver_TXData@d 0070  
                         ?i1_do_I2C_RESET 0070                             __end_of_putch 21B9  
                        ?_TMR2_Initialize 0070                     i1_i2c1_driver_restart 211C  
       __size_ofi1_send_2length_2bytes_IK 0018                    __end_of_PMD_Initialize 21D7  
                        ?_setHeaterToggle 00B5                      __size_of_setH2OnTime 004E  
               ?i1_send_2length_2bytes_IK 0020                        __size_of_getActive 004D  
                            ?i1_do_I2C_RX 0070                              ?i1_do_I2C_TX 0070  
                   i1_i2c1_driver_startRX 2122                          ??i1_mssp1_setIRQ 0070  
                    ?_i2c_masterOperation 0070              ??i1_do_I2C_SEND_RESTART_READ 0070  
                      __size_of_commCheck 00C7                  __end_of_setHeaterPreTime 230F  
                            LED_getData@j 00C4                __size_of_timedActiveHeatOn 00B5  
                         i1_do_I2C_DO_ACK 2161               __end_of_TMR0_Load8bitPeriod 2196  
               __end_ofi1_do_I2C_TX_EMPTY 2716                          ?_TMR0_StartTimer 0070  
                  _do_I2C_DO_NACK_RESTART 2207                    ??i1_i2c1_driver_TXData 0070  
                          _do_I2C_TX$1134 0034                 __end_of_SYSTEM_Initialize 2391  
                   ??_EUSART_Transmit_ISR 0070                                   ??_putch 0033  
                          _mssp1_clearIRQ 2146                                __pbssBANK0 004E  
                              __pbssBANK1 00DF                                __pbssBANK2 0120  
                              __pbssBANK3 01A0                   __size_of_calcHeaterPins 0076  
                     _TMR0_Write8bitTimer 217D                ??_send_2bytes_latchless_IK 0033  
                    __end_of_EUSART_Write 264C                                   ?_LEDsOn 0044  
                          _moveVector_ups 00E7                   _TMR2_LoadPeriodRegister 2196  
                               ?_i2c_open 0070                   drv_write_DC@duration_ms 00BA  
                              _activeMask 00E3                  ??i1_i2c1_driver_sendNACK 0070  
                         drv2665@drv_sine 11E8                        __size_of_drv_reset 000A  
                  ??i1_i2c1_driver_isNACK 0070                __size_of_setHeaterPostTime 0013  
                      __size_of_drv_write 0024               __size_of_EUSART_Receive_ISR 001C  
                      __size_of_setLEDPwr 001E                    ?_i2c1_driver_getRXData 0070  
                ??i1_i2c1_driver_resetBus 0070                              drv_read@buff 004C  
                              ??i1_LEDsOn 002D                     _do_I2C_IDLE$intlevel0 223E  
                          _SSP1DATPPSbits 0E21              __size_of_i2c_busCollisionISR 0003  
                              __pmaintext 1F20                                doAbsMove@i 00CE  
                           ??_do_I2C_IDLE 0031                        __size_of_setActive 0076  
                           ??_do_I2C_RCEN 0031          __end_of_TMR0_SetInterruptHandler 2231  
                 __size_of_TMR0_StopTimer 0003            __size_of_setLEDBrightnessRange 001E  
                                 ?___wmul 0031             __end_of_setLEDBrightnessRange 24B6  
                              ??_TMR0_ISR 007C                           __CFG_PPS1WAY$ON 0000  
                              _cmd_struct 01B8                                ??_TMR2_ISR 0071  
                                 ?_doMove 00BF                           ??_do_I2C_DO_ACK 0031  
                              __pintentry 0004                         startRelMove@steps 00B5  
                   setHeaterToggle@topOrB 00B7                      ?_TMR0_Write8bitTimer 0070  
                     i2c_setBuffer@buffer 0031                                 ?___awtoft 0039  
                               ?___ftpack 0031                            _SSP1CLKPPSbits 0E20  
                                 ?_printf 00A0                           ?_PMD_Initialize 0070  
                              _fifo_check 231F                                   ?_strchr 0031  
          ?_i2c1_driver_clearBusCollision 0070                                   ?_strtok 003F  
                                 ?_strspn 0038                     ??_i2c_masterOperation 0037  
                       ?_i2c1_driver_open 0070                         __end_of_do_I2C_RX 19B9  
                       __end_of_do_I2C_TX 1DFE                         ?_i2c1_driver_stop 0070  
                           _eusartRxCount 0056                         __end_of_doAbsMove 0378  
                ?i1_do_I2C_SEND_ADR_WRITE 0070                                   _SP1BRGH 019C  
                                 _SP1BRGL 019B                    ?_i2c1_driver_setI2cISR 0031  
                                 _LEDsPwr 1EBC                        ??_i2c1_driver_open 0031  
                      ??_i2c1_driver_stop 0031                                   _OSCCON1 0919  
                                 _OSCCON3 091B                             ?_mssp1_setIRQ 0070  
                         _main_initialize 0AD4                                   _NVMADRH 0892  
                                 _NVMADRL 0891                                   _NVMDATH 0894  
                                 _OSCTUNE 091E                                   _NVMDATL 0893  
                                 _NVMCON2 0896                                   _SSP1ADD 0212  
                                 _SSP1BUF 0211                    __end_of_mssp1_clearIRQ 2149  
                                 _SSP1MSK 0213                   __end_of_getMotionStatus 25BB  
                 __size_of_TMR2_StopTimer 0003                       __size_of_i2c_poller 000B  
                            setH2OnTime@t 00BD                          ?_TMR2_StartTimer 0070  
                 ??_do_I2C_SEND_ADR_WRITE 0032       _do_I2C_SEND_RESTART_WRITE$intlevel0 21E3  
                       __end_of_doRelMove 0ECE               ??_do_I2C_SEND_RESTART_WRITE 0031  
                    __size_of_setMoveMask 0073                      __end_of_setH1OffTime 1C5A  
                  ?i1_do_I2C_DO_NACK_STOP 0070                        _i2c1_driver_TXData 21AD  
                    __end_of_LED_testComm 1680                                ??_i2c_open 0033  
                               ?_drv_init 00B6                                 ?_drv_read 00B5  
                         __size_of_LEDsOn 0021                        _i2c1_driver_i2cISR 0164  
             ?i1_send_2bytes_latchless_IK 0070         LED_setBrightnessRange@topOrBottom 0046  
                       __end_of_getActive 1B71                                   _i2c_ISR 264C  
                               ?_parseCmd 0045                         __end_of_commCheck 0AD4  
                    __end_of_drv_write_DC 19FD                     _returnReset$intlevel0 21AB  
                   _do_I2C_RCEN$intlevel0 2263                        _i2c1_driver_isNACK 22F3  
                     ?_i2c1_driver_TXData 0070                              drv_write@reg 004B  
              ??_TMR2_SetInterruptHandler 0033                            _LED_readConfig 26C3  
        _do_I2C_DO_ADDRESS_NACK$intlevel0 271A                        __end_of_TMR0_RANGE 2A55  
                      __end_of_TMR2_RANGE 2A52                    ?i1_i2c1_driver_sendACK 0070  
                              doRelMove@j 00DC                    __size_ofi1_returnReset 0002  
                                 ___awdiv 1CA8                                   ___ftadd 0C89  
                                 ___lldiv 1CFA                 __size_ofi1_mssp1_clearIRQ 0003  
                         __size_of___wmul 001C                                   ___ftmul 0BA8  
                                 ___llmod 18EF                                   ___fttol 0839  
                   ??_TMR0_Write8bitTimer 0070                           __size_of_doMove 00B6  
                  ?i1_i2c1_driver_restart 0070                          ?_TMR2_WriteTimer 0070  
                       ??_do_I2C_TX_EMPTY 0031                       ?_i2c1_driver_isNACK 0070  
                                 _cmdRead 0160                    ?i1_i2c1_driver_startRX 0070  
                              ??___awtoft 003C                                ??___ftpack 0036  
                 __end_ofi1_do_I2C_DO_ACK 2165                                   __ptext1 056A  
                                 __ptext2 1A8D                                   __ptext3 27D0  
                                 __ptext4 27A0                                   __ptext5 23F0  
                                 __ptext6 183D                                   __ptext7 230F  
                                 __ptext8 1F8F                                   __ptext9 07F1  
             __size_ofi1_i2c1_driver_stop 0003                       __end_of_do_I2C_IDLE 2243  
                         __size_of_printf 0132                       __end_of_do_I2C_RCEN 2269  
                       __end_of_drv_reset 227D                                   _execCmd 0378  
                         __size_of_strchr 001A                           __size_of_strtok 004B  
                         __size_of_strspn 0030                         __end_of_drv_write 2627  
                                 _dpowers 2800                  ??_LED_setBrightnessRange 0048  
                   _OSCILLATOR_Initialize 2255                                   _readIdx 0052  
                               _T2CONbits 001F                                   doMove@t 00C6  
                                 _isdigit 07F1                            setActive@onOff 00B7  
                       __end_of_setLEDPwr 24D4               __end_of_do_I2C_SEND_RESTART 21EF  
                          ??_mssp1_setIRQ 0031                      ??_i2c1_driver_TXData 0031  
                ??_PIN_MANAGER_Initialize 0031                    i2c_masterOperation@ret 0039  
                      i1_do_I2C_SEND_STOP 215D                   __end_ofdrv2665@drv_sine 12DA  
                       __end_of_setActive 1609                           ?_mssp1_clearIRQ 0070  
              _do_I2C_SEND_STOP$intlevel0 21F3                __size_ofi1_do_I2C_TX_EMPTY 002A  
               ??_TMR2_LoadPeriodRegister 0031                  _do_I2C_SEND_RESTART_READ 21D7  
              __size_of_SYSTEM_Initialize 0015                                _setDrvGain 1932  
                       setActive@probeNum 00B5                                   clrloop0 22C2  
                              _setDrvPeak 2342                                   _stricmp 183D  
                                 _strcspn 27A0                                   _toupper 230F  
                    __size_of_returnReset 0006                      end_of_initialization 00C1  
                    drv_init@idle_timeout 00B8                      ??_i2c1_driver_isNACK 0031  
                              _second_top 015A                                getActive@i 00B7  
             TMR0_Write8bitTimer@timerVal 0070                                ??_drv_init 00BA  
                              ??_drv_read 0049                              setLEDPwr@pwr 00B5  
                                 init_ram 22CD              __end_of_i2c1_driver_sendNACK 2179  
                     ?i1_do_I2C_SEND_STOP 0070                                   initloop 22CE  
         __size_ofi1_i2c1_driver_sendNACK 0004                                ??_parseCmd 0046  
                  __end_of_LED_readConfig 26EC                         _EUSART_Initialize 23D6  
            __end_of_i2c1_driver_resetBus 2110                           ___lldiv@divisor 0031  
         __size_ofi1_i2c1_driver_resetBus 0001                           ___lldiv@counter 003E  
                      ?_EUSART_Initialize 0070                                   printf@c 00B4  
                                 printf@f 00A0                                _motionType 0055  
               _do_I2C_SEND_RESTART_WRITE 21DF                         LEDsOn@topOrBottom 0048  
                   i1_do_I2C_SEND_RESTART 2159          __end_ofi1_do_I2C_DO_ADDRESS_NACK 25DF  
         __end_ofi1_do_I2C_SEND_ADR_WRITE 21C7                       ??_EUSART_Initialize 0031  
                        ??_WDT_Initialize 0031                                 i1_i2c_ISR 24D4  
                    ??i1_do_I2C_SEND_STOP 0070                                   strspn@i 003C  
                              _returnStop 21A1                   __end_of_main_initialize 0BA8  
                _TMR0_SetInterruptHandler 2228                               ?_fifo_check 0070  
                               _PORTCbits 000E                  __end_of_do_I2C_SEND_STOP 21F7  
      __end_ofi1_do_I2C_SEND_RESTART_READ 2155                i1_do_I2C_SEND_RESTART_READ 2151  
                    __size_ofi1_do_I2C_RX 003F                      __size_ofi1_do_I2C_TX 004E  
                  _inter_step_interval_ms 0168                          ??_i2c_setAddress 0031  
                           ??_getMoveMask 0049                     __size_of_EUSART_Write 0025  
                           i1_returnReset 0002                               returnStop@p 0031  
                        ?_getMotionStatus 00B5                             ??_getPosition 0049  
                     LED_test_openshort@j 00BA                          __CFG_FEXTOSC$OFF 0000  
                          _calcHeaterPins 151D          __end_of_send_2bytes_latchless_IK 27A0  
              __end_of_LED_test_openshort 16FC                   TMR2_WriteTimer@timerVal 0070  
                               _RXPPSbits 0E24                 __end_of_EUSART_Initialize 23F0  
          send_last_2bytes_IK@latch_start 0033               LED_setBrightnessRange@range 0044  
                          __end_of_LEDsOn 2576          __end_ofi1_send_2length_2bytes_IK 23BE  
                         ?_LED_readConfig 00C6             __size_of_do_I2C_SEND_ADR_READ 000C  
                        ??i1_do_I2C_RESET 0070                               ___ftmul@exp 00A0  
                            ??_i2c_poller 0037                            _TMR0_StopTimer 2110  
                             _do_I2C_IDLE 223A                               _do_I2C_RCEN 225F  
                       __size_ofi1_LEDsOn 0021                   LED_testComm@topOrBottom 00CA  
    __end_of_TMR2_DefaultInterruptHandler 2228     __size_of_TMR2_DefaultInterruptHandler 0009  
            _TMR2_DefaultInterruptHandler 221F               __end_of_send_last_2bytes_IK 1DA5  
                           ?_startAbsMove 00B5                            __end_of___wmul 245D  
                          __end_of_doMove 07F1                              _EUSART_Write 2627  
                       __size_of_TMR0_ISR 000D                                ?i1_i2c_ISR 0070  
                       __size_of_TMR2_ISR 000D                        _mssp1_IRQisEnabled 2269  
                  i1_i2c1_driver_sendNACK 214D                          ?i1_do_I2C_DO_ACK 0070  
                  ?_OSCILLATOR_Initialize 0070              __size_of_do_I2C_DO_NACK_STOP 0008  
        TMR2_LoadPeriodRegister@periodVal 0031                            __end_of_printf 1000  
                      _mssp1_waitForEvent 2293       __size_ofi1_send_2bytes_latchless_IK 0029  
                  i1_i2c1_driver_resetBus 210E                            __end_of_strchr 240A  
         __size_of_LED_setBrightnessRange 0098                   ?_do_I2C_DO_NACK_RESTART 0070  
                          __end_of_strtok 1AD8                            __end_of_strspn 2800  
                       setHeaterPreTime@t 00B5                       start_initialization 0052  
                           ?_startRelMove 00B5                         ?_setHeaterPreTime 00B5  
                     _i2c_busCollisionISR 2119                     __size_of_setH1OffTime 004E  
                __size_of_TMR0_Initialize 0014           __size_of_PIN_MANAGER_Initialize 0033  
                     ?_mssp1_IRQisEnabled 0070                            ?i1_returnReset 0070  
                ?i1_i2c1_driver_getRXData 0070                    __end_of_calcHeaterPins 1593  
                   __size_of_LED_testComm 0077                            _TMR2_StopTimer 2113  
                           ??_EUSART_Read 0031       __end_ofi1_do_I2C_SEND_RESTART_WRITE 2159  
             i1_do_I2C_SEND_RESTART_WRITE 2155                              _first_bottom 0156  
                      ??_setHeaterPreTime 0049                               ?_setDrvGain 00B5  
                             ?_setDrvPeak 00B5                       ?_mssp1_waitForEvent 0070  
                           _second_bottom 014E                               putch@txData 0033  
                      __end_of_i2c_poller 22A9              __size_of_i2c1_driver_sendACK 0004  
                         i2c_open@address 0035                       __end_of_getMoveMask 1BBE  
                 i2c_setBuffer@bufferSize 0033                                  ??_LEDsOn 004A  
                 ??_i2c1_driver_getRXData 0031                     __size_of_drv_write_DC 0044  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                         ___llmod@divisor 003F                             ??_LED_getData 00B9  
                     __size_of_fifo_check 0011                           ___llmod@counter 0048  
                   __end_of_i2c_setBuffer 23A6                       __end_of_getPosition 18EF  
                       __size_of_i2c_open 004C                    __end_of_TMR0_StopTimer 2113  
                     _heater_post_time_ms 016C                     i1_send_last_2bytes_IK 1A44  
     LED_setBrightnessRange@LED_configReg 00A0                      ?_i2c_busCollisionISR 0070  
                        __CFG_LPBOREN$OFF 0000                      __end_of_mssp1_setIRQ 2146  
                            _drv_peak_val 016E                      ??_mssp1_IRQisEnabled 0031  
                        i1_do_I2C_TX$1134 0073                                LEDsPwr@pwr 0044  
                        ??_PMD_Initialize 0031                     __end_ofi1_do_I2C_IDLE 2191  
                   __end_ofi1_do_I2C_RCEN 21A1                                  ??___wmul 0035  
                  ?i1_do_I2C_SEND_RESTART 0070                      ??_mssp1_waitForEvent 0031  
                           ??_setH2OnTime 004D                                  ??_doMove 00C1  
                        i1_mssp1_clearIRQ 212B                            ??_startAbsMove 0049  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 005A  
                             __pdataBANK1 00EB                               __pdataBANK2 0168  
                             __pdataBANK4 0220                 _do_I2C_TX_EMPTY$intlevel0 2745  
                            _setH1OffTime 1C0C             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0031                         _setDrvPiezoOnTime 1DFE  
                            _LED_testComm 1609                                  ??_printf 00A6  
                 ??_i2c1_driver_setI2cISR 0033                          ?_main_initialize 0070  
                                ??_strchr 0035            i1send_2bytes_latchless_IK@data 0070  
          __end_of_do_I2C_DO_NACK_RESTART 220F                                  ??_strtok 0041  
                                ??_strspn 003A                      _i2c1_driver_sendNACK 2175  
                       __size_of___awtoft 0022                         __size_of___ftpack 0065  
                      ?_setDrvPiezoOnTime 00BD                               __pbssBIGRAM 2790  
             __end_of_EUSART_Transmit_ISR 2498                            ??_startRelMove 0049  
                i1_do_I2C_DO_ADDRESS_NACK 25BB                    __end_of_TMR2_StopTimer 2116  
                          setDrvGain@gain 00B5                               __pbssCOMMON 007D  
                                ?_LEDsPwr 0044                                 ___latbits 0003  
                    _i2c1_driver_resetBus 210F                              _drv_write_DC 19B9  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK4 0240                           fifo_check@reply 00B7  
       __size_ofi1_do_I2C_DO_NACK_RESTART 0004                  __size_of_TMR2_Initialize 0012  
                               _do_I2C_RX 1975                 ?i1_do_I2C_DO_NACK_RESTART 0070  
                               _do_I2C_TX 1DA5                           ?_calcHeaterPins 0070  
                 ??i1_do_I2C_DO_NACK_STOP 0070                                 _doAbsMove 00C5  
                __size_of_setHeaterToggle 007D                              _isdigit$2173 0031  
                     ??_setDrvPiezoOnTime 00BF                             ?_zeroPosition 00B5  
                           LEDsOn@LEDpins 0044            __size_of_do_I2C_SEND_ADR_WRITE 000B  
           __size_ofi1_i2c1_driver_TXData 0005                __end_of_EUSART_Receive_ISR 2441  
           __end_of_do_I2C_SEND_ADR_WRITE 2293                __size_of_EUSART_Initialize 001A  
               __size_of_i2c1_driver_open 000A                                sin@coeff_a 2930  
                              sin@coeff_b 2978                              doMove@t_1568 00C8  
                            doMove@t_1569 00CA                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070           _do_I2C_SEND_ADR_WRITE$intlevel0 228C  
        __size_ofi1_do_I2C_SEND_ADR_WRITE 0007                       __end_of_EUSART_Read 2514  
            __size_of_TMR0_Load8bitPeriod 0005                                 _doRelMove 0DA3  
                         _do_I2C_TX_EMPTY 2741                         parseCmd@cmdString 0047  
                   _TMR0_InterruptHandler 01E3                                 __pnvBANK0 005E  
                               __pnvBANK3 01E1                    _LED_setBrightnessRange 08C0  
                 ??i1_i2c1_driver_sendACK 0070                  __size_of_TMR0_StartTimer 0003  
                       __size_of_drv_init 0063                         __size_of_drv_read 0047  
                         ?_TMR0_StopTimer 0070                     ??_i2c_busCollisionISR 0070  
           __size_ofi1_i2c1_driver_isNACK 000C                    _PIN_MANAGER_Initialize 180A  
                 ??i1_i2c1_driver_restart 0070                                 _getActive 1B24  
                       __size_of_parseCmd 01D1                              setDrvPeak@pk 00B5  
                     __end_of_drv_address 2A66                      EUSART_Read@readValue 0032  
                 ??i1_i2c1_driver_startRX 0070                            ??_do_I2C_RESET 0031  
                i1_send_2length_2bytes_IK 23A6                       __end_of_LED_getData 1800  
                                ?___awdiv 0031                                 __ptext100 2137  
                               __ptext101 2171                                 __ptext110 2770  
                               __ptext102 2134                                 __ptext111 237C  
                               __ptext103 1CA8                                 __ptext120 23D6  
                               __ptext112 216D                                 __ptext104 151D  
                               __ptext121 24F4                                 __ptext113 2330  
                               __ptext105 2131                                 __ptext130 2161  
                               __ptext114 2231                                 __ptext106 212E  
                               __ptext131 219B                                 __ptext123 24D4  
                               __ptext115 2368                                 __ptext107 2555  
                               __ptext140 26EC                                 __ptext132 21C0  
                               __ptext124 212B                                 __ptext116 2228  
                               __ptext108 23BE                                 __ptext141 2128  
                               __ptext133 21C7                                 __ptext125 1871  
                               __ptext117 21CF                                 __ptext109 1D4D  
                                ?___ftadd 00A6                                 __ptext150 211F  
                               __ptext142 22A9                                 __ptext134 215D  
                               __ptext126 1BBE                                 __ptext118 180A  
                               __ptext151 211C                                 __ptext143 2187  
                               __ptext135 2159                                 __ptext127 25BB  
                               __ptext119 2255                                 __ptext160 0802  
                               __ptext152 2149                                 __ptext144 2125  
                               __ptext136 2155                                 __ptext128 2169  
                               __ptext161 2534                                 __ptext153 2119  
                               __ptext145 214D                                 __ptext137 2151  
                               __ptext129 2165                                 __ptext162 23A6  
                               __ptext154 2116                                 __ptext146 210E  
                               __ptext138 218C                                 __ptext163 1A44  
                               __ptext155 22E6                                 __ptext147 2122  
                               __ptext139 21B9                                 __ptext164 269A  
                               __ptext156 221F                                 __ptext148 0002  
                               __ptext165 217D                                 __ptext157 2182  
                               __ptext149 0800                                 __ptext166 2110  
                               __ptext158 2113                                 __ptext167 247A  
                               __ptext159 22D9                                 __ptext168 2425  
             __end_of_i2c_masterOperation 2603                                  ?___lldiv 0031  
                                ?___ftmul 003F                                  ?___llmod 003F  
                                ?___fttol 00AF                                 _commCheck 0A0D  
               __end_of_setDrvPiezoOnTime 1E59                  ??_do_I2C_DO_ADDRESS_NACK 0031  
             _i2c1_driver_busCollisionISR 0166                              _eusartRxHead 0058  
                     __size_of_setDrvGain 0043         __size_of_send_2bytes_latchless_IK 0030  
                            _eusartTxHead 007D                       __size_of_setDrvPeak 0013  
                            _eusartRxTail 0057                 ?_send_2bytes_latchless_IK 0031  
                            _eusartTxTail 0059                           doAbsMove@i_1584 00D2  
                         doAbsMove@i_1586 00D0                     __end_of_do_I2C_DO_ACK 21FF  
                   _setLEDBrightnessRange 2498                               ??i1_i2c_ISR 0075  
            ??_INTERRUPT_InterruptManager 007C                                 __pswtext1 2000  
              ??_do_I2C_SEND_RESTART_READ 0031                     ?_i2c1_driver_sendNACK 0070  
         __end_ofi1_i2c1_driver_getRXData 2128                   _eusartTxBufferRemaining 005E  
                                ?_execCmd 0070                  ??i1_do_I2C_SEND_ADR_READ 0071  
                        ??_mssp1_clearIRQ 0031                                  _BAUD1CON 019F  
                     __end_of_setH2OnTime 1CA8                           ??i1_returnReset 0071  
                                ?_isdigit 0070                    LED_testComm@readResult 00CE  
                         ?_TMR2_StopTimer 0070                     ?_i2c1_driver_resetBus 0070  
      __size_of_do_I2C_SEND_RESTART_WRITE 0008                                 _first_top 0152  
                             _getMoveMask 1B71                   send_last_2bytes_IK@data 0031  
                           ??_setMoveMask 0049                     __end_of_drv_fifo_sine 10F4  
                               _drv_reset 2273                         parseCmd@paramIter 0048  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                               _drv_write 2603                                ?_doAbsMove 0070  
                       _i2c1_driver_start 2134                            ??_zeroPosition 00B7  
             send_2length_2bytes_IK@data1 003C               send_2length_2bytes_IK@data2 003E  
                               _setLEDPwr 24B6            send_last_2bytes_IK@topOrBottom 0034  
                                ?_stricmp 0033                                  ?_strcspn 0038  
                                ?_toupper 0070                               _getPosition 18B0  
                 __size_ofi1_mssp1_setIRQ 0003                            __size_of_putch 0006  
                       _i2c_ISR$intlevel0 2650                        ?_i2c1_driver_start 0070  
                          _eusartRxBuffer 01A0                             zeroPosition@i 0049  
                               _setActive 1593                         ??_TMR0_Initialize 0033  
                          _eusartTxBuffer 01A8                            ___wmul@product 0035  
                                _LATAbits 010C                                  _LATBbits 010D  
                                _LATCbits 010E                    ?i1_send_last_2bytes_IK 0070  
                              ?_doRelMove 0070                  ??_send_2length_2bytes_IK 0043  
                     __size_of_returnStop 0006                 i1send_last_2bytes_IK@data 0070  
                               clear_ram0 22C1                                  _PIE0bits 0090  
                                _PIE1bits 0091                  __size_of_TMR2_StartTimer 0003  
             __end_of_TMR0_Write8bitTimer 2182                       ??_i2c1_driver_start 0031  
                                i1_LEDsOn 2534                             setH1OffTime@t 00BD  
     __size_of_INTERRUPT_InterruptManager 004C                                  _LEDpower 2A61  
              ??_TMR0_SetInterruptHandler 0033                                  _PIR0bits 0010  
                                _PIR1bits 0011                                ?_getActive 00B5  
                  _currentPositions_steps 2790                        _heater_pre_time_ms 00ED  
                LED_testComm@oldConfigReg 00D0                                  _SSP1CON1 0215  
                                _SSP1CON2 0216                                  _TMR0_ISR 22D9  
                                _TMR2_ISR 22E6                                ?_commCheck 00D4  
                                _SSP1STAT 0214                __end_ofi1_i2c1_driver_stop 2122  
                            ??_fifo_check 004D                         ___wmul@multiplier 0031  
                       ?_do_I2C_SEND_STOP 0070               ?i1_do_I2C_SEND_RESTART_READ 0070  
                              printf@flag 00B2                                printf@prec 00AC  
          ??_TMR2_DefaultInterruptHandler 0071         __size_of_TMR2_SetInterruptHandler 0009  
                __size_of_TMR2_WriteTimer 0005                 __end_of_i2c1_driver_start 2137  
                           ??_returnReset 0032                        ??_do_I2C_SEND_STOP 0031  
               ?_TMR2_SetInterruptHandler 0031               __size_of_i2c1_driver_TXData 0006  
                              ?_drv_reset 0070                          __size_of_LEDsPwr 0064  
       __end_of_do_I2C_SEND_RESTART_WRITE 21E7                                ?_drv_write 0049  
                             _EUSART_Read 24F4                   __end_of_do_I2C_TX_EMPTY 2770  
                       doAbsMove@allThere 00CC         send_2length_2bytes_IK@latch_start 0040  
     i1send_2length_2bytes_IK@latch_start 0024                                ?_setLEDPwr 00B5  
                        ??_LED_readConfig 0049                      __end_of_startAbsMove 247A  
            __size_of_do_I2C_SEND_RESTART 0008               __size_of_i2c1_driver_isNACK 000D  
                  LED_getData@topOrBottom 00B5                   _do_I2C_DO_ACK$intlevel0 21FB  
                                _i2c_open 1AD8                                ?_setActive 00B5  
                     __end_of_setMoveMask 14A8                             ?i1_returnStop 0070  
                   __size_of_mssp1_setIRQ 0003                         ??_TMR2_Initialize 0033  
                             _drv_address 2A65                         ??_setHeaterToggle 00B9  
                     _do_I2C_DO_NACK_STOP 21FF                               _LED_getData 1779  
                        __size_of_i2c_ISR 0026                        __end_of_fifo_check 2330  
                         i1LEDsOn@LEDpins 0027                             drv_write@data 0049  
                           drv_write_DC@i 00BD                             drv_write@buff 004C  
                    __end_of_startRelMove 2425                              ?_do_I2C_IDLE 0070  
                            ?_do_I2C_RCEN 0070                        _LED_test_openshort 1680  
                 ?i1_i2c1_driver_sendNACK 0070                   ??_OSCILLATOR_Initialize 0031  
              __size_of_setDrvPiezoOnTime 005B                               _setH2OnTime 1C5A  
                  ?_setLEDBrightnessRange 00B5                         ??_TMR0_StartTimer 0031  
                     _i2c1_driver_sendACK 2171                          __size_of___awdiv 0052  
                        __size_of___ftadd 011A           __size_of_do_I2C_DO_ADDRESS_NACK 002B  
        i1send_last_2bytes_IK@latch_start 0072                          __size_of___lldiv 0053  
                        __size_of___ftmul 00E1                       i2c1_driver_TXData@d 0031  
                        __size_of___llmod 0043                          __size_of___fttol 0087  
                  ??_i2c1_driver_sendNACK 0031                                  ___awtoft 2576  
                 ?i1_i2c1_driver_resetBus 0070                                  ___ftpack 13D0  
        ??_i2c1_driver_setBusCollisionISR 0033           ?_i2c1_driver_setBusCollisionISR 0031  
                           ??i1_do_I2C_RX 0070                             ??i1_do_I2C_TX 0071  
      _do_I2C_SEND_RESTART_READ$intlevel0 21DB                       _i2c1_driver_restart 2137  
                               parseCmd@p 004A                                 parseCmd@s 0045  
             __size_ofi1_do_I2C_SEND_STOP 0004                             LEDsPwr@pwrAll 00A0  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 213D  
                     ?_LED_test_openshort 00B5              __end_of_do_I2C_SEND_ADR_READ 22C1  
                  ??_i2c1_driver_resetBus 0031           __size_ofi1_do_I2C_SEND_ADR_READ 0008  
                    _demoHeaterToggle_bot 01B0                          __size_of_execCmd 01F2  
                ?_TMR2_LoadPeriodRegister 0070                      _demoHeaterToggle_top 01B4  
                              _T0CON0bits 0017                          __size_of_isdigit 000F  
                                _demoLong 005A                              _mssp1_setIRQ 2143  
                             ??_do_I2C_RX 0031                               ??_do_I2C_TX 0032  
                             ??_doAbsMove 0240                                  __ptext10 2441  
                                __ptext11 0AD4                                  __ptext20 14A8  
                                __ptext12 1E59                                  __ptext21 0958  
                                __ptext13 220F                                  __ptext30 2300  
                                __ptext22 2672                                  __ptext14 1AD8  
                                __ptext31 2355                                  __ptext23 240A  
                                __ptext15 224C                                  __ptext40 13D0  
                                __ptext32 1C5A                                  __ptext24 245D  
                                __ptext16 2243                                  __ptext41 2191  
                                __ptext33 1C0C                                  __ptext25 1435  
                                __ptext17 1800                                  __ptext50 1680  
                                __ptext42 2342                                  __ptext34 2196  
                                __ptext26 24B6                                  __ptext18 2273  
                                __ptext51 1609                                  __ptext43 1932  
                                __ptext35 1DFE                                  __ptext27 1EBC  
                                __ptext19 0378                                  __ptext60 19FD  
                                __ptext52 08C0                                  __ptext44 1593  
                                __ptext36 0839                                  __ptext28 2498  
                                __ptext61 2603                                  __ptext53 26C3  
                                __ptext45 18B0                                  __ptext37 0BA8  
                                __ptext29 16FC                                  __ptext70 229E  
                                __ptext62 0ECE                                  __ptext54 1779  
                                __ptext46 1B71                                  __ptext38 0C89  
                                __ptext71 2293                                  __ptext63 21B3  
                                __ptext55 0DA3                                  __ptext47 2598  
                                __ptext39 2576                                  __ptext80 225F  
                                __ptext72 264C                                  __ptext64 2627  
                                __ptext56 00C5                                  __ptext48 1B24  
                                __ptext81 2288                                  __ptext73 2146  
                                __ptext65 18EF                                  __ptext57 073B  
                                __ptext49 0A0D                                  __ptext90 2143  
                                __ptext82 22B5                                  __ptext74 1975  
                                __ptext66 1CFA                                  __ptext58 19B9  
                                __ptext91 22F3                                  __ptext83 21EF  
                                __ptext75 1DA5                                  __ptext67 2391  
                                __ptext59 231F                                  __ptext92 21AD  
                                __ptext84 21E7                                  __ptext76 2716  
                                __ptext68 25DF                                  __ptext93 2140  
                                __ptext85 21DF                                  __ptext77 2207  
                                __ptext69 2269                                  __ptext94 2175  
                                __ptext86 21D7                                  __ptext78 21FF  
                                __ptext95 210F                                  __ptext87 223A  
                                __ptext79 21F7                                  __ptext96 213D  
                                __ptext88 227D                                  __ptext97 21A7  
                                __ptext89 2741                                  __ptext98 21A1  
                                __ptext99 213A                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                              ??_setDrvGain 00B7  
                            ??_setDrvPeak 0049                  __end_ofi1_mssp1_clearIRQ 212E  
            send_2bytes_latchless_IK@data 0031                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 2288                       i1LEDsOn@topOrBottom 002B  
                        __size_of_stricmp 0034                          __size_of_strcspn 0030  
                        __size_of_toupper 0010                            ??i1_returnStop 0071  
                 i1_do_I2C_SEND_ADR_WRITE 21C0                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 21AD                                  _drv_init 1E59  
                                _drv_read 19FD                                  _drv_sine 12DA  
                        _i2c1_driver_open 1800                          _i2c1_driver_stop 213A  
                           __size_of_atoi 0071                             __size_of_main 006F  
                    ?_i2c1_driver_startRX 0070                                  _errorOut 0162  
                    ??_LED_test_openshort 00B9                                  _readdata 01CD  
          __size_of_i2c1_driver_getRXData 0003                               ??_doRelMove 00CC  
                           __size_of_stop 0028             __end_of_i2c1_driver_getRXData 2143  
                                _parseCmd 056A           __size_of_send_2length_2bytes_IK 0018  
    __end_of_TMR0_DefaultInterruptHandler 0839     __size_of_TMR0_DefaultInterruptHandler 0037  
            _TMR0_DefaultInterruptHandler 0802                  __size_of_getMotionStatus 0023  
               __size_of_setHeaterPreTime 000F                   ??i1_do_I2C_SEND_RESTART 0070  
        __size_ofi1_i2c1_driver_getRXData 0003                                  _moveMask 00DF  
                 i2c_masterOperation@read 0038                               ??_getActive 0049  
                              _RC1STAbits 019D      __size_ofi1_do_I2C_SEND_RESTART_WRITE 0004  
          __end_ofi1_i2c1_driver_sendNACK 2151                                _RB5PPSbits 0E9D  
                        setMoveMask@onOff 00B7                                _RB6PPSbits 0E9E  
                                int$flags 007E                ??i1_do_I2C_DO_ADDRESS_NACK 0070  
                              _RB7PPSbits 0E9F                                  atoi@sign 003B  
                             ??_commCheck 00D6          __end_ofi1_do_I2C_DO_NACK_RESTART 216D  
                       _LED_configReg_bot 0146            __end_ofi1_i2c1_driver_resetBus 210F  
                    __end_of_zeroPosition 151D                         _LED_configReg_top 014A  
                       ??_TMR2_StartTimer 0031        __end_of_INTERRUPT_InterruptManager 0050  
              _INTERRUPT_InterruptManager 0004                                 printf@val 00AE  
                            _SSP1STATbits 0214                        __end_of_setDrvGain 1975  
        __end_of_do_I2C_SEND_RESTART_READ 21DF                        __end_of_setDrvPeak 2355  
                            ??_returnStop 0032                                  execCmd@s 00D7  
                   ??_do_I2C_DO_NACK_STOP 0031                          ??_calcHeaterPins 0031  
                     _TMR0_Load8bitPeriod 2191                 mssp1_waitForEvent@timeout 0031  
          __size_of_i2c1_driver_setI2cISR 0009             __end_of_i2c1_driver_setI2cISR 2255  
                              _INTCONbits 000B              __size_of_send_last_2bytes_IK 0058  
                             _NVMCON1bits 0895                __size_of_i2c1_driver_start 0003  
                             ??_drv_reset 00B5                               _setMoveMask 1435  
                     __end_ofi1_do_I2C_RX 18B0                            __pstringtext10 2930  
                          __pstringtext11 2978                            __pstringtext20 28EE  
                          __pstringtext12 2828                       __end_ofi1_do_I2C_TX 1C0C  
                          __pstringtext21 28FF                            __pstringtext13 2847  
                          __pstringtext30 299B                            __pstringtext22 2910  
                          __pstringtext14 2865                            __pstringtext31 29A6  
                          __pstringtext23 2920                            __pstringtext15 2881  
                          __pstringtext40 29F7                            __pstringtext32 29B1  
                          __pstringtext24 293F                            __pstringtext16 289B  
                          __pstringtext41 29FF                            __pstringtext33 29BB  
                          __pstringtext25 294E                            __pstringtext17 28B4  
                          __pstringtext50 2A36                            __pstringtext42 2A07  
                          __pstringtext34 29C5                            __pstringtext26 295D  
                          __pstringtext18 28CB                            __pstringtext51 2A3B  
                          __pstringtext43 2A0F                            __pstringtext35 29CE  
                          __pstringtext27 296B                            __pstringtext19 28DD  
                          __pstringtext60 2A63                            __pstringtext52 2A3F  
                          __pstringtext44 2A16                            __pstringtext36 29D7  
                          __pstringtext28 2984                            __pstringtext61 0000  
                          __pstringtext53 2A43                            __pstringtext45 2A1D  
                          __pstringtext37 29DF                            __pstringtext29 2990  
                          __pstringtext54 2A47                            __pstringtext46 2A22  
                          __pstringtext38 29E7                            __pstringtext55 2A4B  
                          __pstringtext47 2A27                            __pstringtext39 29EF  
                          __pstringtext56 2A55                            __pstringtext48 2A2C  
                          __pstringtext57 2A58                            __pstringtext49 2A31  
                          __pstringtext58 2A5B                            __pstringtext59 2A5E  
                                isdigit@c 0032                               ??_drv_write 004A  
                __size_ofi1_do_I2C_DO_ACK 0004                               ??_setLEDPwr 004E  
                   ??_i2c1_driver_sendACK 0031                          ?_do_I2C_TX_EMPTY 0070  
                          i1_mssp1_setIRQ 2128                   __size_of_WDT_Initialize 0004  
                  _do_I2C_DO_ADDRESS_NACK 2716            __size_ofi1_do_I2C_DO_NACK_STOP 0004  
                                intlevel1 0000             __end_ofi1_do_I2C_DO_NACK_STOP 2169  
                  _do_I2C_RESET$intlevel0 2281                          ??_TMR0_StopTimer 0070  
                   ??_i2c1_driver_restart 0031                         ??_TMR2_WriteTimer 0070  
                 ?_LED_setBrightnessRange 0044                               ??_setActive 00B9  
                               strchr@chr 0033                     ??_i2c1_driver_startRX 0031  
                               strchr@ptr 0031                ??i1_send_2length_2bytes_IK 007B  
                        ___lldiv@dividend 0035                   ?_PIN_MANAGER_Initialize 0070  
                 __size_of_i2c_setAddress 0008                      ?_TMR0_Load8bitPeriod 0070  
            ??i1_send_2bytes_latchless_IK 0072                    i1_do_I2C_SEND_ADR_READ 21C7  
                       __CFG_CLKOUTEN$OFF 0000                                 stricmp@s1 0038  
                               stricmp@s2 0033                                 strcspn@s1 003E  
                               strcspn@s2 0038                        __end_of_returnStop 21A7  
                            getMoveMask@i 00B7       __size_ofi1_do_I2C_SEND_RESTART_READ 0004  
          __size_ofi1_i2c1_driver_sendACK 0004             ?_TMR0_DefaultInterruptHandler 0070  
           __end_ofi1_i2c1_driver_sendACK 214D               __size_of_mssp1_IRQisEnabled 000A  
          __size_ofi1_i2c1_driver_restart 0003                                  printf@ap 00B3  
           __end_ofi1_i2c1_driver_restart 211F                        _EUSART_Receive_ISR 2425  
             __size_of_mssp1_waitForEvent 000B            __size_ofi1_i2c1_driver_startRX 0003  
            __end_ofi1_i2c1_driver_TXData 218C             __end_ofi1_i2c1_driver_startRX 2125  
                        ??_TMR2_StopTimer 0070           __end_of_TMR2_LoadPeriodRegister 219B  
                           __pstringtext1 1000                             __pstringtext2 11E8  
                           __pstringtext3 12DA                             __pstringtext4 2800  
                           __pstringtext5 2A4F                             __pstringtext6 2A52  
                           __pstringtext7 2A61                             __pstringtext8 2A65  
                           __pstringtext9 10F4                   __size_ofi1_do_I2C_RESET 0007  
                  _send_2length_2bytes_IK 23BE                       ?_EUSART_Receive_ISR 0070  
            __end_ofi1_i2c1_driver_isNACK 22B5                                _TMR0_RANGE 2A52  
                        ___lldiv@quotient 003A                           _TMR0_Initialize 2368  
                                stricmp@r 0037                                _TMR2_RANGE 2A4F  
                                strcspn@i 003C         send_2length_2bytes_IK@topOrBottom 0041  
     i1send_2length_2bytes_IK@topOrBottom 0025                    __size_of_i2c_setBuffer 0015  
                            ?_getMoveMask 00B5                     __size_of_startAbsMove 001D  
                                toupper@c 0032                    __end_ofi1_mssp1_setIRQ 212B  
                             _returnReset 21A7                                  strtok@s1 0044  
                                strtok@s2 003F                                  strspn@s1 003E  
                                strspn@s2 0038          _do_I2C_DO_NACK_RESTART$intlevel0 220B  
                                strtok@sp 0054                 ??i1_do_I2C_SEND_ADR_WRITE 0071  
                __size_of_main_initialize 00D4            __end_of_LED_setBrightnessRange 0958  
                            getPosition@a 00B5                              ?_getPosition 00B5  
                  __size_ofi1_do_I2C_IDLE 0005                    __size_ofi1_do_I2C_RCEN 0006  
                 ??i1_send_last_2bytes_IK 0075                        EUSART_Write@txData 0032  
            __size_of_EUSART_Transmit_ISR 001E            __end_of_PIN_MANAGER_Initialize 183D  
             __end_of_i2c_busCollisionISR 211C                     __size_of_startRelMove 001B  
                   ??_TMR0_Load8bitPeriod 0031                       setMoveMask@probeNum 00B5  
                    ??_EUSART_Receive_ISR 0070                     _TMR2_InterruptHandler 01E1  
                   _do_I2C_SEND_ADR_WRITE 2288                      _do_I2C_SEND_ADR_READ 22B5  
