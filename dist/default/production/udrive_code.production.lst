

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jul 06 13:51:36 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	stringtext12,global,class=STRCODE,delta=2
    22                           	psect	stringtext13,global,class=STRCODE,delta=2
    23                           	psect	stringtext14,global,class=STRCODE,delta=2
    24                           	psect	stringtext15,global,class=STRCODE,delta=2
    25                           	psect	stringtext16,global,class=STRCODE,delta=2
    26                           	psect	stringtext17,global,class=STRCODE,delta=2
    27                           	psect	stringtext18,global,class=STRCODE,delta=2
    28                           	psect	stringtext19,global,class=STRCODE,delta=2
    29                           	psect	stringtext20,global,class=STRCODE,delta=2
    30                           	psect	stringtext21,global,class=STRCODE,delta=2
    31                           	psect	stringtext22,global,class=STRCODE,delta=2
    32                           	psect	stringtext23,global,class=STRCODE,delta=2
    33                           	psect	stringtext24,global,class=STRCODE,delta=2
    34                           	psect	stringtext25,global,class=STRCODE,delta=2
    35                           	psect	stringtext26,global,class=STRCODE,delta=2
    36                           	psect	stringtext27,global,class=STRCODE,delta=2
    37                           	psect	stringtext28,global,class=STRCODE,delta=2
    38                           	psect	stringtext29,global,class=STRCODE,delta=2
    39                           	psect	stringtext30,global,class=STRCODE,delta=2
    40                           	psect	stringtext31,global,class=STRCODE,delta=2
    41                           	psect	stringtext32,global,class=STRCODE,delta=2
    42                           	psect	stringtext33,global,class=STRCODE,delta=2
    43                           	psect	stringtext34,global,class=STRCODE,delta=2
    44                           	psect	stringtext35,global,class=STRCODE,delta=2
    45                           	psect	stringtext36,global,class=STRCODE,delta=2
    46                           	psect	stringtext37,global,class=STRCODE,delta=2
    47                           	psect	stringtext38,global,class=STRCODE,delta=2
    48                           	psect	stringtext39,global,class=STRCODE,delta=2
    49                           	psect	stringtext40,global,class=STRCODE,delta=2
    50                           	psect	stringtext41,global,class=STRCODE,delta=2
    51                           	psect	stringtext42,global,class=STRCODE,delta=2
    52                           	psect	stringtext43,global,class=STRCODE,delta=2
    53                           	psect	stringtext44,global,class=STRCODE,delta=2
    54                           	psect	stringtext45,global,class=STRCODE,delta=2
    55                           	psect	stringtext46,global,class=STRCODE,delta=2
    56                           	psect	stringtext47,global,class=STRCODE,delta=2
    57                           	psect	stringtext48,global,class=STRCODE,delta=2
    58                           	psect	stringtext49,global,class=STRCODE,delta=2
    59                           	psect	stringtext50,global,class=STRCODE,delta=2
    60                           	psect	stringtext51,global,class=STRCODE,delta=2
    61                           	psect	stringtext52,global,class=STRCODE,delta=2
    62                           	psect	stringtext53,global,class=STRCODE,delta=2
    63                           	psect	stringtext54,global,class=STRCODE,delta=2
    64                           	psect	stringtext55,global,class=STRCODE,delta=2
    65                           	psect	stringtext56,global,class=STRCODE,delta=2
    66                           	psect	stringtext57,global,class=STRCODE,delta=2
    67                           	psect	stringtext58,global,class=STRCODE,delta=2
    68                           	psect	cinit,global,class=CODE,merge=1,delta=2
    69                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    70                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    71                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    72                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    73                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    74                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    75                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    76                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    77                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    78                           	psect	inittext,global,class=CODE,delta=2
    79                           	psect	clrtext,global,class=CODE,delta=2
    80                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    81                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    82                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    83                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    84                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    85                           	psect	text1,local,class=CODE,merge=1,delta=2
    86                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text11,local,class=CODE,merge=1,delta=2
    96                           	psect	text12,local,class=CODE,merge=1,delta=2
    97                           	psect	text13,local,class=CODE,merge=1,delta=2
    98                           	psect	text14,local,class=CODE,merge=1,delta=2
    99                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text17,local,class=CODE,merge=1,delta=2
   102                           	psect	text18,local,class=CODE,merge=1,delta=2
   103                           	psect	text19,local,class=CODE,merge=1,delta=2
   104                           	psect	swtext1,local,class=CONST,delta=2
   105                           	psect	text20,local,class=CODE,merge=1,delta=2
   106                           	psect	text21,local,class=CODE,merge=1,delta=2
   107                           	psect	text22,local,class=CODE,merge=1,delta=2
   108                           	psect	text23,local,class=CODE,merge=1,delta=2
   109                           	psect	text24,local,class=CODE,merge=1,delta=2
   110                           	psect	text25,local,class=CODE,merge=1,delta=2
   111                           	psect	text26,local,class=CODE,merge=1,delta=2
   112                           	psect	text27,local,class=CODE,merge=1,delta=2
   113                           	psect	text28,local,class=CODE,merge=1,delta=2
   114                           	psect	text29,local,class=CODE,merge=1,delta=2
   115                           	psect	text30,local,class=CODE,merge=1,delta=2
   116                           	psect	text31,local,class=CODE,merge=1,delta=2
   117                           	psect	text32,local,class=CODE,merge=1,delta=2
   118                           	psect	text33,local,class=CODE,merge=1,delta=2
   119                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
   120                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
   121                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
   122                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
   123                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
   124                           	psect	text39,local,class=CODE,merge=1,delta=2
   125                           	psect	text40,local,class=CODE,merge=1,delta=2
   126                           	psect	text41,local,class=CODE,merge=1,delta=2
   127                           	psect	text42,local,class=CODE,merge=1,delta=2
   128                           	psect	text43,local,class=CODE,merge=1,delta=2
   129                           	psect	text44,local,class=CODE,merge=1,delta=2
   130                           	psect	text45,local,class=CODE,merge=1,delta=2
   131                           	psect	text46,local,class=CODE,merge=1,delta=2
   132                           	psect	text47,local,class=CODE,merge=1,delta=2
   133                           	psect	text48,local,class=CODE,merge=1,delta=2
   134                           	psect	text49,local,class=CODE,merge=1,delta=2
   135                           	psect	text50,local,class=CODE,merge=1,delta=2
   136                           	psect	text51,local,class=CODE,merge=1,delta=2
   137                           	psect	text52,local,class=CODE,merge=1,delta=2
   138                           	psect	text53,local,class=CODE,merge=1,delta=2
   139                           	psect	text54,local,class=CODE,merge=1,delta=2
   140                           	psect	text55,local,class=CODE,merge=1,delta=2
   141                           	psect	text56,local,class=CODE,merge=1,delta=2
   142                           	psect	text57,local,class=CODE,merge=1,delta=2
   143                           	psect	text58,local,class=CODE,merge=1,delta=2
   144                           	psect	text59,local,class=CODE,merge=1,delta=2
   145                           	psect	text60,local,class=CODE,merge=1,delta=2
   146                           	psect	text61,local,class=CODE,merge=1,delta=2
   147                           	psect	text62,local,class=CODE,merge=1,delta=2
   148                           	psect	text63,local,class=CODE,merge=1,delta=2,group=2
   149                           	psect	text64,local,class=CODE,merge=1,delta=2,group=2
   150                           	psect	text65,local,class=CODE,merge=1,delta=2
   151                           	psect	text66,local,class=CODE,merge=1,delta=2
   152                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
   153                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
   154                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
   155                           	psect	text70,local,class=CODE,merge=1,delta=2
   156                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
   157                           	psect	text72,local,class=CODE,merge=1,delta=2
   158                           	psect	text73,local,class=CODE,merge=1,delta=2
   159                           	psect	text74,local,class=CODE,merge=1,delta=2
   160                           	psect	text75,local,class=CODE,merge=1,delta=2
   161                           	psect	text76,local,class=CODE,merge=1,delta=2
   162                           	psect	text77,local,class=CODE,merge=1,delta=2
   163                           	psect	text78,local,class=CODE,merge=1,delta=2
   164                           	psect	text79,local,class=CODE,merge=1,delta=2
   165                           	psect	text80,local,class=CODE,merge=1,delta=2
   166                           	psect	text81,local,class=CODE,merge=1,delta=2
   167                           	psect	text82,local,class=CODE,merge=1,delta=2
   168                           	psect	text83,local,class=CODE,merge=1,delta=2
   169                           	psect	text84,local,class=CODE,merge=1,delta=2
   170                           	psect	text85,local,class=CODE,merge=1,delta=2
   171                           	psect	text86,local,class=CODE,merge=1,delta=2
   172                           	psect	text87,local,class=CODE,merge=1,delta=2
   173                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   174                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   175                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   176                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   177                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   178                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   179                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   180                           	psect	text95,local,class=CODE,merge=1,delta=2
   181                           	psect	text96,local,class=CODE,merge=1,delta=2
   182                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   183                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
   184                           	psect	text99,local,class=CODE,merge=1,inline,delta=2
   185                           	psect	text100,local,class=CODE,merge=1,inline,delta=2
   186                           	psect	text101,local,class=CODE,merge=1,delta=2,group=2
   187                           	psect	text102,local,class=CODE,merge=1,delta=2
   188                           	psect	text103,local,class=CODE,merge=1,delta=2
   189                           	psect	text104,local,class=CODE,merge=1,delta=2
   190                           	psect	text105,local,class=CODE,merge=1,delta=2
   191                           	psect	text106,local,class=CODE,merge=1,delta=2
   192                           	psect	text107,local,class=CODE,merge=1,delta=2
   193                           	psect	text108,local,class=CODE,merge=1,delta=2
   194                           	psect	text109,local,class=CODE,merge=1,delta=2
   195                           	psect	text110,local,class=CODE,merge=1,delta=2
   196                           	psect	text111,local,class=CODE,merge=1,delta=2
   197                           	psect	text112,local,class=CODE,merge=1,delta=2
   198                           	psect	text113,local,class=CODE,merge=1,delta=2
   199                           	psect	text114,local,class=CODE,merge=1,delta=2
   200                           	psect	text115,local,class=CODE,merge=1,delta=2
   201                           	psect	text116,local,class=CODE,merge=1,delta=2
   202                           	psect	text117,local,class=CODE,merge=1,delta=2
   203                           	psect	text118,local,class=CODE,merge=1,delta=2
   204                           	psect	text119,local,class=CODE,merge=1,delta=2
   205                           	psect	intentry,global,class=CODE,delta=2
   206                           	psect	text121,local,class=CODE,merge=1,delta=2
   207                           	psect	text122,local,class=CODE,merge=1,inline,delta=2
   208                           	psect	text123,local,class=CODE,merge=1,delta=2
   209                           	psect	text124,local,class=CODE,merge=1,delta=2
   210                           	psect	text125,local,class=CODE,merge=1,delta=2
   211                           	psect	text126,local,class=CODE,merge=1,delta=2
   212                           	psect	text127,local,class=CODE,merge=1,delta=2
   213                           	psect	text128,local,class=CODE,merge=1,delta=2
   214                           	psect	text129,local,class=CODE,merge=1,delta=2
   215                           	psect	text130,local,class=CODE,merge=1,delta=2
   216                           	psect	text131,local,class=CODE,merge=1,delta=2
   217                           	psect	text132,local,class=CODE,merge=1,delta=2
   218                           	psect	text133,local,class=CODE,merge=1,delta=2
   219                           	psect	text134,local,class=CODE,merge=1,delta=2
   220                           	psect	text135,local,class=CODE,merge=1,delta=2
   221                           	psect	text136,local,class=CODE,merge=1,delta=2
   222                           	psect	text137,local,class=CODE,merge=1,delta=2
   223                           	psect	text138,local,class=CODE,merge=1,delta=2
   224                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   225                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   226                           	psect	text141,local,class=CODE,merge=1,inline,delta=2
   227                           	psect	text142,local,class=CODE,merge=1,inline,delta=2
   228                           	psect	text143,local,class=CODE,merge=1,inline,delta=2
   229                           	psect	text144,local,class=CODE,merge=1,inline,delta=2
   230                           	psect	text145,local,class=CODE,merge=1,inline,delta=2
   231                           	psect	text146,local,class=CODE,merge=1,delta=2
   232                           	psect	text147,local,class=CODE,merge=1,delta=2
   233                           	psect	text148,local,class=CODE,merge=1,inline,delta=2
   234                           	psect	text149,local,class=CODE,merge=1,inline,delta=2
   235                           	psect	text150,local,class=CODE,merge=1,inline,delta=2
   236                           	psect	text151,local,class=CODE,merge=1,delta=2
   237                           	psect	text152,local,class=CODE,merge=1,inline,delta=2
   238                           	psect	text153,local,class=CODE,merge=1,delta=2
   239                           	psect	text154,local,class=CODE,merge=1,delta=2
   240                           	psect	text155,local,class=CODE,merge=1,delta=2
   241                           	psect	text156,local,class=CODE,merge=1,delta=2
   242                           	psect	text157,local,class=CODE,merge=1,delta=2
   243                           	psect	text158,local,class=CODE,merge=1,delta=2
   244                           	psect	text159,local,class=CODE,merge=1,delta=2
   245                           	psect	text160,local,class=CODE,merge=1,delta=2
   246                           	psect	text161,local,class=CODE,merge=1,delta=2
   247                           	psect	text162,local,class=CODE,merge=1,delta=2
   248                           	psect	text163,local,class=CODE,merge=1,delta=2
   249                           	psect	text164,local,class=CODE,merge=1,delta=2
   250                           	psect	text165,local,class=CODE,merge=1,delta=2
   251                           	psect	text166,local,class=CODE,merge=1,delta=2
   252                           	dabs	1,0xCA0,32
   253                           	dabs	1,0xC30,64
   254                           	dabs	1,0x2790,0,_currentPositions_steps
   255                           	dabs	1,0x7E,2
   256  0000                     
   257                           ; Version 1.45
   258                           ; Generated 16/11/2017 GMT
   259                           ; 
   260                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   261                           ; All rights reserved.
   262                           ; 
   263                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   264                           ; 
   265                           ; Redistribution and use in source and binary forms, with or without modification, are
   266                           ; permitted provided that the following conditions are met:
   267                           ; 
   268                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   269                           ;        conditions and the following disclaimer.
   270                           ; 
   271                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   272                           ;        of conditions and the following disclaimer in the documentation and/or other
   273                           ;        materials provided with the distribution.
   274                           ; 
   275                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   276                           ;        software without specific prior written permission.
   277                           ; 
   278                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   279                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   280                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   281                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   282                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   283                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   284                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   285                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   286                           ; 
   287                           ; 
   288                           ; Code-generator required, PIC16F18346 Definitions
   289                           ; 
   290                           ; SFR Addresses
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  0090                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0093                     	;# 
   332  0094                     	;# 
   333  0097                     	;# 
   334  009B                     	;# 
   335  009B                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  009F                     	;# 
   340  010C                     	;# 
   341  010D                     	;# 
   342  010E                     	;# 
   343  0111                     	;# 
   344  0112                     	;# 
   345  0113                     	;# 
   346  0114                     	;# 
   347  0115                     	;# 
   348  0116                     	;# 
   349  0117                     	;# 
   350  0118                     	;# 
   351  0119                     	;# 
   352  018C                     	;# 
   353  018D                     	;# 
   354  018E                     	;# 
   355  0197                     	;# 
   356  0199                     	;# 
   357  0199                     	;# 
   358  0199                     	;# 
   359  019A                     	;# 
   360  019A                     	;# 
   361  019A                     	;# 
   362  019B                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019C                     	;# 
   368  019C                     	;# 
   369  019C                     	;# 
   370  019D                     	;# 
   371  019D                     	;# 
   372  019D                     	;# 
   373  019E                     	;# 
   374  019E                     	;# 
   375  019E                     	;# 
   376  019F                     	;# 
   377  019F                     	;# 
   378  019F                     	;# 
   379  019F                     	;# 
   380  019F                     	;# 
   381  020C                     	;# 
   382  020D                     	;# 
   383  020E                     	;# 
   384  0211                     	;# 
   385  0211                     	;# 
   386  0212                     	;# 
   387  0212                     	;# 
   388  0213                     	;# 
   389  0213                     	;# 
   390  0214                     	;# 
   391  0214                     	;# 
   392  0215                     	;# 
   393  0215                     	;# 
   394  0215                     	;# 
   395  0215                     	;# 
   396  0216                     	;# 
   397  0216                     	;# 
   398  0217                     	;# 
   399  0217                     	;# 
   400  0219                     	;# 
   401  021A                     	;# 
   402  021B                     	;# 
   403  021C                     	;# 
   404  021D                     	;# 
   405  021D                     	;# 
   406  021E                     	;# 
   407  021F                     	;# 
   408  028C                     	;# 
   409  028D                     	;# 
   410  028E                     	;# 
   411  0291                     	;# 
   412  0291                     	;# 
   413  0292                     	;# 
   414  0293                     	;# 
   415  0294                     	;# 
   416  0295                     	;# 
   417  0295                     	;# 
   418  0296                     	;# 
   419  0297                     	;# 
   420  0298                     	;# 
   421  029F                     	;# 
   422  030C                     	;# 
   423  030D                     	;# 
   424  030E                     	;# 
   425  0311                     	;# 
   426  0311                     	;# 
   427  0312                     	;# 
   428  0313                     	;# 
   429  0314                     	;# 
   430  0315                     	;# 
   431  0315                     	;# 
   432  0316                     	;# 
   433  0317                     	;# 
   434  0318                     	;# 
   435  038C                     	;# 
   436  038D                     	;# 
   437  038E                     	;# 
   438  0391                     	;# 
   439  0392                     	;# 
   440  0393                     	;# 
   441  0394                     	;# 
   442  0395                     	;# 
   443  0396                     	;# 
   444  0397                     	;# 
   445  0398                     	;# 
   446  0399                     	;# 
   447  039A                     	;# 
   448  039C                     	;# 
   449  039D                     	;# 
   450  039E                     	;# 
   451  039F                     	;# 
   452  0411                     	;# 
   453  0411                     	;# 
   454  0412                     	;# 
   455  0413                     	;# 
   456  0414                     	;# 
   457  0415                     	;# 
   458  0416                     	;# 
   459  0417                     	;# 
   460  0418                     	;# 
   461  0418                     	;# 
   462  0419                     	;# 
   463  041A                     	;# 
   464  041B                     	;# 
   465  041C                     	;# 
   466  041D                     	;# 
   467  041E                     	;# 
   468  041F                     	;# 
   469  0498                     	;# 
   470  0498                     	;# 
   471  0499                     	;# 
   472  049A                     	;# 
   473  049B                     	;# 
   474  049B                     	;# 
   475  049C                     	;# 
   476  049D                     	;# 
   477  049E                     	;# 
   478  049F                     	;# 
   479  0617                     	;# 
   480  0618                     	;# 
   481  0619                     	;# 
   482  0619                     	;# 
   483  061A                     	;# 
   484  061B                     	;# 
   485  061C                     	;# 
   486  061C                     	;# 
   487  061F                     	;# 
   488  0691                     	;# 
   489  0692                     	;# 
   490  0693                     	;# 
   491  0694                     	;# 
   492  0695                     	;# 
   493  0696                     	;# 
   494  0697                     	;# 
   495  0698                     	;# 
   496  0699                     	;# 
   497  0711                     	;# 
   498  0712                     	;# 
   499  0713                     	;# 
   500  0714                     	;# 
   501  0715                     	;# 
   502  0716                     	;# 
   503  0717                     	;# 
   504  0718                     	;# 
   505  0719                     	;# 
   506  0891                     	;# 
   507  0891                     	;# 
   508  0891                     	;# 
   509  0891                     	;# 
   510  0891                     	;# 
   511  0891                     	;# 
   512  0892                     	;# 
   513  0892                     	;# 
   514  0892                     	;# 
   515  0893                     	;# 
   516  0893                     	;# 
   517  0893                     	;# 
   518  0893                     	;# 
   519  0893                     	;# 
   520  0893                     	;# 
   521  0894                     	;# 
   522  0894                     	;# 
   523  0894                     	;# 
   524  0895                     	;# 
   525  0895                     	;# 
   526  0895                     	;# 
   527  0896                     	;# 
   528  0896                     	;# 
   529  0896                     	;# 
   530  089B                     	;# 
   531  0911                     	;# 
   532  0912                     	;# 
   533  0913                     	;# 
   534  0914                     	;# 
   535  0915                     	;# 
   536  0916                     	;# 
   537  0918                     	;# 
   538  0919                     	;# 
   539  091A                     	;# 
   540  091B                     	;# 
   541  091C                     	;# 
   542  091D                     	;# 
   543  091E                     	;# 
   544  091F                     	;# 
   545  0E0F                     	;# 
   546  0E10                     	;# 
   547  0E11                     	;# 
   548  0E12                     	;# 
   549  0E13                     	;# 
   550  0E14                     	;# 
   551  0E15                     	;# 
   552  0E16                     	;# 
   553  0E17                     	;# 
   554  0E18                     	;# 
   555  0E19                     	;# 
   556  0E1A                     	;# 
   557  0E1B                     	;# 
   558  0E1C                     	;# 
   559  0E1D                     	;# 
   560  0E1E                     	;# 
   561  0E1F                     	;# 
   562  0E20                     	;# 
   563  0E21                     	;# 
   564  0E22                     	;# 
   565  0E24                     	;# 
   566  0E25                     	;# 
   567  0E28                     	;# 
   568  0E29                     	;# 
   569  0E2A                     	;# 
   570  0E2B                     	;# 
   571  0E2C                     	;# 
   572  0E2D                     	;# 
   573  0E2E                     	;# 
   574  0E2F                     	;# 
   575  0E90                     	;# 
   576  0E91                     	;# 
   577  0E92                     	;# 
   578  0E94                     	;# 
   579  0E95                     	;# 
   580  0E9C                     	;# 
   581  0E9D                     	;# 
   582  0E9E                     	;# 
   583  0E9F                     	;# 
   584  0EA0                     	;# 
   585  0EA1                     	;# 
   586  0EA2                     	;# 
   587  0EA3                     	;# 
   588  0EA4                     	;# 
   589  0EA5                     	;# 
   590  0EA6                     	;# 
   591  0EA7                     	;# 
   592  0F0F                     	;# 
   593  0F10                     	;# 
   594  0F11                     	;# 
   595  0F12                     	;# 
   596  0F13                     	;# 
   597  0F14                     	;# 
   598  0F15                     	;# 
   599  0F16                     	;# 
   600  0F17                     	;# 
   601  0F18                     	;# 
   602  0F19                     	;# 
   603  0F1A                     	;# 
   604  0F1B                     	;# 
   605  0F1C                     	;# 
   606  0F1D                     	;# 
   607  0F1E                     	;# 
   608  0F1F                     	;# 
   609  0F20                     	;# 
   610  0F21                     	;# 
   611  0F22                     	;# 
   612  0F23                     	;# 
   613  0F24                     	;# 
   614  0F25                     	;# 
   615  0F26                     	;# 
   616  0F27                     	;# 
   617  0F28                     	;# 
   618  0F29                     	;# 
   619  0F2A                     	;# 
   620  0F2B                     	;# 
   621  0F2C                     	;# 
   622  0F2D                     	;# 
   623  0F2E                     	;# 
   624  0F2F                     	;# 
   625  0F30                     	;# 
   626  0F31                     	;# 
   627  0F32                     	;# 
   628  0F33                     	;# 
   629  0F34                     	;# 
   630  0F35                     	;# 
   631  0F36                     	;# 
   632  0F37                     	;# 
   633  0FE4                     	;# 
   634  0FE5                     	;# 
   635  0FE6                     	;# 
   636  0FE7                     	;# 
   637  0FE8                     	;# 
   638  0FE9                     	;# 
   639  0FEA                     	;# 
   640  0FEB                     	;# 
   641  0FED                     	;# 
   642  0FEE                     	;# 
   643  0FEF                     	;# 
   644  0000                     	;# 
   645  0001                     	;# 
   646  0002                     	;# 
   647  0003                     	;# 
   648  0004                     	;# 
   649  0005                     	;# 
   650  0006                     	;# 
   651  0007                     	;# 
   652  0008                     	;# 
   653  0009                     	;# 
   654  000A                     	;# 
   655  000B                     	;# 
   656  000C                     	;# 
   657  000D                     	;# 
   658  000E                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0016                     	;# 
   668  0017                     	;# 
   669  0018                     	;# 
   670  0019                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  001B                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  008C                     	;# 
   679  008D                     	;# 
   680  008E                     	;# 
   681  0090                     	;# 
   682  0091                     	;# 
   683  0092                     	;# 
   684  0093                     	;# 
   685  0094                     	;# 
   686  0097                     	;# 
   687  009B                     	;# 
   688  009B                     	;# 
   689  009C                     	;# 
   690  009D                     	;# 
   691  009E                     	;# 
   692  009F                     	;# 
   693  010C                     	;# 
   694  010D                     	;# 
   695  010E                     	;# 
   696  0111                     	;# 
   697  0112                     	;# 
   698  0113                     	;# 
   699  0114                     	;# 
   700  0115                     	;# 
   701  0116                     	;# 
   702  0117                     	;# 
   703  0118                     	;# 
   704  0119                     	;# 
   705  018C                     	;# 
   706  018D                     	;# 
   707  018E                     	;# 
   708  0197                     	;# 
   709  0199                     	;# 
   710  0199                     	;# 
   711  0199                     	;# 
   712  019A                     	;# 
   713  019A                     	;# 
   714  019A                     	;# 
   715  019B                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019C                     	;# 
   721  019C                     	;# 
   722  019C                     	;# 
   723  019D                     	;# 
   724  019D                     	;# 
   725  019D                     	;# 
   726  019E                     	;# 
   727  019E                     	;# 
   728  019E                     	;# 
   729  019F                     	;# 
   730  019F                     	;# 
   731  019F                     	;# 
   732  019F                     	;# 
   733  019F                     	;# 
   734  020C                     	;# 
   735  020D                     	;# 
   736  020E                     	;# 
   737  0211                     	;# 
   738  0211                     	;# 
   739  0212                     	;# 
   740  0212                     	;# 
   741  0213                     	;# 
   742  0213                     	;# 
   743  0214                     	;# 
   744  0214                     	;# 
   745  0215                     	;# 
   746  0215                     	;# 
   747  0215                     	;# 
   748  0215                     	;# 
   749  0216                     	;# 
   750  0216                     	;# 
   751  0217                     	;# 
   752  0217                     	;# 
   753  0219                     	;# 
   754  021A                     	;# 
   755  021B                     	;# 
   756  021C                     	;# 
   757  021D                     	;# 
   758  021D                     	;# 
   759  021E                     	;# 
   760  021F                     	;# 
   761  028C                     	;# 
   762  028D                     	;# 
   763  028E                     	;# 
   764  0291                     	;# 
   765  0291                     	;# 
   766  0292                     	;# 
   767  0293                     	;# 
   768  0294                     	;# 
   769  0295                     	;# 
   770  0295                     	;# 
   771  0296                     	;# 
   772  0297                     	;# 
   773  0298                     	;# 
   774  029F                     	;# 
   775  030C                     	;# 
   776  030D                     	;# 
   777  030E                     	;# 
   778  0311                     	;# 
   779  0311                     	;# 
   780  0312                     	;# 
   781  0313                     	;# 
   782  0314                     	;# 
   783  0315                     	;# 
   784  0315                     	;# 
   785  0316                     	;# 
   786  0317                     	;# 
   787  0318                     	;# 
   788  038C                     	;# 
   789  038D                     	;# 
   790  038E                     	;# 
   791  0391                     	;# 
   792  0392                     	;# 
   793  0393                     	;# 
   794  0394                     	;# 
   795  0395                     	;# 
   796  0396                     	;# 
   797  0397                     	;# 
   798  0398                     	;# 
   799  0399                     	;# 
   800  039A                     	;# 
   801  039C                     	;# 
   802  039D                     	;# 
   803  039E                     	;# 
   804  039F                     	;# 
   805  0411                     	;# 
   806  0411                     	;# 
   807  0412                     	;# 
   808  0413                     	;# 
   809  0414                     	;# 
   810  0415                     	;# 
   811  0416                     	;# 
   812  0417                     	;# 
   813  0418                     	;# 
   814  0418                     	;# 
   815  0419                     	;# 
   816  041A                     	;# 
   817  041B                     	;# 
   818  041C                     	;# 
   819  041D                     	;# 
   820  041E                     	;# 
   821  041F                     	;# 
   822  0498                     	;# 
   823  0498                     	;# 
   824  0499                     	;# 
   825  049A                     	;# 
   826  049B                     	;# 
   827  049B                     	;# 
   828  049C                     	;# 
   829  049D                     	;# 
   830  049E                     	;# 
   831  049F                     	;# 
   832  0617                     	;# 
   833  0618                     	;# 
   834  0619                     	;# 
   835  0619                     	;# 
   836  061A                     	;# 
   837  061B                     	;# 
   838  061C                     	;# 
   839  061C                     	;# 
   840  061F                     	;# 
   841  0691                     	;# 
   842  0692                     	;# 
   843  0693                     	;# 
   844  0694                     	;# 
   845  0695                     	;# 
   846  0696                     	;# 
   847  0697                     	;# 
   848  0698                     	;# 
   849  0699                     	;# 
   850  0711                     	;# 
   851  0712                     	;# 
   852  0713                     	;# 
   853  0714                     	;# 
   854  0715                     	;# 
   855  0716                     	;# 
   856  0717                     	;# 
   857  0718                     	;# 
   858  0719                     	;# 
   859  0891                     	;# 
   860  0891                     	;# 
   861  0891                     	;# 
   862  0891                     	;# 
   863  0891                     	;# 
   864  0891                     	;# 
   865  0892                     	;# 
   866  0892                     	;# 
   867  0892                     	;# 
   868  0893                     	;# 
   869  0893                     	;# 
   870  0893                     	;# 
   871  0893                     	;# 
   872  0893                     	;# 
   873  0893                     	;# 
   874  0894                     	;# 
   875  0894                     	;# 
   876  0894                     	;# 
   877  0895                     	;# 
   878  0895                     	;# 
   879  0895                     	;# 
   880  0896                     	;# 
   881  0896                     	;# 
   882  0896                     	;# 
   883  089B                     	;# 
   884  0911                     	;# 
   885  0912                     	;# 
   886  0913                     	;# 
   887  0914                     	;# 
   888  0915                     	;# 
   889  0916                     	;# 
   890  0918                     	;# 
   891  0919                     	;# 
   892  091A                     	;# 
   893  091B                     	;# 
   894  091C                     	;# 
   895  091D                     	;# 
   896  091E                     	;# 
   897  091F                     	;# 
   898  0E0F                     	;# 
   899  0E10                     	;# 
   900  0E11                     	;# 
   901  0E12                     	;# 
   902  0E13                     	;# 
   903  0E14                     	;# 
   904  0E15                     	;# 
   905  0E16                     	;# 
   906  0E17                     	;# 
   907  0E18                     	;# 
   908  0E19                     	;# 
   909  0E1A                     	;# 
   910  0E1B                     	;# 
   911  0E1C                     	;# 
   912  0E1D                     	;# 
   913  0E1E                     	;# 
   914  0E1F                     	;# 
   915  0E20                     	;# 
   916  0E21                     	;# 
   917  0E22                     	;# 
   918  0E24                     	;# 
   919  0E25                     	;# 
   920  0E28                     	;# 
   921  0E29                     	;# 
   922  0E2A                     	;# 
   923  0E2B                     	;# 
   924  0E2C                     	;# 
   925  0E2D                     	;# 
   926  0E2E                     	;# 
   927  0E2F                     	;# 
   928  0E90                     	;# 
   929  0E91                     	;# 
   930  0E92                     	;# 
   931  0E94                     	;# 
   932  0E95                     	;# 
   933  0E9C                     	;# 
   934  0E9D                     	;# 
   935  0E9E                     	;# 
   936  0E9F                     	;# 
   937  0EA0                     	;# 
   938  0EA1                     	;# 
   939  0EA2                     	;# 
   940  0EA3                     	;# 
   941  0EA4                     	;# 
   942  0EA5                     	;# 
   943  0EA6                     	;# 
   944  0EA7                     	;# 
   945  0F0F                     	;# 
   946  0F10                     	;# 
   947  0F11                     	;# 
   948  0F12                     	;# 
   949  0F13                     	;# 
   950  0F14                     	;# 
   951  0F15                     	;# 
   952  0F16                     	;# 
   953  0F17                     	;# 
   954  0F18                     	;# 
   955  0F19                     	;# 
   956  0F1A                     	;# 
   957  0F1B                     	;# 
   958  0F1C                     	;# 
   959  0F1D                     	;# 
   960  0F1E                     	;# 
   961  0F1F                     	;# 
   962  0F20                     	;# 
   963  0F21                     	;# 
   964  0F22                     	;# 
   965  0F23                     	;# 
   966  0F24                     	;# 
   967  0F25                     	;# 
   968  0F26                     	;# 
   969  0F27                     	;# 
   970  0F28                     	;# 
   971  0F29                     	;# 
   972  0F2A                     	;# 
   973  0F2B                     	;# 
   974  0F2C                     	;# 
   975  0F2D                     	;# 
   976  0F2E                     	;# 
   977  0F2F                     	;# 
   978  0F30                     	;# 
   979  0F31                     	;# 
   980  0F32                     	;# 
   981  0F33                     	;# 
   982  0F34                     	;# 
   983  0F35                     	;# 
   984  0F36                     	;# 
   985  0F37                     	;# 
   986  0FE4                     	;# 
   987  0FE5                     	;# 
   988  0FE6                     	;# 
   989  0FE7                     	;# 
   990  0FE8                     	;# 
   991  0FE9                     	;# 
   992  0FEA                     	;# 
   993  0FEB                     	;# 
   994  0FED                     	;# 
   995  0FEE                     	;# 
   996  0FEF                     	;# 
   997  0000                     	;# 
   998  0001                     	;# 
   999  0002                     	;# 
  1000  0003                     	;# 
  1001  0004                     	;# 
  1002  0005                     	;# 
  1003  0006                     	;# 
  1004  0007                     	;# 
  1005  0008                     	;# 
  1006  0009                     	;# 
  1007  000A                     	;# 
  1008  000B                     	;# 
  1009  000C                     	;# 
  1010  000D                     	;# 
  1011  000E                     	;# 
  1012  0010                     	;# 
  1013  0011                     	;# 
  1014  0012                     	;# 
  1015  0013                     	;# 
  1016  0014                     	;# 
  1017  0015                     	;# 
  1018  0015                     	;# 
  1019  0016                     	;# 
  1020  0016                     	;# 
  1021  0017                     	;# 
  1022  0018                     	;# 
  1023  0019                     	;# 
  1024  0019                     	;# 
  1025  001A                     	;# 
  1026  001B                     	;# 
  1027  001C                     	;# 
  1028  001D                     	;# 
  1029  001E                     	;# 
  1030  001F                     	;# 
  1031  008C                     	;# 
  1032  008D                     	;# 
  1033  008E                     	;# 
  1034  0090                     	;# 
  1035  0091                     	;# 
  1036  0092                     	;# 
  1037  0093                     	;# 
  1038  0094                     	;# 
  1039  0097                     	;# 
  1040  009B                     	;# 
  1041  009B                     	;# 
  1042  009C                     	;# 
  1043  009D                     	;# 
  1044  009E                     	;# 
  1045  009F                     	;# 
  1046  010C                     	;# 
  1047  010D                     	;# 
  1048  010E                     	;# 
  1049  0111                     	;# 
  1050  0112                     	;# 
  1051  0113                     	;# 
  1052  0114                     	;# 
  1053  0115                     	;# 
  1054  0116                     	;# 
  1055  0117                     	;# 
  1056  0118                     	;# 
  1057  0119                     	;# 
  1058  018C                     	;# 
  1059  018D                     	;# 
  1060  018E                     	;# 
  1061  0197                     	;# 
  1062  0199                     	;# 
  1063  0199                     	;# 
  1064  0199                     	;# 
  1065  019A                     	;# 
  1066  019A                     	;# 
  1067  019A                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019B                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019C                     	;# 
  1074  019C                     	;# 
  1075  019C                     	;# 
  1076  019D                     	;# 
  1077  019D                     	;# 
  1078  019D                     	;# 
  1079  019E                     	;# 
  1080  019E                     	;# 
  1081  019E                     	;# 
  1082  019F                     	;# 
  1083  019F                     	;# 
  1084  019F                     	;# 
  1085  019F                     	;# 
  1086  019F                     	;# 
  1087  020C                     	;# 
  1088  020D                     	;# 
  1089  020E                     	;# 
  1090  0211                     	;# 
  1091  0211                     	;# 
  1092  0212                     	;# 
  1093  0212                     	;# 
  1094  0213                     	;# 
  1095  0213                     	;# 
  1096  0214                     	;# 
  1097  0214                     	;# 
  1098  0215                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0216                     	;# 
  1103  0216                     	;# 
  1104  0217                     	;# 
  1105  0217                     	;# 
  1106  0219                     	;# 
  1107  021A                     	;# 
  1108  021B                     	;# 
  1109  021C                     	;# 
  1110  021D                     	;# 
  1111  021D                     	;# 
  1112  021E                     	;# 
  1113  021F                     	;# 
  1114  028C                     	;# 
  1115  028D                     	;# 
  1116  028E                     	;# 
  1117  0291                     	;# 
  1118  0291                     	;# 
  1119  0292                     	;# 
  1120  0293                     	;# 
  1121  0294                     	;# 
  1122  0295                     	;# 
  1123  0295                     	;# 
  1124  0296                     	;# 
  1125  0297                     	;# 
  1126  0298                     	;# 
  1127  029F                     	;# 
  1128  030C                     	;# 
  1129  030D                     	;# 
  1130  030E                     	;# 
  1131  0311                     	;# 
  1132  0311                     	;# 
  1133  0312                     	;# 
  1134  0313                     	;# 
  1135  0314                     	;# 
  1136  0315                     	;# 
  1137  0315                     	;# 
  1138  0316                     	;# 
  1139  0317                     	;# 
  1140  0318                     	;# 
  1141  038C                     	;# 
  1142  038D                     	;# 
  1143  038E                     	;# 
  1144  0391                     	;# 
  1145  0392                     	;# 
  1146  0393                     	;# 
  1147  0394                     	;# 
  1148  0395                     	;# 
  1149  0396                     	;# 
  1150  0397                     	;# 
  1151  0398                     	;# 
  1152  0399                     	;# 
  1153  039A                     	;# 
  1154  039C                     	;# 
  1155  039D                     	;# 
  1156  039E                     	;# 
  1157  039F                     	;# 
  1158  0411                     	;# 
  1159  0411                     	;# 
  1160  0412                     	;# 
  1161  0413                     	;# 
  1162  0414                     	;# 
  1163  0415                     	;# 
  1164  0416                     	;# 
  1165  0417                     	;# 
  1166  0418                     	;# 
  1167  0418                     	;# 
  1168  0419                     	;# 
  1169  041A                     	;# 
  1170  041B                     	;# 
  1171  041C                     	;# 
  1172  041D                     	;# 
  1173  041E                     	;# 
  1174  041F                     	;# 
  1175  0498                     	;# 
  1176  0498                     	;# 
  1177  0499                     	;# 
  1178  049A                     	;# 
  1179  049B                     	;# 
  1180  049B                     	;# 
  1181  049C                     	;# 
  1182  049D                     	;# 
  1183  049E                     	;# 
  1184  049F                     	;# 
  1185  0617                     	;# 
  1186  0618                     	;# 
  1187  0619                     	;# 
  1188  0619                     	;# 
  1189  061A                     	;# 
  1190  061B                     	;# 
  1191  061C                     	;# 
  1192  061C                     	;# 
  1193  061F                     	;# 
  1194  0691                     	;# 
  1195  0692                     	;# 
  1196  0693                     	;# 
  1197  0694                     	;# 
  1198  0695                     	;# 
  1199  0696                     	;# 
  1200  0697                     	;# 
  1201  0698                     	;# 
  1202  0699                     	;# 
  1203  0711                     	;# 
  1204  0712                     	;# 
  1205  0713                     	;# 
  1206  0714                     	;# 
  1207  0715                     	;# 
  1208  0716                     	;# 
  1209  0717                     	;# 
  1210  0718                     	;# 
  1211  0719                     	;# 
  1212  0891                     	;# 
  1213  0891                     	;# 
  1214  0891                     	;# 
  1215  0891                     	;# 
  1216  0891                     	;# 
  1217  0891                     	;# 
  1218  0892                     	;# 
  1219  0892                     	;# 
  1220  0892                     	;# 
  1221  0893                     	;# 
  1222  0893                     	;# 
  1223  0893                     	;# 
  1224  0893                     	;# 
  1225  0893                     	;# 
  1226  0893                     	;# 
  1227  0894                     	;# 
  1228  0894                     	;# 
  1229  0894                     	;# 
  1230  0895                     	;# 
  1231  0895                     	;# 
  1232  0895                     	;# 
  1233  0896                     	;# 
  1234  0896                     	;# 
  1235  0896                     	;# 
  1236  089B                     	;# 
  1237  0911                     	;# 
  1238  0912                     	;# 
  1239  0913                     	;# 
  1240  0914                     	;# 
  1241  0915                     	;# 
  1242  0916                     	;# 
  1243  0918                     	;# 
  1244  0919                     	;# 
  1245  091A                     	;# 
  1246  091B                     	;# 
  1247  091C                     	;# 
  1248  091D                     	;# 
  1249  091E                     	;# 
  1250  091F                     	;# 
  1251  0E0F                     	;# 
  1252  0E10                     	;# 
  1253  0E11                     	;# 
  1254  0E12                     	;# 
  1255  0E13                     	;# 
  1256  0E14                     	;# 
  1257  0E15                     	;# 
  1258  0E16                     	;# 
  1259  0E17                     	;# 
  1260  0E18                     	;# 
  1261  0E19                     	;# 
  1262  0E1A                     	;# 
  1263  0E1B                     	;# 
  1264  0E1C                     	;# 
  1265  0E1D                     	;# 
  1266  0E1E                     	;# 
  1267  0E1F                     	;# 
  1268  0E20                     	;# 
  1269  0E21                     	;# 
  1270  0E22                     	;# 
  1271  0E24                     	;# 
  1272  0E25                     	;# 
  1273  0E28                     	;# 
  1274  0E29                     	;# 
  1275  0E2A                     	;# 
  1276  0E2B                     	;# 
  1277  0E2C                     	;# 
  1278  0E2D                     	;# 
  1279  0E2E                     	;# 
  1280  0E2F                     	;# 
  1281  0E90                     	;# 
  1282  0E91                     	;# 
  1283  0E92                     	;# 
  1284  0E94                     	;# 
  1285  0E95                     	;# 
  1286  0E9C                     	;# 
  1287  0E9D                     	;# 
  1288  0E9E                     	;# 
  1289  0E9F                     	;# 
  1290  0EA0                     	;# 
  1291  0EA1                     	;# 
  1292  0EA2                     	;# 
  1293  0EA3                     	;# 
  1294  0EA4                     	;# 
  1295  0EA5                     	;# 
  1296  0EA6                     	;# 
  1297  0EA7                     	;# 
  1298  0F0F                     	;# 
  1299  0F10                     	;# 
  1300  0F11                     	;# 
  1301  0F12                     	;# 
  1302  0F13                     	;# 
  1303  0F14                     	;# 
  1304  0F15                     	;# 
  1305  0F16                     	;# 
  1306  0F17                     	;# 
  1307  0F18                     	;# 
  1308  0F19                     	;# 
  1309  0F1A                     	;# 
  1310  0F1B                     	;# 
  1311  0F1C                     	;# 
  1312  0F1D                     	;# 
  1313  0F1E                     	;# 
  1314  0F1F                     	;# 
  1315  0F20                     	;# 
  1316  0F21                     	;# 
  1317  0F22                     	;# 
  1318  0F23                     	;# 
  1319  0F24                     	;# 
  1320  0F25                     	;# 
  1321  0F26                     	;# 
  1322  0F27                     	;# 
  1323  0F28                     	;# 
  1324  0F29                     	;# 
  1325  0F2A                     	;# 
  1326  0F2B                     	;# 
  1327  0F2C                     	;# 
  1328  0F2D                     	;# 
  1329  0F2E                     	;# 
  1330  0F2F                     	;# 
  1331  0F30                     	;# 
  1332  0F31                     	;# 
  1333  0F32                     	;# 
  1334  0F33                     	;# 
  1335  0F34                     	;# 
  1336  0F35                     	;# 
  1337  0F36                     	;# 
  1338  0F37                     	;# 
  1339  0FE4                     	;# 
  1340  0FE5                     	;# 
  1341  0FE6                     	;# 
  1342  0FE7                     	;# 
  1343  0FE8                     	;# 
  1344  0FE9                     	;# 
  1345  0FEA                     	;# 
  1346  0FEB                     	;# 
  1347  0FED                     	;# 
  1348  0FEE                     	;# 
  1349  0FEF                     	;# 
  1350  0000                     	;# 
  1351  0001                     	;# 
  1352  0002                     	;# 
  1353  0003                     	;# 
  1354  0004                     	;# 
  1355  0005                     	;# 
  1356  0006                     	;# 
  1357  0007                     	;# 
  1358  0008                     	;# 
  1359  0009                     	;# 
  1360  000A                     	;# 
  1361  000B                     	;# 
  1362  000C                     	;# 
  1363  000D                     	;# 
  1364  000E                     	;# 
  1365  0010                     	;# 
  1366  0011                     	;# 
  1367  0012                     	;# 
  1368  0013                     	;# 
  1369  0014                     	;# 
  1370  0015                     	;# 
  1371  0015                     	;# 
  1372  0016                     	;# 
  1373  0016                     	;# 
  1374  0017                     	;# 
  1375  0018                     	;# 
  1376  0019                     	;# 
  1377  0019                     	;# 
  1378  001A                     	;# 
  1379  001B                     	;# 
  1380  001C                     	;# 
  1381  001D                     	;# 
  1382  001E                     	;# 
  1383  001F                     	;# 
  1384  008C                     	;# 
  1385  008D                     	;# 
  1386  008E                     	;# 
  1387  0090                     	;# 
  1388  0091                     	;# 
  1389  0092                     	;# 
  1390  0093                     	;# 
  1391  0094                     	;# 
  1392  0097                     	;# 
  1393  009B                     	;# 
  1394  009B                     	;# 
  1395  009C                     	;# 
  1396  009D                     	;# 
  1397  009E                     	;# 
  1398  009F                     	;# 
  1399  010C                     	;# 
  1400  010D                     	;# 
  1401  010E                     	;# 
  1402  0111                     	;# 
  1403  0112                     	;# 
  1404  0113                     	;# 
  1405  0114                     	;# 
  1406  0115                     	;# 
  1407  0116                     	;# 
  1408  0117                     	;# 
  1409  0118                     	;# 
  1410  0119                     	;# 
  1411  018C                     	;# 
  1412  018D                     	;# 
  1413  018E                     	;# 
  1414  0197                     	;# 
  1415  0199                     	;# 
  1416  0199                     	;# 
  1417  0199                     	;# 
  1418  019A                     	;# 
  1419  019A                     	;# 
  1420  019A                     	;# 
  1421  019B                     	;# 
  1422  019B                     	;# 
  1423  019B                     	;# 
  1424  019B                     	;# 
  1425  019B                     	;# 
  1426  019C                     	;# 
  1427  019C                     	;# 
  1428  019C                     	;# 
  1429  019D                     	;# 
  1430  019D                     	;# 
  1431  019D                     	;# 
  1432  019E                     	;# 
  1433  019E                     	;# 
  1434  019E                     	;# 
  1435  019F                     	;# 
  1436  019F                     	;# 
  1437  019F                     	;# 
  1438  019F                     	;# 
  1439  019F                     	;# 
  1440  020C                     	;# 
  1441  020D                     	;# 
  1442  020E                     	;# 
  1443  0211                     	;# 
  1444  0211                     	;# 
  1445  0212                     	;# 
  1446  0212                     	;# 
  1447  0213                     	;# 
  1448  0213                     	;# 
  1449  0214                     	;# 
  1450  0214                     	;# 
  1451  0215                     	;# 
  1452  0215                     	;# 
  1453  0215                     	;# 
  1454  0215                     	;# 
  1455  0216                     	;# 
  1456  0216                     	;# 
  1457  0217                     	;# 
  1458  0217                     	;# 
  1459  0219                     	;# 
  1460  021A                     	;# 
  1461  021B                     	;# 
  1462  021C                     	;# 
  1463  021D                     	;# 
  1464  021D                     	;# 
  1465  021E                     	;# 
  1466  021F                     	;# 
  1467  028C                     	;# 
  1468  028D                     	;# 
  1469  028E                     	;# 
  1470  0291                     	;# 
  1471  0291                     	;# 
  1472  0292                     	;# 
  1473  0293                     	;# 
  1474  0294                     	;# 
  1475  0295                     	;# 
  1476  0295                     	;# 
  1477  0296                     	;# 
  1478  0297                     	;# 
  1479  0298                     	;# 
  1480  029F                     	;# 
  1481  030C                     	;# 
  1482  030D                     	;# 
  1483  030E                     	;# 
  1484  0311                     	;# 
  1485  0311                     	;# 
  1486  0312                     	;# 
  1487  0313                     	;# 
  1488  0314                     	;# 
  1489  0315                     	;# 
  1490  0315                     	;# 
  1491  0316                     	;# 
  1492  0317                     	;# 
  1493  0318                     	;# 
  1494  038C                     	;# 
  1495  038D                     	;# 
  1496  038E                     	;# 
  1497  0391                     	;# 
  1498  0392                     	;# 
  1499  0393                     	;# 
  1500  0394                     	;# 
  1501  0395                     	;# 
  1502  0396                     	;# 
  1503  0397                     	;# 
  1504  0398                     	;# 
  1505  0399                     	;# 
  1506  039A                     	;# 
  1507  039C                     	;# 
  1508  039D                     	;# 
  1509  039E                     	;# 
  1510  039F                     	;# 
  1511  0411                     	;# 
  1512  0411                     	;# 
  1513  0412                     	;# 
  1514  0413                     	;# 
  1515  0414                     	;# 
  1516  0415                     	;# 
  1517  0416                     	;# 
  1518  0417                     	;# 
  1519  0418                     	;# 
  1520  0418                     	;# 
  1521  0419                     	;# 
  1522  041A                     	;# 
  1523  041B                     	;# 
  1524  041C                     	;# 
  1525  041D                     	;# 
  1526  041E                     	;# 
  1527  041F                     	;# 
  1528  0498                     	;# 
  1529  0498                     	;# 
  1530  0499                     	;# 
  1531  049A                     	;# 
  1532  049B                     	;# 
  1533  049B                     	;# 
  1534  049C                     	;# 
  1535  049D                     	;# 
  1536  049E                     	;# 
  1537  049F                     	;# 
  1538  0617                     	;# 
  1539  0618                     	;# 
  1540  0619                     	;# 
  1541  0619                     	;# 
  1542  061A                     	;# 
  1543  061B                     	;# 
  1544  061C                     	;# 
  1545  061C                     	;# 
  1546  061F                     	;# 
  1547  0691                     	;# 
  1548  0692                     	;# 
  1549  0693                     	;# 
  1550  0694                     	;# 
  1551  0695                     	;# 
  1552  0696                     	;# 
  1553  0697                     	;# 
  1554  0698                     	;# 
  1555  0699                     	;# 
  1556  0711                     	;# 
  1557  0712                     	;# 
  1558  0713                     	;# 
  1559  0714                     	;# 
  1560  0715                     	;# 
  1561  0716                     	;# 
  1562  0717                     	;# 
  1563  0718                     	;# 
  1564  0719                     	;# 
  1565  0891                     	;# 
  1566  0891                     	;# 
  1567  0891                     	;# 
  1568  0891                     	;# 
  1569  0891                     	;# 
  1570  0891                     	;# 
  1571  0892                     	;# 
  1572  0892                     	;# 
  1573  0892                     	;# 
  1574  0893                     	;# 
  1575  0893                     	;# 
  1576  0893                     	;# 
  1577  0893                     	;# 
  1578  0893                     	;# 
  1579  0893                     	;# 
  1580  0894                     	;# 
  1581  0894                     	;# 
  1582  0894                     	;# 
  1583  0895                     	;# 
  1584  0895                     	;# 
  1585  0895                     	;# 
  1586  0896                     	;# 
  1587  0896                     	;# 
  1588  0896                     	;# 
  1589  089B                     	;# 
  1590  0911                     	;# 
  1591  0912                     	;# 
  1592  0913                     	;# 
  1593  0914                     	;# 
  1594  0915                     	;# 
  1595  0916                     	;# 
  1596  0918                     	;# 
  1597  0919                     	;# 
  1598  091A                     	;# 
  1599  091B                     	;# 
  1600  091C                     	;# 
  1601  091D                     	;# 
  1602  091E                     	;# 
  1603  091F                     	;# 
  1604  0E0F                     	;# 
  1605  0E10                     	;# 
  1606  0E11                     	;# 
  1607  0E12                     	;# 
  1608  0E13                     	;# 
  1609  0E14                     	;# 
  1610  0E15                     	;# 
  1611  0E16                     	;# 
  1612  0E17                     	;# 
  1613  0E18                     	;# 
  1614  0E19                     	;# 
  1615  0E1A                     	;# 
  1616  0E1B                     	;# 
  1617  0E1C                     	;# 
  1618  0E1D                     	;# 
  1619  0E1E                     	;# 
  1620  0E1F                     	;# 
  1621  0E20                     	;# 
  1622  0E21                     	;# 
  1623  0E22                     	;# 
  1624  0E24                     	;# 
  1625  0E25                     	;# 
  1626  0E28                     	;# 
  1627  0E29                     	;# 
  1628  0E2A                     	;# 
  1629  0E2B                     	;# 
  1630  0E2C                     	;# 
  1631  0E2D                     	;# 
  1632  0E2E                     	;# 
  1633  0E2F                     	;# 
  1634  0E90                     	;# 
  1635  0E91                     	;# 
  1636  0E92                     	;# 
  1637  0E94                     	;# 
  1638  0E95                     	;# 
  1639  0E9C                     	;# 
  1640  0E9D                     	;# 
  1641  0E9E                     	;# 
  1642  0E9F                     	;# 
  1643  0EA0                     	;# 
  1644  0EA1                     	;# 
  1645  0EA2                     	;# 
  1646  0EA3                     	;# 
  1647  0EA4                     	;# 
  1648  0EA5                     	;# 
  1649  0EA6                     	;# 
  1650  0EA7                     	;# 
  1651  0F0F                     	;# 
  1652  0F10                     	;# 
  1653  0F11                     	;# 
  1654  0F12                     	;# 
  1655  0F13                     	;# 
  1656  0F14                     	;# 
  1657  0F15                     	;# 
  1658  0F16                     	;# 
  1659  0F17                     	;# 
  1660  0F18                     	;# 
  1661  0F19                     	;# 
  1662  0F1A                     	;# 
  1663  0F1B                     	;# 
  1664  0F1C                     	;# 
  1665  0F1D                     	;# 
  1666  0F1E                     	;# 
  1667  0F1F                     	;# 
  1668  0F20                     	;# 
  1669  0F21                     	;# 
  1670  0F22                     	;# 
  1671  0F23                     	;# 
  1672  0F24                     	;# 
  1673  0F25                     	;# 
  1674  0F26                     	;# 
  1675  0F27                     	;# 
  1676  0F28                     	;# 
  1677  0F29                     	;# 
  1678  0F2A                     	;# 
  1679  0F2B                     	;# 
  1680  0F2C                     	;# 
  1681  0F2D                     	;# 
  1682  0F2E                     	;# 
  1683  0F2F                     	;# 
  1684  0F30                     	;# 
  1685  0F31                     	;# 
  1686  0F32                     	;# 
  1687  0F33                     	;# 
  1688  0F34                     	;# 
  1689  0F35                     	;# 
  1690  0F36                     	;# 
  1691  0F37                     	;# 
  1692  0FE4                     	;# 
  1693  0FE5                     	;# 
  1694  0FE6                     	;# 
  1695  0FE7                     	;# 
  1696  0FE8                     	;# 
  1697  0FE9                     	;# 
  1698  0FEA                     	;# 
  1699  0FEB                     	;# 
  1700  0FED                     	;# 
  1701  0FEE                     	;# 
  1702  0FEF                     	;# 
  1703  0000                     	;# 
  1704  0001                     	;# 
  1705  0002                     	;# 
  1706  0003                     	;# 
  1707  0004                     	;# 
  1708  0005                     	;# 
  1709  0006                     	;# 
  1710  0007                     	;# 
  1711  0008                     	;# 
  1712  0009                     	;# 
  1713  000A                     	;# 
  1714  000B                     	;# 
  1715  000C                     	;# 
  1716  000D                     	;# 
  1717  000E                     	;# 
  1718  0010                     	;# 
  1719  0011                     	;# 
  1720  0012                     	;# 
  1721  0013                     	;# 
  1722  0014                     	;# 
  1723  0015                     	;# 
  1724  0015                     	;# 
  1725  0016                     	;# 
  1726  0016                     	;# 
  1727  0017                     	;# 
  1728  0018                     	;# 
  1729  0019                     	;# 
  1730  0019                     	;# 
  1731  001A                     	;# 
  1732  001B                     	;# 
  1733  001C                     	;# 
  1734  001D                     	;# 
  1735  001E                     	;# 
  1736  001F                     	;# 
  1737  008C                     	;# 
  1738  008D                     	;# 
  1739  008E                     	;# 
  1740  0090                     	;# 
  1741  0091                     	;# 
  1742  0092                     	;# 
  1743  0093                     	;# 
  1744  0094                     	;# 
  1745  0097                     	;# 
  1746  009B                     	;# 
  1747  009B                     	;# 
  1748  009C                     	;# 
  1749  009D                     	;# 
  1750  009E                     	;# 
  1751  009F                     	;# 
  1752  010C                     	;# 
  1753  010D                     	;# 
  1754  010E                     	;# 
  1755  0111                     	;# 
  1756  0112                     	;# 
  1757  0113                     	;# 
  1758  0114                     	;# 
  1759  0115                     	;# 
  1760  0116                     	;# 
  1761  0117                     	;# 
  1762  0118                     	;# 
  1763  0119                     	;# 
  1764  018C                     	;# 
  1765  018D                     	;# 
  1766  018E                     	;# 
  1767  0197                     	;# 
  1768  0199                     	;# 
  1769  0199                     	;# 
  1770  0199                     	;# 
  1771  019A                     	;# 
  1772  019A                     	;# 
  1773  019A                     	;# 
  1774  019B                     	;# 
  1775  019B                     	;# 
  1776  019B                     	;# 
  1777  019B                     	;# 
  1778  019B                     	;# 
  1779  019C                     	;# 
  1780  019C                     	;# 
  1781  019C                     	;# 
  1782  019D                     	;# 
  1783  019D                     	;# 
  1784  019D                     	;# 
  1785  019E                     	;# 
  1786  019E                     	;# 
  1787  019E                     	;# 
  1788  019F                     	;# 
  1789  019F                     	;# 
  1790  019F                     	;# 
  1791  019F                     	;# 
  1792  019F                     	;# 
  1793  020C                     	;# 
  1794  020D                     	;# 
  1795  020E                     	;# 
  1796  0211                     	;# 
  1797  0211                     	;# 
  1798  0212                     	;# 
  1799  0212                     	;# 
  1800  0213                     	;# 
  1801  0213                     	;# 
  1802  0214                     	;# 
  1803  0214                     	;# 
  1804  0215                     	;# 
  1805  0215                     	;# 
  1806  0215                     	;# 
  1807  0215                     	;# 
  1808  0216                     	;# 
  1809  0216                     	;# 
  1810  0217                     	;# 
  1811  0217                     	;# 
  1812  0219                     	;# 
  1813  021A                     	;# 
  1814  021B                     	;# 
  1815  021C                     	;# 
  1816  021D                     	;# 
  1817  021D                     	;# 
  1818  021E                     	;# 
  1819  021F                     	;# 
  1820  028C                     	;# 
  1821  028D                     	;# 
  1822  028E                     	;# 
  1823  0291                     	;# 
  1824  0291                     	;# 
  1825  0292                     	;# 
  1826  0293                     	;# 
  1827  0294                     	;# 
  1828  0295                     	;# 
  1829  0295                     	;# 
  1830  0296                     	;# 
  1831  0297                     	;# 
  1832  0298                     	;# 
  1833  029F                     	;# 
  1834  030C                     	;# 
  1835  030D                     	;# 
  1836  030E                     	;# 
  1837  0311                     	;# 
  1838  0311                     	;# 
  1839  0312                     	;# 
  1840  0313                     	;# 
  1841  0314                     	;# 
  1842  0315                     	;# 
  1843  0315                     	;# 
  1844  0316                     	;# 
  1845  0317                     	;# 
  1846  0318                     	;# 
  1847  038C                     	;# 
  1848  038D                     	;# 
  1849  038E                     	;# 
  1850  0391                     	;# 
  1851  0392                     	;# 
  1852  0393                     	;# 
  1853  0394                     	;# 
  1854  0395                     	;# 
  1855  0396                     	;# 
  1856  0397                     	;# 
  1857  0398                     	;# 
  1858  0399                     	;# 
  1859  039A                     	;# 
  1860  039C                     	;# 
  1861  039D                     	;# 
  1862  039E                     	;# 
  1863  039F                     	;# 
  1864  0411                     	;# 
  1865  0411                     	;# 
  1866  0412                     	;# 
  1867  0413                     	;# 
  1868  0414                     	;# 
  1869  0415                     	;# 
  1870  0416                     	;# 
  1871  0417                     	;# 
  1872  0418                     	;# 
  1873  0418                     	;# 
  1874  0419                     	;# 
  1875  041A                     	;# 
  1876  041B                     	;# 
  1877  041C                     	;# 
  1878  041D                     	;# 
  1879  041E                     	;# 
  1880  041F                     	;# 
  1881  0498                     	;# 
  1882  0498                     	;# 
  1883  0499                     	;# 
  1884  049A                     	;# 
  1885  049B                     	;# 
  1886  049B                     	;# 
  1887  049C                     	;# 
  1888  049D                     	;# 
  1889  049E                     	;# 
  1890  049F                     	;# 
  1891  0617                     	;# 
  1892  0618                     	;# 
  1893  0619                     	;# 
  1894  0619                     	;# 
  1895  061A                     	;# 
  1896  061B                     	;# 
  1897  061C                     	;# 
  1898  061C                     	;# 
  1899  061F                     	;# 
  1900  0691                     	;# 
  1901  0692                     	;# 
  1902  0693                     	;# 
  1903  0694                     	;# 
  1904  0695                     	;# 
  1905  0696                     	;# 
  1906  0697                     	;# 
  1907  0698                     	;# 
  1908  0699                     	;# 
  1909  0711                     	;# 
  1910  0712                     	;# 
  1911  0713                     	;# 
  1912  0714                     	;# 
  1913  0715                     	;# 
  1914  0716                     	;# 
  1915  0717                     	;# 
  1916  0718                     	;# 
  1917  0719                     	;# 
  1918  0891                     	;# 
  1919  0891                     	;# 
  1920  0891                     	;# 
  1921  0891                     	;# 
  1922  0891                     	;# 
  1923  0891                     	;# 
  1924  0892                     	;# 
  1925  0892                     	;# 
  1926  0892                     	;# 
  1927  0893                     	;# 
  1928  0893                     	;# 
  1929  0893                     	;# 
  1930  0893                     	;# 
  1931  0893                     	;# 
  1932  0893                     	;# 
  1933  0894                     	;# 
  1934  0894                     	;# 
  1935  0894                     	;# 
  1936  0895                     	;# 
  1937  0895                     	;# 
  1938  0895                     	;# 
  1939  0896                     	;# 
  1940  0896                     	;# 
  1941  0896                     	;# 
  1942  089B                     	;# 
  1943  0911                     	;# 
  1944  0912                     	;# 
  1945  0913                     	;# 
  1946  0914                     	;# 
  1947  0915                     	;# 
  1948  0916                     	;# 
  1949  0918                     	;# 
  1950  0919                     	;# 
  1951  091A                     	;# 
  1952  091B                     	;# 
  1953  091C                     	;# 
  1954  091D                     	;# 
  1955  091E                     	;# 
  1956  091F                     	;# 
  1957  0E0F                     	;# 
  1958  0E10                     	;# 
  1959  0E11                     	;# 
  1960  0E12                     	;# 
  1961  0E13                     	;# 
  1962  0E14                     	;# 
  1963  0E15                     	;# 
  1964  0E16                     	;# 
  1965  0E17                     	;# 
  1966  0E18                     	;# 
  1967  0E19                     	;# 
  1968  0E1A                     	;# 
  1969  0E1B                     	;# 
  1970  0E1C                     	;# 
  1971  0E1D                     	;# 
  1972  0E1E                     	;# 
  1973  0E1F                     	;# 
  1974  0E20                     	;# 
  1975  0E21                     	;# 
  1976  0E22                     	;# 
  1977  0E24                     	;# 
  1978  0E25                     	;# 
  1979  0E28                     	;# 
  1980  0E29                     	;# 
  1981  0E2A                     	;# 
  1982  0E2B                     	;# 
  1983  0E2C                     	;# 
  1984  0E2D                     	;# 
  1985  0E2E                     	;# 
  1986  0E2F                     	;# 
  1987  0E90                     	;# 
  1988  0E91                     	;# 
  1989  0E92                     	;# 
  1990  0E94                     	;# 
  1991  0E95                     	;# 
  1992  0E9C                     	;# 
  1993  0E9D                     	;# 
  1994  0E9E                     	;# 
  1995  0E9F                     	;# 
  1996  0EA0                     	;# 
  1997  0EA1                     	;# 
  1998  0EA2                     	;# 
  1999  0EA3                     	;# 
  2000  0EA4                     	;# 
  2001  0EA5                     	;# 
  2002  0EA6                     	;# 
  2003  0EA7                     	;# 
  2004  0F0F                     	;# 
  2005  0F10                     	;# 
  2006  0F11                     	;# 
  2007  0F12                     	;# 
  2008  0F13                     	;# 
  2009  0F14                     	;# 
  2010  0F15                     	;# 
  2011  0F16                     	;# 
  2012  0F17                     	;# 
  2013  0F18                     	;# 
  2014  0F19                     	;# 
  2015  0F1A                     	;# 
  2016  0F1B                     	;# 
  2017  0F1C                     	;# 
  2018  0F1D                     	;# 
  2019  0F1E                     	;# 
  2020  0F1F                     	;# 
  2021  0F20                     	;# 
  2022  0F21                     	;# 
  2023  0F22                     	;# 
  2024  0F23                     	;# 
  2025  0F24                     	;# 
  2026  0F25                     	;# 
  2027  0F26                     	;# 
  2028  0F27                     	;# 
  2029  0F28                     	;# 
  2030  0F29                     	;# 
  2031  0F2A                     	;# 
  2032  0F2B                     	;# 
  2033  0F2C                     	;# 
  2034  0F2D                     	;# 
  2035  0F2E                     	;# 
  2036  0F2F                     	;# 
  2037  0F30                     	;# 
  2038  0F31                     	;# 
  2039  0F32                     	;# 
  2040  0F33                     	;# 
  2041  0F34                     	;# 
  2042  0F35                     	;# 
  2043  0F36                     	;# 
  2044  0F37                     	;# 
  2045  0FE4                     	;# 
  2046  0FE5                     	;# 
  2047  0FE6                     	;# 
  2048  0FE7                     	;# 
  2049  0FE8                     	;# 
  2050  0FE9                     	;# 
  2051  0FEA                     	;# 
  2052  0FEB                     	;# 
  2053  0FED                     	;# 
  2054  0FEE                     	;# 
  2055  0FEF                     	;# 
  2056  0000                     	;# 
  2057  0001                     	;# 
  2058  0002                     	;# 
  2059  0003                     	;# 
  2060  0004                     	;# 
  2061  0005                     	;# 
  2062  0006                     	;# 
  2063  0007                     	;# 
  2064  0008                     	;# 
  2065  0009                     	;# 
  2066  000A                     	;# 
  2067  000B                     	;# 
  2068  000C                     	;# 
  2069  000D                     	;# 
  2070  000E                     	;# 
  2071  0010                     	;# 
  2072  0011                     	;# 
  2073  0012                     	;# 
  2074  0013                     	;# 
  2075  0014                     	;# 
  2076  0015                     	;# 
  2077  0015                     	;# 
  2078  0016                     	;# 
  2079  0016                     	;# 
  2080  0017                     	;# 
  2081  0018                     	;# 
  2082  0019                     	;# 
  2083  0019                     	;# 
  2084  001A                     	;# 
  2085  001B                     	;# 
  2086  001C                     	;# 
  2087  001D                     	;# 
  2088  001E                     	;# 
  2089  001F                     	;# 
  2090  008C                     	;# 
  2091  008D                     	;# 
  2092  008E                     	;# 
  2093  0090                     	;# 
  2094  0091                     	;# 
  2095  0092                     	;# 
  2096  0093                     	;# 
  2097  0094                     	;# 
  2098  0097                     	;# 
  2099  009B                     	;# 
  2100  009B                     	;# 
  2101  009C                     	;# 
  2102  009D                     	;# 
  2103  009E                     	;# 
  2104  009F                     	;# 
  2105  010C                     	;# 
  2106  010D                     	;# 
  2107  010E                     	;# 
  2108  0111                     	;# 
  2109  0112                     	;# 
  2110  0113                     	;# 
  2111  0114                     	;# 
  2112  0115                     	;# 
  2113  0116                     	;# 
  2114  0117                     	;# 
  2115  0118                     	;# 
  2116  0119                     	;# 
  2117  018C                     	;# 
  2118  018D                     	;# 
  2119  018E                     	;# 
  2120  0197                     	;# 
  2121  0199                     	;# 
  2122  0199                     	;# 
  2123  0199                     	;# 
  2124  019A                     	;# 
  2125  019A                     	;# 
  2126  019A                     	;# 
  2127  019B                     	;# 
  2128  019B                     	;# 
  2129  019B                     	;# 
  2130  019B                     	;# 
  2131  019B                     	;# 
  2132  019C                     	;# 
  2133  019C                     	;# 
  2134  019C                     	;# 
  2135  019D                     	;# 
  2136  019D                     	;# 
  2137  019D                     	;# 
  2138  019E                     	;# 
  2139  019E                     	;# 
  2140  019E                     	;# 
  2141  019F                     	;# 
  2142  019F                     	;# 
  2143  019F                     	;# 
  2144  019F                     	;# 
  2145  019F                     	;# 
  2146  020C                     	;# 
  2147  020D                     	;# 
  2148  020E                     	;# 
  2149  0211                     	;# 
  2150  0211                     	;# 
  2151  0212                     	;# 
  2152  0212                     	;# 
  2153  0213                     	;# 
  2154  0213                     	;# 
  2155  0214                     	;# 
  2156  0214                     	;# 
  2157  0215                     	;# 
  2158  0215                     	;# 
  2159  0215                     	;# 
  2160  0215                     	;# 
  2161  0216                     	;# 
  2162  0216                     	;# 
  2163  0217                     	;# 
  2164  0217                     	;# 
  2165  0219                     	;# 
  2166  021A                     	;# 
  2167  021B                     	;# 
  2168  021C                     	;# 
  2169  021D                     	;# 
  2170  021D                     	;# 
  2171  021E                     	;# 
  2172  021F                     	;# 
  2173  028C                     	;# 
  2174  028D                     	;# 
  2175  028E                     	;# 
  2176  0291                     	;# 
  2177  0291                     	;# 
  2178  0292                     	;# 
  2179  0293                     	;# 
  2180  0294                     	;# 
  2181  0295                     	;# 
  2182  0295                     	;# 
  2183  0296                     	;# 
  2184  0297                     	;# 
  2185  0298                     	;# 
  2186  029F                     	;# 
  2187  030C                     	;# 
  2188  030D                     	;# 
  2189  030E                     	;# 
  2190  0311                     	;# 
  2191  0311                     	;# 
  2192  0312                     	;# 
  2193  0313                     	;# 
  2194  0314                     	;# 
  2195  0315                     	;# 
  2196  0315                     	;# 
  2197  0316                     	;# 
  2198  0317                     	;# 
  2199  0318                     	;# 
  2200  038C                     	;# 
  2201  038D                     	;# 
  2202  038E                     	;# 
  2203  0391                     	;# 
  2204  0392                     	;# 
  2205  0393                     	;# 
  2206  0394                     	;# 
  2207  0395                     	;# 
  2208  0396                     	;# 
  2209  0397                     	;# 
  2210  0398                     	;# 
  2211  0399                     	;# 
  2212  039A                     	;# 
  2213  039C                     	;# 
  2214  039D                     	;# 
  2215  039E                     	;# 
  2216  039F                     	;# 
  2217  0411                     	;# 
  2218  0411                     	;# 
  2219  0412                     	;# 
  2220  0413                     	;# 
  2221  0414                     	;# 
  2222  0415                     	;# 
  2223  0416                     	;# 
  2224  0417                     	;# 
  2225  0418                     	;# 
  2226  0418                     	;# 
  2227  0419                     	;# 
  2228  041A                     	;# 
  2229  041B                     	;# 
  2230  041C                     	;# 
  2231  041D                     	;# 
  2232  041E                     	;# 
  2233  041F                     	;# 
  2234  0498                     	;# 
  2235  0498                     	;# 
  2236  0499                     	;# 
  2237  049A                     	;# 
  2238  049B                     	;# 
  2239  049B                     	;# 
  2240  049C                     	;# 
  2241  049D                     	;# 
  2242  049E                     	;# 
  2243  049F                     	;# 
  2244  0617                     	;# 
  2245  0618                     	;# 
  2246  0619                     	;# 
  2247  0619                     	;# 
  2248  061A                     	;# 
  2249  061B                     	;# 
  2250  061C                     	;# 
  2251  061C                     	;# 
  2252  061F                     	;# 
  2253  0691                     	;# 
  2254  0692                     	;# 
  2255  0693                     	;# 
  2256  0694                     	;# 
  2257  0695                     	;# 
  2258  0696                     	;# 
  2259  0697                     	;# 
  2260  0698                     	;# 
  2261  0699                     	;# 
  2262  0711                     	;# 
  2263  0712                     	;# 
  2264  0713                     	;# 
  2265  0714                     	;# 
  2266  0715                     	;# 
  2267  0716                     	;# 
  2268  0717                     	;# 
  2269  0718                     	;# 
  2270  0719                     	;# 
  2271  0891                     	;# 
  2272  0891                     	;# 
  2273  0891                     	;# 
  2274  0891                     	;# 
  2275  0891                     	;# 
  2276  0891                     	;# 
  2277  0892                     	;# 
  2278  0892                     	;# 
  2279  0892                     	;# 
  2280  0893                     	;# 
  2281  0893                     	;# 
  2282  0893                     	;# 
  2283  0893                     	;# 
  2284  0893                     	;# 
  2285  0893                     	;# 
  2286  0894                     	;# 
  2287  0894                     	;# 
  2288  0894                     	;# 
  2289  0895                     	;# 
  2290  0895                     	;# 
  2291  0895                     	;# 
  2292  0896                     	;# 
  2293  0896                     	;# 
  2294  0896                     	;# 
  2295  089B                     	;# 
  2296  0911                     	;# 
  2297  0912                     	;# 
  2298  0913                     	;# 
  2299  0914                     	;# 
  2300  0915                     	;# 
  2301  0916                     	;# 
  2302  0918                     	;# 
  2303  0919                     	;# 
  2304  091A                     	;# 
  2305  091B                     	;# 
  2306  091C                     	;# 
  2307  091D                     	;# 
  2308  091E                     	;# 
  2309  091F                     	;# 
  2310  0E0F                     	;# 
  2311  0E10                     	;# 
  2312  0E11                     	;# 
  2313  0E12                     	;# 
  2314  0E13                     	;# 
  2315  0E14                     	;# 
  2316  0E15                     	;# 
  2317  0E16                     	;# 
  2318  0E17                     	;# 
  2319  0E18                     	;# 
  2320  0E19                     	;# 
  2321  0E1A                     	;# 
  2322  0E1B                     	;# 
  2323  0E1C                     	;# 
  2324  0E1D                     	;# 
  2325  0E1E                     	;# 
  2326  0E1F                     	;# 
  2327  0E20                     	;# 
  2328  0E21                     	;# 
  2329  0E22                     	;# 
  2330  0E24                     	;# 
  2331  0E25                     	;# 
  2332  0E28                     	;# 
  2333  0E29                     	;# 
  2334  0E2A                     	;# 
  2335  0E2B                     	;# 
  2336  0E2C                     	;# 
  2337  0E2D                     	;# 
  2338  0E2E                     	;# 
  2339  0E2F                     	;# 
  2340  0E90                     	;# 
  2341  0E91                     	;# 
  2342  0E92                     	;# 
  2343  0E94                     	;# 
  2344  0E95                     	;# 
  2345  0E9C                     	;# 
  2346  0E9D                     	;# 
  2347  0E9E                     	;# 
  2348  0E9F                     	;# 
  2349  0EA0                     	;# 
  2350  0EA1                     	;# 
  2351  0EA2                     	;# 
  2352  0EA3                     	;# 
  2353  0EA4                     	;# 
  2354  0EA5                     	;# 
  2355  0EA6                     	;# 
  2356  0EA7                     	;# 
  2357  0F0F                     	;# 
  2358  0F10                     	;# 
  2359  0F11                     	;# 
  2360  0F12                     	;# 
  2361  0F13                     	;# 
  2362  0F14                     	;# 
  2363  0F15                     	;# 
  2364  0F16                     	;# 
  2365  0F17                     	;# 
  2366  0F18                     	;# 
  2367  0F19                     	;# 
  2368  0F1A                     	;# 
  2369  0F1B                     	;# 
  2370  0F1C                     	;# 
  2371  0F1D                     	;# 
  2372  0F1E                     	;# 
  2373  0F1F                     	;# 
  2374  0F20                     	;# 
  2375  0F21                     	;# 
  2376  0F22                     	;# 
  2377  0F23                     	;# 
  2378  0F24                     	;# 
  2379  0F25                     	;# 
  2380  0F26                     	;# 
  2381  0F27                     	;# 
  2382  0F28                     	;# 
  2383  0F29                     	;# 
  2384  0F2A                     	;# 
  2385  0F2B                     	;# 
  2386  0F2C                     	;# 
  2387  0F2D                     	;# 
  2388  0F2E                     	;# 
  2389  0F2F                     	;# 
  2390  0F30                     	;# 
  2391  0F31                     	;# 
  2392  0F32                     	;# 
  2393  0F33                     	;# 
  2394  0F34                     	;# 
  2395  0F35                     	;# 
  2396  0F36                     	;# 
  2397  0F37                     	;# 
  2398  0FE4                     	;# 
  2399  0FE5                     	;# 
  2400  0FE6                     	;# 
  2401  0FE7                     	;# 
  2402  0FE8                     	;# 
  2403  0FE9                     	;# 
  2404  0FEA                     	;# 
  2405  0FEB                     	;# 
  2406  0FED                     	;# 
  2407  0FEE                     	;# 
  2408  0FEF                     	;# 
  2409  0000                     	;# 
  2410  0001                     	;# 
  2411  0002                     	;# 
  2412  0003                     	;# 
  2413  0004                     	;# 
  2414  0005                     	;# 
  2415  0006                     	;# 
  2416  0007                     	;# 
  2417  0008                     	;# 
  2418  0009                     	;# 
  2419  000A                     	;# 
  2420  000B                     	;# 
  2421  000C                     	;# 
  2422  000D                     	;# 
  2423  000E                     	;# 
  2424  0010                     	;# 
  2425  0011                     	;# 
  2426  0012                     	;# 
  2427  0013                     	;# 
  2428  0014                     	;# 
  2429  0015                     	;# 
  2430  0015                     	;# 
  2431  0016                     	;# 
  2432  0016                     	;# 
  2433  0017                     	;# 
  2434  0018                     	;# 
  2435  0019                     	;# 
  2436  0019                     	;# 
  2437  001A                     	;# 
  2438  001B                     	;# 
  2439  001C                     	;# 
  2440  001D                     	;# 
  2441  001E                     	;# 
  2442  001F                     	;# 
  2443  008C                     	;# 
  2444  008D                     	;# 
  2445  008E                     	;# 
  2446  0090                     	;# 
  2447  0091                     	;# 
  2448  0092                     	;# 
  2449  0093                     	;# 
  2450  0094                     	;# 
  2451  0097                     	;# 
  2452  009B                     	;# 
  2453  009B                     	;# 
  2454  009C                     	;# 
  2455  009D                     	;# 
  2456  009E                     	;# 
  2457  009F                     	;# 
  2458  010C                     	;# 
  2459  010D                     	;# 
  2460  010E                     	;# 
  2461  0111                     	;# 
  2462  0112                     	;# 
  2463  0113                     	;# 
  2464  0114                     	;# 
  2465  0115                     	;# 
  2466  0116                     	;# 
  2467  0117                     	;# 
  2468  0118                     	;# 
  2469  0119                     	;# 
  2470  018C                     	;# 
  2471  018D                     	;# 
  2472  018E                     	;# 
  2473  0197                     	;# 
  2474  0199                     	;# 
  2475  0199                     	;# 
  2476  0199                     	;# 
  2477  019A                     	;# 
  2478  019A                     	;# 
  2479  019A                     	;# 
  2480  019B                     	;# 
  2481  019B                     	;# 
  2482  019B                     	;# 
  2483  019B                     	;# 
  2484  019B                     	;# 
  2485  019C                     	;# 
  2486  019C                     	;# 
  2487  019C                     	;# 
  2488  019D                     	;# 
  2489  019D                     	;# 
  2490  019D                     	;# 
  2491  019E                     	;# 
  2492  019E                     	;# 
  2493  019E                     	;# 
  2494  019F                     	;# 
  2495  019F                     	;# 
  2496  019F                     	;# 
  2497  019F                     	;# 
  2498  019F                     	;# 
  2499  020C                     	;# 
  2500  020D                     	;# 
  2501  020E                     	;# 
  2502  0211                     	;# 
  2503  0211                     	;# 
  2504  0212                     	;# 
  2505  0212                     	;# 
  2506  0213                     	;# 
  2507  0213                     	;# 
  2508  0214                     	;# 
  2509  0214                     	;# 
  2510  0215                     	;# 
  2511  0215                     	;# 
  2512  0215                     	;# 
  2513  0215                     	;# 
  2514  0216                     	;# 
  2515  0216                     	;# 
  2516  0217                     	;# 
  2517  0217                     	;# 
  2518  0219                     	;# 
  2519  021A                     	;# 
  2520  021B                     	;# 
  2521  021C                     	;# 
  2522  021D                     	;# 
  2523  021D                     	;# 
  2524  021E                     	;# 
  2525  021F                     	;# 
  2526  028C                     	;# 
  2527  028D                     	;# 
  2528  028E                     	;# 
  2529  0291                     	;# 
  2530  0291                     	;# 
  2531  0292                     	;# 
  2532  0293                     	;# 
  2533  0294                     	;# 
  2534  0295                     	;# 
  2535  0295                     	;# 
  2536  0296                     	;# 
  2537  0297                     	;# 
  2538  0298                     	;# 
  2539  029F                     	;# 
  2540  030C                     	;# 
  2541  030D                     	;# 
  2542  030E                     	;# 
  2543  0311                     	;# 
  2544  0311                     	;# 
  2545  0312                     	;# 
  2546  0313                     	;# 
  2547  0314                     	;# 
  2548  0315                     	;# 
  2549  0315                     	;# 
  2550  0316                     	;# 
  2551  0317                     	;# 
  2552  0318                     	;# 
  2553  038C                     	;# 
  2554  038D                     	;# 
  2555  038E                     	;# 
  2556  0391                     	;# 
  2557  0392                     	;# 
  2558  0393                     	;# 
  2559  0394                     	;# 
  2560  0395                     	;# 
  2561  0396                     	;# 
  2562  0397                     	;# 
  2563  0398                     	;# 
  2564  0399                     	;# 
  2565  039A                     	;# 
  2566  039C                     	;# 
  2567  039D                     	;# 
  2568  039E                     	;# 
  2569  039F                     	;# 
  2570  0411                     	;# 
  2571  0411                     	;# 
  2572  0412                     	;# 
  2573  0413                     	;# 
  2574  0414                     	;# 
  2575  0415                     	;# 
  2576  0416                     	;# 
  2577  0417                     	;# 
  2578  0418                     	;# 
  2579  0418                     	;# 
  2580  0419                     	;# 
  2581  041A                     	;# 
  2582  041B                     	;# 
  2583  041C                     	;# 
  2584  041D                     	;# 
  2585  041E                     	;# 
  2586  041F                     	;# 
  2587  0498                     	;# 
  2588  0498                     	;# 
  2589  0499                     	;# 
  2590  049A                     	;# 
  2591  049B                     	;# 
  2592  049B                     	;# 
  2593  049C                     	;# 
  2594  049D                     	;# 
  2595  049E                     	;# 
  2596  049F                     	;# 
  2597  0617                     	;# 
  2598  0618                     	;# 
  2599  0619                     	;# 
  2600  0619                     	;# 
  2601  061A                     	;# 
  2602  061B                     	;# 
  2603  061C                     	;# 
  2604  061C                     	;# 
  2605  061F                     	;# 
  2606  0691                     	;# 
  2607  0692                     	;# 
  2608  0693                     	;# 
  2609  0694                     	;# 
  2610  0695                     	;# 
  2611  0696                     	;# 
  2612  0697                     	;# 
  2613  0698                     	;# 
  2614  0699                     	;# 
  2615  0711                     	;# 
  2616  0712                     	;# 
  2617  0713                     	;# 
  2618  0714                     	;# 
  2619  0715                     	;# 
  2620  0716                     	;# 
  2621  0717                     	;# 
  2622  0718                     	;# 
  2623  0719                     	;# 
  2624  0891                     	;# 
  2625  0891                     	;# 
  2626  0891                     	;# 
  2627  0891                     	;# 
  2628  0891                     	;# 
  2629  0891                     	;# 
  2630  0892                     	;# 
  2631  0892                     	;# 
  2632  0892                     	;# 
  2633  0893                     	;# 
  2634  0893                     	;# 
  2635  0893                     	;# 
  2636  0893                     	;# 
  2637  0893                     	;# 
  2638  0893                     	;# 
  2639  0894                     	;# 
  2640  0894                     	;# 
  2641  0894                     	;# 
  2642  0895                     	;# 
  2643  0895                     	;# 
  2644  0895                     	;# 
  2645  0896                     	;# 
  2646  0896                     	;# 
  2647  0896                     	;# 
  2648  089B                     	;# 
  2649  0911                     	;# 
  2650  0912                     	;# 
  2651  0913                     	;# 
  2652  0914                     	;# 
  2653  0915                     	;# 
  2654  0916                     	;# 
  2655  0918                     	;# 
  2656  0919                     	;# 
  2657  091A                     	;# 
  2658  091B                     	;# 
  2659  091C                     	;# 
  2660  091D                     	;# 
  2661  091E                     	;# 
  2662  091F                     	;# 
  2663  0E0F                     	;# 
  2664  0E10                     	;# 
  2665  0E11                     	;# 
  2666  0E12                     	;# 
  2667  0E13                     	;# 
  2668  0E14                     	;# 
  2669  0E15                     	;# 
  2670  0E16                     	;# 
  2671  0E17                     	;# 
  2672  0E18                     	;# 
  2673  0E19                     	;# 
  2674  0E1A                     	;# 
  2675  0E1B                     	;# 
  2676  0E1C                     	;# 
  2677  0E1D                     	;# 
  2678  0E1E                     	;# 
  2679  0E1F                     	;# 
  2680  0E20                     	;# 
  2681  0E21                     	;# 
  2682  0E22                     	;# 
  2683  0E24                     	;# 
  2684  0E25                     	;# 
  2685  0E28                     	;# 
  2686  0E29                     	;# 
  2687  0E2A                     	;# 
  2688  0E2B                     	;# 
  2689  0E2C                     	;# 
  2690  0E2D                     	;# 
  2691  0E2E                     	;# 
  2692  0E2F                     	;# 
  2693  0E90                     	;# 
  2694  0E91                     	;# 
  2695  0E92                     	;# 
  2696  0E94                     	;# 
  2697  0E95                     	;# 
  2698  0E9C                     	;# 
  2699  0E9D                     	;# 
  2700  0E9E                     	;# 
  2701  0E9F                     	;# 
  2702  0EA0                     	;# 
  2703  0EA1                     	;# 
  2704  0EA2                     	;# 
  2705  0EA3                     	;# 
  2706  0EA4                     	;# 
  2707  0EA5                     	;# 
  2708  0EA6                     	;# 
  2709  0EA7                     	;# 
  2710  0F0F                     	;# 
  2711  0F10                     	;# 
  2712  0F11                     	;# 
  2713  0F12                     	;# 
  2714  0F13                     	;# 
  2715  0F14                     	;# 
  2716  0F15                     	;# 
  2717  0F16                     	;# 
  2718  0F17                     	;# 
  2719  0F18                     	;# 
  2720  0F19                     	;# 
  2721  0F1A                     	;# 
  2722  0F1B                     	;# 
  2723  0F1C                     	;# 
  2724  0F1D                     	;# 
  2725  0F1E                     	;# 
  2726  0F1F                     	;# 
  2727  0F20                     	;# 
  2728  0F21                     	;# 
  2729  0F22                     	;# 
  2730  0F23                     	;# 
  2731  0F24                     	;# 
  2732  0F25                     	;# 
  2733  0F26                     	;# 
  2734  0F27                     	;# 
  2735  0F28                     	;# 
  2736  0F29                     	;# 
  2737  0F2A                     	;# 
  2738  0F2B                     	;# 
  2739  0F2C                     	;# 
  2740  0F2D                     	;# 
  2741  0F2E                     	;# 
  2742  0F2F                     	;# 
  2743  0F30                     	;# 
  2744  0F31                     	;# 
  2745  0F32                     	;# 
  2746  0F33                     	;# 
  2747  0F34                     	;# 
  2748  0F35                     	;# 
  2749  0F36                     	;# 
  2750  0F37                     	;# 
  2751  0FE4                     	;# 
  2752  0FE5                     	;# 
  2753  0FE6                     	;# 
  2754  0FE7                     	;# 
  2755  0FE8                     	;# 
  2756  0FE9                     	;# 
  2757  0FEA                     	;# 
  2758  0FEB                     	;# 
  2759  0FED                     	;# 
  2760  0FEE                     	;# 
  2761  0FEF                     	;# 
  2762  0000                     	;# 
  2763  0001                     	;# 
  2764  0002                     	;# 
  2765  0003                     	;# 
  2766  0004                     	;# 
  2767  0005                     	;# 
  2768  0006                     	;# 
  2769  0007                     	;# 
  2770  0008                     	;# 
  2771  0009                     	;# 
  2772  000A                     	;# 
  2773  000B                     	;# 
  2774  000C                     	;# 
  2775  000D                     	;# 
  2776  000E                     	;# 
  2777  0010                     	;# 
  2778  0011                     	;# 
  2779  0012                     	;# 
  2780  0013                     	;# 
  2781  0014                     	;# 
  2782  0015                     	;# 
  2783  0015                     	;# 
  2784  0016                     	;# 
  2785  0016                     	;# 
  2786  0017                     	;# 
  2787  0018                     	;# 
  2788  0019                     	;# 
  2789  0019                     	;# 
  2790  001A                     	;# 
  2791  001B                     	;# 
  2792  001C                     	;# 
  2793  001D                     	;# 
  2794  001E                     	;# 
  2795  001F                     	;# 
  2796  008C                     	;# 
  2797  008D                     	;# 
  2798  008E                     	;# 
  2799  0090                     	;# 
  2800  0091                     	;# 
  2801  0092                     	;# 
  2802  0093                     	;# 
  2803  0094                     	;# 
  2804  0097                     	;# 
  2805  009B                     	;# 
  2806  009B                     	;# 
  2807  009C                     	;# 
  2808  009D                     	;# 
  2809  009E                     	;# 
  2810  009F                     	;# 
  2811  010C                     	;# 
  2812  010D                     	;# 
  2813  010E                     	;# 
  2814  0111                     	;# 
  2815  0112                     	;# 
  2816  0113                     	;# 
  2817  0114                     	;# 
  2818  0115                     	;# 
  2819  0116                     	;# 
  2820  0117                     	;# 
  2821  0118                     	;# 
  2822  0119                     	;# 
  2823  018C                     	;# 
  2824  018D                     	;# 
  2825  018E                     	;# 
  2826  0197                     	;# 
  2827  0199                     	;# 
  2828  0199                     	;# 
  2829  0199                     	;# 
  2830  019A                     	;# 
  2831  019A                     	;# 
  2832  019A                     	;# 
  2833  019B                     	;# 
  2834  019B                     	;# 
  2835  019B                     	;# 
  2836  019B                     	;# 
  2837  019B                     	;# 
  2838  019C                     	;# 
  2839  019C                     	;# 
  2840  019C                     	;# 
  2841  019D                     	;# 
  2842  019D                     	;# 
  2843  019D                     	;# 
  2844  019E                     	;# 
  2845  019E                     	;# 
  2846  019E                     	;# 
  2847  019F                     	;# 
  2848  019F                     	;# 
  2849  019F                     	;# 
  2850  019F                     	;# 
  2851  019F                     	;# 
  2852  020C                     	;# 
  2853  020D                     	;# 
  2854  020E                     	;# 
  2855  0211                     	;# 
  2856  0211                     	;# 
  2857  0212                     	;# 
  2858  0212                     	;# 
  2859  0213                     	;# 
  2860  0213                     	;# 
  2861  0214                     	;# 
  2862  0214                     	;# 
  2863  0215                     	;# 
  2864  0215                     	;# 
  2865  0215                     	;# 
  2866  0215                     	;# 
  2867  0216                     	;# 
  2868  0216                     	;# 
  2869  0217                     	;# 
  2870  0217                     	;# 
  2871  0219                     	;# 
  2872  021A                     	;# 
  2873  021B                     	;# 
  2874  021C                     	;# 
  2875  021D                     	;# 
  2876  021D                     	;# 
  2877  021E                     	;# 
  2878  021F                     	;# 
  2879  028C                     	;# 
  2880  028D                     	;# 
  2881  028E                     	;# 
  2882  0291                     	;# 
  2883  0291                     	;# 
  2884  0292                     	;# 
  2885  0293                     	;# 
  2886  0294                     	;# 
  2887  0295                     	;# 
  2888  0295                     	;# 
  2889  0296                     	;# 
  2890  0297                     	;# 
  2891  0298                     	;# 
  2892  029F                     	;# 
  2893  030C                     	;# 
  2894  030D                     	;# 
  2895  030E                     	;# 
  2896  0311                     	;# 
  2897  0311                     	;# 
  2898  0312                     	;# 
  2899  0313                     	;# 
  2900  0314                     	;# 
  2901  0315                     	;# 
  2902  0315                     	;# 
  2903  0316                     	;# 
  2904  0317                     	;# 
  2905  0318                     	;# 
  2906  038C                     	;# 
  2907  038D                     	;# 
  2908  038E                     	;# 
  2909  0391                     	;# 
  2910  0392                     	;# 
  2911  0393                     	;# 
  2912  0394                     	;# 
  2913  0395                     	;# 
  2914  0396                     	;# 
  2915  0397                     	;# 
  2916  0398                     	;# 
  2917  0399                     	;# 
  2918  039A                     	;# 
  2919  039C                     	;# 
  2920  039D                     	;# 
  2921  039E                     	;# 
  2922  039F                     	;# 
  2923  0411                     	;# 
  2924  0411                     	;# 
  2925  0412                     	;# 
  2926  0413                     	;# 
  2927  0414                     	;# 
  2928  0415                     	;# 
  2929  0416                     	;# 
  2930  0417                     	;# 
  2931  0418                     	;# 
  2932  0418                     	;# 
  2933  0419                     	;# 
  2934  041A                     	;# 
  2935  041B                     	;# 
  2936  041C                     	;# 
  2937  041D                     	;# 
  2938  041E                     	;# 
  2939  041F                     	;# 
  2940  0498                     	;# 
  2941  0498                     	;# 
  2942  0499                     	;# 
  2943  049A                     	;# 
  2944  049B                     	;# 
  2945  049B                     	;# 
  2946  049C                     	;# 
  2947  049D                     	;# 
  2948  049E                     	;# 
  2949  049F                     	;# 
  2950  0617                     	;# 
  2951  0618                     	;# 
  2952  0619                     	;# 
  2953  0619                     	;# 
  2954  061A                     	;# 
  2955  061B                     	;# 
  2956  061C                     	;# 
  2957  061C                     	;# 
  2958  061F                     	;# 
  2959  0691                     	;# 
  2960  0692                     	;# 
  2961  0693                     	;# 
  2962  0694                     	;# 
  2963  0695                     	;# 
  2964  0696                     	;# 
  2965  0697                     	;# 
  2966  0698                     	;# 
  2967  0699                     	;# 
  2968  0711                     	;# 
  2969  0712                     	;# 
  2970  0713                     	;# 
  2971  0714                     	;# 
  2972  0715                     	;# 
  2973  0716                     	;# 
  2974  0717                     	;# 
  2975  0718                     	;# 
  2976  0719                     	;# 
  2977  0891                     	;# 
  2978  0891                     	;# 
  2979  0891                     	;# 
  2980  0891                     	;# 
  2981  0891                     	;# 
  2982  0891                     	;# 
  2983  0892                     	;# 
  2984  0892                     	;# 
  2985  0892                     	;# 
  2986  0893                     	;# 
  2987  0893                     	;# 
  2988  0893                     	;# 
  2989  0893                     	;# 
  2990  0893                     	;# 
  2991  0893                     	;# 
  2992  0894                     	;# 
  2993  0894                     	;# 
  2994  0894                     	;# 
  2995  0895                     	;# 
  2996  0895                     	;# 
  2997  0895                     	;# 
  2998  0896                     	;# 
  2999  0896                     	;# 
  3000  0896                     	;# 
  3001  089B                     	;# 
  3002  0911                     	;# 
  3003  0912                     	;# 
  3004  0913                     	;# 
  3005  0914                     	;# 
  3006  0915                     	;# 
  3007  0916                     	;# 
  3008  0918                     	;# 
  3009  0919                     	;# 
  3010  091A                     	;# 
  3011  091B                     	;# 
  3012  091C                     	;# 
  3013  091D                     	;# 
  3014  091E                     	;# 
  3015  091F                     	;# 
  3016  0E0F                     	;# 
  3017  0E10                     	;# 
  3018  0E11                     	;# 
  3019  0E12                     	;# 
  3020  0E13                     	;# 
  3021  0E14                     	;# 
  3022  0E15                     	;# 
  3023  0E16                     	;# 
  3024  0E17                     	;# 
  3025  0E18                     	;# 
  3026  0E19                     	;# 
  3027  0E1A                     	;# 
  3028  0E1B                     	;# 
  3029  0E1C                     	;# 
  3030  0E1D                     	;# 
  3031  0E1E                     	;# 
  3032  0E1F                     	;# 
  3033  0E20                     	;# 
  3034  0E21                     	;# 
  3035  0E22                     	;# 
  3036  0E24                     	;# 
  3037  0E25                     	;# 
  3038  0E28                     	;# 
  3039  0E29                     	;# 
  3040  0E2A                     	;# 
  3041  0E2B                     	;# 
  3042  0E2C                     	;# 
  3043  0E2D                     	;# 
  3044  0E2E                     	;# 
  3045  0E2F                     	;# 
  3046  0E90                     	;# 
  3047  0E91                     	;# 
  3048  0E92                     	;# 
  3049  0E94                     	;# 
  3050  0E95                     	;# 
  3051  0E9C                     	;# 
  3052  0E9D                     	;# 
  3053  0E9E                     	;# 
  3054  0E9F                     	;# 
  3055  0EA0                     	;# 
  3056  0EA1                     	;# 
  3057  0EA2                     	;# 
  3058  0EA3                     	;# 
  3059  0EA4                     	;# 
  3060  0EA5                     	;# 
  3061  0EA6                     	;# 
  3062  0EA7                     	;# 
  3063  0F0F                     	;# 
  3064  0F10                     	;# 
  3065  0F11                     	;# 
  3066  0F12                     	;# 
  3067  0F13                     	;# 
  3068  0F14                     	;# 
  3069  0F15                     	;# 
  3070  0F16                     	;# 
  3071  0F17                     	;# 
  3072  0F18                     	;# 
  3073  0F19                     	;# 
  3074  0F1A                     	;# 
  3075  0F1B                     	;# 
  3076  0F1C                     	;# 
  3077  0F1D                     	;# 
  3078  0F1E                     	;# 
  3079  0F1F                     	;# 
  3080  0F20                     	;# 
  3081  0F21                     	;# 
  3082  0F22                     	;# 
  3083  0F23                     	;# 
  3084  0F24                     	;# 
  3085  0F25                     	;# 
  3086  0F26                     	;# 
  3087  0F27                     	;# 
  3088  0F28                     	;# 
  3089  0F29                     	;# 
  3090  0F2A                     	;# 
  3091  0F2B                     	;# 
  3092  0F2C                     	;# 
  3093  0F2D                     	;# 
  3094  0F2E                     	;# 
  3095  0F2F                     	;# 
  3096  0F30                     	;# 
  3097  0F31                     	;# 
  3098  0F32                     	;# 
  3099  0F33                     	;# 
  3100  0F34                     	;# 
  3101  0F35                     	;# 
  3102  0F36                     	;# 
  3103  0F37                     	;# 
  3104  0FE4                     	;# 
  3105  0FE5                     	;# 
  3106  0FE6                     	;# 
  3107  0FE7                     	;# 
  3108  0FE8                     	;# 
  3109  0FE9                     	;# 
  3110  0FEA                     	;# 
  3111  0FEB                     	;# 
  3112  0FED                     	;# 
  3113  0FEE                     	;# 
  3114  0FEF                     	;# 
  3115  0000                     	;# 
  3116  0001                     	;# 
  3117  0002                     	;# 
  3118  0003                     	;# 
  3119  0004                     	;# 
  3120  0005                     	;# 
  3121  0006                     	;# 
  3122  0007                     	;# 
  3123  0008                     	;# 
  3124  0009                     	;# 
  3125  000A                     	;# 
  3126  000B                     	;# 
  3127  000C                     	;# 
  3128  000D                     	;# 
  3129  000E                     	;# 
  3130  0010                     	;# 
  3131  0011                     	;# 
  3132  0012                     	;# 
  3133  0013                     	;# 
  3134  0014                     	;# 
  3135  0015                     	;# 
  3136  0015                     	;# 
  3137  0016                     	;# 
  3138  0016                     	;# 
  3139  0017                     	;# 
  3140  0018                     	;# 
  3141  0019                     	;# 
  3142  0019                     	;# 
  3143  001A                     	;# 
  3144  001B                     	;# 
  3145  001C                     	;# 
  3146  001D                     	;# 
  3147  001E                     	;# 
  3148  001F                     	;# 
  3149  008C                     	;# 
  3150  008D                     	;# 
  3151  008E                     	;# 
  3152  0090                     	;# 
  3153  0091                     	;# 
  3154  0092                     	;# 
  3155  0093                     	;# 
  3156  0094                     	;# 
  3157  0097                     	;# 
  3158  009B                     	;# 
  3159  009B                     	;# 
  3160  009C                     	;# 
  3161  009D                     	;# 
  3162  009E                     	;# 
  3163  009F                     	;# 
  3164  010C                     	;# 
  3165  010D                     	;# 
  3166  010E                     	;# 
  3167  0111                     	;# 
  3168  0112                     	;# 
  3169  0113                     	;# 
  3170  0114                     	;# 
  3171  0115                     	;# 
  3172  0116                     	;# 
  3173  0117                     	;# 
  3174  0118                     	;# 
  3175  0119                     	;# 
  3176  018C                     	;# 
  3177  018D                     	;# 
  3178  018E                     	;# 
  3179  0197                     	;# 
  3180  0199                     	;# 
  3181  0199                     	;# 
  3182  0199                     	;# 
  3183  019A                     	;# 
  3184  019A                     	;# 
  3185  019A                     	;# 
  3186  019B                     	;# 
  3187  019B                     	;# 
  3188  019B                     	;# 
  3189  019B                     	;# 
  3190  019B                     	;# 
  3191  019C                     	;# 
  3192  019C                     	;# 
  3193  019C                     	;# 
  3194  019D                     	;# 
  3195  019D                     	;# 
  3196  019D                     	;# 
  3197  019E                     	;# 
  3198  019E                     	;# 
  3199  019E                     	;# 
  3200  019F                     	;# 
  3201  019F                     	;# 
  3202  019F                     	;# 
  3203  019F                     	;# 
  3204  019F                     	;# 
  3205  020C                     	;# 
  3206  020D                     	;# 
  3207  020E                     	;# 
  3208  0211                     	;# 
  3209  0211                     	;# 
  3210  0212                     	;# 
  3211  0212                     	;# 
  3212  0213                     	;# 
  3213  0213                     	;# 
  3214  0214                     	;# 
  3215  0214                     	;# 
  3216  0215                     	;# 
  3217  0215                     	;# 
  3218  0215                     	;# 
  3219  0215                     	;# 
  3220  0216                     	;# 
  3221  0216                     	;# 
  3222  0217                     	;# 
  3223  0217                     	;# 
  3224  0219                     	;# 
  3225  021A                     	;# 
  3226  021B                     	;# 
  3227  021C                     	;# 
  3228  021D                     	;# 
  3229  021D                     	;# 
  3230  021E                     	;# 
  3231  021F                     	;# 
  3232  028C                     	;# 
  3233  028D                     	;# 
  3234  028E                     	;# 
  3235  0291                     	;# 
  3236  0291                     	;# 
  3237  0292                     	;# 
  3238  0293                     	;# 
  3239  0294                     	;# 
  3240  0295                     	;# 
  3241  0295                     	;# 
  3242  0296                     	;# 
  3243  0297                     	;# 
  3244  0298                     	;# 
  3245  029F                     	;# 
  3246  030C                     	;# 
  3247  030D                     	;# 
  3248  030E                     	;# 
  3249  0311                     	;# 
  3250  0311                     	;# 
  3251  0312                     	;# 
  3252  0313                     	;# 
  3253  0314                     	;# 
  3254  0315                     	;# 
  3255  0315                     	;# 
  3256  0316                     	;# 
  3257  0317                     	;# 
  3258  0318                     	;# 
  3259  038C                     	;# 
  3260  038D                     	;# 
  3261  038E                     	;# 
  3262  0391                     	;# 
  3263  0392                     	;# 
  3264  0393                     	;# 
  3265  0394                     	;# 
  3266  0395                     	;# 
  3267  0396                     	;# 
  3268  0397                     	;# 
  3269  0398                     	;# 
  3270  0399                     	;# 
  3271  039A                     	;# 
  3272  039C                     	;# 
  3273  039D                     	;# 
  3274  039E                     	;# 
  3275  039F                     	;# 
  3276  0411                     	;# 
  3277  0411                     	;# 
  3278  0412                     	;# 
  3279  0413                     	;# 
  3280  0414                     	;# 
  3281  0415                     	;# 
  3282  0416                     	;# 
  3283  0417                     	;# 
  3284  0418                     	;# 
  3285  0418                     	;# 
  3286  0419                     	;# 
  3287  041A                     	;# 
  3288  041B                     	;# 
  3289  041C                     	;# 
  3290  041D                     	;# 
  3291  041E                     	;# 
  3292  041F                     	;# 
  3293  0498                     	;# 
  3294  0498                     	;# 
  3295  0499                     	;# 
  3296  049A                     	;# 
  3297  049B                     	;# 
  3298  049B                     	;# 
  3299  049C                     	;# 
  3300  049D                     	;# 
  3301  049E                     	;# 
  3302  049F                     	;# 
  3303  0617                     	;# 
  3304  0618                     	;# 
  3305  0619                     	;# 
  3306  0619                     	;# 
  3307  061A                     	;# 
  3308  061B                     	;# 
  3309  061C                     	;# 
  3310  061C                     	;# 
  3311  061F                     	;# 
  3312  0691                     	;# 
  3313  0692                     	;# 
  3314  0693                     	;# 
  3315  0694                     	;# 
  3316  0695                     	;# 
  3317  0696                     	;# 
  3318  0697                     	;# 
  3319  0698                     	;# 
  3320  0699                     	;# 
  3321  0711                     	;# 
  3322  0712                     	;# 
  3323  0713                     	;# 
  3324  0714                     	;# 
  3325  0715                     	;# 
  3326  0716                     	;# 
  3327  0717                     	;# 
  3328  0718                     	;# 
  3329  0719                     	;# 
  3330  0891                     	;# 
  3331  0891                     	;# 
  3332  0891                     	;# 
  3333  0891                     	;# 
  3334  0891                     	;# 
  3335  0891                     	;# 
  3336  0892                     	;# 
  3337  0892                     	;# 
  3338  0892                     	;# 
  3339  0893                     	;# 
  3340  0893                     	;# 
  3341  0893                     	;# 
  3342  0893                     	;# 
  3343  0893                     	;# 
  3344  0893                     	;# 
  3345  0894                     	;# 
  3346  0894                     	;# 
  3347  0894                     	;# 
  3348  0895                     	;# 
  3349  0895                     	;# 
  3350  0895                     	;# 
  3351  0896                     	;# 
  3352  0896                     	;# 
  3353  0896                     	;# 
  3354  089B                     	;# 
  3355  0911                     	;# 
  3356  0912                     	;# 
  3357  0913                     	;# 
  3358  0914                     	;# 
  3359  0915                     	;# 
  3360  0916                     	;# 
  3361  0918                     	;# 
  3362  0919                     	;# 
  3363  091A                     	;# 
  3364  091B                     	;# 
  3365  091C                     	;# 
  3366  091D                     	;# 
  3367  091E                     	;# 
  3368  091F                     	;# 
  3369  0E0F                     	;# 
  3370  0E10                     	;# 
  3371  0E11                     	;# 
  3372  0E12                     	;# 
  3373  0E13                     	;# 
  3374  0E14                     	;# 
  3375  0E15                     	;# 
  3376  0E16                     	;# 
  3377  0E17                     	;# 
  3378  0E18                     	;# 
  3379  0E19                     	;# 
  3380  0E1A                     	;# 
  3381  0E1B                     	;# 
  3382  0E1C                     	;# 
  3383  0E1D                     	;# 
  3384  0E1E                     	;# 
  3385  0E1F                     	;# 
  3386  0E20                     	;# 
  3387  0E21                     	;# 
  3388  0E22                     	;# 
  3389  0E24                     	;# 
  3390  0E25                     	;# 
  3391  0E28                     	;# 
  3392  0E29                     	;# 
  3393  0E2A                     	;# 
  3394  0E2B                     	;# 
  3395  0E2C                     	;# 
  3396  0E2D                     	;# 
  3397  0E2E                     	;# 
  3398  0E2F                     	;# 
  3399  0E90                     	;# 
  3400  0E91                     	;# 
  3401  0E92                     	;# 
  3402  0E94                     	;# 
  3403  0E95                     	;# 
  3404  0E9C                     	;# 
  3405  0E9D                     	;# 
  3406  0E9E                     	;# 
  3407  0E9F                     	;# 
  3408  0EA0                     	;# 
  3409  0EA1                     	;# 
  3410  0EA2                     	;# 
  3411  0EA3                     	;# 
  3412  0EA4                     	;# 
  3413  0EA5                     	;# 
  3414  0EA6                     	;# 
  3415  0EA7                     	;# 
  3416  0F0F                     	;# 
  3417  0F10                     	;# 
  3418  0F11                     	;# 
  3419  0F12                     	;# 
  3420  0F13                     	;# 
  3421  0F14                     	;# 
  3422  0F15                     	;# 
  3423  0F16                     	;# 
  3424  0F17                     	;# 
  3425  0F18                     	;# 
  3426  0F19                     	;# 
  3427  0F1A                     	;# 
  3428  0F1B                     	;# 
  3429  0F1C                     	;# 
  3430  0F1D                     	;# 
  3431  0F1E                     	;# 
  3432  0F1F                     	;# 
  3433  0F20                     	;# 
  3434  0F21                     	;# 
  3435  0F22                     	;# 
  3436  0F23                     	;# 
  3437  0F24                     	;# 
  3438  0F25                     	;# 
  3439  0F26                     	;# 
  3440  0F27                     	;# 
  3441  0F28                     	;# 
  3442  0F29                     	;# 
  3443  0F2A                     	;# 
  3444  0F2B                     	;# 
  3445  0F2C                     	;# 
  3446  0F2D                     	;# 
  3447  0F2E                     	;# 
  3448  0F2F                     	;# 
  3449  0F30                     	;# 
  3450  0F31                     	;# 
  3451  0F32                     	;# 
  3452  0F33                     	;# 
  3453  0F34                     	;# 
  3454  0F35                     	;# 
  3455  0F36                     	;# 
  3456  0F37                     	;# 
  3457  0FE4                     	;# 
  3458  0FE5                     	;# 
  3459  0FE6                     	;# 
  3460  0FE7                     	;# 
  3461  0FE8                     	;# 
  3462  0FE9                     	;# 
  3463  0FEA                     	;# 
  3464  0FEB                     	;# 
  3465  0FED                     	;# 
  3466  0FEE                     	;# 
  3467  0FEF                     	;# 
  3468  0000                     	;# 
  3469  0001                     	;# 
  3470  0002                     	;# 
  3471  0003                     	;# 
  3472  0004                     	;# 
  3473  0005                     	;# 
  3474  0006                     	;# 
  3475  0007                     	;# 
  3476  0008                     	;# 
  3477  0009                     	;# 
  3478  000A                     	;# 
  3479  000B                     	;# 
  3480  000C                     	;# 
  3481  000D                     	;# 
  3482  000E                     	;# 
  3483  0010                     	;# 
  3484  0011                     	;# 
  3485  0012                     	;# 
  3486  0013                     	;# 
  3487  0014                     	;# 
  3488  0015                     	;# 
  3489  0015                     	;# 
  3490  0016                     	;# 
  3491  0016                     	;# 
  3492  0017                     	;# 
  3493  0018                     	;# 
  3494  0019                     	;# 
  3495  0019                     	;# 
  3496  001A                     	;# 
  3497  001B                     	;# 
  3498  001C                     	;# 
  3499  001D                     	;# 
  3500  001E                     	;# 
  3501  001F                     	;# 
  3502  008C                     	;# 
  3503  008D                     	;# 
  3504  008E                     	;# 
  3505  0090                     	;# 
  3506  0091                     	;# 
  3507  0092                     	;# 
  3508  0093                     	;# 
  3509  0094                     	;# 
  3510  0097                     	;# 
  3511  009B                     	;# 
  3512  009B                     	;# 
  3513  009C                     	;# 
  3514  009D                     	;# 
  3515  009E                     	;# 
  3516  009F                     	;# 
  3517  010C                     	;# 
  3518  010D                     	;# 
  3519  010E                     	;# 
  3520  0111                     	;# 
  3521  0112                     	;# 
  3522  0113                     	;# 
  3523  0114                     	;# 
  3524  0115                     	;# 
  3525  0116                     	;# 
  3526  0117                     	;# 
  3527  0118                     	;# 
  3528  0119                     	;# 
  3529  018C                     	;# 
  3530  018D                     	;# 
  3531  018E                     	;# 
  3532  0197                     	;# 
  3533  0199                     	;# 
  3534  0199                     	;# 
  3535  0199                     	;# 
  3536  019A                     	;# 
  3537  019A                     	;# 
  3538  019A                     	;# 
  3539  019B                     	;# 
  3540  019B                     	;# 
  3541  019B                     	;# 
  3542  019B                     	;# 
  3543  019B                     	;# 
  3544  019C                     	;# 
  3545  019C                     	;# 
  3546  019C                     	;# 
  3547  019D                     	;# 
  3548  019D                     	;# 
  3549  019D                     	;# 
  3550  019E                     	;# 
  3551  019E                     	;# 
  3552  019E                     	;# 
  3553  019F                     	;# 
  3554  019F                     	;# 
  3555  019F                     	;# 
  3556  019F                     	;# 
  3557  019F                     	;# 
  3558  020C                     	;# 
  3559  020D                     	;# 
  3560  020E                     	;# 
  3561  0211                     	;# 
  3562  0211                     	;# 
  3563  0212                     	;# 
  3564  0212                     	;# 
  3565  0213                     	;# 
  3566  0213                     	;# 
  3567  0214                     	;# 
  3568  0214                     	;# 
  3569  0215                     	;# 
  3570  0215                     	;# 
  3571  0215                     	;# 
  3572  0215                     	;# 
  3573  0216                     	;# 
  3574  0216                     	;# 
  3575  0217                     	;# 
  3576  0217                     	;# 
  3577  0219                     	;# 
  3578  021A                     	;# 
  3579  021B                     	;# 
  3580  021C                     	;# 
  3581  021D                     	;# 
  3582  021D                     	;# 
  3583  021E                     	;# 
  3584  021F                     	;# 
  3585  028C                     	;# 
  3586  028D                     	;# 
  3587  028E                     	;# 
  3588  0291                     	;# 
  3589  0291                     	;# 
  3590  0292                     	;# 
  3591  0293                     	;# 
  3592  0294                     	;# 
  3593  0295                     	;# 
  3594  0295                     	;# 
  3595  0296                     	;# 
  3596  0297                     	;# 
  3597  0298                     	;# 
  3598  029F                     	;# 
  3599  030C                     	;# 
  3600  030D                     	;# 
  3601  030E                     	;# 
  3602  0311                     	;# 
  3603  0311                     	;# 
  3604  0312                     	;# 
  3605  0313                     	;# 
  3606  0314                     	;# 
  3607  0315                     	;# 
  3608  0315                     	;# 
  3609  0316                     	;# 
  3610  0317                     	;# 
  3611  0318                     	;# 
  3612  038C                     	;# 
  3613  038D                     	;# 
  3614  038E                     	;# 
  3615  0391                     	;# 
  3616  0392                     	;# 
  3617  0393                     	;# 
  3618  0394                     	;# 
  3619  0395                     	;# 
  3620  0396                     	;# 
  3621  0397                     	;# 
  3622  0398                     	;# 
  3623  0399                     	;# 
  3624  039A                     	;# 
  3625  039C                     	;# 
  3626  039D                     	;# 
  3627  039E                     	;# 
  3628  039F                     	;# 
  3629  0411                     	;# 
  3630  0411                     	;# 
  3631  0412                     	;# 
  3632  0413                     	;# 
  3633  0414                     	;# 
  3634  0415                     	;# 
  3635  0416                     	;# 
  3636  0417                     	;# 
  3637  0418                     	;# 
  3638  0418                     	;# 
  3639  0419                     	;# 
  3640  041A                     	;# 
  3641  041B                     	;# 
  3642  041C                     	;# 
  3643  041D                     	;# 
  3644  041E                     	;# 
  3645  041F                     	;# 
  3646  0498                     	;# 
  3647  0498                     	;# 
  3648  0499                     	;# 
  3649  049A                     	;# 
  3650  049B                     	;# 
  3651  049B                     	;# 
  3652  049C                     	;# 
  3653  049D                     	;# 
  3654  049E                     	;# 
  3655  049F                     	;# 
  3656  0617                     	;# 
  3657  0618                     	;# 
  3658  0619                     	;# 
  3659  0619                     	;# 
  3660  061A                     	;# 
  3661  061B                     	;# 
  3662  061C                     	;# 
  3663  061C                     	;# 
  3664  061F                     	;# 
  3665  0691                     	;# 
  3666  0692                     	;# 
  3667  0693                     	;# 
  3668  0694                     	;# 
  3669  0695                     	;# 
  3670  0696                     	;# 
  3671  0697                     	;# 
  3672  0698                     	;# 
  3673  0699                     	;# 
  3674  0711                     	;# 
  3675  0712                     	;# 
  3676  0713                     	;# 
  3677  0714                     	;# 
  3678  0715                     	;# 
  3679  0716                     	;# 
  3680  0717                     	;# 
  3681  0718                     	;# 
  3682  0719                     	;# 
  3683  0891                     	;# 
  3684  0891                     	;# 
  3685  0891                     	;# 
  3686  0891                     	;# 
  3687  0891                     	;# 
  3688  0891                     	;# 
  3689  0892                     	;# 
  3690  0892                     	;# 
  3691  0892                     	;# 
  3692  0893                     	;# 
  3693  0893                     	;# 
  3694  0893                     	;# 
  3695  0893                     	;# 
  3696  0893                     	;# 
  3697  0893                     	;# 
  3698  0894                     	;# 
  3699  0894                     	;# 
  3700  0894                     	;# 
  3701  0895                     	;# 
  3702  0895                     	;# 
  3703  0895                     	;# 
  3704  0896                     	;# 
  3705  0896                     	;# 
  3706  0896                     	;# 
  3707  089B                     	;# 
  3708  0911                     	;# 
  3709  0912                     	;# 
  3710  0913                     	;# 
  3711  0914                     	;# 
  3712  0915                     	;# 
  3713  0916                     	;# 
  3714  0918                     	;# 
  3715  0919                     	;# 
  3716  091A                     	;# 
  3717  091B                     	;# 
  3718  091C                     	;# 
  3719  091D                     	;# 
  3720  091E                     	;# 
  3721  091F                     	;# 
  3722  0E0F                     	;# 
  3723  0E10                     	;# 
  3724  0E11                     	;# 
  3725  0E12                     	;# 
  3726  0E13                     	;# 
  3727  0E14                     	;# 
  3728  0E15                     	;# 
  3729  0E16                     	;# 
  3730  0E17                     	;# 
  3731  0E18                     	;# 
  3732  0E19                     	;# 
  3733  0E1A                     	;# 
  3734  0E1B                     	;# 
  3735  0E1C                     	;# 
  3736  0E1D                     	;# 
  3737  0E1E                     	;# 
  3738  0E1F                     	;# 
  3739  0E20                     	;# 
  3740  0E21                     	;# 
  3741  0E22                     	;# 
  3742  0E24                     	;# 
  3743  0E25                     	;# 
  3744  0E28                     	;# 
  3745  0E29                     	;# 
  3746  0E2A                     	;# 
  3747  0E2B                     	;# 
  3748  0E2C                     	;# 
  3749  0E2D                     	;# 
  3750  0E2E                     	;# 
  3751  0E2F                     	;# 
  3752  0E90                     	;# 
  3753  0E91                     	;# 
  3754  0E92                     	;# 
  3755  0E94                     	;# 
  3756  0E95                     	;# 
  3757  0E9C                     	;# 
  3758  0E9D                     	;# 
  3759  0E9E                     	;# 
  3760  0E9F                     	;# 
  3761  0EA0                     	;# 
  3762  0EA1                     	;# 
  3763  0EA2                     	;# 
  3764  0EA3                     	;# 
  3765  0EA4                     	;# 
  3766  0EA5                     	;# 
  3767  0EA6                     	;# 
  3768  0EA7                     	;# 
  3769  0F0F                     	;# 
  3770  0F10                     	;# 
  3771  0F11                     	;# 
  3772  0F12                     	;# 
  3773  0F13                     	;# 
  3774  0F14                     	;# 
  3775  0F15                     	;# 
  3776  0F16                     	;# 
  3777  0F17                     	;# 
  3778  0F18                     	;# 
  3779  0F19                     	;# 
  3780  0F1A                     	;# 
  3781  0F1B                     	;# 
  3782  0F1C                     	;# 
  3783  0F1D                     	;# 
  3784  0F1E                     	;# 
  3785  0F1F                     	;# 
  3786  0F20                     	;# 
  3787  0F21                     	;# 
  3788  0F22                     	;# 
  3789  0F23                     	;# 
  3790  0F24                     	;# 
  3791  0F25                     	;# 
  3792  0F26                     	;# 
  3793  0F27                     	;# 
  3794  0F28                     	;# 
  3795  0F29                     	;# 
  3796  0F2A                     	;# 
  3797  0F2B                     	;# 
  3798  0F2C                     	;# 
  3799  0F2D                     	;# 
  3800  0F2E                     	;# 
  3801  0F2F                     	;# 
  3802  0F30                     	;# 
  3803  0F31                     	;# 
  3804  0F32                     	;# 
  3805  0F33                     	;# 
  3806  0F34                     	;# 
  3807  0F35                     	;# 
  3808  0F36                     	;# 
  3809  0F37                     	;# 
  3810  0FE4                     	;# 
  3811  0FE5                     	;# 
  3812  0FE6                     	;# 
  3813  0FE7                     	;# 
  3814  0FE8                     	;# 
  3815  0FE9                     	;# 
  3816  0FEA                     	;# 
  3817  0FEB                     	;# 
  3818  0FED                     	;# 
  3819  0FEE                     	;# 
  3820  0FEF                     	;# 
  3821  0000                     	;# 
  3822  0001                     	;# 
  3823  0002                     	;# 
  3824  0003                     	;# 
  3825  0004                     	;# 
  3826  0005                     	;# 
  3827  0006                     	;# 
  3828  0007                     	;# 
  3829  0008                     	;# 
  3830  0009                     	;# 
  3831  000A                     	;# 
  3832  000B                     	;# 
  3833  000C                     	;# 
  3834  000D                     	;# 
  3835  000E                     	;# 
  3836  0010                     	;# 
  3837  0011                     	;# 
  3838  0012                     	;# 
  3839  0013                     	;# 
  3840  0014                     	;# 
  3841  0015                     	;# 
  3842  0015                     	;# 
  3843  0016                     	;# 
  3844  0016                     	;# 
  3845  0017                     	;# 
  3846  0018                     	;# 
  3847  0019                     	;# 
  3848  0019                     	;# 
  3849  001A                     	;# 
  3850  001B                     	;# 
  3851  001C                     	;# 
  3852  001D                     	;# 
  3853  001E                     	;# 
  3854  001F                     	;# 
  3855  008C                     	;# 
  3856  008D                     	;# 
  3857  008E                     	;# 
  3858  0090                     	;# 
  3859  0091                     	;# 
  3860  0092                     	;# 
  3861  0093                     	;# 
  3862  0094                     	;# 
  3863  0097                     	;# 
  3864  009B                     	;# 
  3865  009B                     	;# 
  3866  009C                     	;# 
  3867  009D                     	;# 
  3868  009E                     	;# 
  3869  009F                     	;# 
  3870  010C                     	;# 
  3871  010D                     	;# 
  3872  010E                     	;# 
  3873  0111                     	;# 
  3874  0112                     	;# 
  3875  0113                     	;# 
  3876  0114                     	;# 
  3877  0115                     	;# 
  3878  0116                     	;# 
  3879  0117                     	;# 
  3880  0118                     	;# 
  3881  0119                     	;# 
  3882  018C                     	;# 
  3883  018D                     	;# 
  3884  018E                     	;# 
  3885  0197                     	;# 
  3886  0199                     	;# 
  3887  0199                     	;# 
  3888  0199                     	;# 
  3889  019A                     	;# 
  3890  019A                     	;# 
  3891  019A                     	;# 
  3892  019B                     	;# 
  3893  019B                     	;# 
  3894  019B                     	;# 
  3895  019B                     	;# 
  3896  019B                     	;# 
  3897  019C                     	;# 
  3898  019C                     	;# 
  3899  019C                     	;# 
  3900  019D                     	;# 
  3901  019D                     	;# 
  3902  019D                     	;# 
  3903  019E                     	;# 
  3904  019E                     	;# 
  3905  019E                     	;# 
  3906  019F                     	;# 
  3907  019F                     	;# 
  3908  019F                     	;# 
  3909  019F                     	;# 
  3910  019F                     	;# 
  3911  020C                     	;# 
  3912  020D                     	;# 
  3913  020E                     	;# 
  3914  0211                     	;# 
  3915  0211                     	;# 
  3916  0212                     	;# 
  3917  0212                     	;# 
  3918  0213                     	;# 
  3919  0213                     	;# 
  3920  0214                     	;# 
  3921  0214                     	;# 
  3922  0215                     	;# 
  3923  0215                     	;# 
  3924  0215                     	;# 
  3925  0215                     	;# 
  3926  0216                     	;# 
  3927  0216                     	;# 
  3928  0217                     	;# 
  3929  0217                     	;# 
  3930  0219                     	;# 
  3931  021A                     	;# 
  3932  021B                     	;# 
  3933  021C                     	;# 
  3934  021D                     	;# 
  3935  021D                     	;# 
  3936  021E                     	;# 
  3937  021F                     	;# 
  3938  028C                     	;# 
  3939  028D                     	;# 
  3940  028E                     	;# 
  3941  0291                     	;# 
  3942  0291                     	;# 
  3943  0292                     	;# 
  3944  0293                     	;# 
  3945  0294                     	;# 
  3946  0295                     	;# 
  3947  0295                     	;# 
  3948  0296                     	;# 
  3949  0297                     	;# 
  3950  0298                     	;# 
  3951  029F                     	;# 
  3952  030C                     	;# 
  3953  030D                     	;# 
  3954  030E                     	;# 
  3955  0311                     	;# 
  3956  0311                     	;# 
  3957  0312                     	;# 
  3958  0313                     	;# 
  3959  0314                     	;# 
  3960  0315                     	;# 
  3961  0315                     	;# 
  3962  0316                     	;# 
  3963  0317                     	;# 
  3964  0318                     	;# 
  3965  038C                     	;# 
  3966  038D                     	;# 
  3967  038E                     	;# 
  3968  0391                     	;# 
  3969  0392                     	;# 
  3970  0393                     	;# 
  3971  0394                     	;# 
  3972  0395                     	;# 
  3973  0396                     	;# 
  3974  0397                     	;# 
  3975  0398                     	;# 
  3976  0399                     	;# 
  3977  039A                     	;# 
  3978  039C                     	;# 
  3979  039D                     	;# 
  3980  039E                     	;# 
  3981  039F                     	;# 
  3982  0411                     	;# 
  3983  0411                     	;# 
  3984  0412                     	;# 
  3985  0413                     	;# 
  3986  0414                     	;# 
  3987  0415                     	;# 
  3988  0416                     	;# 
  3989  0417                     	;# 
  3990  0418                     	;# 
  3991  0418                     	;# 
  3992  0419                     	;# 
  3993  041A                     	;# 
  3994  041B                     	;# 
  3995  041C                     	;# 
  3996  041D                     	;# 
  3997  041E                     	;# 
  3998  041F                     	;# 
  3999  0498                     	;# 
  4000  0498                     	;# 
  4001  0499                     	;# 
  4002  049A                     	;# 
  4003  049B                     	;# 
  4004  049B                     	;# 
  4005  049C                     	;# 
  4006  049D                     	;# 
  4007  049E                     	;# 
  4008  049F                     	;# 
  4009  0617                     	;# 
  4010  0618                     	;# 
  4011  0619                     	;# 
  4012  0619                     	;# 
  4013  061A                     	;# 
  4014  061B                     	;# 
  4015  061C                     	;# 
  4016  061C                     	;# 
  4017  061F                     	;# 
  4018  0691                     	;# 
  4019  0692                     	;# 
  4020  0693                     	;# 
  4021  0694                     	;# 
  4022  0695                     	;# 
  4023  0696                     	;# 
  4024  0697                     	;# 
  4025  0698                     	;# 
  4026  0699                     	;# 
  4027  0711                     	;# 
  4028  0712                     	;# 
  4029  0713                     	;# 
  4030  0714                     	;# 
  4031  0715                     	;# 
  4032  0716                     	;# 
  4033  0717                     	;# 
  4034  0718                     	;# 
  4035  0719                     	;# 
  4036  0891                     	;# 
  4037  0891                     	;# 
  4038  0891                     	;# 
  4039  0891                     	;# 
  4040  0891                     	;# 
  4041  0891                     	;# 
  4042  0892                     	;# 
  4043  0892                     	;# 
  4044  0892                     	;# 
  4045  0893                     	;# 
  4046  0893                     	;# 
  4047  0893                     	;# 
  4048  0893                     	;# 
  4049  0893                     	;# 
  4050  0893                     	;# 
  4051  0894                     	;# 
  4052  0894                     	;# 
  4053  0894                     	;# 
  4054  0895                     	;# 
  4055  0895                     	;# 
  4056  0895                     	;# 
  4057  0896                     	;# 
  4058  0896                     	;# 
  4059  0896                     	;# 
  4060  089B                     	;# 
  4061  0911                     	;# 
  4062  0912                     	;# 
  4063  0913                     	;# 
  4064  0914                     	;# 
  4065  0915                     	;# 
  4066  0916                     	;# 
  4067  0918                     	;# 
  4068  0919                     	;# 
  4069  091A                     	;# 
  4070  091B                     	;# 
  4071  091C                     	;# 
  4072  091D                     	;# 
  4073  091E                     	;# 
  4074  091F                     	;# 
  4075  0E0F                     	;# 
  4076  0E10                     	;# 
  4077  0E11                     	;# 
  4078  0E12                     	;# 
  4079  0E13                     	;# 
  4080  0E14                     	;# 
  4081  0E15                     	;# 
  4082  0E16                     	;# 
  4083  0E17                     	;# 
  4084  0E18                     	;# 
  4085  0E19                     	;# 
  4086  0E1A                     	;# 
  4087  0E1B                     	;# 
  4088  0E1C                     	;# 
  4089  0E1D                     	;# 
  4090  0E1E                     	;# 
  4091  0E1F                     	;# 
  4092  0E20                     	;# 
  4093  0E21                     	;# 
  4094  0E22                     	;# 
  4095  0E24                     	;# 
  4096  0E25                     	;# 
  4097  0E28                     	;# 
  4098  0E29                     	;# 
  4099  0E2A                     	;# 
  4100  0E2B                     	;# 
  4101  0E2C                     	;# 
  4102  0E2D                     	;# 
  4103  0E2E                     	;# 
  4104  0E2F                     	;# 
  4105  0E90                     	;# 
  4106  0E91                     	;# 
  4107  0E92                     	;# 
  4108  0E94                     	;# 
  4109  0E95                     	;# 
  4110  0E9C                     	;# 
  4111  0E9D                     	;# 
  4112  0E9E                     	;# 
  4113  0E9F                     	;# 
  4114  0EA0                     	;# 
  4115  0EA1                     	;# 
  4116  0EA2                     	;# 
  4117  0EA3                     	;# 
  4118  0EA4                     	;# 
  4119  0EA5                     	;# 
  4120  0EA6                     	;# 
  4121  0EA7                     	;# 
  4122  0F0F                     	;# 
  4123  0F10                     	;# 
  4124  0F11                     	;# 
  4125  0F12                     	;# 
  4126  0F13                     	;# 
  4127  0F14                     	;# 
  4128  0F15                     	;# 
  4129  0F16                     	;# 
  4130  0F17                     	;# 
  4131  0F18                     	;# 
  4132  0F19                     	;# 
  4133  0F1A                     	;# 
  4134  0F1B                     	;# 
  4135  0F1C                     	;# 
  4136  0F1D                     	;# 
  4137  0F1E                     	;# 
  4138  0F1F                     	;# 
  4139  0F20                     	;# 
  4140  0F21                     	;# 
  4141  0F22                     	;# 
  4142  0F23                     	;# 
  4143  0F24                     	;# 
  4144  0F25                     	;# 
  4145  0F26                     	;# 
  4146  0F27                     	;# 
  4147  0F28                     	;# 
  4148  0F29                     	;# 
  4149  0F2A                     	;# 
  4150  0F2B                     	;# 
  4151  0F2C                     	;# 
  4152  0F2D                     	;# 
  4153  0F2E                     	;# 
  4154  0F2F                     	;# 
  4155  0F30                     	;# 
  4156  0F31                     	;# 
  4157  0F32                     	;# 
  4158  0F33                     	;# 
  4159  0F34                     	;# 
  4160  0F35                     	;# 
  4161  0F36                     	;# 
  4162  0F37                     	;# 
  4163  0FE4                     	;# 
  4164  0FE5                     	;# 
  4165  0FE6                     	;# 
  4166  0FE7                     	;# 
  4167  0FE8                     	;# 
  4168  0FE9                     	;# 
  4169  0FEA                     	;# 
  4170  0FEB                     	;# 
  4171  0FED                     	;# 
  4172  0FEE                     	;# 
  4173  0FEF                     	;# 
  4174  0000                     	;# 
  4175  0001                     	;# 
  4176  0002                     	;# 
  4177  0003                     	;# 
  4178  0004                     	;# 
  4179  0005                     	;# 
  4180  0006                     	;# 
  4181  0007                     	;# 
  4182  0008                     	;# 
  4183  0009                     	;# 
  4184  000A                     	;# 
  4185  000B                     	;# 
  4186  000C                     	;# 
  4187  000D                     	;# 
  4188  000E                     	;# 
  4189  0010                     	;# 
  4190  0011                     	;# 
  4191  0012                     	;# 
  4192  0013                     	;# 
  4193  0014                     	;# 
  4194  0015                     	;# 
  4195  0015                     	;# 
  4196  0016                     	;# 
  4197  0016                     	;# 
  4198  0017                     	;# 
  4199  0018                     	;# 
  4200  0019                     	;# 
  4201  0019                     	;# 
  4202  001A                     	;# 
  4203  001B                     	;# 
  4204  001C                     	;# 
  4205  001D                     	;# 
  4206  001E                     	;# 
  4207  001F                     	;# 
  4208  008C                     	;# 
  4209  008D                     	;# 
  4210  008E                     	;# 
  4211  0090                     	;# 
  4212  0091                     	;# 
  4213  0092                     	;# 
  4214  0093                     	;# 
  4215  0094                     	;# 
  4216  0097                     	;# 
  4217  009B                     	;# 
  4218  009B                     	;# 
  4219  009C                     	;# 
  4220  009D                     	;# 
  4221  009E                     	;# 
  4222  009F                     	;# 
  4223  010C                     	;# 
  4224  010D                     	;# 
  4225  010E                     	;# 
  4226  0111                     	;# 
  4227  0112                     	;# 
  4228  0113                     	;# 
  4229  0114                     	;# 
  4230  0115                     	;# 
  4231  0116                     	;# 
  4232  0117                     	;# 
  4233  0118                     	;# 
  4234  0119                     	;# 
  4235  018C                     	;# 
  4236  018D                     	;# 
  4237  018E                     	;# 
  4238  0197                     	;# 
  4239  0199                     	;# 
  4240  0199                     	;# 
  4241  0199                     	;# 
  4242  019A                     	;# 
  4243  019A                     	;# 
  4244  019A                     	;# 
  4245  019B                     	;# 
  4246  019B                     	;# 
  4247  019B                     	;# 
  4248  019B                     	;# 
  4249  019B                     	;# 
  4250  019C                     	;# 
  4251  019C                     	;# 
  4252  019C                     	;# 
  4253  019D                     	;# 
  4254  019D                     	;# 
  4255  019D                     	;# 
  4256  019E                     	;# 
  4257  019E                     	;# 
  4258  019E                     	;# 
  4259  019F                     	;# 
  4260  019F                     	;# 
  4261  019F                     	;# 
  4262  019F                     	;# 
  4263  019F                     	;# 
  4264  020C                     	;# 
  4265  020D                     	;# 
  4266  020E                     	;# 
  4267  0211                     	;# 
  4268  0211                     	;# 
  4269  0212                     	;# 
  4270  0212                     	;# 
  4271  0213                     	;# 
  4272  0213                     	;# 
  4273  0214                     	;# 
  4274  0214                     	;# 
  4275  0215                     	;# 
  4276  0215                     	;# 
  4277  0215                     	;# 
  4278  0215                     	;# 
  4279  0216                     	;# 
  4280  0216                     	;# 
  4281  0217                     	;# 
  4282  0217                     	;# 
  4283  0219                     	;# 
  4284  021A                     	;# 
  4285  021B                     	;# 
  4286  021C                     	;# 
  4287  021D                     	;# 
  4288  021D                     	;# 
  4289  021E                     	;# 
  4290  021F                     	;# 
  4291  028C                     	;# 
  4292  028D                     	;# 
  4293  028E                     	;# 
  4294  0291                     	;# 
  4295  0291                     	;# 
  4296  0292                     	;# 
  4297  0293                     	;# 
  4298  0294                     	;# 
  4299  0295                     	;# 
  4300  0295                     	;# 
  4301  0296                     	;# 
  4302  0297                     	;# 
  4303  0298                     	;# 
  4304  029F                     	;# 
  4305  030C                     	;# 
  4306  030D                     	;# 
  4307  030E                     	;# 
  4308  0311                     	;# 
  4309  0311                     	;# 
  4310  0312                     	;# 
  4311  0313                     	;# 
  4312  0314                     	;# 
  4313  0315                     	;# 
  4314  0315                     	;# 
  4315  0316                     	;# 
  4316  0317                     	;# 
  4317  0318                     	;# 
  4318  038C                     	;# 
  4319  038D                     	;# 
  4320  038E                     	;# 
  4321  0391                     	;# 
  4322  0392                     	;# 
  4323  0393                     	;# 
  4324  0394                     	;# 
  4325  0395                     	;# 
  4326  0396                     	;# 
  4327  0397                     	;# 
  4328  0398                     	;# 
  4329  0399                     	;# 
  4330  039A                     	;# 
  4331  039C                     	;# 
  4332  039D                     	;# 
  4333  039E                     	;# 
  4334  039F                     	;# 
  4335  0411                     	;# 
  4336  0411                     	;# 
  4337  0412                     	;# 
  4338  0413                     	;# 
  4339  0414                     	;# 
  4340  0415                     	;# 
  4341  0416                     	;# 
  4342  0417                     	;# 
  4343  0418                     	;# 
  4344  0418                     	;# 
  4345  0419                     	;# 
  4346  041A                     	;# 
  4347  041B                     	;# 
  4348  041C                     	;# 
  4349  041D                     	;# 
  4350  041E                     	;# 
  4351  041F                     	;# 
  4352  0498                     	;# 
  4353  0498                     	;# 
  4354  0499                     	;# 
  4355  049A                     	;# 
  4356  049B                     	;# 
  4357  049B                     	;# 
  4358  049C                     	;# 
  4359  049D                     	;# 
  4360  049E                     	;# 
  4361  049F                     	;# 
  4362  0617                     	;# 
  4363  0618                     	;# 
  4364  0619                     	;# 
  4365  0619                     	;# 
  4366  061A                     	;# 
  4367  061B                     	;# 
  4368  061C                     	;# 
  4369  061C                     	;# 
  4370  061F                     	;# 
  4371  0691                     	;# 
  4372  0692                     	;# 
  4373  0693                     	;# 
  4374  0694                     	;# 
  4375  0695                     	;# 
  4376  0696                     	;# 
  4377  0697                     	;# 
  4378  0698                     	;# 
  4379  0699                     	;# 
  4380  0711                     	;# 
  4381  0712                     	;# 
  4382  0713                     	;# 
  4383  0714                     	;# 
  4384  0715                     	;# 
  4385  0716                     	;# 
  4386  0717                     	;# 
  4387  0718                     	;# 
  4388  0719                     	;# 
  4389  0891                     	;# 
  4390  0891                     	;# 
  4391  0891                     	;# 
  4392  0891                     	;# 
  4393  0891                     	;# 
  4394  0891                     	;# 
  4395  0892                     	;# 
  4396  0892                     	;# 
  4397  0892                     	;# 
  4398  0893                     	;# 
  4399  0893                     	;# 
  4400  0893                     	;# 
  4401  0893                     	;# 
  4402  0893                     	;# 
  4403  0893                     	;# 
  4404  0894                     	;# 
  4405  0894                     	;# 
  4406  0894                     	;# 
  4407  0895                     	;# 
  4408  0895                     	;# 
  4409  0895                     	;# 
  4410  0896                     	;# 
  4411  0896                     	;# 
  4412  0896                     	;# 
  4413  089B                     	;# 
  4414  0911                     	;# 
  4415  0912                     	;# 
  4416  0913                     	;# 
  4417  0914                     	;# 
  4418  0915                     	;# 
  4419  0916                     	;# 
  4420  0918                     	;# 
  4421  0919                     	;# 
  4422  091A                     	;# 
  4423  091B                     	;# 
  4424  091C                     	;# 
  4425  091D                     	;# 
  4426  091E                     	;# 
  4427  091F                     	;# 
  4428  0E0F                     	;# 
  4429  0E10                     	;# 
  4430  0E11                     	;# 
  4431  0E12                     	;# 
  4432  0E13                     	;# 
  4433  0E14                     	;# 
  4434  0E15                     	;# 
  4435  0E16                     	;# 
  4436  0E17                     	;# 
  4437  0E18                     	;# 
  4438  0E19                     	;# 
  4439  0E1A                     	;# 
  4440  0E1B                     	;# 
  4441  0E1C                     	;# 
  4442  0E1D                     	;# 
  4443  0E1E                     	;# 
  4444  0E1F                     	;# 
  4445  0E20                     	;# 
  4446  0E21                     	;# 
  4447  0E22                     	;# 
  4448  0E24                     	;# 
  4449  0E25                     	;# 
  4450  0E28                     	;# 
  4451  0E29                     	;# 
  4452  0E2A                     	;# 
  4453  0E2B                     	;# 
  4454  0E2C                     	;# 
  4455  0E2D                     	;# 
  4456  0E2E                     	;# 
  4457  0E2F                     	;# 
  4458  0E90                     	;# 
  4459  0E91                     	;# 
  4460  0E92                     	;# 
  4461  0E94                     	;# 
  4462  0E95                     	;# 
  4463  0E9C                     	;# 
  4464  0E9D                     	;# 
  4465  0E9E                     	;# 
  4466  0E9F                     	;# 
  4467  0EA0                     	;# 
  4468  0EA1                     	;# 
  4469  0EA2                     	;# 
  4470  0EA3                     	;# 
  4471  0EA4                     	;# 
  4472  0EA5                     	;# 
  4473  0EA6                     	;# 
  4474  0EA7                     	;# 
  4475  0F0F                     	;# 
  4476  0F10                     	;# 
  4477  0F11                     	;# 
  4478  0F12                     	;# 
  4479  0F13                     	;# 
  4480  0F14                     	;# 
  4481  0F15                     	;# 
  4482  0F16                     	;# 
  4483  0F17                     	;# 
  4484  0F18                     	;# 
  4485  0F19                     	;# 
  4486  0F1A                     	;# 
  4487  0F1B                     	;# 
  4488  0F1C                     	;# 
  4489  0F1D                     	;# 
  4490  0F1E                     	;# 
  4491  0F1F                     	;# 
  4492  0F20                     	;# 
  4493  0F21                     	;# 
  4494  0F22                     	;# 
  4495  0F23                     	;# 
  4496  0F24                     	;# 
  4497  0F25                     	;# 
  4498  0F26                     	;# 
  4499  0F27                     	;# 
  4500  0F28                     	;# 
  4501  0F29                     	;# 
  4502  0F2A                     	;# 
  4503  0F2B                     	;# 
  4504  0F2C                     	;# 
  4505  0F2D                     	;# 
  4506  0F2E                     	;# 
  4507  0F2F                     	;# 
  4508  0F30                     	;# 
  4509  0F31                     	;# 
  4510  0F32                     	;# 
  4511  0F33                     	;# 
  4512  0F34                     	;# 
  4513  0F35                     	;# 
  4514  0F36                     	;# 
  4515  0F37                     	;# 
  4516  0FE4                     	;# 
  4517  0FE5                     	;# 
  4518  0FE6                     	;# 
  4519  0FE7                     	;# 
  4520  0FE8                     	;# 
  4521  0FE9                     	;# 
  4522  0FEA                     	;# 
  4523  0FEB                     	;# 
  4524  0FED                     	;# 
  4525  0FEE                     	;# 
  4526  0FEF                     	;_currentPositions_steps
  4527                           
  4528                           	psect	idataBANK0
  4529  0800                     __pidataBANK0:	
  4530                           
  4531                           ;initializer for _demoLong
  4532  0800  3401               	retlw	1
  4533  0801  3400               	retlw	0
  4534  0802  3400               	retlw	0
  4535  0803  3400               	retlw	0
  4536                           
  4537                           	psect	idataBANK1
  4538  21E0                     __pidataBANK1:	
  4539                           
  4540                           ;initializer for _piezo_on_time_ms
  4541  21E0  34E8               	retlw	232
  4542  21E1  3403               	retlw	3
  4543                           
  4544                           ;initializer for _heater_post_time_ms
  4545  21E2  340A               	retlw	10
  4546  21E3  3400               	retlw	0
  4547                           
  4548                           ;initializer for _heater_pre_time_ms
  4549  21E4  340A               	retlw	10
  4550  21E5  3400               	retlw	0
  4551                           
  4552                           	psect	idataBANK2
  4553  21DA                     __pidataBANK2:	
  4554                           
  4555                           ;initializer for _inter_step_interval_ms
  4556  21DA  34E8               	retlw	232
  4557  21DB  3403               	retlw	3
  4558  21DC  3400               	retlw	0
  4559  21DD  3400               	retlw	0
  4560                           
  4561                           ;initializer for _drv_peak_val
  4562  21DE  347F               	retlw	127
  4563  21DF  3400               	retlw	0
  4564                           
  4565                           	psect	idataBANK4
  4566  2516                     __pidataBANK4:	
  4567                           
  4568                           ;initializer for _fsmStateTable
  4569  2516  345F               	retlw	low _do_I2C_IDLE
  4570  2517  3422               	retlw	high _do_I2C_IDLE
  4571  2518  34E4               	retlw	low _do_I2C_SEND_ADR_READ
  4572  2519  3422               	retlw	high _do_I2C_SEND_ADR_READ
  4573  251A  34B7               	retlw	low _do_I2C_SEND_ADR_WRITE
  4574  251B  3422               	retlw	high _do_I2C_SEND_ADR_WRITE
  4575  251C  34AE               	retlw	low _do_I2C_TX
  4576  251D  341D               	retlw	high _do_I2C_TX
  4577  251E  34BC               	retlw	low _do_I2C_RX
  4578  251F  3419               	retlw	high _do_I2C_RX
  4579  2520  3484               	retlw	low _do_I2C_RCEN
  4580  2521  3422               	retlw	high _do_I2C_RCEN
  4581  2522  3441               	retlw	low _do_I2C_TX_EMPTY
  4582  2523  3427               	retlw	high _do_I2C_TX_EMPTY
  4583  2524  3404               	retlw	low _do_I2C_SEND_RESTART_READ
  4584  2525  3422               	retlw	high _do_I2C_SEND_RESTART_READ
  4585  2526  340C               	retlw	low _do_I2C_SEND_RESTART_WRITE
  4586  2527  3422               	retlw	high _do_I2C_SEND_RESTART_WRITE
  4587  2528  3414               	retlw	low _do_I2C_SEND_RESTART
  4588  2529  3422               	retlw	high _do_I2C_SEND_RESTART
  4589  252A  341C               	retlw	low _do_I2C_SEND_STOP
  4590  252B  3422               	retlw	high _do_I2C_SEND_STOP
  4591  252C  3424               	retlw	low _do_I2C_DO_ACK
  4592  252D  3422               	retlw	high _do_I2C_DO_ACK
  4593  252E  342C               	retlw	low _do_I2C_DO_NACK_STOP
  4594  252F  3422               	retlw	high _do_I2C_DO_NACK_STOP
  4595  2530  3434               	retlw	low _do_I2C_DO_NACK_RESTART
  4596  2531  3422               	retlw	high _do_I2C_DO_NACK_RESTART
  4597  2532  34AC               	retlw	low _do_I2C_RESET
  4598  2533  3422               	retlw	high _do_I2C_RESET
  4599  2534  3416               	retlw	low _do_I2C_DO_ADDRESS_NACK
  4600  2535  3427               	retlw	high _do_I2C_DO_ADDRESS_NACK
  4601                           
  4602                           	psect	stringtext1
  4603  1000                     __pstringtext1:	
  4604  1000                     _drv_fifo_sine:	
  4605  1000  340B               	retlw	11
  4606  1001  3400               	retlw	0
  4607  1002  3400               	retlw	0
  4608  1003  3400               	retlw	0
  4609  1004  3410               	retlw	16
  4610  1005  3400               	retlw	0
  4611  1006  3420               	retlw	32
  4612  1007  3400               	retlw	0
  4613  1008  342E               	retlw	46
  4614  1009  3400               	retlw	0
  4615  100A  343C               	retlw	60
  4616  100B  3400               	retlw	0
  4617  100C  3448               	retlw	72
  4618  100D  3400               	retlw	0
  4619  100E  3453               	retlw	83
  4620  100F  3400               	retlw	0
  4621  1010  345B               	retlw	91
  4622  1011  3400               	retlw	0
  4623  1012  3461               	retlw	97
  4624  1013  3400               	retlw	0
  4625  1014  3465               	retlw	101
  4626  1015  3400               	retlw	0
  4627  1016  3466               	retlw	102
  4628  1017  3400               	retlw	0
  4629  1018  3465               	retlw	101
  4630  1019  3400               	retlw	0
  4631  101A  3461               	retlw	97
  4632  101B  3400               	retlw	0
  4633  101C  345B               	retlw	91
  4634  101D  3400               	retlw	0
  4635  101E  3453               	retlw	83
  4636  101F  3400               	retlw	0
  4637  1020  3448               	retlw	72
  4638  1021  3400               	retlw	0
  4639  1022  343C               	retlw	60
  4640  1023  3400               	retlw	0
  4641  1024  342E               	retlw	46
  4642  1025  3400               	retlw	0
  4643  1026  3420               	retlw	32
  4644  1027  3400               	retlw	0
  4645  1028  3410               	retlw	16
  4646  1029  3400               	retlw	0
  4647  102A  3400               	retlw	0
  4648  102B  3400               	retlw	0
  4649  102C  34F0               	retlw	240
  4650  102D  3400               	retlw	0
  4651  102E  34E0               	retlw	224
  4652  102F  3400               	retlw	0
  4653  1030  34D2               	retlw	210
  4654  1031  3400               	retlw	0
  4655  1032  34C4               	retlw	196
  4656  1033  3400               	retlw	0
  4657  1034  34B8               	retlw	184
  4658  1035  3400               	retlw	0
  4659  1036  34AD               	retlw	173
  4660  1037  3400               	retlw	0
  4661  1038  34A5               	retlw	165
  4662  1039  3400               	retlw	0
  4663  103A  349F               	retlw	159
  4664  103B  3400               	retlw	0
  4665  103C  349B               	retlw	155
  4666  103D  3400               	retlw	0
  4667  103E  349A               	retlw	154
  4668  103F  3400               	retlw	0
  4669  1040  349B               	retlw	155
  4670  1041  3400               	retlw	0
  4671  1042  349F               	retlw	159
  4672  1043  3400               	retlw	0
  4673  1044  34A5               	retlw	165
  4674  1045  3400               	retlw	0
  4675  1046  34AD               	retlw	173
  4676  1047  3400               	retlw	0
  4677  1048  34B8               	retlw	184
  4678  1049  3400               	retlw	0
  4679  104A  34C4               	retlw	196
  4680  104B  3400               	retlw	0
  4681  104C  34D2               	retlw	210
  4682  104D  3400               	retlw	0
  4683  104E  34E0               	retlw	224
  4684  104F  3400               	retlw	0
  4685  1050  34F0               	retlw	240
  4686  1051  3400               	retlw	0
  4687  1052  3400               	retlw	0
  4688  1053  3400               	retlw	0
  4689  1054  3410               	retlw	16
  4690  1055  3400               	retlw	0
  4691  1056  3420               	retlw	32
  4692  1057  3400               	retlw	0
  4693  1058  342E               	retlw	46
  4694  1059  3400               	retlw	0
  4695  105A  343C               	retlw	60
  4696  105B  3400               	retlw	0
  4697  105C  3448               	retlw	72
  4698  105D  3400               	retlw	0
  4699  105E  3453               	retlw	83
  4700  105F  3400               	retlw	0
  4701  1060  345B               	retlw	91
  4702  1061  3400               	retlw	0
  4703  1062  3461               	retlw	97
  4704  1063  3400               	retlw	0
  4705  1064  3465               	retlw	101
  4706  1065  3400               	retlw	0
  4707  1066  3466               	retlw	102
  4708  1067  3400               	retlw	0
  4709  1068  3465               	retlw	101
  4710  1069  3400               	retlw	0
  4711  106A  3461               	retlw	97
  4712  106B  3400               	retlw	0
  4713  106C  345B               	retlw	91
  4714  106D  3400               	retlw	0
  4715  106E  3453               	retlw	83
  4716  106F  3400               	retlw	0
  4717  1070  3448               	retlw	72
  4718  1071  3400               	retlw	0
  4719  1072  343C               	retlw	60
  4720  1073  3400               	retlw	0
  4721  1074  342E               	retlw	46
  4722  1075  3400               	retlw	0
  4723  1076  3420               	retlw	32
  4724  1077  3400               	retlw	0
  4725  1078  3410               	retlw	16
  4726  1079  3400               	retlw	0
  4727  107A  3400               	retlw	0
  4728  107B  3400               	retlw	0
  4729  107C  34F0               	retlw	240
  4730  107D  3400               	retlw	0
  4731  107E  34E0               	retlw	224
  4732  107F  3400               	retlw	0
  4733  1080  34D2               	retlw	210
  4734  1081  3400               	retlw	0
  4735  1082  34C4               	retlw	196
  4736  1083  3400               	retlw	0
  4737  1084  34B8               	retlw	184
  4738  1085  3400               	retlw	0
  4739  1086  34AD               	retlw	173
  4740  1087  3400               	retlw	0
  4741  1088  34A5               	retlw	165
  4742  1089  3400               	retlw	0
  4743  108A  349F               	retlw	159
  4744  108B  3400               	retlw	0
  4745  108C  349B               	retlw	155
  4746  108D  3400               	retlw	0
  4747  108E  349A               	retlw	154
  4748  108F  3400               	retlw	0
  4749  1090  349B               	retlw	155
  4750  1091  3400               	retlw	0
  4751  1092  349F               	retlw	159
  4752  1093  3400               	retlw	0
  4753  1094  34A5               	retlw	165
  4754  1095  3400               	retlw	0
  4755  1096  34AD               	retlw	173
  4756  1097  3400               	retlw	0
  4757  1098  34B8               	retlw	184
  4758  1099  3400               	retlw	0
  4759  109A  34C4               	retlw	196
  4760  109B  3400               	retlw	0
  4761  109C  34D2               	retlw	210
  4762  109D  3400               	retlw	0
  4763  109E  34E0               	retlw	224
  4764  109F  3400               	retlw	0
  4765  10A0  34F0               	retlw	240
  4766  10A1  3400               	retlw	0
  4767  10A2  3400               	retlw	0
  4768  10A3  3400               	retlw	0
  4769  10A4  3410               	retlw	16
  4770  10A5  3400               	retlw	0
  4771  10A6  3420               	retlw	32
  4772  10A7  3400               	retlw	0
  4773  10A8  342E               	retlw	46
  4774  10A9  3400               	retlw	0
  4775  10AA  343C               	retlw	60
  4776  10AB  3400               	retlw	0
  4777  10AC  3448               	retlw	72
  4778  10AD  3400               	retlw	0
  4779  10AE  3453               	retlw	83
  4780  10AF  3400               	retlw	0
  4781  10B0  345B               	retlw	91
  4782  10B1  3400               	retlw	0
  4783  10B2  3461               	retlw	97
  4784  10B3  3400               	retlw	0
  4785  10B4  3465               	retlw	101
  4786  10B5  3400               	retlw	0
  4787  10B6  3466               	retlw	102
  4788  10B7  3400               	retlw	0
  4789  10B8  3465               	retlw	101
  4790  10B9  3400               	retlw	0
  4791  10BA  3461               	retlw	97
  4792  10BB  3400               	retlw	0
  4793  10BC  345B               	retlw	91
  4794  10BD  3400               	retlw	0
  4795  10BE  3453               	retlw	83
  4796  10BF  3400               	retlw	0
  4797  10C0  3448               	retlw	72
  4798  10C1  3400               	retlw	0
  4799  10C2  343C               	retlw	60
  4800  10C3  3400               	retlw	0
  4801  10C4  342E               	retlw	46
  4802  10C5  3400               	retlw	0
  4803  10C6  3420               	retlw	32
  4804  10C7  3400               	retlw	0
  4805  10C8  3410               	retlw	16
  4806  10C9  3400               	retlw	0
  4807  10CA  3400               	retlw	0
  4808  10CB  3400               	retlw	0
  4809  10CC  34F0               	retlw	240
  4810  10CD  3400               	retlw	0
  4811  10CE  34E0               	retlw	224
  4812  10CF  3400               	retlw	0
  4813  10D0  34D2               	retlw	210
  4814  10D1  3400               	retlw	0
  4815  10D2  34C4               	retlw	196
  4816  10D3  3400               	retlw	0
  4817  10D4  34B8               	retlw	184
  4818  10D5  3400               	retlw	0
  4819  10D6  34AD               	retlw	173
  4820  10D7  3400               	retlw	0
  4821  10D8  34A5               	retlw	165
  4822  10D9  3400               	retlw	0
  4823  10DA  349F               	retlw	159
  4824  10DB  3400               	retlw	0
  4825  10DC  349B               	retlw	155
  4826  10DD  3400               	retlw	0
  4827  10DE  349A               	retlw	154
  4828  10DF  3400               	retlw	0
  4829  10E0  349B               	retlw	155
  4830  10E1  3400               	retlw	0
  4831  10E2  349F               	retlw	159
  4832  10E3  3400               	retlw	0
  4833  10E4  34A5               	retlw	165
  4834  10E5  3400               	retlw	0
  4835  10E6  34AD               	retlw	173
  4836  10E7  3400               	retlw	0
  4837  10E8  34B8               	retlw	184
  4838  10E9  3400               	retlw	0
  4839  10EA  34C4               	retlw	196
  4840  10EB  3400               	retlw	0
  4841  10EC  34D2               	retlw	210
  4842  10ED  3400               	retlw	0
  4843  10EE  34E0               	retlw	224
  4844  10EF  3400               	retlw	0
  4845  10F0  34F0               	retlw	240
  4846  10F1  3400               	retlw	0
  4847  10F2  3400               	retlw	0
  4848  10F3  3400               	retlw	0
  4849  10F4                     __end_of_drv_fifo_sine:	
  4850                           
  4851                           	psect	stringtext2
  4852  11E8                     __pstringtext2:	
  4853  11E8                     drv2665@drv_sine:	
  4854  11E8  3400               	retlw	0
  4855  11E9  3400               	retlw	0
  4856  11EA  3410               	retlw	16
  4857  11EB  3400               	retlw	0
  4858  11EC  3420               	retlw	32
  4859  11ED  3400               	retlw	0
  4860  11EE  342E               	retlw	46
  4861  11EF  3400               	retlw	0
  4862  11F0  343C               	retlw	60
  4863  11F1  3400               	retlw	0
  4864  11F2  3448               	retlw	72
  4865  11F3  3400               	retlw	0
  4866  11F4  3453               	retlw	83
  4867  11F5  3400               	retlw	0
  4868  11F6  345B               	retlw	91
  4869  11F7  3400               	retlw	0
  4870  11F8  3461               	retlw	97
  4871  11F9  3400               	retlw	0
  4872  11FA  3465               	retlw	101
  4873  11FB  3400               	retlw	0
  4874  11FC  3466               	retlw	102
  4875  11FD  3400               	retlw	0
  4876  11FE  3465               	retlw	101
  4877  11FF  3400               	retlw	0
  4878  1200  3461               	retlw	97
  4879  1201  3400               	retlw	0
  4880  1202  345B               	retlw	91
  4881  1203  3400               	retlw	0
  4882  1204  3453               	retlw	83
  4883  1205  3400               	retlw	0
  4884  1206  3448               	retlw	72
  4885  1207  3400               	retlw	0
  4886  1208  343C               	retlw	60
  4887  1209  3400               	retlw	0
  4888  120A  342E               	retlw	46
  4889  120B  3400               	retlw	0
  4890  120C  3420               	retlw	32
  4891  120D  3400               	retlw	0
  4892  120E  3410               	retlw	16
  4893  120F  3400               	retlw	0
  4894  1210  3400               	retlw	0
  4895  1211  3400               	retlw	0
  4896  1212  34F0               	retlw	240
  4897  1213  3400               	retlw	0
  4898  1214  34E0               	retlw	224
  4899  1215  3400               	retlw	0
  4900  1216  34D2               	retlw	210
  4901  1217  3400               	retlw	0
  4902  1218  34C4               	retlw	196
  4903  1219  3400               	retlw	0
  4904  121A  34B8               	retlw	184
  4905  121B  3400               	retlw	0
  4906  121C  34AD               	retlw	173
  4907  121D  3400               	retlw	0
  4908  121E  34A5               	retlw	165
  4909  121F  3400               	retlw	0
  4910  1220  349F               	retlw	159
  4911  1221  3400               	retlw	0
  4912  1222  349B               	retlw	155
  4913  1223  3400               	retlw	0
  4914  1224  349A               	retlw	154
  4915  1225  3400               	retlw	0
  4916  1226  349B               	retlw	155
  4917  1227  3400               	retlw	0
  4918  1228  349F               	retlw	159
  4919  1229  3400               	retlw	0
  4920  122A  34A5               	retlw	165
  4921  122B  3400               	retlw	0
  4922  122C  34AD               	retlw	173
  4923  122D  3400               	retlw	0
  4924  122E  34B8               	retlw	184
  4925  122F  3400               	retlw	0
  4926  1230  34C4               	retlw	196
  4927  1231  3400               	retlw	0
  4928  1232  34D2               	retlw	210
  4929  1233  3400               	retlw	0
  4930  1234  34E0               	retlw	224
  4931  1235  3400               	retlw	0
  4932  1236  34F0               	retlw	240
  4933  1237  3400               	retlw	0
  4934  1238  3400               	retlw	0
  4935  1239  3400               	retlw	0
  4936  123A  3410               	retlw	16
  4937  123B  3400               	retlw	0
  4938  123C  3420               	retlw	32
  4939  123D  3400               	retlw	0
  4940  123E  342E               	retlw	46
  4941  123F  3400               	retlw	0
  4942  1240  343C               	retlw	60
  4943  1241  3400               	retlw	0
  4944  1242  3448               	retlw	72
  4945  1243  3400               	retlw	0
  4946  1244  3453               	retlw	83
  4947  1245  3400               	retlw	0
  4948  1246  345B               	retlw	91
  4949  1247  3400               	retlw	0
  4950  1248  3461               	retlw	97
  4951  1249  3400               	retlw	0
  4952  124A  3465               	retlw	101
  4953  124B  3400               	retlw	0
  4954  124C  3466               	retlw	102
  4955  124D  3400               	retlw	0
  4956  124E  3465               	retlw	101
  4957  124F  3400               	retlw	0
  4958  1250  3461               	retlw	97
  4959  1251  3400               	retlw	0
  4960  1252  345B               	retlw	91
  4961  1253  3400               	retlw	0
  4962  1254  3453               	retlw	83
  4963  1255  3400               	retlw	0
  4964  1256  3448               	retlw	72
  4965  1257  3400               	retlw	0
  4966  1258  343C               	retlw	60
  4967  1259  3400               	retlw	0
  4968  125A  342E               	retlw	46
  4969  125B  3400               	retlw	0
  4970  125C  3420               	retlw	32
  4971  125D  3400               	retlw	0
  4972  125E  3410               	retlw	16
  4973  125F  3400               	retlw	0
  4974  1260  3400               	retlw	0
  4975  1261  3400               	retlw	0
  4976  1262  34F0               	retlw	240
  4977  1263  3400               	retlw	0
  4978  1264  34E0               	retlw	224
  4979  1265  3400               	retlw	0
  4980  1266  34D2               	retlw	210
  4981  1267  3400               	retlw	0
  4982  1268  34C4               	retlw	196
  4983  1269  3400               	retlw	0
  4984  126A  34B8               	retlw	184
  4985  126B  3400               	retlw	0
  4986  126C  34AD               	retlw	173
  4987  126D  3400               	retlw	0
  4988  126E  34A5               	retlw	165
  4989  126F  3400               	retlw	0
  4990  1270  349F               	retlw	159
  4991  1271  3400               	retlw	0
  4992  1272  349B               	retlw	155
  4993  1273  3400               	retlw	0
  4994  1274  349A               	retlw	154
  4995  1275  3400               	retlw	0
  4996  1276  349B               	retlw	155
  4997  1277  3400               	retlw	0
  4998  1278  349F               	retlw	159
  4999  1279  3400               	retlw	0
  5000  127A  34A5               	retlw	165
  5001  127B  3400               	retlw	0
  5002  127C  34AD               	retlw	173
  5003  127D  3400               	retlw	0
  5004  127E  34B8               	retlw	184
  5005  127F  3400               	retlw	0
  5006  1280  34C4               	retlw	196
  5007  1281  3400               	retlw	0
  5008  1282  34D2               	retlw	210
  5009  1283  3400               	retlw	0
  5010  1284  34E0               	retlw	224
  5011  1285  3400               	retlw	0
  5012  1286  34F0               	retlw	240
  5013  1287  3400               	retlw	0
  5014  1288  3400               	retlw	0
  5015  1289  3400               	retlw	0
  5016  128A  3410               	retlw	16
  5017  128B  3400               	retlw	0
  5018  128C  3420               	retlw	32
  5019  128D  3400               	retlw	0
  5020  128E  342E               	retlw	46
  5021  128F  3400               	retlw	0
  5022  1290  343C               	retlw	60
  5023  1291  3400               	retlw	0
  5024  1292  3448               	retlw	72
  5025  1293  3400               	retlw	0
  5026  1294  3453               	retlw	83
  5027  1295  3400               	retlw	0
  5028  1296  345B               	retlw	91
  5029  1297  3400               	retlw	0
  5030  1298  3461               	retlw	97
  5031  1299  3400               	retlw	0
  5032  129A  3465               	retlw	101
  5033  129B  3400               	retlw	0
  5034  129C  3466               	retlw	102
  5035  129D  3400               	retlw	0
  5036  129E  3465               	retlw	101
  5037  129F  3400               	retlw	0
  5038  12A0  3461               	retlw	97
  5039  12A1  3400               	retlw	0
  5040  12A2  345B               	retlw	91
  5041  12A3  3400               	retlw	0
  5042  12A4  3453               	retlw	83
  5043  12A5  3400               	retlw	0
  5044  12A6  3448               	retlw	72
  5045  12A7  3400               	retlw	0
  5046  12A8  343C               	retlw	60
  5047  12A9  3400               	retlw	0
  5048  12AA  342E               	retlw	46
  5049  12AB  3400               	retlw	0
  5050  12AC  3420               	retlw	32
  5051  12AD  3400               	retlw	0
  5052  12AE  3410               	retlw	16
  5053  12AF  3400               	retlw	0
  5054  12B0  3400               	retlw	0
  5055  12B1  3400               	retlw	0
  5056  12B2  34F0               	retlw	240
  5057  12B3  3400               	retlw	0
  5058  12B4  34E0               	retlw	224
  5059  12B5  3400               	retlw	0
  5060  12B6  34D2               	retlw	210
  5061  12B7  3400               	retlw	0
  5062  12B8  34C4               	retlw	196
  5063  12B9  3400               	retlw	0
  5064  12BA  34B8               	retlw	184
  5065  12BB  3400               	retlw	0
  5066  12BC  34AD               	retlw	173
  5067  12BD  3400               	retlw	0
  5068  12BE  34A5               	retlw	165
  5069  12BF  3400               	retlw	0
  5070  12C0  349F               	retlw	159
  5071  12C1  3400               	retlw	0
  5072  12C2  349B               	retlw	155
  5073  12C3  3400               	retlw	0
  5074  12C4  349A               	retlw	154
  5075  12C5  3400               	retlw	0
  5076  12C6  349B               	retlw	155
  5077  12C7  3400               	retlw	0
  5078  12C8  349F               	retlw	159
  5079  12C9  3400               	retlw	0
  5080  12CA  34A5               	retlw	165
  5081  12CB  3400               	retlw	0
  5082  12CC  34AD               	retlw	173
  5083  12CD  3400               	retlw	0
  5084  12CE  34B8               	retlw	184
  5085  12CF  3400               	retlw	0
  5086  12D0  34C4               	retlw	196
  5087  12D1  3400               	retlw	0
  5088  12D2  34D2               	retlw	210
  5089  12D3  3400               	retlw	0
  5090  12D4  34E0               	retlw	224
  5091  12D5  3400               	retlw	0
  5092  12D6  34F0               	retlw	240
  5093  12D7  3400               	retlw	0
  5094  12D8  3400               	retlw	0
  5095  12D9  3400               	retlw	0
  5096  12DA                     __end_ofdrv2665@drv_sine:	
  5097                           
  5098                           	psect	stringtext3
  5099  12DA                     __pstringtext3:	
  5100  12DA                     _drv_sine:	
  5101  12DA  3400               	retlw	0
  5102  12DB  3400               	retlw	0
  5103  12DC  3410               	retlw	16
  5104  12DD  3400               	retlw	0
  5105  12DE  3420               	retlw	32
  5106  12DF  3400               	retlw	0
  5107  12E0  342E               	retlw	46
  5108  12E1  3400               	retlw	0
  5109  12E2  343C               	retlw	60
  5110  12E3  3400               	retlw	0
  5111  12E4  3448               	retlw	72
  5112  12E5  3400               	retlw	0
  5113  12E6  3453               	retlw	83
  5114  12E7  3400               	retlw	0
  5115  12E8  345B               	retlw	91
  5116  12E9  3400               	retlw	0
  5117  12EA  3461               	retlw	97
  5118  12EB  3400               	retlw	0
  5119  12EC  3465               	retlw	101
  5120  12ED  3400               	retlw	0
  5121  12EE  3466               	retlw	102
  5122  12EF  3400               	retlw	0
  5123  12F0  3465               	retlw	101
  5124  12F1  3400               	retlw	0
  5125  12F2  3461               	retlw	97
  5126  12F3  3400               	retlw	0
  5127  12F4  345B               	retlw	91
  5128  12F5  3400               	retlw	0
  5129  12F6  3453               	retlw	83
  5130  12F7  3400               	retlw	0
  5131  12F8  3448               	retlw	72
  5132  12F9  3400               	retlw	0
  5133  12FA  343C               	retlw	60
  5134  12FB  3400               	retlw	0
  5135  12FC  342E               	retlw	46
  5136  12FD  3400               	retlw	0
  5137  12FE  3420               	retlw	32
  5138  12FF  3400               	retlw	0
  5139  1300  3410               	retlw	16
  5140  1301  3400               	retlw	0
  5141  1302  3400               	retlw	0
  5142  1303  3400               	retlw	0
  5143  1304  34F0               	retlw	240
  5144  1305  3400               	retlw	0
  5145  1306  34E0               	retlw	224
  5146  1307  3400               	retlw	0
  5147  1308  34D2               	retlw	210
  5148  1309  3400               	retlw	0
  5149  130A  34C4               	retlw	196
  5150  130B  3400               	retlw	0
  5151  130C  34B8               	retlw	184
  5152  130D  3400               	retlw	0
  5153  130E  34AD               	retlw	173
  5154  130F  3400               	retlw	0
  5155  1310  34A5               	retlw	165
  5156  1311  3400               	retlw	0
  5157  1312  349F               	retlw	159
  5158  1313  3400               	retlw	0
  5159  1314  349B               	retlw	155
  5160  1315  3400               	retlw	0
  5161  1316  349A               	retlw	154
  5162  1317  3400               	retlw	0
  5163  1318  349B               	retlw	155
  5164  1319  3400               	retlw	0
  5165  131A  349F               	retlw	159
  5166  131B  3400               	retlw	0
  5167  131C  34A5               	retlw	165
  5168  131D  3400               	retlw	0
  5169  131E  34AD               	retlw	173
  5170  131F  3400               	retlw	0
  5171  1320  34B8               	retlw	184
  5172  1321  3400               	retlw	0
  5173  1322  34C4               	retlw	196
  5174  1323  3400               	retlw	0
  5175  1324  34D2               	retlw	210
  5176  1325  3400               	retlw	0
  5177  1326  34E0               	retlw	224
  5178  1327  3400               	retlw	0
  5179  1328  34F0               	retlw	240
  5180  1329  3400               	retlw	0
  5181  132A  3400               	retlw	0
  5182  132B  3400               	retlw	0
  5183  132C  3410               	retlw	16
  5184  132D  3400               	retlw	0
  5185  132E  3420               	retlw	32
  5186  132F  3400               	retlw	0
  5187  1330  342E               	retlw	46
  5188  1331  3400               	retlw	0
  5189  1332  343C               	retlw	60
  5190  1333  3400               	retlw	0
  5191  1334  3448               	retlw	72
  5192  1335  3400               	retlw	0
  5193  1336  3453               	retlw	83
  5194  1337  3400               	retlw	0
  5195  1338  345B               	retlw	91
  5196  1339  3400               	retlw	0
  5197  133A  3461               	retlw	97
  5198  133B  3400               	retlw	0
  5199  133C  3465               	retlw	101
  5200  133D  3400               	retlw	0
  5201  133E  3466               	retlw	102
  5202  133F  3400               	retlw	0
  5203  1340  3465               	retlw	101
  5204  1341  3400               	retlw	0
  5205  1342  3461               	retlw	97
  5206  1343  3400               	retlw	0
  5207  1344  345B               	retlw	91
  5208  1345  3400               	retlw	0
  5209  1346  3453               	retlw	83
  5210  1347  3400               	retlw	0
  5211  1348  3448               	retlw	72
  5212  1349  3400               	retlw	0
  5213  134A  343C               	retlw	60
  5214  134B  3400               	retlw	0
  5215  134C  342E               	retlw	46
  5216  134D  3400               	retlw	0
  5217  134E  3420               	retlw	32
  5218  134F  3400               	retlw	0
  5219  1350  3410               	retlw	16
  5220  1351  3400               	retlw	0
  5221  1352  3400               	retlw	0
  5222  1353  3400               	retlw	0
  5223  1354  34F0               	retlw	240
  5224  1355  3400               	retlw	0
  5225  1356  34E0               	retlw	224
  5226  1357  3400               	retlw	0
  5227  1358  34D2               	retlw	210
  5228  1359  3400               	retlw	0
  5229  135A  34C4               	retlw	196
  5230  135B  3400               	retlw	0
  5231  135C  34B8               	retlw	184
  5232  135D  3400               	retlw	0
  5233  135E  34AD               	retlw	173
  5234  135F  3400               	retlw	0
  5235  1360  34A5               	retlw	165
  5236  1361  3400               	retlw	0
  5237  1362  349F               	retlw	159
  5238  1363  3400               	retlw	0
  5239  1364  349B               	retlw	155
  5240  1365  3400               	retlw	0
  5241  1366  349A               	retlw	154
  5242  1367  3400               	retlw	0
  5243  1368  349B               	retlw	155
  5244  1369  3400               	retlw	0
  5245  136A  349F               	retlw	159
  5246  136B  3400               	retlw	0
  5247  136C  34A5               	retlw	165
  5248  136D  3400               	retlw	0
  5249  136E  34AD               	retlw	173
  5250  136F  3400               	retlw	0
  5251  1370  34B8               	retlw	184
  5252  1371  3400               	retlw	0
  5253  1372  34C4               	retlw	196
  5254  1373  3400               	retlw	0
  5255  1374  34D2               	retlw	210
  5256  1375  3400               	retlw	0
  5257  1376  34E0               	retlw	224
  5258  1377  3400               	retlw	0
  5259  1378  34F0               	retlw	240
  5260  1379  3400               	retlw	0
  5261  137A  3400               	retlw	0
  5262  137B  3400               	retlw	0
  5263  137C  3410               	retlw	16
  5264  137D  3400               	retlw	0
  5265  137E  3420               	retlw	32
  5266  137F  3400               	retlw	0
  5267  1380  342E               	retlw	46
  5268  1381  3400               	retlw	0
  5269  1382  343C               	retlw	60
  5270  1383  3400               	retlw	0
  5271  1384  3448               	retlw	72
  5272  1385  3400               	retlw	0
  5273  1386  3453               	retlw	83
  5274  1387  3400               	retlw	0
  5275  1388  345B               	retlw	91
  5276  1389  3400               	retlw	0
  5277  138A  3461               	retlw	97
  5278  138B  3400               	retlw	0
  5279  138C  3465               	retlw	101
  5280  138D  3400               	retlw	0
  5281  138E  3466               	retlw	102
  5282  138F  3400               	retlw	0
  5283  1390  3465               	retlw	101
  5284  1391  3400               	retlw	0
  5285  1392  3461               	retlw	97
  5286  1393  3400               	retlw	0
  5287  1394  345B               	retlw	91
  5288  1395  3400               	retlw	0
  5289  1396  3453               	retlw	83
  5290  1397  3400               	retlw	0
  5291  1398  3448               	retlw	72
  5292  1399  3400               	retlw	0
  5293  139A  343C               	retlw	60
  5294  139B  3400               	retlw	0
  5295  139C  342E               	retlw	46
  5296  139D  3400               	retlw	0
  5297  139E  3420               	retlw	32
  5298  139F  3400               	retlw	0
  5299  13A0  3410               	retlw	16
  5300  13A1  3400               	retlw	0
  5301  13A2  3400               	retlw	0
  5302  13A3  3400               	retlw	0
  5303  13A4  34F0               	retlw	240
  5304  13A5  3400               	retlw	0
  5305  13A6  34E0               	retlw	224
  5306  13A7  3400               	retlw	0
  5307  13A8  34D2               	retlw	210
  5308  13A9  3400               	retlw	0
  5309  13AA  34C4               	retlw	196
  5310  13AB  3400               	retlw	0
  5311  13AC  34B8               	retlw	184
  5312  13AD  3400               	retlw	0
  5313  13AE  34AD               	retlw	173
  5314  13AF  3400               	retlw	0
  5315  13B0  34A5               	retlw	165
  5316  13B1  3400               	retlw	0
  5317  13B2  349F               	retlw	159
  5318  13B3  3400               	retlw	0
  5319  13B4  349B               	retlw	155
  5320  13B5  3400               	retlw	0
  5321  13B6  349A               	retlw	154
  5322  13B7  3400               	retlw	0
  5323  13B8  349B               	retlw	155
  5324  13B9  3400               	retlw	0
  5325  13BA  349F               	retlw	159
  5326  13BB  3400               	retlw	0
  5327  13BC  34A5               	retlw	165
  5328  13BD  3400               	retlw	0
  5329  13BE  34AD               	retlw	173
  5330  13BF  3400               	retlw	0
  5331  13C0  34B8               	retlw	184
  5332  13C1  3400               	retlw	0
  5333  13C2  34C4               	retlw	196
  5334  13C3  3400               	retlw	0
  5335  13C4  34D2               	retlw	210
  5336  13C5  3400               	retlw	0
  5337  13C6  34E0               	retlw	224
  5338  13C7  3400               	retlw	0
  5339  13C8  34F0               	retlw	240
  5340  13C9  3400               	retlw	0
  5341  13CA  3400               	retlw	0
  5342  13CB  3400               	retlw	0
  5343  13CC                     __end_of_drv_sine:	
  5344                           
  5345                           	psect	stringtext4
  5346  2800                     __pstringtext4:	
  5347  2800                     _dpowers:	
  5348  2800  3401               	retlw	1
  5349  2801  3400               	retlw	0
  5350  2802  3400               	retlw	0
  5351  2803  3400               	retlw	0
  5352  2804  340A               	retlw	10
  5353  2805  3400               	retlw	0
  5354  2806  3400               	retlw	0
  5355  2807  3400               	retlw	0
  5356  2808  3464               	retlw	100
  5357  2809  3400               	retlw	0
  5358  280A  3400               	retlw	0
  5359  280B  3400               	retlw	0
  5360  280C  34E8               	retlw	232
  5361  280D  3403               	retlw	3
  5362  280E  3400               	retlw	0
  5363  280F  3400               	retlw	0
  5364  2810  3410               	retlw	16
  5365  2811  3427               	retlw	39
  5366  2812  3400               	retlw	0
  5367  2813  3400               	retlw	0
  5368  2814  34A0               	retlw	160
  5369  2815  3486               	retlw	134
  5370  2816  3401               	retlw	1
  5371  2817  3400               	retlw	0
  5372  2818  3440               	retlw	64
  5373  2819  3442               	retlw	66
  5374  281A  340F               	retlw	15
  5375  281B  3400               	retlw	0
  5376  281C  3480               	retlw	128
  5377  281D  3496               	retlw	150
  5378  281E  3498               	retlw	152
  5379  281F  3400               	retlw	0
  5380  2820  3400               	retlw	0
  5381  2821  34E1               	retlw	225
  5382  2822  34F5               	retlw	245
  5383  2823  3405               	retlw	5
  5384  2824  3400               	retlw	0
  5385  2825  34CA               	retlw	202
  5386  2826  349A               	retlw	154
  5387  2827  343B               	retlw	59
  5388  2828                     __end_of_dpowers:	
  5389                           
  5390                           	psect	stringtext5
  5391  2A30                     __pstringtext5:	
  5392  2A30                     _TMR2_RANGE:	
  5393  2A30  3400               	retlw	0
  5394  2A31  34C8               	retlw	200
  5395  2A32  343F               	retlw	63
  5396  2A33                     __end_of_TMR2_RANGE:	
  5397                           
  5398                           	psect	stringtext6
  5399  2A33                     __pstringtext6:	
  5400  2A33                     _TMR0_RANGE:	
  5401  2A33  3400               	retlw	0
  5402  2A34  34C8               	retlw	200
  5403  2A35  343D               	retlw	61
  5404  2A36                     __end_of_TMR0_RANGE:	
  5405                           
  5406                           	psect	stringtext7
  5407  2A3C                     __pstringtext7:	
  5408  2A3C                     _LEDpower:	
  5409  2A3C  343F               	retlw	63
  5410  2A3D  3400               	retlw	0
  5411  2A3E                     __end_of_LEDpower:	
  5412                           
  5413                           	psect	stringtext8
  5414  2A44                     __pstringtext8:	
  5415  2A44                     _drv_address:	
  5416  2A44  3459               	retlw	89
  5417  2A45                     __end_of_drv_address:	
  5418                           
  5419                           	psect	stringtext9
  5420  10F4                     __pstringtext9:	
  5421  10F4                     drv2665@drv_fifo_sine:	
  5422  10F4  340B               	retlw	11
  5423  10F5  3400               	retlw	0
  5424  10F6  3400               	retlw	0
  5425  10F7  3400               	retlw	0
  5426  10F8  3410               	retlw	16
  5427  10F9  3400               	retlw	0
  5428  10FA  3420               	retlw	32
  5429  10FB  3400               	retlw	0
  5430  10FC  342E               	retlw	46
  5431  10FD  3400               	retlw	0
  5432  10FE  343C               	retlw	60
  5433  10FF  3400               	retlw	0
  5434  1100  3448               	retlw	72
  5435  1101  3400               	retlw	0
  5436  1102  3453               	retlw	83
  5437  1103  3400               	retlw	0
  5438  1104  345B               	retlw	91
  5439  1105  3400               	retlw	0
  5440  1106  3461               	retlw	97
  5441  1107  3400               	retlw	0
  5442  1108  3465               	retlw	101
  5443  1109  3400               	retlw	0
  5444  110A  3466               	retlw	102
  5445  110B  3400               	retlw	0
  5446  110C  3465               	retlw	101
  5447  110D  3400               	retlw	0
  5448  110E  3461               	retlw	97
  5449  110F  3400               	retlw	0
  5450  1110  345B               	retlw	91
  5451  1111  3400               	retlw	0
  5452  1112  3453               	retlw	83
  5453  1113  3400               	retlw	0
  5454  1114  3448               	retlw	72
  5455  1115  3400               	retlw	0
  5456  1116  343C               	retlw	60
  5457  1117  3400               	retlw	0
  5458  1118  342E               	retlw	46
  5459  1119  3400               	retlw	0
  5460  111A  3420               	retlw	32
  5461  111B  3400               	retlw	0
  5462  111C  3410               	retlw	16
  5463  111D  3400               	retlw	0
  5464  111E  3400               	retlw	0
  5465  111F  3400               	retlw	0
  5466  1120  34F0               	retlw	240
  5467  1121  3400               	retlw	0
  5468  1122  34E0               	retlw	224
  5469  1123  3400               	retlw	0
  5470  1124  34D2               	retlw	210
  5471  1125  3400               	retlw	0
  5472  1126  34C4               	retlw	196
  5473  1127  3400               	retlw	0
  5474  1128  34B8               	retlw	184
  5475  1129  3400               	retlw	0
  5476  112A  34AD               	retlw	173
  5477  112B  3400               	retlw	0
  5478  112C  34A5               	retlw	165
  5479  112D  3400               	retlw	0
  5480  112E  349F               	retlw	159
  5481  112F  3400               	retlw	0
  5482  1130  349B               	retlw	155
  5483  1131  3400               	retlw	0
  5484  1132  349A               	retlw	154
  5485  1133  3400               	retlw	0
  5486  1134  349B               	retlw	155
  5487  1135  3400               	retlw	0
  5488  1136  349F               	retlw	159
  5489  1137  3400               	retlw	0
  5490  1138  34A5               	retlw	165
  5491  1139  3400               	retlw	0
  5492  113A  34AD               	retlw	173
  5493  113B  3400               	retlw	0
  5494  113C  34B8               	retlw	184
  5495  113D  3400               	retlw	0
  5496  113E  34C4               	retlw	196
  5497  113F  3400               	retlw	0
  5498  1140  34D2               	retlw	210
  5499  1141  3400               	retlw	0
  5500  1142  34E0               	retlw	224
  5501  1143  3400               	retlw	0
  5502  1144  34F0               	retlw	240
  5503  1145  3400               	retlw	0
  5504  1146  3400               	retlw	0
  5505  1147  3400               	retlw	0
  5506  1148  3410               	retlw	16
  5507  1149  3400               	retlw	0
  5508  114A  3420               	retlw	32
  5509  114B  3400               	retlw	0
  5510  114C  342E               	retlw	46
  5511  114D  3400               	retlw	0
  5512  114E  343C               	retlw	60
  5513  114F  3400               	retlw	0
  5514  1150  3448               	retlw	72
  5515  1151  3400               	retlw	0
  5516  1152  3453               	retlw	83
  5517  1153  3400               	retlw	0
  5518  1154  345B               	retlw	91
  5519  1155  3400               	retlw	0
  5520  1156  3461               	retlw	97
  5521  1157  3400               	retlw	0
  5522  1158  3465               	retlw	101
  5523  1159  3400               	retlw	0
  5524  115A  3466               	retlw	102
  5525  115B  3400               	retlw	0
  5526  115C  3465               	retlw	101
  5527  115D  3400               	retlw	0
  5528  115E  3461               	retlw	97
  5529  115F  3400               	retlw	0
  5530  1160  345B               	retlw	91
  5531  1161  3400               	retlw	0
  5532  1162  3453               	retlw	83
  5533  1163  3400               	retlw	0
  5534  1164  3448               	retlw	72
  5535  1165  3400               	retlw	0
  5536  1166  343C               	retlw	60
  5537  1167  3400               	retlw	0
  5538  1168  342E               	retlw	46
  5539  1169  3400               	retlw	0
  5540  116A  3420               	retlw	32
  5541  116B  3400               	retlw	0
  5542  116C  3410               	retlw	16
  5543  116D  3400               	retlw	0
  5544  116E  3400               	retlw	0
  5545  116F  3400               	retlw	0
  5546  1170  34F0               	retlw	240
  5547  1171  3400               	retlw	0
  5548  1172  34E0               	retlw	224
  5549  1173  3400               	retlw	0
  5550  1174  34D2               	retlw	210
  5551  1175  3400               	retlw	0
  5552  1176  34C4               	retlw	196
  5553  1177  3400               	retlw	0
  5554  1178  34B8               	retlw	184
  5555  1179  3400               	retlw	0
  5556  117A  34AD               	retlw	173
  5557  117B  3400               	retlw	0
  5558  117C  34A5               	retlw	165
  5559  117D  3400               	retlw	0
  5560  117E  349F               	retlw	159
  5561  117F  3400               	retlw	0
  5562  1180  349B               	retlw	155
  5563  1181  3400               	retlw	0
  5564  1182  349A               	retlw	154
  5565  1183  3400               	retlw	0
  5566  1184  349B               	retlw	155
  5567  1185  3400               	retlw	0
  5568  1186  349F               	retlw	159
  5569  1187  3400               	retlw	0
  5570  1188  34A5               	retlw	165
  5571  1189  3400               	retlw	0
  5572  118A  34AD               	retlw	173
  5573  118B  3400               	retlw	0
  5574  118C  34B8               	retlw	184
  5575  118D  3400               	retlw	0
  5576  118E  34C4               	retlw	196
  5577  118F  3400               	retlw	0
  5578  1190  34D2               	retlw	210
  5579  1191  3400               	retlw	0
  5580  1192  34E0               	retlw	224
  5581  1193  3400               	retlw	0
  5582  1194  34F0               	retlw	240
  5583  1195  3400               	retlw	0
  5584  1196  3400               	retlw	0
  5585  1197  3400               	retlw	0
  5586  1198  3410               	retlw	16
  5587  1199  3400               	retlw	0
  5588  119A  3420               	retlw	32
  5589  119B  3400               	retlw	0
  5590  119C  342E               	retlw	46
  5591  119D  3400               	retlw	0
  5592  119E  343C               	retlw	60
  5593  119F  3400               	retlw	0
  5594  11A0  3448               	retlw	72
  5595  11A1  3400               	retlw	0
  5596  11A2  3453               	retlw	83
  5597  11A3  3400               	retlw	0
  5598  11A4  345B               	retlw	91
  5599  11A5  3400               	retlw	0
  5600  11A6  3461               	retlw	97
  5601  11A7  3400               	retlw	0
  5602  11A8  3465               	retlw	101
  5603  11A9  3400               	retlw	0
  5604  11AA  3466               	retlw	102
  5605  11AB  3400               	retlw	0
  5606  11AC  3465               	retlw	101
  5607  11AD  3400               	retlw	0
  5608  11AE  3461               	retlw	97
  5609  11AF  3400               	retlw	0
  5610  11B0  345B               	retlw	91
  5611  11B1  3400               	retlw	0
  5612  11B2  3453               	retlw	83
  5613  11B3  3400               	retlw	0
  5614  11B4  3448               	retlw	72
  5615  11B5  3400               	retlw	0
  5616  11B6  343C               	retlw	60
  5617  11B7  3400               	retlw	0
  5618  11B8  342E               	retlw	46
  5619  11B9  3400               	retlw	0
  5620  11BA  3420               	retlw	32
  5621  11BB  3400               	retlw	0
  5622  11BC  3410               	retlw	16
  5623  11BD  3400               	retlw	0
  5624  11BE  3400               	retlw	0
  5625  11BF  3400               	retlw	0
  5626  11C0  34F0               	retlw	240
  5627  11C1  3400               	retlw	0
  5628  11C2  34E0               	retlw	224
  5629  11C3  3400               	retlw	0
  5630  11C4  34D2               	retlw	210
  5631  11C5  3400               	retlw	0
  5632  11C6  34C4               	retlw	196
  5633  11C7  3400               	retlw	0
  5634  11C8  34B8               	retlw	184
  5635  11C9  3400               	retlw	0
  5636  11CA  34AD               	retlw	173
  5637  11CB  3400               	retlw	0
  5638  11CC  34A5               	retlw	165
  5639  11CD  3400               	retlw	0
  5640  11CE  349F               	retlw	159
  5641  11CF  3400               	retlw	0
  5642  11D0  349B               	retlw	155
  5643  11D1  3400               	retlw	0
  5644  11D2  349A               	retlw	154
  5645  11D3  3400               	retlw	0
  5646  11D4  349B               	retlw	155
  5647  11D5  3400               	retlw	0
  5648  11D6  349F               	retlw	159
  5649  11D7  3400               	retlw	0
  5650  11D8  34A5               	retlw	165
  5651  11D9  3400               	retlw	0
  5652  11DA  34AD               	retlw	173
  5653  11DB  3400               	retlw	0
  5654  11DC  34B8               	retlw	184
  5655  11DD  3400               	retlw	0
  5656  11DE  34C4               	retlw	196
  5657  11DF  3400               	retlw	0
  5658  11E0  34D2               	retlw	210
  5659  11E1  3400               	retlw	0
  5660  11E2  34E0               	retlw	224
  5661  11E3  3400               	retlw	0
  5662  11E4  34F0               	retlw	240
  5663  11E5  3400               	retlw	0
  5664  11E6  3400               	retlw	0
  5665  11E7  3400               	retlw	0
  5666  11E8                     __end_ofdrv2665@drv_fifo_sine:	
  5667                           
  5668                           	psect	stringtext10
  5669  2930                     __pstringtext10:	
  5670  2930                     sin@coeff_a:	
  5671  2930  34F4               	retlw	244
  5672  2931  344A               	retlw	74
  5673  2932  3448               	retlw	72
  5674  2933  3495               	retlw	149
  5675  2934  3495               	retlw	149
  5676  2935  34C7               	retlw	199
  5677  2936  34C1               	retlw	193
  5678  2937  34DC               	retlw	220
  5679  2938  3445               	retlw	69
  5680  2939  34DC               	retlw	220
  5681  293A  346D               	retlw	109
  5682  293B  34C3               	retlw	195
  5683  293C  34B3               	retlw	179
  5684  293D  3433               	retlw	51
  5685  293E  3440               	retlw	64
  5686  293F                     __end_ofsin@coeff_a:	
  5687                           
  5688                           	psect	stringtext11
  5689  2978                     __pstringtext11:	
  5690  2978                     sin@coeff_b:	
  5691  2978  3434               	retlw	52
  5692  2979  3401               	retlw	1
  5693  297A  3448               	retlw	72
  5694  297B  349D               	retlw	157
  5695  297C  34B0               	retlw	176
  5696  297D  3445               	retlw	69
  5697  297E  3400               	retlw	0
  5698  297F  34DA               	retlw	218
  5699  2980  3442               	retlw	66
  5700  2981  3400               	retlw	0
  5701  2982  3480               	retlw	128
  5702  2983  343F               	retlw	63
  5703  2984                     __end_ofsin@coeff_b:	
  5704                           
  5705                           	psect	nvBANK0
  5706  005E                     __pnvBANK0:	
  5707  005E                     _eusartTxBufferRemaining:	
  5708  005E                     	ds	1
  5709                           
  5710                           	psect	nvBANK3
  5711  01E1                     __pnvBANK3:	
  5712  01E1                     _TMR2_InterruptHandler:	
  5713  01E1                     	ds	2
  5714  01E3                     _TMR0_InterruptHandler:	
  5715  01E3                     	ds	2
  5716  001F                     _T2CONbits	set	31
  5717  001F                     _T2CON	set	31
  5718  001D                     _TMR2	set	29
  5719  001E                     _PR2	set	30
  5720  0017                     _T0CON0bits	set	23
  5721  0017                     _T0CON0	set	23
  5722  0015                     _TMR0L	set	21
  5723  0016                     _TMR0H	set	22
  5724  0018                     _T0CON1	set	24
  5725  0011                     _PIR1bits	set	17
  5726  0010                     _PIR0bits	set	16
  5727  000E                     _PORTCbits	set	14
  5728  000B                     _INTCONbits	set	11
  5729  0091                     _PIE1bits	set	145
  5730  0090                     _PIE0bits	set	144
  5731  008E                     _TRISC	set	142
  5732  008D                     _TRISB	set	141
  5733  008C                     _TRISA	set	140
  5734  0097                     _WDTCON	set	151
  5735  010C                     _LATAbits	set	268
  5736  010E                     _LATCbits	set	270
  5737  010D                     _LATBbits	set	269
  5738  010E                     _LATC	set	270
  5739  010D                     _LATB	set	269
  5740  010C                     _LATA	set	268
  5741  0199                     _RC1REG	set	409
  5742  019D                     _RC1STAbits	set	413
  5743  019A                     _TX1REG	set	410
  5744  019C                     _SP1BRGH	set	412
  5745  019B                     _SP1BRGL	set	411
  5746  019E                     _TX1STA	set	414
  5747  019D                     _RC1STA	set	413
  5748  019F                     _BAUD1CON	set	415
  5749  018C                     _ANSELA	set	396
  5750  018D                     _ANSELB	set	397
  5751  018E                     _ANSELC	set	398
  5752  0214                     _SSP1STATbits	set	532
  5753  0213                     _SSP1MSK	set	531
  5754  0211                     _SSP1BUF	set	529
  5755  0216                     _SSP1CON2bits	set	534
  5756  0212                     _SSP1ADD	set	530
  5757  0216                     _SSP1CON2	set	534
  5758  0215                     _SSP1CON1	set	533
  5759  0214                     _SSP1STAT	set	532
  5760  0215                     _SSP1CON1bits	set	533
  5761  020E                     _WPUC	set	526
  5762  020C                     _WPUA	set	524
  5763  020D                     _WPUB	set	525
  5764  028E                     _ODCONC	set	654
  5765  028D                     _ODCONB	set	653
  5766  028C                     _ODCONA	set	652
  5767  0896                     _NVMCON2	set	2198
  5768  0893                     _NVMDATL	set	2195
  5769  0894                     _NVMDATH	set	2196
  5770  0895                     _NVMCON1bits	set	2197
  5771  0892                     _NVMADRH	set	2194
  5772  0891                     _NVMADRL	set	2193
  5773  0916                     _PMD5	set	2326
  5774  0915                     _PMD4	set	2325
  5775  0914                     _PMD3	set	2324
  5776  0913                     _PMD2	set	2323
  5777  0912                     _PMD1	set	2322
  5778  0911                     _PMD0	set	2321
  5779  091E                     _OSCTUNE	set	2334
  5780  091F                     _OSCFRQ	set	2335
  5781  091D                     _OSCEN	set	2333
  5782  091B                     _OSCCON3	set	2331
  5783  0919                     _OSCCON1	set	2329
  5784  0E24                     _RXPPSbits	set	3620
  5785  0E20                     _SSP1CLKPPSbits	set	3616
  5786  0E21                     _SSP1DATPPSbits	set	3617
  5787  0E9D                     _RB5PPSbits	set	3741
  5788  0E9E                     _RB6PPSbits	set	3742
  5789  0E9F                     _RB7PPSbits	set	3743
  5790                           
  5791                           	psect	stringtext12
  5792  2828                     __pstringtext12:	
  5793  2828                     STR_40:	
  5794  2828  340A               	retlw	10
  5795  2829  3474               	retlw	116	;'t'
  5796  282A  3465               	retlw	101	;'e'
  5797  282B  3473               	retlw	115	;'s'
  5798  282C  3474               	retlw	116	;'t'
  5799  282D  3469               	retlw	105	;'i'
  5800  282E  346E               	retlw	110	;'n'
  5801  282F  3467               	retlw	103	;'g'
  5802  2830  3420               	retlw	32	;' '
  5803  2831  3462               	retlw	98	;'b'
  5804  2832  346F               	retlw	111	;'o'
  5805  2833  3474               	retlw	116	;'t'
  5806  2834  3474               	retlw	116	;'t'
  5807  2835  346F               	retlw	111	;'o'
  5808  2836  346D               	retlw	109	;'m'
  5809  2837  3420               	retlw	32	;' '
  5810  2838  344C               	retlw	76	;'L'
  5811  2839  3445               	retlw	69	;'E'
  5812  283A  3444               	retlw	68	;'D'
  5813  283B  3420               	retlw	32	;' '
  5814  283C  3464               	retlw	100	;'d'
  5815  283D  3472               	retlw	114	;'r'
  5816  283E  3469               	retlw	105	;'i'
  5817  283F  3476               	retlw	118	;'v'
  5818  2840  3465               	retlw	101	;'e'
  5819  2841  3472               	retlw	114	;'r'
  5820  2842  342E               	retlw	46	;'.'
  5821  2843  342E               	retlw	46	;'.'
  5822  2844  342E               	retlw	46	;'.'
  5823  2845  340A               	retlw	10
  5824  2846  3400               	retlw	0
  5825                           
  5826                           	psect	stringtext13
  5827  2847                     __pstringtext13:	
  5828  2847                     STR_34:	
  5829  2847  340A               	retlw	10
  5830  2848  342D               	retlw	45	;'-'
  5831  2849  342D               	retlw	45	;'-'
  5832  284A  342D               	retlw	45	;'-'
  5833  284B  342D               	retlw	45	;'-'
  5834  284C  3473               	retlw	115	;'s'
  5835  284D  3474               	retlw	116	;'t'
  5836  284E  3461               	retlw	97	;'a'
  5837  284F  3472               	retlw	114	;'r'
  5838  2850  3474               	retlw	116	;'t'
  5839  2851  3469               	retlw	105	;'i'
  5840  2852  346E               	retlw	110	;'n'
  5841  2853  3467               	retlw	103	;'g'
  5842  2854  3420               	retlw	32	;' '
  5843  2855  3463               	retlw	99	;'c'
  5844  2856  346F               	retlw	111	;'o'
  5845  2857  346D               	retlw	109	;'m'
  5846  2858  346D               	retlw	109	;'m'
  5847  2859  3420               	retlw	32	;' '
  5848  285A  3474               	retlw	116	;'t'
  5849  285B  3465               	retlw	101	;'e'
  5850  285C  3473               	retlw	115	;'s'
  5851  285D  3474               	retlw	116	;'t'
  5852  285E  342D               	retlw	45	;'-'
  5853  285F  342D               	retlw	45	;'-'
  5854  2860  342D               	retlw	45	;'-'
  5855  2861  342D               	retlw	45	;'-'
  5856  2862  340A               	retlw	10
  5857  2863  340A               	retlw	10
  5858  2864  3400               	retlw	0
  5859                           
  5860                           	psect	stringtext14
  5861  2865                     __pstringtext14:	
  5862  2865                     STR_48:	
  5863  2865  342D               	retlw	45	;'-'
  5864  2866  342D               	retlw	45	;'-'
  5865  2867  342D               	retlw	45	;'-'
  5866  2868  342D               	retlw	45	;'-'
  5867  2869  3466               	retlw	102	;'f'
  5868  286A  3469               	retlw	105	;'i'
  5869  286B  346E               	retlw	110	;'n'
  5870  286C  3469               	retlw	105	;'i'
  5871  286D  3473               	retlw	115	;'s'
  5872  286E  3468               	retlw	104	;'h'
  5873  286F  3465               	retlw	101	;'e'
  5874  2870  3464               	retlw	100	;'d'
  5875  2871  3420               	retlw	32	;' '
  5876  2872  3463               	retlw	99	;'c'
  5877  2873  346F               	retlw	111	;'o'
  5878  2874  346D               	retlw	109	;'m'
  5879  2875  346D               	retlw	109	;'m'
  5880  2876  3420               	retlw	32	;' '
  5881  2877  3474               	retlw	116	;'t'
  5882  2878  3465               	retlw	101	;'e'
  5883  2879  3473               	retlw	115	;'s'
  5884  287A  3474               	retlw	116	;'t'
  5885  287B  342D               	retlw	45	;'-'
  5886  287C  342D               	retlw	45	;'-'
  5887  287D  342D               	retlw	45	;'-'
  5888  287E  342D               	retlw	45	;'-'
  5889  287F  340A               	retlw	10
  5890  2880  3400               	retlw	0
  5891                           
  5892                           	psect	stringtext15
  5893  2881                     __pstringtext15:	
  5894  2881                     STR_35:	
  5895  2881  3474               	retlw	116	;'t'
  5896  2882  3465               	retlw	101	;'e'
  5897  2883  3473               	retlw	115	;'s'
  5898  2884  3474               	retlw	116	;'t'
  5899  2885  3469               	retlw	105	;'i'
  5900  2886  346E               	retlw	110	;'n'
  5901  2887  3467               	retlw	103	;'g'
  5902  2888  3420               	retlw	32	;' '
  5903  2889  3474               	retlw	116	;'t'
  5904  288A  346F               	retlw	111	;'o'
  5905  288B  3470               	retlw	112	;'p'
  5906  288C  3420               	retlw	32	;' '
  5907  288D  344C               	retlw	76	;'L'
  5908  288E  3445               	retlw	69	;'E'
  5909  288F  3444               	retlw	68	;'D'
  5910  2890  3420               	retlw	32	;' '
  5911  2891  3464               	retlw	100	;'d'
  5912  2892  3472               	retlw	114	;'r'
  5913  2893  3469               	retlw	105	;'i'
  5914  2894  3476               	retlw	118	;'v'
  5915  2895  3465               	retlw	101	;'e'
  5916  2896  3472               	retlw	114	;'r'
  5917  2897  342E               	retlw	46	;'.'
  5918  2898  342E               	retlw	46	;'.'
  5919  2899  342E               	retlw	46	;'.'
  5920  289A  3400               	retlw	0
  5921                           
  5922                           	psect	stringtext16
  5923  289B                     __pstringtext16:	
  5924  289B                     STR_45:	
  5925  289B  340A               	retlw	10
  5926  289C  3474               	retlw	116	;'t'
  5927  289D  3465               	retlw	101	;'e'
  5928  289E  3473               	retlw	115	;'s'
  5929  289F  3474               	retlw	116	;'t'
  5930  28A0  3469               	retlw	105	;'i'
  5931  28A1  346E               	retlw	110	;'n'
  5932  28A2  3467               	retlw	103	;'g'
  5933  28A3  3420               	retlw	32	;' '
  5934  28A4  3470               	retlw	112	;'p'
  5935  28A5  3469               	retlw	105	;'i'
  5936  28A6  3465               	retlw	101	;'e'
  5937  28A7  347A               	retlw	122	;'z'
  5938  28A8  346F               	retlw	111	;'o'
  5939  28A9  3420               	retlw	32	;' '
  5940  28AA  3464               	retlw	100	;'d'
  5941  28AB  3472               	retlw	114	;'r'
  5942  28AC  3469               	retlw	105	;'i'
  5943  28AD  3476               	retlw	118	;'v'
  5944  28AE  3465               	retlw	101	;'e'
  5945  28AF  3472               	retlw	114	;'r'
  5946  28B0  342E               	retlw	46	;'.'
  5947  28B1  342E               	retlw	46	;'.'
  5948  28B2  342E               	retlw	46	;'.'
  5949  28B3  3400               	retlw	0
  5950                           
  5951                           	psect	stringtext17
  5952  28B4                     __pstringtext17:	
  5953  28B4                     STR_79:	
  5954  28B4  3455               	retlw	85	;'U'
  5955  28B5  344E               	retlw	78	;'N'
  5956  28B6  3452               	retlw	82	;'R'
  5957  28B7  3445               	retlw	69	;'E'
  5958  28B8  3443               	retlw	67	;'C'
  5959  28B9  344F               	retlw	79	;'O'
  5960  28BA  3447               	retlw	71	;'G'
  5961  28BB  344E               	retlw	78	;'N'
  5962  28BC  3449               	retlw	73	;'I'
  5963  28BD  345A               	retlw	90	;'Z'
  5964  28BE  3445               	retlw	69	;'E'
  5965  28BF  3444               	retlw	68	;'D'
  5966  28C0  3420               	retlw	32	;' '
  5967  28C1  3443               	retlw	67	;'C'
  5968  28C2  344F               	retlw	79	;'O'
  5969  28C3  344D               	retlw	77	;'M'
  5970  28C4  344D               	retlw	77	;'M'
  5971  28C5  3441               	retlw	65	;'A'
  5972  28C6  344E               	retlw	78	;'N'
  5973  28C7  3444               	retlw	68	;'D'
  5974  28C8  3421               	retlw	33	;'!'
  5975  28C9  340A               	retlw	10
  5976  28CA  3400               	retlw	0
  5977                           
  5978                           	psect	stringtext18
  5979  28CB                     __pstringtext18:	
  5980  28CB                     STR_50:	
  5981  28CB  3464               	retlw	100	;'d'
  5982  28CC  3472               	retlw	114	;'r'
  5983  28CD  3476               	retlw	118	;'v'
  5984  28CE  345F               	retlw	95	;'_'
  5985  28CF  3477               	retlw	119	;'w'
  5986  28D0  3472               	retlw	114	;'r'
  5987  28D1  3469               	retlw	105	;'i'
  5988  28D2  3474               	retlw	116	;'t'
  5989  28D3  3465               	retlw	101	;'e'
  5990  28D4  3420               	retlw	32	;' '
  5991  28D5  3465               	retlw	101	;'e'
  5992  28D6  3472               	retlw	114	;'r'
  5993  28D7  3472               	retlw	114	;'r'
  5994  28D8  346F               	retlw	111	;'o'
  5995  28D9  3472               	retlw	114	;'r'
  5996  28DA  3421               	retlw	33	;'!'
  5997  28DB  340A               	retlw	10
  5998  28DC  3400               	retlw	0
  5999                           
  6000                           	psect	stringtext19
  6001  28DD                     __pstringtext19:	
  6002  28DD                     STR_52:	
  6003  28DD  3464               	retlw	100	;'d'
  6004  28DE  3472               	retlw	114	;'r'
  6005  28DF  3476               	retlw	118	;'v'
  6006  28E0  345F               	retlw	95	;'_'
  6007  28E1  3472               	retlw	114	;'r'
  6008  28E2  3465               	retlw	101	;'e'
  6009  28E3  3461               	retlw	97	;'a'
  6010  28E4  3464               	retlw	100	;'d'
  6011  28E5  3420               	retlw	32	;' '
  6012  28E6  3465               	retlw	101	;'e'
  6013  28E7  3472               	retlw	114	;'r'
  6014  28E8  3472               	retlw	114	;'r'
  6015  28E9  346F               	retlw	111	;'o'
  6016  28EA  3472               	retlw	114	;'r'
  6017  28EB  3421               	retlw	33	;'!'
  6018  28EC  340A               	retlw	10
  6019  28ED  3400               	retlw	0
  6020                           
  6021                           	psect	stringtext20
  6022  28EE                     __pstringtext20:	
  6023  28EE                     STR_53:	
  6024  28EE  3466               	retlw	102	;'f'
  6025  28EF  3469               	retlw	105	;'i'
  6026  28F0  3466               	retlw	102	;'f'
  6027  28F1  346F               	retlw	111	;'o'
  6028  28F2  3420               	retlw	32	;' '
  6029  28F3  346E               	retlw	110	;'n'
  6030  28F4  346F               	retlw	111	;'o'
  6031  28F5  3474               	retlw	116	;'t'
  6032  28F6  3420               	retlw	32	;' '
  6033  28F7  3472               	retlw	114	;'r'
  6034  28F8  3465               	retlw	101	;'e'
  6035  28F9  3461               	retlw	97	;'a'
  6036  28FA  3464               	retlw	100	;'d'
  6037  28FB  3479               	retlw	121	;'y'
  6038  28FC  3421               	retlw	33	;'!'
  6039  28FD  340A               	retlw	10
  6040  28FE  3400               	retlw	0
  6041                           
  6042                           	psect	stringtext21
  6043  28FF                     __pstringtext21:	
  6044  28FF                     STR_49:	
  6045  28FF  3464               	retlw	100	;'d'
  6046  2900  3472               	retlw	114	;'r'
  6047  2901  3476               	retlw	118	;'v'
  6048  2902  3420               	retlw	32	;' '
  6049  2903  3469               	retlw	105	;'i'
  6050  2904  346E               	retlw	110	;'n'
  6051  2905  3469               	retlw	105	;'i'
  6052  2906  3474               	retlw	116	;'t'
  6053  2907  3469               	retlw	105	;'i'
  6054  2908  3461               	retlw	97	;'a'
  6055  2909  346C               	retlw	108	;'l'
  6056  290A  3469               	retlw	105	;'i'
  6057  290B  347A               	retlw	122	;'z'
  6058  290C  3465               	retlw	101	;'e'
  6059  290D  3464               	retlw	100	;'d'
  6060  290E  340A               	retlw	10
  6061  290F  3400               	retlw	0
  6062                           
  6063                           	psect	stringtext22
  6064  2910                     __pstringtext22:	
  6065  2910                     STR_10:	
  6066  2910  3461               	retlw	97	;'a'
  6067  2911  3462               	retlw	98	;'b'
  6068  2912  3473               	retlw	115	;'s'
  6069  2913  343A               	retlw	58	;':'
  6070  2914  3420               	retlw	32	;' '
  6071  2915  3461               	retlw	97	;'a'
  6072  2916  346C               	retlw	108	;'l'
  6073  2917  346C               	retlw	108	;'l'
  6074  2918  3420               	retlw	32	;' '
  6075  2919  3474               	retlw	116	;'t'
  6076  291A  3468               	retlw	104	;'h'
  6077  291B  3465               	retlw	101	;'e'
  6078  291C  3472               	retlw	114	;'r'
  6079  291D  3465               	retlw	101	;'e'
  6080  291E  340A               	retlw	10
  6081  291F  3400               	retlw	0
  6082                           
  6083                           	psect	stringtext23
  6084  2920                     __pstringtext23:	
  6085  2920                     STR_4:	
  6086  2920  3472               	retlw	114	;'r'
  6087  2921  3465               	retlw	101	;'e'
  6088  2922  3461               	retlw	97	;'a'
  6089  2923  3464               	retlw	100	;'d'
  6090  2924  3420               	retlw	32	;' '
  6091  2925  3464               	retlw	100	;'d'
  6092  2926  3461               	retlw	97	;'a'
  6093  2927  3474               	retlw	116	;'t'
  6094  2928  3461               	retlw	97	;'a'
  6095  2929  343A               	retlw	58	;':'
  6096  292A  3420               	retlw	32	;' '
  6097  292B  3425               	retlw	37	;'%'
  6098  292C  346C               	retlw	108	;'l'
  6099  292D  3475               	retlw	117	;'u'
  6100  292E  340A               	retlw	10
  6101  292F  3400               	retlw	0
  6102                           
  6103                           	psect	stringtext24
  6104  293F                     __pstringtext24:	
  6105  293F                     STR_67:	
  6106  293F  3468               	retlw	104	;'h'
  6107  2940  3465               	retlw	101	;'e'
  6108  2941  3461               	retlw	97	;'a'
  6109  2942  3474               	retlw	116	;'t'
  6110  2943  3465               	retlw	101	;'e'
  6111  2944  3472               	retlw	114	;'r'
  6112  2945  3470               	retlw	112	;'p'
  6113  2946  346F               	retlw	111	;'o'
  6114  2947  3473               	retlw	115	;'s'
  6115  2948  3474               	retlw	116	;'t'
  6116  2949  3474               	retlw	116	;'t'
  6117  294A  3469               	retlw	105	;'i'
  6118  294B  346D               	retlw	109	;'m'
  6119  294C  3465               	retlw	101	;'e'
  6120  294D  3400               	retlw	0
  6121                           
  6122                           	psect	stringtext25
  6123  294E                     __pstringtext25:	
  6124  294E                     STR_5:	
  6125  294E  340A               	retlw	10
  6126  294F  340A               	retlw	10
  6127  2950  3473               	retlw	115	;'s'
  6128  2951  3479               	retlw	121	;'y'
  6129  2952  3473               	retlw	115	;'s'
  6130  2953  3474               	retlw	116	;'t'
  6131  2954  3465               	retlw	101	;'e'
  6132  2955  346D               	retlw	109	;'m'
  6133  2956  3420               	retlw	32	;' '
  6134  2957  3464               	retlw	100	;'d'
  6135  2958  346F               	retlw	111	;'o'
  6136  2959  346E               	retlw	110	;'n'
  6137  295A  3465               	retlw	101	;'e'
  6138  295B  340A               	retlw	10
  6139  295C  3400               	retlw	0
  6140                           
  6141                           	psect	stringtext26
  6142  295D                     __pstringtext26:	
  6143  295D                     STR_66:	
  6144  295D  3468               	retlw	104	;'h'
  6145  295E  3465               	retlw	101	;'e'
  6146  295F  3461               	retlw	97	;'a'
  6147  2960  3474               	retlw	116	;'t'
  6148  2961  3465               	retlw	101	;'e'
  6149  2962  3472               	retlw	114	;'r'
  6150  2963  3470               	retlw	112	;'p'
  6151  2964  3472               	retlw	114	;'r'
  6152  2965  3465               	retlw	101	;'e'
  6153  2966  3474               	retlw	116	;'t'
  6154  2967  3469               	retlw	105	;'i'
  6155  2968  346D               	retlw	109	;'m'
  6156  2969  3465               	retlw	101	;'e'
  6157  296A  3400               	retlw	0
  6158                           
  6159                           	psect	stringtext27
  6160  296B                     __pstringtext27:	
  6161  296B                     STR_70:	
  6162  296B  3474               	retlw	116	;'t'
  6163  296C  346F               	retlw	111	;'o'
  6164  296D  3467               	retlw	103	;'g'
  6165  296E  3467               	retlw	103	;'g'
  6166  296F  346C               	retlw	108	;'l'
  6167  2970  3465               	retlw	101	;'e'
  6168  2971  3468               	retlw	104	;'h'
  6169  2972  3465               	retlw	101	;'e'
  6170  2973  3461               	retlw	97	;'a'
  6171  2974  3474               	retlw	116	;'t'
  6172  2975  3465               	retlw	101	;'e'
  6173  2976  3472               	retlw	114	;'r'
  6174  2977  3400               	retlw	0
  6175                           
  6176                           	psect	stringtext28
  6177  2984                     __pstringtext28:	
  6178  2984                     STR_65:	
  6179  2984  3470               	retlw	112	;'p'
  6180  2985  3469               	retlw	105	;'i'
  6181  2986  3465               	retlw	101	;'e'
  6182  2987  347A               	retlw	122	;'z'
  6183  2988  346F               	retlw	111	;'o'
  6184  2989  346F               	retlw	111	;'o'
  6185  298A  346E               	retlw	110	;'n'
  6186  298B  3474               	retlw	116	;'t'
  6187  298C  3469               	retlw	105	;'i'
  6188  298D  346D               	retlw	109	;'m'
  6189  298E  3465               	retlw	101	;'e'
  6190  298F  3400               	retlw	0
  6191                           
  6192                           	psect	stringtext29
  6193  2990                     __pstringtext29:	
  6194  2990                     STR_71:	
  6195  2990  3474               	retlw	116	;'t'
  6196  2991  3469               	retlw	105	;'i'
  6197  2992  346D               	retlw	109	;'m'
  6198  2993  3465               	retlw	101	;'e'
  6199  2994  3468               	retlw	104	;'h'
  6200  2995  3465               	retlw	101	;'e'
  6201  2996  3461               	retlw	97	;'a'
  6202  2997  3474               	retlw	116	;'t'
  6203  2998  3465               	retlw	101	;'e'
  6204  2999  3472               	retlw	114	;'r'
  6205  299A  3400               	retlw	0
  6206                           
  6207                           	psect	stringtext30
  6208  299B                     __pstringtext30:	
  6209  299B                     STR_39:	
  6210  299B  340A               	retlw	10
  6211  299C  340A               	retlw	10
  6212  299D  3473               	retlw	115	;'s'
  6213  299E  3468               	retlw	104	;'h'
  6214  299F  346F               	retlw	111	;'o'
  6215  29A0  3472               	retlw	114	;'r'
  6216  29A1  3474               	retlw	116	;'t'
  6217  29A2  3473               	retlw	115	;'s'
  6218  29A3  343A               	retlw	58	;':'
  6219  29A4  3420               	retlw	32	;' '
  6220  29A5  3400               	retlw	0
  6221                           
  6222                           	psect	stringtext31
  6223  29A6                     __pstringtext31:	
  6224  29A6                     STR_47:	
  6225  29A6  3446               	retlw	70	;'F'
  6226  29A7  3441               	retlw	65	;'A'
  6227  29A8  3449               	retlw	73	;'I'
  6228  29A9  344C               	retlw	76	;'L'
  6229  29AA  3445               	retlw	69	;'E'
  6230  29AB  3444               	retlw	68	;'D'
  6231  29AC  340A               	retlw	10
  6232  29AD  340A               	retlw	10
  6233  29AE  3400               	retlw	0
  6234                           
  6235                           	psect	stringtext32
  6236  29AF                     __pstringtext32:	
  6237  29AF                     STR_46:	
  6238  29AF  3470               	retlw	112	;'p'
  6239  29B0  3461               	retlw	97	;'a'
  6240  29B1  3473               	retlw	115	;'s'
  6241  29B2  3473               	retlw	115	;'s'
  6242  29B3  3465               	retlw	101	;'e'
  6243  29B4  3464               	retlw	100	;'d'
  6244  29B5  340A               	retlw	10
  6245  29B6  340A               	retlw	10
  6246  29B7  3400               	retlw	0
  6247                           
  6248                           	psect	stringtext33
  6249  29B8                     __pstringtext33:	
  6250  29B8                     STR_63:	
  6251  29B8  3464               	retlw	100	;'d'
  6252  29B9  3472               	retlw	114	;'r'
  6253  29BA  3476               	retlw	118	;'v'
  6254  29BB  3450               	retlw	80	;'P'
  6255  29BC  3465               	retlw	101	;'e'
  6256  29BD  3461               	retlw	97	;'a'
  6257  29BE  346B               	retlw	107	;'k'
  6258  29BF  3400               	retlw	0
  6259                           
  6260                           	psect	stringtext34
  6261  29C0                     __pstringtext34:	
  6262  29C0                     STR_64:	
  6263  29C0  3464               	retlw	100	;'d'
  6264  29C1  3472               	retlw	114	;'r'
  6265  29C2  3476               	retlw	118	;'v'
  6266  29C3  3447               	retlw	71	;'G'
  6267  29C4  3461               	retlw	97	;'a'
  6268  29C5  3469               	retlw	105	;'i'
  6269  29C6  346E               	retlw	110	;'n'
  6270  29C7  3400               	retlw	0
  6271                           
  6272                           	psect	stringtext35
  6273  29C8                     __pstringtext35:	
  6274  29C8                     STR_68:	
  6275  29C8  346C               	retlw	108	;'l'
  6276  29C9  3465               	retlw	101	;'e'
  6277  29CA  3464               	retlw	100	;'d'
  6278  29CB  3467               	retlw	103	;'g'
  6279  29CC  3461               	retlw	97	;'a'
  6280  29CD  3469               	retlw	105	;'i'
  6281  29CE  346E               	retlw	110	;'n'
  6282  29CF  3400               	retlw	0
  6283                           
  6284                           	psect	stringtext36
  6285  29D0                     __pstringtext36:	
  6286  29D0                     STR_74:	
  6287  29D0  346D               	retlw	109	;'m'
  6288  29D1  3473               	retlw	115	;'s'
  6289  29D2  3474               	retlw	116	;'t'
  6290  29D3  3461               	retlw	97	;'a'
  6291  29D4  3474               	retlw	116	;'t'
  6292  29D5  3475               	retlw	117	;'u'
  6293  29D6  3473               	retlw	115	;'s'
  6294  29D7  3400               	retlw	0
  6295                           
  6296                           	psect	stringtext37
  6297  29D8                     __pstringtext37:	
  6298  29D8                     STR_37:	
  6299  29D8  3446               	retlw	70	;'F'
  6300  29D9  3441               	retlw	65	;'A'
  6301  29DA  3449               	retlw	73	;'I'
  6302  29DB  344C               	retlw	76	;'L'
  6303  29DC  3445               	retlw	69	;'E'
  6304  29DD  3444               	retlw	68	;'D'
  6305  29DE  340A               	retlw	10
  6306  29DF  3400               	retlw	0
  6307                           
  6308                           	psect	stringtext38
  6309  29E0                     __pstringtext38:	
  6310  29E0                     STR_36:	
  6311  29E0  3470               	retlw	112	;'p'
  6312  29E1  3461               	retlw	97	;'a'
  6313  29E2  3473               	retlw	115	;'s'
  6314  29E3  3473               	retlw	115	;'s'
  6315  29E4  3465               	retlw	101	;'e'
  6316  29E5  3464               	retlw	100	;'d'
  6317  29E6  340A               	retlw	10
  6318  29E7  3400               	retlw	0
  6319                           
  6320                           	psect	stringtext39
  6321  29E8                     __pstringtext39:	
  6322  29E8                     STR_38:	
  6323  29E8  346F               	retlw	111	;'o'
  6324  29E9  3470               	retlw	112	;'p'
  6325  29EA  3465               	retlw	101	;'e'
  6326  29EB  346E               	retlw	110	;'n'
  6327  29EC  3473               	retlw	115	;'s'
  6328  29ED  343A               	retlw	58	;':'
  6329  29EE  3420               	retlw	32	;' '
  6330  29EF  3400               	retlw	0
  6331                           
  6332                           	psect	stringtext40
  6333  29F0                     __pstringtext40:	
  6334  29F0                     STR_75:	
  6335  29F0  3464               	retlw	100	;'d'
  6336  29F1  346F               	retlw	111	;'o'
  6337  29F2  346D               	retlw	109	;'m'
  6338  29F3  346F               	retlw	111	;'o'
  6339  29F4  3476               	retlw	118	;'v'
  6340  29F5  3465               	retlw	101	;'e'
  6341  29F6  3400               	retlw	0
  6342                           
  6343                           	psect	stringtext41
  6344  29F7                     __pstringtext41:	
  6345  29F7                     STR_69:	
  6346  29F7  346C               	retlw	108	;'l'
  6347  29F8  3465               	retlw	101	;'e'
  6348  29F9  3464               	retlw	100	;'d'
  6349  29FA  3470               	retlw	112	;'p'
  6350  29FB  3477               	retlw	119	;'w'
  6351  29FC  3472               	retlw	114	;'r'
  6352  29FD  3400               	retlw	0
  6353                           
  6354                           	psect	stringtext42
  6355  29FE                     __pstringtext42:	
  6356  29FE                     STR_72:	
  6357  29FE  3467               	retlw	103	;'g'
  6358  29FF  3465               	retlw	101	;'e'
  6359  2A00  3474               	retlw	116	;'t'
  6360  2A01  3441               	retlw	65	;'A'
  6361  2A02  3400               	retlw	0
  6362                           
  6363                           	psect	stringtext43
  6364  2A03                     __pstringtext43:	
  6365  2A03                     STR_60:	
  6366  2A03  3473               	retlw	115	;'s'
  6367  2A04  3465               	retlw	101	;'e'
  6368  2A05  3474               	retlw	116	;'t'
  6369  2A06  3441               	retlw	65	;'A'
  6370  2A07  3400               	retlw	0
  6371                           
  6372                           	psect	stringtext44
  6373  2A08                     __pstringtext44:	
  6374  2A08                     STR_73:	
  6375  2A08  3467               	retlw	103	;'g'
  6376  2A09  3465               	retlw	101	;'e'
  6377  2A0A  3474               	retlw	116	;'t'
  6378  2A0B  344D               	retlw	77	;'M'
  6379  2A0C  3400               	retlw	0
  6380                           
  6381                           	psect	stringtext45
  6382  2A0D                     __pstringtext45:	
  6383  2A0D                     STR_61:	
  6384  2A0D  3473               	retlw	115	;'s'
  6385  2A0E  3465               	retlw	101	;'e'
  6386  2A0F  3474               	retlw	116	;'t'
  6387  2A10  344D               	retlw	77	;'M'
  6388  2A11  3400               	retlw	0
  6389                           
  6390                           	psect	stringtext46
  6391  2A12                     __pstringtext46:	
  6392  2A12                     STR_77:	
  6393  2A12  3470               	retlw	112	;'p'
  6394  2A13  3469               	retlw	105	;'i'
  6395  2A14  346E               	retlw	110	;'n'
  6396  2A15  3467               	retlw	103	;'g'
  6397  2A16  3400               	retlw	0
  6398                           
  6399                           	psect	stringtext47
  6400  2A17                     __pstringtext47:	
  6401  2A17                     STR_76:	
  6402  2A17  3463               	retlw	99	;'c'
  6403  2A18  346F               	retlw	111	;'o'
  6404  2A19  346D               	retlw	109	;'m'
  6405  2A1A  346D               	retlw	109	;'m'
  6406  2A1B  3400               	retlw	0
  6407                           
  6408                           	psect	stringtext48
  6409  2A1C                     __pstringtext48:	
  6410  2A1C                     STR_56:	
  6411  2A1C  3472               	retlw	114	;'r'
  6412  2A1D  3465               	retlw	101	;'e'
  6413  2A1E  346C               	retlw	108	;'l'
  6414  2A1F  3400               	retlw	0
  6415                           
  6416                           	psect	stringtext49
  6417  2A20                     __pstringtext49:	
  6418  2A20                     STR_57:	
  6419  2A20  3461               	retlw	97	;'a'
  6420  2A21  3462               	retlw	98	;'b'
  6421  2A22  3473               	retlw	115	;'s'
  6422  2A23  3400               	retlw	0
  6423                           
  6424                           	psect	stringtext50
  6425  2A24                     __pstringtext50:	
  6426  2A24                     STR_58:	
  6427  2A24  3470               	retlw	112	;'p'
  6428  2A25  346F               	retlw	111	;'o'
  6429  2A26  3473               	retlw	115	;'s'
  6430  2A27  3400               	retlw	0
  6431                           
  6432                           	psect	stringtext51
  6433  2A28                     __pstringtext51:	
  6434  2A28                     STR_12:	
  6435  2A28  3425               	retlw	37	;'%'
  6436  2A29  3464               	retlw	100	;'d'
  6437  2A2A  340A               	retlw	10
  6438  2A2B  3400               	retlw	0
  6439                           
  6440                           	psect	stringtext52
  6441  2A2C                     __pstringtext52:	
  6442  2A2C                     STR_1:	
  6443  2A2C  3425               	retlw	37	;'%'
  6444  2A2D  3464               	retlw	100	;'d'
  6445  2A2E  3420               	retlw	32	;' '
  6446  2A2F  3400               	retlw	0
  6447                           
  6448                           	psect	stringtext53
  6449  2A36                     __pstringtext53:	
  6450  2A36                     STR_7:	
  6451  2A36  3441               	retlw	65	;'A'
  6452  2A37  340A               	retlw	10
  6453  2A38  3400               	retlw	0
  6454                           
  6455                           	psect	stringtext54
  6456  2A39                     __pstringtext54:	
  6457  2A39                     STR_14:	
  6458  2A39  3445               	retlw	69	;'E'
  6459  2A3A  340A               	retlw	10
  6460  2A3B  3400               	retlw	0
  6461                           
  6462                           	psect	stringtext55
  6463  2A3E                     __pstringtext55:	
  6464  2A3E                     STR_62:	
  6465  2A3E  347A               	retlw	122	;'z'
  6466  2A3F  3400               	retlw	0
  6467                           
  6468                           	psect	stringtext56
  6469  2A40                     __pstringtext56:	
  6470  2A40                     STR_33:	
  6471  2A40  344E               	retlw	78	;'N'
  6472  2A41  3400               	retlw	0
  6473                           
  6474                           	psect	stringtext57
  6475  2A42                     __pstringtext57:	
  6476  2A42                     STR_31:	
  6477  2A42  3452               	retlw	82	;'R'
  6478  2A43  3400               	retlw	0
  6479                           
  6480                           	psect	stringtext58
  6481  0000                     __pstringtext58:	
  6482  2863                     
  6483                           ; #config settings
  6484  0000                     
  6485                           	psect	cinit
  6486  0052                     start_initialization:	
  6487  0052                     __initialization:		;BIGRAM
  6488                           
  6489                           ; Initialize objects allocated to BANK0
  6490  0052  3000               	movlw	low __pidataBANK0
  6491  0053  0084               	movwf	4
  6492  0054  3088               	movlw	(high __pidataBANK0)| (0+128)
  6493  0055  0085               	movwf	5
  6494  0056  305A               	movlw	low __pdataBANK0
  6495  0057  0086               	movwf	6
  6496  0058  3000               	movlw	high __pdataBANK0
  6497  0059  0087               	movwf	7
  6498  005A  3000               	movlw	0
  6499  005B  00FF               	movwf	btemp+1
  6500  005C  3004               	movlw	4
  6501  005D  31A2  22FC  3180   	fcall	init_ram
  6502                           
  6503                           ; Initialize objects allocated to BANK1
  6504  0060  30E0               	movlw	low __pidataBANK1
  6505  0061  0084               	movwf	4
  6506  0062  30A1               	movlw	(high __pidataBANK1)| (0+128)
  6507  0063  0085               	movwf	5
  6508  0064  30E9               	movlw	low __pdataBANK1
  6509  0065  0086               	movwf	6
  6510  0066  3000               	movlw	high __pdataBANK1
  6511  0067  0087               	movwf	7
  6512  0068  3000               	movlw	0
  6513  0069  00FF               	movwf	btemp+1
  6514  006A  3006               	movlw	6
  6515  006B  31A2  22FC  3180   	fcall	init_ram
  6516                           
  6517                           ; Initialize objects allocated to BANK2
  6518  006E  30DA               	movlw	low __pidataBANK2
  6519  006F  0084               	movwf	4
  6520  0070  30A1               	movlw	(high __pidataBANK2)| (0+128)
  6521  0071  0085               	movwf	5
  6522  0072  306A               	movlw	low __pdataBANK2
  6523  0073  0086               	movwf	6
  6524  0074  3001               	movlw	high __pdataBANK2
  6525  0075  0087               	movwf	7
  6526  0076  3000               	movlw	0
  6527  0077  00FF               	movwf	btemp+1
  6528  0078  3006               	movlw	6
  6529  0079  31A2  22FC  3180   	fcall	init_ram
  6530                           
  6531                           ; Initialize objects allocated to BANK4
  6532  007C  3016               	movlw	low __pidataBANK4
  6533  007D  0084               	movwf	4
  6534  007E  30A5               	movlw	(high __pidataBANK4)| (0+128)
  6535  007F  0085               	movwf	5
  6536  0080  3020               	movlw	low __pdataBANK4
  6537  0081  0086               	movwf	6
  6538  0082  3002               	movlw	high __pdataBANK4
  6539  0083  0087               	movwf	7
  6540  0084  3000               	movlw	0
  6541  0085  00FF               	movwf	btemp+1
  6542  0086  3020               	movlw	32
  6543  0087  31A2  22FC  3180   	fcall	init_ram
  6544                           
  6545                           ; Clear objects allocated to BIGRAM
  6546  008A  3090               	movlw	low (0+10128)
  6547  008B  0084               	movwf	4
  6548  008C  3027               	movlw	high (0+10128)
  6549  008D  0085               	movwf	5
  6550  008E  3060               	movlw	96
  6551  008F  00FE               	movwf	btemp
  6552  0090  3000               	movlw	0
  6553  0091  00FF               	movwf	btemp+1
  6554  0092  31A2  22F0  3180   	fcall	clear_ram0
  6555                           
  6556                           ; Clear objects allocated to COMMON
  6557  0095  01FD               	clrf	__pbssCOMMON& (0+127)
  6558                           
  6559                           ; Clear objects allocated to BANK0
  6560  0096  304E               	movlw	low __pbssBANK0
  6561  0097  0084               	movwf	4
  6562  0098  3000               	movlw	high __pbssBANK0
  6563  0099  0085               	movwf	5
  6564  009A  300C               	movlw	12
  6565  009B  00FE               	movwf	btemp
  6566  009C  3000               	movlw	0
  6567  009D  00FF               	movwf	btemp+1
  6568  009E  31A2  22F0  3180   	fcall	clear_ram0
  6569                           
  6570                           ; Clear objects allocated to BANK1
  6571  00A1  30DF               	movlw	low __pbssBANK1
  6572  00A2  0084               	movwf	4
  6573  00A3  3000               	movlw	high __pbssBANK1
  6574  00A4  0085               	movwf	5
  6575  00A5  300A               	movlw	10
  6576  00A6  00FE               	movwf	btemp
  6577  00A7  3000               	movlw	0
  6578  00A8  00FF               	movwf	btemp+1
  6579  00A9  31A2  22F0  3180   	fcall	clear_ram0
  6580                           
  6581                           ; Clear objects allocated to BANK2
  6582  00AC  3020               	movlw	low __pbssBANK2
  6583  00AD  0084               	movwf	4
  6584  00AE  3001               	movlw	high __pbssBANK2
  6585  00AF  0085               	movwf	5
  6586  00B0  304A               	movlw	74
  6587  00B1  00FE               	movwf	btemp
  6588  00B2  3000               	movlw	0
  6589  00B3  00FF               	movwf	btemp+1
  6590  00B4  31A2  22F0  3180   	fcall	clear_ram0
  6591                           
  6592                           ; Clear objects allocated to BANK3
  6593  00B7  30A0               	movlw	low __pbssBANK3
  6594  00B8  0084               	movwf	4
  6595  00B9  3001               	movlw	high __pbssBANK3
  6596  00BA  0085               	movwf	5
  6597  00BB  3041               	movlw	65
  6598  00BC  00FE               	movwf	btemp
  6599  00BD  3000               	movlw	0
  6600  00BE  00FF               	movwf	btemp+1
  6601  00BF  31A2  22F0         	fcall	clear_ram0
  6602  00C1                     end_of_initialization:	
  6603                           ;End of C runtime variable initialization code
  6604                           
  6605  00C1                     __end_of__initialization:	
  6606  00C1  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6607  00C2  0020               	movlb	0
  6608  00C3  319F  2F20         	ljmp	_main	;jump to C main() function
  6609                           
  6610                           	psect	bssCOMMON
  6611  007D                     __pbssCOMMON:	
  6612  007D                     _eusartTxHead:	
  6613  007D                     	ds	1
  6614                           
  6615                           	psect	bssBANK0
  6616  004E                     __pbssBANK0:	
  6617  004E                     _moveVector_ups:	
  6618  004E                     	ds	4
  6619  0052                     _readIdx:	
  6620  0052                     	ds	2
  6621  0054                     strtok@sp:	
  6622  0054                     	ds	1
  6623  0055                     _motionType:	
  6624  0055                     	ds	1
  6625  0056                     _eusartRxCount:	
  6626  0056                     	ds	1
  6627  0057                     _eusartRxTail:	
  6628  0057                     	ds	1
  6629  0058                     _eusartRxHead:	
  6630  0058                     	ds	1
  6631  0059                     _eusartTxTail:	
  6632  0059                     	ds	1
  6633                           
  6634                           	psect	dataBANK0
  6635  005A                     __pdataBANK0:	
  6636  005A                     _demoLong:	
  6637  005A                     	ds	4
  6638                           
  6639                           	psect	bssBANK1
  6640  00DF                     __pbssBANK1:	
  6641  00DF                     _moveMask:	
  6642  00DF                     	ds	4
  6643  00E3                     _activeMask:	
  6644  00E3                     	ds	4
  6645  00E7                     _i2c1_driver_busCollisionISR:	
  6646  00E7                     	ds	2
  6647                           
  6648                           	psect	dataBANK1
  6649  00E9                     __pdataBANK1:	
  6650  00E9                     _piezo_on_time_ms:	
  6651  00E9                     	ds	2
  6652  00EB                     _heater_post_time_ms:	
  6653  00EB                     	ds	2
  6654  00ED                     _heater_pre_time_ms:	
  6655  00ED                     	ds	2
  6656                           
  6657                           	psect	bssBANK2
  6658  0120                     __pbssBANK2:	
  6659  0120                     _i2c_status:	
  6660  0120                     	ds	30
  6661  013E                     _absCommand:	
  6662  013E                     	ds	4
  6663  0142                     _remainingSteps:	
  6664  0142                     	ds	4
  6665  0146                     _moveVector_downs:	
  6666  0146                     	ds	4
  6667  014A                     _LED_configReg_bot:	
  6668  014A                     	ds	4
  6669  014E                     _LED_configReg_top:	
  6670  014E                     	ds	4
  6671  0152                     _second_bottom:	
  6672  0152                     	ds	4
  6673  0156                     _first_top:	
  6674  0156                     	ds	4
  6675  015A                     _first_bottom:	
  6676  015A                     	ds	4
  6677  015E                     _second_top:	
  6678  015E                     	ds	4
  6679  0162                     _errno:	
  6680  0162                     	ds	2
  6681  0164                     _cmdRead:	
  6682  0164                     	ds	2
  6683  0166                     _errorOut:	
  6684  0166                     	ds	2
  6685  0168                     _i2c1_driver_i2cISR:	
  6686  0168                     	ds	2
  6687                           
  6688                           	psect	dataBANK2
  6689  016A                     __pdataBANK2:	
  6690  016A                     _inter_step_interval_ms:	
  6691  016A                     	ds	4
  6692  016E                     _drv_peak_val:	
  6693  016E                     	ds	2
  6694                           
  6695                           	psect	bssBANK3
  6696  01A0                     __pbssBANK3:	
  6697  01A0                     _eusartRxBuffer:	
  6698  01A0                     	ds	8
  6699  01A8                     _eusartTxBuffer:	
  6700  01A8                     	ds	8
  6701  01B0                     _demoHeaterToggle_bot:	
  6702  01B0                     	ds	4
  6703  01B4                     _demoHeaterToggle_top:	
  6704  01B4                     	ds	4
  6705  01B8                     _cmd_struct:	
  6706  01B8                     	ds	21
  6707  01CD                     _readdata:	
  6708  01CD                     	ds	20
  6709                           
  6710                           	psect	dataBANK4
  6711  0220                     __pdataBANK4:	
  6712  0220                     _fsmStateTable:	
  6713  0220                     	ds	32
  6714                           
  6715                           	psect	inittext
  6716  22FC                     init_ram:	
  6717  22FC  00FE               	movwf	126
  6718  22FD                     initloop:	
  6719  22FD  0012               	moviw fsr0++
  6720  22FE  001E               	movwi fsr1++
  6721  22FF  3001               	movlw	1
  6722  2300  02FE               	subwf	126,f
  6723  2301  3000               	movlw	0
  6724  2302  3BFF               	subwfb	127,f
  6725  2303  087F               	movf	127,w
  6726  2304  047E               	iorwf	126,w
  6727  2305  1903               	btfsc	3,2
  6728  2306  3400               	retlw	0
  6729  2307  2AFD               	goto	initloop
  6730                           
  6731                           	psect	clrtext
  6732  22F0                     clear_ram0:	
  6733                           ;	Called with FSR0 containing the base address, and
  6734                           ;	btemp/btemp+1 has the size to clear
  6735                           
  6736  22F0  0064               	clrwdt	;clear the watchdog before getting into this loop
  6737  22F1                     clrloop0:	
  6738  22F1  0180               	clrf	0	;clear RAM location pointed to by FSR
  6739  22F2  3101               	addfsr 0,1
  6740  22F3  3001               	movlw	1
  6741  22F4  02FE               	subwf	126,f
  6742  22F5  3000               	movlw	0
  6743  22F6  3BFF               	subwfb	127,f
  6744  22F7  087F               	movf	127,w
  6745  22F8  047E               	iorwf	126,w
  6746  22F9  1903               	btfsc	3,2
  6747  22FA  3400               	retlw	0	;all done for this memory range, return
  6748  22FB  2AF1               	goto	clrloop0	;have we reached the end yet?
  6749                           
  6750                           	psect	cstackBANK4
  6751  0240                     __pcstackBANK4:	
  6752  0240                     ??_doAbsMove:	
  6753                           
  6754                           ; 1 bytes @ 0x0
  6755  0240                     	ds	28
  6756                           
  6757                           	psect	cstackBANK1
  6758  00A0                     __pcstackBANK1:	
  6759  00A0                     ??_LED_setBrightnessRange:	
  6760  00A0                     ?_printf:	
  6761                           ; 1 bytes @ 0x0
  6762                           
  6763  00A0                     ___ftmul@exp:	
  6764                           ; 2 bytes @ 0x0
  6765                           
  6766  00A0                     printf@f:	
  6767                           ; 1 bytes @ 0x0
  6768                           
  6769  00A0                     LEDsPwr@pwrAll:	
  6770                           ; 2 bytes @ 0x0
  6771                           
  6772                           
  6773                           ; 4 bytes @ 0x0
  6774  00A0                     	ds	1
  6775  00A1                     ___ftmul@f3_as_product:	
  6776                           
  6777                           ; 3 bytes @ 0x1
  6778  00A1                     	ds	3
  6779  00A4                     ___ftmul@cntr:	
  6780                           
  6781                           ; 1 bytes @ 0x4
  6782  00A4                     	ds	1
  6783  00A5                     ___ftmul@sign:	
  6784                           
  6785                           ; 1 bytes @ 0x5
  6786  00A5                     	ds	1
  6787  00A6                     ??_printf:	
  6788  00A6                     ?___ftadd:	
  6789                           ; 1 bytes @ 0x6
  6790                           
  6791  00A6                     ___ftadd@f1:	
  6792                           ; 3 bytes @ 0x6
  6793                           
  6794                           
  6795                           ; 3 bytes @ 0x6
  6796  00A6                     	ds	3
  6797  00A9                     ___ftadd@f2:	
  6798                           
  6799                           ; 3 bytes @ 0x9
  6800  00A9                     	ds	3
  6801  00AC                     ___ftadd@sign:	
  6802  00AC                     printf@prec:	
  6803                           ; 1 bytes @ 0xC
  6804                           
  6805                           
  6806                           ; 2 bytes @ 0xC
  6807  00AC                     	ds	1
  6808  00AD                     ___ftadd@exp2:	
  6809                           
  6810                           ; 1 bytes @ 0xD
  6811  00AD                     	ds	1
  6812  00AE                     ___ftadd@exp1:	
  6813  00AE                     printf@val:	
  6814                           ; 1 bytes @ 0xE
  6815                           
  6816                           
  6817                           ; 4 bytes @ 0xE
  6818  00AE                     	ds	1
  6819  00AF                     ?___fttol:	
  6820  00AF                     ___fttol@f1:	
  6821                           ; 4 bytes @ 0xF
  6822                           
  6823                           
  6824                           ; 3 bytes @ 0xF
  6825  00AF                     	ds	3
  6826  00B2                     printf@flag:	
  6827                           
  6828                           ; 1 bytes @ 0x12
  6829  00B2                     	ds	1
  6830  00B3                     ??___fttol:	
  6831  00B3                     printf@ap:	
  6832                           ; 1 bytes @ 0x13
  6833                           
  6834                           
  6835                           ; 1 bytes @ 0x13
  6836  00B3                     	ds	1
  6837  00B4                     printf@c:	
  6838                           
  6839                           ; 1 bytes @ 0x14
  6840  00B4                     	ds	1
  6841  00B5                     ??_drv_reset:	
  6842  00B5                     ?_LED_test_openshort:	
  6843                           ; 1 bytes @ 0x15
  6844                           
  6845  00B5                     ?_drv_read:	
  6846                           ; 1 bytes @ 0x15
  6847                           
  6848  00B5                     ?_startRelMove:	
  6849                           ; 2 bytes @ 0x15
  6850                           
  6851  00B5                     ?_startAbsMove:	
  6852                           ; 2 bytes @ 0x15
  6853                           
  6854  00B5                     ?_stop:	
  6855                           ; 2 bytes @ 0x15
  6856                           
  6857  00B5                     ?_zeroPosition:	
  6858                           ; 2 bytes @ 0x15
  6859                           
  6860  00B5                     ?_getPosition:	
  6861                           ; 2 bytes @ 0x15
  6862                           
  6863  00B5                     ?_setDrvPeak:	
  6864                           ; 2 bytes @ 0x15
  6865                           
  6866  00B5                     ?_setDrvGain:	
  6867                           ; 2 bytes @ 0x15
  6868                           
  6869  00B5                     ?_setLEDBrightnessRange:	
  6870                           ; 2 bytes @ 0x15
  6871                           
  6872  00B5                     ?_setLEDPwr:	
  6873                           ; 2 bytes @ 0x15
  6874                           
  6875  00B5                     ?_setHeaterToggle:	
  6876                           ; 2 bytes @ 0x15
  6877                           
  6878  00B5                     ?_timedActiveHeatOn:	
  6879                           ; 2 bytes @ 0x15
  6880                           
  6881  00B5                     ?_setActive:	
  6882                           ; 2 bytes @ 0x15
  6883                           
  6884  00B5                     ?_setMoveMask:	
  6885                           ; 2 bytes @ 0x15
  6886                           
  6887  00B5                     ?_getActive:	
  6888                           ; 2 bytes @ 0x15
  6889                           
  6890  00B5                     ?_getMoveMask:	
  6891                           ; 2 bytes @ 0x15
  6892                           
  6893  00B5                     ?_getMotionStatus:	
  6894                           ; 2 bytes @ 0x15
  6895                           
  6896  00B5                     ?_LED_getData:	
  6897                           ; 2 bytes @ 0x15
  6898                           
  6899  00B5                     LED_test_openshort@type:	
  6900                           ; 4 bytes @ 0x15
  6901                           
  6902  00B5                     LED_getData@topOrBottom:	
  6903                           ; 2 bytes @ 0x15
  6904                           
  6905  00B5                     startRelMove@steps:	
  6906                           ; 2 bytes @ 0x15
  6907                           
  6908  00B5                     startAbsMove@steps:	
  6909                           ; 2 bytes @ 0x15
  6910                           
  6911  00B5                     getPosition@a:	
  6912                           ; 2 bytes @ 0x15
  6913                           
  6914  00B5                     setDrvPeak@pk:	
  6915                           ; 2 bytes @ 0x15
  6916                           
  6917  00B5                     setDrvGain@gain:	
  6918                           ; 2 bytes @ 0x15
  6919                           
  6920  00B5                     setLEDBrightnessRange@r:	
  6921                           ; 2 bytes @ 0x15
  6922                           
  6923  00B5                     setLEDPwr@pwr:	
  6924                           ; 2 bytes @ 0x15
  6925                           
  6926  00B5                     setHeaterToggle@num:	
  6927                           ; 2 bytes @ 0x15
  6928                           
  6929  00B5                     setActive@probeNum:	
  6930                           ; 2 bytes @ 0x15
  6931                           
  6932  00B5                     setMoveMask@probeNum:	
  6933                           ; 2 bytes @ 0x15
  6934                           
  6935  00B5                     timedActiveHeatOn@onTime:	
  6936                           ; 2 bytes @ 0x15
  6937                           
  6938                           
  6939                           ; 4 bytes @ 0x15
  6940  00B5                     	ds	1
  6941  00B6                     ?_drv_init:	
  6942  00B6                     drv_init@output_gain:	
  6943                           ; 1 bytes @ 0x16
  6944                           
  6945                           
  6946                           ; 2 bytes @ 0x16
  6947  00B6                     	ds	1
  6948  00B7                     ??_zeroPosition:	
  6949  00B7                     ??_setDrvGain:	
  6950                           ; 1 bytes @ 0x17
  6951                           
  6952  00B7                     fifo_check@reply:	
  6953                           ; 1 bytes @ 0x17
  6954                           
  6955  00B7                     ___fttol@sign1:	
  6956                           ; 1 bytes @ 0x17
  6957                           
  6958  00B7                     LED_test_openshort@topOrBottom:	
  6959                           ; 1 bytes @ 0x17
  6960                           
  6961  00B7                     setLEDBrightnessRange@tOB:	
  6962                           ; 2 bytes @ 0x17
  6963                           
  6964  00B7                     setLEDPwr@topOrBottom:	
  6965                           ; 2 bytes @ 0x17
  6966                           
  6967  00B7                     setHeaterToggle@topOrB:	
  6968                           ; 2 bytes @ 0x17
  6969                           
  6970  00B7                     setActive@onOff:	
  6971                           ; 2 bytes @ 0x17
  6972                           
  6973  00B7                     setMoveMask@onOff:	
  6974                           ; 2 bytes @ 0x17
  6975                           
  6976  00B7                     getActive@i:	
  6977                           ; 2 bytes @ 0x17
  6978                           
  6979  00B7                     getMoveMask@i:	
  6980                           ; 2 bytes @ 0x17
  6981                           
  6982                           
  6983                           ; 2 bytes @ 0x17
  6984  00B7                     	ds	1
  6985  00B8                     ?_drv_write_DC:	
  6986  00B8                     setDrvGain@setGain:	
  6987                           ; 1 bytes @ 0x18
  6988                           
  6989  00B8                     drv_init@idle_timeout:	
  6990                           ; 2 bytes @ 0x18
  6991                           
  6992  00B8                     drv_write_DC@val:	
  6993                           ; 2 bytes @ 0x18
  6994                           
  6995  00B8                     ___fttol@lval:	
  6996                           ; 2 bytes @ 0x18
  6997                           
  6998                           
  6999                           ; 4 bytes @ 0x18
  7000  00B8                     	ds	1
  7001  00B9                     ??_LED_getData:	
  7002  00B9                     ??_LED_test_openshort:	
  7003                           ; 1 bytes @ 0x19
  7004                           
  7005  00B9                     ??_setHeaterToggle:	
  7006                           ; 1 bytes @ 0x19
  7007                           
  7008  00B9                     ??_setActive:	
  7009                           ; 1 bytes @ 0x19
  7010                           
  7011  00B9                     timedActiveHeatOn@topOrB:	
  7012                           ; 1 bytes @ 0x19
  7013                           
  7014                           
  7015                           ; 2 bytes @ 0x19
  7016  00B9                     	ds	1
  7017  00BA                     ??_drv_init:	
  7018  00BA                     LED_test_openshort@j:	
  7019                           ; 1 bytes @ 0x1A
  7020                           
  7021  00BA                     drv_write_DC@duration_ms:	
  7022                           ; 2 bytes @ 0x1A
  7023                           
  7024                           
  7025                           ; 2 bytes @ 0x1A
  7026  00BA                     	ds	1
  7027  00BB                     ??_timedActiveHeatOn:	
  7028                           
  7029                           ; 1 bytes @ 0x1B
  7030  00BB                     	ds	1
  7031  00BC                     ??_drv_write_DC:	
  7032  00BC                     ___fttol@exp1:	
  7033                           ; 1 bytes @ 0x1C
  7034                           
  7035                           
  7036                           ; 1 bytes @ 0x1C
  7037  00BC                     	ds	1
  7038  00BD                     ??_main_initialize:	
  7039  00BD                     ?_setDrvPiezoOnTime:	
  7040                           ; 1 bytes @ 0x1D
  7041                           
  7042  00BD                     ?_setHeaterPreTime:	
  7043                           ; 2 bytes @ 0x1D
  7044                           
  7045  00BD                     ?_setHeaterPostTime:	
  7046                           ; 2 bytes @ 0x1D
  7047                           
  7048  00BD                     setDrvPiezoOnTime@t:	
  7049                           ; 2 bytes @ 0x1D
  7050                           
  7051  00BD                     setHeaterPreTime@t:	
  7052                           ; 2 bytes @ 0x1D
  7053                           
  7054  00BD                     setHeaterPostTime@t:	
  7055                           ; 2 bytes @ 0x1D
  7056                           
  7057  00BD                     drv_write_DC@i:	
  7058                           ; 2 bytes @ 0x1D
  7059                           
  7060                           
  7061                           ; 2 bytes @ 0x1D
  7062  00BD                     	ds	2
  7063  00BF                     ??_setDrvPiezoOnTime:	
  7064  00BF                     ??_setHeaterPreTime:	
  7065                           ; 1 bytes @ 0x1F
  7066                           
  7067  00BF                     ?_doMove:	
  7068                           ; 1 bytes @ 0x1F
  7069                           
  7070                           
  7071                           ; 2 bytes @ 0x1F
  7072  00BF                     	ds	1
  7073  00C0                     timedActiveHeatOn@t:	
  7074  00C0                     LED_getData@readData:	
  7075                           ; 2 bytes @ 0x20
  7076                           
  7077                           
  7078                           ; 4 bytes @ 0x20
  7079  00C0                     	ds	1
  7080  00C1                     ??_doMove:	
  7081                           
  7082                           ; 1 bytes @ 0x21
  7083  00C1                     	ds	3
  7084  00C4                     LED_getData@j:	
  7085                           
  7086                           ; 2 bytes @ 0x24
  7087  00C4                     	ds	2
  7088  00C6                     ?_LED_readConfig:	
  7089  00C6                     LED_readConfig@topOrBottom:	
  7090                           ; 4 bytes @ 0x26
  7091                           
  7092  00C6                     doMove@t:	
  7093                           ; 2 bytes @ 0x26
  7094                           
  7095                           
  7096                           ; 2 bytes @ 0x26
  7097  00C6                     	ds	2
  7098  00C8                     doMove@t_1566:	
  7099                           
  7100                           ; 2 bytes @ 0x28
  7101  00C8                     	ds	2
  7102  00CA                     ?_LED_testComm:	
  7103  00CA                     LED_testComm@topOrBottom:	
  7104                           ; 2 bytes @ 0x2A
  7105                           
  7106  00CA                     doMove@t_1567:	
  7107                           ; 2 bytes @ 0x2A
  7108                           
  7109                           
  7110                           ; 2 bytes @ 0x2A
  7111  00CA                     	ds	2
  7112  00CC                     ??_doRelMove:	
  7113  00CC                     LED_testComm@readResult:	
  7114                           ; 1 bytes @ 0x2C
  7115                           
  7116  00CC                     doAbsMove@allThere:	
  7117                           ; 2 bytes @ 0x2C
  7118                           
  7119                           
  7120                           ; 2 bytes @ 0x2C
  7121  00CC                     	ds	2
  7122  00CE                     doAbsMove@i:	
  7123  00CE                     LED_testComm@oldConfigReg:	
  7124                           ; 2 bytes @ 0x2E
  7125                           
  7126                           
  7127                           ; 4 bytes @ 0x2E
  7128  00CE                     	ds	2
  7129  00D0                     doAbsMove@i_1584:	
  7130                           
  7131                           ; 2 bytes @ 0x30
  7132  00D0                     	ds	2
  7133  00D2                     ?_commCheck:	
  7134  00D2                     doAbsMove@i_1582:	
  7135                           ; 2 bytes @ 0x32
  7136                           
  7137                           
  7138                           ; 2 bytes @ 0x32
  7139  00D2                     	ds	2
  7140  00D4                     ??_commCheck:	
  7141                           
  7142                           ; 1 bytes @ 0x34
  7143  00D4                     	ds	1
  7144  00D5                     execCmd@s:	
  7145                           
  7146                           ; 1 bytes @ 0x35
  7147  00D5                     	ds	7
  7148  00DC                     doRelMove@j:	
  7149                           
  7150                           ; 2 bytes @ 0x3C
  7151  00DC                     	ds	2
  7152  00DE                     ??_main:	
  7153                           
  7154                           ; 1 bytes @ 0x3E
  7155  00DE                     	ds	1
  7156                           
  7157                           	psect	cstackCOMMON
  7158  0070                     __pcstackCOMMON:	
  7159  0070                     ?_fifo_check:	
  7160  0070                     ?_isdigit:	
  7161                           ; 1 bit 
  7162                           
  7163  0070                     ?_mssp1_IRQisEnabled:	
  7164                           ; 1 bit 
  7165                           
  7166  0070                     ?_i2c1_driver_open:	
  7167                           ; 1 bit 
  7168                           
  7169  0070                     ?_i2c1_driver_isNACK:	
  7170                           ; 1 bit 
  7171                           
  7172  0070                     ?i1_i2c1_driver_isNACK:	
  7173                           ; 1 bit 
  7174                           
  7175  0070                     ?_PMD_Initialize:	
  7176                           ; 1 bit 
  7177                           
  7178  0070                     ?_PIN_MANAGER_Initialize:	
  7179                           ; 1 bytes @ 0x0
  7180                           
  7181  0070                     ?_OSCILLATOR_Initialize:	
  7182                           ; 1 bytes @ 0x0
  7183                           
  7184  0070                     ?_WDT_Initialize:	
  7185                           ; 1 bytes @ 0x0
  7186                           
  7187  0070                     ?_TMR2_Initialize:	
  7188                           ; 1 bytes @ 0x0
  7189                           
  7190  0070                     ?_TMR0_Initialize:	
  7191                           ; 1 bytes @ 0x0
  7192                           
  7193  0070                     ?_EUSART_Initialize:	
  7194                           ; 1 bytes @ 0x0
  7195                           
  7196  0070                     ?_TMR0_ISR:	
  7197                           ; 1 bytes @ 0x0
  7198                           
  7199  0070                     ?_TMR2_ISR:	
  7200                           ; 1 bytes @ 0x0
  7201                           
  7202  0070                     ?_EUSART_Receive_ISR:	
  7203                           ; 1 bytes @ 0x0
  7204                           
  7205  0070                     ??_EUSART_Receive_ISR:	
  7206                           ; 1 bytes @ 0x0
  7207                           
  7208  0070                     ?_EUSART_Transmit_ISR:	
  7209                           ; 1 bytes @ 0x0
  7210                           
  7211  0070                     ??_EUSART_Transmit_ISR:	
  7212                           ; 1 bytes @ 0x0
  7213                           
  7214  0070                     ?_i2c_busCollisionISR:	
  7215                           ; 1 bytes @ 0x0
  7216                           
  7217  0070                     ??_i2c_busCollisionISR:	
  7218                           ; 1 bytes @ 0x0
  7219                           
  7220  0070                     ?_i2c_ISR:	
  7221                           ; 1 bytes @ 0x0
  7222                           
  7223  0070                     ?_i2c_poller:	
  7224                           ; 1 bytes @ 0x0
  7225                           
  7226  0070                     ?_TMR0_DefaultInterruptHandler:	
  7227                           ; 1 bytes @ 0x0
  7228                           
  7229  0070                     ?_TMR2_DefaultInterruptHandler:	
  7230                           ; 1 bytes @ 0x0
  7231                           
  7232  0070                     ?_main_initialize:	
  7233                           ; 1 bytes @ 0x0
  7234                           
  7235  0070                     ?_doRelMove:	
  7236                           ; 1 bytes @ 0x0
  7237                           
  7238  0070                     ?_doAbsMove:	
  7239                           ; 1 bytes @ 0x0
  7240                           
  7241  0070                     ?_calcHeaterPins:	
  7242                           ; 1 bytes @ 0x0
  7243                           
  7244  0070                     ?_drv_reset:	
  7245                           ; 1 bytes @ 0x0
  7246                           
  7247  0070                     ?_toupper:	
  7248                           ; 1 bytes @ 0x0
  7249                           
  7250  0070                     ?_SYSTEM_Initialize:	
  7251                           ; 1 bytes @ 0x0
  7252                           
  7253  0070                     ?_INTERRUPT_InterruptManager:	
  7254                           ; 1 bytes @ 0x0
  7255                           
  7256  0070                     ?_EUSART_Read:	
  7257                           ; 1 bytes @ 0x0
  7258                           
  7259  0070                     ?_EUSART_Write:	
  7260                           ; 1 bytes @ 0x0
  7261                           
  7262  0070                     ?_putch:	
  7263                           ; 1 bytes @ 0x0
  7264                           
  7265  0070                     ?_mssp1_clearIRQ:	
  7266                           ; 1 bytes @ 0x0
  7267                           
  7268  0070                     ?_mssp1_setIRQ:	
  7269                           ; 1 bytes @ 0x0
  7270                           
  7271  0070                     ?_mssp1_waitForEvent:	
  7272                           ; 1 bytes @ 0x0
  7273                           
  7274  0070                     ?_i2c1_driver_resetBus:	
  7275                           ; 1 bytes @ 0x0
  7276                           
  7277  0070                     ?_i2c1_driver_start:	
  7278                           ; 1 bytes @ 0x0
  7279                           
  7280  0070                     ?_i2c1_driver_restart:	
  7281                           ; 1 bytes @ 0x0
  7282                           
  7283  0070                     ?_i2c1_driver_stop:	
  7284                           ; 1 bytes @ 0x0
  7285                           
  7286  0070                     ?_i2c1_driver_startRX:	
  7287                           ; 1 bytes @ 0x0
  7288                           
  7289  0070                     ?_i2c1_driver_getRXData:	
  7290                           ; 1 bytes @ 0x0
  7291                           
  7292  0070                     ?_i2c1_driver_TXData:	
  7293                           ; 1 bytes @ 0x0
  7294                           
  7295  0070                     ?_i2c1_driver_sendACK:	
  7296                           ; 1 bytes @ 0x0
  7297                           
  7298  0070                     ?_i2c1_driver_sendNACK:	
  7299                           ; 1 bytes @ 0x0
  7300                           
  7301  0070                     ?_i2c1_driver_clearBusCollision:	
  7302                           ; 1 bytes @ 0x0
  7303                           
  7304  0070                     ??_i2c1_driver_clearBusCollision:	
  7305                           ; 1 bytes @ 0x0
  7306                           
  7307  0070                     ?_i2c_open:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310  0070                     ?_i2c_setAddress:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313  0070                     ?_i2c_masterOperation:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316  0070                     ?_do_I2C_RESET:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319  0070                     ?_do_I2C_IDLE:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322  0070                     ?_do_I2C_SEND_RESTART_READ:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  7326                           ; 1 bytes @ 0x0
  7327                           
  7328  0070                     ?_do_I2C_SEND_RESTART:	
  7329                           ; 1 bytes @ 0x0
  7330                           
  7331  0070                     ?_do_I2C_SEND_STOP:	
  7332                           ; 1 bytes @ 0x0
  7333                           
  7334  0070                     ?_do_I2C_SEND_ADR_READ:	
  7335                           ; 1 bytes @ 0x0
  7336                           
  7337  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340  0070                     ?_do_I2C_RCEN:	
  7341                           ; 1 bytes @ 0x0
  7342                           
  7343  0070                     ?_do_I2C_DO_ACK:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346  0070                     ?_do_I2C_DO_NACK_STOP:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349  0070                     ?_do_I2C_DO_NACK_RESTART:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355  0070                     ?_do_I2C_TX:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358  0070                     ?_do_I2C_RX:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361  0070                     ?_do_I2C_TX_EMPTY:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364  0070                     ?_TMR0_StartTimer:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367  0070                     ?_TMR0_StopTimer:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370  0070                     ??_TMR0_StopTimer:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373  0070                     ?_TMR0_Write8bitTimer:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376  0070                     ??_TMR0_Write8bitTimer:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379  0070                     ?_TMR0_Load8bitPeriod:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382  0070                     ?_TMR2_StartTimer:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385  0070                     ?_TMR2_StopTimer:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388  0070                     ??_TMR2_StopTimer:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391  0070                     ?_TMR2_WriteTimer:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394  0070                     ??_TMR2_WriteTimer:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397  0070                     ?_TMR2_LoadPeriodRegister:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400  0070                     ?_main:	
  7401                           ; 1 bytes @ 0x0
  7402                           
  7403  0070                     ?i1_send_last_2bytes_IK:	
  7404                           ; 1 bytes @ 0x0
  7405                           
  7406  0070                     ?i1_send_2bytes_latchless_IK:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409  0070                     ?i1_mssp1_clearIRQ:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412  0070                     ??i1_mssp1_clearIRQ:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415  0070                     ?i1_mssp1_setIRQ:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418  0070                     ??i1_mssp1_setIRQ:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421  0070                     ?i1_i2c1_driver_resetBus:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424  0070                     ??i1_i2c1_driver_resetBus:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427  0070                     ?i1_i2c1_driver_restart:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430  0070                     ??i1_i2c1_driver_restart:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433  0070                     ?i1_i2c1_driver_stop:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436  0070                     ??i1_i2c1_driver_stop:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439  0070                     ??i1_i2c1_driver_isNACK:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442  0070                     ?i1_i2c1_driver_startRX:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445  0070                     ??i1_i2c1_driver_startRX:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448  0070                     ?i1_i2c1_driver_getRXData:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451  0070                     ??i1_i2c1_driver_getRXData:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454  0070                     ?i1_i2c1_driver_TXData:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457  0070                     ??i1_i2c1_driver_TXData:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460  0070                     ?i1_i2c1_driver_sendACK:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463  0070                     ??i1_i2c1_driver_sendACK:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466  0070                     ?i1_i2c1_driver_sendNACK:	
  7467                           ; 1 bytes @ 0x0
  7468                           
  7469  0070                     ??i1_i2c1_driver_sendNACK:	
  7470                           ; 1 bytes @ 0x0
  7471                           
  7472  0070                     ?i1_do_I2C_RESET:	
  7473                           ; 1 bytes @ 0x0
  7474                           
  7475  0070                     ??i1_do_I2C_RESET:	
  7476                           ; 1 bytes @ 0x0
  7477                           
  7478  0070                     ?i1_do_I2C_IDLE:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481  0070                     ??i1_do_I2C_IDLE:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  7488                           ; 1 bytes @ 0x0
  7489                           
  7490  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  7491                           ; 1 bytes @ 0x0
  7492                           
  7493  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  7494                           ; 1 bytes @ 0x0
  7495                           
  7496  0070                     ?i1_do_I2C_SEND_RESTART:	
  7497                           ; 1 bytes @ 0x0
  7498                           
  7499  0070                     ??i1_do_I2C_SEND_RESTART:	
  7500                           ; 1 bytes @ 0x0
  7501                           
  7502  0070                     ?i1_do_I2C_SEND_STOP:	
  7503                           ; 1 bytes @ 0x0
  7504                           
  7505  0070                     ??i1_do_I2C_SEND_STOP:	
  7506                           ; 1 bytes @ 0x0
  7507                           
  7508  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  7509                           ; 1 bytes @ 0x0
  7510                           
  7511  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  7512                           ; 1 bytes @ 0x0
  7513                           
  7514  0070                     ?i1_do_I2C_RCEN:	
  7515                           ; 1 bytes @ 0x0
  7516                           
  7517  0070                     ??i1_do_I2C_RCEN:	
  7518                           ; 1 bytes @ 0x0
  7519                           
  7520  0070                     ?i1_do_I2C_DO_ACK:	
  7521                           ; 1 bytes @ 0x0
  7522                           
  7523  0070                     ??i1_do_I2C_DO_ACK:	
  7524                           ; 1 bytes @ 0x0
  7525                           
  7526  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  7527                           ; 1 bytes @ 0x0
  7528                           
  7529  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  7530                           ; 1 bytes @ 0x0
  7531                           
  7532  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  7533                           ; 1 bytes @ 0x0
  7534                           
  7535  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  7536                           ; 1 bytes @ 0x0
  7537                           
  7538  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  7539                           ; 1 bytes @ 0x0
  7540                           
  7541  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  7542                           ; 1 bytes @ 0x0
  7543                           
  7544  0070                     ?i1_do_I2C_TX:	
  7545                           ; 1 bytes @ 0x0
  7546                           
  7547  0070                     ?i1_do_I2C_RX:	
  7548                           ; 1 bytes @ 0x0
  7549                           
  7550  0070                     ??i1_do_I2C_RX:	
  7551                           ; 1 bytes @ 0x0
  7552                           
  7553  0070                     ?i1_do_I2C_TX_EMPTY:	
  7554                           ; 1 bytes @ 0x0
  7555                           
  7556  0070                     ??i1_do_I2C_TX_EMPTY:	
  7557                           ; 1 bytes @ 0x0
  7558                           
  7559  0070                     ?i1_i2c_ISR:	
  7560                           ; 1 bytes @ 0x0
  7561                           
  7562  0070                     ?i1_returnStop:	
  7563                           ; 1 bytes @ 0x0
  7564                           
  7565  0070                     ?i1_returnReset:	
  7566                           ; 1 bytes @ 0x0
  7567                           
  7568  0070                     ?_execCmd:	
  7569                           ; 1 bytes @ 0x0
  7570                           
  7571  0070                     TMR0_Write8bitTimer@timerVal:	
  7572                           ; 2 bytes @ 0x0
  7573                           
  7574  0070                     TMR2_WriteTimer@timerVal:	
  7575                           ; 1 bytes @ 0x0
  7576                           
  7577  0070                     i1i2c1_driver_TXData@d:	
  7578                           ; 1 bytes @ 0x0
  7579                           
  7580  0070                     i1returnStop@p:	
  7581                           ; 1 bytes @ 0x0
  7582                           
  7583  0070                     i1returnReset@p:	
  7584                           ; 1 bytes @ 0x0
  7585                           
  7586  0070                     i1send_last_2bytes_IK@data:	
  7587                           ; 1 bytes @ 0x0
  7588                           
  7589  0070                     i1send_2bytes_latchless_IK@data:	
  7590                           ; 2 bytes @ 0x0
  7591                           
  7592                           
  7593                           ; 2 bytes @ 0x0
  7594  0070                     	ds	1
  7595  0071                     ??_TMR2_ISR:	
  7596  0071                     ??_TMR2_DefaultInterruptHandler:	
  7597                           ; 1 bytes @ 0x1
  7598                           
  7599  0071                     ??i1_do_I2C_SEND_ADR_READ:	
  7600                           ; 1 bytes @ 0x1
  7601                           
  7602  0071                     ??i1_do_I2C_SEND_ADR_WRITE:	
  7603                           ; 1 bytes @ 0x1
  7604                           
  7605  0071                     ??i1_do_I2C_TX:	
  7606                           ; 1 bytes @ 0x1
  7607                           
  7608  0071                     ??i1_returnStop:	
  7609                           ; 1 bytes @ 0x1
  7610                           
  7611  0071                     ??i1_returnReset:	
  7612                           ; 1 bytes @ 0x1
  7613                           
  7614                           
  7615                           ; 1 bytes @ 0x1
  7616  0071                     	ds	1
  7617  0072                     ??i1_send_2bytes_latchless_IK:	
  7618  0072                     i1send_last_2bytes_IK@latch_start:	
  7619                           ; 1 bytes @ 0x2
  7620                           
  7621                           
  7622                           ; 1 bytes @ 0x2
  7623  0072                     	ds	1
  7624  0073                     i1send_last_2bytes_IK@topOrBottom:	
  7625  0073                     i1_do_I2C_TX$1134:	
  7626                           ; 2 bytes @ 0x3
  7627                           
  7628                           
  7629                           ; 2 bytes @ 0x3
  7630  0073                     	ds	2
  7631  0075                     ??i1_send_last_2bytes_IK:	
  7632  0075                     ??i1_i2c_ISR:	
  7633                           ; 1 bytes @ 0x5
  7634                           
  7635                           
  7636                           ; 1 bytes @ 0x5
  7637  0075                     	ds	1
  7638  0076                     i1send_2bytes_latchless_IK@j:	
  7639                           
  7640                           ; 2 bytes @ 0x6
  7641  0076                     	ds	3
  7642  0079                     i1send_last_2bytes_IK@j:	
  7643                           
  7644                           ; 2 bytes @ 0x9
  7645  0079                     	ds	2
  7646  007B                     ??i1_send_2length_2bytes_IK:	
  7647                           
  7648                           ; 1 bytes @ 0xB
  7649  007B                     	ds	1
  7650  007C                     ??_TMR0_ISR:	
  7651  007C                     ??_TMR0_DefaultInterruptHandler:	
  7652                           ; 1 bytes @ 0xC
  7653                           
  7654  007C                     ??_INTERRUPT_InterruptManager:	
  7655                           ; 1 bytes @ 0xC
  7656                           
  7657                           
  7658                           ; 1 bytes @ 0xC
  7659  007C                     	ds	1
  7660                           
  7661                           	psect	cstackBANK0
  7662  0020                     __pcstackBANK0:	
  7663  0020                     ?i1_send_2length_2bytes_IK:	
  7664  0020                     i1send_2length_2bytes_IK@data1:	
  7665                           ; 1 bytes @ 0x0
  7666                           
  7667                           
  7668                           ; 2 bytes @ 0x0
  7669  0020                     	ds	2
  7670  0022                     i1send_2length_2bytes_IK@data2:	
  7671                           
  7672                           ; 2 bytes @ 0x2
  7673  0022                     	ds	2
  7674  0024                     i1send_2length_2bytes_IK@latch_start:	
  7675                           
  7676                           ; 1 bytes @ 0x4
  7677  0024                     	ds	1
  7678  0025                     i1send_2length_2bytes_IK@topOrBottom:	
  7679                           
  7680                           ; 2 bytes @ 0x5
  7681  0025                     	ds	2
  7682  0027                     ?i1_LEDsOn:	
  7683  0027                     i1LEDsOn@LEDpins:	
  7684                           ; 1 bytes @ 0x7
  7685                           
  7686                           
  7687                           ; 4 bytes @ 0x7
  7688  0027                     	ds	4
  7689  002B                     i1LEDsOn@topOrBottom:	
  7690                           
  7691                           ; 2 bytes @ 0xB
  7692  002B                     	ds	2
  7693  002D                     ??i1_LEDsOn:	
  7694                           
  7695                           ; 1 bytes @ 0xD
  7696  002D                     	ds	4
  7697  0031                     ??_PMD_Initialize:	
  7698  0031                     ??_PIN_MANAGER_Initialize:	
  7699                           ; 1 bytes @ 0x11
  7700                           
  7701  0031                     ??_OSCILLATOR_Initialize:	
  7702                           ; 1 bytes @ 0x11
  7703                           
  7704  0031                     ??_WDT_Initialize:	
  7705                           ; 1 bytes @ 0x11
  7706                           
  7707  0031                     ??_EUSART_Initialize:	
  7708                           ; 1 bytes @ 0x11
  7709                           
  7710  0031                     ?_returnStop:	
  7711                           ; 1 bytes @ 0x11
  7712                           
  7713  0031                     ?_returnReset:	
  7714                           ; 1 bytes @ 0x11
  7715                           
  7716  0031                     ?_TMR0_SetInterruptHandler:	
  7717                           ; 1 bytes @ 0x11
  7718                           
  7719  0031                     ?_TMR2_SetInterruptHandler:	
  7720                           ; 1 bytes @ 0x11
  7721                           
  7722  0031                     ??_calcHeaterPins:	
  7723                           ; 1 bytes @ 0x11
  7724                           
  7725  0031                     ??_isdigit:	
  7726                           ; 1 bytes @ 0x11
  7727                           
  7728  0031                     ??_toupper:	
  7729                           ; 1 bytes @ 0x11
  7730                           
  7731  0031                     ?_send_last_2bytes_IK:	
  7732                           ; 1 bytes @ 0x11
  7733                           
  7734  0031                     ?_send_2bytes_latchless_IK:	
  7735                           ; 1 bytes @ 0x11
  7736                           
  7737  0031                     ??_EUSART_Read:	
  7738                           ; 1 bytes @ 0x11
  7739                           
  7740  0031                     ??_EUSART_Write:	
  7741                           ; 1 bytes @ 0x11
  7742                           
  7743  0031                     ??_mssp1_IRQisEnabled:	
  7744                           ; 1 bytes @ 0x11
  7745                           
  7746  0031                     ??_mssp1_clearIRQ:	
  7747                           ; 1 bytes @ 0x11
  7748                           
  7749  0031                     ??_mssp1_setIRQ:	
  7750                           ; 1 bytes @ 0x11
  7751                           
  7752  0031                     ??_mssp1_waitForEvent:	
  7753                           ; 1 bytes @ 0x11
  7754                           
  7755  0031                     ??_i2c1_driver_open:	
  7756                           ; 1 bytes @ 0x11
  7757                           
  7758  0031                     ??_i2c1_driver_resetBus:	
  7759                           ; 1 bytes @ 0x11
  7760                           
  7761  0031                     ??_i2c1_driver_start:	
  7762                           ; 1 bytes @ 0x11
  7763                           
  7764  0031                     ??_i2c1_driver_restart:	
  7765                           ; 1 bytes @ 0x11
  7766                           
  7767  0031                     ??_i2c1_driver_stop:	
  7768                           ; 1 bytes @ 0x11
  7769                           
  7770  0031                     ??_i2c1_driver_isNACK:	
  7771                           ; 1 bytes @ 0x11
  7772                           
  7773  0031                     ??_i2c1_driver_startRX:	
  7774                           ; 1 bytes @ 0x11
  7775                           
  7776  0031                     ??_i2c1_driver_getRXData:	
  7777                           ; 1 bytes @ 0x11
  7778                           
  7779  0031                     ??_i2c1_driver_TXData:	
  7780                           ; 1 bytes @ 0x11
  7781                           
  7782  0031                     ??_i2c1_driver_sendACK:	
  7783                           ; 1 bytes @ 0x11
  7784                           
  7785  0031                     ??_i2c1_driver_sendNACK:	
  7786                           ; 1 bytes @ 0x11
  7787                           
  7788  0031                     ?_i2c1_driver_setBusCollisionISR:	
  7789                           ; 1 bytes @ 0x11
  7790                           
  7791  0031                     ?_i2c1_driver_setI2cISR:	
  7792                           ; 1 bytes @ 0x11
  7793                           
  7794  0031                     ??_i2c_setAddress:	
  7795                           ; 1 bytes @ 0x11
  7796                           
  7797  0031                     ?_i2c_setBuffer:	
  7798                           ; 1 bytes @ 0x11
  7799                           
  7800  0031                     ??_do_I2C_RESET:	
  7801                           ; 1 bytes @ 0x11
  7802                           
  7803  0031                     ??_do_I2C_IDLE:	
  7804                           ; 1 bytes @ 0x11
  7805                           
  7806  0031                     ??_do_I2C_SEND_RESTART_READ:	
  7807                           ; 1 bytes @ 0x11
  7808                           
  7809  0031                     ??_do_I2C_SEND_RESTART_WRITE:	
  7810                           ; 1 bytes @ 0x11
  7811                           
  7812  0031                     ??_do_I2C_SEND_RESTART:	
  7813                           ; 1 bytes @ 0x11
  7814                           
  7815  0031                     ??_do_I2C_SEND_STOP:	
  7816                           ; 1 bytes @ 0x11
  7817                           
  7818  0031                     ??_do_I2C_RCEN:	
  7819                           ; 1 bytes @ 0x11
  7820                           
  7821  0031                     ??_do_I2C_DO_ACK:	
  7822                           ; 1 bytes @ 0x11
  7823                           
  7824  0031                     ??_do_I2C_DO_NACK_STOP:	
  7825                           ; 1 bytes @ 0x11
  7826                           
  7827  0031                     ??_do_I2C_DO_NACK_RESTART:	
  7828                           ; 1 bytes @ 0x11
  7829                           
  7830  0031                     ??_do_I2C_DO_ADDRESS_NACK:	
  7831                           ; 1 bytes @ 0x11
  7832                           
  7833  0031                     ??_do_I2C_RX:	
  7834                           ; 1 bytes @ 0x11
  7835                           
  7836  0031                     ??_do_I2C_TX_EMPTY:	
  7837                           ; 1 bytes @ 0x11
  7838                           
  7839  0031                     ??_TMR0_StartTimer:	
  7840                           ; 1 bytes @ 0x11
  7841                           
  7842  0031                     ??_TMR0_Load8bitPeriod:	
  7843                           ; 1 bytes @ 0x11
  7844                           
  7845  0031                     ??_TMR2_StartTimer:	
  7846                           ; 1 bytes @ 0x11
  7847                           
  7848  0031                     ??_TMR2_LoadPeriodRegister:	
  7849                           ; 1 bytes @ 0x11
  7850                           
  7851  0031                     ?_strchr:	
  7852                           ; 1 bytes @ 0x11
  7853                           
  7854  0031                     ?___wmul:	
  7855                           ; 2 bytes @ 0x11
  7856                           
  7857  0031                     ?___awdiv:	
  7858                           ; 2 bytes @ 0x11
  7859                           
  7860  0031                     ?___ftpack:	
  7861                           ; 2 bytes @ 0x11
  7862                           
  7863  0031                     ?___lldiv:	
  7864                           ; 3 bytes @ 0x11
  7865                           
  7866  0031                     mssp1_waitForEvent@timeout:	
  7867                           ; 4 bytes @ 0x11
  7868                           
  7869  0031                     i2c1_driver_TXData@d:	
  7870                           ; 1 bytes @ 0x11
  7871                           
  7872  0031                     returnStop@p:	
  7873                           ; 1 bytes @ 0x11
  7874                           
  7875  0031                     returnReset@p:	
  7876                           ; 1 bytes @ 0x11
  7877                           
  7878  0031                     TMR0_Load8bitPeriod@periodVal:	
  7879                           ; 1 bytes @ 0x11
  7880                           
  7881  0031                     TMR2_LoadPeriodRegister@periodVal:	
  7882                           ; 1 bytes @ 0x11
  7883                           
  7884  0031                     _isdigit$2156:	
  7885                           ; 1 bytes @ 0x11
  7886                           
  7887  0031                     send_last_2bytes_IK@data:	
  7888                           ; 1 bytes @ 0x11
  7889                           
  7890  0031                     send_2bytes_latchless_IK@data:	
  7891                           ; 2 bytes @ 0x11
  7892                           
  7893  0031                     i2c1_driver_setBusCollisionISR@f:	
  7894                           ; 2 bytes @ 0x11
  7895                           
  7896  0031                     i2c1_driver_setI2cISR@f:	
  7897                           ; 2 bytes @ 0x11
  7898                           
  7899  0031                     i2c_setBuffer@buffer:	
  7900                           ; 2 bytes @ 0x11
  7901                           
  7902  0031                     TMR0_SetInterruptHandler@InterruptHandler:	
  7903                           ; 2 bytes @ 0x11
  7904                           
  7905  0031                     TMR2_SetInterruptHandler@InterruptHandler:	
  7906                           ; 2 bytes @ 0x11
  7907                           
  7908  0031                     ___wmul@multiplier:	
  7909                           ; 2 bytes @ 0x11
  7910                           
  7911  0031                     ___awdiv@divisor:	
  7912                           ; 2 bytes @ 0x11
  7913                           
  7914  0031                     strchr@ptr:	
  7915                           ; 2 bytes @ 0x11
  7916                           
  7917  0031                     ___ftpack@arg:	
  7918                           ; 2 bytes @ 0x11
  7919                           
  7920  0031                     ___lldiv@divisor:	
  7921                           ; 3 bytes @ 0x11
  7922                           
  7923                           
  7924                           ; 4 bytes @ 0x11
  7925  0031                     	ds	1
  7926  0032                     ??_returnStop:	
  7927  0032                     ??_returnReset:	
  7928                           ; 1 bytes @ 0x12
  7929                           
  7930  0032                     ??_do_I2C_SEND_ADR_READ:	
  7931                           ; 1 bytes @ 0x12
  7932                           
  7933  0032                     ??_do_I2C_SEND_ADR_WRITE:	
  7934                           ; 1 bytes @ 0x12
  7935                           
  7936  0032                     ??_do_I2C_TX:	
  7937                           ; 1 bytes @ 0x12
  7938                           
  7939  0032                     EUSART_Read@readValue:	
  7940                           ; 1 bytes @ 0x12
  7941                           
  7942  0032                     EUSART_Write@txData:	
  7943                           ; 1 bytes @ 0x12
  7944                           
  7945  0032                     i2c_setAddress@address:	
  7946                           ; 1 bytes @ 0x12
  7947                           
  7948  0032                     isdigit@c:	
  7949                           ; 1 bytes @ 0x12
  7950                           
  7951  0032                     toupper@c:	
  7952                           ; 1 bytes @ 0x12
  7953                           
  7954                           
  7955                           ; 1 bytes @ 0x12
  7956  0032                     	ds	1
  7957  0033                     ??_TMR2_Initialize:	
  7958  0033                     ??_TMR0_Initialize:	
  7959                           ; 1 bytes @ 0x13
  7960                           
  7961  0033                     ??_TMR0_SetInterruptHandler:	
  7962                           ; 1 bytes @ 0x13
  7963                           
  7964  0033                     ??_TMR2_SetInterruptHandler:	
  7965                           ; 1 bytes @ 0x13
  7966                           
  7967  0033                     ??_SYSTEM_Initialize:	
  7968                           ; 1 bytes @ 0x13
  7969                           
  7970  0033                     ??_send_2bytes_latchless_IK:	
  7971                           ; 1 bytes @ 0x13
  7972                           
  7973  0033                     ??_putch:	
  7974                           ; 1 bytes @ 0x13
  7975                           
  7976  0033                     ??_i2c1_driver_setBusCollisionISR:	
  7977                           ; 1 bytes @ 0x13
  7978                           
  7979  0033                     ??_i2c1_driver_setI2cISR:	
  7980                           ; 1 bytes @ 0x13
  7981                           
  7982  0033                     ??_i2c_open:	
  7983                           ; 1 bytes @ 0x13
  7984                           
  7985  0033                     ?_stricmp:	
  7986                           ; 1 bytes @ 0x13
  7987                           
  7988  0033                     send_last_2bytes_IK@latch_start:	
  7989                           ; 2 bytes @ 0x13
  7990                           
  7991  0033                     putch@txData:	
  7992                           ; 1 bytes @ 0x13
  7993                           
  7994  0033                     i2c_setBuffer@bufferSize:	
  7995                           ; 1 bytes @ 0x13
  7996                           
  7997  0033                     ___wmul@multiplicand:	
  7998                           ; 2 bytes @ 0x13
  7999                           
  8000  0033                     ___awdiv@dividend:	
  8001                           ; 2 bytes @ 0x13
  8002                           
  8003  0033                     stricmp@s2:	
  8004                           ; 2 bytes @ 0x13
  8005                           
  8006  0033                     strchr@chr:	
  8007                           ; 2 bytes @ 0x13
  8008                           
  8009                           
  8010                           ; 2 bytes @ 0x13
  8011  0033                     	ds	1
  8012  0034                     i2c_open@ret:	
  8013  0034                     ___ftpack@exp:	
  8014                           ; 1 bytes @ 0x14
  8015                           
  8016  0034                     send_last_2bytes_IK@topOrBottom:	
  8017                           ; 1 bytes @ 0x14
  8018                           
  8019  0034                     _do_I2C_TX$1134:	
  8020                           ; 2 bytes @ 0x14
  8021                           
  8022                           
  8023                           ; 2 bytes @ 0x14
  8024  0034                     	ds	1
  8025  0035                     ??_stricmp:	
  8026  0035                     ??_strchr:	
  8027                           ; 1 bytes @ 0x15
  8028                           
  8029  0035                     ??_i2c_setBuffer:	
  8030                           ; 1 bytes @ 0x15
  8031                           
  8032  0035                     ??___wmul:	
  8033                           ; 1 bytes @ 0x15
  8034                           
  8035  0035                     ??___awdiv:	
  8036                           ; 1 bytes @ 0x15
  8037                           
  8038  0035                     i2c_open@address:	
  8039                           ; 1 bytes @ 0x15
  8040                           
  8041  0035                     ___ftpack@sign:	
  8042                           ; 1 bytes @ 0x15
  8043                           
  8044  0035                     ___wmul@product:	
  8045                           ; 1 bytes @ 0x15
  8046                           
  8047  0035                     ___lldiv@dividend:	
  8048                           ; 2 bytes @ 0x15
  8049                           
  8050                           
  8051                           ; 4 bytes @ 0x15
  8052  0035                     	ds	1
  8053  0036                     ??_i2c_ISR:	
  8054  0036                     ??___ftpack:	
  8055                           ; 1 bytes @ 0x16
  8056                           
  8057  0036                     ??_send_last_2bytes_IK:	
  8058                           ; 1 bytes @ 0x16
  8059                           
  8060  0036                     ___awdiv@counter:	
  8061                           ; 1 bytes @ 0x16
  8062                           
  8063                           
  8064                           ; 1 bytes @ 0x16
  8065  0036                     	ds	1
  8066  0037                     ??_i2c_poller:	
  8067  0037                     ??_i2c_masterOperation:	
  8068                           ; 1 bytes @ 0x17
  8069                           
  8070  0037                     ?_atoi:	
  8071                           ; 1 bytes @ 0x17
  8072                           
  8073  0037                     ___awdiv@sign:	
  8074                           ; 2 bytes @ 0x17
  8075                           
  8076  0037                     stricmp@r:	
  8077                           ; 1 bytes @ 0x17
  8078                           
  8079  0037                     send_2bytes_latchless_IK@j:	
  8080                           ; 1 bytes @ 0x17
  8081                           
  8082                           
  8083                           ; 2 bytes @ 0x17
  8084  0037                     	ds	1
  8085  0038                     ?_strspn:	
  8086  0038                     ?_strcspn:	
  8087                           ; 2 bytes @ 0x18
  8088                           
  8089  0038                     i2c_masterOperation@read:	
  8090                           ; 2 bytes @ 0x18
  8091                           
  8092  0038                     stricmp@s1:	
  8093                           ; 1 bytes @ 0x18
  8094                           
  8095  0038                     ___awdiv@quotient:	
  8096                           ; 1 bytes @ 0x18
  8097                           
  8098  0038                     strcspn@s2:	
  8099                           ; 2 bytes @ 0x18
  8100                           
  8101  0038                     strspn@s2:	
  8102                           ; 2 bytes @ 0x18
  8103                           
  8104                           
  8105                           ; 2 bytes @ 0x18
  8106  0038                     	ds	1
  8107  0039                     ??_atoi:	
  8108  0039                     ??___lldiv:	
  8109                           ; 1 bytes @ 0x19
  8110                           
  8111  0039                     ?___awtoft:	
  8112                           ; 1 bytes @ 0x19
  8113                           
  8114  0039                     i2c_masterOperation@ret:	
  8115                           ; 3 bytes @ 0x19
  8116                           
  8117  0039                     ___awtoft@c:	
  8118                           ; 1 bytes @ 0x19
  8119                           
  8120                           
  8121                           ; 2 bytes @ 0x19
  8122  0039                     	ds	1
  8123  003A                     ??_strspn:	
  8124  003A                     ??_strcspn:	
  8125                           ; 1 bytes @ 0x1A
  8126                           
  8127  003A                     send_last_2bytes_IK@j:	
  8128                           ; 1 bytes @ 0x1A
  8129                           
  8130  003A                     ___lldiv@quotient:	
  8131                           ; 2 bytes @ 0x1A
  8132                           
  8133                           
  8134                           ; 4 bytes @ 0x1A
  8135  003A                     	ds	1
  8136  003B                     atoi@sign:	
  8137                           
  8138                           ; 1 bytes @ 0x1B
  8139  003B                     	ds	1
  8140  003C                     ?_send_2length_2bytes_IK:	
  8141  003C                     ??___awtoft:	
  8142                           ; 1 bytes @ 0x1C
  8143                           
  8144  003C                     send_2length_2bytes_IK@data1:	
  8145                           ; 1 bytes @ 0x1C
  8146                           
  8147  003C                     atoi@a:	
  8148                           ; 2 bytes @ 0x1C
  8149                           
  8150  003C                     strcspn@i:	
  8151                           ; 2 bytes @ 0x1C
  8152                           
  8153  003C                     strspn@i:	
  8154                           ; 2 bytes @ 0x1C
  8155                           
  8156                           
  8157                           ; 2 bytes @ 0x1C
  8158  003C                     	ds	2
  8159  003E                     atoi@s:	
  8160  003E                     ___awtoft@sign:	
  8161                           ; 1 bytes @ 0x1E
  8162                           
  8163  003E                     ___lldiv@counter:	
  8164                           ; 1 bytes @ 0x1E
  8165                           
  8166  003E                     strcspn@s1:	
  8167                           ; 1 bytes @ 0x1E
  8168                           
  8169  003E                     strspn@s1:	
  8170                           ; 1 bytes @ 0x1E
  8171                           
  8172  003E                     send_2length_2bytes_IK@data2:	
  8173                           ; 1 bytes @ 0x1E
  8174                           
  8175                           
  8176                           ; 2 bytes @ 0x1E
  8177  003E                     	ds	1
  8178  003F                     ?_strtok:	
  8179  003F                     ?___ftmul:	
  8180                           ; 1 bytes @ 0x1F
  8181                           
  8182  003F                     ?___llmod:	
  8183                           ; 3 bytes @ 0x1F
  8184                           
  8185  003F                     strtok@s2:	
  8186                           ; 4 bytes @ 0x1F
  8187                           
  8188  003F                     ___ftmul@f1:	
  8189                           ; 2 bytes @ 0x1F
  8190                           
  8191  003F                     ___llmod@divisor:	
  8192                           ; 3 bytes @ 0x1F
  8193                           
  8194                           
  8195                           ; 4 bytes @ 0x1F
  8196  003F                     	ds	1
  8197  0040                     send_2length_2bytes_IK@latch_start:	
  8198                           
  8199                           ; 1 bytes @ 0x20
  8200  0040                     	ds	1
  8201  0041                     ??_strtok:	
  8202  0041                     send_2length_2bytes_IK@topOrBottom:	
  8203                           ; 1 bytes @ 0x21
  8204                           
  8205                           
  8206                           ; 2 bytes @ 0x21
  8207  0041                     	ds	1
  8208  0042                     ___ftmul@f2:	
  8209                           
  8210                           ; 3 bytes @ 0x22
  8211  0042                     	ds	1
  8212  0043                     ??_send_2length_2bytes_IK:	
  8213  0043                     ___llmod@dividend:	
  8214                           ; 1 bytes @ 0x23
  8215                           
  8216                           
  8217                           ; 4 bytes @ 0x23
  8218  0043                     	ds	1
  8219  0044                     ?_LEDsOn:	
  8220  0044                     ?_LEDsPwr:	
  8221                           ; 1 bytes @ 0x24
  8222                           
  8223  0044                     ?_LED_setBrightnessRange:	
  8224                           ; 1 bytes @ 0x24
  8225                           
  8226  0044                     strtok@s1:	
  8227                           ; 1 bytes @ 0x24
  8228                           
  8229  0044                     LEDsPwr@pwr:	
  8230                           ; 1 bytes @ 0x24
  8231                           
  8232  0044                     LED_setBrightnessRange@range:	
  8233                           ; 2 bytes @ 0x24
  8234                           
  8235  0044                     LEDsOn@LEDpins:	
  8236                           ; 2 bytes @ 0x24
  8237                           
  8238                           
  8239                           ; 4 bytes @ 0x24
  8240  0044                     	ds	1
  8241  0045                     ?_parseCmd:	
  8242  0045                     ??___ftmul:	
  8243                           ; 1 bytes @ 0x25
  8244                           
  8245  0045                     parseCmd@s:	
  8246                           ; 1 bytes @ 0x25
  8247                           
  8248                           
  8249                           ; 1 bytes @ 0x25
  8250  0045                     	ds	1
  8251  0046                     ??_parseCmd:	
  8252  0046                     LEDsPwr@topOrBottom:	
  8253                           ; 1 bytes @ 0x26
  8254                           
  8255  0046                     LED_setBrightnessRange@topOrBottom:	
  8256                           ; 2 bytes @ 0x26
  8257                           
  8258                           
  8259                           ; 2 bytes @ 0x26
  8260  0046                     	ds	1
  8261  0047                     ??___llmod:	
  8262  0047                     parseCmd@cmdString:	
  8263                           ; 1 bytes @ 0x27
  8264                           
  8265                           
  8266                           ; 1 bytes @ 0x27
  8267  0047                     	ds	1
  8268  0048                     ??_LEDsPwr:	
  8269  0048                     ___llmod@counter:	
  8270                           ; 1 bytes @ 0x28
  8271                           
  8272  0048                     LEDsOn@topOrBottom:	
  8273                           ; 1 bytes @ 0x28
  8274                           
  8275  0048                     parseCmd@paramIter:	
  8276                           ; 2 bytes @ 0x28
  8277                           
  8278  0048                     LED_setBrightnessRange@LED_configReg:	
  8279                           ; 2 bytes @ 0x28
  8280                           
  8281                           
  8282                           ; 4 bytes @ 0x28
  8283  0048                     	ds	1
  8284  0049                     ?_drv_write:	
  8285  0049                     ??_drv_read:	
  8286                           ; 1 bytes @ 0x29
  8287                           
  8288  0049                     ??_LED_readConfig:	
  8289                           ; 1 bytes @ 0x29
  8290                           
  8291  0049                     ??_startRelMove:	
  8292                           ; 1 bytes @ 0x29
  8293                           
  8294  0049                     ??_startAbsMove:	
  8295                           ; 1 bytes @ 0x29
  8296                           
  8297  0049                     ??_stop:	
  8298                           ; 1 bytes @ 0x29
  8299                           
  8300  0049                     ??_getPosition:	
  8301                           ; 1 bytes @ 0x29
  8302                           
  8303  0049                     ??_setDrvPeak:	
  8304                           ; 1 bytes @ 0x29
  8305                           
  8306  0049                     ??_setMoveMask:	
  8307                           ; 1 bytes @ 0x29
  8308                           
  8309  0049                     ??_getActive:	
  8310                           ; 1 bytes @ 0x29
  8311                           
  8312  0049                     ??_getMoveMask:	
  8313                           ; 1 bytes @ 0x29
  8314                           
  8315  0049                     ??_getMotionStatus:	
  8316                           ; 1 bytes @ 0x29
  8317                           
  8318  0049                     ??___ftadd:	
  8319                           ; 1 bytes @ 0x29
  8320                           
  8321  0049                     drv_write@data:	
  8322                           ; 1 bytes @ 0x29
  8323                           
  8324  0049                     zeroPosition@i:	
  8325                           ; 1 bytes @ 0x29
  8326                           
  8327                           
  8328                           ; 2 bytes @ 0x29
  8329  0049                     	ds	1
  8330  004A                     ??_drv_write:	
  8331  004A                     ??_LEDsOn:	
  8332                           ; 1 bytes @ 0x2A
  8333                           
  8334  004A                     parseCmd@p:	
  8335                           ; 1 bytes @ 0x2A
  8336                           
  8337                           
  8338                           ; 1 bytes @ 0x2A
  8339  004A                     	ds	1
  8340  004B                     drv_write@reg:	
  8341  004B                     drv_read@reg:	
  8342                           ; 1 bytes @ 0x2B
  8343                           
  8344                           
  8345                           ; 1 bytes @ 0x2B
  8346  004B                     	ds	1
  8347  004C                     ??_LED_testComm:	
  8348  004C                     ??_setLEDBrightnessRange:	
  8349                           ; 1 bytes @ 0x2C
  8350                           
  8351  004C                     drv_read@buff:	
  8352                           ; 1 bytes @ 0x2C
  8353                           
  8354  004C                     drv_write@buff:	
  8355                           ; 1 bytes @ 0x2C
  8356                           
  8357                           
  8358                           ; 2 bytes @ 0x2C
  8359  004C                     	ds	1
  8360  004D                     ??_fifo_check:	
  8361  004D                     ??_setHeaterPostTime:	
  8362                           ; 1 bytes @ 0x2D
  8363                           
  8364                           
  8365                           ; 1 bytes @ 0x2D
  8366  004D                     	ds	1
  8367  004E                     ??_execCmd:	
  8368  004E                     ??_setLEDPwr:	
  8369                           ; 1 bytes @ 0x2E
  8370                           
  8371                           
  8372                           	psect	maintext
  8373  1F20                     __pmaintext:	
  8374                           ; 1 bytes @ 0x2E
  8375 ;;
  8376 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8377 ;;
  8378 ;; *************** function _main *****************
  8379 ;; Defined at:
  8380 ;;		line 132 in file "main.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;		None
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;		None
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  1    wreg      void 
  8387 ;; Registers used:
  8388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8389 ;; Tracked objects:
  8390 ;;		On entry : B1F/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8396 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8397 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8398 ;;Total ram usage:        1 bytes
  8399 ;; Hardware stack levels required when called:   17
  8400 ;; This function calls:
  8401 ;;		_EUSART_Read
  8402 ;;		_SYSTEM_Initialize
  8403 ;;		_doAbsMove
  8404 ;;		_doRelMove
  8405 ;;		_execCmd
  8406 ;;		_main_initialize
  8407 ;;		_parseCmd
  8408 ;;		_printf
  8409 ;; This function is called by:
  8410 ;;		Startup code after reset
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           
  8415                           ;psect for function _main
  8416  1F20                     _main:	
  8417                           
  8418                           ;main.c: 135: SYSTEM_Initialize();
  8419                           
  8420                           ;incstack = 0
  8421 ;; hardware stack exceeded
  8422                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8423  1F20  31A3  2398  319F   	fcall	_SYSTEM_Initialize
  8424                           
  8425                           ;main.c: 136: _delay((unsigned long)((500)*(1000000/4000.0)));
  8426  1F23  30A3               	movlw	163
  8427  1F24  0021               	movlb	1	; select bank1
  8428  1F25  00DE               	movwf	??_main^(0+128)
  8429  1F26  3055               	movlw	85
  8430  1F27                     u9077:	
  8431  1F27  0B89               	decfsz	9,f
  8432  1F28  2F27               	goto	u9077
  8433  1F29  0BDE               	decfsz	??_main^(0+128),f
  8434  1F2A  2F27               	goto	u9077
  8435                           
  8436                           ;main.c: 142: (INTCONbits.GIE = 1);
  8437  1F2B  178B               	bsf	11,7	;volatile
  8438                           
  8439                           ;main.c: 145: (INTCONbits.PEIE = 1);
  8440  1F2C  170B               	bsf	11,6	;volatile
  8441                           
  8442                           ;main.c: 146: printf("\n\nsystem done\n");
  8443  1F2D  304E               	movlw	low (STR_5| (0+32768))
  8444  1F2E  0021               	movlb	1	; select bank1
  8445  1F2F  00A0               	movwf	printf@f^(0+128)
  8446  1F30  30A9               	movlw	high (STR_5| (0+32768))
  8447  1F31  00A1               	movwf	(printf@f^(0+128)+1)
  8448  1F32  318E  26CE  319F   	fcall	_printf
  8449                           
  8450                           ;main.c: 152: main_initialize();
  8451  1F35  318B  2301  319F   	fcall	_main_initialize
  8452                           
  8453                           ;main.c: 175: }
  8454                           ;main.c: 178: switch(motionType){
  8455  1F38  2F40               	goto	l8637
  8456  1F39                     l8657:	
  8457                           ;main.c: 179: case REL_MOVE: doRelMove(); break;
  8458                           
  8459  1F39  318D  259D  319F   	fcall	_doRelMove
  8460  1F3C  2F40               	goto	l8637
  8461  1F3D                     l8659:	
  8462                           ;main.c: 180: case ABS_MOVE: doAbsMove(); break;
  8463                           
  8464  1F3D  3180  20C5  319F   	fcall	_doAbsMove
  8465  1F40                     l8637:	
  8466                           ;main.c: 154: while (1)
  8467                           
  8468                           ;main.c: 182: }
  8469                           
  8470                           ;main.c: 181: default: break;
  8471                           
  8472                           
  8473                           ;main.c: 155: {
  8474                           ;main.c: 157: if (eusartRxCount!=0) {
  8475  1F40  0020               	movlb	0	; select bank0
  8476  1F41  0856               	movf	_eusartRxCount,w	;volatile
  8477  1F42  1903               	btfsc	3,2
  8478  1F43  2F6C               	goto	l8649
  8479                           
  8480                           ;main.c: 158: readdata[readIdx] = EUSART_Read();
  8481  1F44  31A4  24F6  319F   	fcall	_EUSART_Read
  8482  1F47  0021               	movlb	1	; select bank1
  8483  1F48  00DE               	movwf	??_main^(0+128)
  8484  1F49  0020               	movlb	0	; select bank0
  8485  1F4A  0852               	movf	_readIdx,w
  8486  1F4B  3ECD               	addlw	(low (_readdata| (0+256)))& (0+255)
  8487  1F4C  0086               	movwf	6
  8488  1F4D  3001               	movlw	1	; select bank3/4
  8489  1F4E  0087               	movwf	7
  8490  1F4F  0021               	movlb	1	; select bank1
  8491  1F50  085E               	movf	??_main^(0+128),w
  8492  1F51  0081               	movwf	1
  8493                           
  8494                           ;main.c: 159: if(readdata[readIdx] == '\n'){
  8495  1F52  0020               	movlb	0	; select bank0
  8496  1F53  0852               	movf	_readIdx,w
  8497  1F54  3ECD               	addlw	(low (_readdata| (0+256)))& (0+255)
  8498  1F55  0086               	movwf	6
  8499  1F56  3001               	movlw	1	; select bank3/4
  8500  1F57  0087               	movwf	7
  8501  1F58  300A               	movlw	10
  8502  1F59  0601               	xorwf	1,w
  8503  1F5A  1D03               	btfss	3,2
  8504  1F5B  2F67               	goto	l8647
  8505                           
  8506                           ;main.c: 160: readdata[readIdx] = 0;
  8507  1F5C  0852               	movf	_readIdx,w
  8508  1F5D  3ECD               	addlw	(low (_readdata| (0+256)))& (0+255)
  8509  1F5E  0086               	movwf	6
  8510  1F5F  3001               	movlw	1	; select bank3/4
  8511  1F60  0087               	movwf	7
  8512  1F61  0181               	clrf	1
  8513                           
  8514                           ;main.c: 161: cmdRead = 1;
  8515  1F62  3001               	movlw	1
  8516  1F63  0022               	movlb	2	; select bank2
  8517  1F64  00E4               	movwf	_cmdRead^(0+256)
  8518  1F65  3000               	movlw	0
  8519  1F66  00E5               	movwf	(_cmdRead^(0+256)+1)
  8520  1F67                     l8647:	
  8521                           
  8522                           ;main.c: 162: }
  8523                           ;main.c: 163: readIdx++;
  8524  1F67  3001               	movlw	1
  8525  1F68  0020               	movlb	0	; select bank0
  8526  1F69  07D2               	addwf	_readIdx,f
  8527  1F6A  3000               	movlw	0
  8528  1F6B  3DD3               	addwfc	_readIdx+1,f
  8529  1F6C                     l8649:	
  8530                           
  8531                           ;main.c: 164: }
  8532                           ;main.c: 167: if(cmdRead){
  8533  1F6C  0022               	movlb	2	; select bank2
  8534  1F6D  0864               	movf	_cmdRead^(0+256),w
  8535  1F6E  0465               	iorwf	(_cmdRead+1)^(0+256),w
  8536  1F6F  1903               	btfsc	3,2
  8537  1F70  2F85               	goto	l8663
  8538                           
  8539                           ;main.c: 169: parseCmd(readdata, &cmd_struct);
  8540  1F71  30B8               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8541  1F72  0021               	movlb	1	; select bank1
  8542  1F73  00DE               	movwf	??_main^(0+128)
  8543  1F74  085E               	movf	??_main^(0+128),w
  8544  1F75  0020               	movlb	0	; select bank0
  8545  1F76  00C5               	movwf	parseCmd@s
  8546  1F77  30CD               	movlw	(low (_readdata| (0+256)))& (0+255)
  8547  1F78  3185  2542  319F   	fcall	_parseCmd
  8548                           
  8549                           ;main.c: 171: cmdRead = 0;
  8550  1F7B  0022               	movlb	2	; select bank2
  8551  1F7C  01E4               	clrf	_cmdRead^(0+256)
  8552  1F7D  01E5               	clrf	(_cmdRead+1)^(0+256)
  8553                           
  8554                           ;main.c: 172: readIdx=0;
  8555  1F7E  0020               	movlb	0	; select bank0
  8556  1F7F  01D2               	clrf	_readIdx
  8557  1F80  01D3               	clrf	_readIdx+1
  8558                           
  8559                           ;main.c: 173: execCmd(&cmd_struct);
  8560  1F81  30B8               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8561  1F82  3183  2378  319F   	fcall	_execCmd
  8562  1F85                     l8663:	
  8563  1F85  0020               	movlb	0	; select bank0
  8564  1F86  0855               	movf	_motionType,w
  8565                           
  8566                           ; Switch size 1, requested type "space"
  8567                           ; Number of cases is 2, Range of values is 1 to 2
  8568                           ; switch strategies available:
  8569                           ; Name         Instructions Cycles
  8570                           ; simple_byte            7     4 (average)
  8571                           ; direct_byte           13     9 (fixed)
  8572                           ; jumptable            263     9 (fixed)
  8573                           ;	Chosen strategy is simple_byte
  8574  1F87  3A01               	xorlw	1	; case 1
  8575  1F88  1903               	skipnz
  8576  1F89  2F39               	goto	l8657
  8577  1F8A  3A03               	xorlw	3	; case 2
  8578  1F8B  1903               	skipnz
  8579  1F8C  2F3D               	goto	l8659
  8580  1F8D  2F40               	goto	l8637
  8581  1F8E  2F40               	goto	l8637
  8582  1F8F                     __end_of_main:	
  8583                           
  8584                           	psect	text1
  8585  0542                     __ptext1:	
  8586 ;; *************** function _parseCmd *****************
  8587 ;; Defined at:
  8588 ;;		line 5 in file "cmd_parser.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;  cmdString       1    wreg     PTR unsigned char 
  8591 ;;		 -> readdata(20), 
  8592 ;;  s               1   37[BANK0 ] PTR struct CMD_STRUCT
  8593 ;;		 -> cmd_struct(21), 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;  cmdString       1   39[BANK0 ] PTR unsigned char 
  8596 ;;		 -> readdata(20), 
  8597 ;;  p               1   42[BANK0 ] PTR unsigned char 
  8598 ;;		 -> readdata(20), NULL(0), 
  8599 ;;  paramIter       2   40[BANK0 ] int 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      void 
  8602 ;; Registers used:
  8603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8609 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8610 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8611 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8612 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8613 ;;Total ram usage:        6 bytes
  8614 ;; Hardware stack levels used:    1
  8615 ;; Hardware stack levels required when called:    9
  8616 ;; This function calls:
  8617 ;;		_atoi
  8618 ;;		_stricmp
  8619 ;;		_strtok
  8620 ;; This function is called by:
  8621 ;;		_main
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           
  8626                           ;psect for function _parseCmd
  8627  0542                     _parseCmd:	
  8628                           
  8629                           ;incstack = 0
  8630                           ; Regs used in _parseCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8631                           ;parseCmd@cmdString stored from wreg
  8632  0542  0020               	movlb	0	; select bank0
  8633  0543  00C7               	movwf	parseCmd@cmdString
  8634                           
  8635                           ;cmd_parser.c: 6: int paramIter = 0;
  8636  0544  01C8               	clrf	parseCmd@paramIter
  8637  0545  01C9               	clrf	parseCmd@paramIter+1
  8638                           
  8639                           ;cmd_parser.c: 7: for (char *p = strtok(cmdString," "); p != (0); p = strtok((0), " ")){
  8640  0546  30EE               	movlw	low ((STR_38+6)| (0+32768))
  8641  0547  00BF               	movwf	strtok@s2
  8642  0548  30A9               	movlw	high ((STR_38+6)| (0+32768))
  8643  0549  00C0               	movwf	strtok@s2+1
  8644  054A  0847               	movf	parseCmd@cmdString,w
  8645  054B                     L21:	
  8646  054B  319A  2290  3185   	fcall	_strtok
  8647  054E  0020               	movlb	0	; select bank0
  8648  054F  00C6               	movwf	??_parseCmd
  8649  0550  0846               	movf	??_parseCmd,w
  8650  0551  00CA               	movwf	parseCmd@p
  8651  0552  084A               	movf	parseCmd@p,w
  8652  0553  1903               	btfsc	3,2
  8653  0554  0008               	return
  8654                           
  8655                           ;cmd_parser.c: 9: if (paramIter == 0){
  8656  0555  0848               	movf	parseCmd@paramIter,w
  8657  0556  0449               	iorwf	parseCmd@paramIter+1,w
  8658  0557  1D03               	btfss	3,2
  8659  0558  2EB5               	goto	l6675
  8660                           
  8661                           ;cmd_parser.c: 10: if(stricmp(p, "rel") == 0)
  8662  0559  301C               	movlw	low (STR_56| (0+32768))
  8663  055A  00B3               	movwf	stricmp@s2
  8664  055B  30AA               	movlw	high (STR_56| (0+32768))
  8665  055C  00B4               	movwf	stricmp@s2+1
  8666  055D  084A               	movf	parseCmd@p,w
  8667  055E  3198  204D  3185   	fcall	_stricmp
  8668  0561  0020               	movlb	0	; select bank0
  8669  0562  0833               	movf	?_stricmp,w
  8670  0563  0434               	iorwf	?_stricmp+1,w
  8671  0564  1D03               	btfss	3,2
  8672  0565  2D68               	goto	l6589
  8673                           
  8674                           ;cmd_parser.c: 11: s->c = CMD_REL;
  8675  0566  3002               	movlw	2
  8676  0567  2EA7               	goto	L20
  8677  0568                     l6589:	
  8678                           
  8679                           ;cmd_parser.c: 12: else if(stricmp(p, "abs") == 0)
  8680  0568  3020               	movlw	low (STR_57| (0+32768))
  8681  0569  00B3               	movwf	stricmp@s2
  8682  056A  30AA               	movlw	high (STR_57| (0+32768))
  8683  056B  00B4               	movwf	stricmp@s2+1
  8684  056C  084A               	movf	parseCmd@p,w
  8685  056D  3198  204D  3185   	fcall	_stricmp
  8686  0570  0020               	movlb	0	; select bank0
  8687  0571  0833               	movf	?_stricmp,w
  8688  0572  0434               	iorwf	?_stricmp+1,w
  8689  0573  1D03               	btfss	3,2
  8690  0574  2D7C               	goto	l6593
  8691                           
  8692                           ;cmd_parser.c: 13: s->c = CMD_ABS;
  8693  0575  0845               	movf	parseCmd@s,w
  8694  0576  0086               	movwf	6
  8695  0577  3001               	movlw	1	; select bank2/3
  8696  0578  0087               	movwf	7
  8697  0579  0181               	clrf	1
  8698  057A  0A81               	incf	1,f
  8699  057B  2EDA               	goto	l6683
  8700  057C                     l6593:	
  8701                           
  8702                           ;cmd_parser.c: 14: else if(stricmp(p, "pos") == 0)
  8703  057C  3024               	movlw	low (STR_58| (0+32768))
  8704  057D  00B3               	movwf	stricmp@s2
  8705  057E  30AA               	movlw	high (STR_58| (0+32768))
  8706  057F  00B4               	movwf	stricmp@s2+1
  8707  0580  084A               	movf	parseCmd@p,w
  8708  0581  3198  204D  3185   	fcall	_stricmp
  8709  0584  0020               	movlb	0	; select bank0
  8710  0585  0833               	movf	?_stricmp,w
  8711  0586  0434               	iorwf	?_stricmp+1,w
  8712  0587  1D03               	btfss	3,2
  8713  0588  2D8B               	goto	l6597
  8714                           
  8715                           ;cmd_parser.c: 15: s->c = CMD_P;
  8716  0589  3003               	movlw	3
  8717  058A  2EA7               	goto	L20
  8718  058B                     l6597:	
  8719                           
  8720                           ;cmd_parser.c: 16: else if(stricmp(p,"s") == 0)
  8721  058B  3022               	movlw	low ((STR_57+2)| (0+32768))
  8722  058C  00B3               	movwf	stricmp@s2
  8723  058D  30AA               	movlw	high ((STR_57+2)| (0+32768))
  8724  058E  00B4               	movwf	stricmp@s2+1
  8725  058F  084A               	movf	parseCmd@p,w
  8726  0590  3198  204D  3185   	fcall	_stricmp
  8727  0593  0020               	movlb	0	; select bank0
  8728  0594  0833               	movf	?_stricmp,w
  8729  0595  0434               	iorwf	?_stricmp+1,w
  8730  0596  1D03               	btfss	3,2
  8731  0597  2D9A               	goto	l6601
  8732                           
  8733                           ;cmd_parser.c: 17: s->c = CMD_STOP;
  8734  0598  3004               	movlw	4
  8735  0599  2EA7               	goto	L20
  8736  059A                     l6601:	
  8737                           
  8738                           ;cmd_parser.c: 18: else if(stricmp(p,"setA") == 0)
  8739  059A  3003               	movlw	low (STR_60| (0+32768))
  8740  059B  00B3               	movwf	stricmp@s2
  8741  059C  30AA               	movlw	high (STR_60| (0+32768))
  8742  059D  00B4               	movwf	stricmp@s2+1
  8743  059E  084A               	movf	parseCmd@p,w
  8744  059F  3198  204D  3185   	fcall	_stricmp
  8745  05A2  0020               	movlb	0	; select bank0
  8746  05A3  0833               	movf	?_stricmp,w
  8747  05A4  0434               	iorwf	?_stricmp+1,w
  8748  05A5  1D03               	btfss	3,2
  8749  05A6  2DA9               	goto	l6605
  8750                           
  8751                           ;cmd_parser.c: 19: s->c = CMD_SETA;
  8752  05A7  3006               	movlw	6
  8753  05A8  2EA7               	goto	L20
  8754  05A9                     l6605:	
  8755                           
  8756                           ;cmd_parser.c: 20: else if(stricmp(p,"setM") == 0)
  8757  05A9  300D               	movlw	low (STR_61| (0+32768))
  8758  05AA  00B3               	movwf	stricmp@s2
  8759  05AB  30AA               	movlw	high (STR_61| (0+32768))
  8760  05AC  00B4               	movwf	stricmp@s2+1
  8761  05AD  084A               	movf	parseCmd@p,w
  8762  05AE  3198  204D  3185   	fcall	_stricmp
  8763  05B1  0020               	movlb	0	; select bank0
  8764  05B2  0833               	movf	?_stricmp,w
  8765  05B3  0434               	iorwf	?_stricmp+1,w
  8766  05B4  1D03               	btfss	3,2
  8767  05B5  2DB8               	goto	l6609
  8768                           
  8769                           ;cmd_parser.c: 21: s->c = CMD_SETM;
  8770  05B6  3007               	movlw	7
  8771  05B7  2EA7               	goto	L20
  8772  05B8                     l6609:	
  8773                           
  8774                           ;cmd_parser.c: 22: else if(stricmp(p,"z") == 0)
  8775  05B8  303E               	movlw	low (STR_62| (0+32768))
  8776  05B9  00B3               	movwf	stricmp@s2
  8777  05BA  30AA               	movlw	high (STR_62| (0+32768))
  8778  05BB  00B4               	movwf	stricmp@s2+1
  8779  05BC  084A               	movf	parseCmd@p,w
  8780  05BD  3198  204D  3185   	fcall	_stricmp
  8781  05C0  0020               	movlb	0	; select bank0
  8782  05C1  0833               	movf	?_stricmp,w
  8783  05C2  0434               	iorwf	?_stricmp+1,w
  8784  05C3  1D03               	btfss	3,2
  8785  05C4  2DC7               	goto	l6613
  8786                           
  8787                           ;cmd_parser.c: 23: s->c = CMD_ZERO;
  8788  05C5  3008               	movlw	8
  8789  05C6  2EA7               	goto	L20
  8790  05C7                     l6613:	
  8791                           
  8792                           ;cmd_parser.c: 24: else if(stricmp(p,"drvPeak") == 0)
  8793  05C7  30B8               	movlw	low (STR_63| (0+32768))
  8794  05C8  00B3               	movwf	stricmp@s2
  8795  05C9  30A9               	movlw	high (STR_63| (0+32768))
  8796  05CA  00B4               	movwf	stricmp@s2+1
  8797  05CB  084A               	movf	parseCmd@p,w
  8798  05CC  3198  204D  3185   	fcall	_stricmp
  8799  05CF  0020               	movlb	0	; select bank0
  8800  05D0  0833               	movf	?_stricmp,w
  8801  05D1  0434               	iorwf	?_stricmp+1,w
  8802  05D2  1D03               	btfss	3,2
  8803  05D3  2DD6               	goto	l6617
  8804                           
  8805                           ;cmd_parser.c: 25: s->c = CMD_DRV_PEAK;
  8806  05D4  3009               	movlw	9
  8807  05D5  2EA7               	goto	L20
  8808  05D6                     l6617:	
  8809                           
  8810                           ;cmd_parser.c: 26: else if(stricmp(p,"drvGain") == 0)
  8811  05D6  30C0               	movlw	low (STR_64| (0+32768))
  8812  05D7  00B3               	movwf	stricmp@s2
  8813  05D8  30A9               	movlw	high (STR_64| (0+32768))
  8814  05D9  00B4               	movwf	stricmp@s2+1
  8815  05DA  084A               	movf	parseCmd@p,w
  8816  05DB  3198  204D  3185   	fcall	_stricmp
  8817  05DE  0020               	movlb	0	; select bank0
  8818  05DF  0833               	movf	?_stricmp,w
  8819  05E0  0434               	iorwf	?_stricmp+1,w
  8820  05E1  1D03               	btfss	3,2
  8821  05E2  2DE5               	goto	l6621
  8822                           
  8823                           ;cmd_parser.c: 27: s->c = CMD_DRV_GAIN;
  8824  05E3  300A               	movlw	10
  8825  05E4  2EA7               	goto	L20
  8826  05E5                     l6621:	
  8827                           
  8828                           ;cmd_parser.c: 28: else if(stricmp(p,"piezoontime") == 0)
  8829  05E5  3084               	movlw	low (STR_65| (0+32768))
  8830  05E6  00B3               	movwf	stricmp@s2
  8831  05E7  30A9               	movlw	high (STR_65| (0+32768))
  8832  05E8  00B4               	movwf	stricmp@s2+1
  8833  05E9  084A               	movf	parseCmd@p,w
  8834  05EA  3198  204D  3185   	fcall	_stricmp
  8835  05ED  0020               	movlb	0	; select bank0
  8836  05EE  0833               	movf	?_stricmp,w
  8837  05EF  0434               	iorwf	?_stricmp+1,w
  8838  05F0  1D03               	btfss	3,2
  8839  05F1  2DF4               	goto	l6625
  8840                           
  8841                           ;cmd_parser.c: 29: s->c = CMD_DRV_PIEZOONTIME;
  8842  05F2  300B               	movlw	11
  8843  05F3  2EA7               	goto	L20
  8844  05F4                     l6625:	
  8845                           
  8846                           ;cmd_parser.c: 30: else if(stricmp(p,"heaterpretime") == 0)
  8847  05F4  305D               	movlw	low (STR_66| (0+32768))
  8848  05F5  00B3               	movwf	stricmp@s2
  8849  05F6  30A9               	movlw	high (STR_66| (0+32768))
  8850  05F7  00B4               	movwf	stricmp@s2+1
  8851  05F8  084A               	movf	parseCmd@p,w
  8852  05F9  3198  204D  3185   	fcall	_stricmp
  8853  05FC  0020               	movlb	0	; select bank0
  8854  05FD  0833               	movf	?_stricmp,w
  8855  05FE  0434               	iorwf	?_stricmp+1,w
  8856  05FF  1D03               	btfss	3,2
  8857  0600  2E03               	goto	l6629
  8858                           
  8859                           ;cmd_parser.c: 31: s->c = CMD_HEATER_PRETIME;
  8860  0601  300C               	movlw	12
  8861  0602  2EA7               	goto	L20
  8862  0603                     l6629:	
  8863                           
  8864                           ;cmd_parser.c: 32: else if(stricmp(p,"heaterposttime") == 0)
  8865  0603  303F               	movlw	low (STR_67| (0+32768))
  8866  0604  00B3               	movwf	stricmp@s2
  8867  0605  30A9               	movlw	high (STR_67| (0+32768))
  8868  0606  00B4               	movwf	stricmp@s2+1
  8869  0607  084A               	movf	parseCmd@p,w
  8870  0608  3198  204D  3185   	fcall	_stricmp
  8871  060B  0020               	movlb	0	; select bank0
  8872  060C  0833               	movf	?_stricmp,w
  8873  060D  0434               	iorwf	?_stricmp+1,w
  8874  060E  1D03               	btfss	3,2
  8875  060F  2E12               	goto	l6633
  8876                           
  8877                           ;cmd_parser.c: 33: s->c = CMD_HEATER_POSTTIME;
  8878  0610  300D               	movlw	13
  8879  0611  2EA7               	goto	L20
  8880  0612                     l6633:	
  8881                           
  8882                           ;cmd_parser.c: 34: else if(stricmp(p,"ledgain") == 0)
  8883  0612  30C8               	movlw	low (STR_68| (0+32768))
  8884  0613  00B3               	movwf	stricmp@s2
  8885  0614  30A9               	movlw	high (STR_68| (0+32768))
  8886  0615  00B4               	movwf	stricmp@s2+1
  8887  0616  084A               	movf	parseCmd@p,w
  8888  0617  3198  204D  3185   	fcall	_stricmp
  8889  061A  0020               	movlb	0	; select bank0
  8890  061B  0833               	movf	?_stricmp,w
  8891  061C  0434               	iorwf	?_stricmp+1,w
  8892  061D  1D03               	btfss	3,2
  8893  061E  2E21               	goto	l6637
  8894                           
  8895                           ;cmd_parser.c: 35: s->c = CMD_HEATER_GAIN;
  8896  061F  300E               	movlw	14
  8897  0620  2EA7               	goto	L20
  8898  0621                     l6637:	
  8899                           
  8900                           ;cmd_parser.c: 36: else if(stricmp(p,"ledpwr") == 0)
  8901  0621  30F7               	movlw	low (STR_69| (0+32768))
  8902  0622  00B3               	movwf	stricmp@s2
  8903  0623  30A9               	movlw	high (STR_69| (0+32768))
  8904  0624  00B4               	movwf	stricmp@s2+1
  8905  0625  084A               	movf	parseCmd@p,w
  8906  0626  3198  204D  3185   	fcall	_stricmp
  8907  0629  0020               	movlb	0	; select bank0
  8908  062A  0833               	movf	?_stricmp,w
  8909  062B  0434               	iorwf	?_stricmp+1,w
  8910  062C  1D03               	btfss	3,2
  8911  062D  2E30               	goto	l6641
  8912                           
  8913                           ;cmd_parser.c: 37: s->c = CMD_HEATER_PWR;
  8914  062E  300F               	movlw	15
  8915  062F  2EA7               	goto	L20
  8916  0630                     l6641:	
  8917                           
  8918                           ;cmd_parser.c: 38: else if(stricmp(p,"toggleheater") == 0)
  8919  0630  306B               	movlw	low (STR_70| (0+32768))
  8920  0631  00B3               	movwf	stricmp@s2
  8921  0632  30A9               	movlw	high (STR_70| (0+32768))
  8922  0633  00B4               	movwf	stricmp@s2+1
  8923  0634  084A               	movf	parseCmd@p,w
  8924  0635  3198  204D  3185   	fcall	_stricmp
  8925  0638  0020               	movlb	0	; select bank0
  8926  0639  0833               	movf	?_stricmp,w
  8927  063A  0434               	iorwf	?_stricmp+1,w
  8928  063B  1D03               	btfss	3,2
  8929  063C  2E3F               	goto	l6645
  8930                           
  8931                           ;cmd_parser.c: 39: s->c = CMD_HEATER_TOGGLE;
  8932  063D  3010               	movlw	16
  8933  063E  2EA7               	goto	L20
  8934  063F                     l6645:	
  8935                           
  8936                           ;cmd_parser.c: 40: else if(stricmp(p,"timeheater") == 0)
  8937  063F  3090               	movlw	low (STR_71| (0+32768))
  8938  0640  00B3               	movwf	stricmp@s2
  8939  0641  30A9               	movlw	high (STR_71| (0+32768))
  8940  0642  00B4               	movwf	stricmp@s2+1
  8941  0643  084A               	movf	parseCmd@p,w
  8942  0644  3198  204D  3185   	fcall	_stricmp
  8943  0647  0020               	movlb	0	; select bank0
  8944  0648  0833               	movf	?_stricmp,w
  8945  0649  0434               	iorwf	?_stricmp+1,w
  8946  064A  1D03               	btfss	3,2
  8947  064B  2E4E               	goto	l6649
  8948                           
  8949                           ;cmd_parser.c: 41: s->c = CMD_HEATER_TIMED;
  8950  064C  3011               	movlw	17
  8951  064D  2EA7               	goto	L20
  8952  064E                     l6649:	
  8953                           
  8954                           ;cmd_parser.c: 42: else if(stricmp(p,"getA") == 0)
  8955  064E  30FE               	movlw	low (STR_72| (0+32768))
  8956  064F  00B3               	movwf	stricmp@s2
  8957  0650  30A9               	movlw	high (STR_72| (0+32768))
  8958  0651  00B4               	movwf	stricmp@s2+1
  8959  0652  084A               	movf	parseCmd@p,w
  8960  0653  3198  204D  3185   	fcall	_stricmp
  8961  0656  0020               	movlb	0	; select bank0
  8962  0657  0833               	movf	?_stricmp,w
  8963  0658  0434               	iorwf	?_stricmp+1,w
  8964  0659  1D03               	btfss	3,2
  8965  065A  2E5D               	goto	l6653
  8966                           
  8967                           ;cmd_parser.c: 43: s->c = CMD_GET_ACTIVE;
  8968  065B  3012               	movlw	18
  8969  065C  2EA7               	goto	L20
  8970  065D                     l6653:	
  8971                           
  8972                           ;cmd_parser.c: 44: else if(stricmp(p,"getM") == 0)
  8973  065D  3008               	movlw	low (STR_73| (0+32768))
  8974  065E  00B3               	movwf	stricmp@s2
  8975  065F  30AA               	movlw	high (STR_73| (0+32768))
  8976  0660  00B4               	movwf	stricmp@s2+1
  8977  0661  084A               	movf	parseCmd@p,w
  8978  0662  3198  204D  3185   	fcall	_stricmp
  8979  0665  0020               	movlb	0	; select bank0
  8980  0666  0833               	movf	?_stricmp,w
  8981  0667  0434               	iorwf	?_stricmp+1,w
  8982  0668  1D03               	btfss	3,2
  8983  0669  2E6C               	goto	l6657
  8984                           
  8985                           ;cmd_parser.c: 45: s->c = CMD_GET_MOVABLE;
  8986  066A  3013               	movlw	19
  8987  066B  2EA7               	goto	L20
  8988  066C                     l6657:	
  8989                           
  8990                           ;cmd_parser.c: 46: else if(stricmp(p,"mstatus") == 0)
  8991  066C  30D0               	movlw	low (STR_74| (0+32768))
  8992  066D  00B3               	movwf	stricmp@s2
  8993  066E  30A9               	movlw	high (STR_74| (0+32768))
  8994  066F  00B4               	movwf	stricmp@s2+1
  8995  0670  084A               	movf	parseCmd@p,w
  8996  0671  3198  204D  3185   	fcall	_stricmp
  8997  0674  0020               	movlb	0	; select bank0
  8998  0675  0833               	movf	?_stricmp,w
  8999  0676  0434               	iorwf	?_stricmp+1,w
  9000  0677  1D03               	btfss	3,2
  9001  0678  2E7B               	goto	l6661
  9002                           
  9003                           ;cmd_parser.c: 47: s->c = CMD_MOTION_STATUS;
  9004  0679  3014               	movlw	20
  9005  067A  2EA7               	goto	L20
  9006  067B                     l6661:	
  9007                           
  9008                           ;cmd_parser.c: 48: else if(stricmp(p,"domove") == 0)
  9009  067B  30F0               	movlw	low (STR_75| (0+32768))
  9010  067C  00B3               	movwf	stricmp@s2
  9011  067D  30A9               	movlw	high (STR_75| (0+32768))
  9012  067E  00B4               	movwf	stricmp@s2+1
  9013  067F  084A               	movf	parseCmd@p,w
  9014  0680  3198  204D  3185   	fcall	_stricmp
  9015  0683  0020               	movlb	0	; select bank0
  9016  0684  0833               	movf	?_stricmp,w
  9017  0685  0434               	iorwf	?_stricmp+1,w
  9018  0686  1D03               	btfss	3,2
  9019  0687  2E8A               	goto	l6665
  9020                           
  9021                           ;cmd_parser.c: 49: s->c = CMD_DOMOVE;
  9022  0688  3015               	movlw	21
  9023  0689  2EA7               	goto	L20
  9024  068A                     l6665:	
  9025                           
  9026                           ;cmd_parser.c: 50: else if(stricmp(p,"comm") == 0)
  9027  068A  3017               	movlw	low (STR_76| (0+32768))
  9028  068B  00B3               	movwf	stricmp@s2
  9029  068C  30AA               	movlw	high (STR_76| (0+32768))
  9030  068D  00B4               	movwf	stricmp@s2+1
  9031  068E  084A               	movf	parseCmd@p,w
  9032  068F  3198  204D  3185   	fcall	_stricmp
  9033  0692  0020               	movlb	0	; select bank0
  9034  0693  0833               	movf	?_stricmp,w
  9035  0694  0434               	iorwf	?_stricmp+1,w
  9036  0695  1D03               	btfss	3,2
  9037  0696  2E99               	goto	l6669
  9038                           
  9039                           ;cmd_parser.c: 51: s->c = CMD_COMM_CHECK;
  9040  0697  3016               	movlw	22
  9041  0698  2EA7               	goto	L20
  9042  0699                     l6669:	
  9043                           
  9044                           ;cmd_parser.c: 52: else if(stricmp(p,"ping") == 0)
  9045  0699  3012               	movlw	low (STR_77| (0+32768))
  9046  069A  00B3               	movwf	stricmp@s2
  9047  069B  30AA               	movlw	high (STR_77| (0+32768))
  9048  069C  00B4               	movwf	stricmp@s2+1
  9049  069D  084A               	movf	parseCmd@p,w
  9050  069E  3198  204D  3185   	fcall	_stricmp
  9051  06A1  0020               	movlb	0	; select bank0
  9052  06A2  0833               	movf	?_stricmp,w
  9053  06A3  0434               	iorwf	?_stricmp+1,w
  9054  06A4  1D03               	btfss	3,2
  9055  06A5  2EAF               	goto	l6673
  9056                           
  9057                           ;cmd_parser.c: 53: s->c = CMD_PING;
  9058  06A6  3017               	movlw	23
  9059  06A7                     L20:	
  9060  06A7  00C6               	movwf	??_parseCmd
  9061  06A8  0845               	movf	parseCmd@s,w
  9062  06A9  0086               	movwf	6
  9063  06AA  3001               	movlw	1	; select bank2/3
  9064  06AB  0087               	movwf	7
  9065  06AC  0846               	movf	??_parseCmd,w
  9066  06AD  0081               	movwf	1
  9067  06AE  2EDA               	goto	l6683
  9068  06AF                     l6673:	
  9069                           
  9070                           ;cmd_parser.c: 56: else
  9071                           ;cmd_parser.c: 57: s->c = CMD_NONE;
  9072  06AF  0845               	movf	parseCmd@s,w
  9073  06B0  0086               	movwf	6
  9074  06B1  3001               	movlw	1	; select bank2/3
  9075  06B2  0087               	movwf	7
  9076  06B3  0181               	clrf	1
  9077                           
  9078                           ;cmd_parser.c: 58: }
  9079  06B4  2EDA               	goto	l6683
  9080  06B5                     l6675:	
  9081                           
  9082                           ;cmd_parser.c: 59: else if(paramIter == 1){
  9083  06B5  0348               	decf	parseCmd@paramIter,w
  9084  06B6  0449               	iorwf	parseCmd@paramIter+1,w
  9085  06B7  1D03               	btfss	3,2
  9086  06B8  2EC7               	goto	l6679
  9087                           
  9088                           ;cmd_parser.c: 60: s->p1.paramI = atoi(p);
  9089  06B9  084A               	movf	parseCmd@p,w
  9090  06BA  319F  278F  3185   	fcall	_atoi
  9091  06BD  0020               	movlb	0	; select bank0
  9092  06BE  0A45               	incf	parseCmd@s,w
  9093  06BF  0086               	movwf	6
  9094  06C0  3001               	movlw	1	; select bank2/3
  9095  06C1  0087               	movwf	7
  9096  06C2  0837               	movf	?_atoi,w
  9097  06C3  3FC0               	movwi [0]fsr1
  9098  06C4  0838               	movf	?_atoi+1,w
  9099  06C5  3FC1               	movwi [1]fsr1
  9100                           
  9101                           ;cmd_parser.c: 61: }
  9102  06C6  2EDA               	goto	l6683
  9103  06C7                     l6679:	
  9104                           
  9105                           ;cmd_parser.c: 62: else if(paramIter == 2){
  9106  06C7  3002               	movlw	2
  9107  06C8  0648               	xorwf	parseCmd@paramIter,w
  9108  06C9  0449               	iorwf	parseCmd@paramIter+1,w
  9109  06CA  1D03               	btfss	3,2
  9110  06CB  2EDA               	goto	l6683
  9111                           
  9112                           ;cmd_parser.c: 64: s->p2.paramI = atoi(p);
  9113  06CC  084A               	movf	parseCmd@p,w
  9114  06CD  319F  278F  3185   	fcall	_atoi
  9115  06D0  0020               	movlb	0	; select bank0
  9116  06D1  0845               	movf	parseCmd@s,w
  9117  06D2  3E0B               	addlw	11
  9118  06D3  0086               	movwf	6
  9119  06D4  3001               	movlw	1	; select bank2/3
  9120  06D5  0087               	movwf	7
  9121  06D6  0837               	movf	?_atoi,w
  9122  06D7  3FC0               	movwi [0]fsr1
  9123  06D8  0838               	movf	?_atoi+1,w
  9124  06D9  3FC1               	movwi [1]fsr1
  9125  06DA                     l6683:	
  9126                           
  9127                           ;cmd_parser.c: 65: }
  9128                           ;cmd_parser.c: 67: paramIter++;
  9129  06DA  3001               	movlw	1
  9130  06DB  07C8               	addwf	parseCmd@paramIter,f
  9131  06DC  3000               	movlw	0
  9132  06DD  3DC9               	addwfc	parseCmd@paramIter+1,f
  9133  06DE  30EE               	movlw	low ((STR_38+6)| (0+32768))
  9134  06DF  00BF               	movwf	strtok@s2
  9135  06E0  30A9               	movlw	high ((STR_38+6)| (0+32768))
  9136  06E1  00C0               	movwf	strtok@s2+1
  9137  06E2  3000               	movlw	0
  9138  06E3  2D4B               	goto	L21
  9139  06E4                     __end_of_parseCmd:	
  9140                           
  9141                           	psect	text2
  9142  1A90                     __ptext2:	
  9143 ;; *************** function _strtok *****************
  9144 ;; Defined at:
  9145 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtok.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;  s1              1    wreg     PTR unsigned char 
  9148 ;;		 -> readdata(20), NULL(0), 
  9149 ;;  s2              2   31[BANK0 ] PTR const unsigned char 
  9150 ;;		 -> STR_55(2), STR_54(2), 
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;  s1              1   36[BANK0 ] PTR unsigned char 
  9153 ;;		 -> readdata(20), NULL(0), 
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      PTR unsigned char 
  9156 ;; Registers used:
  9157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9164 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9165 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9166 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9167 ;;Total ram usage:        6 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    8
  9170 ;; This function calls:
  9171 ;;		_strcspn
  9172 ;;		_strspn
  9173 ;; This function is called by:
  9174 ;;		_parseCmd
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178                           
  9179                           ;psect for function _strtok
  9180  1A90                     _strtok:	
  9181                           
  9182                           ;incstack = 0
  9183                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9184                           ;strtok@s1 stored from wreg
  9185  1A90  0020               	movlb	0	; select bank0
  9186  1A91  00C4               	movwf	strtok@s1
  9187  1A92  0844               	movf	strtok@s1,w
  9188  1A93  1D03               	btfss	3,2
  9189  1A94  2A99               	goto	l6267
  9190  1A95  0854               	movf	strtok@sp,w
  9191  1A96  00C1               	movwf	??_strtok
  9192  1A97  0841               	movf	??_strtok,w
  9193  1A98  00C4               	movwf	strtok@s1
  9194  1A99                     l6267:	
  9195  1A99  0844               	movf	strtok@s1,w
  9196  1A9A  1D03               	btfss	3,2
  9197  1A9B  2A9E               	goto	l6273
  9198  1A9C  3000               	movlw	0
  9199  1A9D  0008               	return
  9200  1A9E                     l6273:	
  9201  1A9E  0840               	movf	strtok@s2+1,w
  9202  1A9F  00B9               	movwf	strspn@s2+1
  9203  1AA0  083F               	movf	strtok@s2,w
  9204  1AA1  00B8               	movwf	strspn@s2
  9205  1AA2  0844               	movf	strtok@s1,w
  9206  1AA3  31A7  27D0  319A   	fcall	_strspn
  9207  1AA6  0020               	movlb	0	; select bank0
  9208  1AA7  0838               	movf	?_strspn,w
  9209  1AA8  00C1               	movwf	??_strtok
  9210  1AA9  0841               	movf	??_strtok,w
  9211  1AAA  07C4               	addwf	strtok@s1,f
  9212  1AAB  0844               	movf	strtok@s1,w
  9213  1AAC  0086               	movwf	6
  9214  1AAD  3001               	movlw	1	; select bank2/3
  9215  1AAE  0087               	movwf	7
  9216  1AAF  0801               	movf	1,w
  9217  1AB0  1D03               	btfss	3,2
  9218  1AB1  2AB5               	goto	l6281
  9219  1AB2  01D4               	clrf	strtok@sp
  9220  1AB3  3000               	movlw	0
  9221  1AB4  0008               	return
  9222  1AB5                     l6281:	
  9223  1AB5  0840               	movf	strtok@s2+1,w
  9224  1AB6  00B9               	movwf	strcspn@s2+1
  9225  1AB7  083F               	movf	strtok@s2,w
  9226  1AB8  00B8               	movwf	strcspn@s2
  9227  1AB9  0844               	movf	strtok@s1,w
  9228  1ABA  31A7  27A0  319A   	fcall	_strcspn
  9229  1ABD  0020               	movlb	0	; select bank0
  9230  1ABE  0838               	movf	?_strcspn,w
  9231  1ABF  00C1               	movwf	??_strtok
  9232  1AC0  0839               	movf	?_strcspn+1,w
  9233  1AC1  00C2               	movwf	??_strtok+1
  9234  1AC2  0844               	movf	strtok@s1,w
  9235  1AC3  0741               	addwf	??_strtok,w
  9236  1AC4  00C3               	movwf	??_strtok+2
  9237  1AC5  0843               	movf	??_strtok+2,w
  9238  1AC6  00D4               	movwf	strtok@sp
  9239  1AC7  0854               	movf	strtok@sp,w
  9240  1AC8  0086               	movwf	6
  9241  1AC9  3001               	movlw	1	; select bank2/3
  9242  1ACA  0087               	movwf	7
  9243  1ACB  0801               	movf	1,w
  9244  1ACC  1903               	btfsc	3,2
  9245  1ACD  2AD8               	goto	l6289
  9246  1ACE  0854               	movf	strtok@sp,w
  9247  1ACF  0086               	movwf	6
  9248  1AD0  3001               	movlw	1	; select bank2/3
  9249  1AD1  0087               	movwf	7
  9250  1AD2  0181               	clrf	1
  9251  1AD3  3001               	movlw	1
  9252  1AD4  00C1               	movwf	??_strtok
  9253  1AD5  0841               	movf	??_strtok,w
  9254  1AD6  07D4               	addwf	strtok@sp,f
  9255  1AD7  2AD9               	goto	l6291
  9256  1AD8                     l6289:	
  9257  1AD8  01D4               	clrf	strtok@sp
  9258  1AD9                     l6291:	
  9259  1AD9  0844               	movf	strtok@s1,w
  9260  1ADA  0008               	return
  9261  1ADB                     __end_of_strtok:	
  9262                           
  9263                           	psect	text3
  9264  27D0                     __ptext3:	
  9265 ;; *************** function _strspn *****************
  9266 ;; Defined at:
  9267 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strspn.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  s1              1    wreg     PTR const unsigned char 
  9270 ;;		 -> readdata(20), NULL(0), 
  9271 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9272 ;;		 -> STR_55(2), STR_54(2), 
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9275 ;;		 -> readdata(20), NULL(0), 
  9276 ;;  i               2   28[BANK0 ] unsigned int 
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  2   24[BANK0 ] unsigned int 
  9279 ;; Registers used:
  9280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9287 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9288 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9289 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9290 ;;Total ram usage:        7 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; Hardware stack levels required when called:    7
  9293 ;; This function calls:
  9294 ;;		_strchr
  9295 ;; This function is called by:
  9296 ;;		_strtok
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           
  9301                           ;psect for function _strspn
  9302  27D0                     _strspn:	
  9303                           
  9304                           ;incstack = 0
  9305                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9306                           ;strspn@s1 stored from wreg
  9307  27D0  0020               	movlb	0	; select bank0
  9308  27D1  00BE               	movwf	strspn@s1
  9309  27D2  01BC               	clrf	strspn@i
  9310  27D3  01BD               	clrf	strspn@i+1
  9311  27D4  2FDD               	goto	l5741
  9312  27D5                     l5739:	
  9313  27D5  3001               	movlw	1
  9314  27D6  00BA               	movwf	??_strspn
  9315  27D7  083A               	movf	??_strspn,w
  9316  27D8  07BE               	addwf	strspn@s1,f
  9317  27D9  3001               	movlw	1
  9318  27DA  07BC               	addwf	strspn@i,f
  9319  27DB  3000               	movlw	0
  9320  27DC  3DBD               	addwfc	strspn@i+1,f
  9321  27DD                     l5741:	
  9322  27DD  083E               	movf	strspn@s1,w
  9323  27DE  0086               	movwf	6
  9324  27DF  3001               	movlw	1	; select bank2/3
  9325  27E0  0087               	movwf	7
  9326  27E1  0801               	movf	1,w
  9327  27E2  1903               	btfsc	3,2
  9328  27E3  2FFB               	goto	l5745
  9329  27E4  0839               	movf	strspn@s2+1,w
  9330  27E5  00B2               	movwf	strchr@ptr+1
  9331  27E6  0838               	movf	strspn@s2,w
  9332  27E7  00B1               	movwf	strchr@ptr
  9333  27E8  083E               	movf	strspn@s1,w
  9334  27E9  0086               	movwf	6
  9335  27EA  3001               	movlw	1	; select bank2/3
  9336  27EB  0087               	movwf	7
  9337  27EC  0801               	movf	1,w
  9338  27ED  00BA               	movwf	??_strspn
  9339  27EE  01BB               	clrf	??_strspn+1
  9340  27EF  083A               	movf	??_strspn,w
  9341  27F0  00B3               	movwf	strchr@chr
  9342  27F1  083B               	movf	??_strspn+1,w
  9343  27F2  00B4               	movwf	strchr@chr+1
  9344  27F3  3198  2000  31A7   	fcall	_strchr
  9345  27F6  0020               	movlb	0	; select bank0
  9346  27F7  0831               	movf	?_strchr,w
  9347  27F8  0432               	iorwf	?_strchr+1,w
  9348  27F9  1D03               	btfss	3,2
  9349  27FA  2FD5               	goto	l5739
  9350  27FB                     l5745:	
  9351  27FB  083D               	movf	strspn@i+1,w
  9352  27FC  00B9               	movwf	?_strspn+1
  9353  27FD  083C               	movf	strspn@i,w
  9354  27FE  00B8               	movwf	?_strspn
  9355  27FF  0008               	return
  9356  2800                     __end_of_strspn:	
  9357                           
  9358                           	psect	text4
  9359  27A0                     __ptext4:	
  9360 ;; *************** function _strcspn *****************
  9361 ;; Defined at:
  9362 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcspn.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  s1              1    wreg     PTR const unsigned char 
  9365 ;;		 -> readdata(20), NULL(0), 
  9366 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9367 ;;		 -> STR_55(2), STR_54(2), 
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9370 ;;		 -> readdata(20), NULL(0), 
  9371 ;;  i               2   28[BANK0 ] unsigned int 
  9372 ;; Return value:  Size  Location     Type
  9373 ;;                  2   24[BANK0 ] unsigned int 
  9374 ;; Registers used:
  9375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9376 ;; Tracked objects:
  9377 ;;		On entry : 0/0
  9378 ;;		On exit  : 0/0
  9379 ;;		Unchanged: 0/0
  9380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9381 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9382 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9383 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9384 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9385 ;;Total ram usage:        7 bytes
  9386 ;; Hardware stack levels used:    1
  9387 ;; Hardware stack levels required when called:    7
  9388 ;; This function calls:
  9389 ;;		_strchr
  9390 ;; This function is called by:
  9391 ;;		_strtok
  9392 ;; This function uses a non-reentrant model
  9393 ;;
  9394                           
  9395                           
  9396                           ;psect for function _strcspn
  9397  27A0                     _strcspn:	
  9398                           
  9399                           ;incstack = 0
  9400                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9401                           ;strcspn@s1 stored from wreg
  9402  27A0  0020               	movlb	0	; select bank0
  9403  27A1  00BE               	movwf	strcspn@s1
  9404  27A2  01BC               	clrf	strcspn@i
  9405  27A3  01BD               	clrf	strcspn@i+1
  9406  27A4  2FAD               	goto	l5753
  9407  27A5                     l5751:	
  9408  27A5  3001               	movlw	1
  9409  27A6  00BA               	movwf	??_strcspn
  9410  27A7  083A               	movf	??_strcspn,w
  9411  27A8  07BE               	addwf	strcspn@s1,f
  9412  27A9  3001               	movlw	1
  9413  27AA  07BC               	addwf	strcspn@i,f
  9414  27AB  3000               	movlw	0
  9415  27AC  3DBD               	addwfc	strcspn@i+1,f
  9416  27AD                     l5753:	
  9417  27AD  083E               	movf	strcspn@s1,w
  9418  27AE  0086               	movwf	6
  9419  27AF  3001               	movlw	1	; select bank2/3
  9420  27B0  0087               	movwf	7
  9421  27B1  0801               	movf	1,w
  9422  27B2  1903               	btfsc	3,2
  9423  27B3  2FCB               	goto	l5757
  9424  27B4  0839               	movf	strcspn@s2+1,w
  9425  27B5  00B2               	movwf	strchr@ptr+1
  9426  27B6  0838               	movf	strcspn@s2,w
  9427  27B7  00B1               	movwf	strchr@ptr
  9428  27B8  083E               	movf	strcspn@s1,w
  9429  27B9  0086               	movwf	6
  9430  27BA  3001               	movlw	1	; select bank2/3
  9431  27BB  0087               	movwf	7
  9432  27BC  0801               	movf	1,w
  9433  27BD  00BA               	movwf	??_strcspn
  9434  27BE  01BB               	clrf	??_strcspn+1
  9435  27BF  083A               	movf	??_strcspn,w
  9436  27C0  00B3               	movwf	strchr@chr
  9437  27C1  083B               	movf	??_strcspn+1,w
  9438  27C2  00B4               	movwf	strchr@chr+1
  9439  27C3  3198  2000  31A7   	fcall	_strchr
  9440  27C6  0020               	movlb	0	; select bank0
  9441  27C7  0831               	movf	?_strchr,w
  9442  27C8  0432               	iorwf	?_strchr+1,w
  9443  27C9  1903               	btfsc	3,2
  9444  27CA  2FA5               	goto	l5751
  9445  27CB                     l5757:	
  9446  27CB  083D               	movf	strcspn@i+1,w
  9447  27CC  00B9               	movwf	?_strcspn+1
  9448  27CD  083C               	movf	strcspn@i,w
  9449  27CE  00B8               	movwf	?_strcspn
  9450  27CF  0008               	return
  9451  27D0                     __end_of_strcspn:	
  9452                           
  9453                           	psect	text5
  9454  1800                     __ptext5:	
  9455 ;; *************** function _strchr *****************
  9456 ;; Defined at:
  9457 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  9458 ;; Parameters:    Size  Location     Type
  9459 ;;  ptr             2   17[BANK0 ] PTR const unsigned char 
  9460 ;;		 -> STR_55(2), STR_54(2), 
  9461 ;;  chr             2   19[BANK0 ] int 
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;		None
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  2   17[BANK0 ] PTR unsigned char 
  9466 ;; Registers used:
  9467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9473 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9475 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9476 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9477 ;;Total ram usage:        7 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; Hardware stack levels required when called:    6
  9480 ;; This function calls:
  9481 ;;		Nothing
  9482 ;; This function is called by:
  9483 ;;		_strcspn
  9484 ;;		_strspn
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           
  9489                           ;psect for function _strchr
  9490  1800                     _strchr:	
  9491  1800                     l2070:	
  9492                           ;incstack = 0
  9493                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  9494                           
  9495  1800  0020               	movlb	0	; select bank0
  9496  1801  0831               	movf	strchr@ptr,w
  9497  1802  0084               	movwf	4
  9498  1803  0832               	movf	strchr@ptr+1,w
  9499  1804  0085               	movwf	5
  9500  1805  0800               	movf	0,w	;code access
  9501  1806  0633               	xorwf	strchr@chr,w
  9502  1807  1903               	btfsc	3,2
  9503  1808  0008               	return
  9504  1809  0832               	movf	strchr@ptr+1,w
  9505  180A  00B6               	movwf	??_strchr+1
  9506  180B  0831               	movf	strchr@ptr,w
  9507  180C  00B5               	movwf	??_strchr
  9508  180D  0AB1               	incf	strchr@ptr,f
  9509  180E  1903               	skipnz
  9510  180F  0AB2               	incf	strchr@ptr+1,f
  9511  1810  0835               	movf	??_strchr,w
  9512  1811  0084               	movwf	4
  9513  1812  0836               	movf	??_strchr+1,w
  9514  1813  0085               	movwf	5
  9515  1814  0012               	moviw fsr0++
  9516  1815  1D03               	btfss	3,2
  9517  1816  2800               	goto	l2070
  9518  1817  01B1               	clrf	?_strchr
  9519  1818  01B2               	clrf	?_strchr+1
  9520  1819  0008               	return
  9521  181A                     __end_of_strchr:	
  9522                           
  9523                           	psect	text6
  9524  184D                     __ptext6:	
  9525 ;; *************** function _stricmp *****************
  9526 ;; Defined at:
  9527 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\stricmp.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;  s1              1    wreg     PTR const unsigned char 
  9530 ;;		 -> readdata(20), NULL(0), 
  9531 ;;  s2              2   19[BANK0 ] PTR const unsigned char 
  9532 ;;		 -> STR_77(5), STR_76(5), STR_75(7), STR_74(8), 
  9533 ;;		 -> STR_73(5), STR_72(5), STR_71(11), STR_70(13), 
  9534 ;;		 -> STR_69(7), STR_68(8), STR_67(15), STR_66(14), 
  9535 ;;		 -> STR_65(12), STR_64(8), STR_63(8), STR_62(2), 
  9536 ;;		 -> STR_61(5), STR_60(5), STR_59(2), STR_58(4), 
  9537 ;;		 -> STR_57(4), STR_56(4), 
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;  s1              1   24[BANK0 ] PTR const unsigned char 
  9540 ;;		 -> readdata(20), NULL(0), 
  9541 ;;  r               1   23[BANK0 ] char 
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  2   19[BANK0 ] int 
  9544 ;; Registers used:
  9545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9552 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9553 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9554 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9555 ;;Total ram usage:        6 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:    7
  9558 ;; This function calls:
  9559 ;;		_toupper
  9560 ;; This function is called by:
  9561 ;;		_parseCmd
  9562 ;; This function uses a non-reentrant model
  9563 ;;
  9564                           
  9565                           
  9566                           ;psect for function _stricmp
  9567  184D                     _stricmp:	
  9568                           
  9569                           ;incstack = 0
  9570                           ; Regs used in _stricmp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9571                           ;stricmp@s1 stored from wreg
  9572  184D  0020               	movlb	0	; select bank0
  9573  184E  00B8               	movwf	stricmp@s1
  9574  184F  2858               	goto	l6299
  9575  1850                     l6297:	
  9576  1850  3001               	movlw	1
  9577  1851  00B5               	movwf	??_stricmp
  9578  1852  0835               	movf	??_stricmp,w
  9579  1853  07B8               	addwf	stricmp@s1,f
  9580  1854  3001               	movlw	1
  9581  1855  07B3               	addwf	stricmp@s2,f
  9582  1856  3000               	movlw	0
  9583  1857  3DB4               	addwfc	stricmp@s2+1,f
  9584  1858                     l6299:	
  9585  1858  0833               	movf	stricmp@s2,w
  9586  1859  0084               	movwf	4
  9587  185A  0834               	movf	stricmp@s2+1,w
  9588  185B  0085               	movwf	5
  9589  185C  0800               	movf	0,w	;code access
  9590  185D  31A3  233E  3198   	fcall	_toupper
  9591  1860  3AFF               	xorlw	255
  9592  1861  3E01               	addlw	1
  9593  1862  0020               	movlb	0	; select bank0
  9594  1863  00B5               	movwf	??_stricmp
  9595  1864  0838               	movf	stricmp@s1,w
  9596  1865  0086               	movwf	6
  9597  1866  3001               	movlw	1	; select bank2/3
  9598  1867  0087               	movwf	7
  9599  1868  0801               	movf	1,w
  9600  1869  31A3  233E  3198   	fcall	_toupper
  9601  186C  0020               	movlb	0	; select bank0
  9602  186D  0735               	addwf	??_stricmp,w
  9603  186E  00B6               	movwf	??_stricmp+1
  9604  186F  0836               	movf	??_stricmp+1,w
  9605  1870  00B7               	movwf	stricmp@r
  9606  1871  0837               	movf	stricmp@r,w
  9607  1872  1D03               	btfss	3,2
  9608  1873  287B               	goto	l6303
  9609  1874  0838               	movf	stricmp@s1,w
  9610  1875  0086               	movwf	6
  9611  1876  3001               	movlw	1	; select bank2/3
  9612  1877  0087               	movwf	7
  9613  1878  0801               	movf	1,w
  9614  1879  1D03               	btfss	3,2
  9615  187A  2850               	goto	l6297
  9616  187B                     l6303:	
  9617  187B  0837               	movf	stricmp@r,w
  9618  187C  00B3               	movwf	?_stricmp
  9619  187D  01B4               	clrf	?_stricmp+1
  9620  187E  1BB3               	btfsc	?_stricmp,7
  9621  187F  03B4               	decf	?_stricmp+1,f
  9622  1880  0008               	return
  9623  1881                     __end_of_stricmp:	
  9624                           
  9625                           	psect	text7
  9626  233E                     __ptext7:	
  9627 ;; *************** function _toupper *****************
  9628 ;; Defined at:
  9629 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;  c               1    wreg     unsigned char 
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;  c               1   18[BANK0 ] unsigned char 
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  1    wreg      unsigned char 
  9636 ;; Registers used:
  9637 ;;		wreg, status,2, status,0
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9644 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9645 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9646 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9647 ;;Total ram usage:        2 bytes
  9648 ;; Hardware stack levels used:    1
  9649 ;; Hardware stack levels required when called:    6
  9650 ;; This function calls:
  9651 ;;		Nothing
  9652 ;; This function is called by:
  9653 ;;		_stricmp
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           
  9658                           ;psect for function _toupper
  9659  233E                     _toupper:	
  9660                           
  9661                           ;incstack = 0
  9662                           ; Regs used in _toupper: [wreg+status,2+status,0]
  9663                           ;toupper@c stored from wreg
  9664  233E  0020               	movlb	0	; select bank0
  9665  233F  00B2               	movwf	toupper@c
  9666  2340  307B               	movlw	123
  9667  2341  0232               	subwf	toupper@c,w
  9668  2342  1803               	skipnc
  9669  2343  2B4C               	goto	l5733
  9670  2344  3061               	movlw	97
  9671  2345  0232               	subwf	toupper@c,w
  9672  2346  1C03               	skipc
  9673  2347  2B4C               	goto	l5733
  9674  2348  30DF               	movlw	223
  9675  2349  00B1               	movwf	??_toupper
  9676  234A  0831               	movf	??_toupper,w
  9677  234B  05B2               	andwf	toupper@c,f
  9678  234C                     l5733:	
  9679  234C  0832               	movf	toupper@c,w
  9680  234D  0008               	return
  9681  234E                     __end_of_toupper:	
  9682                           
  9683                           	psect	text8
  9684  1F8F                     __ptext8:	
  9685 ;; *************** function _atoi *****************
  9686 ;; Defined at:
  9687 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;  s               1    wreg     PTR const unsigned char 
  9690 ;;		 -> readdata(20), NULL(0), 
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;  s               1   30[BANK0 ] PTR const unsigned char 
  9693 ;;		 -> readdata(20), NULL(0), 
  9694 ;;  a               2   28[BANK0 ] int 
  9695 ;;  sign            1   27[BANK0 ] unsigned char 
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  2   23[BANK0 ] int 
  9698 ;; Registers used:
  9699 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9705 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9706 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9707 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9708 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9709 ;;Total ram usage:        8 bytes
  9710 ;; Hardware stack levels used:    1
  9711 ;; Hardware stack levels required when called:    7
  9712 ;; This function calls:
  9713 ;;		___wmul
  9714 ;;		_isdigit
  9715 ;; This function is called by:
  9716 ;;		_parseCmd
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           
  9721                           ;psect for function _atoi
  9722  1F8F                     _atoi:	
  9723                           
  9724                           ;incstack = 0
  9725                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9726                           ;atoi@s stored from wreg
  9727  1F8F  0020               	movlb	0	; select bank0
  9728  1F90  00BE               	movwf	atoi@s
  9729  1F91                     l6311:	
  9730  1F91  083E               	movf	atoi@s,w
  9731  1F92  0086               	movwf	6
  9732  1F93  3001               	movlw	1	; select bank2/3
  9733  1F94  0087               	movwf	7
  9734  1F95  3020               	movlw	32
  9735  1F96  0601               	xorwf	1,w
  9736  1F97  1D03               	btfss	3,2
  9737  1F98  2F9E               	goto	l6313
  9738  1F99                     l6309:	
  9739  1F99  3001               	movlw	1
  9740  1F9A  00B9               	movwf	??_atoi
  9741  1F9B  0839               	movf	??_atoi,w
  9742  1F9C  07BE               	addwf	atoi@s,f
  9743  1F9D  2F91               	goto	l6311
  9744  1F9E                     l6313:	
  9745  1F9E  083E               	movf	atoi@s,w
  9746  1F9F  0086               	movwf	6
  9747  1FA0  3001               	movlw	1	; select bank2/3
  9748  1FA1  0087               	movwf	7
  9749  1FA2  3009               	movlw	9
  9750  1FA3  0601               	xorwf	1,w
  9751  1FA4  1903               	btfsc	3,2
  9752  1FA5  2F99               	goto	l6309
  9753  1FA6  01BC               	clrf	atoi@a
  9754  1FA7  01BD               	clrf	atoi@a+1
  9755  1FA8  01BB               	clrf	atoi@sign
  9756  1FA9  083E               	movf	atoi@s,w
  9757  1FAA  0086               	movwf	6
  9758  1FAB  3001               	movlw	1	; select bank2/3
  9759  1FAC  0087               	movwf	7
  9760  1FAD  302D               	movlw	45
  9761  1FAE  0601               	xorwf	1,w
  9762  1FAF  1D03               	btfss	3,2
  9763  1FB0  2FB6               	goto	l6321
  9764  1FB1  3001               	movlw	1
  9765  1FB2  00B9               	movwf	??_atoi
  9766  1FB3  0839               	movf	??_atoi,w
  9767  1FB4  07BB               	addwf	atoi@sign,f
  9768  1FB5  2FBE               	goto	l6327
  9769  1FB6                     l6321:	
  9770  1FB6  083E               	movf	atoi@s,w
  9771  1FB7  0086               	movwf	6
  9772  1FB8  3001               	movlw	1	; select bank2/3
  9773  1FB9  0087               	movwf	7
  9774  1FBA  302B               	movlw	43
  9775  1FBB  0601               	xorwf	1,w
  9776  1FBC  1D03               	btfss	3,2
  9777  1FBD  2FC2               	goto	l6329
  9778  1FBE                     l6327:	
  9779  1FBE  3001               	movlw	1
  9780  1FBF  00B9               	movwf	??_atoi
  9781  1FC0  0839               	movf	??_atoi,w
  9782  1FC1  07BE               	addwf	atoi@s,f
  9783  1FC2                     l6329:	
  9784  1FC2  083E               	movf	atoi@s,w
  9785  1FC3  0086               	movwf	6
  9786  1FC4  3001               	movlw	1	; select bank2/3
  9787  1FC5  0087               	movwf	7
  9788  1FC6  0801               	movf	1,w
  9789  1FC7  31A3  232F  319F   	fcall	_isdigit
  9790  1FCA  1C03               	btfss	3,0
  9791  1FCB  2FEB               	goto	l6331
  9792  1FCC  0020               	movlb	0	; select bank0
  9793  1FCD  083D               	movf	atoi@a+1,w
  9794  1FCE  00B2               	movwf	___wmul@multiplier+1
  9795  1FCF  083C               	movf	atoi@a,w
  9796  1FD0  00B1               	movwf	___wmul@multiplier
  9797  1FD1  300A               	movlw	10
  9798  1FD2  00B3               	movwf	___wmul@multiplicand
  9799  1FD3  3000               	movlw	0
  9800  1FD4  00B4               	movwf	___wmul@multiplicand+1
  9801  1FD5  31A4  2443  319F   	fcall	___wmul
  9802  1FD8  0020               	movlb	0	; select bank0
  9803  1FD9  083E               	movf	atoi@s,w
  9804  1FDA  0086               	movwf	6
  9805  1FDB  3001               	movlw	1	; select bank2/3
  9806  1FDC  0087               	movwf	7
  9807  1FDD  0801               	movf	1,w
  9808  1FDE  0731               	addwf	?___wmul,w
  9809  1FDF  00B9               	movwf	??_atoi
  9810  1FE0  0832               	movf	?___wmul+1,w
  9811  1FE1  1803               	skipnc
  9812  1FE2  0A32               	incf	?___wmul+1,w
  9813  1FE3  00BA               	movwf	??_atoi+1
  9814  1FE4  0839               	movf	??_atoi,w
  9815  1FE5  3ED0               	addlw	208
  9816  1FE6  00BC               	movwf	atoi@a
  9817  1FE7  30FF               	movlw	255
  9818  1FE8  3D3A               	addwfc	??_atoi+1,w
  9819  1FE9  00BD               	movwf	atoi@a+1
  9820  1FEA  2FBE               	goto	l6327
  9821  1FEB                     l6331:	
  9822  1FEB  0020               	movlb	0	; select bank0
  9823  1FEC  083B               	movf	atoi@sign,w
  9824  1FED  1903               	btfsc	3,2
  9825  1FEE  2FFB               	goto	l6337
  9826  1FEF  093C               	comf	atoi@a,w
  9827  1FF0  00B9               	movwf	??_atoi
  9828  1FF1  093D               	comf	atoi@a+1,w
  9829  1FF2  00BA               	movwf	??_atoi+1
  9830  1FF3  0AB9               	incf	??_atoi,f
  9831  1FF4  1903               	skipnz
  9832  1FF5  0ABA               	incf	??_atoi+1,f
  9833  1FF6  0839               	movf	??_atoi,w
  9834  1FF7  00B7               	movwf	?_atoi
  9835  1FF8  083A               	movf	??_atoi+1,w
  9836  1FF9  00B8               	movwf	?_atoi+1
  9837  1FFA  0008               	return
  9838  1FFB                     l6337:	
  9839  1FFB  083D               	movf	atoi@a+1,w
  9840  1FFC  00B8               	movwf	?_atoi+1
  9841  1FFD  083C               	movf	atoi@a,w
  9842  1FFE  00B7               	movwf	?_atoi
  9843  1FFF  0008               	return
  9844  2000                     __end_of_atoi:	
  9845                           
  9846                           	psect	text9
  9847  232F                     __ptext9:	
  9848 ;; *************** function _isdigit *****************
  9849 ;; Defined at:
  9850 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;  c               1    wreg     unsigned char 
  9853 ;; Auto vars:     Size  Location     Type
  9854 ;;  c               1   18[BANK0 ] unsigned char 
  9855 ;; Return value:  Size  Location     Type
  9856 ;;		None               void
  9857 ;; Registers used:
  9858 ;;		wreg, status,2, status,0
  9859 ;; Tracked objects:
  9860 ;;		On entry : 0/0
  9861 ;;		On exit  : 0/0
  9862 ;;		Unchanged: 0/0
  9863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9865 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9867 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9868 ;;Total ram usage:        2 bytes
  9869 ;; Hardware stack levels used:    1
  9870 ;; Hardware stack levels required when called:    6
  9871 ;; This function calls:
  9872 ;;		Nothing
  9873 ;; This function is called by:
  9874 ;;		_atoi
  9875 ;; This function uses a non-reentrant model
  9876 ;;
  9877                           
  9878                           
  9879                           ;psect for function _isdigit
  9880  232F                     _isdigit:	
  9881                           
  9882                           ;incstack = 0
  9883                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9884                           ;isdigit@c stored from wreg
  9885  232F  0020               	movlb	0	; select bank0
  9886  2330  00B2               	movwf	isdigit@c
  9887  2331  01B1               	clrf	_isdigit$2156
  9888  2332  303A               	movlw	58
  9889  2333  0232               	subwf	isdigit@c,w
  9890  2334  1803               	skipnc
  9891  2335  2B3C               	goto	l5549
  9892  2336  3030               	movlw	48
  9893  2337  0232               	subwf	isdigit@c,w
  9894  2338  1C03               	skipc
  9895  2339  2B3C               	goto	l5549
  9896  233A  01B1               	clrf	_isdigit$2156
  9897  233B  0AB1               	incf	_isdigit$2156,f
  9898  233C                     l5549:	
  9899  233C  0C31               	rrf	_isdigit$2156,w
  9900  233D  0008               	return
  9901  233E                     __end_of_isdigit:	
  9902                           
  9903                           	psect	text10
  9904  2443                     __ptext10:	
  9905 ;; *************** function ___wmul *****************
  9906 ;; Defined at:
  9907 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;  multiplier      2   17[BANK0 ] unsigned int 
  9910 ;;  multiplicand    2   19[BANK0 ] unsigned int 
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;  product         2   21[BANK0 ] unsigned int 
  9913 ;; Return value:  Size  Location     Type
  9914 ;;                  2   17[BANK0 ] unsigned int 
  9915 ;; Registers used:
  9916 ;;		wreg, status,2, status,0
  9917 ;; Tracked objects:
  9918 ;;		On entry : 0/0
  9919 ;;		On exit  : 0/0
  9920 ;;		Unchanged: 0/0
  9921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9922 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9923 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9925 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9926 ;;Total ram usage:        6 bytes
  9927 ;; Hardware stack levels used:    1
  9928 ;; Hardware stack levels required when called:    6
  9929 ;; This function calls:
  9930 ;;		Nothing
  9931 ;; This function is called by:
  9932 ;;		_atoi
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           
  9937                           ;psect for function ___wmul
  9938  2443                     ___wmul:	
  9939                           
  9940                           ;incstack = 0
  9941                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9942  2443  0020               	movlb	0	; select bank0
  9943  2444  01B5               	clrf	___wmul@product
  9944  2445  01B6               	clrf	___wmul@product+1
  9945  2446                     l5529:	
  9946  2446  1C31               	btfss	___wmul@multiplier,0
  9947  2447  2C4C               	goto	l1597
  9948  2448  0833               	movf	___wmul@multiplicand,w
  9949  2449  07B5               	addwf	___wmul@product,f
  9950  244A  0834               	movf	___wmul@multiplicand+1,w
  9951  244B  3DB6               	addwfc	___wmul@product+1,f
  9952  244C                     l1597:	
  9953  244C  3001               	movlw	1
  9954  244D                     u4665:	
  9955  244D  35B3               	lslf	___wmul@multiplicand,f
  9956  244E  0DB4               	rlf	___wmul@multiplicand+1,f
  9957  244F  0B89               	decfsz	9,f
  9958  2450  2C4D               	goto	u4665
  9959  2451  3001               	movlw	1
  9960  2452                     u4675:	
  9961  2452  36B2               	lsrf	___wmul@multiplier+1,f
  9962  2453  0CB1               	rrf	___wmul@multiplier,f
  9963  2454  0B89               	decfsz	9,f
  9964  2455  2C52               	goto	u4675
  9965  2456  0831               	movf	___wmul@multiplier,w
  9966  2457  0432               	iorwf	___wmul@multiplier+1,w
  9967  2458  1D03               	btfss	3,2
  9968  2459  2C46               	goto	l5529
  9969  245A  0836               	movf	___wmul@product+1,w
  9970  245B  00B2               	movwf	?___wmul+1
  9971  245C  0835               	movf	___wmul@product,w
  9972  245D  00B1               	movwf	?___wmul
  9973  245E  0008               	return
  9974  245F                     __end_of___wmul:	
  9975                           
  9976                           	psect	text11
  9977  0B01                     __ptext11:	
  9978 ;; *************** function _main_initialize *****************
  9979 ;; Defined at:
  9980 ;;		line 187 in file "main.c"
  9981 ;; Parameters:    Size  Location     Type
  9982 ;;		None
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;		None
  9985 ;; Return value:  Size  Location     Type
  9986 ;;                  1    wreg      void 
  9987 ;; Registers used:
  9988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9996 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9997 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9998 ;;Total ram usage:        2 bytes
  9999 ;; Hardware stack levels used:    1
 10000 ;; Hardware stack levels required when called:   15
 10001 ;; This function calls:
 10002 ;;		_LED_setBrightnessRange
 10003 ;;		_LEDsPwr
 10004 ;;		_TMR0_Load8bitPeriod
 10005 ;;		_TMR2_LoadPeriodRegister
 10006 ;;		___awtoft
 10007 ;;		___ftadd
 10008 ;;		___ftmul
 10009 ;;		___fttol
 10010 ;;		_drv_init
 10011 ;;		_printf
 10012 ;; This function is called by:
 10013 ;;		_main
 10014 ;; This function uses a non-reentrant model
 10015 ;;
 10016                           
 10017                           
 10018                           ;psect for function _main_initialize
 10019  0B01                     _main_initialize:	
 10020                           
 10021                           ;main.c: 189: LEDsPwr(LEDpower, 1);
 10022                           
 10023                           ;incstack = 0
 10024                           ; Regs used in _main_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10025  0B01  303C               	movlw	low (_LEDpower| (0+32768))
 10026  0B02  0084               	movwf	4
 10027  0B03  30AA               	movlw	high (_LEDpower| (0+32768))
 10028  0B04  0085               	movwf	5
 10029  0B05  3F00               	moviw [0]fsr0
 10030  0B06  0020               	movlb	0	; select bank0
 10031  0B07  00C4               	movwf	LEDsPwr@pwr
 10032  0B08  3F01               	moviw [1]fsr0
 10033  0B09  00C5               	movwf	LEDsPwr@pwr+1
 10034  0B0A  3001               	movlw	1
 10035  0B0B  00C6               	movwf	LEDsPwr@topOrBottom
 10036  0B0C  3000               	movlw	0
 10037  0B0D  00C7               	movwf	LEDsPwr@topOrBottom+1
 10038  0B0E  3193  23D0  318B   	fcall	_LEDsPwr
 10039                           
 10040                           ;main.c: 190: LEDsPwr(LEDpower, 2);
 10041  0B11  303C               	movlw	low (_LEDpower| (0+32768))
 10042  0B12  0084               	movwf	4
 10043  0B13  30AA               	movlw	high (_LEDpower| (0+32768))
 10044  0B14  0085               	movwf	5
 10045  0B15  3F00               	moviw [0]fsr0
 10046  0B16  0020               	movlb	0	; select bank0
 10047  0B17  00C4               	movwf	LEDsPwr@pwr
 10048  0B18  3F01               	moviw [1]fsr0
 10049  0B19  00C5               	movwf	LEDsPwr@pwr+1
 10050  0B1A  3002               	movlw	2
 10051  0B1B  00C6               	movwf	LEDsPwr@topOrBottom
 10052  0B1C  3000               	movlw	0
 10053  0B1D  00C7               	movwf	LEDsPwr@topOrBottom+1
 10054  0B1E  3193  23D0  318B   	fcall	_LEDsPwr
 10055                           
 10056                           ;main.c: 192: LED_setBrightnessRange(1, 1);
 10057  0B21  3001               	movlw	1
 10058  0B22  0020               	movlb	0	; select bank0
 10059  0B23  00C4               	movwf	LED_setBrightnessRange@range
 10060  0B24  3000               	movlw	0
 10061  0B25  00C5               	movwf	LED_setBrightnessRange@range+1
 10062  0B26  3001               	movlw	1
 10063  0B27  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10064  0B28  3000               	movlw	0
 10065  0B29  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10066  0B2A  318B  23DE  318B   	fcall	_LED_setBrightnessRange
 10067                           
 10068                           ;main.c: 193: LED_setBrightnessRange(1, 2);
 10069  0B2D  3001               	movlw	1
 10070  0B2E  0020               	movlb	0	; select bank0
 10071  0B2F  00C4               	movwf	LED_setBrightnessRange@range
 10072  0B30  3000               	movlw	0
 10073  0B31  00C5               	movwf	LED_setBrightnessRange@range+1
 10074  0B32  3002               	movlw	2
 10075  0B33  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10076  0B34  3000               	movlw	0
 10077  0B35  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10078  0B36  318B  23DE  318B   	fcall	_LED_setBrightnessRange
 10079                           
 10080                           ;main.c: 194: do { LATCbits.LATC1 = 1; } while(0);
 10081  0B39  0022               	movlb	2	; select bank2
 10082  0B3A  148E               	bsf	14,1	;volatile
 10083                           
 10084                           ;main.c: 197: TMR2_LoadPeriodRegister((heater_post_time_ms*TMR2_RANGE)-1);
 10085  0B3B  0021               	movlb	1	; select bank1
 10086  0B3C  086C               	movf	(_heater_post_time_ms+1)^(0+128),w
 10087  0B3D  0020               	movlb	0	; select bank0
 10088  0B3E  00BA               	movwf	___awtoft@c+1
 10089  0B3F  0021               	movlb	1	; select bank1
 10090  0B40  086B               	movf	_heater_post_time_ms^(0+128),w
 10091  0B41  0020               	movlb	0	; select bank0
 10092  0B42  00B9               	movwf	___awtoft@c
 10093  0B43  31A5  2578  318B   	fcall	___awtoft
 10094  0B46  0020               	movlb	0	; select bank0
 10095  0B47  0839               	movf	?___awtoft,w
 10096  0B48  00C2               	movwf	___ftmul@f2
 10097  0B49  083A               	movf	?___awtoft+1,w
 10098  0B4A  00C3               	movwf	___ftmul@f2+1
 10099  0B4B  083B               	movf	?___awtoft+2,w
 10100  0B4C  00C4               	movwf	___ftmul@f2+2
 10101  0B4D  3030               	movlw	low (_TMR2_RANGE| (0+32768))
 10102  0B4E  0084               	movwf	4
 10103  0B4F  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
 10104  0B50  0085               	movwf	5
 10105  0B51  3F00               	moviw [0]fsr0
 10106  0B52  00BF               	movwf	___ftmul@f1
 10107  0B53  3F01               	moviw [1]fsr0
 10108  0B54  00C0               	movwf	___ftmul@f1+1
 10109  0B55  3F02               	moviw [2]fsr0
 10110  0B56  00C1               	movwf	___ftmul@f1+2
 10111  0B57  318C  24BC  318B   	fcall	___ftmul
 10112  0B5A  0020               	movlb	0	; select bank0
 10113  0B5B  083F               	movf	?___ftmul,w
 10114  0B5C  0021               	movlb	1	; select bank1
 10115  0B5D  00A9               	movwf	___ftadd@f2^(0+128)
 10116  0B5E  0020               	movlb	0	; select bank0
 10117  0B5F  0840               	movf	?___ftmul+1,w
 10118  0B60  0021               	movlb	1	; select bank1
 10119  0B61  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 10120  0B62  0020               	movlb	0	; select bank0
 10121  0B63  0841               	movf	?___ftmul+2,w
 10122  0B64  0021               	movlb	1	; select bank1
 10123  0B65  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 10124  0B66  3000               	movlw	0
 10125  0B67  00A6               	movwf	___ftadd@f1^(0+128)
 10126  0B68  3080               	movlw	128
 10127  0B69  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 10128  0B6A  30BF               	movlw	191
 10129  0B6B  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 10130  0B6C  3186  26E4  318B   	fcall	___ftadd
 10131  0B6F  0021               	movlb	1	; select bank1
 10132  0B70  0826               	movf	?___ftadd^(0+128),w
 10133  0B71  00AF               	movwf	___fttol@f1^(0+128)
 10134  0B72  0827               	movf	(?___ftadd+1)^(0+128),w
 10135  0B73  00B0               	movwf	(___fttol@f1+1)^(0+128)
 10136  0B74  0828               	movf	(?___ftadd+2)^(0+128),w
 10137  0B75  00B1               	movwf	(___fttol@f1+2)^(0+128)
 10138  0B76  3188  2069  318B   	fcall	___fttol
 10139  0B79  0021               	movlb	1	; select bank1
 10140  0B7A  082F               	movf	?___fttol^(0+128),w
 10141  0B7B  31A1  21B7  318B   	fcall	_TMR2_LoadPeriodRegister
 10142                           
 10143                           ;main.c: 198: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 10144  0B7E  0021               	movlb	1	; select bank1
 10145  0B7F  096D               	comf	_heater_pre_time_ms^(0+128),w
 10146  0B80  00BD               	movwf	??_main_initialize^(0+128)
 10147  0B81  096E               	comf	(_heater_pre_time_ms+1)^(0+128),w
 10148  0B82  00BE               	movwf	(??_main_initialize^(0+128)+1)
 10149  0B83  0ABD               	incf	??_main_initialize^(0+128),f
 10150  0B84  1903               	skipnz
 10151  0B85  0ABE               	incf	(??_main_initialize^(0+128)+1),f
 10152  0B86  0869               	movf	_piezo_on_time_ms^(0+128),w
 10153  0B87  073D               	addwf	??_main_initialize^(0+128),w
 10154  0B88  0020               	movlb	0	; select bank0
 10155  0B89  00B9               	movwf	___awtoft@c
 10156  0B8A  0021               	movlb	1	; select bank1
 10157  0B8B  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 10158  0B8C  3D3E               	addwfc	(??_main_initialize+1)^(0+128),w
 10159  0B8D  0020               	movlb	0	; select bank0
 10160  0B8E  00BA               	movwf	___awtoft@c+1
 10161  0B8F  31A5  2578  318B   	fcall	___awtoft
 10162  0B92  0020               	movlb	0	; select bank0
 10163  0B93  0839               	movf	?___awtoft,w
 10164  0B94  00C2               	movwf	___ftmul@f2
 10165  0B95  083A               	movf	?___awtoft+1,w
 10166  0B96  00C3               	movwf	___ftmul@f2+1
 10167  0B97  083B               	movf	?___awtoft+2,w
 10168  0B98  00C4               	movwf	___ftmul@f2+2
 10169  0B99  3033               	movlw	low (_TMR0_RANGE| (0+32768))
 10170  0B9A  0084               	movwf	4
 10171  0B9B  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 10172  0B9C  0085               	movwf	5
 10173  0B9D  3F00               	moviw [0]fsr0
 10174  0B9E  00BF               	movwf	___ftmul@f1
 10175  0B9F  3F01               	moviw [1]fsr0
 10176  0BA0  00C0               	movwf	___ftmul@f1+1
 10177  0BA1  3F02               	moviw [2]fsr0
 10178  0BA2  00C1               	movwf	___ftmul@f1+2
 10179  0BA3  318C  24BC  318B   	fcall	___ftmul
 10180  0BA6  0020               	movlb	0	; select bank0
 10181  0BA7  083F               	movf	?___ftmul,w
 10182  0BA8  0021               	movlb	1	; select bank1
 10183  0BA9  00A9               	movwf	___ftadd@f2^(0+128)
 10184  0BAA  0020               	movlb	0	; select bank0
 10185  0BAB  0840               	movf	?___ftmul+1,w
 10186  0BAC  0021               	movlb	1	; select bank1
 10187  0BAD  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 10188  0BAE  0020               	movlb	0	; select bank0
 10189  0BAF  0841               	movf	?___ftmul+2,w
 10190  0BB0  0021               	movlb	1	; select bank1
 10191  0BB1  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 10192  0BB2  3000               	movlw	0
 10193  0BB3  00A6               	movwf	___ftadd@f1^(0+128)
 10194  0BB4  3080               	movlw	128
 10195  0BB5  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 10196  0BB6  30BF               	movlw	191
 10197  0BB7  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 10198  0BB8  3186  26E4  318B   	fcall	___ftadd
 10199  0BBB  0021               	movlb	1	; select bank1
 10200  0BBC  0826               	movf	?___ftadd^(0+128),w
 10201  0BBD  00AF               	movwf	___fttol@f1^(0+128)
 10202  0BBE  0827               	movf	(?___ftadd+1)^(0+128),w
 10203  0BBF  00B0               	movwf	(___fttol@f1+1)^(0+128)
 10204  0BC0  0828               	movf	(?___ftadd+2)^(0+128),w
 10205  0BC1  00B1               	movwf	(___fttol@f1+2)^(0+128)
 10206  0BC2  3188  2069  318B   	fcall	___fttol
 10207  0BC5  0021               	movlb	1	; select bank1
 10208  0BC6  082F               	movf	?___fttol^(0+128),w
 10209  0BC7  31A1  21B2  318B   	fcall	_TMR0_Load8bitPeriod
 10210                           
 10211                           ;main.c: 201: drv_init(0x03, 0x0c);
 10212  0BCA  3003               	movlw	3
 10213  0BCB  0021               	movlb	1	; select bank1
 10214  0BCC  00B6               	movwf	drv_init@output_gain^(0+128)
 10215  0BCD  3000               	movlw	0
 10216  0BCE  00B7               	movwf	(drv_init@output_gain^(0+128)+1)
 10217  0BCF  300C               	movlw	12
 10218  0BD0  00B8               	movwf	drv_init@idle_timeout^(0+128)
 10219  0BD1  3000               	movlw	0
 10220  0BD2  00B9               	movwf	(drv_init@idle_timeout^(0+128)+1)
 10221  0BD3  319E  26BD  318B   	fcall	_drv_init
 10222                           
 10223                           ;main.c: 202: printf("initialized\n");
 10224  0BD6  3003               	movlw	low ((STR_49+4)| (0+32768))
 10225  0BD7  0021               	movlb	1	; select bank1
 10226  0BD8  00A0               	movwf	printf@f^(0+128)
 10227  0BD9  30A9               	movlw	high ((STR_49+4)| (0+32768))
 10228  0BDA  00A1               	movwf	(printf@f^(0+128)+1)
 10229  0BDB  318E  26CE         	fcall	_printf
 10230  0BDD  0008               	return
 10231  0BDE                     __end_of_main_initialize:	
 10232                           
 10233                           	psect	text12
 10234  1EBD                     __ptext12:	
 10235 ;; *************** function _drv_init *****************
 10236 ;; Defined at:
 10237 ;;		line 3 in file "drv2665.c"
 10238 ;; Parameters:    Size  Location     Type
 10239 ;;  output_gain     2   22[BANK1 ] int 
 10240 ;;  idle_timeout    2   24[BANK1 ] int 
 10241 ;; Auto vars:     Size  Location     Type
 10242 ;;		None
 10243 ;; Return value:  Size  Location     Type
 10244 ;;                  1    wreg      void 
 10245 ;; Registers used:
 10246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10247 ;; Tracked objects:
 10248 ;;		On entry : 0/0
 10249 ;;		On exit  : 0/0
 10250 ;;		Unchanged: 0/0
 10251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10252 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10254 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10255 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10256 ;;Total ram usage:        5 bytes
 10257 ;; Hardware stack levels used:    1
 10258 ;; Hardware stack levels required when called:   14
 10259 ;; This function calls:
 10260 ;;		_drv_reset
 10261 ;;		_drv_write
 10262 ;;		_i2c_open
 10263 ;;		_i2c_setAddress
 10264 ;;		_printf
 10265 ;; This function is called by:
 10266 ;;		_main_initialize
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           
 10271                           ;psect for function _drv_init
 10272  1EBD                     _drv_init:	
 10273                           
 10274                           ;drv2665.c: 5: i2c_setAddress(drv_address);
 10275                           
 10276                           ;incstack = 0
 10277                           ; Regs used in _drv_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10278  1EBD  3044               	movlw	low (_drv_address| (0+32768))
 10279  1EBE  0084               	movwf	4
 10280  1EBF  30AA               	movlw	high (_drv_address| (0+32768))
 10281  1EC0  0085               	movwf	5
 10282  1EC1  0800               	movf	0,w	;code access
 10283  1EC2  31A2  223C  319E   	fcall	_i2c_setAddress
 10284                           
 10285                           ;drv2665.c: 6: i2c_open(drv_address);
 10286  1EC5  3044               	movlw	low (_drv_address| (0+32768))
 10287  1EC6  0084               	movwf	4
 10288  1EC7  30AA               	movlw	high (_drv_address| (0+32768))
 10289  1EC8  0085               	movwf	5
 10290  1EC9  0800               	movf	0,w	;code access
 10291  1ECA  319A  22DB  319E   	fcall	_i2c_open
 10292                           
 10293                           ;drv2665.c: 7: _delay((unsigned long)((10)*(1000000/4000.0)));
 10294  1ECD  3004               	movlw	4
 10295  1ECE  0021               	movlb	1	; select bank1
 10296  1ECF  00BA               	movwf	??_drv_init^(0+128)
 10297  1ED0  303D               	movlw	61
 10298  1ED1                     u9087:	
 10299  1ED1  0B89               	decfsz	9,f
 10300  1ED2  2ED1               	goto	u9087
 10301  1ED3  0BBA               	decfsz	??_drv_init^(0+128),f
 10302  1ED4  2ED1               	goto	u9087
 10303  1ED5  3200               	nop2
 10304                           
 10305                           ;drv2665.c: 9: drv_reset();
 10306  1ED6  31A2  2298  319E   	fcall	_drv_reset
 10307                           
 10308                           ;drv2665.c: 10: _delay((unsigned long)((10)*(1000000/4000.0)));
 10309  1ED9  3004               	movlw	4
 10310  1EDA  0021               	movlb	1	; select bank1
 10311  1EDB  00BA               	movwf	??_drv_init^(0+128)
 10312  1EDC  303D               	movlw	61
 10313  1EDD                     u9097:	
 10314  1EDD  0B89               	decfsz	9,f
 10315  1EDE  2EDD               	goto	u9097
 10316  1EDF  0BBA               	decfsz	??_drv_init^(0+128),f
 10317  1EE0  2EDD               	goto	u9097
 10318  1EE1  3200               	nop2
 10319                           
 10320                           ;drv2665.c: 11: drv_write(0x02, 0);
 10321  1EE2  0020               	movlb	0	; select bank0
 10322  1EE3  01C9               	clrf	drv_write@data
 10323  1EE4  3002               	movlw	2
 10324  1EE5  31A6  2605  319E   	fcall	_drv_write
 10325                           
 10326                           ;drv2665.c: 12: _delay((unsigned long)((10)*(1000000/4000.0)));
 10327  1EE8  3004               	movlw	4
 10328  1EE9  0021               	movlb	1	; select bank1
 10329  1EEA  00BA               	movwf	??_drv_init^(0+128)
 10330  1EEB  303D               	movlw	61
 10331  1EEC                     u9107:	
 10332  1EEC  0B89               	decfsz	9,f
 10333  1EED  2EEC               	goto	u9107
 10334  1EEE  0BBA               	decfsz	??_drv_init^(0+128),f
 10335  1EEF  2EEC               	goto	u9107
 10336  1EF0  3200               	nop2
 10337                           
 10338                           ;drv2665.c: 13: drv_write(0x01, 0x38 | output_gain);
 10339  1EF1  0021               	movlb	1	; select bank1
 10340  1EF2  0836               	movf	drv_init@output_gain^(0+128),w
 10341  1EF3  3838               	iorlw	56
 10342  1EF4  00BA               	movwf	??_drv_init^(0+128)
 10343  1EF5  083A               	movf	??_drv_init^(0+128),w
 10344  1EF6  0020               	movlb	0	; select bank0
 10345  1EF7  00C9               	movwf	drv_write@data
 10346  1EF8  3001               	movlw	1
 10347  1EF9  31A6  2605  319E   	fcall	_drv_write
 10348                           
 10349                           ;drv2665.c: 15: _delay((unsigned long)((10)*(1000000/4000.0)));
 10350  1EFC  3004               	movlw	4
 10351  1EFD  0021               	movlb	1	; select bank1
 10352  1EFE  00BA               	movwf	??_drv_init^(0+128)
 10353  1EFF  303D               	movlw	61
 10354  1F00                     u9117:	
 10355  1F00  0B89               	decfsz	9,f
 10356  1F01  2F00               	goto	u9117
 10357  1F02  0BBA               	decfsz	??_drv_init^(0+128),f
 10358  1F03  2F00               	goto	u9117
 10359  1F04  3200               	nop2
 10360                           
 10361                           ;drv2665.c: 16: drv_write(0x02, idle_timeout);
 10362  1F05  0021               	movlb	1	; select bank1
 10363  1F06  0838               	movf	drv_init@idle_timeout^(0+128),w
 10364  1F07  00BA               	movwf	??_drv_init^(0+128)
 10365  1F08  083A               	movf	??_drv_init^(0+128),w
 10366  1F09  0020               	movlb	0	; select bank0
 10367  1F0A  00C9               	movwf	drv_write@data
 10368  1F0B  3002               	movlw	2
 10369  1F0C  31A6  2605  319E   	fcall	_drv_write
 10370                           
 10371                           ;drv2665.c: 18: _delay((unsigned long)((10)*(1000000/4000.0)));
 10372  1F0F  3004               	movlw	4
 10373  1F10  0021               	movlb	1	; select bank1
 10374  1F11  00BA               	movwf	??_drv_init^(0+128)
 10375  1F12  303D               	movlw	61
 10376  1F13                     u9127:	
 10377  1F13  0B89               	decfsz	9,f
 10378  1F14  2F13               	goto	u9127
 10379  1F15  0BBA               	decfsz	??_drv_init^(0+128),f
 10380  1F16  2F13               	goto	u9127
 10381  1F17  3200               	nop2
 10382                           
 10383                           ;drv2665.c: 20: printf("drv initialized\n");
 10384  1F18  30FF               	movlw	low (STR_49| (0+32768))
 10385  1F19  0021               	movlb	1	; select bank1
 10386  1F1A  00A0               	movwf	printf@f^(0+128)
 10387  1F1B  30A8               	movlw	high (STR_49| (0+32768))
 10388  1F1C  00A1               	movwf	(printf@f^(0+128)+1)
 10389  1F1D  318E  26CE         	fcall	_printf
 10390  1F1F  0008               	return
 10391  1F20                     __end_of_drv_init:	
 10392                           
 10393                           	psect	text13
 10394  223C                     __ptext13:	
 10395 ;; *************** function _i2c_setAddress *****************
 10396 ;; Defined at:
 10397 ;;		line 156 in file "mcc_generated_files/drivers/i2c_master.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;  address         1    wreg     unsigned char 
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;  address         1   18[BANK0 ] unsigned char 
 10402 ;; Return value:  Size  Location     Type
 10403 ;;                  1    wreg      void 
 10404 ;; Registers used:
 10405 ;;		wreg
 10406 ;; Tracked objects:
 10407 ;;		On entry : 0/0
 10408 ;;		On exit  : 0/0
 10409 ;;		Unchanged: 0/0
 10410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10412 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10413 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10414 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10415 ;;Total ram usage:        2 bytes
 10416 ;; Hardware stack levels used:    1
 10417 ;; Hardware stack levels required when called:    6
 10418 ;; This function calls:
 10419 ;;		Nothing
 10420 ;; This function is called by:
 10421 ;;		_drv_init
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           
 10426                           ;psect for function _i2c_setAddress
 10427  223C                     _i2c_setAddress:	
 10428                           
 10429                           ;incstack = 0
 10430                           ; Regs used in _i2c_setAddress: [wreg]
 10431                           ;i2c_setAddress@address stored from wreg
 10432  223C  0020               	movlb	0	; select bank0
 10433  223D  00B2               	movwf	i2c_setAddress@address
 10434                           
 10435                           ;i2c_master.c: 158: i2c_status.address = address;
 10436  223E  0832               	movf	i2c_setAddress@address,w
 10437  223F  00B1               	movwf	??_i2c_setAddress
 10438  2240  0831               	movf	??_i2c_setAddress,w
 10439  2241  0022               	movlb	2	; select bank2
 10440  2242  00A1               	movwf	(_i2c_status^(0+256)+1)
 10441  2243  0008               	return
 10442  2244                     __end_of_i2c_setAddress:	
 10443                           
 10444                           	psect	text14
 10445  1ADB                     __ptext14:	
 10446 ;; *************** function _i2c_open *****************
 10447 ;; Defined at:
 10448 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
 10449 ;; Parameters:    Size  Location     Type
 10450 ;;  address         1    wreg     unsigned char 
 10451 ;; Auto vars:     Size  Location     Type
 10452 ;;  address         1   21[BANK0 ] unsigned char 
 10453 ;;  ret             1   20[BANK0 ] enum E8193
 10454 ;; Return value:  Size  Location     Type
 10455 ;;                  1    wreg      enum E8193
 10456 ;; Registers used:
 10457 ;;		wreg, status,2, status,0, pclath, cstack
 10458 ;; Tracked objects:
 10459 ;;		On entry : 0/0
 10460 ;;		On exit  : 0/0
 10461 ;;		Unchanged: 0/0
 10462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10464 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10465 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10466 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10467 ;;Total ram usage:        3 bytes
 10468 ;; Hardware stack levels used:    1
 10469 ;; Hardware stack levels required when called:    7
 10470 ;; This function calls:
 10471 ;;		_i2c1_driver_open
 10472 ;;		_i2c1_driver_setBusCollisionISR
 10473 ;;		_i2c1_driver_setI2cISR
 10474 ;;		_mssp1_clearIRQ
 10475 ;; This function is called by:
 10476 ;;		_drv_init
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480                           
 10481                           ;psect for function _i2c_open
 10482  1ADB                     _i2c_open:	
 10483                           
 10484                           ;incstack = 0
 10485                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
 10486                           ;i2c_open@address stored from wreg
 10487  1ADB  0020               	movlb	0	; select bank0
 10488  1ADC  00B5               	movwf	i2c_open@address
 10489                           
 10490                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
 10491  1ADD  01B4               	clrf	i2c_open@ret
 10492  1ADE  0AB4               	incf	i2c_open@ret,f
 10493                           
 10494                           ;i2c_master.c: 120: if(!i2c_status.inUse)
 10495  1ADF  0022               	movlb	2	; select bank2
 10496  1AE0  18A0               	btfsc	_i2c_status^(0+256),1
 10497  1AE1  0008               	return
 10498                           
 10499                           ;i2c_master.c: 121: {
 10500                           ;i2c_master.c: 122: i2c_status.address = address;
 10501  1AE2  0020               	movlb	0	; select bank0
 10502  1AE3  0835               	movf	i2c_open@address,w
 10503  1AE4  00B3               	movwf	??_i2c_open
 10504  1AE5  0833               	movf	??_i2c_open,w
 10505  1AE6  0022               	movlb	2	; select bank2
 10506  1AE7  00A1               	movwf	(_i2c_status^(0+256)+1)
 10507                           
 10508                           ;i2c_master.c: 123: i2c_status.busy = 0;
 10509  1AE8  1020               	bcf	_i2c_status^(0+256),0
 10510                           
 10511                           ;i2c_master.c: 124: i2c_status.inUse = 1;
 10512  1AE9  14A0               	bsf	_i2c_status^(0+256),1
 10513                           
 10514                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
 10515  1AEA  11A0               	bcf	_i2c_status^(0+256),3
 10516                           
 10517                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
 10518  1AEB  300E               	movlw	14
 10519  1AEC  0020               	movlb	0	; select bank0
 10520  1AED  00B3               	movwf	??_i2c_open
 10521  1AEE  0833               	movf	??_i2c_open,w
 10522  1AEF  0022               	movlb	2	; select bank2
 10523  1AF0  00AA               	movwf	(_i2c_status^(0+256)+10)
 10524                           
 10525                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
 10526  1AF1  30F4               	movlw	244
 10527  1AF2  00A8               	movwf	(_i2c_status^(0+256)+8)
 10528  1AF3  3001               	movlw	1
 10529  1AF4  00A9               	movwf	(_i2c_status^(0+256)+9)
 10530                           
 10531                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
 10532  1AF5  1520               	bsf	_i2c_status^(0+256),2
 10533                           
 10534                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
 10535  1AF6  30C2               	movlw	low _returnStop
 10536  1AF7  00AC               	movwf	(low ((_i2c_status| (0+256)+12)))^0
 10537  1AF8  3021               	movlw	high _returnStop
 10538  1AF9  00AD               	movwf	((low ((_i2c_status| (0+256)+12)))^0+1)
 10539                           
 10540                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
 10541  1AFA  01B8               	clrf	(low ((_i2c_status| (0+256)+24)))^0
 10542                           
 10543                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
 10544  1AFB  30C2               	movlw	low _returnStop
 10545  1AFC  00AE               	movwf	(low ((_i2c_status| (0+256)+14)))^0
 10546  1AFD  3021               	movlw	high _returnStop
 10547  1AFE  00AF               	movwf	((low ((_i2c_status| (0+256)+14)))^0+1)
 10548                           
 10549                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
 10550  1AFF  01B9               	clrf	(low ((_i2c_status| (0+256)+25)))^0
 10551                           
 10552                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
 10553  1B00  30C2               	movlw	low _returnStop
 10554  1B01  00B0               	movwf	(low ((_i2c_status| (0+256)+16)))^0
 10555  1B02  3021               	movlw	high _returnStop
 10556  1B03  00B1               	movwf	((low ((_i2c_status| (0+256)+16)))^0+1)
 10557                           
 10558                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
 10559  1B04  01BA               	clrf	(low ((_i2c_status| (0+256)+26)))^0
 10560                           
 10561                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
 10562  1B05  30C2               	movlw	low _returnStop
 10563  1B06  00B2               	movwf	(low ((_i2c_status| (0+256)+18)))^0
 10564  1B07  3021               	movlw	high _returnStop
 10565  1B08  00B3               	movwf	((low ((_i2c_status| (0+256)+18)))^0+1)
 10566                           
 10567                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
 10568  1B09  01BB               	clrf	(low ((_i2c_status| (0+256)+27)))^0
 10569                           
 10570                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
 10571  1B0A  30C8               	movlw	low _returnReset
 10572  1B0B  00B4               	movwf	(low ((_i2c_status| (0+256)+20)))^0
 10573  1B0C  3021               	movlw	high _returnReset
 10574  1B0D  00B5               	movwf	((low ((_i2c_status| (0+256)+20)))^0+1)
 10575                           
 10576                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
 10577  1B0E  01BC               	clrf	(low ((_i2c_status| (0+256)+28)))^0
 10578                           
 10579                           ;i2c_master.c: 142: i2c1_driver_open();
 10580  1B0F  31A2  22A2  319A   	fcall	_i2c1_driver_open
 10581                           
 10582                           ;i2c_master.c: 143: mssp1_clearIRQ();
 10583  1B12  31A1  216F  319A   	fcall	_mssp1_clearIRQ
 10584                           
 10585                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
 10586  1B15  3042               	movlw	low _i2c_busCollisionISR
 10587  1B16  0020               	movlb	0	; select bank0
 10588  1B17  00B1               	movwf	i2c1_driver_setBusCollisionISR@f
 10589  1B18  3021               	movlw	high _i2c_busCollisionISR
 10590  1B19  00B2               	movwf	i2c1_driver_setBusCollisionISR@f+1
 10591  1B1A  31A2  2268  319A   	fcall	_i2c1_driver_setBusCollisionISR
 10592                           
 10593                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
 10594  1B1D  304E               	movlw	low _i2c_ISR
 10595  1B1E  0020               	movlb	0	; select bank0
 10596  1B1F  00B1               	movwf	i2c1_driver_setI2cISR@f
 10597  1B20  3026               	movlw	high _i2c_ISR
 10598  1B21  00B2               	movwf	i2c1_driver_setI2cISR@f+1
 10599  1B22  31A2  2271         	fcall	_i2c1_driver_setI2cISR
 10600                           
 10601                           ;i2c_master.c: 151: ret = I2C_NOERR;
 10602  1B24  0020               	movlb	0	; select bank0
 10603  1B25  01B4               	clrf	i2c_open@ret
 10604  1B26  0008               	return
 10605  1B27                     __end_of_i2c_open:	
 10606                           ;i2c_master.c: 152: }
 10607                           ;i2c_master.c: 153: return ret;
 10608                           ;	Return value of _i2c_open is never used
 10609                           
 10610                           
 10611                           	psect	text15
 10612  2271                     __ptext15:	
 10613 ;; *************** function _i2c1_driver_setI2cISR *****************
 10614 ;; Defined at:
 10615 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
 10616 ;; Parameters:    Size  Location     Type
 10617 ;;  f               2   17[BANK0 ] PTR void 
 10618 ;;		 -> i2c_ISR(1), 
 10619 ;; Auto vars:     Size  Location     Type
 10620 ;;		None
 10621 ;; Return value:  Size  Location     Type
 10622 ;;                  1    wreg      void 
 10623 ;; Registers used:
 10624 ;;		wreg
 10625 ;; Tracked objects:
 10626 ;;		On entry : 0/0
 10627 ;;		On exit  : 0/0
 10628 ;;		Unchanged: 0/0
 10629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10630 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10633 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10634 ;;Total ram usage:        2 bytes
 10635 ;; Hardware stack levels used:    1
 10636 ;; Hardware stack levels required when called:    6
 10637 ;; This function calls:
 10638 ;;		Nothing
 10639 ;; This function is called by:
 10640 ;;		_i2c_open
 10641 ;; This function uses a non-reentrant model
 10642 ;;
 10643                           
 10644                           
 10645                           ;psect for function _i2c1_driver_setI2cISR
 10646  2271                     _i2c1_driver_setI2cISR:	
 10647                           
 10648                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
 10649                           
 10650                           ;incstack = 0
 10651                           ; Regs used in _i2c1_driver_setI2cISR: [wreg]
 10652  2271  0020               	movlb	0	; select bank0
 10653  2272  0832               	movf	i2c1_driver_setI2cISR@f+1,w
 10654  2273  0022               	movlb	2	; select bank2
 10655  2274  00E9               	movwf	(_i2c1_driver_i2cISR+1)^(0+256)
 10656  2275  0020               	movlb	0	; select bank0
 10657  2276  0831               	movf	i2c1_driver_setI2cISR@f,w
 10658  2277  0022               	movlb	2	; select bank2
 10659  2278  00E8               	movwf	_i2c1_driver_i2cISR^(0+256)
 10660  2279  0008               	return
 10661  227A                     __end_of_i2c1_driver_setI2cISR:	
 10662                           
 10663                           	psect	text16
 10664  2268                     __ptext16:	
 10665 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
 10666 ;; Defined at:
 10667 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
 10668 ;; Parameters:    Size  Location     Type
 10669 ;;  f               2   17[BANK0 ] PTR void 
 10670 ;;		 -> i2c_busCollisionISR(1), 
 10671 ;; Auto vars:     Size  Location     Type
 10672 ;;		None
 10673 ;; Return value:  Size  Location     Type
 10674 ;;                  1    wreg      void 
 10675 ;; Registers used:
 10676 ;;		wreg
 10677 ;; Tracked objects:
 10678 ;;		On entry : 0/0
 10679 ;;		On exit  : 0/0
 10680 ;;		Unchanged: 0/0
 10681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10682 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10685 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10686 ;;Total ram usage:        2 bytes
 10687 ;; Hardware stack levels used:    1
 10688 ;; Hardware stack levels required when called:    6
 10689 ;; This function calls:
 10690 ;;		Nothing
 10691 ;; This function is called by:
 10692 ;;		_i2c_open
 10693 ;; This function uses a non-reentrant model
 10694 ;;
 10695                           
 10696                           
 10697                           ;psect for function _i2c1_driver_setBusCollisionISR
 10698  2268                     _i2c1_driver_setBusCollisionISR:	
 10699                           
 10700                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
 10701                           
 10702                           ;incstack = 0
 10703                           ; Regs used in _i2c1_driver_setBusCollisionISR: [wreg]
 10704  2268  0020               	movlb	0	; select bank0
 10705  2269  0832               	movf	i2c1_driver_setBusCollisionISR@f+1,w
 10706  226A  0021               	movlb	1	; select bank1
 10707  226B  00E8               	movwf	(_i2c1_driver_busCollisionISR+1)^(0+128)
 10708  226C  0020               	movlb	0	; select bank0
 10709  226D  0831               	movf	i2c1_driver_setBusCollisionISR@f,w
 10710  226E  0021               	movlb	1	; select bank1
 10711  226F  00E7               	movwf	_i2c1_driver_busCollisionISR^(0+128)
 10712  2270  0008               	return
 10713  2271                     __end_of_i2c1_driver_setBusCollisionISR:	
 10714                           
 10715                           	psect	text17
 10716  22A2                     __ptext17:	
 10717 ;; *************** function _i2c1_driver_open *****************
 10718 ;; Defined at:
 10719 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;		None
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;		None
 10724 ;; Return value:  Size  Location     Type
 10725 ;;		None               void
 10726 ;; Registers used:
 10727 ;;		wreg, status,2
 10728 ;; Tracked objects:
 10729 ;;		On entry : 0/0
 10730 ;;		On exit  : 0/0
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10737 ;;Total ram usage:        0 bytes
 10738 ;; Hardware stack levels used:    1
 10739 ;; Hardware stack levels required when called:    6
 10740 ;; This function calls:
 10741 ;;		Nothing
 10742 ;; This function is called by:
 10743 ;;		_i2c_open
 10744 ;; This function uses a non-reentrant model
 10745 ;;
 10746                           
 10747                           
 10748                           ;psect for function _i2c1_driver_open
 10749  22A2                     _i2c1_driver_open:	
 10750                           
 10751                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 10752                           
 10753                           ;incstack = 0
 10754                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 10755  22A2  0024               	movlb	4	; select bank4
 10756  22A3  1A95               	btfsc	21,5	;volatile
 10757  22A4  0008               	return
 10758                           
 10759                           ;i2c1_driver.c: 86: {
 10760                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
 10761  22A5  0194               	clrf	20	;volatile
 10762                           
 10763                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 10764  22A6  3028               	movlw	40
 10765  22A7  0095               	movwf	21	;volatile
 10766                           
 10767                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 10768  22A8  0196               	clrf	22	;volatile
 10769                           
 10770                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 10771  22A9  3003               	movlw	3
 10772  22AA  0092               	movwf	18	;volatile
 10773                           
 10774                           ;i2c1_driver.c: 93: else
 10775                           ;i2c1_driver.c: 94: return 0;
 10776                           ;	Return value of _i2c1_driver_open is never used
 10777                           
 10778                           ;i2c1_driver.c: 92: }
 10779                           
 10780                           ;i2c1_driver.c: 91: return 1;
 10781                           ;	Return value of _i2c1_driver_open is never used
 10782  22AB  0008               	return
 10783  22AC                     __end_of_i2c1_driver_open:	
 10784                           
 10785                           	psect	text18
 10786  2298                     __ptext18:	
 10787 ;; *************** function _drv_reset *****************
 10788 ;; Defined at:
 10789 ;;		line 23 in file "drv2665.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;		None
 10792 ;; Auto vars:     Size  Location     Type
 10793 ;;		None
 10794 ;; Return value:  Size  Location     Type
 10795 ;;                  1    wreg      void 
 10796 ;; Registers used:
 10797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10798 ;; Tracked objects:
 10799 ;;		On entry : 0/0
 10800 ;;		On exit  : 0/0
 10801 ;;		Unchanged: 0/0
 10802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10805 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10806 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10807 ;;Total ram usage:        1 bytes
 10808 ;; Hardware stack levels used:    1
 10809 ;; Hardware stack levels required when called:   13
 10810 ;; This function calls:
 10811 ;;		_drv_write
 10812 ;; This function is called by:
 10813 ;;		_drv_init
 10814 ;; This function uses a non-reentrant model
 10815 ;;
 10816                           
 10817                           
 10818                           ;psect for function _drv_reset
 10819  2298                     _drv_reset:	
 10820                           
 10821                           ;drv2665.c: 24: drv_write(0x02, 0x80);
 10822                           
 10823                           ;incstack = 0
 10824                           ; Regs used in _drv_reset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10825  2298  3080               	movlw	128
 10826  2299  0021               	movlb	1	; select bank1
 10827  229A  00B5               	movwf	??_drv_reset^(0+128)
 10828  229B  0835               	movf	??_drv_reset^(0+128),w
 10829  229C  0020               	movlb	0	; select bank0
 10830  229D  00C9               	movwf	drv_write@data
 10831  229E  3002               	movlw	2
 10832  229F  31A6  2605         	fcall	_drv_write
 10833  22A1  0008               	return
 10834  22A2                     __end_of_drv_reset:	
 10835                           
 10836                           	psect	text19
 10837  0378                     __ptext19:	
 10838 ;; *************** function _execCmd *****************
 10839 ;; Defined at:
 10840 ;;		line 72 in file "cmd_parser.c"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;  s               1    wreg     PTR struct CMD_STRUCT
 10843 ;;		 -> cmd_struct(21), 
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;  s               1   53[BANK1 ] PTR struct CMD_STRUCT
 10846 ;;		 -> cmd_struct(21), 
 10847 ;; Return value:  Size  Location     Type
 10848 ;;                  2  967[None  ] int 
 10849 ;; Registers used:
 10850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10851 ;; Tracked objects:
 10852 ;;		On entry : 0/0
 10853 ;;		On exit  : 0/0
 10854 ;;		Unchanged: 0/0
 10855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10857 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10859 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10860 ;;Total ram usage:        1 bytes
 10861 ;; Hardware stack levels used:    1
 10862 ;; Hardware stack levels required when called:   16
 10863 ;; This function calls:
 10864 ;;		_commCheck
 10865 ;;		_doMove
 10866 ;;		_getActive
 10867 ;;		_getMotionStatus
 10868 ;;		_getMoveMask
 10869 ;;		_getPosition
 10870 ;;		_printf
 10871 ;;		_setActive
 10872 ;;		_setDrvGain
 10873 ;;		_setDrvPeak
 10874 ;;		_setDrvPiezoOnTime
 10875 ;;		_setHeaterPostTime
 10876 ;;		_setHeaterPreTime
 10877 ;;		_setHeaterToggle
 10878 ;;		_setLEDBrightnessRange
 10879 ;;		_setLEDPwr
 10880 ;;		_setMoveMask
 10881 ;;		_startAbsMove
 10882 ;;		_startRelMove
 10883 ;;		_stop
 10884 ;;		_timedActiveHeatOn
 10885 ;;		_zeroPosition
 10886 ;; This function is called by:
 10887 ;;		_main
 10888 ;; This function uses a non-reentrant model
 10889 ;;
 10890                           
 10891                           
 10892                           ;psect for function _execCmd
 10893  0378                     _execCmd:	
 10894                           
 10895                           ;incstack = 0
 10896 ;; hardware stack exceeded
 10897                           ; Regs used in _execCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10898                           ;execCmd@s stored from wreg
 10899  0378  0021               	movlb	1	; select bank1
 10900  0379  00D5               	movwf	execCmd@s^(0+128)
 10901                           
 10902                           ;cmd_parser.c: 73: errorOut = 1;
 10903  037A  3001               	movlw	1
 10904  037B  0022               	movlb	2	; select bank2
 10905  037C  00E6               	movwf	_errorOut^(0+256)
 10906  037D  3000               	movlw	0
 10907  037E  00E7               	movwf	(_errorOut^(0+256)+1)
 10908                           
 10909                           ;cmd_parser.c: 75: switch(s->c){
 10910  037F  2D2F               	goto	l8439
 10911  0380                     l8393:	
 10912                           ;cmd_parser.c: 76: case CMD_REL: errorOut = startRelMove(s->p1.paramI); break;
 10913                           
 10914  0380  0021               	movlb	1	; select bank1
 10915  0381  0A55               	incf	execCmd@s^(0+128),w
 10916  0382  0086               	movwf	6
 10917  0383  3001               	movlw	1	; select bank2/3
 10918  0384  0087               	movwf	7
 10919  0385  3F40               	moviw [0]fsr1
 10920  0386  00B5               	movwf	startRelMove@steps^(0+128)
 10921  0387  3F41               	moviw [1]fsr1
 10922  0388  00B6               	movwf	(startRelMove@steps+1)^(0+128)
 10923  0389  31A4  240C         	fcall	_startRelMove
 10924  038B  0021               	movlb	1	; select bank1
 10925  038C  0836               	movf	(?_startRelMove+1)^(0+128),w
 10926  038D  0022               	movlb	2	; select bank2
 10927  038E  00E7               	movwf	(_errorOut+1)^(0+256)
 10928  038F  0021               	movlb	1	; select bank1
 10929  0390  0835               	movf	?_startRelMove^(0+128),w
 10930  0391  0022               	movlb	2	; select bank2
 10931  0392  00E6               	movwf	_errorOut^(0+256)
 10932  0393  0008               	return
 10933  0394                     l8395:	
 10934                           ;cmd_parser.c: 77: case CMD_ABS: errorOut = startAbsMove(s->p1.paramI); break;
 10935                           
 10936  0394  0021               	movlb	1	; select bank1
 10937  0395  0A55               	incf	execCmd@s^(0+128),w
 10938  0396  0086               	movwf	6
 10939  0397  3001               	movlw	1	; select bank2/3
 10940  0398  0087               	movwf	7
 10941  0399  3F40               	moviw [0]fsr1
 10942  039A  00B5               	movwf	startAbsMove@steps^(0+128)
 10943  039B  3F41               	moviw [1]fsr1
 10944  039C  00B6               	movwf	(startAbsMove@steps+1)^(0+128)
 10945  039D  31A4  245F         	fcall	_startAbsMove
 10946  039F  0021               	movlb	1	; select bank1
 10947  03A0  0836               	movf	(?_startAbsMove+1)^(0+128),w
 10948  03A1  0022               	movlb	2	; select bank2
 10949  03A2  00E7               	movwf	(_errorOut+1)^(0+256)
 10950  03A3  0021               	movlb	1	; select bank1
 10951  03A4  0835               	movf	?_startAbsMove^(0+128),w
 10952  03A5  0022               	movlb	2	; select bank2
 10953  03A6  00E6               	movwf	_errorOut^(0+256)
 10954  03A7  0008               	return
 10955  03A8                     l8397:	
 10956                           ;cmd_parser.c: 78: case CMD_P: errorOut = getPosition(s->p1.paramI); break;
 10957                           
 10958  03A8  0021               	movlb	1	; select bank1
 10959  03A9  0A55               	incf	execCmd@s^(0+128),w
 10960  03AA  0086               	movwf	6
 10961  03AB  3001               	movlw	1	; select bank2/3
 10962  03AC  0087               	movwf	7
 10963  03AD  3F40               	moviw [0]fsr1
 10964  03AE  00B5               	movwf	getPosition@a^(0+128)
 10965  03AF  3F41               	moviw [1]fsr1
 10966  03B0  00B6               	movwf	(getPosition@a+1)^(0+128)
 10967  03B1  3198  20F7         	fcall	_getPosition
 10968  03B3  0021               	movlb	1	; select bank1
 10969  03B4  0836               	movf	(?_getPosition+1)^(0+128),w
 10970  03B5  0022               	movlb	2	; select bank2
 10971  03B6  00E7               	movwf	(_errorOut+1)^(0+256)
 10972  03B7  0021               	movlb	1	; select bank1
 10973  03B8  0835               	movf	?_getPosition^(0+128),w
 10974  03B9  0022               	movlb	2	; select bank2
 10975  03BA  00E6               	movwf	_errorOut^(0+256)
 10976  03BB  0008               	return
 10977  03BC                     l8399:	
 10978                           ;cmd_parser.c: 79: case CMD_STOP: errorOut = stop(); break;
 10979                           
 10980  03BC  31A6  2674         	fcall	_stop
 10981  03BE  0021               	movlb	1	; select bank1
 10982  03BF  0836               	movf	(?_stop+1)^(0+128),w
 10983  03C0  0022               	movlb	2	; select bank2
 10984  03C1  00E7               	movwf	(_errorOut+1)^(0+256)
 10985  03C2  0021               	movlb	1	; select bank1
 10986  03C3  0835               	movf	?_stop^(0+128),w
 10987  03C4  0022               	movlb	2	; select bank2
 10988  03C5  00E6               	movwf	_errorOut^(0+256)
 10989  03C6  0008               	return
 10990  03C7                     l8401:	
 10991                           ;cmd_parser.c: 80: case CMD_ZERO: errorOut = zeroPosition(); break;
 10992                           
 10993  03C7  3195  251C         	fcall	_zeroPosition
 10994  03C9  0021               	movlb	1	; select bank1
 10995  03CA  0836               	movf	(?_zeroPosition+1)^(0+128),w
 10996  03CB  0022               	movlb	2	; select bank2
 10997  03CC  00E7               	movwf	(_errorOut+1)^(0+256)
 10998  03CD  0021               	movlb	1	; select bank1
 10999  03CE  0835               	movf	?_zeroPosition^(0+128),w
 11000  03CF  0022               	movlb	2	; select bank2
 11001  03D0  00E6               	movwf	_errorOut^(0+256)
 11002  03D1  0008               	return
 11003  03D2                     l8403:	
 11004                           ;cmd_parser.c: 83: case CMD_DRV_PEAK: errorOut = setDrvPeak(s->p1.paramI); break;
 11005                           
 11006  03D2  0021               	movlb	1	; select bank1
 11007  03D3  0A55               	incf	execCmd@s^(0+128),w
 11008  03D4  0086               	movwf	6
 11009  03D5  3001               	movlw	1	; select bank2/3
 11010  03D6  0087               	movwf	7
 11011  03D7  3F40               	moviw [0]fsr1
 11012  03D8  00B5               	movwf	setDrvPeak@pk^(0+128)
 11013  03D9  3F41               	moviw [1]fsr1
 11014  03DA  00B6               	movwf	(setDrvPeak@pk+1)^(0+128)
 11015  03DB  31A3  2371         	fcall	_setDrvPeak
 11016  03DD  0021               	movlb	1	; select bank1
 11017  03DE  0836               	movf	(?_setDrvPeak+1)^(0+128),w
 11018  03DF  0022               	movlb	2	; select bank2
 11019  03E0  00E7               	movwf	(_errorOut+1)^(0+256)
 11020  03E1  0021               	movlb	1	; select bank1
 11021  03E2  0835               	movf	?_setDrvPeak^(0+128),w
 11022  03E3  0022               	movlb	2	; select bank2
 11023  03E4  00E6               	movwf	_errorOut^(0+256)
 11024  03E5  0008               	return
 11025  03E6                     l8405:	
 11026                           ;cmd_parser.c: 84: case CMD_DRV_GAIN: errorOut = setDrvGain(s->p1.paramI); break;
 11027                           
 11028  03E6  0021               	movlb	1	; select bank1
 11029  03E7  0A55               	incf	execCmd@s^(0+128),w
 11030  03E8  0086               	movwf	6
 11031  03E9  3001               	movlw	1	; select bank2/3
 11032  03EA  0087               	movwf	7
 11033  03EB  3F40               	moviw [0]fsr1
 11034  03EC  00B5               	movwf	setDrvGain@gain^(0+128)
 11035  03ED  3F41               	moviw [1]fsr1
 11036  03EE  00B6               	movwf	(setDrvGain@gain+1)^(0+128)
 11037  03EF  3199  2179         	fcall	_setDrvGain
 11038  03F1  0021               	movlb	1	; select bank1
 11039  03F2  0836               	movf	(?_setDrvGain+1)^(0+128),w
 11040  03F3  0022               	movlb	2	; select bank2
 11041  03F4  00E7               	movwf	(_errorOut+1)^(0+256)
 11042  03F5  0021               	movlb	1	; select bank1
 11043  03F6  0835               	movf	?_setDrvGain^(0+128),w
 11044  03F7  0022               	movlb	2	; select bank2
 11045  03F8  00E6               	movwf	_errorOut^(0+256)
 11046  03F9  0008               	return
 11047  03FA                     l8407:	
 11048                           ;cmd_parser.c: 85: case CMD_DRV_PIEZOONTIME: errorOut = setDrvPiezoOnTime(s->p1.paramI);
      +                           break;
 11049                           
 11050  03FA  0021               	movlb	1	; select bank1
 11051  03FB  0A55               	incf	execCmd@s^(0+128),w
 11052  03FC  0086               	movwf	6
 11053  03FD  3001               	movlw	1	; select bank2/3
 11054  03FE  0087               	movwf	7
 11055  03FF  3F40               	moviw [0]fsr1
 11056  0400  00BD               	movwf	setDrvPiezoOnTime@t^(0+128)
 11057  0401  3F41               	moviw [1]fsr1
 11058  0402  00BE               	movwf	(setDrvPiezoOnTime@t+1)^(0+128)
 11059  0403  319E  2607         	fcall	_setDrvPiezoOnTime
 11060  0405  0021               	movlb	1	; select bank1
 11061  0406  083E               	movf	(?_setDrvPiezoOnTime+1)^(0+128),w
 11062  0407  0022               	movlb	2	; select bank2
 11063  0408  00E7               	movwf	(_errorOut+1)^(0+256)
 11064  0409  0021               	movlb	1	; select bank1
 11065  040A  083D               	movf	?_setDrvPiezoOnTime^(0+128),w
 11066  040B  0022               	movlb	2	; select bank2
 11067  040C  00E6               	movwf	_errorOut^(0+256)
 11068  040D  0008               	return
 11069  040E                     l8409:	
 11070                           ;cmd_parser.c: 88: case CMD_HEATER_PRETIME: errorOut = setHeaterPreTime(s->p1.paramI); b
      +                          reak;
 11071                           
 11072  040E  0021               	movlb	1	; select bank1
 11073  040F  0A55               	incf	execCmd@s^(0+128),w
 11074  0410  0086               	movwf	6
 11075  0411  3001               	movlw	1	; select bank2/3
 11076  0412  0087               	movwf	7
 11077  0413  3F40               	moviw [0]fsr1
 11078  0414  00BD               	movwf	setHeaterPreTime@t^(0+128)
 11079  0415  3F41               	moviw [1]fsr1
 11080  0416  00BE               	movwf	(setHeaterPreTime@t+1)^(0+128)
 11081  0417  319E  2662         	fcall	_setHeaterPreTime
 11082  0419  0021               	movlb	1	; select bank1
 11083  041A  083E               	movf	(?_setHeaterPreTime+1)^(0+128),w
 11084  041B  0022               	movlb	2	; select bank2
 11085  041C  00E7               	movwf	(_errorOut+1)^(0+256)
 11086  041D  0021               	movlb	1	; select bank1
 11087  041E  083D               	movf	?_setHeaterPreTime^(0+128),w
 11088  041F  0022               	movlb	2	; select bank2
 11089  0420  00E6               	movwf	_errorOut^(0+256)
 11090  0421  0008               	return
 11091  0422                     l8411:	
 11092                           ;cmd_parser.c: 89: case CMD_HEATER_POSTTIME: errorOut = setHeaterPostTime(s->p1.paramI);
      +                           break;
 11093                           
 11094  0422  0021               	movlb	1	; select bank1
 11095  0423  0A55               	incf	execCmd@s^(0+128),w
 11096  0424  0086               	movwf	6
 11097  0425  3001               	movlw	1	; select bank2/3
 11098  0426  0087               	movwf	7
 11099  0427  3F40               	moviw [0]fsr1
 11100  0428  00BD               	movwf	setHeaterPostTime@t^(0+128)
 11101  0429  3F41               	moviw [1]fsr1
 11102  042A  00BE               	movwf	(setHeaterPostTime@t+1)^(0+128)
 11103  042B  319C  24B1         	fcall	_setHeaterPostTime
 11104  042D  0021               	movlb	1	; select bank1
 11105  042E  083E               	movf	(?_setHeaterPostTime+1)^(0+128),w
 11106  042F  0022               	movlb	2	; select bank2
 11107  0430  00E7               	movwf	(_errorOut+1)^(0+256)
 11108  0431  0021               	movlb	1	; select bank1
 11109  0432  083D               	movf	?_setHeaterPostTime^(0+128),w
 11110  0433  0022               	movlb	2	; select bank2
 11111  0434  00E6               	movwf	_errorOut^(0+256)
 11112  0435  0008               	return
 11113  0436                     l8413:	
 11114                           ;cmd_parser.c: 90: case CMD_HEATER_GAIN: errorOut = setLEDBrightnessRange(s->p1.paramI, 
      +                          s->p2.paramI); break;
 11115                           
 11116  0436  0021               	movlb	1	; select bank1
 11117  0437  0A55               	incf	execCmd@s^(0+128),w
 11118  0438  0086               	movwf	6
 11119  0439  3001               	movlw	1	; select bank2/3
 11120  043A  0087               	movwf	7
 11121  043B  3F40               	moviw [0]fsr1
 11122  043C  00B5               	movwf	setLEDBrightnessRange@r^(0+128)
 11123  043D  3F41               	moviw [1]fsr1
 11124  043E  00B6               	movwf	(setLEDBrightnessRange@r+1)^(0+128)
 11125  043F  0855               	movf	execCmd@s^(0+128),w
 11126  0440  3E0B               	addlw	11
 11127  0441  0086               	movwf	6
 11128  0442  3001               	movlw	1	; select bank2/3
 11129  0443  0087               	movwf	7
 11130  0444  3F40               	moviw [0]fsr1
 11131  0445  00B7               	movwf	setLEDBrightnessRange@tOB^(0+128)
 11132  0446  3F41               	moviw [1]fsr1
 11133  0447  00B8               	movwf	(setLEDBrightnessRange@tOB+1)^(0+128)
 11134  0448  31A4  249A         	fcall	_setLEDBrightnessRange
 11135  044A  0021               	movlb	1	; select bank1
 11136  044B  0836               	movf	(?_setLEDBrightnessRange+1)^(0+128),w
 11137  044C  0022               	movlb	2	; select bank2
 11138  044D  00E7               	movwf	(_errorOut+1)^(0+256)
 11139  044E  0021               	movlb	1	; select bank1
 11140  044F  0835               	movf	?_setLEDBrightnessRange^(0+128),w
 11141  0450  0022               	movlb	2	; select bank2
 11142  0451  00E6               	movwf	_errorOut^(0+256)
 11143  0452  0008               	return
 11144  0453                     l8415:	
 11145                           ;cmd_parser.c: 91: case CMD_HEATER_PWR: errorOut = setLEDPwr(s->p1.paramI, s->p2.paramI)
      +                          ; break;
 11146                           
 11147  0453  0021               	movlb	1	; select bank1
 11148  0454  0A55               	incf	execCmd@s^(0+128),w
 11149  0455  0086               	movwf	6
 11150  0456  3001               	movlw	1	; select bank2/3
 11151  0457  0087               	movwf	7
 11152  0458  3F40               	moviw [0]fsr1
 11153  0459  00B5               	movwf	setLEDPwr@pwr^(0+128)
 11154  045A  3F41               	moviw [1]fsr1
 11155  045B  00B6               	movwf	(setLEDPwr@pwr+1)^(0+128)
 11156  045C  0855               	movf	execCmd@s^(0+128),w
 11157  045D  3E0B               	addlw	11
 11158  045E  0086               	movwf	6
 11159  045F  3001               	movlw	1	; select bank2/3
 11160  0460  0087               	movwf	7
 11161  0461  3F40               	moviw [0]fsr1
 11162  0462  00B7               	movwf	setLEDPwr@topOrBottom^(0+128)
 11163  0463  3F41               	moviw [1]fsr1
 11164  0464  00B8               	movwf	(setLEDPwr@topOrBottom+1)^(0+128)
 11165  0465  31A4  24B8         	fcall	_setLEDPwr
 11166  0467  0021               	movlb	1	; select bank1
 11167  0468  0836               	movf	(?_setLEDPwr+1)^(0+128),w
 11168  0469  0022               	movlb	2	; select bank2
 11169  046A  00E7               	movwf	(_errorOut+1)^(0+256)
 11170  046B  0021               	movlb	1	; select bank1
 11171  046C  0835               	movf	?_setLEDPwr^(0+128),w
 11172  046D  0022               	movlb	2	; select bank2
 11173  046E  00E6               	movwf	_errorOut^(0+256)
 11174  046F  0008               	return
 11175  0470                     l8417:	
 11176                           ;cmd_parser.c: 92: case CMD_HEATER_TOGGLE: errorOut = setHeaterToggle(s->p1.paramI, s->p
      +                          2.paramI); break;
 11177                           
 11178  0470  0021               	movlb	1	; select bank1
 11179  0471  0A55               	incf	execCmd@s^(0+128),w
 11180  0472  0086               	movwf	6
 11181  0473  3001               	movlw	1	; select bank2/3
 11182  0474  0087               	movwf	7
 11183  0475  3F40               	moviw [0]fsr1
 11184  0476  00B5               	movwf	setHeaterToggle@num^(0+128)
 11185  0477  3F41               	moviw [1]fsr1
 11186  0478  00B6               	movwf	(setHeaterToggle@num+1)^(0+128)
 11187  0479  0855               	movf	execCmd@s^(0+128),w
 11188  047A  3E0B               	addlw	11
 11189  047B  0086               	movwf	6
 11190  047C  3001               	movlw	1	; select bank2/3
 11191  047D  0087               	movwf	7
 11192  047E  3F40               	moviw [0]fsr1
 11193  047F  00B7               	movwf	setHeaterToggle@topOrB^(0+128)
 11194  0480  3F41               	moviw [1]fsr1
 11195  0481  00B8               	movwf	(setHeaterToggle@topOrB+1)^(0+128)
 11196  0482  3196  26FC         	fcall	_setHeaterToggle
 11197  0484  0021               	movlb	1	; select bank1
 11198  0485  0836               	movf	(?_setHeaterToggle+1)^(0+128),w
 11199  0486  0022               	movlb	2	; select bank2
 11200  0487  00E7               	movwf	(_errorOut+1)^(0+256)
 11201  0488  0021               	movlb	1	; select bank1
 11202  0489  0835               	movf	?_setHeaterToggle^(0+128),w
 11203  048A  0022               	movlb	2	; select bank2
 11204  048B  00E6               	movwf	_errorOut^(0+256)
 11205  048C  0008               	return
 11206  048D                     l8419:	
 11207                           ;cmd_parser.c: 93: case CMD_HEATER_TIMED: errorOut = timedActiveHeatOn(s->p1.paramL, s->
      +                          p2.paramI); break;
 11208                           
 11209  048D  0021               	movlb	1	; select bank1
 11210  048E  0A55               	incf	execCmd@s^(0+128),w
 11211  048F  0086               	movwf	6
 11212  0490  3001               	movlw	1	; select bank2/3
 11213  0491  0087               	movwf	7
 11214  0492  3F40               	moviw [0]fsr1
 11215  0493  00B5               	movwf	timedActiveHeatOn@onTime^(0+128)
 11216  0494  3F41               	moviw [1]fsr1
 11217  0495  00B6               	movwf	(timedActiveHeatOn@onTime+1)^(0+128)
 11218  0496  3F42               	moviw [2]fsr1
 11219  0497  00B7               	movwf	(timedActiveHeatOn@onTime+2)^(0+128)
 11220  0498  3F43               	moviw [3]fsr1
 11221  0499  00B8               	movwf	(timedActiveHeatOn@onTime+3)^(0+128)
 11222  049A  0855               	movf	execCmd@s^(0+128),w
 11223  049B  3E0B               	addlw	11
 11224  049C  0086               	movwf	6
 11225  049D  3001               	movlw	1	; select bank2/3
 11226  049E  0087               	movwf	7
 11227  049F  3F40               	moviw [0]fsr1
 11228  04A0  00B9               	movwf	timedActiveHeatOn@topOrB^(0+128)
 11229  04A1  3F41               	moviw [1]fsr1
 11230  04A2  00BA               	movwf	(timedActiveHeatOn@topOrB+1)^(0+128)
 11231  04A3  3188  20F0         	fcall	_timedActiveHeatOn
 11232  04A5  0021               	movlb	1	; select bank1
 11233  04A6  0836               	movf	(?_timedActiveHeatOn+1)^(0+128),w
 11234  04A7  0022               	movlb	2	; select bank2
 11235  04A8  00E7               	movwf	(_errorOut+1)^(0+256)
 11236  04A9  0021               	movlb	1	; select bank1
 11237  04AA  0835               	movf	?_timedActiveHeatOn^(0+128),w
 11238  04AB  0022               	movlb	2	; select bank2
 11239  04AC  00E6               	movwf	_errorOut^(0+256)
 11240  04AD  0008               	return
 11241  04AE                     l8421:	
 11242                           ;cmd_parser.c: 96: case CMD_SETA: errorOut = setActive(s->p1.paramI, s->p2.paramI); brea
      +                          k;
 11243                           
 11244  04AE  0021               	movlb	1	; select bank1
 11245  04AF  0A55               	incf	execCmd@s^(0+128),w
 11246  04B0  0086               	movwf	6
 11247  04B1  3001               	movlw	1	; select bank2/3
 11248  04B2  0087               	movwf	7
 11249  04B3  3F40               	moviw [0]fsr1
 11250  04B4  00B5               	movwf	setActive@probeNum^(0+128)
 11251  04B5  3F41               	moviw [1]fsr1
 11252  04B6  00B6               	movwf	(setActive@probeNum+1)^(0+128)
 11253  04B7  0855               	movf	execCmd@s^(0+128),w
 11254  04B8  3E0B               	addlw	11
 11255  04B9  0086               	movwf	6
 11256  04BA  3001               	movlw	1	; select bank2/3
 11257  04BB  0087               	movwf	7
 11258  04BC  3F40               	moviw [0]fsr1
 11259  04BD  00B7               	movwf	setActive@onOff^(0+128)
 11260  04BE  3F41               	moviw [1]fsr1
 11261  04BF  00B8               	movwf	(setActive@onOff+1)^(0+128)
 11262  04C0  3195  2591         	fcall	_setActive
 11263  04C2  0021               	movlb	1	; select bank1
 11264  04C3  0836               	movf	(?_setActive+1)^(0+128),w
 11265  04C4  0022               	movlb	2	; select bank2
 11266  04C5  00E7               	movwf	(_errorOut+1)^(0+256)
 11267  04C6  0021               	movlb	1	; select bank1
 11268  04C7  0835               	movf	?_setActive^(0+128),w
 11269  04C8  0022               	movlb	2	; select bank2
 11270  04C9  00E6               	movwf	_errorOut^(0+256)
 11271  04CA  0008               	return
 11272  04CB                     l8423:	
 11273                           ;cmd_parser.c: 97: case CMD_SETM: errorOut = setMoveMask(s->p1.paramI, s->p2.paramI); br
      +                          eak;
 11274                           
 11275  04CB  0021               	movlb	1	; select bank1
 11276  04CC  0A55               	incf	execCmd@s^(0+128),w
 11277  04CD  0086               	movwf	6
 11278  04CE  3001               	movlw	1	; select bank2/3
 11279  04CF  0087               	movwf	7
 11280  04D0  3F40               	moviw [0]fsr1
 11281  04D1  00B5               	movwf	setMoveMask@probeNum^(0+128)
 11282  04D2  3F41               	moviw [1]fsr1
 11283  04D3  00B6               	movwf	(setMoveMask@probeNum+1)^(0+128)
 11284  04D4  0855               	movf	execCmd@s^(0+128),w
 11285  04D5  3E0B               	addlw	11
 11286  04D6  0086               	movwf	6
 11287  04D7  3001               	movlw	1	; select bank2/3
 11288  04D8  0087               	movwf	7
 11289  04D9  3F40               	moviw [0]fsr1
 11290  04DA  00B7               	movwf	setMoveMask@onOff^(0+128)
 11291  04DB  3F41               	moviw [1]fsr1
 11292  04DC  00B8               	movwf	(setMoveMask@onOff+1)^(0+128)
 11293  04DD  3194  2434         	fcall	_setMoveMask
 11294  04DF  0021               	movlb	1	; select bank1
 11295  04E0  0836               	movf	(?_setMoveMask+1)^(0+128),w
 11296  04E1  0022               	movlb	2	; select bank2
 11297  04E2  00E7               	movwf	(_errorOut+1)^(0+256)
 11298  04E3  0021               	movlb	1	; select bank1
 11299  04E4  0835               	movf	?_setMoveMask^(0+128),w
 11300  04E5  0022               	movlb	2	; select bank2
 11301  04E6  00E6               	movwf	_errorOut^(0+256)
 11302  04E7  0008               	return
 11303  04E8                     l8425:	
 11304                           ;cmd_parser.c: 98: case CMD_GET_ACTIVE: errorOut = getActive(); break;
 11305                           
 11306  04E8  319B  2327         	fcall	_getActive
 11307  04EA  0021               	movlb	1	; select bank1
 11308  04EB  0836               	movf	(?_getActive+1)^(0+128),w
 11309  04EC  0022               	movlb	2	; select bank2
 11310  04ED  00E7               	movwf	(_errorOut+1)^(0+256)
 11311  04EE  0021               	movlb	1	; select bank1
 11312  04EF  0835               	movf	?_getActive^(0+128),w
 11313  04F0  0022               	movlb	2	; select bank2
 11314  04F1  00E6               	movwf	_errorOut^(0+256)
 11315  04F2  0008               	return
 11316  04F3                     l8427:	
 11317                           ;cmd_parser.c: 99: case CMD_GET_MOVABLE: errorOut = getMoveMask(); break;
 11318                           
 11319  04F3  319B  2374         	fcall	_getMoveMask
 11320  04F5  0021               	movlb	1	; select bank1
 11321  04F6  0836               	movf	(?_getMoveMask+1)^(0+128),w
 11322  04F7  0022               	movlb	2	; select bank2
 11323  04F8  00E7               	movwf	(_errorOut+1)^(0+256)
 11324  04F9  0021               	movlb	1	; select bank1
 11325  04FA  0835               	movf	?_getMoveMask^(0+128),w
 11326  04FB  0022               	movlb	2	; select bank2
 11327  04FC  00E6               	movwf	_errorOut^(0+256)
 11328  04FD  0008               	return
 11329  04FE                     l8429:	
 11330                           ;cmd_parser.c: 100: case CMD_MOTION_STATUS: errorOut = getMotionStatus(); break;
 11331                           
 11332  04FE  31A5  259A         	fcall	_getMotionStatus
 11333  0500  0021               	movlb	1	; select bank1
 11334  0501  0836               	movf	(?_getMotionStatus+1)^(0+128),w
 11335  0502  0022               	movlb	2	; select bank2
 11336  0503  00E7               	movwf	(_errorOut+1)^(0+256)
 11337  0504  0021               	movlb	1	; select bank1
 11338  0505  0835               	movf	?_getMotionStatus^(0+128),w
 11339  0506  0022               	movlb	2	; select bank2
 11340  0507  00E6               	movwf	_errorOut^(0+256)
 11341  0508  0008               	return
 11342  0509                     l8431:	
 11343                           ;cmd_parser.c: 101: case CMD_DOMOVE: errorOut = doMove(); break;
 11344                           
 11345  0509  3189  2188         	fcall	_doMove
 11346  050B  0021               	movlb	1	; select bank1
 11347  050C  0840               	movf	(?_doMove+1)^(0+128),w
 11348  050D  0022               	movlb	2	; select bank2
 11349  050E  00E7               	movwf	(_errorOut+1)^(0+256)
 11350  050F  0021               	movlb	1	; select bank1
 11351  0510  083F               	movf	?_doMove^(0+128),w
 11352  0511  0022               	movlb	2	; select bank2
 11353  0512  00E6               	movwf	_errorOut^(0+256)
 11354  0513  0008               	return
 11355  0514                     l8433:	
 11356                           ;cmd_parser.c: 102: case CMD_COMM_CHECK: errorOut = commCheck(); break;
 11357                           
 11358  0514  318A  223A         	fcall	_commCheck
 11359  0516  0021               	movlb	1	; select bank1
 11360  0517  0853               	movf	(?_commCheck+1)^(0+128),w
 11361  0518  0022               	movlb	2	; select bank2
 11362  0519  00E7               	movwf	(_errorOut+1)^(0+256)
 11363  051A  0021               	movlb	1	; select bank1
 11364  051B  0852               	movf	?_commCheck^(0+128),w
 11365  051C  0022               	movlb	2	; select bank2
 11366  051D  00E6               	movwf	_errorOut^(0+256)
 11367  051E  0008               	return
 11368  051F                     l8435:	
 11369                           ;cmd_parser.c: 103: case CMD_PING: printf("!\n"); break;
 11370                           
 11371  051F  30C8               	movlw	low ((STR_79+20)| (0+32768))
 11372  0520  0021               	movlb	1	; select bank1
 11373  0521  00A0               	movwf	printf@f^(0+128)
 11374  0522  30A8               	movlw	high ((STR_79+20)| (0+32768))
 11375  0523  00A1               	movwf	(printf@f^(0+128)+1)
 11376  0524  318E  26CE         	fcall	_printf
 11377  0526  0008               	return
 11378  0527                     l8437:	
 11379                           ;cmd_parser.c: 104: default: printf("UNRECOGNIZED COMMAND!\n");
 11380                           
 11381  0527  30B4               	movlw	low (STR_79| (0+32768))
 11382  0528  0021               	movlb	1	; select bank1
 11383  0529  00A0               	movwf	printf@f^(0+128)
 11384  052A  30A8               	movlw	high (STR_79| (0+32768))
 11385  052B  00A1               	movwf	(printf@f^(0+128)+1)
 11386  052C  318E  26CE         	fcall	_printf
 11387                           
 11388                           ;cmd_parser.c: 111: }
 11389  052E  0008               	return
 11390  052F                     l8439:	
 11391  052F  0021               	movlb	1	; select bank1
 11392  0530  0855               	movf	execCmd@s^(0+128),w
 11393  0531  0086               	movwf	6
 11394  0532  3001               	movlw	1	; select bank2/3
 11395  0533  0087               	movwf	7
 11396  0534  0801               	movf	1,w
 11397                           
 11398                           ; Switch size 1, requested type "space"
 11399                           ; Number of cases is 22, Range of values is 1 to 23
 11400                           ; switch strategies available:
 11401                           ; Name         Instructions Cycles
 11402                           ; direct_byte           55     9 (fixed)
 11403                           ; simple_byte           67    34 (average)
 11404                           ; jumptable            263     9 (fixed)
 11405                           ;	Chosen strategy is direct_byte
 11406  0535  3EFF               	addlw	-1
 11407  0536  1C03               	skipc
 11408  0537  2D27               	goto	l8437
 11409  0538  0084               	movwf	4
 11410  0539  3017               	movlw	23
 11411  053A  0204               	subwf	4,w
 11412  053B  1803               	skipnc
 11413  053C  2D27               	goto	l8437
 11414  053D  31A0               	movlp	high S8763
 11415  053E  3504               	lslf	4,w
 11416  053F  3E00               	addlw	low S8763
 11417  0540  0082               	movwf	2
 11418                           
 11419                           ;cmd_parser.c: 113: return errorOut;
 11420                           ;	Return value of _execCmd is never used
 11421  0541  0008               	return
 11422  0542                     __end_of_execCmd:	
 11423                           
 11424                           	psect	swtext1
 11425  2000                     __pswtext1:	
 11426  2000                     S8763:	
 11427  2000  3183  2B94         	ljmp	l8395
 11428  2002  3183  2B80         	ljmp	l8393
 11429  2004  3183  2BA8         	ljmp	l8397
 11430  2006  3183  2BBC         	ljmp	l8399
 11431  2008  3185  2D27         	ljmp	l8437
 11432  200A  3184  2CAE         	ljmp	l8421
 11433  200C  3184  2CCB         	ljmp	l8423
 11434  200E  3183  2BC7         	ljmp	l8401
 11435  2010  3183  2BD2         	ljmp	l8403
 11436  2012  3183  2BE6         	ljmp	l8405
 11437  2014  3183  2BFA         	ljmp	l8407
 11438  2016  3184  2C0E         	ljmp	l8409
 11439  2018  3184  2C22         	ljmp	l8411
 11440  201A  3184  2C36         	ljmp	l8413
 11441  201C  3184  2C53         	ljmp	l8415
 11442  201E  3184  2C70         	ljmp	l8417
 11443  2020  3184  2C8D         	ljmp	l8419
 11444  2022  3184  2CE8         	ljmp	l8425
 11445  2024  3184  2CF3         	ljmp	l8427
 11446  2026  3184  2CFE         	ljmp	l8429
 11447  2028  3185  2D09         	ljmp	l8431
 11448  202A  3185  2D14         	ljmp	l8433
 11449  202C  3185  2D1F         	ljmp	l8435
 11450                           
 11451                           	psect	text20
 11452  151C                     __ptext20:	
 11453 ;; *************** function _zeroPosition *****************
 11454 ;; Defined at:
 11455 ;;		line 374 in file "main.c"
 11456 ;; Parameters:    Size  Location     Type
 11457 ;;		None
 11458 ;; Auto vars:     Size  Location     Type
 11459 ;;  i               2   41[BANK0 ] int 
 11460 ;; Return value:  Size  Location     Type
 11461 ;;                  2   21[BANK1 ] int 
 11462 ;; Registers used:
 11463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11464 ;; Tracked objects:
 11465 ;;		On entry : 0/0
 11466 ;;		On exit  : 0/0
 11467 ;;		Unchanged: 0/0
 11468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11469 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11470 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11471 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11472 ;;      Totals:         0       2      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11473 ;;Total ram usage:       12 bytes
 11474 ;; Hardware stack levels used:    1
 11475 ;; Hardware stack levels required when called:    9
 11476 ;; This function calls:
 11477 ;;		_printf
 11478 ;; This function is called by:
 11479 ;;		_execCmd
 11480 ;; This function uses a non-reentrant model
 11481 ;;
 11482                           
 11483                           
 11484                           ;psect for function _zeroPosition
 11485  151C                     _zeroPosition:	
 11486                           
 11487                           ;main.c: 375: for(int i = 0; i<24; i++){
 11488                           
 11489                           ;incstack = 0
 11490                           ; Regs used in _zeroPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11491  151C  0020               	movlb	0	; select bank0
 11492  151D  01C9               	clrf	zeroPosition@i
 11493  151E  01CA               	clrf	zeroPosition@i+1
 11494  151F  084A               	movf	zeroPosition@i+1,w
 11495  1520  3A80               	xorlw	128
 11496  1521  0021               	movlb	1	; select bank1
 11497  1522  00B7               	movwf	??_zeroPosition^(0+128)
 11498  1523  3080               	movlw	128
 11499  1524  0237               	subwf	??_zeroPosition^(0+128),w
 11500  1525  1D03               	skipz
 11501  1526  2D2A               	goto	u8105
 11502  1527  3018               	movlw	24
 11503  1528  0020               	movlb	0	; select bank0
 11504  1529  0249               	subwf	zeroPosition@i,w
 11505  152A                     u8105:	
 11506  152A  1803               	btfsc	3,0
 11507  152B  2D86               	goto	l8017
 11508  152C                     l8009:	
 11509                           
 11510                           ;main.c: 376: if((activeMask & (1UL << i)) > 0)
 11511  152C  0021               	movlb	1	; select bank1
 11512  152D  0863               	movf	_activeMask^(0+128),w
 11513  152E  00B7               	movwf	??_zeroPosition^(0+128)
 11514  152F  0864               	movf	(_activeMask+1)^(0+128),w
 11515  1530  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 11516  1531  0865               	movf	(_activeMask+2)^(0+128),w
 11517  1532  00B9               	movwf	(??_zeroPosition^(0+128)+2)
 11518  1533  0866               	movf	(_activeMask+3)^(0+128),w
 11519  1534  00BA               	movwf	(??_zeroPosition^(0+128)+3)
 11520  1535  3001               	movlw	1
 11521  1536  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 11522  1537  3000               	movlw	0
 11523  1538  00BC               	movwf	((??_zeroPosition+4)^(0+128)+1)
 11524  1539  3000               	movlw	0
 11525  153A  00BD               	movwf	((??_zeroPosition+4)^(0+128)+2)
 11526  153B  3000               	movlw	0
 11527  153C  00BE               	movwf	((??_zeroPosition+4)^(0+128)+3)
 11528  153D  0020               	movlb	0	; select bank0
 11529  153E  0A49               	incf	zeroPosition@i,w
 11530  153F  0021               	movlb	1	; select bank1
 11531  1540  2D45               	goto	u8110
 11532  1541                     u8115:	
 11533  1541  35BB               	lslf	(??_zeroPosition+4)^(0+128),f
 11534  1542  0DBC               	rlf	((??_zeroPosition+4)^(0+128)+1),f
 11535  1543  0DBD               	rlf	((??_zeroPosition+4)^(0+128)+2),f
 11536  1544  0DBE               	rlf	((??_zeroPosition+4)^(0+128)+3),f
 11537  1545                     u8110:	
 11538  1545  0B89               	decfsz	9,f
 11539  1546  2D41               	goto	u8115
 11540  1547  083B               	movf	(??_zeroPosition+4)^(0+128),w
 11541  1548  05B7               	andwf	??_zeroPosition^(0+128),f
 11542  1549  083C               	movf	(??_zeroPosition+5)^(0+128),w
 11543  154A  05B8               	andwf	(??_zeroPosition^(0+128)+1),f
 11544  154B  083D               	movf	(??_zeroPosition+6)^(0+128),w
 11545  154C  05B9               	andwf	(??_zeroPosition^(0+128)+2),f
 11546  154D  083E               	movf	(??_zeroPosition+7)^(0+128),w
 11547  154E  05BA               	andwf	(??_zeroPosition^(0+128)+3),f
 11548  154F  083A               	movf	(??_zeroPosition+3)^(0+128),w
 11549  1550  0439               	iorwf	(??_zeroPosition+2)^(0+128),w
 11550  1551  0438               	iorwf	(??_zeroPosition+1)^(0+128),w
 11551  1552  0437               	iorwf	??_zeroPosition^(0+128),w
 11552  1553  1903               	skipnz
 11553  1554  2D74               	goto	l8013
 11554                           
 11555                           ;main.c: 377: currentPositions_steps[i]=0;
 11556  1555  0020               	movlb	0	; select bank0
 11557  1556  084A               	movf	zeroPosition@i+1,w
 11558  1557  0021               	movlb	1	; select bank1
 11559  1558  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 11560  1559  0020               	movlb	0	; select bank0
 11561  155A  0849               	movf	zeroPosition@i,w
 11562  155B  0021               	movlb	1	; select bank1
 11563  155C  00B7               	movwf	??_zeroPosition^(0+128)
 11564  155D  35B7               	lslf	??_zeroPosition^(0+128),f
 11565  155E  0DB8               	rlf	(??_zeroPosition^(0+128)+1),f
 11566  155F  35B7               	lslf	??_zeroPosition^(0+128),f
 11567  1560  0DB8               	rlf	(??_zeroPosition^(0+128)+1),f
 11568  1561  3090               	movlw	144
 11569  1562  00B9               	movwf	(??_zeroPosition+2)^(0+128)
 11570  1563  3027               	movlw	39
 11571  1564  00BA               	movwf	((??_zeroPosition+2)^(0+128)+1)
 11572  1565  0837               	movf	??_zeroPosition^(0+128),w
 11573  1566  0739               	addwf	(??_zeroPosition+2)^(0+128),w
 11574  1567  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 11575  1568  0838               	movf	(??_zeroPosition+1)^(0+128),w
 11576  1569  3D3A               	addwfc	(??_zeroPosition+3)^(0+128),w
 11577  156A  00BC               	movwf	(??_zeroPosition+5)^(0+128)
 11578  156B  083B               	movf	(??_zeroPosition+4)^(0+128),w
 11579  156C  0086               	movwf	6
 11580  156D  083C               	movf	(??_zeroPosition+5)^(0+128),w
 11581  156E  0087               	movwf	7
 11582  156F  3000               	movlw	0
 11583  1570  3FC0               	movwi [0]fsr1
 11584  1571  3FC1               	movwi [1]fsr1
 11585  1572  3FC2               	movwi [2]fsr1
 11586  1573  3FC3               	movwi [3]fsr1
 11587  1574                     l8013:	
 11588  1574  3001               	movlw	1
 11589  1575  0020               	movlb	0	; select bank0
 11590  1576  07C9               	addwf	zeroPosition@i,f
 11591  1577  3000               	movlw	0
 11592  1578  3DCA               	addwfc	zeroPosition@i+1,f
 11593  1579  084A               	movf	zeroPosition@i+1,w
 11594  157A  3A80               	xorlw	128
 11595  157B  0021               	movlb	1	; select bank1
 11596  157C  00B7               	movwf	??_zeroPosition^(0+128)
 11597  157D  3080               	movlw	128
 11598  157E  0237               	subwf	??_zeroPosition^(0+128),w
 11599  157F  1D03               	skipz
 11600  1580  2D84               	goto	u8135
 11601  1581  3018               	movlw	24
 11602  1582  0020               	movlb	0	; select bank0
 11603  1583  0249               	subwf	zeroPosition@i,w
 11604  1584                     u8135:	
 11605  1584  1C03               	skipc
 11606  1585  2D2C               	goto	l8009
 11607  1586                     l8017:	
 11608                           
 11609                           ;main.c: 378: }
 11610                           ;main.c: 379: printf("A\n");
 11611  1586  3036               	movlw	low (STR_7| (0+32768))
 11612  1587  0021               	movlb	1	; select bank1
 11613  1588  00A0               	movwf	printf@f^(0+128)
 11614  1589  30AA               	movlw	high (STR_7| (0+32768))
 11615  158A  00A1               	movwf	(printf@f^(0+128)+1)
 11616  158B  318E  26CE         	fcall	_printf
 11617                           
 11618                           ;main.c: 380: return 0;
 11619  158D  0021               	movlb	1	; select bank1
 11620  158E  01B5               	clrf	?_zeroPosition^(0+128)
 11621  158F  01B6               	clrf	(?_zeroPosition+1)^(0+128)
 11622  1590  0008               	return
 11623  1591                     __end_of_zeroPosition:	
 11624                           
 11625                           	psect	text21
 11626  08F0                     __ptext21:	
 11627 ;; *************** function _timedActiveHeatOn *****************
 11628 ;; Defined at:
 11629 ;;		line 478 in file "main.c"
 11630 ;; Parameters:    Size  Location     Type
 11631 ;;  onTime          4   21[BANK1 ] long 
 11632 ;;  topOrB          2   25[BANK1 ] int 
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;  t               2   32[BANK1 ] int 
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  2   21[BANK1 ] int 
 11637 ;; Registers used:
 11638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11639 ;; Tracked objects:
 11640 ;;		On entry : 0/0
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11644 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11645 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11646 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11647 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11648 ;;Total ram usage:       13 bytes
 11649 ;; Hardware stack levels used:    1
 11650 ;; Hardware stack levels required when called:    9
 11651 ;; This function calls:
 11652 ;;		_LEDsOn
 11653 ;;		_printf
 11654 ;; This function is called by:
 11655 ;;		_execCmd
 11656 ;; This function uses a non-reentrant model
 11657 ;;
 11658                           
 11659                           
 11660                           ;psect for function _timedActiveHeatOn
 11661  08F0                     _timedActiveHeatOn:	
 11662                           
 11663                           ;main.c: 479: _delay((unsigned long)((2000)*(1000000/4000.0)));
 11664                           
 11665                           ;incstack = 0
 11666                           ; Regs used in _timedActiveHeatOn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11667  08F0  3003               	movlw	3
 11668  08F1  0021               	movlb	1	; select bank1
 11669  08F2  00BC               	movwf	(??_timedActiveHeatOn^(0+128)+1)
 11670  08F3  308A               	movlw	138
 11671  08F4  00BB               	movwf	??_timedActiveHeatOn^(0+128)
 11672  08F5  3055               	movlw	85
 11673  08F6                     u9137:	
 11674  08F6  0B89               	decfsz	9,f
 11675  08F7  28F6               	goto	u9137
 11676  08F8  0BBB               	decfsz	??_timedActiveHeatOn^(0+128),f
 11677  08F9  28F6               	goto	u9137
 11678  08FA  0BBC               	decfsz	(??_timedActiveHeatOn^(0+128)+1),f
 11679  08FB  28F6               	goto	u9137
 11680  08FC  3200               	nop2
 11681                           
 11682                           ;main.c: 480: do { LATCbits.LATC1 = 0; } while(0);
 11683  08FD  0022               	movlb	2	; select bank2
 11684  08FE  108E               	bcf	14,1	;volatile
 11685                           
 11686                           ;main.c: 481: if(topOrB == 1){
 11687  08FF  0021               	movlb	1	; select bank1
 11688  0900  0339               	decf	timedActiveHeatOn@topOrB^(0+128),w
 11689  0901  043A               	iorwf	(timedActiveHeatOn@topOrB+1)^(0+128),w
 11690  0902  1D03               	btfss	3,2
 11691  0903  2915               	goto	l8147
 11692                           
 11693                           ;main.c: 482: LEDsOn(activeMask, 1);
 11694  0904  0866               	movf	(_activeMask+3)^(0+128),w
 11695  0905  0020               	movlb	0	; select bank0
 11696  0906  00C7               	movwf	LEDsOn@LEDpins+3
 11697  0907  0021               	movlb	1	; select bank1
 11698  0908  0865               	movf	(_activeMask+2)^(0+128),w
 11699  0909  0020               	movlb	0	; select bank0
 11700  090A  00C6               	movwf	LEDsOn@LEDpins+2
 11701  090B  0021               	movlb	1	; select bank1
 11702  090C  0864               	movf	(_activeMask+1)^(0+128),w
 11703  090D  0020               	movlb	0	; select bank0
 11704  090E  00C5               	movwf	LEDsOn@LEDpins+1
 11705  090F  0021               	movlb	1	; select bank1
 11706  0910  0863               	movf	_activeMask^(0+128),w
 11707  0911  0020               	movlb	0	; select bank0
 11708  0912  00C4               	movwf	LEDsOn@LEDpins
 11709  0913  3001               	movlw	1
 11710  0914  292B               	goto	L22
 11711  0915                     l8147:	
 11712                           ;main.c: 483: }
 11713                           
 11714                           
 11715                           ;main.c: 484: else if (topOrB == 2){
 11716  0915  3002               	movlw	2
 11717  0916  0021               	movlb	1	; select bank1
 11718  0917  0639               	xorwf	timedActiveHeatOn@topOrB^(0+128),w
 11719  0918  043A               	iorwf	(timedActiveHeatOn@topOrB+1)^(0+128),w
 11720  0919  1D03               	btfss	3,2
 11721  091A  2931               	goto	l8151
 11722                           
 11723                           ;main.c: 485: LEDsOn(activeMask, 2);
 11724  091B  0866               	movf	(_activeMask+3)^(0+128),w
 11725  091C  0020               	movlb	0	; select bank0
 11726  091D  00C7               	movwf	LEDsOn@LEDpins+3
 11727  091E  0021               	movlb	1	; select bank1
 11728  091F  0865               	movf	(_activeMask+2)^(0+128),w
 11729  0920  0020               	movlb	0	; select bank0
 11730  0921  00C6               	movwf	LEDsOn@LEDpins+2
 11731  0922  0021               	movlb	1	; select bank1
 11732  0923  0864               	movf	(_activeMask+1)^(0+128),w
 11733  0924  0020               	movlb	0	; select bank0
 11734  0925  00C5               	movwf	LEDsOn@LEDpins+1
 11735  0926  0021               	movlb	1	; select bank1
 11736  0927  0863               	movf	_activeMask^(0+128),w
 11737  0928  0020               	movlb	0	; select bank0
 11738  0929  00C4               	movwf	LEDsOn@LEDpins
 11739  092A  3002               	movlw	2
 11740  092B                     L22:	
 11741  092B  00C8               	movwf	LEDsOn@topOrBottom
 11742  092C  3000               	movlw	0
 11743  092D  00C9               	movwf	LEDsOn@topOrBottom+1
 11744  092E  31A5  2557  3188   	fcall	_LEDsOn
 11745  0931                     l8151:	
 11746                           
 11747                           ;main.c: 486: }
 11748                           ;main.c: 487: for(int t=0; t<onTime; t++) _delay((unsigned long)((1)*(1000000/4000.0)));
 11749  0931  0021               	movlb	1	; select bank1
 11750  0932  01C0               	clrf	timedActiveHeatOn@t^(0+128)
 11751  0933  01C1               	clrf	(timedActiveHeatOn@t+1)^(0+128)
 11752  0934                     l1208:	
 11753  0934  0840               	movf	timedActiveHeatOn@t^(0+128),w
 11754  0935  00BB               	movwf	??_timedActiveHeatOn^(0+128)
 11755  0936  0841               	movf	(timedActiveHeatOn@t+1)^(0+128),w
 11756  0937  00BC               	movwf	(??_timedActiveHeatOn^(0+128)+1)
 11757  0938  3000               	movlw	0
 11758  0939  1BBC               	btfsc	(??_timedActiveHeatOn^(0+128)+1),7
 11759  093A  30FF               	movlw	255
 11760  093B  00BD               	movwf	(??_timedActiveHeatOn^(0+128)+2)
 11761  093C  00BE               	movwf	(??_timedActiveHeatOn^(0+128)+3)
 11762  093D  083E               	movf	(??_timedActiveHeatOn+3)^(0+128),w
 11763  093E  3A80               	xorlw	128
 11764  093F  00BF               	movwf	(??_timedActiveHeatOn+4)^(0+128)
 11765  0940  0838               	movf	(timedActiveHeatOn@onTime+3)^(0+128),w
 11766  0941  3A80               	xorlw	128
 11767  0942  023F               	subwf	(??_timedActiveHeatOn+4)^(0+128),w
 11768  0943  1D03               	skipz
 11769  0944  294F               	goto	u8223
 11770  0945  0837               	movf	(timedActiveHeatOn@onTime+2)^(0+128),w
 11771  0946  023D               	subwf	(??_timedActiveHeatOn+2)^(0+128),w
 11772  0947  1D03               	skipz
 11773  0948  294F               	goto	u8223
 11774  0949  0836               	movf	(timedActiveHeatOn@onTime+1)^(0+128),w
 11775  094A  023C               	subwf	(??_timedActiveHeatOn+1)^(0+128),w
 11776  094B  1D03               	skipz
 11777  094C  294F               	goto	u8223
 11778  094D  0835               	movf	timedActiveHeatOn@onTime^(0+128),w
 11779  094E  023B               	subwf	??_timedActiveHeatOn^(0+128),w
 11780  094F                     u8223:	
 11781  094F  1803               	btfsc	3,0
 11782  0950  295B               	goto	l1211
 11783  0951  3053               	movlw	83
 11784  0952                     u9147:	
 11785  0952  0B89               	decfsz	9,f
 11786  0953  2952               	goto	u9147
 11787  0954  0000               	nop
 11788  0955  3001               	movlw	1
 11789  0956  0021               	movlb	1	; select bank1
 11790  0957  07C0               	addwf	timedActiveHeatOn@t^(0+128),f
 11791  0958  3000               	movlw	0
 11792  0959  3DC1               	addwfc	(timedActiveHeatOn@t+1)^(0+128),f
 11793  095A  2934               	goto	l1208
 11794  095B                     l1211:	
 11795                           ;main.c: 488: do { LATCbits.LATC1 = 1; } while(0);
 11796                           
 11797  095B  0022               	movlb	2	; select bank2
 11798  095C  148E               	bsf	14,1	;volatile
 11799                           
 11800                           ;main.c: 489: LEDsOn(0, 1);
 11801  095D  3000               	movlw	0
 11802  095E  0020               	movlb	0	; select bank0
 11803  095F  00C7               	movwf	LEDsOn@LEDpins+3
 11804  0960  3000               	movlw	0
 11805  0961  00C6               	movwf	LEDsOn@LEDpins+2
 11806  0962  3000               	movlw	0
 11807  0963  00C5               	movwf	LEDsOn@LEDpins+1
 11808  0964  3000               	movlw	0
 11809  0965  00C4               	movwf	LEDsOn@LEDpins
 11810  0966  3001               	movlw	1
 11811  0967  00C8               	movwf	LEDsOn@topOrBottom
 11812  0968  3000               	movlw	0
 11813  0969  00C9               	movwf	LEDsOn@topOrBottom+1
 11814  096A  31A5  2557  3188   	fcall	_LEDsOn
 11815                           
 11816                           ;main.c: 490: LEDsOn(0, 2);
 11817  096D  3000               	movlw	0
 11818  096E  0020               	movlb	0	; select bank0
 11819  096F  00C7               	movwf	LEDsOn@LEDpins+3
 11820  0970  3000               	movlw	0
 11821  0971  00C6               	movwf	LEDsOn@LEDpins+2
 11822  0972  3000               	movlw	0
 11823  0973  00C5               	movwf	LEDsOn@LEDpins+1
 11824  0974  3000               	movlw	0
 11825  0975  00C4               	movwf	LEDsOn@LEDpins
 11826  0976  3002               	movlw	2
 11827  0977  00C8               	movwf	LEDsOn@topOrBottom
 11828  0978  3000               	movlw	0
 11829  0979  00C9               	movwf	LEDsOn@topOrBottom+1
 11830  097A  31A5  2557  3188   	fcall	_LEDsOn
 11831                           
 11832                           ;main.c: 491: printf("A\n");
 11833  097D  3036               	movlw	low (STR_7| (0+32768))
 11834  097E  0021               	movlb	1	; select bank1
 11835  097F  00A0               	movwf	printf@f^(0+128)
 11836  0980  30AA               	movlw	high (STR_7| (0+32768))
 11837  0981  00A1               	movwf	(printf@f^(0+128)+1)
 11838  0982  318E  26CE         	fcall	_printf
 11839                           
 11840                           ;main.c: 492: return 0;
 11841  0984  0021               	movlb	1	; select bank1
 11842  0985  01B5               	clrf	?_timedActiveHeatOn^(0+128)
 11843  0986  01B6               	clrf	(?_timedActiveHeatOn+1)^(0+128)
 11844  0987  0008               	return
 11845  0988                     __end_of_timedActiveHeatOn:	
 11846                           
 11847                           	psect	text22
 11848  2674                     __ptext22:	
 11849 ;; *************** function _stop *****************
 11850 ;; Defined at:
 11851 ;;		line 297 in file "main.c"
 11852 ;; Parameters:    Size  Location     Type
 11853 ;;		None
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;		None
 11856 ;; Return value:  Size  Location     Type
 11857 ;;                  2   21[BANK1 ] int 
 11858 ;; Registers used:
 11859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11860 ;; Tracked objects:
 11861 ;;		On entry : 0/0
 11862 ;;		On exit  : 0/0
 11863 ;;		Unchanged: 0/0
 11864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11865 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11868 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11869 ;;Total ram usage:        2 bytes
 11870 ;; Hardware stack levels used:    1
 11871 ;; Hardware stack levels required when called:    9
 11872 ;; This function calls:
 11873 ;;		_printf
 11874 ;; This function is called by:
 11875 ;;		_execCmd
 11876 ;; This function uses a non-reentrant model
 11877 ;;
 11878                           
 11879                           
 11880                           ;psect for function _stop
 11881  2674                     _stop:	
 11882                           
 11883                           ;main.c: 298: motionType = NONE;
 11884                           
 11885                           ;incstack = 0
 11886                           ; Regs used in _stop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11887  2674  0020               	movlb	0	; select bank0
 11888  2675  01D5               	clrf	_motionType
 11889                           
 11890                           ;main.c: 299: moveVector_ups = 0;
 11891  2676  3000               	movlw	0
 11892  2677  00D1               	movwf	_moveVector_ups+3
 11893  2678  3000               	movlw	0
 11894  2679  00D0               	movwf	_moveVector_ups+2
 11895  267A  3000               	movlw	0
 11896  267B  00CF               	movwf	_moveVector_ups+1
 11897  267C  3000               	movlw	0
 11898  267D  00CE               	movwf	_moveVector_ups
 11899                           
 11900                           ;main.c: 300: moveVector_downs = 0;
 11901  267E  3000               	movlw	0
 11902  267F  0022               	movlb	2	; select bank2
 11903  2680  00C9               	movwf	(_moveVector_downs+3)^(0+256)
 11904  2681  3000               	movlw	0
 11905  2682  00C8               	movwf	(_moveVector_downs+2)^(0+256)
 11906  2683  3000               	movlw	0
 11907  2684  00C7               	movwf	(_moveVector_downs+1)^(0+256)
 11908  2685  3000               	movlw	0
 11909  2686  00C6               	movwf	_moveVector_downs^(0+256)
 11910                           
 11911                           ;main.c: 301: remainingSteps = 0;
 11912  2687  3000               	movlw	0
 11913  2688  00C5               	movwf	(_remainingSteps+3)^(0+256)
 11914  2689  3000               	movlw	0
 11915  268A  00C4               	movwf	(_remainingSteps+2)^(0+256)
 11916  268B  3000               	movlw	0
 11917  268C  00C3               	movwf	(_remainingSteps+1)^(0+256)
 11918  268D  3000               	movlw	0
 11919  268E  00C2               	movwf	_remainingSteps^(0+256)
 11920                           
 11921                           ;main.c: 302: printf("A\n");
 11922  268F  3036               	movlw	low (STR_7| (0+32768))
 11923  2690  0021               	movlb	1	; select bank1
 11924  2691  00A0               	movwf	printf@f^(0+128)
 11925  2692  30AA               	movlw	high (STR_7| (0+32768))
 11926  2693  00A1               	movwf	(printf@f^(0+128)+1)
 11927  2694  318E  26CE         	fcall	_printf
 11928                           
 11929                           ;main.c: 303: return 0;
 11930  2696  0021               	movlb	1	; select bank1
 11931  2697  01B5               	clrf	?_stop^(0+128)
 11932  2698  01B6               	clrf	(?_stop+1)^(0+128)
 11933  2699  0008               	return
 11934  269A                     __end_of_stop:	
 11935                           
 11936                           	psect	text23
 11937  240C                     __ptext23:	
 11938 ;; *************** function _startRelMove *****************
 11939 ;; Defined at:
 11940 ;;		line 283 in file "main.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;  steps           2   21[BANK1 ] int 
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;		None
 11945 ;; Return value:  Size  Location     Type
 11946 ;;                  2   21[BANK1 ] int 
 11947 ;; Registers used:
 11948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11949 ;; Tracked objects:
 11950 ;;		On entry : 0/0
 11951 ;;		On exit  : 0/0
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11954 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11957 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11958 ;;Total ram usage:        2 bytes
 11959 ;; Hardware stack levels used:    1
 11960 ;; Hardware stack levels required when called:    9
 11961 ;; This function calls:
 11962 ;;		_printf
 11963 ;; This function is called by:
 11964 ;;		_execCmd
 11965 ;; This function uses a non-reentrant model
 11966 ;;
 11967                           
 11968                           
 11969                           ;psect for function _startRelMove
 11970  240C                     _startRelMove:	
 11971                           
 11972                           ;main.c: 284: motionType = REL_MOVE;
 11973                           
 11974                           ;incstack = 0
 11975                           ; Regs used in _startRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11976  240C  0020               	movlb	0	; select bank0
 11977  240D  01D5               	clrf	_motionType
 11978  240E  0AD5               	incf	_motionType,f
 11979                           
 11980                           ;main.c: 285: remainingSteps = steps;
 11981  240F  0021               	movlb	1	; select bank1
 11982  2410  0835               	movf	startRelMove@steps^(0+128),w
 11983  2411  0022               	movlb	2	; select bank2
 11984  2412  00C2               	movwf	_remainingSteps^(0+256)
 11985  2413  0021               	movlb	1	; select bank1
 11986  2414  0836               	movf	(startRelMove@steps+1)^(0+128),w
 11987  2415  0022               	movlb	2	; select bank2
 11988  2416  00C3               	movwf	(_remainingSteps+1)^(0+256)
 11989  2417  0D89               	rlf	9,f
 11990  2418  3B89               	subwfb	9,f
 11991  2419  0989               	comf	9,f
 11992  241A  00C4               	movwf	(_remainingSteps+2)^(0+256)
 11993  241B  00C5               	movwf	(_remainingSteps+3)^(0+256)
 11994                           
 11995                           ;main.c: 286: printf("A\n");
 11996  241C  3036               	movlw	low (STR_7| (0+32768))
 11997  241D  0021               	movlb	1	; select bank1
 11998  241E  00A0               	movwf	printf@f^(0+128)
 11999  241F  30AA               	movlw	high (STR_7| (0+32768))
 12000  2420  00A1               	movwf	(printf@f^(0+128)+1)
 12001  2421  318E  26CE         	fcall	_printf
 12002                           
 12003                           ;main.c: 287: return 0;
 12004  2423  0021               	movlb	1	; select bank1
 12005  2424  01B5               	clrf	?_startRelMove^(0+128)
 12006  2425  01B6               	clrf	(?_startRelMove+1)^(0+128)
 12007  2426  0008               	return
 12008  2427                     __end_of_startRelMove:	
 12009                           
 12010                           	psect	text24
 12011  245F                     __ptext24:	
 12012 ;; *************** function _startAbsMove *****************
 12013 ;; Defined at:
 12014 ;;		line 289 in file "main.c"
 12015 ;; Parameters:    Size  Location     Type
 12016 ;;  steps           2   21[BANK1 ] int 
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;		None
 12019 ;; Return value:  Size  Location     Type
 12020 ;;                  2   21[BANK1 ] int 
 12021 ;; Registers used:
 12022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12023 ;; Tracked objects:
 12024 ;;		On entry : 0/0
 12025 ;;		On exit  : 0/0
 12026 ;;		Unchanged: 0/0
 12027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12028 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12030 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12031 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12032 ;;Total ram usage:        3 bytes
 12033 ;; Hardware stack levels used:    1
 12034 ;; Hardware stack levels required when called:    9
 12035 ;; This function calls:
 12036 ;;		_printf
 12037 ;; This function is called by:
 12038 ;;		_execCmd
 12039 ;; This function uses a non-reentrant model
 12040 ;;
 12041                           
 12042                           
 12043                           ;psect for function _startAbsMove
 12044  245F                     _startAbsMove:	
 12045                           
 12046                           ;main.c: 290: motionType = ABS_MOVE;
 12047                           
 12048                           ;incstack = 0
 12049                           ; Regs used in _startAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12050  245F  3002               	movlw	2
 12051  2460  0020               	movlb	0	; select bank0
 12052  2461  00C9               	movwf	??_startAbsMove
 12053  2462  0849               	movf	??_startAbsMove,w
 12054  2463  00D5               	movwf	_motionType
 12055                           
 12056                           ;main.c: 291: absCommand = steps;
 12057  2464  0021               	movlb	1	; select bank1
 12058  2465  0835               	movf	startAbsMove@steps^(0+128),w
 12059  2466  0022               	movlb	2	; select bank2
 12060  2467  00BE               	movwf	_absCommand^(0+256)
 12061  2468  0021               	movlb	1	; select bank1
 12062  2469  0836               	movf	(startAbsMove@steps+1)^(0+128),w
 12063  246A  0022               	movlb	2	; select bank2
 12064  246B  00BF               	movwf	(_absCommand+1)^(0+256)
 12065  246C  0D89               	rlf	9,f
 12066  246D  3B89               	subwfb	9,f
 12067  246E  0989               	comf	9,f
 12068  246F  00C0               	movwf	(_absCommand+2)^(0+256)
 12069  2470  00C1               	movwf	(_absCommand+3)^(0+256)
 12070                           
 12071                           ;main.c: 292: printf("A\n");
 12072  2471  3036               	movlw	low (STR_7| (0+32768))
 12073  2472  0021               	movlb	1	; select bank1
 12074  2473  00A0               	movwf	printf@f^(0+128)
 12075  2474  30AA               	movlw	high (STR_7| (0+32768))
 12076  2475  00A1               	movwf	(printf@f^(0+128)+1)
 12077  2476  318E  26CE         	fcall	_printf
 12078                           
 12079                           ;main.c: 293: return 0;
 12080  2478  0021               	movlb	1	; select bank1
 12081  2479  01B5               	clrf	?_startAbsMove^(0+128)
 12082  247A  01B6               	clrf	(?_startAbsMove+1)^(0+128)
 12083  247B  0008               	return
 12084  247C                     __end_of_startAbsMove:	
 12085                           
 12086                           	psect	text25
 12087  1434                     __ptext25:	
 12088 ;; *************** function _setMoveMask *****************
 12089 ;; Defined at:
 12090 ;;		line 515 in file "main.c"
 12091 ;; Parameters:    Size  Location     Type
 12092 ;;  probeNum        2   21[BANK1 ] int 
 12093 ;;  onOff           2   23[BANK1 ] int 
 12094 ;; Auto vars:     Size  Location     Type
 12095 ;;		None
 12096 ;; Return value:  Size  Location     Type
 12097 ;;                  2   21[BANK1 ] int 
 12098 ;; Registers used:
 12099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12100 ;; Tracked objects:
 12101 ;;		On entry : 0/0
 12102 ;;		On exit  : 0/0
 12103 ;;		Unchanged: 0/0
 12104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12105 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12107 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12108 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12109 ;;Total ram usage:        8 bytes
 12110 ;; Hardware stack levels used:    1
 12111 ;; Hardware stack levels required when called:    9
 12112 ;; This function calls:
 12113 ;;		_printf
 12114 ;; This function is called by:
 12115 ;;		_execCmd
 12116 ;; This function uses a non-reentrant model
 12117 ;;
 12118                           
 12119                           
 12120                           ;psect for function _setMoveMask
 12121  1434                     _setMoveMask:	
 12122                           
 12123                           ;main.c: 519: if (probeNum < 24){
 12124                           
 12125                           ;incstack = 0
 12126                           ; Regs used in _setMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12127  1434  0021               	movlb	1	; select bank1
 12128  1435  0836               	movf	(setMoveMask@probeNum+1)^(0+128),w
 12129  1436  3A80               	xorlw	128
 12130  1437  0020               	movlb	0	; select bank0
 12131  1438  00C9               	movwf	??_setMoveMask
 12132  1439  3080               	movlw	128
 12133  143A  0249               	subwf	??_setMoveMask,w
 12134  143B  1D03               	skipz
 12135  143C  2C40               	goto	u8285
 12136  143D  3018               	movlw	24
 12137  143E  0021               	movlb	1	; select bank1
 12138  143F  0235               	subwf	setMoveMask@probeNum^(0+128),w
 12139  1440                     u8285:	
 12140  1440  1803               	skipnc
 12141  1441  2C9A               	goto	l8197
 12142                           
 12143                           ;main.c: 520: if (onOff)
 12144  1442  0021               	movlb	1	; select bank1
 12145  1443  0837               	movf	setMoveMask@onOff^(0+128),w
 12146  1444  0438               	iorwf	(setMoveMask@onOff+1)^(0+128),w
 12147  1445  1903               	btfsc	3,2
 12148  1446  2C6A               	goto	l8189
 12149                           
 12150                           ;main.c: 521: moveMask |= (1UL<<probeNum);
 12151  1447  3001               	movlw	1
 12152  1448  0020               	movlb	0	; select bank0
 12153  1449  00C9               	movwf	??_setMoveMask
 12154  144A  3000               	movlw	0
 12155  144B  00CA               	movwf	??_setMoveMask+1
 12156  144C  3000               	movlw	0
 12157  144D  00CB               	movwf	??_setMoveMask+2
 12158  144E  3000               	movlw	0
 12159  144F  00CC               	movwf	??_setMoveMask+3
 12160  1450  0021               	movlb	1	; select bank1
 12161  1451  0A35               	incf	setMoveMask@probeNum^(0+128),w
 12162  1452  0020               	movlb	0	; select bank0
 12163  1453  2C58               	goto	u8300
 12164  1454                     u8305:	
 12165  1454  35C9               	lslf	??_setMoveMask,f
 12166  1455  0DCA               	rlf	??_setMoveMask+1,f
 12167  1456  0DCB               	rlf	??_setMoveMask+2,f
 12168  1457  0DCC               	rlf	??_setMoveMask+3,f
 12169  1458                     u8300:	
 12170  1458  0B89               	decfsz	9,f
 12171  1459  2C54               	goto	u8305
 12172  145A  0849               	movf	??_setMoveMask,w
 12173  145B  0021               	movlb	1	; select bank1
 12174  145C  04DF               	iorwf	_moveMask^(0+128),f
 12175  145D  0020               	movlb	0	; select bank0
 12176  145E  084A               	movf	??_setMoveMask+1,w
 12177  145F  0021               	movlb	1	; select bank1
 12178  1460  04E0               	iorwf	(_moveMask+1)^(0+128),f
 12179  1461  0020               	movlb	0	; select bank0
 12180  1462  084B               	movf	??_setMoveMask+2,w
 12181  1463  0021               	movlb	1	; select bank1
 12182  1464  04E1               	iorwf	(_moveMask+2)^(0+128),f
 12183  1465  0020               	movlb	0	; select bank0
 12184  1466  084C               	movf	??_setMoveMask+3,w
 12185  1467  0021               	movlb	1	; select bank1
 12186  1468  04E2               	iorwf	(_moveMask+3)^(0+128),f
 12187  1469  2C90               	goto	l8191
 12188  146A                     l8189:	
 12189                           
 12190                           ;main.c: 522: else
 12191                           ;main.c: 523: moveMask &= ~(1UL<< probeNum);
 12192  146A  3001               	movlw	1
 12193  146B  0020               	movlb	0	; select bank0
 12194  146C  00C9               	movwf	??_setMoveMask
 12195  146D  3000               	movlw	0
 12196  146E  00CA               	movwf	??_setMoveMask+1
 12197  146F  3000               	movlw	0
 12198  1470  00CB               	movwf	??_setMoveMask+2
 12199  1471  3000               	movlw	0
 12200  1472  00CC               	movwf	??_setMoveMask+3
 12201  1473  0021               	movlb	1	; select bank1
 12202  1474  0A35               	incf	setMoveMask@probeNum^(0+128),w
 12203  1475  0020               	movlb	0	; select bank0
 12204  1476  2C7B               	goto	u8310
 12205  1477                     u8315:	
 12206  1477  35C9               	lslf	??_setMoveMask,f
 12207  1478  0DCA               	rlf	??_setMoveMask+1,f
 12208  1479  0DCB               	rlf	??_setMoveMask+2,f
 12209  147A  0DCC               	rlf	??_setMoveMask+3,f
 12210  147B                     u8310:	
 12211  147B  0B89               	decfsz	9,f
 12212  147C  2C77               	goto	u8315
 12213  147D  09C9               	comf	??_setMoveMask,f
 12214  147E  09CA               	comf	??_setMoveMask+1,f
 12215  147F  09CB               	comf	??_setMoveMask+2,f
 12216  1480  09CC               	comf	??_setMoveMask+3,f
 12217  1481  0849               	movf	??_setMoveMask,w
 12218  1482  0021               	movlb	1	; select bank1
 12219  1483  05DF               	andwf	_moveMask^(0+128),f
 12220  1484  0020               	movlb	0	; select bank0
 12221  1485  084A               	movf	??_setMoveMask+1,w
 12222  1486  0021               	movlb	1	; select bank1
 12223  1487  05E0               	andwf	(_moveMask+1)^(0+128),f
 12224  1488  0020               	movlb	0	; select bank0
 12225  1489  084B               	movf	??_setMoveMask+2,w
 12226  148A  0021               	movlb	1	; select bank1
 12227  148B  05E1               	andwf	(_moveMask+2)^(0+128),f
 12228  148C  0020               	movlb	0	; select bank0
 12229  148D  084C               	movf	??_setMoveMask+3,w
 12230  148E  0021               	movlb	1	; select bank1
 12231  148F  05E2               	andwf	(_moveMask+3)^(0+128),f
 12232  1490                     l8191:	
 12233                           
 12234                           ;main.c: 524: printf("A\n");
 12235  1490  3036               	movlw	low (STR_7| (0+32768))
 12236  1491  00A0               	movwf	printf@f^(0+128)
 12237  1492  30AA               	movlw	high (STR_7| (0+32768))
 12238  1493  00A1               	movwf	(printf@f^(0+128)+1)
 12239  1494  318E  26CE         	fcall	_printf
 12240                           
 12241                           ;main.c: 525: return 0;
 12242  1496  0021               	movlb	1	; select bank1
 12243  1497  01B5               	clrf	?_setMoveMask^(0+128)
 12244  1498  01B6               	clrf	(?_setMoveMask+1)^(0+128)
 12245  1499  0008               	return
 12246  149A                     l8197:	
 12247                           
 12248                           ;main.c: 526: }
 12249                           ;main.c: 527: printf("E\n");
 12250  149A  3039               	movlw	low (STR_14| (0+32768))
 12251  149B  0021               	movlb	1	; select bank1
 12252  149C  00A0               	movwf	printf@f^(0+128)
 12253  149D  30AA               	movlw	high (STR_14| (0+32768))
 12254  149E  00A1               	movwf	(printf@f^(0+128)+1)
 12255  149F  318E  26CE         	fcall	_printf
 12256                           
 12257                           ;main.c: 528: return 1;
 12258  14A1  3001               	movlw	1
 12259  14A2  0021               	movlb	1	; select bank1
 12260  14A3  00B5               	movwf	?_setMoveMask^(0+128)
 12261  14A4  3000               	movlw	0
 12262  14A5  00B6               	movwf	(?_setMoveMask^(0+128)+1)
 12263  14A6  0008               	return
 12264  14A7                     __end_of_setMoveMask:	
 12265                           
 12266                           	psect	text26
 12267  24B8                     __ptext26:	
 12268 ;; *************** function _setLEDPwr *****************
 12269 ;; Defined at:
 12270 ;;		line 451 in file "main.c"
 12271 ;; Parameters:    Size  Location     Type
 12272 ;;  pwr             2   21[BANK1 ] int 
 12273 ;;  topOrBottom     2   23[BANK1 ] int 
 12274 ;; Auto vars:     Size  Location     Type
 12275 ;;		None
 12276 ;; Return value:  Size  Location     Type
 12277 ;;                  2   21[BANK1 ] int 
 12278 ;; Registers used:
 12279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12280 ;; Tracked objects:
 12281 ;;		On entry : 0/0
 12282 ;;		On exit  : 0/0
 12283 ;;		Unchanged: 0/0
 12284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12285 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12288 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12289 ;;Total ram usage:        4 bytes
 12290 ;; Hardware stack levels used:    1
 12291 ;; Hardware stack levels required when called:    9
 12292 ;; This function calls:
 12293 ;;		_LEDsPwr
 12294 ;;		_printf
 12295 ;; This function is called by:
 12296 ;;		_execCmd
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           
 12301                           ;psect for function _setLEDPwr
 12302  24B8                     _setLEDPwr:	
 12303                           
 12304                           ;main.c: 452: LEDsPwr(pwr, topOrBottom);
 12305                           
 12306                           ;incstack = 0
 12307                           ; Regs used in _setLEDPwr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12308  24B8  0021               	movlb	1	; select bank1
 12309  24B9  0836               	movf	(setLEDPwr@pwr+1)^(0+128),w
 12310  24BA  0020               	movlb	0	; select bank0
 12311  24BB  00C5               	movwf	LEDsPwr@pwr+1
 12312  24BC  0021               	movlb	1	; select bank1
 12313  24BD  0835               	movf	setLEDPwr@pwr^(0+128),w
 12314  24BE  0020               	movlb	0	; select bank0
 12315  24BF  00C4               	movwf	LEDsPwr@pwr
 12316  24C0  0021               	movlb	1	; select bank1
 12317  24C1  0838               	movf	(setLEDPwr@topOrBottom+1)^(0+128),w
 12318  24C2  0020               	movlb	0	; select bank0
 12319  24C3  00C7               	movwf	LEDsPwr@topOrBottom+1
 12320  24C4  0021               	movlb	1	; select bank1
 12321  24C5  0837               	movf	setLEDPwr@topOrBottom^(0+128),w
 12322  24C6  0020               	movlb	0	; select bank0
 12323  24C7  00C6               	movwf	LEDsPwr@topOrBottom
 12324  24C8  3193  23D0  31A4   	fcall	_LEDsPwr
 12325                           
 12326                           ;main.c: 453: printf("A\n");
 12327  24CB  3036               	movlw	low (STR_7| (0+32768))
 12328  24CC  0021               	movlb	1	; select bank1
 12329  24CD  00A0               	movwf	printf@f^(0+128)
 12330  24CE  30AA               	movlw	high (STR_7| (0+32768))
 12331  24CF  00A1               	movwf	(printf@f^(0+128)+1)
 12332  24D0  318E  26CE         	fcall	_printf
 12333                           
 12334                           ;main.c: 454: return 0;
 12335  24D2  0021               	movlb	1	; select bank1
 12336  24D3  01B5               	clrf	?_setLEDPwr^(0+128)
 12337  24D4  01B6               	clrf	(?_setLEDPwr+1)^(0+128)
 12338  24D5  0008               	return
 12339  24D6                     __end_of_setLEDPwr:	
 12340                           
 12341                           	psect	text27
 12342  13D0                     __ptext27:	
 12343 ;; *************** function _LEDsPwr *****************
 12344 ;; Defined at:
 12345 ;;		line 12 in file "LEDcomm.c"
 12346 ;; Parameters:    Size  Location     Type
 12347 ;;  pwr             2   36[BANK0 ] int 
 12348 ;;  topOrBottom     2   38[BANK0 ] int 
 12349 ;; Auto vars:     Size  Location     Type
 12350 ;;  pwrAll          4    0[BANK1 ] unsigned long 
 12351 ;; Return value:  Size  Location     Type
 12352 ;;                  1    wreg      void 
 12353 ;; Registers used:
 12354 ;;		wreg, status,2, status,0, pclath, cstack
 12355 ;; Tracked objects:
 12356 ;;		On entry : 0/0
 12357 ;;		On exit  : 0/0
 12358 ;;		Unchanged: 0/0
 12359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12360 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12361 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12362 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12363 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12364 ;;Total ram usage:       14 bytes
 12365 ;; Hardware stack levels used:    1
 12366 ;; Hardware stack levels required when called:    8
 12367 ;; This function calls:
 12368 ;;		_send_2length_2bytes_IK
 12369 ;; This function is called by:
 12370 ;;		_main_initialize
 12371 ;;		_setLEDPwr
 12372 ;; This function uses a non-reentrant model
 12373 ;;
 12374                           
 12375                           
 12376                           ;psect for function _LEDsPwr
 12377  13D0                     _LEDsPwr:	
 12378                           
 12379                           ;LEDcomm.c: 13: pwr = (pwr>63) ? 63 : pwr;
 12380                           
 12381                           ;incstack = 0
 12382                           ; Regs used in _LEDsPwr: [wreg+status,2+status,0+pclath+cstack]
 12383  13D0  0020               	movlb	0	; select bank0
 12384  13D1  0845               	movf	LEDsPwr@pwr+1,w
 12385  13D2  3A80               	xorlw	128
 12386  13D3  00C8               	movwf	??_LEDsPwr
 12387  13D4  3080               	movlw	128
 12388  13D5  0248               	subwf	??_LEDsPwr,w
 12389  13D6  1D03               	skipz
 12390  13D7  2BDA               	goto	u7545
 12391  13D8  3040               	movlw	64
 12392  13D9  0244               	subwf	LEDsPwr@pwr,w
 12393  13DA                     u7545:	
 12394  13DA  1C03               	btfss	3,0
 12395  13DB  2BE1               	goto	l202
 12396  13DC  303F               	movlw	63
 12397  13DD  0020               	movlb	0	; select bank0
 12398  13DE  00C4               	movwf	LEDsPwr@pwr
 12399  13DF  3000               	movlw	0
 12400  13E0  00C5               	movwf	LEDsPwr@pwr+1
 12401  13E1                     l202:	
 12402                           
 12403                           ;LEDcomm.c: 14: unsigned long pwrAll = pwr | (pwr<<6) | (pwr<<12);
 12404  13E1  0020               	movlb	0	; select bank0
 12405  13E2  0845               	movf	LEDsPwr@pwr+1,w
 12406  13E3  00C9               	movwf	??_LEDsPwr+1
 12407  13E4  0844               	movf	LEDsPwr@pwr,w
 12408  13E5  00C8               	movwf	??_LEDsPwr
 12409  13E6  0E48               	swapf	??_LEDsPwr,w
 12410  13E7  39F0               	andlw	240
 12411  13E8  00C9               	movwf	??_LEDsPwr+1
 12412  13E9  01C8               	clrf	??_LEDsPwr
 12413  13EA  0845               	movf	LEDsPwr@pwr+1,w
 12414  13EB  00CB               	movwf	??_LEDsPwr+3
 12415  13EC  0844               	movf	LEDsPwr@pwr,w
 12416  13ED  00CA               	movwf	??_LEDsPwr+2
 12417  13EE  3006               	movlw	6
 12418  13EF                     u7555:	
 12419  13EF  35CA               	lslf	??_LEDsPwr+2,f
 12420  13F0  0DCB               	rlf	??_LEDsPwr+3,f
 12421  13F1  0B89               	decfsz	9,f
 12422  13F2  2BEF               	goto	u7555
 12423  13F3  0848               	movf	??_LEDsPwr,w
 12424  13F4  044A               	iorwf	??_LEDsPwr+2,w
 12425  13F5  00CC               	movwf	??_LEDsPwr+4
 12426  13F6  0849               	movf	??_LEDsPwr+1,w
 12427  13F7  044B               	iorwf	??_LEDsPwr+3,w
 12428  13F8  00CD               	movwf	??_LEDsPwr+5
 12429  13F9  0844               	movf	LEDsPwr@pwr,w
 12430  13FA  044C               	iorwf	??_LEDsPwr+4,w
 12431  13FB  0021               	movlb	1	; select bank1
 12432  13FC  00A0               	movwf	LEDsPwr@pwrAll^(0+128)
 12433  13FD  0020               	movlb	0	; select bank0
 12434  13FE  0845               	movf	LEDsPwr@pwr+1,w
 12435  13FF  044D               	iorwf	??_LEDsPwr+5,w
 12436  1400  0021               	movlb	1	; select bank1
 12437  1401  00A1               	movwf	(LEDsPwr@pwrAll+1)^(0+128)
 12438  1402  01A2               	clrf	(LEDsPwr@pwrAll^(0+128)+2)
 12439  1403  1BA1               	btfsc	(LEDsPwr@pwrAll^(0+128)+1),7
 12440  1404  03A2               	decf	(LEDsPwr@pwrAll+2)^(0+128),f
 12441  1405  0822               	movf	(LEDsPwr@pwrAll^(0+128)+2),w
 12442  1406  00A3               	movwf	(LEDsPwr@pwrAll+3)^(0+128)
 12443                           
 12444                           ;LEDcomm.c: 15: send_2length_2bytes_IK((unsigned int)((pwrAll>>16) & 0xFFFF),(unsigned i
      +                          nt)pwrAll, 7, topOrBottom);
 12445  1407  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12446  1408  0020               	movlb	0	; select bank0
 12447  1409  00C8               	movwf	??_LEDsPwr
 12448  140A  0021               	movlb	1	; select bank1
 12449  140B  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12450  140C  0020               	movlb	0	; select bank0
 12451  140D  00C9               	movwf	??_LEDsPwr+1
 12452  140E  0021               	movlb	1	; select bank1
 12453  140F  0822               	movf	(LEDsPwr@pwrAll+2)^(0+128),w
 12454  1410  0020               	movlb	0	; select bank0
 12455  1411  00CA               	movwf	??_LEDsPwr+2
 12456  1412  0021               	movlb	1	; select bank1
 12457  1413  0823               	movf	(LEDsPwr@pwrAll+3)^(0+128),w
 12458  1414  0020               	movlb	0	; select bank0
 12459  1415  00CB               	movwf	??_LEDsPwr+3
 12460  1416  3010               	movlw	16
 12461  1417                     u7565:	
 12462  1417  36CB               	lsrf	??_LEDsPwr+3,f
 12463  1418  0CCA               	rrf	??_LEDsPwr+2,f
 12464  1419  0CC9               	rrf	??_LEDsPwr+1,f
 12465  141A  0CC8               	rrf	??_LEDsPwr,f
 12466  141B  0B89               	decfsz	9,f
 12467  141C  2C17               	goto	u7565
 12468  141D  0849               	movf	??_LEDsPwr+1,w
 12469  141E  00BD               	movwf	send_2length_2bytes_IK@data1+1
 12470  141F  0848               	movf	??_LEDsPwr,w
 12471  1420  00BC               	movwf	send_2length_2bytes_IK@data1
 12472  1421  0021               	movlb	1	; select bank1
 12473  1422  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12474  1423  0020               	movlb	0	; select bank0
 12475  1424  00BF               	movwf	send_2length_2bytes_IK@data2+1
 12476  1425  0021               	movlb	1	; select bank1
 12477  1426  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12478  1427  0020               	movlb	0	; select bank0
 12479  1428  00BE               	movwf	send_2length_2bytes_IK@data2
 12480  1429  3007               	movlw	7
 12481  142A  00CC               	movwf	??_LEDsPwr+4
 12482  142B  084C               	movf	??_LEDsPwr+4,w
 12483  142C  00C0               	movwf	send_2length_2bytes_IK@latch_start
 12484  142D  0847               	movf	LEDsPwr@topOrBottom+1,w
 12485  142E  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 12486  142F  0846               	movf	LEDsPwr@topOrBottom,w
 12487  1430  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 12488  1431  31A3  23DA         	fcall	_send_2length_2bytes_IK
 12489  1433  0008               	return
 12490  1434                     __end_of_LEDsPwr:	
 12491                           
 12492                           	psect	text28
 12493  249A                     __ptext28:	
 12494 ;; *************** function _setLEDBrightnessRange *****************
 12495 ;; Defined at:
 12496 ;;		line 443 in file "main.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;  r               2   21[BANK1 ] int 
 12499 ;;  tOB             2   23[BANK1 ] int 
 12500 ;; Auto vars:     Size  Location     Type
 12501 ;;		None
 12502 ;; Return value:  Size  Location     Type
 12503 ;;                  2   21[BANK1 ] int 
 12504 ;; Registers used:
 12505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12506 ;; Tracked objects:
 12507 ;;		On entry : 0/0
 12508 ;;		On exit  : 0/0
 12509 ;;		Unchanged: 0/0
 12510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12511 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12514 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12515 ;;Total ram usage:        4 bytes
 12516 ;; Hardware stack levels used:    1
 12517 ;; Hardware stack levels required when called:    9
 12518 ;; This function calls:
 12519 ;;		_LED_setBrightnessRange
 12520 ;;		_printf
 12521 ;; This function is called by:
 12522 ;;		_execCmd
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           
 12527                           ;psect for function _setLEDBrightnessRange
 12528  249A                     _setLEDBrightnessRange:	
 12529                           
 12530                           ;main.c: 444: LED_setBrightnessRange(r, tOB);
 12531                           
 12532                           ;incstack = 0
 12533                           ; Regs used in _setLEDBrightnessRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12534  249A  0021               	movlb	1	; select bank1
 12535  249B  0836               	movf	(setLEDBrightnessRange@r+1)^(0+128),w
 12536  249C  0020               	movlb	0	; select bank0
 12537  249D  00C5               	movwf	LED_setBrightnessRange@range+1
 12538  249E  0021               	movlb	1	; select bank1
 12539  249F  0835               	movf	setLEDBrightnessRange@r^(0+128),w
 12540  24A0  0020               	movlb	0	; select bank0
 12541  24A1  00C4               	movwf	LED_setBrightnessRange@range
 12542  24A2  0021               	movlb	1	; select bank1
 12543  24A3  0838               	movf	(setLEDBrightnessRange@tOB+1)^(0+128),w
 12544  24A4  0020               	movlb	0	; select bank0
 12545  24A5  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 12546  24A6  0021               	movlb	1	; select bank1
 12547  24A7  0837               	movf	setLEDBrightnessRange@tOB^(0+128),w
 12548  24A8  0020               	movlb	0	; select bank0
 12549  24A9  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 12550  24AA  318B  23DE  31A4   	fcall	_LED_setBrightnessRange
 12551                           
 12552                           ;main.c: 445: printf("A\n");
 12553  24AD  3036               	movlw	low (STR_7| (0+32768))
 12554  24AE  0021               	movlb	1	; select bank1
 12555  24AF  00A0               	movwf	printf@f^(0+128)
 12556  24B0  30AA               	movlw	high (STR_7| (0+32768))
 12557  24B1  00A1               	movwf	(printf@f^(0+128)+1)
 12558  24B2  318E  26CE         	fcall	_printf
 12559                           
 12560                           ;main.c: 446: return 0;
 12561  24B4  0021               	movlb	1	; select bank1
 12562  24B5  01B5               	clrf	?_setLEDBrightnessRange^(0+128)
 12563  24B6  01B6               	clrf	(?_setLEDBrightnessRange+1)^(0+128)
 12564  24B7  0008               	return
 12565  24B8                     __end_of_setLEDBrightnessRange:	
 12566                           
 12567                           	psect	text29
 12568  16FC                     __ptext29:	
 12569 ;; *************** function _setHeaterToggle *****************
 12570 ;; Defined at:
 12571 ;;		line 460 in file "main.c"
 12572 ;; Parameters:    Size  Location     Type
 12573 ;;  num             2   21[BANK1 ] int 
 12574 ;;  topOrB          2   23[BANK1 ] int 
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;		None
 12577 ;; Return value:  Size  Location     Type
 12578 ;;                  2   21[BANK1 ] int 
 12579 ;; Registers used:
 12580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12581 ;; Tracked objects:
 12582 ;;		On entry : 0/0
 12583 ;;		On exit  : 0/0
 12584 ;;		Unchanged: 0/0
 12585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12586 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12588 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12589 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12590 ;;Total ram usage:        8 bytes
 12591 ;; Hardware stack levels used:    1
 12592 ;; Hardware stack levels required when called:    9
 12593 ;; This function calls:
 12594 ;;		_LEDsOn
 12595 ;;		_printf
 12596 ;; This function is called by:
 12597 ;;		_execCmd
 12598 ;; This function uses a non-reentrant model
 12599 ;;
 12600                           
 12601                           
 12602                           ;psect for function _setHeaterToggle
 12603  16FC                     _setHeaterToggle:	
 12604                           
 12605                           ;incstack = 0
 12606                           ; Regs used in _setHeaterToggle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12607                           ;main.c: 461: do { LATCbits.LATC1 = 0; } while(0);
 12608  16FC  0022               	movlb	2	; select bank2
 12609  16FD  108E               	bcf	14,1	;volatile
 12610                           
 12611                           ;main.c: 462: if(topOrB == 1){
 12612  16FE  0021               	movlb	1	; select bank1
 12613  16FF  0337               	decf	setHeaterToggle@topOrB^(0+128),w
 12614  1700  0438               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12615  1701  1D03               	btfss	3,2
 12616  1702  2F33               	goto	l8127
 12617                           
 12618                           ;main.c: 463: demoHeaterToggle_top ^= 1UL << num;
 12619  1703  3001               	movlw	1
 12620  1704  00B9               	movwf	??_setHeaterToggle^(0+128)
 12621  1705  3000               	movlw	0
 12622  1706  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 12623  1707  3000               	movlw	0
 12624  1708  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 12625  1709  3000               	movlw	0
 12626  170A  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 12627  170B  0A35               	incf	setHeaterToggle@num^(0+128),w
 12628  170C  2F11               	goto	u8170
 12629  170D                     u8175:	
 12630  170D  35B9               	lslf	??_setHeaterToggle^(0+128),f
 12631  170E  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12632  170F  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12633  1710  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12634  1711                     u8170:	
 12635  1711  0B89               	decfsz	9,f
 12636  1712  2F0D               	goto	u8175
 12637  1713  0839               	movf	??_setHeaterToggle^(0+128),w
 12638  1714  0023               	movlb	3	; select bank3
 12639  1715  06B4               	xorwf	_demoHeaterToggle_top^(0+384),f
 12640  1716  0021               	movlb	1	; select bank1
 12641  1717  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 12642  1718  0023               	movlb	3	; select bank3
 12643  1719  06B5               	xorwf	(_demoHeaterToggle_top+1)^(0+384),f
 12644  171A  0021               	movlb	1	; select bank1
 12645  171B  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 12646  171C  0023               	movlb	3	; select bank3
 12647  171D  06B6               	xorwf	(_demoHeaterToggle_top+2)^(0+384),f
 12648  171E  0021               	movlb	1	; select bank1
 12649  171F  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 12650  1720  0023               	movlb	3	; select bank3
 12651  1721  06B7               	xorwf	(_demoHeaterToggle_top+3)^(0+384),f
 12652                           
 12653                           ;main.c: 464: LEDsOn(demoHeaterToggle_top, 1);
 12654  1722  0837               	movf	(_demoHeaterToggle_top+3)^(0+384),w
 12655  1723  0020               	movlb	0	; select bank0
 12656  1724  00C7               	movwf	LEDsOn@LEDpins+3
 12657  1725  0023               	movlb	3	; select bank3
 12658  1726  0836               	movf	(_demoHeaterToggle_top+2)^(0+384),w
 12659  1727  0020               	movlb	0	; select bank0
 12660  1728  00C6               	movwf	LEDsOn@LEDpins+2
 12661  1729  0023               	movlb	3	; select bank3
 12662  172A  0835               	movf	(_demoHeaterToggle_top+1)^(0+384),w
 12663  172B  0020               	movlb	0	; select bank0
 12664  172C  00C5               	movwf	LEDsOn@LEDpins+1
 12665  172D  0023               	movlb	3	; select bank3
 12666  172E  0834               	movf	_demoHeaterToggle_top^(0+384),w
 12667  172F  0020               	movlb	0	; select bank0
 12668  1730  00C4               	movwf	LEDsOn@LEDpins
 12669  1731  3001               	movlw	1
 12670  1732  2F68               	goto	L23
 12671  1733                     l8127:	
 12672                           ;main.c: 465: }
 12673                           
 12674                           
 12675                           ;main.c: 466: else if (topOrB == 2){
 12676  1733  3002               	movlw	2
 12677  1734  0021               	movlb	1	; select bank1
 12678  1735  0637               	xorwf	setHeaterToggle@topOrB^(0+128),w
 12679  1736  0438               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12680  1737  1D03               	btfss	3,2
 12681  1738  2F6E               	goto	l8133
 12682                           
 12683                           ;main.c: 467: demoHeaterToggle_bot ^= 1UL << num;
 12684  1739  3001               	movlw	1
 12685  173A  00B9               	movwf	??_setHeaterToggle^(0+128)
 12686  173B  3000               	movlw	0
 12687  173C  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 12688  173D  3000               	movlw	0
 12689  173E  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 12690  173F  3000               	movlw	0
 12691  1740  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 12692  1741  0A35               	incf	setHeaterToggle@num^(0+128),w
 12693  1742  2F47               	goto	u8190
 12694  1743                     u8195:	
 12695  1743  35B9               	lslf	??_setHeaterToggle^(0+128),f
 12696  1744  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12697  1745  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12698  1746  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12699  1747                     u8190:	
 12700  1747  0B89               	decfsz	9,f
 12701  1748  2F43               	goto	u8195
 12702  1749  0839               	movf	??_setHeaterToggle^(0+128),w
 12703  174A  0023               	movlb	3	; select bank3
 12704  174B  06B0               	xorwf	_demoHeaterToggle_bot^(0+384),f
 12705  174C  0021               	movlb	1	; select bank1
 12706  174D  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 12707  174E  0023               	movlb	3	; select bank3
 12708  174F  06B1               	xorwf	(_demoHeaterToggle_bot+1)^(0+384),f
 12709  1750  0021               	movlb	1	; select bank1
 12710  1751  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 12711  1752  0023               	movlb	3	; select bank3
 12712  1753  06B2               	xorwf	(_demoHeaterToggle_bot+2)^(0+384),f
 12713  1754  0021               	movlb	1	; select bank1
 12714  1755  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 12715  1756  0023               	movlb	3	; select bank3
 12716  1757  06B3               	xorwf	(_demoHeaterToggle_bot+3)^(0+384),f
 12717                           
 12718                           ;main.c: 468: LEDsOn(demoHeaterToggle_bot, 2);
 12719  1758  0833               	movf	(_demoHeaterToggle_bot+3)^(0+384),w
 12720  1759  0020               	movlb	0	; select bank0
 12721  175A  00C7               	movwf	LEDsOn@LEDpins+3
 12722  175B  0023               	movlb	3	; select bank3
 12723  175C  0832               	movf	(_demoHeaterToggle_bot+2)^(0+384),w
 12724  175D  0020               	movlb	0	; select bank0
 12725  175E  00C6               	movwf	LEDsOn@LEDpins+2
 12726  175F  0023               	movlb	3	; select bank3
 12727  1760  0831               	movf	(_demoHeaterToggle_bot+1)^(0+384),w
 12728  1761  0020               	movlb	0	; select bank0
 12729  1762  00C5               	movwf	LEDsOn@LEDpins+1
 12730  1763  0023               	movlb	3	; select bank3
 12731  1764  0830               	movf	_demoHeaterToggle_bot^(0+384),w
 12732  1765  0020               	movlb	0	; select bank0
 12733  1766  00C4               	movwf	LEDsOn@LEDpins
 12734  1767  3002               	movlw	2
 12735  1768                     L23:	
 12736  1768  00C8               	movwf	LEDsOn@topOrBottom
 12737  1769  3000               	movlw	0
 12738  176A  00C9               	movwf	LEDsOn@topOrBottom+1
 12739  176B  31A5  2557  3196   	fcall	_LEDsOn
 12740  176E                     l8133:	
 12741                           
 12742                           ;main.c: 469: }
 12743                           ;main.c: 471: printf("A\n");
 12744  176E  3036               	movlw	low (STR_7| (0+32768))
 12745  176F  0021               	movlb	1	; select bank1
 12746  1770  00A0               	movwf	printf@f^(0+128)
 12747  1771  30AA               	movlw	high (STR_7| (0+32768))
 12748  1772  00A1               	movwf	(printf@f^(0+128)+1)
 12749  1773  318E  26CE         	fcall	_printf
 12750                           
 12751                           ;main.c: 472: return 0;
 12752  1775  0021               	movlb	1	; select bank1
 12753  1776  01B5               	clrf	?_setHeaterToggle^(0+128)
 12754  1777  01B6               	clrf	(?_setHeaterToggle+1)^(0+128)
 12755  1778  0008               	return
 12756  1779                     __end_of_setHeaterToggle:	
 12757                           
 12758                           	psect	text30
 12759  1E62                     __ptext30:	
 12760 ;; *************** function _setHeaterPreTime *****************
 12761 ;; Defined at:
 12762 ;;		line 427 in file "main.c"
 12763 ;; Parameters:    Size  Location     Type
 12764 ;;  t               2   29[BANK1 ] int 
 12765 ;; Auto vars:     Size  Location     Type
 12766 ;;		None
 12767 ;; Return value:  Size  Location     Type
 12768 ;;                  2   29[BANK1 ] int 
 12769 ;; Registers used:
 12770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12771 ;; Tracked objects:
 12772 ;;		On entry : 0/0
 12773 ;;		On exit  : 0/0
 12774 ;;		Unchanged: 0/0
 12775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12776 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12778 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12779 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12780 ;;Total ram usage:        4 bytes
 12781 ;; Hardware stack levels used:    1
 12782 ;; Hardware stack levels required when called:    9
 12783 ;; This function calls:
 12784 ;;		_TMR0_Load8bitPeriod
 12785 ;;		___awtoft
 12786 ;;		___ftadd
 12787 ;;		___ftmul
 12788 ;;		___fttol
 12789 ;;		_printf
 12790 ;; This function is called by:
 12791 ;;		_execCmd
 12792 ;; This function uses a non-reentrant model
 12793 ;;
 12794                           
 12795                           
 12796                           ;psect for function _setHeaterPreTime
 12797  1E62                     _setHeaterPreTime:	
 12798                           
 12799                           ;main.c: 428: heater_pre_time_ms = t;
 12800                           
 12801                           ;incstack = 0
 12802                           ; Regs used in _setHeaterPreTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12803  1E62  0021               	movlb	1	; select bank1
 12804  1E63  083E               	movf	(setHeaterPreTime@t+1)^(0+128),w
 12805  1E64  00EE               	movwf	(_heater_pre_time_ms+1)^(0+128)
 12806  1E65  083D               	movf	setHeaterPreTime@t^(0+128),w
 12807  1E66  00ED               	movwf	_heater_pre_time_ms^(0+128)
 12808                           
 12809                           ;main.c: 429: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 12810  1E67  096D               	comf	_heater_pre_time_ms^(0+128),w
 12811  1E68  00BF               	movwf	??_setHeaterPreTime^(0+128)
 12812  1E69  096E               	comf	(_heater_pre_time_ms+1)^(0+128),w
 12813  1E6A  00C0               	movwf	(??_setHeaterPreTime^(0+128)+1)
 12814  1E6B  0ABF               	incf	??_setHeaterPreTime^(0+128),f
 12815  1E6C  1903               	skipnz
 12816  1E6D  0AC0               	incf	(??_setHeaterPreTime^(0+128)+1),f
 12817  1E6E  0869               	movf	_piezo_on_time_ms^(0+128),w
 12818  1E6F  073F               	addwf	??_setHeaterPreTime^(0+128),w
 12819  1E70  0020               	movlb	0	; select bank0
 12820  1E71  00B9               	movwf	___awtoft@c
 12821  1E72  0021               	movlb	1	; select bank1
 12822  1E73  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 12823  1E74  3D40               	addwfc	(??_setHeaterPreTime+1)^(0+128),w
 12824  1E75  0020               	movlb	0	; select bank0
 12825  1E76  00BA               	movwf	___awtoft@c+1
 12826  1E77  31A5  2578  319E   	fcall	___awtoft
 12827  1E7A  0020               	movlb	0	; select bank0
 12828  1E7B  0839               	movf	?___awtoft,w
 12829  1E7C  00C2               	movwf	___ftmul@f2
 12830  1E7D  083A               	movf	?___awtoft+1,w
 12831  1E7E  00C3               	movwf	___ftmul@f2+1
 12832  1E7F  083B               	movf	?___awtoft+2,w
 12833  1E80  00C4               	movwf	___ftmul@f2+2
 12834  1E81  3033               	movlw	low (_TMR0_RANGE| (0+32768))
 12835  1E82  0084               	movwf	4
 12836  1E83  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 12837  1E84  0085               	movwf	5
 12838  1E85  3F00               	moviw [0]fsr0
 12839  1E86  00BF               	movwf	___ftmul@f1
 12840  1E87  3F01               	moviw [1]fsr0
 12841  1E88  00C0               	movwf	___ftmul@f1+1
 12842  1E89  3F02               	moviw [2]fsr0
 12843  1E8A  00C1               	movwf	___ftmul@f1+2
 12844  1E8B  318C  24BC  319E   	fcall	___ftmul
 12845  1E8E  0020               	movlb	0	; select bank0
 12846  1E8F  083F               	movf	?___ftmul,w
 12847  1E90  0021               	movlb	1	; select bank1
 12848  1E91  00A9               	movwf	___ftadd@f2^(0+128)
 12849  1E92  0020               	movlb	0	; select bank0
 12850  1E93  0840               	movf	?___ftmul+1,w
 12851  1E94  0021               	movlb	1	; select bank1
 12852  1E95  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 12853  1E96  0020               	movlb	0	; select bank0
 12854  1E97  0841               	movf	?___ftmul+2,w
 12855  1E98  0021               	movlb	1	; select bank1
 12856  1E99  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 12857  1E9A  3000               	movlw	0
 12858  1E9B  00A6               	movwf	___ftadd@f1^(0+128)
 12859  1E9C  3080               	movlw	128
 12860  1E9D  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 12861  1E9E  30BF               	movlw	191
 12862  1E9F  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 12863  1EA0  3186  26E4  319E   	fcall	___ftadd
 12864  1EA3  0021               	movlb	1	; select bank1
 12865  1EA4  0826               	movf	?___ftadd^(0+128),w
 12866  1EA5  00AF               	movwf	___fttol@f1^(0+128)
 12867  1EA6  0827               	movf	(?___ftadd+1)^(0+128),w
 12868  1EA7  00B0               	movwf	(___fttol@f1+1)^(0+128)
 12869  1EA8  0828               	movf	(?___ftadd+2)^(0+128),w
 12870  1EA9  00B1               	movwf	(___fttol@f1+2)^(0+128)
 12871  1EAA  3188  2069  319E   	fcall	___fttol
 12872  1EAD  0021               	movlb	1	; select bank1
 12873  1EAE  082F               	movf	?___fttol^(0+128),w
 12874  1EAF  31A1  21B2  319E   	fcall	_TMR0_Load8bitPeriod
 12875                           
 12876                           ;main.c: 430: printf("A\n");
 12877  1EB2  3036               	movlw	low (STR_7| (0+32768))
 12878  1EB3  0021               	movlb	1	; select bank1
 12879  1EB4  00A0               	movwf	printf@f^(0+128)
 12880  1EB5  30AA               	movlw	high (STR_7| (0+32768))
 12881  1EB6  00A1               	movwf	(printf@f^(0+128)+1)
 12882  1EB7  318E  26CE         	fcall	_printf
 12883                           
 12884                           ;main.c: 431: return 0;
 12885  1EB9  0021               	movlb	1	; select bank1
 12886  1EBA  01BD               	clrf	?_setHeaterPreTime^(0+128)
 12887  1EBB  01BE               	clrf	(?_setHeaterPreTime+1)^(0+128)
 12888  1EBC  0008               	return
 12889  1EBD                     __end_of_setHeaterPreTime:	
 12890                           
 12891                           	psect	text31
 12892  1CB1                     __ptext31:	
 12893 ;; *************** function _setHeaterPostTime *****************
 12894 ;; Defined at:
 12895 ;;		line 433 in file "main.c"
 12896 ;; Parameters:    Size  Location     Type
 12897 ;;  t               2   29[BANK1 ] int 
 12898 ;; Auto vars:     Size  Location     Type
 12899 ;;		None
 12900 ;; Return value:  Size  Location     Type
 12901 ;;                  2   29[BANK1 ] int 
 12902 ;; Registers used:
 12903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12904 ;; Tracked objects:
 12905 ;;		On entry : 0/0
 12906 ;;		On exit  : 0/0
 12907 ;;		Unchanged: 0/0
 12908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12909 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12912 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12913 ;;Total ram usage:        2 bytes
 12914 ;; Hardware stack levels used:    1
 12915 ;; Hardware stack levels required when called:    9
 12916 ;; This function calls:
 12917 ;;		_TMR2_LoadPeriodRegister
 12918 ;;		___awtoft
 12919 ;;		___ftadd
 12920 ;;		___ftmul
 12921 ;;		___fttol
 12922 ;;		_printf
 12923 ;; This function is called by:
 12924 ;;		_execCmd
 12925 ;; This function uses a non-reentrant model
 12926 ;;
 12927                           
 12928                           
 12929                           ;psect for function _setHeaterPostTime
 12930  1CB1                     _setHeaterPostTime:	
 12931                           
 12932                           ;main.c: 434: heater_post_time_ms = t;
 12933                           
 12934                           ;incstack = 0
 12935                           ; Regs used in _setHeaterPostTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12936  1CB1  0021               	movlb	1	; select bank1
 12937  1CB2  083E               	movf	(setHeaterPostTime@t+1)^(0+128),w
 12938  1CB3  00EC               	movwf	(_heater_post_time_ms+1)^(0+128)
 12939  1CB4  083D               	movf	setHeaterPostTime@t^(0+128),w
 12940  1CB5  00EB               	movwf	_heater_post_time_ms^(0+128)
 12941                           
 12942                           ;main.c: 435: TMR2_LoadPeriodRegister((heater_post_time_ms*TMR2_RANGE)-1);
 12943  1CB6  086C               	movf	(_heater_post_time_ms+1)^(0+128),w
 12944  1CB7  0020               	movlb	0	; select bank0
 12945  1CB8  00BA               	movwf	___awtoft@c+1
 12946  1CB9  0021               	movlb	1	; select bank1
 12947  1CBA  086B               	movf	_heater_post_time_ms^(0+128),w
 12948  1CBB  0020               	movlb	0	; select bank0
 12949  1CBC  00B9               	movwf	___awtoft@c
 12950  1CBD  31A5  2578  319C   	fcall	___awtoft
 12951  1CC0  0020               	movlb	0	; select bank0
 12952  1CC1  0839               	movf	?___awtoft,w
 12953  1CC2  00C2               	movwf	___ftmul@f2
 12954  1CC3  083A               	movf	?___awtoft+1,w
 12955  1CC4  00C3               	movwf	___ftmul@f2+1
 12956  1CC5  083B               	movf	?___awtoft+2,w
 12957  1CC6  00C4               	movwf	___ftmul@f2+2
 12958  1CC7  3030               	movlw	low (_TMR2_RANGE| (0+32768))
 12959  1CC8  0084               	movwf	4
 12960  1CC9  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
 12961  1CCA  0085               	movwf	5
 12962  1CCB  3F00               	moviw [0]fsr0
 12963  1CCC  00BF               	movwf	___ftmul@f1
 12964  1CCD  3F01               	moviw [1]fsr0
 12965  1CCE  00C0               	movwf	___ftmul@f1+1
 12966  1CCF  3F02               	moviw [2]fsr0
 12967  1CD0  00C1               	movwf	___ftmul@f1+2
 12968  1CD1  318C  24BC  319C   	fcall	___ftmul
 12969  1CD4  0020               	movlb	0	; select bank0
 12970  1CD5  083F               	movf	?___ftmul,w
 12971  1CD6  0021               	movlb	1	; select bank1
 12972  1CD7  00A9               	movwf	___ftadd@f2^(0+128)
 12973  1CD8  0020               	movlb	0	; select bank0
 12974  1CD9  0840               	movf	?___ftmul+1,w
 12975  1CDA  0021               	movlb	1	; select bank1
 12976  1CDB  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 12977  1CDC  0020               	movlb	0	; select bank0
 12978  1CDD  0841               	movf	?___ftmul+2,w
 12979  1CDE  0021               	movlb	1	; select bank1
 12980  1CDF  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 12981  1CE0  3000               	movlw	0
 12982  1CE1  00A6               	movwf	___ftadd@f1^(0+128)
 12983  1CE2  3080               	movlw	128
 12984  1CE3  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 12985  1CE4  30BF               	movlw	191
 12986  1CE5  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 12987  1CE6  3186  26E4  319C   	fcall	___ftadd
 12988  1CE9  0021               	movlb	1	; select bank1
 12989  1CEA  0826               	movf	?___ftadd^(0+128),w
 12990  1CEB  00AF               	movwf	___fttol@f1^(0+128)
 12991  1CEC  0827               	movf	(?___ftadd+1)^(0+128),w
 12992  1CED  00B0               	movwf	(___fttol@f1+1)^(0+128)
 12993  1CEE  0828               	movf	(?___ftadd+2)^(0+128),w
 12994  1CEF  00B1               	movwf	(___fttol@f1+2)^(0+128)
 12995  1CF0  3188  2069  319C   	fcall	___fttol
 12996  1CF3  0021               	movlb	1	; select bank1
 12997  1CF4  082F               	movf	?___fttol^(0+128),w
 12998  1CF5  31A1  21B7  319C   	fcall	_TMR2_LoadPeriodRegister
 12999                           
 13000                           ;main.c: 436: printf("A\n");
 13001  1CF8  3036               	movlw	low (STR_7| (0+32768))
 13002  1CF9  0021               	movlb	1	; select bank1
 13003  1CFA  00A0               	movwf	printf@f^(0+128)
 13004  1CFB  30AA               	movlw	high (STR_7| (0+32768))
 13005  1CFC  00A1               	movwf	(printf@f^(0+128)+1)
 13006  1CFD  318E  26CE         	fcall	_printf
 13007                           
 13008                           ;main.c: 437: return 0;
 13009  1CFF  0021               	movlb	1	; select bank1
 13010  1D00  01BD               	clrf	?_setHeaterPostTime^(0+128)
 13011  1D01  01BE               	clrf	(?_setHeaterPostTime+1)^(0+128)
 13012  1D02  0008               	return
 13013  1D03                     __end_of_setHeaterPostTime:	
 13014                           
 13015                           	psect	text32
 13016  21B7                     __ptext32:	
 13017 ;; *************** function _TMR2_LoadPeriodRegister *****************
 13018 ;; Defined at:
 13019 ;;		line 112 in file "mcc_generated_files/tmr2.c"
 13020 ;; Parameters:    Size  Location     Type
 13021 ;;  periodVal       1    wreg     unsigned char 
 13022 ;; Auto vars:     Size  Location     Type
 13023 ;;  periodVal       1   17[BANK0 ] unsigned char 
 13024 ;; Return value:  Size  Location     Type
 13025 ;;                  1    wreg      void 
 13026 ;; Registers used:
 13027 ;;		wreg
 13028 ;; Tracked objects:
 13029 ;;		On entry : 0/0
 13030 ;;		On exit  : 0/0
 13031 ;;		Unchanged: 0/0
 13032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13034 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13036 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13037 ;;Total ram usage:        1 bytes
 13038 ;; Hardware stack levels used:    1
 13039 ;; Hardware stack levels required when called:    6
 13040 ;; This function calls:
 13041 ;;		Nothing
 13042 ;; This function is called by:
 13043 ;;		_main_initialize
 13044 ;;		_setHeaterPostTime
 13045 ;; This function uses a non-reentrant model
 13046 ;;
 13047                           
 13048                           
 13049                           ;psect for function _TMR2_LoadPeriodRegister
 13050  21B7                     _TMR2_LoadPeriodRegister:	
 13051                           
 13052                           ;incstack = 0
 13053                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
 13054                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
 13055  21B7  0020               	movlb	0	; select bank0
 13056  21B8  00B1               	movwf	TMR2_LoadPeriodRegister@periodVal
 13057                           
 13058                           ;tmr2.c: 114: PR2 = periodVal;
 13059  21B9  0831               	movf	TMR2_LoadPeriodRegister@periodVal,w
 13060  21BA  009E               	movwf	30	;volatile
 13061  21BB  0008               	return
 13062  21BC                     __end_of_TMR2_LoadPeriodRegister:	
 13063                           
 13064                           	psect	text33
 13065  1E07                     __ptext33:	
 13066 ;; *************** function _setDrvPiezoOnTime *****************
 13067 ;; Defined at:
 13068 ;;		line 416 in file "main.c"
 13069 ;; Parameters:    Size  Location     Type
 13070 ;;  t               2   29[BANK1 ] int 
 13071 ;; Auto vars:     Size  Location     Type
 13072 ;;		None
 13073 ;; Return value:  Size  Location     Type
 13074 ;;                  2   29[BANK1 ] int 
 13075 ;; Registers used:
 13076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13077 ;; Tracked objects:
 13078 ;;		On entry : 0/0
 13079 ;;		On exit  : 0/0
 13080 ;;		Unchanged: 0/0
 13081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13082 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13084 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13085 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13086 ;;Total ram usage:        4 bytes
 13087 ;; Hardware stack levels used:    1
 13088 ;; Hardware stack levels required when called:    9
 13089 ;; This function calls:
 13090 ;;		_TMR0_Load8bitPeriod
 13091 ;;		___awtoft
 13092 ;;		___ftadd
 13093 ;;		___ftmul
 13094 ;;		___fttol
 13095 ;;		_printf
 13096 ;; This function is called by:
 13097 ;;		_execCmd
 13098 ;; This function uses a non-reentrant model
 13099 ;;
 13100                           
 13101                           
 13102                           ;psect for function _setDrvPiezoOnTime
 13103  1E07                     _setDrvPiezoOnTime:	
 13104                           
 13105                           ;main.c: 417: piezo_on_time_ms = t;
 13106                           
 13107                           ;incstack = 0
 13108                           ; Regs used in _setDrvPiezoOnTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13109  1E07  0021               	movlb	1	; select bank1
 13110  1E08  083E               	movf	(setDrvPiezoOnTime@t+1)^(0+128),w
 13111  1E09  00EA               	movwf	(_piezo_on_time_ms+1)^(0+128)
 13112  1E0A  083D               	movf	setDrvPiezoOnTime@t^(0+128),w
 13113  1E0B  00E9               	movwf	_piezo_on_time_ms^(0+128)
 13114                           
 13115                           ;main.c: 418: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 13116  1E0C  096D               	comf	_heater_pre_time_ms^(0+128),w
 13117  1E0D  00BF               	movwf	??_setDrvPiezoOnTime^(0+128)
 13118  1E0E  096E               	comf	(_heater_pre_time_ms+1)^(0+128),w
 13119  1E0F  00C0               	movwf	(??_setDrvPiezoOnTime^(0+128)+1)
 13120  1E10  0ABF               	incf	??_setDrvPiezoOnTime^(0+128),f
 13121  1E11  1903               	skipnz
 13122  1E12  0AC0               	incf	(??_setDrvPiezoOnTime^(0+128)+1),f
 13123  1E13  0869               	movf	_piezo_on_time_ms^(0+128),w
 13124  1E14  073F               	addwf	??_setDrvPiezoOnTime^(0+128),w
 13125  1E15  0020               	movlb	0	; select bank0
 13126  1E16  00B9               	movwf	___awtoft@c
 13127  1E17  0021               	movlb	1	; select bank1
 13128  1E18  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 13129  1E19  3D40               	addwfc	(??_setDrvPiezoOnTime+1)^(0+128),w
 13130  1E1A  0020               	movlb	0	; select bank0
 13131  1E1B  00BA               	movwf	___awtoft@c+1
 13132  1E1C  31A5  2578  319E   	fcall	___awtoft
 13133  1E1F  0020               	movlb	0	; select bank0
 13134  1E20  0839               	movf	?___awtoft,w
 13135  1E21  00C2               	movwf	___ftmul@f2
 13136  1E22  083A               	movf	?___awtoft+1,w
 13137  1E23  00C3               	movwf	___ftmul@f2+1
 13138  1E24  083B               	movf	?___awtoft+2,w
 13139  1E25  00C4               	movwf	___ftmul@f2+2
 13140  1E26  3033               	movlw	low (_TMR0_RANGE| (0+32768))
 13141  1E27  0084               	movwf	4
 13142  1E28  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 13143  1E29  0085               	movwf	5
 13144  1E2A  3F00               	moviw [0]fsr0
 13145  1E2B  00BF               	movwf	___ftmul@f1
 13146  1E2C  3F01               	moviw [1]fsr0
 13147  1E2D  00C0               	movwf	___ftmul@f1+1
 13148  1E2E  3F02               	moviw [2]fsr0
 13149  1E2F  00C1               	movwf	___ftmul@f1+2
 13150  1E30  318C  24BC  319E   	fcall	___ftmul
 13151  1E33  0020               	movlb	0	; select bank0
 13152  1E34  083F               	movf	?___ftmul,w
 13153  1E35  0021               	movlb	1	; select bank1
 13154  1E36  00A9               	movwf	___ftadd@f2^(0+128)
 13155  1E37  0020               	movlb	0	; select bank0
 13156  1E38  0840               	movf	?___ftmul+1,w
 13157  1E39  0021               	movlb	1	; select bank1
 13158  1E3A  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 13159  1E3B  0020               	movlb	0	; select bank0
 13160  1E3C  0841               	movf	?___ftmul+2,w
 13161  1E3D  0021               	movlb	1	; select bank1
 13162  1E3E  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 13163  1E3F  3000               	movlw	0
 13164  1E40  00A6               	movwf	___ftadd@f1^(0+128)
 13165  1E41  3080               	movlw	128
 13166  1E42  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 13167  1E43  30BF               	movlw	191
 13168  1E44  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 13169  1E45  3186  26E4  319E   	fcall	___ftadd
 13170  1E48  0021               	movlb	1	; select bank1
 13171  1E49  0826               	movf	?___ftadd^(0+128),w
 13172  1E4A  00AF               	movwf	___fttol@f1^(0+128)
 13173  1E4B  0827               	movf	(?___ftadd+1)^(0+128),w
 13174  1E4C  00B0               	movwf	(___fttol@f1+1)^(0+128)
 13175  1E4D  0828               	movf	(?___ftadd+2)^(0+128),w
 13176  1E4E  00B1               	movwf	(___fttol@f1+2)^(0+128)
 13177  1E4F  3188  2069  319E   	fcall	___fttol
 13178  1E52  0021               	movlb	1	; select bank1
 13179  1E53  082F               	movf	?___fttol^(0+128),w
 13180  1E54  31A1  21B2  319E   	fcall	_TMR0_Load8bitPeriod
 13181                           
 13182                           ;main.c: 419: printf("A\n");
 13183  1E57  3036               	movlw	low (STR_7| (0+32768))
 13184  1E58  0021               	movlb	1	; select bank1
 13185  1E59  00A0               	movwf	printf@f^(0+128)
 13186  1E5A  30AA               	movlw	high (STR_7| (0+32768))
 13187  1E5B  00A1               	movwf	(printf@f^(0+128)+1)
 13188  1E5C  318E  26CE         	fcall	_printf
 13189                           
 13190                           ;main.c: 420: return 0;
 13191  1E5E  0021               	movlb	1	; select bank1
 13192  1E5F  01BD               	clrf	?_setDrvPiezoOnTime^(0+128)
 13193  1E60  01BE               	clrf	(?_setDrvPiezoOnTime+1)^(0+128)
 13194  1E61  0008               	return
 13195  1E62                     __end_of_setDrvPiezoOnTime:	
 13196                           
 13197                           	psect	text34
 13198  0869                     __ptext34:	
 13199 ;; *************** function ___fttol *****************
 13200 ;; Defined at:
 13201 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 13202 ;; Parameters:    Size  Location     Type
 13203 ;;  f1              3   15[BANK1 ] float 
 13204 ;; Auto vars:     Size  Location     Type
 13205 ;;  lval            4   24[BANK1 ] unsigned long 
 13206 ;;  exp1            1   28[BANK1 ] unsigned char 
 13207 ;;  sign1           1   23[BANK1 ] unsigned char 
 13208 ;; Return value:  Size  Location     Type
 13209 ;;                  4   15[BANK1 ] long 
 13210 ;; Registers used:
 13211 ;;		wreg, status,2, status,0
 13212 ;; Tracked objects:
 13213 ;;		On entry : 0/0
 13214 ;;		On exit  : 0/0
 13215 ;;		Unchanged: 0/0
 13216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13217 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13218 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13219 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13220 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13221 ;;Total ram usage:       14 bytes
 13222 ;; Hardware stack levels used:    1
 13223 ;; Hardware stack levels required when called:    6
 13224 ;; This function calls:
 13225 ;;		Nothing
 13226 ;; This function is called by:
 13227 ;;		_main_initialize
 13228 ;;		_setDrvPiezoOnTime
 13229 ;;		_setHeaterPreTime
 13230 ;;		_setHeaterPostTime
 13231 ;;		_drv_outputSine
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235                           
 13236                           ;psect for function ___fttol
 13237  0869                     ___fttol:	
 13238                           
 13239                           ;incstack = 0
 13240                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 13241  0869  0021               	movlb	1	; select bank1
 13242  086A  082F               	movf	___fttol@f1^(0+128),w
 13243  086B  00B3               	movwf	??___fttol^(0+128)
 13244  086C  0830               	movf	(___fttol@f1+1)^(0+128),w
 13245  086D  00B4               	movwf	(??___fttol^(0+128)+1)
 13246  086E  0831               	movf	(___fttol@f1+2)^(0+128),w
 13247  086F  00B5               	movwf	(??___fttol^(0+128)+2)
 13248  0870  1003               	clrc
 13249  0871  0D34               	rlf	(??___fttol^(0+128)+1),w
 13250  0872  0D35               	rlf	(??___fttol^(0+128)+2),w
 13251  0873  00B6               	movwf	(??___fttol+3)^(0+128)
 13252  0874  0836               	movf	(??___fttol+3)^(0+128),w
 13253  0875  00BC               	movwf	___fttol@exp1^(0+128)
 13254  0876  083C               	movf	___fttol@exp1^(0+128),w
 13255  0877  1D03               	btfss	3,2
 13256  0878  2882               	goto	l5691
 13257  0879  3000               	movlw	0
 13258  087A  00B2               	movwf	(?___fttol+3)^(0+128)
 13259  087B  3000               	movlw	0
 13260  087C  00B1               	movwf	(?___fttol+2)^(0+128)
 13261  087D  3000               	movlw	0
 13262  087E  00B0               	movwf	(?___fttol+1)^(0+128)
 13263  087F  3000               	movlw	0
 13264  0880  00AF               	movwf	?___fttol^(0+128)
 13265  0881  0008               	return
 13266  0882                     l5691:	
 13267  0882  082F               	movf	___fttol@f1^(0+128),w
 13268  0883  00B3               	movwf	??___fttol^(0+128)
 13269  0884  0830               	movf	(___fttol@f1+1)^(0+128),w
 13270  0885  00B4               	movwf	(??___fttol^(0+128)+1)
 13271  0886  0831               	movf	(___fttol@f1+2)^(0+128),w
 13272  0887  00B5               	movwf	(??___fttol^(0+128)+2)
 13273  0888  3017               	movlw	23
 13274  0889                     u5085:	
 13275  0889  36B5               	lsrf	(??___fttol^(0+128)+2),f
 13276  088A  0CB4               	rrf	(??___fttol^(0+128)+1),f
 13277  088B  0CB3               	rrf	??___fttol^(0+128),f
 13278  088C  0B89               	decfsz	9,f
 13279  088D  2889               	goto	u5085
 13280  088E  0833               	movf	??___fttol^(0+128),w
 13281  088F  00B6               	movwf	(??___fttol+3)^(0+128)
 13282  0890  0836               	movf	(??___fttol+3)^(0+128),w
 13283  0891  00B7               	movwf	___fttol@sign1^(0+128)
 13284  0892  17B0               	bsf	(___fttol@f1^(0+128)+1),7
 13285  0893  30FF               	movlw	255
 13286  0894  05AF               	andwf	___fttol@f1^(0+128),f
 13287  0895  30FF               	movlw	255
 13288  0896  05B0               	andwf	(___fttol@f1+1)^(0+128),f
 13289  0897  3000               	movlw	0
 13290  0898  05B1               	andwf	(___fttol@f1+2)^(0+128),f
 13291  0899  082F               	movf	___fttol@f1^(0+128),w
 13292  089A  00B8               	movwf	___fttol@lval^(0+128)
 13293  089B  0830               	movf	(___fttol@f1+1)^(0+128),w
 13294  089C  00B9               	movwf	(___fttol@lval^(0+128)+1)
 13295  089D  0831               	movf	(___fttol@f1+2)^(0+128),w
 13296  089E  00BA               	movwf	(___fttol@lval^(0+128)+2)
 13297  089F  01BB               	clrf	(___fttol@lval^(0+128)+3)
 13298  08A0  308E               	movlw	142
 13299  08A1  02BC               	subwf	___fttol@exp1^(0+128),f
 13300  08A2  1FBC               	btfss	___fttol@exp1^(0+128),7
 13301  08A3  28C0               	goto	l5711
 13302  08A4  083C               	movf	___fttol@exp1^(0+128),w
 13303  08A5  3A80               	xorlw	128
 13304  08A6  3E8F               	addlw	143
 13305  08A7  1803               	skipnc
 13306  08A8  28B2               	goto	l5709
 13307  08A9  3000               	movlw	0
 13308  08AA  00B2               	movwf	(?___fttol+3)^(0+128)
 13309  08AB  3000               	movlw	0
 13310  08AC  00B1               	movwf	(?___fttol+2)^(0+128)
 13311  08AD  3000               	movlw	0
 13312  08AE  00B0               	movwf	(?___fttol+1)^(0+128)
 13313  08AF  3000               	movlw	0
 13314  08B0  00AF               	movwf	?___fttol^(0+128)
 13315  08B1  0008               	return
 13316  08B2                     l5709:	
 13317  08B2  3001               	movlw	1
 13318  08B3                     u5115:	
 13319  08B3  36BB               	lsrf	(___fttol@lval+3)^(0+128),f
 13320  08B4  0CBA               	rrf	(___fttol@lval+2)^(0+128),f
 13321  08B5  0CB9               	rrf	(___fttol@lval+1)^(0+128),f
 13322  08B6  0CB8               	rrf	___fttol@lval^(0+128),f
 13323  08B7  0B89               	decfsz	9,f
 13324  08B8  28B3               	goto	u5115
 13325  08B9  3001               	movlw	1
 13326  08BA  00B3               	movwf	??___fttol^(0+128)
 13327  08BB  0833               	movf	??___fttol^(0+128),w
 13328  08BC  07BC               	addwf	___fttol@exp1^(0+128),f
 13329  08BD  1903               	btfsc	3,2
 13330  08BE  28D9               	goto	l5719
 13331  08BF  28B2               	goto	l5709
 13332  08C0                     l5711:	
 13333  08C0  3018               	movlw	24
 13334  08C1  023C               	subwf	___fttol@exp1^(0+128),w
 13335  08C2  1C03               	skipc
 13336  08C3  28D6               	goto	l1864
 13337  08C4  3000               	movlw	0
 13338  08C5  00B2               	movwf	(?___fttol+3)^(0+128)
 13339  08C6  3000               	movlw	0
 13340  08C7  00B1               	movwf	(?___fttol+2)^(0+128)
 13341  08C8  3000               	movlw	0
 13342  08C9  00B0               	movwf	(?___fttol+1)^(0+128)
 13343  08CA  3000               	movlw	0
 13344  08CB  00AF               	movwf	?___fttol^(0+128)
 13345  08CC  0008               	return
 13346  08CD                     l5717:	
 13347  08CD  3001               	movlw	1
 13348  08CE                     u5145:	
 13349  08CE  35B8               	lslf	___fttol@lval^(0+128),f
 13350  08CF  0DB9               	rlf	(___fttol@lval+1)^(0+128),f
 13351  08D0  0DBA               	rlf	(___fttol@lval+2)^(0+128),f
 13352  08D1  0DBB               	rlf	(___fttol@lval+3)^(0+128),f
 13353  08D2  0B89               	decfsz	9,f
 13354  08D3  28CE               	goto	u5145
 13355  08D4  3001               	movlw	1
 13356  08D5  02BC               	subwf	___fttol@exp1^(0+128),f
 13357  08D6                     l1864:	
 13358  08D6  083C               	movf	___fttol@exp1^(0+128),w
 13359  08D7  1D03               	btfss	3,2
 13360  08D8  28CD               	goto	l5717
 13361  08D9                     l5719:	
 13362  08D9  0837               	movf	___fttol@sign1^(0+128),w
 13363  08DA  1903               	btfsc	3,2
 13364  08DB  28E7               	goto	l5723
 13365  08DC  09B8               	comf	___fttol@lval^(0+128),f
 13366  08DD  09B9               	comf	(___fttol@lval+1)^(0+128),f
 13367  08DE  09BA               	comf	(___fttol@lval+2)^(0+128),f
 13368  08DF  09BB               	comf	(___fttol@lval+3)^(0+128),f
 13369  08E0  0AB8               	incf	___fttol@lval^(0+128),f
 13370  08E1  1903               	skipnz
 13371  08E2  0AB9               	incf	(___fttol@lval+1)^(0+128),f
 13372  08E3  1903               	skipnz
 13373  08E4  0ABA               	incf	(___fttol@lval+2)^(0+128),f
 13374  08E5  1903               	skipnz
 13375  08E6  0ABB               	incf	(___fttol@lval+3)^(0+128),f
 13376  08E7                     l5723:	
 13377  08E7  083B               	movf	(___fttol@lval+3)^(0+128),w
 13378  08E8  00B2               	movwf	(?___fttol+3)^(0+128)
 13379  08E9  083A               	movf	(___fttol@lval+2)^(0+128),w
 13380  08EA  00B1               	movwf	(?___fttol+2)^(0+128)
 13381  08EB  0839               	movf	(___fttol@lval+1)^(0+128),w
 13382  08EC  00B0               	movwf	(?___fttol+1)^(0+128)
 13383  08ED  0838               	movf	___fttol@lval^(0+128),w
 13384  08EE  00AF               	movwf	?___fttol^(0+128)
 13385  08EF  0008               	return
 13386  08F0                     __end_of___fttol:	
 13387                           
 13388                           	psect	text35
 13389  0CBC                     __ptext35:	
 13390 ;; *************** function ___ftmul *****************
 13391 ;; Defined at:
 13392 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 13393 ;; Parameters:    Size  Location     Type
 13394 ;;  f1              3   31[BANK0 ] float 
 13395 ;;  f2              3   34[BANK0 ] float 
 13396 ;; Auto vars:     Size  Location     Type
 13397 ;;  f3_as_produc    3    1[BANK1 ] unsigned um
 13398 ;;  sign            1    5[BANK1 ] unsigned char 
 13399 ;;  cntr            1    4[BANK1 ] unsigned char 
 13400 ;;  exp             1    0[BANK1 ] unsigned char 
 13401 ;; Return value:  Size  Location     Type
 13402 ;;                  3   31[BANK0 ] float 
 13403 ;; Registers used:
 13404 ;;		wreg, status,2, status,0, pclath, cstack
 13405 ;; Tracked objects:
 13406 ;;		On entry : 0/0
 13407 ;;		On exit  : 0/0
 13408 ;;		Unchanged: 0/0
 13409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13410 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13411 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13412 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13413 ;;      Totals:         0      10       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13414 ;;Total ram usage:       16 bytes
 13415 ;; Hardware stack levels used:    1
 13416 ;; Hardware stack levels required when called:    7
 13417 ;; This function calls:
 13418 ;;		___ftpack
 13419 ;; This function is called by:
 13420 ;;		_main_initialize
 13421 ;;		_setDrvPiezoOnTime
 13422 ;;		_setHeaterPreTime
 13423 ;;		_setHeaterPostTime
 13424 ;;		_drv_outputSine
 13425 ;; This function uses a non-reentrant model
 13426 ;;
 13427                           
 13428                           
 13429                           ;psect for function ___ftmul
 13430  0CBC                     ___ftmul:	
 13431                           
 13432                           ;incstack = 0
 13433                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 13434  0CBC  0020               	movlb	0	; select bank0
 13435  0CBD  083F               	movf	___ftmul@f1,w
 13436  0CBE  00C5               	movwf	??___ftmul
 13437  0CBF  0840               	movf	___ftmul@f1+1,w
 13438  0CC0  00C6               	movwf	??___ftmul+1
 13439  0CC1  0841               	movf	___ftmul@f1+2,w
 13440  0CC2  00C7               	movwf	??___ftmul+2
 13441  0CC3  1003               	clrc
 13442  0CC4  0D46               	rlf	??___ftmul+1,w
 13443  0CC5  0D47               	rlf	??___ftmul+2,w
 13444  0CC6  00C8               	movwf	??___ftmul+3
 13445  0CC7  0848               	movf	??___ftmul+3,w
 13446  0CC8  0021               	movlb	1	; select bank1
 13447  0CC9  00A0               	movwf	___ftmul@exp^(0+128)
 13448  0CCA  0820               	movf	___ftmul@exp^(0+128),w
 13449  0CCB  1D03               	btfss	3,2
 13450  0CCC  2CD5               	goto	l7823
 13451  0CCD  3000               	movlw	0
 13452  0CCE  0020               	movlb	0	; select bank0
 13453  0CCF  00BF               	movwf	?___ftmul
 13454  0CD0  3000               	movlw	0
 13455  0CD1  00C0               	movwf	?___ftmul+1
 13456  0CD2  3000               	movlw	0
 13457  0CD3  00C1               	movwf	?___ftmul+2
 13458  0CD4  0008               	return
 13459  0CD5                     l7823:	
 13460  0CD5  0020               	movlb	0	; select bank0
 13461  0CD6  0842               	movf	___ftmul@f2,w
 13462  0CD7  00C5               	movwf	??___ftmul
 13463  0CD8  0843               	movf	___ftmul@f2+1,w
 13464  0CD9  00C6               	movwf	??___ftmul+1
 13465  0CDA  0844               	movf	___ftmul@f2+2,w
 13466  0CDB  00C7               	movwf	??___ftmul+2
 13467  0CDC  1003               	clrc
 13468  0CDD  0D46               	rlf	??___ftmul+1,w
 13469  0CDE  0D47               	rlf	??___ftmul+2,w
 13470  0CDF  00C8               	movwf	??___ftmul+3
 13471  0CE0  0848               	movf	??___ftmul+3,w
 13472  0CE1  0021               	movlb	1	; select bank1
 13473  0CE2  00A5               	movwf	___ftmul@sign^(0+128)
 13474  0CE3  0825               	movf	___ftmul@sign^(0+128),w
 13475  0CE4  1D03               	btfss	3,2
 13476  0CE5  2CEE               	goto	l7829
 13477  0CE6  3000               	movlw	0
 13478  0CE7  0020               	movlb	0	; select bank0
 13479  0CE8  00BF               	movwf	?___ftmul
 13480  0CE9  3000               	movlw	0
 13481  0CEA  00C0               	movwf	?___ftmul+1
 13482  0CEB  3000               	movlw	0
 13483  0CEC  00C1               	movwf	?___ftmul+2
 13484  0CED  0008               	return
 13485  0CEE                     l7829:	
 13486  0CEE  0021               	movlb	1	; select bank1
 13487  0CEF  0825               	movf	___ftmul@sign^(0+128),w
 13488  0CF0  3E7B               	addlw	123
 13489  0CF1  0020               	movlb	0	; select bank0
 13490  0CF2  00C5               	movwf	??___ftmul
 13491  0CF3  0845               	movf	??___ftmul,w
 13492  0CF4  0021               	movlb	1	; select bank1
 13493  0CF5  07A0               	addwf	___ftmul@exp^(0+128),f
 13494  0CF6  0020               	movlb	0	; select bank0
 13495  0CF7  083F               	movf	___ftmul@f1,w
 13496  0CF8  00C5               	movwf	??___ftmul
 13497  0CF9  0840               	movf	___ftmul@f1+1,w
 13498  0CFA  00C6               	movwf	??___ftmul+1
 13499  0CFB  0841               	movf	___ftmul@f1+2,w
 13500  0CFC  00C7               	movwf	??___ftmul+2
 13501  0CFD  3010               	movlw	16
 13502  0CFE                     u7975:	
 13503  0CFE  36C7               	lsrf	??___ftmul+2,f
 13504  0CFF  0CC6               	rrf	??___ftmul+1,f
 13505  0D00  0CC5               	rrf	??___ftmul,f
 13506  0D01  0B89               	decfsz	9,f
 13507  0D02  2CFE               	goto	u7975
 13508  0D03  0845               	movf	??___ftmul,w
 13509  0D04  00C8               	movwf	??___ftmul+3
 13510  0D05  0848               	movf	??___ftmul+3,w
 13511  0D06  0021               	movlb	1	; select bank1
 13512  0D07  00A5               	movwf	___ftmul@sign^(0+128)
 13513  0D08  0020               	movlb	0	; select bank0
 13514  0D09  0842               	movf	___ftmul@f2,w
 13515  0D0A  00C5               	movwf	??___ftmul
 13516  0D0B  0843               	movf	___ftmul@f2+1,w
 13517  0D0C  00C6               	movwf	??___ftmul+1
 13518  0D0D  0844               	movf	___ftmul@f2+2,w
 13519  0D0E  00C7               	movwf	??___ftmul+2
 13520  0D0F  3010               	movlw	16
 13521  0D10                     u7985:	
 13522  0D10  36C7               	lsrf	??___ftmul+2,f
 13523  0D11  0CC6               	rrf	??___ftmul+1,f
 13524  0D12  0CC5               	rrf	??___ftmul,f
 13525  0D13  0B89               	decfsz	9,f
 13526  0D14  2D10               	goto	u7985
 13527  0D15  0845               	movf	??___ftmul,w
 13528  0D16  00C8               	movwf	??___ftmul+3
 13529  0D17  0848               	movf	??___ftmul+3,w
 13530  0D18  0021               	movlb	1	; select bank1
 13531  0D19  06A5               	xorwf	___ftmul@sign^(0+128),f
 13532  0D1A  3080               	movlw	128
 13533  0D1B  0020               	movlb	0	; select bank0
 13534  0D1C  00C5               	movwf	??___ftmul
 13535  0D1D  0845               	movf	??___ftmul,w
 13536  0D1E  0021               	movlb	1	; select bank1
 13537  0D1F  05A5               	andwf	___ftmul@sign^(0+128),f
 13538  0D20  0020               	movlb	0	; select bank0
 13539  0D21  17C0               	bsf	___ftmul@f1+1,7
 13540  0D22  17C3               	bsf	___ftmul@f2+1,7
 13541  0D23  30FF               	movlw	255
 13542  0D24  05C2               	andwf	___ftmul@f2,f
 13543  0D25  30FF               	movlw	255
 13544  0D26  05C3               	andwf	___ftmul@f2+1,f
 13545  0D27  3000               	movlw	0
 13546  0D28  05C4               	andwf	___ftmul@f2+2,f
 13547  0D29  3000               	movlw	0
 13548  0D2A  0021               	movlb	1	; select bank1
 13549  0D2B  00A1               	movwf	___ftmul@f3_as_product^(0+128)
 13550  0D2C  3000               	movlw	0
 13551  0D2D  00A2               	movwf	(___ftmul@f3_as_product+1)^(0+128)
 13552  0D2E  3000               	movlw	0
 13553  0D2F  00A3               	movwf	(___ftmul@f3_as_product+2)^(0+128)
 13554  0D30  3007               	movlw	7
 13555  0D31  0020               	movlb	0	; select bank0
 13556  0D32  00C5               	movwf	??___ftmul
 13557  0D33  0845               	movf	??___ftmul,w
 13558  0D34  0021               	movlb	1	; select bank1
 13559  0D35  00A4               	movwf	___ftmul@cntr^(0+128)
 13560  0D36                     l7841:	
 13561  0D36  0020               	movlb	0	; select bank0
 13562  0D37  1C3F               	btfss	___ftmul@f1,0
 13563  0D38  2D44               	goto	l7845
 13564  0D39  0842               	movf	___ftmul@f2,w
 13565  0D3A  0021               	movlb	1	; select bank1
 13566  0D3B  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 13567  0D3C  0020               	movlb	0	; select bank0
 13568  0D3D  0843               	movf	___ftmul@f2+1,w
 13569  0D3E  0021               	movlb	1	; select bank1
 13570  0D3F  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13571  0D40  0020               	movlb	0	; select bank0
 13572  0D41  0844               	movf	___ftmul@f2+2,w
 13573  0D42  0021               	movlb	1	; select bank1
 13574  0D43  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13575  0D44                     l7845:	
 13576  0D44  3001               	movlw	1
 13577  0D45                     u8005:	
 13578  0D45  0020               	movlb	0	; select bank0
 13579  0D46  36C1               	lsrf	___ftmul@f1+2,f
 13580  0D47  0CC0               	rrf	___ftmul@f1+1,f
 13581  0D48  0CBF               	rrf	___ftmul@f1,f
 13582  0D49  0B89               	decfsz	9,f
 13583  0D4A  2D45               	goto	u8005
 13584  0D4B  3001               	movlw	1
 13585  0D4C                     u8015:	
 13586  0D4C  35C2               	lslf	___ftmul@f2,f
 13587  0D4D  0DC3               	rlf	___ftmul@f2+1,f
 13588  0D4E  0DC4               	rlf	___ftmul@f2+2,f
 13589  0D4F  0B89               	decfsz	9,f
 13590  0D50  2D4C               	goto	u8015
 13591  0D51  3001               	movlw	1
 13592  0D52  0021               	movlb	1	; select bank1
 13593  0D53  02A4               	subwf	___ftmul@cntr^(0+128),f
 13594  0D54  1D03               	btfss	3,2
 13595  0D55  2D36               	goto	l7841
 13596  0D56  3009               	movlw	9
 13597  0D57  0020               	movlb	0	; select bank0
 13598  0D58  00C5               	movwf	??___ftmul
 13599  0D59  0845               	movf	??___ftmul,w
 13600  0D5A  0021               	movlb	1	; select bank1
 13601  0D5B  00A4               	movwf	___ftmul@cntr^(0+128)
 13602  0D5C                     l7853:	
 13603  0D5C  0020               	movlb	0	; select bank0
 13604  0D5D  1C3F               	btfss	___ftmul@f1,0
 13605  0D5E  2D6A               	goto	l7857
 13606  0D5F  0842               	movf	___ftmul@f2,w
 13607  0D60  0021               	movlb	1	; select bank1
 13608  0D61  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 13609  0D62  0020               	movlb	0	; select bank0
 13610  0D63  0843               	movf	___ftmul@f2+1,w
 13611  0D64  0021               	movlb	1	; select bank1
 13612  0D65  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13613  0D66  0020               	movlb	0	; select bank0
 13614  0D67  0844               	movf	___ftmul@f2+2,w
 13615  0D68  0021               	movlb	1	; select bank1
 13616  0D69  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13617  0D6A                     l7857:	
 13618  0D6A  3001               	movlw	1
 13619  0D6B                     u8045:	
 13620  0D6B  0020               	movlb	0	; select bank0
 13621  0D6C  36C1               	lsrf	___ftmul@f1+2,f
 13622  0D6D  0CC0               	rrf	___ftmul@f1+1,f
 13623  0D6E  0CBF               	rrf	___ftmul@f1,f
 13624  0D6F  0B89               	decfsz	9,f
 13625  0D70  2D6B               	goto	u8045
 13626  0D71  3001               	movlw	1
 13627  0D72                     u8055:	
 13628  0D72  0021               	movlb	1	; select bank1
 13629  0D73  36A3               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
 13630  0D74  0CA2               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
 13631  0D75  0CA1               	rrf	___ftmul@f3_as_product^(0+128),f
 13632  0D76  0B89               	decfsz	9,f
 13633  0D77  2D72               	goto	u8055
 13634  0D78  3001               	movlw	1
 13635  0D79  02A4               	subwf	___ftmul@cntr^(0+128),f
 13636  0D7A  1D03               	btfss	3,2
 13637  0D7B  2D5C               	goto	l7853
 13638  0D7C  0821               	movf	___ftmul@f3_as_product^(0+128),w
 13639  0D7D  0020               	movlb	0	; select bank0
 13640  0D7E  00B1               	movwf	___ftpack@arg
 13641  0D7F  0021               	movlb	1	; select bank1
 13642  0D80  0822               	movf	(___ftmul@f3_as_product+1)^(0+128),w
 13643  0D81  0020               	movlb	0	; select bank0
 13644  0D82  00B2               	movwf	___ftpack@arg+1
 13645  0D83  0021               	movlb	1	; select bank1
 13646  0D84  0823               	movf	(___ftmul@f3_as_product+2)^(0+128),w
 13647  0D85  0020               	movlb	0	; select bank0
 13648  0D86  00B3               	movwf	___ftpack@arg+2
 13649  0D87  0021               	movlb	1	; select bank1
 13650  0D88  0820               	movf	___ftmul@exp^(0+128),w
 13651  0D89  0020               	movlb	0	; select bank0
 13652  0D8A  00C5               	movwf	??___ftmul
 13653  0D8B  0845               	movf	??___ftmul,w
 13654  0D8C  00B4               	movwf	___ftpack@exp
 13655  0D8D  0021               	movlb	1	; select bank1
 13656  0D8E  0825               	movf	___ftmul@sign^(0+128),w
 13657  0D8F  0020               	movlb	0	; select bank0
 13658  0D90  00C6               	movwf	??___ftmul+1
 13659  0D91  0846               	movf	??___ftmul+1,w
 13660  0D92  00B5               	movwf	___ftpack@sign
 13661  0D93  3188  2004         	fcall	___ftpack
 13662  0D95  0020               	movlb	0	; select bank0
 13663  0D96  0831               	movf	?___ftpack,w
 13664  0D97  00BF               	movwf	?___ftmul
 13665  0D98  0832               	movf	?___ftpack+1,w
 13666  0D99  00C0               	movwf	?___ftmul+1
 13667  0D9A  0833               	movf	?___ftpack+2,w
 13668  0D9B  00C1               	movwf	?___ftmul+2
 13669  0D9C  0008               	return
 13670  0D9D                     __end_of___ftmul:	
 13671                           
 13672                           	psect	text36
 13673  06E4                     __ptext36:	
 13674 ;; *************** function ___ftadd *****************
 13675 ;; Defined at:
 13676 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 13677 ;; Parameters:    Size  Location     Type
 13678 ;;  f1              3    6[BANK1 ] float 
 13679 ;;  f2              3    9[BANK1 ] float 
 13680 ;; Auto vars:     Size  Location     Type
 13681 ;;  exp1            1   14[BANK1 ] unsigned char 
 13682 ;;  exp2            1   13[BANK1 ] unsigned char 
 13683 ;;  sign            1   12[BANK1 ] unsigned char 
 13684 ;; Return value:  Size  Location     Type
 13685 ;;                  3    6[BANK1 ] float 
 13686 ;; Registers used:
 13687 ;;		wreg, status,2, status,0, pclath, cstack
 13688 ;; Tracked objects:
 13689 ;;		On entry : 0/0
 13690 ;;		On exit  : 0/0
 13691 ;;		Unchanged: 0/0
 13692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13693 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13694 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13695 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13696 ;;      Totals:         0       4       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13697 ;;Total ram usage:       13 bytes
 13698 ;; Hardware stack levels used:    1
 13699 ;; Hardware stack levels required when called:    7
 13700 ;; This function calls:
 13701 ;;		___ftpack
 13702 ;; This function is called by:
 13703 ;;		_main_initialize
 13704 ;;		_setDrvPiezoOnTime
 13705 ;;		_setHeaterPreTime
 13706 ;;		_setHeaterPostTime
 13707 ;; This function uses a non-reentrant model
 13708 ;;
 13709                           
 13710                           
 13711                           ;psect for function ___ftadd
 13712  06E4                     ___ftadd:	
 13713                           
 13714                           ;incstack = 0
 13715                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 13716  06E4  0021               	movlb	1	; select bank1
 13717  06E5  0826               	movf	___ftadd@f1^(0+128),w
 13718  06E6  0020               	movlb	0	; select bank0
 13719  06E7  00C9               	movwf	??___ftadd
 13720  06E8  0021               	movlb	1	; select bank1
 13721  06E9  0827               	movf	(___ftadd@f1+1)^(0+128),w
 13722  06EA  0020               	movlb	0	; select bank0
 13723  06EB  00CA               	movwf	??___ftadd+1
 13724  06EC  0021               	movlb	1	; select bank1
 13725  06ED  0828               	movf	(___ftadd@f1+2)^(0+128),w
 13726  06EE  0020               	movlb	0	; select bank0
 13727  06EF  00CB               	movwf	??___ftadd+2
 13728  06F0  1003               	clrc
 13729  06F1  0D4A               	rlf	??___ftadd+1,w
 13730  06F2  0D4B               	rlf	??___ftadd+2,w
 13731  06F3  00CC               	movwf	??___ftadd+3
 13732  06F4  084C               	movf	??___ftadd+3,w
 13733  06F5  0021               	movlb	1	; select bank1
 13734  06F6  00AE               	movwf	___ftadd@exp1^(0+128)
 13735  06F7  0829               	movf	___ftadd@f2^(0+128),w
 13736  06F8  0020               	movlb	0	; select bank0
 13737  06F9  00C9               	movwf	??___ftadd
 13738  06FA  0021               	movlb	1	; select bank1
 13739  06FB  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13740  06FC  0020               	movlb	0	; select bank0
 13741  06FD  00CA               	movwf	??___ftadd+1
 13742  06FE  0021               	movlb	1	; select bank1
 13743  06FF  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13744  0700  0020               	movlb	0	; select bank0
 13745  0701  00CB               	movwf	??___ftadd+2
 13746  0702  1003               	clrc
 13747  0703  0D4A               	rlf	??___ftadd+1,w
 13748  0704  0D4B               	rlf	??___ftadd+2,w
 13749  0705  00CC               	movwf	??___ftadd+3
 13750  0706  084C               	movf	??___ftadd+3,w
 13751  0707  0021               	movlb	1	; select bank1
 13752  0708  00AD               	movwf	___ftadd@exp2^(0+128)
 13753  0709  082E               	movf	___ftadd@exp1^(0+128),w
 13754  070A  1903               	btfsc	3,2
 13755  070B  2F19               	goto	l7753
 13756  070C  082D               	movf	___ftadd@exp2^(0+128),w
 13757  070D  022E               	subwf	___ftadd@exp1^(0+128),w
 13758  070E  1803               	skipnc
 13759  070F  2F21               	goto	l7757
 13760  0710  032E               	decf	___ftadd@exp1^(0+128),w
 13761  0711  3AFF               	xorlw	255
 13762  0712  072D               	addwf	___ftadd@exp2^(0+128),w
 13763  0713  0020               	movlb	0	; select bank0
 13764  0714  00C9               	movwf	??___ftadd
 13765  0715  3019               	movlw	25
 13766  0716  0249               	subwf	??___ftadd,w
 13767  0717  1C03               	skipc
 13768  0718  2F21               	goto	l7757
 13769  0719                     l7753:	
 13770  0719  0021               	movlb	1	; select bank1
 13771  071A  0829               	movf	___ftadd@f2^(0+128),w
 13772  071B  00A6               	movwf	?___ftadd^(0+128)
 13773  071C  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13774  071D  00A7               	movwf	(?___ftadd+1)^(0+128)
 13775  071E  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13776  071F  00A8               	movwf	(?___ftadd+2)^(0+128)
 13777  0720  0008               	return
 13778  0721                     l7757:	
 13779  0721  0021               	movlb	1	; select bank1
 13780  0722  082D               	movf	___ftadd@exp2^(0+128),w
 13781  0723  1903               	btfsc	3,2
 13782  0724  0008               	return
 13783  0725  082E               	movf	___ftadd@exp1^(0+128),w
 13784  0726  022D               	subwf	___ftadd@exp2^(0+128),w
 13785  0727  1803               	skipnc
 13786  0728  2F32               	goto	l7763
 13787  0729  032D               	decf	___ftadd@exp2^(0+128),w
 13788  072A  3AFF               	xorlw	255
 13789  072B  072E               	addwf	___ftadd@exp1^(0+128),w
 13790  072C  0020               	movlb	0	; select bank0
 13791  072D  00C9               	movwf	??___ftadd
 13792  072E  3019               	movlw	25
 13793  072F  0249               	subwf	??___ftadd,w
 13794  0730  1803               	btfsc	3,0
 13795  0731  0008               	return
 13796  0732                     l7763:	
 13797  0732  3006               	movlw	6
 13798  0733  0020               	movlb	0	; select bank0
 13799  0734  00C9               	movwf	??___ftadd
 13800  0735  0849               	movf	??___ftadd,w
 13801  0736  0021               	movlb	1	; select bank1
 13802  0737  00AC               	movwf	___ftadd@sign^(0+128)
 13803  0738  1BA8               	btfsc	(___ftadd@f1+2)^(0+128),7
 13804  0739  17AC               	bsf	___ftadd@sign^(0+128),7
 13805  073A  1BAB               	btfsc	(___ftadd@f2+2)^(0+128),7
 13806  073B  172C               	bsf	___ftadd@sign^(0+128),6
 13807  073C  17A7               	bsf	(___ftadd@f1^(0+128)+1),7
 13808  073D  30FF               	movlw	255
 13809  073E  05A6               	andwf	___ftadd@f1^(0+128),f
 13810  073F  30FF               	movlw	255
 13811  0740  05A7               	andwf	(___ftadd@f1+1)^(0+128),f
 13812  0741  3000               	movlw	0
 13813  0742  05A8               	andwf	(___ftadd@f1+2)^(0+128),f
 13814  0743  17AA               	bsf	(___ftadd@f2^(0+128)+1),7
 13815  0744  30FF               	movlw	255
 13816  0745  05A9               	andwf	___ftadd@f2^(0+128),f
 13817  0746  30FF               	movlw	255
 13818  0747  05AA               	andwf	(___ftadd@f2+1)^(0+128),f
 13819  0748  3000               	movlw	0
 13820  0749  05AB               	andwf	(___ftadd@f2+2)^(0+128),f
 13821  074A  082D               	movf	___ftadd@exp2^(0+128),w
 13822  074B  022E               	subwf	___ftadd@exp1^(0+128),w
 13823  074C  1803               	skipnc
 13824  074D  2F72               	goto	l7785
 13825  074E                     l7775:	
 13826  074E  3001               	movlw	1
 13827  074F                     u7815:	
 13828  074F  35A9               	lslf	___ftadd@f2^(0+128),f
 13829  0750  0DAA               	rlf	(___ftadd@f2+1)^(0+128),f
 13830  0751  0DAB               	rlf	(___ftadd@f2+2)^(0+128),f
 13831  0752  0B89               	decfsz	9,f
 13832  0753  2F4F               	goto	u7815
 13833  0754  3001               	movlw	1
 13834  0755  02AD               	subwf	___ftadd@exp2^(0+128),f
 13835  0756  082D               	movf	___ftadd@exp2^(0+128),w
 13836  0757  062E               	xorwf	___ftadd@exp1^(0+128),w
 13837  0758  1903               	skipnz
 13838  0759  2F6D               	goto	l7783
 13839  075A  3001               	movlw	1
 13840  075B  02AC               	subwf	___ftadd@sign^(0+128),f
 13841  075C  082C               	movf	___ftadd@sign^(0+128),w
 13842  075D  3907               	andlw	7
 13843  075E  1903               	btfsc	3,2
 13844  075F  2F6D               	goto	l7783
 13845  0760  2F4E               	goto	l7775
 13846  0761                     l7781:	
 13847  0761  3001               	movlw	1
 13848  0762                     u7845:	
 13849  0762  36A8               	lsrf	(___ftadd@f1+2)^(0+128),f
 13850  0763  0CA7               	rrf	(___ftadd@f1+1)^(0+128),f
 13851  0764  0CA6               	rrf	___ftadd@f1^(0+128),f
 13852  0765  0B89               	decfsz	9,f
 13853  0766  2F62               	goto	u7845
 13854  0767  3001               	movlw	1
 13855  0768  0020               	movlb	0	; select bank0
 13856  0769  00C9               	movwf	??___ftadd
 13857  076A  0849               	movf	??___ftadd,w
 13858  076B  0021               	movlb	1	; select bank1
 13859  076C  07AE               	addwf	___ftadd@exp1^(0+128),f
 13860  076D                     l7783:	
 13861  076D  082E               	movf	___ftadd@exp1^(0+128),w
 13862  076E  062D               	xorwf	___ftadd@exp2^(0+128),w
 13863  076F  1903               	btfsc	3,2
 13864  0770  2F99               	goto	l1804
 13865  0771  2F61               	goto	l7781
 13866  0772                     l7785:	
 13867  0772  082E               	movf	___ftadd@exp1^(0+128),w
 13868  0773  022D               	subwf	___ftadd@exp2^(0+128),w
 13869  0774  1803               	skipnc
 13870  0775  2F99               	goto	l1804
 13871  0776                     l7787:	
 13872  0776  3001               	movlw	1
 13873  0777                     u7875:	
 13874  0777  35A6               	lslf	___ftadd@f1^(0+128),f
 13875  0778  0DA7               	rlf	(___ftadd@f1+1)^(0+128),f
 13876  0779  0DA8               	rlf	(___ftadd@f1+2)^(0+128),f
 13877  077A  0B89               	decfsz	9,f
 13878  077B  2F77               	goto	u7875
 13879  077C  3001               	movlw	1
 13880  077D  02AE               	subwf	___ftadd@exp1^(0+128),f
 13881  077E  082D               	movf	___ftadd@exp2^(0+128),w
 13882  077F  062E               	xorwf	___ftadd@exp1^(0+128),w
 13883  0780  1903               	skipnz
 13884  0781  2F95               	goto	l7795
 13885  0782  3001               	movlw	1
 13886  0783  02AC               	subwf	___ftadd@sign^(0+128),f
 13887  0784  082C               	movf	___ftadd@sign^(0+128),w
 13888  0785  3907               	andlw	7
 13889  0786  1903               	btfsc	3,2
 13890  0787  2F95               	goto	l7795
 13891  0788  2F76               	goto	l7787
 13892  0789                     l7793:	
 13893  0789  3001               	movlw	1
 13894  078A                     u7905:	
 13895  078A  36AB               	lsrf	(___ftadd@f2+2)^(0+128),f
 13896  078B  0CAA               	rrf	(___ftadd@f2+1)^(0+128),f
 13897  078C  0CA9               	rrf	___ftadd@f2^(0+128),f
 13898  078D  0B89               	decfsz	9,f
 13899  078E  2F8A               	goto	u7905
 13900  078F  3001               	movlw	1
 13901  0790  0020               	movlb	0	; select bank0
 13902  0791  00C9               	movwf	??___ftadd
 13903  0792  0849               	movf	??___ftadd,w
 13904  0793  0021               	movlb	1	; select bank1
 13905  0794  07AD               	addwf	___ftadd@exp2^(0+128),f
 13906  0795                     l7795:	
 13907  0795  082E               	movf	___ftadd@exp1^(0+128),w
 13908  0796  062D               	xorwf	___ftadd@exp2^(0+128),w
 13909  0797  1D03               	skipz
 13910  0798  2F89               	goto	l7793
 13911  0799                     l1804:	
 13912  0799  1FAC               	btfss	___ftadd@sign^(0+128),7
 13913  079A  2FAB               	goto	l7799
 13914  079B  30FF               	movlw	255
 13915  079C  06A6               	xorwf	___ftadd@f1^(0+128),f
 13916  079D  30FF               	movlw	255
 13917  079E  06A7               	xorwf	(___ftadd@f1+1)^(0+128),f
 13918  079F  30FF               	movlw	255
 13919  07A0  06A8               	xorwf	(___ftadd@f1+2)^(0+128),f
 13920  07A1  3001               	movlw	1
 13921  07A2  07A6               	addwf	___ftadd@f1^(0+128),f
 13922  07A3  3000               	movlw	0
 13923  07A4  1803               	skipnc
 13924  07A5  3001               	movlw	1
 13925  07A6  07A7               	addwf	(___ftadd@f1+1)^(0+128),f
 13926  07A7  3000               	movlw	0
 13927  07A8  1803               	skipnc
 13928  07A9  3001               	movlw	1
 13929  07AA  07A8               	addwf	(___ftadd@f1+2)^(0+128),f
 13930  07AB                     l7799:	
 13931  07AB  1F2C               	btfss	___ftadd@sign^(0+128),6
 13932  07AC  2FBD               	goto	l7803
 13933  07AD  30FF               	movlw	255
 13934  07AE  06A9               	xorwf	___ftadd@f2^(0+128),f
 13935  07AF  30FF               	movlw	255
 13936  07B0  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 13937  07B1  30FF               	movlw	255
 13938  07B2  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 13939  07B3  3001               	movlw	1
 13940  07B4  07A9               	addwf	___ftadd@f2^(0+128),f
 13941  07B5  3000               	movlw	0
 13942  07B6  1803               	skipnc
 13943  07B7  3001               	movlw	1
 13944  07B8  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 13945  07B9  3000               	movlw	0
 13946  07BA  1803               	skipnc
 13947  07BB  3001               	movlw	1
 13948  07BC  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 13949  07BD                     l7803:	
 13950  07BD  01AC               	clrf	___ftadd@sign^(0+128)
 13951  07BE  0826               	movf	___ftadd@f1^(0+128),w
 13952  07BF  07A9               	addwf	___ftadd@f2^(0+128),f
 13953  07C0  0827               	movf	(___ftadd@f1+1)^(0+128),w
 13954  07C1  3DAA               	addwfc	(___ftadd@f2+1)^(0+128),f
 13955  07C2  0828               	movf	(___ftadd@f1+2)^(0+128),w
 13956  07C3  3DAB               	addwfc	(___ftadd@f2+2)^(0+128),f
 13957  07C4  1FAB               	btfss	(___ftadd@f2+2)^(0+128),7
 13958  07C5  2FD8               	goto	l7813
 13959  07C6  30FF               	movlw	255
 13960  07C7  06A9               	xorwf	___ftadd@f2^(0+128),f
 13961  07C8  30FF               	movlw	255
 13962  07C9  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 13963  07CA  30FF               	movlw	255
 13964  07CB  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 13965  07CC  3001               	movlw	1
 13966  07CD  07A9               	addwf	___ftadd@f2^(0+128),f
 13967  07CE  3000               	movlw	0
 13968  07CF  1803               	skipnc
 13969  07D0  3001               	movlw	1
 13970  07D1  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 13971  07D2  3000               	movlw	0
 13972  07D3  1803               	skipnc
 13973  07D4  3001               	movlw	1
 13974  07D5  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 13975  07D6  01AC               	clrf	___ftadd@sign^(0+128)
 13976  07D7  0AAC               	incf	___ftadd@sign^(0+128),f
 13977  07D8                     l7813:	
 13978  07D8  0829               	movf	___ftadd@f2^(0+128),w
 13979  07D9  0020               	movlb	0	; select bank0
 13980  07DA  00B1               	movwf	___ftpack@arg
 13981  07DB  0021               	movlb	1	; select bank1
 13982  07DC  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13983  07DD  0020               	movlb	0	; select bank0
 13984  07DE  00B2               	movwf	___ftpack@arg+1
 13985  07DF  0021               	movlb	1	; select bank1
 13986  07E0  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13987  07E1  0020               	movlb	0	; select bank0
 13988  07E2  00B3               	movwf	___ftpack@arg+2
 13989  07E3  0021               	movlb	1	; select bank1
 13990  07E4  082E               	movf	___ftadd@exp1^(0+128),w
 13991  07E5  0020               	movlb	0	; select bank0
 13992  07E6  00C9               	movwf	??___ftadd
 13993  07E7  0849               	movf	??___ftadd,w
 13994  07E8  00B4               	movwf	___ftpack@exp
 13995  07E9  0021               	movlb	1	; select bank1
 13996  07EA  082C               	movf	___ftadd@sign^(0+128),w
 13997  07EB  0020               	movlb	0	; select bank0
 13998  07EC  00CA               	movwf	??___ftadd+1
 13999  07ED  084A               	movf	??___ftadd+1,w
 14000  07EE  00B5               	movwf	___ftpack@sign
 14001  07EF  3188  2004         	fcall	___ftpack
 14002  07F1  0020               	movlb	0	; select bank0
 14003  07F2  0831               	movf	?___ftpack,w
 14004  07F3  0021               	movlb	1	; select bank1
 14005  07F4  00A6               	movwf	?___ftadd^(0+128)
 14006  07F5  0020               	movlb	0	; select bank0
 14007  07F6  0832               	movf	?___ftpack+1,w
 14008  07F7  0021               	movlb	1	; select bank1
 14009  07F8  00A7               	movwf	(?___ftadd+1)^(0+128)
 14010  07F9  0020               	movlb	0	; select bank0
 14011  07FA  0833               	movf	?___ftpack+2,w
 14012  07FB  0021               	movlb	1	; select bank1
 14013  07FC  00A8               	movwf	(?___ftadd+2)^(0+128)
 14014  07FD  0008               	return
 14015  07FE                     __end_of___ftadd:	
 14016                           
 14017                           	psect	text37
 14018  2578                     __ptext37:	
 14019 ;; *************** function ___awtoft *****************
 14020 ;; Defined at:
 14021 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 14022 ;; Parameters:    Size  Location     Type
 14023 ;;  c               2   25[BANK0 ] int 
 14024 ;; Auto vars:     Size  Location     Type
 14025 ;;  sign            1   30[BANK0 ] unsigned char 
 14026 ;; Return value:  Size  Location     Type
 14027 ;;                  3   25[BANK0 ] float 
 14028 ;; Registers used:
 14029 ;;		wreg, status,2, status,0, pclath, cstack
 14030 ;; Tracked objects:
 14031 ;;		On entry : 0/0
 14032 ;;		On exit  : 0/0
 14033 ;;		Unchanged: 0/0
 14034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14035 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14037 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14038 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14039 ;;Total ram usage:        6 bytes
 14040 ;; Hardware stack levels used:    1
 14041 ;; Hardware stack levels required when called:    7
 14042 ;; This function calls:
 14043 ;;		___ftpack
 14044 ;; This function is called by:
 14045 ;;		_main_initialize
 14046 ;;		_setDrvPiezoOnTime
 14047 ;;		_setHeaterPreTime
 14048 ;;		_setHeaterPostTime
 14049 ;;		_drv_outputSine
 14050 ;; This function uses a non-reentrant model
 14051 ;;
 14052                           
 14053                           
 14054                           ;psect for function ___awtoft
 14055  2578                     ___awtoft:	
 14056                           
 14057                           ;incstack = 0
 14058                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 14059  2578  0020               	movlb	0	; select bank0
 14060  2579  01BE               	clrf	___awtoft@sign
 14061  257A  1FBA               	btfss	___awtoft@c+1,7
 14062  257B  2D83               	goto	l7743
 14063  257C  09B9               	comf	___awtoft@c,f
 14064  257D  09BA               	comf	___awtoft@c+1,f
 14065  257E  0AB9               	incf	___awtoft@c,f
 14066  257F  1903               	skipnz
 14067  2580  0ABA               	incf	___awtoft@c+1,f
 14068  2581  01BE               	clrf	___awtoft@sign
 14069  2582  0ABE               	incf	___awtoft@sign,f
 14070  2583                     l7743:	
 14071  2583  0839               	movf	___awtoft@c,w
 14072  2584  00B1               	movwf	___ftpack@arg
 14073  2585  083A               	movf	___awtoft@c+1,w
 14074  2586  00B2               	movwf	___ftpack@arg+1
 14075  2587  01B3               	clrf	___ftpack@arg+2
 14076  2588  308E               	movlw	142
 14077  2589  00BC               	movwf	??___awtoft
 14078  258A  083C               	movf	??___awtoft,w
 14079  258B  00B4               	movwf	___ftpack@exp
 14080  258C  083E               	movf	___awtoft@sign,w
 14081  258D  00BD               	movwf	??___awtoft+1
 14082  258E  083D               	movf	??___awtoft+1,w
 14083  258F  00B5               	movwf	___ftpack@sign
 14084  2590  3188  2004         	fcall	___ftpack
 14085  2592  0020               	movlb	0	; select bank0
 14086  2593  0831               	movf	?___ftpack,w
 14087  2594  00B9               	movwf	?___awtoft
 14088  2595  0832               	movf	?___ftpack+1,w
 14089  2596  00BA               	movwf	?___awtoft+1
 14090  2597  0833               	movf	?___ftpack+2,w
 14091  2598  00BB               	movwf	?___awtoft+2
 14092  2599  0008               	return
 14093  259A                     __end_of___awtoft:	
 14094                           
 14095                           	psect	text38
 14096  0804                     __ptext38:	
 14097 ;; *************** function ___ftpack *****************
 14098 ;; Defined at:
 14099 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 14100 ;; Parameters:    Size  Location     Type
 14101 ;;  arg             3   17[BANK0 ] unsigned um
 14102 ;;  exp             1   20[BANK0 ] unsigned char 
 14103 ;;  sign            1   21[BANK0 ] unsigned char 
 14104 ;; Auto vars:     Size  Location     Type
 14105 ;;		None
 14106 ;; Return value:  Size  Location     Type
 14107 ;;                  3   17[BANK0 ] float 
 14108 ;; Registers used:
 14109 ;;		wreg, status,2, status,0
 14110 ;; Tracked objects:
 14111 ;;		On entry : 0/0
 14112 ;;		On exit  : 0/0
 14113 ;;		Unchanged: 0/0
 14114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14115 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14117 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14118 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14119 ;;Total ram usage:        8 bytes
 14120 ;; Hardware stack levels used:    1
 14121 ;; Hardware stack levels required when called:    6
 14122 ;; This function calls:
 14123 ;;		Nothing
 14124 ;; This function is called by:
 14125 ;;		___awtoft
 14126 ;;		___ftadd
 14127 ;;		___ftmul
 14128 ;; This function uses a non-reentrant model
 14129 ;;
 14130                           
 14131                           
 14132                           ;psect for function ___ftpack
 14133  0804                     ___ftpack:	
 14134                           
 14135                           ;incstack = 0
 14136                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 14137  0804  0020               	movlb	0	; select bank0
 14138  0805  0834               	movf	___ftpack@exp,w
 14139  0806  1903               	btfsc	3,2
 14140  0807  280D               	goto	l7595
 14141  0808  0833               	movf	___ftpack@arg+2,w
 14142  0809  0432               	iorwf	___ftpack@arg+1,w
 14143  080A  0431               	iorwf	___ftpack@arg,w
 14144  080B  1D03               	skipz
 14145  080C  281E               	goto	l7601
 14146  080D                     l7595:	
 14147  080D  3000               	movlw	0
 14148  080E  00B1               	movwf	?___ftpack
 14149  080F  3000               	movlw	0
 14150  0810  00B2               	movwf	?___ftpack+1
 14151  0811  3000               	movlw	0
 14152  0812  00B3               	movwf	?___ftpack+2
 14153  0813  0008               	return
 14154  0814                     l7599:	
 14155  0814  3001               	movlw	1
 14156  0815  00B6               	movwf	??___ftpack
 14157  0816  0836               	movf	??___ftpack,w
 14158  0817  07B4               	addwf	___ftpack@exp,f
 14159  0818  3001               	movlw	1
 14160  0819                     u7445:	
 14161  0819  36B3               	lsrf	___ftpack@arg+2,f
 14162  081A  0CB2               	rrf	___ftpack@arg+1,f
 14163  081B  0CB1               	rrf	___ftpack@arg,f
 14164  081C  0B89               	decfsz	9,f
 14165  081D  2819               	goto	u7445
 14166  081E                     l7601:	
 14167  081E  30FE               	movlw	254
 14168  081F  0533               	andwf	___ftpack@arg+2,w
 14169  0820  1903               	btfsc	3,2
 14170  0821  2837               	goto	l1773
 14171  0822  2814               	goto	l7599
 14172  0823                     l7603:	
 14173  0823  3001               	movlw	1
 14174  0824  00B6               	movwf	??___ftpack
 14175  0825  0836               	movf	??___ftpack,w
 14176  0826  07B4               	addwf	___ftpack@exp,f
 14177  0827  3001               	movlw	1
 14178  0828  07B1               	addwf	___ftpack@arg,f
 14179  0829  3000               	movlw	0
 14180  082A  1803               	skipnc
 14181  082B  3001               	movlw	1
 14182  082C  07B2               	addwf	___ftpack@arg+1,f
 14183  082D  3000               	movlw	0
 14184  082E  1803               	skipnc
 14185  082F  3001               	movlw	1
 14186  0830  07B3               	addwf	___ftpack@arg+2,f
 14187  0831  3001               	movlw	1
 14188  0832                     u7465:	
 14189  0832  36B3               	lsrf	___ftpack@arg+2,f
 14190  0833  0CB2               	rrf	___ftpack@arg+1,f
 14191  0834  0CB1               	rrf	___ftpack@arg,f
 14192  0835  0B89               	decfsz	9,f
 14193  0836  2832               	goto	u7465
 14194  0837                     l1773:	
 14195  0837  30FF               	movlw	255
 14196  0838  0533               	andwf	___ftpack@arg+2,w
 14197  0839  1903               	btfsc	3,2
 14198  083A  2844               	goto	l7611
 14199  083B  2823               	goto	l7603
 14200  083C                     l7609:	
 14201  083C  3001               	movlw	1
 14202  083D  02B4               	subwf	___ftpack@exp,f
 14203  083E  3001               	movlw	1
 14204  083F                     u7485:	
 14205  083F  35B1               	lslf	___ftpack@arg,f
 14206  0840  0DB2               	rlf	___ftpack@arg+1,f
 14207  0841  0DB3               	rlf	___ftpack@arg+2,f
 14208  0842  0B89               	decfsz	9,f
 14209  0843  283F               	goto	u7485
 14210  0844                     l7611:	
 14211  0844  1BB2               	btfsc	___ftpack@arg+1,7
 14212  0845  284A               	goto	l1780
 14213  0846  3002               	movlw	2
 14214  0847  0234               	subwf	___ftpack@exp,w
 14215  0848  1803               	skipnc
 14216  0849  283C               	goto	l7609
 14217  084A                     l1780:	
 14218  084A  1834               	btfsc	___ftpack@exp,0
 14219  084B  2852               	goto	l1781
 14220  084C  30FF               	movlw	255
 14221  084D  05B1               	andwf	___ftpack@arg,f
 14222  084E  307F               	movlw	127
 14223  084F  05B2               	andwf	___ftpack@arg+1,f
 14224  0850  30FF               	movlw	255
 14225  0851  05B3               	andwf	___ftpack@arg+2,f
 14226  0852                     l1781:	
 14227  0852  1003               	clrc
 14228  0853  0CB4               	rrf	___ftpack@exp,f
 14229  0854  0834               	movf	___ftpack@exp,w
 14230  0855  00B6               	movwf	??___ftpack
 14231  0856  01B7               	clrf	??___ftpack+1
 14232  0857  01B8               	clrf	??___ftpack+2
 14233  0858  3010               	movlw	16
 14234  0859                     u7525:	
 14235  0859  35B6               	lslf	??___ftpack,f
 14236  085A  0DB7               	rlf	??___ftpack+1,f
 14237  085B  0DB8               	rlf	??___ftpack+2,f
 14238  085C  0B89               	decfsz	9,f
 14239  085D  2859               	goto	u7525
 14240  085E  0836               	movf	??___ftpack,w
 14241  085F  04B1               	iorwf	___ftpack@arg,f
 14242  0860  0837               	movf	??___ftpack+1,w
 14243  0861  04B2               	iorwf	___ftpack@arg+1,f
 14244  0862  0838               	movf	??___ftpack+2,w
 14245  0863  04B3               	iorwf	___ftpack@arg+2,f
 14246  0864  0835               	movf	___ftpack@sign,w
 14247  0865  1903               	btfsc	3,2
 14248  0866  0008               	return
 14249  0867  17B3               	bsf	___ftpack@arg+2,7
 14250  0868  0008               	return
 14251  0869                     __end_of___ftpack:	
 14252                           
 14253                           	psect	text39
 14254  21B2                     __ptext39:	
 14255 ;; *************** function _TMR0_Load8bitPeriod *****************
 14256 ;; Defined at:
 14257 ;;		line 113 in file "mcc_generated_files/tmr0.c"
 14258 ;; Parameters:    Size  Location     Type
 14259 ;;  periodVal       1    wreg     unsigned char 
 14260 ;; Auto vars:     Size  Location     Type
 14261 ;;  periodVal       1   17[BANK0 ] unsigned char 
 14262 ;; Return value:  Size  Location     Type
 14263 ;;                  1    wreg      void 
 14264 ;; Registers used:
 14265 ;;		wreg
 14266 ;; Tracked objects:
 14267 ;;		On entry : 0/0
 14268 ;;		On exit  : 0/0
 14269 ;;		Unchanged: 0/0
 14270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14274 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14275 ;;Total ram usage:        1 bytes
 14276 ;; Hardware stack levels used:    1
 14277 ;; Hardware stack levels required when called:    6
 14278 ;; This function calls:
 14279 ;;		Nothing
 14280 ;; This function is called by:
 14281 ;;		_main_initialize
 14282 ;;		_setDrvPiezoOnTime
 14283 ;;		_setHeaterPreTime
 14284 ;; This function uses a non-reentrant model
 14285 ;;
 14286                           
 14287                           
 14288                           ;psect for function _TMR0_Load8bitPeriod
 14289  21B2                     _TMR0_Load8bitPeriod:	
 14290                           
 14291                           ;incstack = 0
 14292                           ; Regs used in _TMR0_Load8bitPeriod: [wreg]
 14293                           ;TMR0_Load8bitPeriod@periodVal stored from wreg
 14294  21B2  0020               	movlb	0	; select bank0
 14295  21B3  00B1               	movwf	TMR0_Load8bitPeriod@periodVal
 14296                           
 14297                           ;tmr0.c: 116: TMR0H = periodVal;
 14298  21B4  0831               	movf	TMR0_Load8bitPeriod@periodVal,w
 14299  21B5  0096               	movwf	22	;volatile
 14300  21B6  0008               	return
 14301  21B7                     __end_of_TMR0_Load8bitPeriod:	
 14302                           
 14303                           	psect	text40
 14304  2371                     __ptext40:	
 14305 ;; *************** function _setDrvPeak *****************
 14306 ;; Defined at:
 14307 ;;		line 395 in file "main.c"
 14308 ;; Parameters:    Size  Location     Type
 14309 ;;  pk              2   21[BANK1 ] int 
 14310 ;; Auto vars:     Size  Location     Type
 14311 ;;		None
 14312 ;; Return value:  Size  Location     Type
 14313 ;;                  2   21[BANK1 ] int 
 14314 ;; Registers used:
 14315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14316 ;; Tracked objects:
 14317 ;;		On entry : 0/0
 14318 ;;		On exit  : 0/0
 14319 ;;		Unchanged: 0/0
 14320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14321 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14324 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14325 ;;Total ram usage:        2 bytes
 14326 ;; Hardware stack levels used:    1
 14327 ;; Hardware stack levels required when called:    9
 14328 ;; This function calls:
 14329 ;;		_printf
 14330 ;; This function is called by:
 14331 ;;		_execCmd
 14332 ;; This function uses a non-reentrant model
 14333 ;;
 14334                           
 14335                           
 14336                           ;psect for function _setDrvPeak
 14337  2371                     _setDrvPeak:	
 14338                           
 14339                           ;main.c: 396: drv_peak_val = pk;
 14340                           
 14341                           ;incstack = 0
 14342                           ; Regs used in _setDrvPeak: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14343  2371  0021               	movlb	1	; select bank1
 14344  2372  0836               	movf	(setDrvPeak@pk+1)^(0+128),w
 14345  2373  0022               	movlb	2	; select bank2
 14346  2374  00EF               	movwf	(_drv_peak_val+1)^(0+256)
 14347  2375  0021               	movlb	1	; select bank1
 14348  2376  0835               	movf	setDrvPeak@pk^(0+128),w
 14349  2377  0022               	movlb	2	; select bank2
 14350  2378  00EE               	movwf	_drv_peak_val^(0+256)
 14351                           
 14352                           ;main.c: 397: printf("A\n");
 14353  2379  3036               	movlw	low (STR_7| (0+32768))
 14354  237A  0021               	movlb	1	; select bank1
 14355  237B  00A0               	movwf	printf@f^(0+128)
 14356  237C  30AA               	movlw	high (STR_7| (0+32768))
 14357  237D  00A1               	movwf	(printf@f^(0+128)+1)
 14358  237E  318E  26CE         	fcall	_printf
 14359                           
 14360                           ;main.c: 398: return 0;
 14361  2380  0021               	movlb	1	; select bank1
 14362  2381  01B5               	clrf	?_setDrvPeak^(0+128)
 14363  2382  01B6               	clrf	(?_setDrvPeak+1)^(0+128)
 14364  2383  0008               	return
 14365  2384                     __end_of_setDrvPeak:	
 14366                           
 14367                           	psect	text41
 14368  1979                     __ptext41:	
 14369 ;; *************** function _setDrvGain *****************
 14370 ;; Defined at:
 14371 ;;		line 402 in file "main.c"
 14372 ;; Parameters:    Size  Location     Type
 14373 ;;  gain            2   21[BANK1 ] int 
 14374 ;; Auto vars:     Size  Location     Type
 14375 ;;  setGain         2   24[BANK1 ] int 
 14376 ;; Return value:  Size  Location     Type
 14377 ;;                  2   21[BANK1 ] int 
 14378 ;; Registers used:
 14379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14380 ;; Tracked objects:
 14381 ;;		On entry : 0/0
 14382 ;;		On exit  : 0/0
 14383 ;;		Unchanged: 0/0
 14384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14385 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14386 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14387 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14388 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14389 ;;Total ram usage:        5 bytes
 14390 ;; Hardware stack levels used:    1
 14391 ;; Hardware stack levels required when called:   13
 14392 ;; This function calls:
 14393 ;;		_drv_write
 14394 ;;		_printf
 14395 ;; This function is called by:
 14396 ;;		_execCmd
 14397 ;; This function uses a non-reentrant model
 14398 ;;
 14399                           
 14400                           
 14401                           ;psect for function _setDrvGain
 14402  1979                     _setDrvGain:	
 14403                           
 14404                           ;main.c: 403: int setGain = 0;
 14405                           
 14406                           ;incstack = 0
 14407                           ; Regs used in _setDrvGain: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14408  1979  0021               	movlb	1	; select bank1
 14409  197A  01B8               	clrf	setDrvGain@setGain^(0+128)
 14410  197B  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 14411                           
 14412                           ;main.c: 404: switch (gain){
 14413  197C  2995               	goto	l8063
 14414  197D                     l8047:	
 14415                           ;main.c: 405: case 0: setGain = 0x00; break;
 14416                           
 14417  197D  01B8               	clrf	setDrvGain@setGain^(0+128)
 14418  197E  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 14419  197F  29A8               	goto	l8065
 14420  1980                     l8049:	
 14421                           ;main.c: 406: case 1: setGain = 0x01; break;
 14422                           
 14423  1980  3001               	movlw	1
 14424  1981  2985               	goto	L25
 14425  1982                     l8051:	
 14426                           ;main.c: 407: case 2: setGain = 0x02; break;
 14427                           
 14428  1982  3002               	movlw	2
 14429  1983  2985               	goto	L25
 14430  1984                     l8053:	
 14431                           ;main.c: 408: case 3: setGain = 0x03; break;
 14432                           
 14433  1984  3003               	movlw	3
 14434  1985                     L25:	
 14435  1985  00B8               	movwf	setDrvGain@setGain^(0+128)
 14436  1986  3000               	movlw	0
 14437  1987  00B9               	movwf	(setDrvGain@setGain^(0+128)+1)
 14438  1988  29A8               	goto	l8065
 14439  1989                     l8055:	
 14440                           ;main.c: 409: default: printf("E\n"); return 1;
 14441                           
 14442  1989  3039               	movlw	low (STR_14| (0+32768))
 14443  198A  00A0               	movwf	printf@f^(0+128)
 14444  198B  30AA               	movlw	high (STR_14| (0+32768))
 14445  198C  00A1               	movwf	(printf@f^(0+128)+1)
 14446  198D  318E  26CE         	fcall	_printf
 14447  198F  3001               	movlw	1
 14448  1990  0021               	movlb	1	; select bank1
 14449  1991  00B5               	movwf	?_setDrvGain^(0+128)
 14450  1992  3000               	movlw	0
 14451  1993  00B6               	movwf	(?_setDrvGain^(0+128)+1)
 14452  1994  0008               	return
 14453  1995                     l8063:	
 14454                           ;main.c: 410: }
 14455                           
 14456                           
 14457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14458                           ; Switch size 1, requested type "space"
 14459                           ; Number of cases is 1, Range of values is 0 to 0
 14460                           ; switch strategies available:
 14461                           ; Name         Instructions Cycles
 14462                           ; simple_byte            4     3 (average)
 14463                           ; direct_byte            8     6 (fixed)
 14464                           ; jumptable            260     6 (fixed)
 14465                           ;	Chosen strategy is simple_byte
 14466  1995  0836               	movf	(setDrvGain@gain+1)^(0+128),w
 14467  1996  3A00               	xorlw	0	; case 0
 14468  1997  1903               	skipnz
 14469  1998  299A               	goto	l8765
 14470  1999  2989               	goto	l8055
 14471  199A                     l8765:	
 14472                           
 14473                           ; Switch size 1, requested type "space"
 14474                           ; Number of cases is 4, Range of values is 0 to 3
 14475                           ; switch strategies available:
 14476                           ; Name         Instructions Cycles
 14477                           ; simple_byte           13     7 (average)
 14478                           ; direct_byte           14     6 (fixed)
 14479                           ; jumptable            260     6 (fixed)
 14480                           ;	Chosen strategy is simple_byte
 14481  199A  0835               	movf	setDrvGain@gain^(0+128),w
 14482  199B  3A00               	xorlw	0	; case 0
 14483  199C  1903               	skipnz
 14484  199D  297D               	goto	l8047
 14485  199E  3A01               	xorlw	1	; case 1
 14486  199F  1903               	skipnz
 14487  19A0  2980               	goto	l8049
 14488  19A1  3A03               	xorlw	3	; case 2
 14489  19A2  1903               	skipnz
 14490  19A3  2982               	goto	l8051
 14491  19A4  3A01               	xorlw	1	; case 3
 14492  19A5  1903               	skipnz
 14493  19A6  2984               	goto	l8053
 14494  19A7  2989               	goto	l8055
 14495  19A8                     l8065:	
 14496                           
 14497                           ;main.c: 411: drv_write(0x01, setGain);
 14498  19A8  0838               	movf	setDrvGain@setGain^(0+128),w
 14499  19A9  00B7               	movwf	??_setDrvGain^(0+128)
 14500  19AA  0837               	movf	??_setDrvGain^(0+128),w
 14501  19AB  0020               	movlb	0	; select bank0
 14502  19AC  00C9               	movwf	drv_write@data
 14503  19AD  3001               	movlw	1
 14504  19AE  31A6  2605  3199   	fcall	_drv_write
 14505                           
 14506                           ;main.c: 412: printf("A\n");
 14507  19B1  3036               	movlw	low (STR_7| (0+32768))
 14508  19B2  0021               	movlb	1	; select bank1
 14509  19B3  00A0               	movwf	printf@f^(0+128)
 14510  19B4  30AA               	movlw	high (STR_7| (0+32768))
 14511  19B5  00A1               	movwf	(printf@f^(0+128)+1)
 14512  19B6  318E  26CE         	fcall	_printf
 14513                           
 14514                           ;main.c: 413: return 0;
 14515  19B8  0021               	movlb	1	; select bank1
 14516  19B9  01B5               	clrf	?_setDrvGain^(0+128)
 14517  19BA  01B6               	clrf	(?_setDrvGain+1)^(0+128)
 14518  19BB  0008               	return
 14519  19BC                     __end_of_setDrvGain:	
 14520                           
 14521                           	psect	text42
 14522  1591                     __ptext42:	
 14523 ;; *************** function _setActive *****************
 14524 ;; Defined at:
 14525 ;;		line 500 in file "main.c"
 14526 ;; Parameters:    Size  Location     Type
 14527 ;;  probeNum        2   21[BANK1 ] int 
 14528 ;;  onOff           2   23[BANK1 ] int 
 14529 ;; Auto vars:     Size  Location     Type
 14530 ;;		None
 14531 ;; Return value:  Size  Location     Type
 14532 ;;                  2   21[BANK1 ] int 
 14533 ;; Registers used:
 14534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14535 ;; Tracked objects:
 14536 ;;		On entry : 0/0
 14537 ;;		On exit  : 0/0
 14538 ;;		Unchanged: 0/0
 14539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14540 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14542 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14543 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14544 ;;Total ram usage:       12 bytes
 14545 ;; Hardware stack levels used:    1
 14546 ;; Hardware stack levels required when called:    9
 14547 ;; This function calls:
 14548 ;;		_printf
 14549 ;; This function is called by:
 14550 ;;		_execCmd
 14551 ;; This function uses a non-reentrant model
 14552 ;;
 14553                           
 14554                           
 14555                           ;psect for function _setActive
 14556  1591                     _setActive:	
 14557                           
 14558                           ;main.c: 503: if(moveMask & 1UL << probeNum){
 14559                           
 14560                           ;incstack = 0
 14561                           ; Regs used in _setActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14562  1591  0021               	movlb	1	; select bank1
 14563  1592  085F               	movf	_moveMask^(0+128),w
 14564  1593  00B9               	movwf	??_setActive^(0+128)
 14565  1594  0860               	movf	(_moveMask+1)^(0+128),w
 14566  1595  00BA               	movwf	(??_setActive^(0+128)+1)
 14567  1596  0861               	movf	(_moveMask+2)^(0+128),w
 14568  1597  00BB               	movwf	(??_setActive^(0+128)+2)
 14569  1598  0862               	movf	(_moveMask+3)^(0+128),w
 14570  1599  00BC               	movwf	(??_setActive^(0+128)+3)
 14571  159A  3001               	movlw	1
 14572  159B  00BD               	movwf	(??_setActive+4)^(0+128)
 14573  159C  3000               	movlw	0
 14574  159D  00BE               	movwf	((??_setActive+4)^(0+128)+1)
 14575  159E  3000               	movlw	0
 14576  159F  00BF               	movwf	((??_setActive+4)^(0+128)+2)
 14577  15A0  3000               	movlw	0
 14578  15A1  00C0               	movwf	((??_setActive+4)^(0+128)+3)
 14579  15A2  0A35               	incf	setActive@probeNum^(0+128),w
 14580  15A3  2DA8               	goto	u8230
 14581  15A4                     u8235:	
 14582  15A4  35BD               	lslf	(??_setActive+4)^(0+128),f
 14583  15A5  0DBE               	rlf	((??_setActive+4)^(0+128)+1),f
 14584  15A6  0DBF               	rlf	((??_setActive+4)^(0+128)+2),f
 14585  15A7  0DC0               	rlf	((??_setActive+4)^(0+128)+3),f
 14586  15A8                     u8230:	
 14587  15A8  0B89               	decfsz	9,f
 14588  15A9  2DA4               	goto	u8235
 14589  15AA  083D               	movf	(??_setActive+4)^(0+128),w
 14590  15AB  05B9               	andwf	??_setActive^(0+128),f
 14591  15AC  083E               	movf	(??_setActive+5)^(0+128),w
 14592  15AD  05BA               	andwf	(??_setActive^(0+128)+1),f
 14593  15AE  083F               	movf	(??_setActive+6)^(0+128),w
 14594  15AF  05BB               	andwf	(??_setActive^(0+128)+2),f
 14595  15B0  0840               	movf	(??_setActive+7)^(0+128),w
 14596  15B1  05BC               	andwf	(??_setActive^(0+128)+3),f
 14597  15B2  083C               	movf	(??_setActive+3)^(0+128),w
 14598  15B3  043B               	iorwf	(??_setActive+2)^(0+128),w
 14599  15B4  043A               	iorwf	(??_setActive+1)^(0+128),w
 14600  15B5  0439               	iorwf	??_setActive^(0+128),w
 14601  15B6  1903               	skipnz
 14602  15B7  2DFB               	goto	l8177
 14603                           
 14604                           ;main.c: 504: if (onOff)
 14605  15B8  0837               	movf	setActive@onOff^(0+128),w
 14606  15B9  0438               	iorwf	(setActive@onOff+1)^(0+128),w
 14607  15BA  1903               	btfsc	3,2
 14608  15BB  2DD5               	goto	l8169
 14609                           
 14610                           ;main.c: 505: activeMask |= 1UL << probeNum;
 14611  15BC  3001               	movlw	1
 14612  15BD  00B9               	movwf	??_setActive^(0+128)
 14613  15BE  3000               	movlw	0
 14614  15BF  00BA               	movwf	(??_setActive^(0+128)+1)
 14615  15C0  3000               	movlw	0
 14616  15C1  00BB               	movwf	(??_setActive^(0+128)+2)
 14617  15C2  3000               	movlw	0
 14618  15C3  00BC               	movwf	(??_setActive^(0+128)+3)
 14619  15C4  0A35               	incf	setActive@probeNum^(0+128),w
 14620  15C5  2DCA               	goto	u8260
 14621  15C6                     u8265:	
 14622  15C6  35B9               	lslf	??_setActive^(0+128),f
 14623  15C7  0DBA               	rlf	(??_setActive^(0+128)+1),f
 14624  15C8  0DBB               	rlf	(??_setActive^(0+128)+2),f
 14625  15C9  0DBC               	rlf	(??_setActive^(0+128)+3),f
 14626  15CA                     u8260:	
 14627  15CA  0B89               	decfsz	9,f
 14628  15CB  2DC6               	goto	u8265
 14629  15CC  0839               	movf	??_setActive^(0+128),w
 14630  15CD  04E3               	iorwf	_activeMask^(0+128),f
 14631  15CE  083A               	movf	(??_setActive+1)^(0+128),w
 14632  15CF  04E4               	iorwf	(_activeMask+1)^(0+128),f
 14633  15D0  083B               	movf	(??_setActive+2)^(0+128),w
 14634  15D1  04E5               	iorwf	(_activeMask+2)^(0+128),f
 14635  15D2  083C               	movf	(??_setActive+3)^(0+128),w
 14636  15D3  04E6               	iorwf	(_activeMask+3)^(0+128),f
 14637  15D4  2DF1               	goto	l8171
 14638  15D5                     l8169:	
 14639                           
 14640                           ;main.c: 506: else
 14641                           ;main.c: 507: activeMask &= ~(1UL << probeNum);
 14642  15D5  3001               	movlw	1
 14643  15D6  00B9               	movwf	??_setActive^(0+128)
 14644  15D7  3000               	movlw	0
 14645  15D8  00BA               	movwf	(??_setActive^(0+128)+1)
 14646  15D9  3000               	movlw	0
 14647  15DA  00BB               	movwf	(??_setActive^(0+128)+2)
 14648  15DB  3000               	movlw	0
 14649  15DC  00BC               	movwf	(??_setActive^(0+128)+3)
 14650  15DD  0A35               	incf	setActive@probeNum^(0+128),w
 14651  15DE  2DE3               	goto	u8270
 14652  15DF                     u8275:	
 14653  15DF  35B9               	lslf	??_setActive^(0+128),f
 14654  15E0  0DBA               	rlf	(??_setActive^(0+128)+1),f
 14655  15E1  0DBB               	rlf	(??_setActive^(0+128)+2),f
 14656  15E2  0DBC               	rlf	(??_setActive^(0+128)+3),f
 14657  15E3                     u8270:	
 14658  15E3  0B89               	decfsz	9,f
 14659  15E4  2DDF               	goto	u8275
 14660  15E5  09B9               	comf	??_setActive^(0+128),f
 14661  15E6  09BA               	comf	(??_setActive^(0+128)+1),f
 14662  15E7  09BB               	comf	(??_setActive^(0+128)+2),f
 14663  15E8  09BC               	comf	(??_setActive^(0+128)+3),f
 14664  15E9  0839               	movf	??_setActive^(0+128),w
 14665  15EA  05E3               	andwf	_activeMask^(0+128),f
 14666  15EB  083A               	movf	(??_setActive+1)^(0+128),w
 14667  15EC  05E4               	andwf	(_activeMask+1)^(0+128),f
 14668  15ED  083B               	movf	(??_setActive+2)^(0+128),w
 14669  15EE  05E5               	andwf	(_activeMask+2)^(0+128),f
 14670  15EF  083C               	movf	(??_setActive+3)^(0+128),w
 14671  15F0  05E6               	andwf	(_activeMask+3)^(0+128),f
 14672  15F1                     l8171:	
 14673                           
 14674                           ;main.c: 508: printf("A\n");
 14675  15F1  3036               	movlw	low (STR_7| (0+32768))
 14676  15F2  00A0               	movwf	printf@f^(0+128)
 14677  15F3  30AA               	movlw	high (STR_7| (0+32768))
 14678  15F4  00A1               	movwf	(printf@f^(0+128)+1)
 14679  15F5  318E  26CE         	fcall	_printf
 14680                           
 14681                           ;main.c: 509: return 0;
 14682  15F7  0021               	movlb	1	; select bank1
 14683  15F8  01B5               	clrf	?_setActive^(0+128)
 14684  15F9  01B6               	clrf	(?_setActive+1)^(0+128)
 14685  15FA  0008               	return
 14686  15FB                     l8177:	
 14687                           
 14688                           ;main.c: 510: }
 14689                           ;main.c: 511: printf("E\n");
 14690  15FB  3039               	movlw	low (STR_14| (0+32768))
 14691  15FC  00A0               	movwf	printf@f^(0+128)
 14692  15FD  30AA               	movlw	high (STR_14| (0+32768))
 14693  15FE  00A1               	movwf	(printf@f^(0+128)+1)
 14694  15FF  318E  26CE         	fcall	_printf
 14695                           
 14696                           ;main.c: 512: return 1;
 14697  1601  3001               	movlw	1
 14698  1602  0021               	movlb	1	; select bank1
 14699  1603  00B5               	movwf	?_setActive^(0+128)
 14700  1604  3000               	movlw	0
 14701  1605  00B6               	movwf	(?_setActive^(0+128)+1)
 14702  1606  0008               	return
 14703  1607                     __end_of_setActive:	
 14704                           
 14705                           	psect	text43
 14706  18F7                     __ptext43:	
 14707 ;; *************** function _getPosition *****************
 14708 ;; Defined at:
 14709 ;;		line 384 in file "main.c"
 14710 ;; Parameters:    Size  Location     Type
 14711 ;;  a               2   21[BANK1 ] int 
 14712 ;; Auto vars:     Size  Location     Type
 14713 ;;		None
 14714 ;; Return value:  Size  Location     Type
 14715 ;;                  2   21[BANK1 ] int 
 14716 ;; Registers used:
 14717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14718 ;; Tracked objects:
 14719 ;;		On entry : 0/0
 14720 ;;		On exit  : 0/0
 14721 ;;		Unchanged: 0/0
 14722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14723 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14725 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14726 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14727 ;;Total ram usage:        6 bytes
 14728 ;; Hardware stack levels used:    1
 14729 ;; Hardware stack levels required when called:    9
 14730 ;; This function calls:
 14731 ;;		_printf
 14732 ;; This function is called by:
 14733 ;;		_execCmd
 14734 ;; This function uses a non-reentrant model
 14735 ;;
 14736                           
 14737                           
 14738                           ;psect for function _getPosition
 14739  18F7                     _getPosition:	
 14740                           
 14741                           ;main.c: 386: if (a>=0 && a < 24){
 14742                           
 14743                           ;incstack = 0
 14744                           ; Regs used in _getPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14745  18F7  0021               	movlb	1	; select bank1
 14746  18F8  1BB6               	btfsc	(getPosition@a+1)^(0+128),7
 14747  18F9  2930               	goto	l8033
 14748  18FA  0836               	movf	(getPosition@a+1)^(0+128),w
 14749  18FB  3A80               	xorlw	128
 14750  18FC  0020               	movlb	0	; select bank0
 14751  18FD  00C9               	movwf	??_getPosition
 14752  18FE  3080               	movlw	128
 14753  18FF  0249               	subwf	??_getPosition,w
 14754  1900  1D03               	skipz
 14755  1901  2905               	goto	u8155
 14756  1902  3018               	movlw	24
 14757  1903  0021               	movlb	1	; select bank1
 14758  1904  0235               	subwf	getPosition@a^(0+128),w
 14759  1905                     u8155:	
 14760  1905  1803               	skipnc
 14761  1906  2930               	goto	l8033
 14762                           
 14763                           ;main.c: 387: printf("%d\n", currentPositions_steps[a]);
 14764  1907  3028               	movlw	low (STR_12| (0+32768))
 14765  1908  0021               	movlb	1	; select bank1
 14766  1909  00A0               	movwf	printf@f^(0+128)
 14767  190A  30AA               	movlw	high (STR_12| (0+32768))
 14768  190B  00A1               	movwf	(printf@f^(0+128)+1)
 14769  190C  0836               	movf	(getPosition@a+1)^(0+128),w
 14770  190D  0020               	movlb	0	; select bank0
 14771  190E  00CA               	movwf	??_getPosition+1
 14772  190F  0021               	movlb	1	; select bank1
 14773  1910  0835               	movf	getPosition@a^(0+128),w
 14774  1911  0020               	movlb	0	; select bank0
 14775  1912  00C9               	movwf	??_getPosition
 14776  1913  35C9               	lslf	??_getPosition,f
 14777  1914  0DCA               	rlf	??_getPosition+1,f
 14778  1915  35C9               	lslf	??_getPosition,f
 14779  1916  0DCA               	rlf	??_getPosition+1,f
 14780  1917  3090               	movlw	144
 14781  1918  00CB               	movwf	??_getPosition+2
 14782  1919  3027               	movlw	39
 14783  191A  00CC               	movwf	??_getPosition+3
 14784  191B  0849               	movf	??_getPosition,w
 14785  191C  074B               	addwf	??_getPosition+2,w
 14786  191D  0086               	movwf	6
 14787  191E  084A               	movf	??_getPosition+1,w
 14788  191F  3D4C               	addwfc	??_getPosition+3,w
 14789  1920  0087               	movwf	7
 14790  1921  3F40               	moviw [0]fsr1
 14791  1922  0021               	movlb	1	; select bank1
 14792  1923  00A2               	movwf	(?_printf^(0+128)+2)
 14793  1924  3F41               	moviw [1]fsr1
 14794  1925  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14795  1926  3F42               	moviw [2]fsr1
 14796  1927  00A4               	movwf	((?_printf+2)^(0+128)+2)
 14797  1928  3F43               	moviw [3]fsr1
 14798  1929  00A5               	movwf	((?_printf+3)^(0+128)+2)
 14799  192A  318E  26CE         	fcall	_printf
 14800                           
 14801                           ;main.c: 388: return 0;
 14802  192C  0021               	movlb	1	; select bank1
 14803  192D  01B5               	clrf	?_getPosition^(0+128)
 14804  192E  01B6               	clrf	(?_getPosition+1)^(0+128)
 14805  192F  0008               	return
 14806  1930                     l8033:	
 14807                           
 14808                           ;main.c: 389: }
 14809                           ;main.c: 391: return 1;
 14810  1930  3001               	movlw	1
 14811  1931  0021               	movlb	1	; select bank1
 14812  1932  00B5               	movwf	?_getPosition^(0+128)
 14813  1933  3000               	movlw	0
 14814  1934  00B6               	movwf	(?_getPosition^(0+128)+1)
 14815  1935  0008               	return
 14816  1936                     __end_of_getPosition:	
 14817                           
 14818                           	psect	text44
 14819  1B74                     __ptext44:	
 14820 ;; *************** function _getMoveMask *****************
 14821 ;; Defined at:
 14822 ;;		line 540 in file "main.c"
 14823 ;; Parameters:    Size  Location     Type
 14824 ;;		None
 14825 ;; Auto vars:     Size  Location     Type
 14826 ;;  i               2   23[BANK1 ] int 
 14827 ;; Return value:  Size  Location     Type
 14828 ;;                  2   21[BANK1 ] int 
 14829 ;; Registers used:
 14830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14831 ;; Tracked objects:
 14832 ;;		On entry : 0/0
 14833 ;;		On exit  : 0/0
 14834 ;;		Unchanged: 0/0
 14835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14836 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14837 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14838 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14839 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14840 ;;Total ram usage:        8 bytes
 14841 ;; Hardware stack levels used:    1
 14842 ;; Hardware stack levels required when called:    9
 14843 ;; This function calls:
 14844 ;;		_printf
 14845 ;; This function is called by:
 14846 ;;		_execCmd
 14847 ;; This function uses a non-reentrant model
 14848 ;;
 14849                           
 14850                           
 14851                           ;psect for function _getMoveMask
 14852  1B74                     _getMoveMask:	
 14853                           
 14854                           ;main.c: 541: for(int i=24-1; i>=0; i--){
 14855                           
 14856                           ;incstack = 0
 14857                           ; Regs used in _getMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14858  1B74  3017               	movlw	23
 14859  1B75  0021               	movlb	1	; select bank1
 14860  1B76  00B7               	movwf	getMoveMask@i^(0+128)
 14861  1B77  3000               	movlw	0
 14862  1B78  00B8               	movwf	(getMoveMask@i^(0+128)+1)
 14863  1B79  1BB8               	btfsc	(getMoveMask@i+1)^(0+128),7
 14864  1B7A  2BB7               	goto	l8233
 14865  1B7B                     l8227:	
 14866                           
 14867                           ;main.c: 542: printf("%d ", (moveMask >> i) & 1 );
 14868  1B7B  302C               	movlw	low (STR_1| (0+32768))
 14869  1B7C  00A0               	movwf	printf@f^(0+128)
 14870  1B7D  30AA               	movlw	high (STR_1| (0+32768))
 14871  1B7E  00A1               	movwf	(printf@f^(0+128)+1)
 14872  1B7F  085F               	movf	_moveMask^(0+128),w
 14873  1B80  0020               	movlb	0	; select bank0
 14874  1B81  00C9               	movwf	??_getMoveMask
 14875  1B82  0021               	movlb	1	; select bank1
 14876  1B83  0860               	movf	(_moveMask+1)^(0+128),w
 14877  1B84  0020               	movlb	0	; select bank0
 14878  1B85  00CA               	movwf	??_getMoveMask+1
 14879  1B86  0021               	movlb	1	; select bank1
 14880  1B87  0861               	movf	(_moveMask+2)^(0+128),w
 14881  1B88  0020               	movlb	0	; select bank0
 14882  1B89  00CB               	movwf	??_getMoveMask+2
 14883  1B8A  0021               	movlb	1	; select bank1
 14884  1B8B  0862               	movf	(_moveMask+3)^(0+128),w
 14885  1B8C  0020               	movlb	0	; select bank0
 14886  1B8D  00CC               	movwf	??_getMoveMask+3
 14887  1B8E  0021               	movlb	1	; select bank1
 14888  1B8F  0A37               	incf	getMoveMask@i^(0+128),w
 14889  1B90  0020               	movlb	0	; select bank0
 14890  1B91  2B97               	goto	u8360
 14891  1B92                     u8365:	
 14892  1B92  1003               	clrc
 14893  1B93  0CCC               	rrf	??_getMoveMask+3,f
 14894  1B94  0CCB               	rrf	??_getMoveMask+2,f
 14895  1B95  0CCA               	rrf	??_getMoveMask+1,f
 14896  1B96  0CC9               	rrf	??_getMoveMask,f
 14897  1B97                     u8360:	
 14898  1B97  3EFF               	addlw	-1
 14899  1B98  1D03               	skipz
 14900  1B99  2B92               	goto	u8365
 14901  1B9A  3001               	movlw	1
 14902  1B9B  0549               	andwf	??_getMoveMask,w
 14903  1B9C  0021               	movlb	1	; select bank1
 14904  1B9D  00A2               	movwf	(?_printf^(0+128)+2)
 14905  1B9E  3000               	movlw	0
 14906  1B9F  0020               	movlb	0	; select bank0
 14907  1BA0  054A               	andwf	??_getMoveMask+1,w
 14908  1BA1  0021               	movlb	1	; select bank1
 14909  1BA2  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14910  1BA3  3000               	movlw	0
 14911  1BA4  0020               	movlb	0	; select bank0
 14912  1BA5  054B               	andwf	??_getMoveMask+2,w
 14913  1BA6  0021               	movlb	1	; select bank1
 14914  1BA7  00A4               	movwf	((?_printf+2)^(0+128)+2)
 14915  1BA8  3000               	movlw	0
 14916  1BA9  0020               	movlb	0	; select bank0
 14917  1BAA  054C               	andwf	??_getMoveMask+3,w
 14918  1BAB  0021               	movlb	1	; select bank1
 14919  1BAC  00A5               	movwf	((?_printf+3)^(0+128)+2)
 14920  1BAD  318E  26CE  319B   	fcall	_printf
 14921  1BB0  30FF               	movlw	255
 14922  1BB1  0021               	movlb	1	; select bank1
 14923  1BB2  07B7               	addwf	getMoveMask@i^(0+128),f
 14924  1BB3  30FF               	movlw	255
 14925  1BB4  3DB8               	addwfc	(getMoveMask@i+1)^(0+128),f
 14926  1BB5  1FB8               	btfss	(getMoveMask@i+1)^(0+128),7
 14927  1BB6  2B7B               	goto	l8227
 14928  1BB7                     l8233:	
 14929                           
 14930                           ;main.c: 543: }
 14931                           ;main.c: 544: printf("\n");
 14932  1BB7  3063               	movlw	low ((STR_34+28)| (0+32768))
 14933  1BB8  00A0               	movwf	printf@f^(0+128)
 14934  1BB9  30A8               	movlw	high ((STR_34+28)| (0+32768))
 14935  1BBA  00A1               	movwf	(printf@f^(0+128)+1)
 14936  1BBB  318E  26CE         	fcall	_printf
 14937                           
 14938                           ;main.c: 545: return 0;
 14939  1BBD  0021               	movlb	1	; select bank1
 14940  1BBE  01B5               	clrf	?_getMoveMask^(0+128)
 14941  1BBF  01B6               	clrf	(?_getMoveMask+1)^(0+128)
 14942  1BC0  0008               	return
 14943  1BC1                     __end_of_getMoveMask:	
 14944                           
 14945                           	psect	text45
 14946  259A                     __ptext45:	
 14947 ;; *************** function _getMotionStatus *****************
 14948 ;; Defined at:
 14949 ;;		line 547 in file "main.c"
 14950 ;; Parameters:    Size  Location     Type
 14951 ;;		None
 14952 ;; Auto vars:     Size  Location     Type
 14953 ;;		None
 14954 ;; Return value:  Size  Location     Type
 14955 ;;                  2   21[BANK1 ] int 
 14956 ;; Registers used:
 14957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14958 ;; Tracked objects:
 14959 ;;		On entry : 0/0
 14960 ;;		On exit  : 0/0
 14961 ;;		Unchanged: 0/0
 14962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14963 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14966 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14967 ;;Total ram usage:        2 bytes
 14968 ;; Hardware stack levels used:    1
 14969 ;; Hardware stack levels required when called:    9
 14970 ;; This function calls:
 14971 ;;		_printf
 14972 ;; This function is called by:
 14973 ;;		_execCmd
 14974 ;; This function uses a non-reentrant model
 14975 ;;
 14976                           
 14977                           
 14978                           ;psect for function _getMotionStatus
 14979  259A                     _getMotionStatus:	
 14980                           
 14981                           ;main.c: 548: switch(motionType){
 14982                           
 14983                           ;incstack = 0
 14984                           ; Regs used in _getMotionStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14985  259A  2DB3               	goto	l8249
 14986  259B                     l8241:	
 14987                           ;main.c: 549: case REL_MOVE: printf("R"); break;
 14988                           
 14989  259B  3042               	movlw	low (STR_31| (0+32768))
 14990  259C  0021               	movlb	1	; select bank1
 14991  259D  00A0               	movwf	printf@f^(0+128)
 14992  259E  30AA               	movlw	high (STR_31| (0+32768))
 14993  259F  00A1               	movwf	(printf@f^(0+128)+1)
 14994  25A0  318E  26CE         	fcall	_printf
 14995  25A2  0008               	return
 14996  25A3                     l8243:	
 14997                           ;main.c: 550: case ABS_MOVE: printf("A"); break;
 14998                           
 14999  25A3  3001               	movlw	low ((STR_72+3)| (0+32768))
 15000  25A4  0021               	movlb	1	; select bank1
 15001  25A5  00A0               	movwf	printf@f^(0+128)
 15002  25A6  30AA               	movlw	high ((STR_72+3)| (0+32768))
 15003  25A7  00A1               	movwf	(printf@f^(0+128)+1)
 15004  25A8  318E  26CE         	fcall	_printf
 15005  25AA  0008               	return
 15006  25AB                     l8245:	
 15007                           ;main.c: 551: default: printf("N"); break;
 15008                           
 15009  25AB  3040               	movlw	low (STR_33| (0+32768))
 15010  25AC  0021               	movlb	1	; select bank1
 15011  25AD  00A0               	movwf	printf@f^(0+128)
 15012  25AE  30AA               	movlw	high (STR_33| (0+32768))
 15013  25AF  00A1               	movwf	(printf@f^(0+128)+1)
 15014  25B0  318E  26CE         	fcall	_printf
 15015                           
 15016                           ;main.c: 552: }
 15017  25B2  0008               	return
 15018  25B3                     l8249:	
 15019  25B3  0020               	movlb	0	; select bank0
 15020  25B4  0855               	movf	_motionType,w
 15021                           
 15022                           ; Switch size 1, requested type "space"
 15023                           ; Number of cases is 2, Range of values is 1 to 2
 15024                           ; switch strategies available:
 15025                           ; Name         Instructions Cycles
 15026                           ; simple_byte            7     4 (average)
 15027                           ; direct_byte           13     9 (fixed)
 15028                           ; jumptable            263     9 (fixed)
 15029                           ;	Chosen strategy is simple_byte
 15030  25B5  3A01               	xorlw	1	; case 1
 15031  25B6  1903               	skipnz
 15032  25B7  2D9B               	goto	l8241
 15033  25B8  3A03               	xorlw	3	; case 2
 15034  25B9  1903               	skipnz
 15035  25BA  2DA3               	goto	l8243
 15036  25BB  2DAB               	goto	l8245
 15037  25BC  0008               	return
 15038  25BD                     __end_of_getMotionStatus:	
 15039                           
 15040                           	psect	text46
 15041  1B27                     __ptext46:	
 15042 ;; *************** function _getActive *****************
 15043 ;; Defined at:
 15044 ;;		line 532 in file "main.c"
 15045 ;; Parameters:    Size  Location     Type
 15046 ;;		None
 15047 ;; Auto vars:     Size  Location     Type
 15048 ;;  i               2   23[BANK1 ] int 
 15049 ;; Return value:  Size  Location     Type
 15050 ;;                  2   21[BANK1 ] int 
 15051 ;; Registers used:
 15052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15053 ;; Tracked objects:
 15054 ;;		On entry : 0/0
 15055 ;;		On exit  : 0/0
 15056 ;;		Unchanged: 0/0
 15057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15058 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15059 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15060 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15061 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15062 ;;Total ram usage:        8 bytes
 15063 ;; Hardware stack levels used:    1
 15064 ;; Hardware stack levels required when called:    9
 15065 ;; This function calls:
 15066 ;;		_printf
 15067 ;; This function is called by:
 15068 ;;		_execCmd
 15069 ;; This function uses a non-reentrant model
 15070 ;;
 15071                           
 15072                           
 15073                           ;psect for function _getActive
 15074  1B27                     _getActive:	
 15075                           
 15076                           ;main.c: 533: for(int i=24-1; i>=0; i--){
 15077                           
 15078                           ;incstack = 0
 15079                           ; Regs used in _getActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15080  1B27  3017               	movlw	23
 15081  1B28  0021               	movlb	1	; select bank1
 15082  1B29  00B7               	movwf	getActive@i^(0+128)
 15083  1B2A  3000               	movlw	0
 15084  1B2B  00B8               	movwf	(getActive@i^(0+128)+1)
 15085  1B2C  1BB8               	btfsc	(getActive@i+1)^(0+128),7
 15086  1B2D  2B6A               	goto	l8215
 15087  1B2E                     l8209:	
 15088                           
 15089                           ;main.c: 534: printf("%d ", (activeMask >> i) & 1 );
 15090  1B2E  302C               	movlw	low (STR_1| (0+32768))
 15091  1B2F  00A0               	movwf	printf@f^(0+128)
 15092  1B30  30AA               	movlw	high (STR_1| (0+32768))
 15093  1B31  00A1               	movwf	(printf@f^(0+128)+1)
 15094  1B32  0863               	movf	_activeMask^(0+128),w
 15095  1B33  0020               	movlb	0	; select bank0
 15096  1B34  00C9               	movwf	??_getActive
 15097  1B35  0021               	movlb	1	; select bank1
 15098  1B36  0864               	movf	(_activeMask+1)^(0+128),w
 15099  1B37  0020               	movlb	0	; select bank0
 15100  1B38  00CA               	movwf	??_getActive+1
 15101  1B39  0021               	movlb	1	; select bank1
 15102  1B3A  0865               	movf	(_activeMask+2)^(0+128),w
 15103  1B3B  0020               	movlb	0	; select bank0
 15104  1B3C  00CB               	movwf	??_getActive+2
 15105  1B3D  0021               	movlb	1	; select bank1
 15106  1B3E  0866               	movf	(_activeMask+3)^(0+128),w
 15107  1B3F  0020               	movlb	0	; select bank0
 15108  1B40  00CC               	movwf	??_getActive+3
 15109  1B41  0021               	movlb	1	; select bank1
 15110  1B42  0A37               	incf	getActive@i^(0+128),w
 15111  1B43  0020               	movlb	0	; select bank0
 15112  1B44  2B4A               	goto	u8330
 15113  1B45                     u8335:	
 15114  1B45  1003               	clrc
 15115  1B46  0CCC               	rrf	??_getActive+3,f
 15116  1B47  0CCB               	rrf	??_getActive+2,f
 15117  1B48  0CCA               	rrf	??_getActive+1,f
 15118  1B49  0CC9               	rrf	??_getActive,f
 15119  1B4A                     u8330:	
 15120  1B4A  3EFF               	addlw	-1
 15121  1B4B  1D03               	skipz
 15122  1B4C  2B45               	goto	u8335
 15123  1B4D  3001               	movlw	1
 15124  1B4E  0549               	andwf	??_getActive,w
 15125  1B4F  0021               	movlb	1	; select bank1
 15126  1B50  00A2               	movwf	(?_printf^(0+128)+2)
 15127  1B51  3000               	movlw	0
 15128  1B52  0020               	movlb	0	; select bank0
 15129  1B53  054A               	andwf	??_getActive+1,w
 15130  1B54  0021               	movlb	1	; select bank1
 15131  1B55  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15132  1B56  3000               	movlw	0
 15133  1B57  0020               	movlb	0	; select bank0
 15134  1B58  054B               	andwf	??_getActive+2,w
 15135  1B59  0021               	movlb	1	; select bank1
 15136  1B5A  00A4               	movwf	((?_printf+2)^(0+128)+2)
 15137  1B5B  3000               	movlw	0
 15138  1B5C  0020               	movlb	0	; select bank0
 15139  1B5D  054C               	andwf	??_getActive+3,w
 15140  1B5E  0021               	movlb	1	; select bank1
 15141  1B5F  00A5               	movwf	((?_printf+3)^(0+128)+2)
 15142  1B60  318E  26CE  319B   	fcall	_printf
 15143  1B63  30FF               	movlw	255
 15144  1B64  0021               	movlb	1	; select bank1
 15145  1B65  07B7               	addwf	getActive@i^(0+128),f
 15146  1B66  30FF               	movlw	255
 15147  1B67  3DB8               	addwfc	(getActive@i+1)^(0+128),f
 15148  1B68  1FB8               	btfss	(getActive@i+1)^(0+128),7
 15149  1B69  2B2E               	goto	l8209
 15150  1B6A                     l8215:	
 15151                           
 15152                           ;main.c: 535: }
 15153                           ;main.c: 536: printf("\n");
 15154  1B6A  3063               	movlw	low ((STR_34+28)| (0+32768))
 15155  1B6B  00A0               	movwf	printf@f^(0+128)
 15156  1B6C  30A8               	movlw	high ((STR_34+28)| (0+32768))
 15157  1B6D  00A1               	movwf	(printf@f^(0+128)+1)
 15158  1B6E  318E  26CE         	fcall	_printf
 15159                           
 15160                           ;main.c: 537: return 0;
 15161  1B70  0021               	movlb	1	; select bank1
 15162  1B71  01B5               	clrf	?_getActive^(0+128)
 15163  1B72  01B6               	clrf	(?_getActive+1)^(0+128)
 15164  1B73  0008               	return
 15165  1B74                     __end_of_getActive:	
 15166                           
 15167                           	psect	text47
 15168  0A3A                     __ptext47:	
 15169 ;; *************** function _commCheck *****************
 15170 ;; Defined at:
 15171 ;;		line 555 in file "main.c"
 15172 ;; Parameters:    Size  Location     Type
 15173 ;;		None
 15174 ;; Auto vars:     Size  Location     Type
 15175 ;;		None
 15176 ;; Return value:  Size  Location     Type
 15177 ;;                  2   50[BANK1 ] int 
 15178 ;; Registers used:
 15179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15180 ;; Tracked objects:
 15181 ;;		On entry : 0/0
 15182 ;;		On exit  : 0/0
 15183 ;;		Unchanged: 0/0
 15184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15185 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15187 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15188 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15189 ;;Total ram usage:        3 bytes
 15190 ;; Hardware stack levels used:    1
 15191 ;; Hardware stack levels required when called:   13
 15192 ;; This function calls:
 15193 ;;		_LED_testComm
 15194 ;;		_LED_test_openshort
 15195 ;;		_drv_read
 15196 ;;		_printf
 15197 ;; This function is called by:
 15198 ;;		_execCmd
 15199 ;; This function uses a non-reentrant model
 15200 ;;
 15201                           
 15202                           
 15203                           ;psect for function _commCheck
 15204  0A3A                     _commCheck:	
 15205                           
 15206                           ;main.c: 556: printf("\n----starting comm test----\n\n");
 15207                           
 15208                           ;incstack = 0
 15209                           ; Regs used in _commCheck: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15210  0A3A  3047               	movlw	low (STR_34| (0+32768))
 15211  0A3B  0021               	movlb	1	; select bank1
 15212  0A3C  00A0               	movwf	printf@f^(0+128)
 15213  0A3D  30A8               	movlw	high (STR_34| (0+32768))
 15214  0A3E  00A1               	movwf	(printf@f^(0+128)+1)
 15215  0A3F  318E  26CE  318A   	fcall	_printf
 15216                           
 15217                           ;main.c: 559: printf("testing top LED driver...");
 15218  0A42  3081               	movlw	low (STR_35| (0+32768))
 15219  0A43  0021               	movlb	1	; select bank1
 15220  0A44  00A0               	movwf	printf@f^(0+128)
 15221  0A45  30A8               	movlw	high (STR_35| (0+32768))
 15222  0A46  00A1               	movwf	(printf@f^(0+128)+1)
 15223  0A47  318E  26CE  318A   	fcall	_printf
 15224                           
 15225                           ;main.c: 560: if (!LED_testComm(1))
 15226  0A4A  3001               	movlw	1
 15227  0A4B  0021               	movlb	1	; select bank1
 15228  0A4C  00CA               	movwf	LED_testComm@topOrBottom^(0+128)
 15229  0A4D  3000               	movlw	0
 15230  0A4E  00CB               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 15231  0A4F  3196  2607  318A   	fcall	_LED_testComm
 15232  0A52  0021               	movlb	1	; select bank1
 15233  0A53  084A               	movf	?_LED_testComm^(0+128),w
 15234  0A54  044B               	iorwf	(?_LED_testComm+1)^(0+128),w
 15235  0A55  1D03               	btfss	3,2
 15236  0A56  2A5B               	goto	l8255
 15237                           
 15238                           ;main.c: 561: printf("passed\n");
 15239  0A57  30E0               	movlw	low (STR_36| (0+32768))
 15240  0A58  00A0               	movwf	printf@f^(0+128)
 15241  0A59  30A9               	movlw	high (STR_36| (0+32768))
 15242  0A5A  2A5F               	goto	L26
 15243  0A5B                     l8255:	
 15244                           
 15245                           ;main.c: 562: else
 15246                           ;main.c: 563: printf("FAILED\n");
 15247  0A5B  30D8               	movlw	low (STR_37| (0+32768))
 15248  0A5C  0021               	movlb	1	; select bank1
 15249  0A5D  00A0               	movwf	printf@f^(0+128)
 15250  0A5E  30A9               	movlw	high (STR_37| (0+32768))
 15251  0A5F                     L26:	
 15252  0A5F  00A1               	movwf	(printf@f^(0+128)+1)
 15253  0A60  318E  26CE  318A   	fcall	_printf
 15254                           
 15255                           ;main.c: 565: printf("opens: ");
 15256  0A63  30E8               	movlw	low (STR_38| (0+32768))
 15257  0A64  0021               	movlb	1	; select bank1
 15258  0A65  00A0               	movwf	printf@f^(0+128)
 15259  0A66  30A9               	movlw	high (STR_38| (0+32768))
 15260  0A67  00A1               	movwf	(printf@f^(0+128)+1)
 15261  0A68  318E  26CE  318A   	fcall	_printf
 15262                           
 15263                           ;main.c: 566: LED_test_openshort(10, 1);
 15264  0A6B  300A               	movlw	10
 15265  0A6C  0021               	movlb	1	; select bank1
 15266  0A6D  00B5               	movwf	LED_test_openshort@type^(0+128)
 15267  0A6E  3000               	movlw	0
 15268  0A6F  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15269  0A70  3001               	movlw	1
 15270  0A71  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15271  0A72  3000               	movlw	0
 15272  0A73  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15273  0A74  3196  2680  318A   	fcall	_LED_test_openshort
 15274                           
 15275                           ;main.c: 567: printf("\n\nshorts: ");
 15276  0A77  309B               	movlw	low (STR_39| (0+32768))
 15277  0A78  0021               	movlb	1	; select bank1
 15278  0A79  00A0               	movwf	printf@f^(0+128)
 15279  0A7A  30A9               	movlw	high (STR_39| (0+32768))
 15280  0A7B  00A1               	movwf	(printf@f^(0+128)+1)
 15281  0A7C  318E  26CE  318A   	fcall	_printf
 15282                           
 15283                           ;main.c: 568: LED_test_openshort(11, 1);
 15284  0A7F  300B               	movlw	11
 15285  0A80  0021               	movlb	1	; select bank1
 15286  0A81  00B5               	movwf	LED_test_openshort@type^(0+128)
 15287  0A82  3000               	movlw	0
 15288  0A83  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15289  0A84  3001               	movlw	1
 15290  0A85  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15291  0A86  3000               	movlw	0
 15292  0A87  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15293  0A88  3196  2680  318A   	fcall	_LED_test_openshort
 15294                           
 15295                           ;main.c: 571: printf("\ntesting bottom LED driver...\n");
 15296  0A8B  3028               	movlw	low (STR_40| (0+32768))
 15297  0A8C  0021               	movlb	1	; select bank1
 15298  0A8D  00A0               	movwf	printf@f^(0+128)
 15299  0A8E  30A8               	movlw	high (STR_40| (0+32768))
 15300  0A8F  00A1               	movwf	(printf@f^(0+128)+1)
 15301  0A90  318E  26CE  318A   	fcall	_printf
 15302                           
 15303                           ;main.c: 572: if (!LED_testComm(2))
 15304  0A93  3002               	movlw	2
 15305  0A94  0021               	movlb	1	; select bank1
 15306  0A95  00CA               	movwf	LED_testComm@topOrBottom^(0+128)
 15307  0A96  3000               	movlw	0
 15308  0A97  00CB               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 15309  0A98  3196  2607  318A   	fcall	_LED_testComm
 15310  0A9B  0021               	movlb	1	; select bank1
 15311  0A9C  084A               	movf	?_LED_testComm^(0+128),w
 15312  0A9D  044B               	iorwf	(?_LED_testComm+1)^(0+128),w
 15313  0A9E  1D03               	btfss	3,2
 15314  0A9F  2AA4               	goto	l8259
 15315                           
 15316                           ;main.c: 573: printf("passed\n");
 15317  0AA0  30E0               	movlw	low (STR_36| (0+32768))
 15318  0AA1  00A0               	movwf	printf@f^(0+128)
 15319  0AA2  30A9               	movlw	high (STR_36| (0+32768))
 15320  0AA3  2AA8               	goto	L27
 15321  0AA4                     l8259:	
 15322                           
 15323                           ;main.c: 574: else
 15324                           ;main.c: 575: printf("FAILED\n");
 15325  0AA4  30D8               	movlw	low (STR_37| (0+32768))
 15326  0AA5  0021               	movlb	1	; select bank1
 15327  0AA6  00A0               	movwf	printf@f^(0+128)
 15328  0AA7  30A9               	movlw	high (STR_37| (0+32768))
 15329  0AA8                     L27:	
 15330  0AA8  00A1               	movwf	(printf@f^(0+128)+1)
 15331  0AA9  318E  26CE  318A   	fcall	_printf
 15332                           
 15333                           ;main.c: 577: printf("opens: ");
 15334  0AAC  30E8               	movlw	low (STR_38| (0+32768))
 15335  0AAD  0021               	movlb	1	; select bank1
 15336  0AAE  00A0               	movwf	printf@f^(0+128)
 15337  0AAF  30A9               	movlw	high (STR_38| (0+32768))
 15338  0AB0  00A1               	movwf	(printf@f^(0+128)+1)
 15339  0AB1  318E  26CE  318A   	fcall	_printf
 15340                           
 15341                           ;main.c: 578: LED_test_openshort(10, 2);
 15342  0AB4  300A               	movlw	10
 15343  0AB5  0021               	movlb	1	; select bank1
 15344  0AB6  00B5               	movwf	LED_test_openshort@type^(0+128)
 15345  0AB7  3000               	movlw	0
 15346  0AB8  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15347  0AB9  3002               	movlw	2
 15348  0ABA  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15349  0ABB  3000               	movlw	0
 15350  0ABC  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15351  0ABD  3196  2680  318A   	fcall	_LED_test_openshort
 15352                           
 15353                           ;main.c: 579: printf("\n\nshorts: ");
 15354  0AC0  309B               	movlw	low (STR_39| (0+32768))
 15355  0AC1  0021               	movlb	1	; select bank1
 15356  0AC2  00A0               	movwf	printf@f^(0+128)
 15357  0AC3  30A9               	movlw	high (STR_39| (0+32768))
 15358  0AC4  00A1               	movwf	(printf@f^(0+128)+1)
 15359  0AC5  318E  26CE  318A   	fcall	_printf
 15360                           
 15361                           ;main.c: 580: LED_test_openshort(11, 2);
 15362  0AC8  300B               	movlw	11
 15363  0AC9  0021               	movlb	1	; select bank1
 15364  0ACA  00B5               	movwf	LED_test_openshort@type^(0+128)
 15365  0ACB  3000               	movlw	0
 15366  0ACC  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15367  0ACD  3002               	movlw	2
 15368  0ACE  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15369  0ACF  3000               	movlw	0
 15370  0AD0  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15371  0AD1  3196  2680  318A   	fcall	_LED_test_openshort
 15372                           
 15373                           ;main.c: 582: printf("\ntesting piezo driver...");
 15374  0AD4  309B               	movlw	low (STR_45| (0+32768))
 15375  0AD5  0021               	movlb	1	; select bank1
 15376  0AD6  00A0               	movwf	printf@f^(0+128)
 15377  0AD7  30A8               	movlw	high (STR_45| (0+32768))
 15378  0AD8  00A1               	movwf	(printf@f^(0+128)+1)
 15379  0AD9  318E  26CE  318A   	fcall	_printf
 15380                           
 15381                           ;main.c: 583: if(drv_read(0x01) > 0)
 15382  0ADC  3001               	movlw	1
 15383  0ADD  319A  2200  318A   	fcall	_drv_read
 15384  0AE0  0021               	movlb	1	; select bank1
 15385  0AE1  0836               	movf	(?_drv_read+1)^(0+128),w
 15386  0AE2  3A80               	xorlw	128
 15387  0AE3  00D4               	movwf	??_commCheck^(0+128)
 15388  0AE4  3080               	movlw	128
 15389  0AE5  0254               	subwf	??_commCheck^(0+128),w
 15390  0AE6  1D03               	skipz
 15391  0AE7  2AEA               	goto	u8405
 15392  0AE8  3001               	movlw	1
 15393  0AE9  0235               	subwf	?_drv_read^(0+128),w
 15394  0AEA                     u8405:	
 15395  0AEA  1C03               	skipc
 15396  0AEB  2AF1               	goto	l8263
 15397                           
 15398                           ;main.c: 584: printf("passed\n\n");
 15399  0AEC  30AF               	movlw	low (STR_46| (0+32768))
 15400  0AED  0021               	movlb	1	; select bank1
 15401  0AEE  00A0               	movwf	printf@f^(0+128)
 15402  0AEF  30A9               	movlw	high (STR_46| (0+32768))
 15403  0AF0  2AF5               	goto	L28
 15404  0AF1                     l8263:	
 15405                           
 15406                           ;main.c: 585: else
 15407                           ;main.c: 586: printf("FAILED\n\n");
 15408  0AF1  30A6               	movlw	low (STR_47| (0+32768))
 15409  0AF2  0021               	movlb	1	; select bank1
 15410  0AF3  00A0               	movwf	printf@f^(0+128)
 15411  0AF4  30A9               	movlw	high (STR_47| (0+32768))
 15412  0AF5                     L28:	
 15413  0AF5  00A1               	movwf	(printf@f^(0+128)+1)
 15414  0AF6  318E  26CE  318A   	fcall	_printf
 15415                           
 15416                           ;main.c: 587: printf("----finished comm test----\n");
 15417  0AF9  3065               	movlw	low (STR_48| (0+32768))
 15418  0AFA  0021               	movlb	1	; select bank1
 15419  0AFB  00A0               	movwf	printf@f^(0+128)
 15420  0AFC  30A8               	movlw	high (STR_48| (0+32768))
 15421  0AFD  00A1               	movwf	(printf@f^(0+128)+1)
 15422  0AFE  318E  26CE         	fcall	_printf
 15423  0B00  0008               	return
 15424  0B01                     __end_of_commCheck:	
 15425                           
 15426                           	psect	text48
 15427  1680                     __ptext48:	
 15428 ;; *************** function _LED_test_openshort *****************
 15429 ;; Defined at:
 15430 ;;		line 95 in file "LEDcomm.c"
 15431 ;; Parameters:    Size  Location     Type
 15432 ;;  type            2   21[BANK1 ] int 
 15433 ;;  topOrBottom     2   23[BANK1 ] int 
 15434 ;; Auto vars:     Size  Location     Type
 15435 ;;  j               2   26[BANK1 ] int 
 15436 ;; Return value:  Size  Location     Type
 15437 ;;                  1    wreg      void 
 15438 ;; Registers used:
 15439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15440 ;; Tracked objects:
 15441 ;;		On entry : 0/0
 15442 ;;		On exit  : 0/0
 15443 ;;		Unchanged: 0/0
 15444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15445 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15446 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15447 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15448 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15449 ;;Total ram usage:        7 bytes
 15450 ;; Hardware stack levels used:    1
 15451 ;; Hardware stack levels required when called:    9
 15452 ;; This function calls:
 15453 ;;		_LEDsOn
 15454 ;;		_printf
 15455 ;;		_send_2length_2bytes_IK
 15456 ;; This function is called by:
 15457 ;;		_commCheck
 15458 ;; This function uses a non-reentrant model
 15459 ;;
 15460                           
 15461                           
 15462                           ;psect for function _LED_test_openshort
 15463  1680                     _LED_test_openshort:	
 15464                           
 15465                           ;incstack = 0
 15466                           ; Regs used in _LED_test_openshort: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15467                           ;LEDcomm.c: 97: do { LATCbits.LATC1 = 1; } while(0);
 15468  1680  0022               	movlb	2	; select bank2
 15469  1681  148E               	bsf	14,1	;volatile
 15470                           
 15471                           ;LEDcomm.c: 98: LEDsOn(0xFFFFFFFF, topOrBottom);
 15472  1682  30FF               	movlw	255
 15473  1683  0020               	movlb	0	; select bank0
 15474  1684  00C7               	movwf	LEDsOn@LEDpins+3
 15475  1685  30FF               	movlw	255
 15476  1686  00C6               	movwf	LEDsOn@LEDpins+2
 15477  1687  30FF               	movlw	255
 15478  1688  00C5               	movwf	LEDsOn@LEDpins+1
 15479  1689  30FF               	movlw	255
 15480  168A  00C4               	movwf	LEDsOn@LEDpins
 15481  168B  0021               	movlb	1	; select bank1
 15482  168C  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15483  168D  0020               	movlb	0	; select bank0
 15484  168E  00C9               	movwf	LEDsOn@topOrBottom+1
 15485  168F  0021               	movlb	1	; select bank1
 15486  1690  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15487  1691  0020               	movlb	0	; select bank0
 15488  1692  00C8               	movwf	LEDsOn@topOrBottom
 15489  1693  31A5  2557  3196   	fcall	_LEDsOn
 15490                           
 15491                           ;LEDcomm.c: 99: send_2length_2bytes_IK(0,0,type,topOrBottom);
 15492  1696  3000               	movlw	0
 15493  1697  0020               	movlb	0	; select bank0
 15494  1698  00BC               	movwf	send_2length_2bytes_IK@data1
 15495  1699  00BD               	movwf	send_2length_2bytes_IK@data1+1
 15496  169A  3000               	movlw	0
 15497  169B  00BE               	movwf	send_2length_2bytes_IK@data2
 15498  169C  00BF               	movwf	send_2length_2bytes_IK@data2+1
 15499  169D  0021               	movlb	1	; select bank1
 15500  169E  0835               	movf	LED_test_openshort@type^(0+128),w
 15501  169F  00B9               	movwf	??_LED_test_openshort^(0+128)
 15502  16A0  0839               	movf	??_LED_test_openshort^(0+128),w
 15503  16A1  0020               	movlb	0	; select bank0
 15504  16A2  00C0               	movwf	send_2length_2bytes_IK@latch_start
 15505  16A3  0021               	movlb	1	; select bank1
 15506  16A4  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15507  16A5  0020               	movlb	0	; select bank0
 15508  16A6  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 15509  16A7  0021               	movlb	1	; select bank1
 15510  16A8  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15511  16A9  0020               	movlb	0	; select bank0
 15512  16AA  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 15513  16AB  31A3  23DA  3196   	fcall	_send_2length_2bytes_IK
 15514                           
 15515                           ;LEDcomm.c: 101: do { LATCbits.LATC1 = 0; } while(0);
 15516  16AE  0022               	movlb	2	; select bank2
 15517  16AF  108E               	bcf	14,1	;volatile
 15518                           
 15519                           ;LEDcomm.c: 103: for(int j = 23; j>=0; j--){
 15520  16B0  3017               	movlw	23
 15521  16B1  0021               	movlb	1	; select bank1
 15522  16B2  00BA               	movwf	LED_test_openshort@j^(0+128)
 15523  16B3  3000               	movlw	0
 15524  16B4  00BB               	movwf	(LED_test_openshort@j^(0+128)+1)
 15525  16B5  1BBB               	btfsc	(LED_test_openshort@j+1)^(0+128),7
 15526  16B6  2EF5               	goto	l7663
 15527  16B7                     l279:	
 15528                           ;LEDcomm.c: 104: do { LATAbits.LATA2 = 1; } while(0);
 15529                           
 15530  16B7  0022               	movlb	2	; select bank2
 15531  16B8  150C               	bsf	12,2	;volatile
 15532                           
 15533                           ;LEDcomm.c: 105: _delay((unsigned long)((10)*(1000000/4000000.0)));
 15534  16B9  3200               	nop2	;2 cycle nop
 15535                           
 15536                           ;LEDcomm.c: 106: do { LATAbits.LATA2 = 0; } while(0);
 15537  16BA  0022               	movlb	2	; select bank2
 15538  16BB  110C               	bcf	12,2	;volatile
 15539                           
 15540                           ;LEDcomm.c: 107: if (topOrBottom == 1)
 15541  16BC  0021               	movlb	1	; select bank1
 15542  16BD  0337               	decf	LED_test_openshort@topOrBottom^(0+128),w
 15543  16BE  0438               	iorwf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15544  16BF  1D03               	btfss	3,2
 15545  16C0  2ED2               	goto	l7655
 15546                           
 15547                           ;LEDcomm.c: 108: if (PORTCbits.RC6){ printf("%d ", j);}
 15548  16C1  0020               	movlb	0	; select bank0
 15549  16C2  1B0E               	btfsc	14,6	;volatile
 15550  16C3  2EC6               	goto	l7653
 15551                           
 15552                           ;LEDcomm.c: 109: else
 15553                           ;LEDcomm.c: 110: if (PORTCbits.RC3){ printf("%d ", j);}
 15554  16C4  1D8E               	btfss	14,3	;volatile
 15555  16C5  2ED2               	goto	l7655
 15556  16C6                     l7653:	
 15557  16C6  302C               	movlw	low (STR_1| (0+32768))
 15558  16C7  0021               	movlb	1	; select bank1
 15559  16C8  00A0               	movwf	printf@f^(0+128)
 15560  16C9  30AA               	movlw	high (STR_1| (0+32768))
 15561  16CA  00A1               	movwf	(printf@f^(0+128)+1)
 15562  16CB  083B               	movf	(LED_test_openshort@j+1)^(0+128),w
 15563  16CC  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15564  16CD  083A               	movf	LED_test_openshort@j^(0+128),w
 15565  16CE  00A2               	movwf	(?_printf^(0+128)+2)
 15566  16CF  318E  26CE  3196   	fcall	_printf
 15567  16D2                     l7655:	
 15568                           
 15569                           ;LEDcomm.c: 113: if (j == 23) {do { LATCbits.LATC1 = 1; } while(0); LEDsOn(0, topOrBotto
      +                          m); }
 15570  16D2  3017               	movlw	23
 15571  16D3  0021               	movlb	1	; select bank1
 15572  16D4  063A               	xorwf	LED_test_openshort@j^(0+128),w
 15573  16D5  043B               	iorwf	(LED_test_openshort@j+1)^(0+128),w
 15574  16D6  1D03               	btfss	3,2
 15575  16D7  2EEE               	goto	l7659
 15576  16D8  0022               	movlb	2	; select bank2
 15577  16D9  148E               	bsf	14,1	;volatile
 15578  16DA  3000               	movlw	0
 15579  16DB  0020               	movlb	0	; select bank0
 15580  16DC  00C7               	movwf	LEDsOn@LEDpins+3
 15581  16DD  3000               	movlw	0
 15582  16DE  00C6               	movwf	LEDsOn@LEDpins+2
 15583  16DF  3000               	movlw	0
 15584  16E0  00C5               	movwf	LEDsOn@LEDpins+1
 15585  16E1  3000               	movlw	0
 15586  16E2  00C4               	movwf	LEDsOn@LEDpins
 15587  16E3  0021               	movlb	1	; select bank1
 15588  16E4  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15589  16E5  0020               	movlb	0	; select bank0
 15590  16E6  00C9               	movwf	LEDsOn@topOrBottom+1
 15591  16E7  0021               	movlb	1	; select bank1
 15592  16E8  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15593  16E9  0020               	movlb	0	; select bank0
 15594  16EA  00C8               	movwf	LEDsOn@topOrBottom
 15595  16EB  31A5  2557  3196   	fcall	_LEDsOn
 15596  16EE                     l7659:	
 15597  16EE  30FF               	movlw	255
 15598  16EF  0021               	movlb	1	; select bank1
 15599  16F0  07BA               	addwf	LED_test_openshort@j^(0+128),f
 15600  16F1  30FF               	movlw	255
 15601  16F2  3DBB               	addwfc	(LED_test_openshort@j+1)^(0+128),f
 15602  16F3  1FBB               	btfss	(LED_test_openshort@j+1)^(0+128),7
 15603  16F4  2EB7               	goto	l279
 15604  16F5                     l7663:	
 15605                           
 15606                           ;LEDcomm.c: 114: }
 15607                           ;LEDcomm.c: 115: printf("\n");
 15608  16F5  3063               	movlw	low ((STR_34+28)| (0+32768))
 15609  16F6  00A0               	movwf	printf@f^(0+128)
 15610  16F7  30A8               	movlw	high ((STR_34+28)| (0+32768))
 15611  16F8  00A1               	movwf	(printf@f^(0+128)+1)
 15612  16F9  318E  26CE         	fcall	_printf
 15613  16FB  0008               	return
 15614  16FC                     __end_of_LED_test_openshort:	
 15615                           
 15616                           	psect	text49
 15617  1607                     __ptext49:	
 15618 ;; *************** function _LED_testComm *****************
 15619 ;; Defined at:
 15620 ;;		line 154 in file "LEDcomm.c"
 15621 ;; Parameters:    Size  Location     Type
 15622 ;;  topOrBottom     2   42[BANK1 ] int 
 15623 ;; Auto vars:     Size  Location     Type
 15624 ;;  oldConfigReg    4   46[BANK1 ] long 
 15625 ;;  readResult      2   44[BANK1 ] int 
 15626 ;; Return value:  Size  Location     Type
 15627 ;;                  2   42[BANK1 ] int 
 15628 ;; Registers used:
 15629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15630 ;; Tracked objects:
 15631 ;;		On entry : 0/0
 15632 ;;		On exit  : 0/0
 15633 ;;		Unchanged: 0/0
 15634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15635 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15636 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15637 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15638 ;;      Totals:         0       2       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15639 ;;Total ram usage:       10 bytes
 15640 ;; Hardware stack levels used:    1
 15641 ;; Hardware stack levels required when called:   11
 15642 ;; This function calls:
 15643 ;;		_LED_readConfig
 15644 ;;		_LED_setBrightnessRange
 15645 ;; This function is called by:
 15646 ;;		_commCheck
 15647 ;; This function uses a non-reentrant model
 15648 ;;
 15649                           
 15650                           
 15651                           ;psect for function _LED_testComm
 15652  1607                     _LED_testComm:	
 15653                           
 15654                           ;LEDcomm.c: 156: long oldConfigReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 15655                           
 15656                           ;incstack = 0
 15657                           ; Regs used in _LED_testComm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15658  1607  0021               	movlb	1	; select bank1
 15659  1608  034A               	decf	LED_testComm@topOrBottom^(0+128),w
 15660  1609  044B               	iorwf	(LED_testComm@topOrBottom+1)^(0+128),w
 15661  160A  1903               	btfsc	3,2
 15662  160B  2E1B               	goto	l7669
 15663  160C  0022               	movlb	2	; select bank2
 15664  160D  084D               	movf	(_LED_configReg_bot+3)^(0+256),w
 15665  160E  0021               	movlb	1	; select bank1
 15666  160F  00D1               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 15667  1610  0022               	movlb	2	; select bank2
 15668  1611  084C               	movf	(_LED_configReg_bot+2)^(0+256),w
 15669  1612  0021               	movlb	1	; select bank1
 15670  1613  00D0               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 15671  1614  0022               	movlb	2	; select bank2
 15672  1615  084B               	movf	(_LED_configReg_bot+1)^(0+256),w
 15673  1616  0021               	movlb	1	; select bank1
 15674  1617  00CF               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 15675  1618  0022               	movlb	2	; select bank2
 15676  1619  084A               	movf	_LED_configReg_bot^(0+256),w
 15677  161A  2E29               	goto	L29
 15678  161B                     l7669:	
 15679  161B  0022               	movlb	2	; select bank2
 15680  161C  0851               	movf	(_LED_configReg_top+3)^(0+256),w
 15681  161D  0021               	movlb	1	; select bank1
 15682  161E  00D1               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 15683  161F  0022               	movlb	2	; select bank2
 15684  1620  0850               	movf	(_LED_configReg_top+2)^(0+256),w
 15685  1621  0021               	movlb	1	; select bank1
 15686  1622  00D0               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 15687  1623  0022               	movlb	2	; select bank2
 15688  1624  084F               	movf	(_LED_configReg_top+1)^(0+256),w
 15689  1625  0021               	movlb	1	; select bank1
 15690  1626  00CF               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 15691  1627  0022               	movlb	2	; select bank2
 15692  1628  084E               	movf	_LED_configReg_top^(0+256),w
 15693  1629                     L29:	
 15694  1629  0021               	movlb	1	; select bank1
 15695  162A  00CE               	movwf	LED_testComm@oldConfigReg^(0+128)
 15696                           
 15697                           ;LEDcomm.c: 157: LED_setBrightnessRange(1, topOrBottom);
 15698  162B  3001               	movlw	1
 15699  162C  0020               	movlb	0	; select bank0
 15700  162D  00C4               	movwf	LED_setBrightnessRange@range
 15701  162E  3000               	movlw	0
 15702  162F  00C5               	movwf	LED_setBrightnessRange@range+1
 15703  1630  0021               	movlb	1	; select bank1
 15704  1631  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15705  1632  0020               	movlb	0	; select bank0
 15706  1633  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 15707  1634  0021               	movlb	1	; select bank1
 15708  1635  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 15709  1636  0020               	movlb	0	; select bank0
 15710  1637  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 15711  1638  318B  23DE  3196   	fcall	_LED_setBrightnessRange
 15712                           
 15713                           ;LEDcomm.c: 158: int readResult = LED_readConfig(topOrBottom);
 15714  163B  0021               	movlb	1	; select bank1
 15715  163C  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15716  163D  00C7               	movwf	(LED_readConfig@topOrBottom+1)^(0+128)
 15717  163E  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 15718  163F  00C6               	movwf	LED_readConfig@topOrBottom^(0+128)
 15719  1640  31A6  26C3  3196   	fcall	_LED_readConfig
 15720  1643  0021               	movlb	1	; select bank1
 15721  1644  0847               	movf	(?_LED_readConfig+1)^(0+128),w
 15722  1645  00CD               	movwf	(LED_testComm@readResult+1)^(0+128)
 15723  1646  0846               	movf	?_LED_readConfig^(0+128),w
 15724  1647  00CC               	movwf	LED_testComm@readResult^(0+128)
 15725                           
 15726                           ;LEDcomm.c: 160: LED_setBrightnessRange(oldConfigReg > 0, topOrBottom);
 15727  1648  1BD1               	btfsc	(LED_testComm@oldConfigReg+3)^(0+128),7
 15728  1649  2E59               	goto	u7640
 15729  164A  0851               	movf	(LED_testComm@oldConfigReg+3)^(0+128),w
 15730  164B  1D03               	btfss	3,2
 15731  164C  2E57               	goto	u7641
 15732  164D  0850               	movf	(LED_testComm@oldConfigReg+2)^(0+128),w
 15733  164E  1D03               	btfss	3,2
 15734  164F  2E57               	goto	u7641
 15735  1650  084F               	movf	(LED_testComm@oldConfigReg+1)^(0+128),w
 15736  1651  1D03               	btfss	3,2
 15737  1652  2E57               	goto	u7641
 15738  1653  3001               	movlw	1
 15739  1654  024E               	subwf	LED_testComm@oldConfigReg^(0+128),w
 15740  1655  1C03               	btfss	3,0
 15741  1656  2E59               	goto	u7640
 15742  1657                     u7641:	
 15743  1657  3001               	movlw	1
 15744  1658  2E5A               	goto	u7650
 15745  1659                     u7640:	
 15746  1659  3000               	movlw	0
 15747  165A                     u7650:	
 15748  165A  0020               	movlb	0	; select bank0
 15749  165B  00CC               	movwf	??_LED_testComm
 15750  165C  01CD               	clrf	??_LED_testComm+1
 15751  165D  084C               	movf	??_LED_testComm,w
 15752  165E  00C4               	movwf	LED_setBrightnessRange@range
 15753  165F  084D               	movf	??_LED_testComm+1,w
 15754  1660  00C5               	movwf	LED_setBrightnessRange@range+1
 15755  1661  0021               	movlb	1	; select bank1
 15756  1662  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15757  1663  0020               	movlb	0	; select bank0
 15758  1664  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 15759  1665  0021               	movlb	1	; select bank1
 15760  1666  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 15761  1667  0020               	movlb	0	; select bank0
 15762  1668  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 15763  1669  318B  23DE  3196   	fcall	_LED_setBrightnessRange
 15764                           
 15765                           ;LEDcomm.c: 162: return (readResult != 7);
 15766  166C  3007               	movlw	7
 15767  166D  0021               	movlb	1	; select bank1
 15768  166E  064C               	xorwf	LED_testComm@readResult^(0+128),w
 15769  166F  044D               	iorwf	(LED_testComm@readResult+1)^(0+128),w
 15770  1670  1903               	btfsc	3,2
 15771  1671  2E74               	goto	u7660
 15772  1672  3001               	movlw	1
 15773  1673  2E75               	goto	u7670
 15774  1674                     u7660:	
 15775  1674  3000               	movlw	0
 15776  1675                     u7670:	
 15777  1675  0020               	movlb	0	; select bank0
 15778  1676  00CC               	movwf	??_LED_testComm
 15779  1677  01CD               	clrf	??_LED_testComm+1
 15780  1678  084C               	movf	??_LED_testComm,w
 15781  1679  0021               	movlb	1	; select bank1
 15782  167A  00CA               	movwf	?_LED_testComm^(0+128)
 15783  167B  0020               	movlb	0	; select bank0
 15784  167C  084D               	movf	??_LED_testComm+1,w
 15785  167D  0021               	movlb	1	; select bank1
 15786  167E  00CB               	movwf	(?_LED_testComm+1)^(0+128)
 15787  167F  0008               	return
 15788  1680                     __end_of_LED_testComm:	
 15789                           
 15790                           	psect	text50
 15791  0BDE                     __ptext50:	
 15792 ;; *************** function _LED_setBrightnessRange *****************
 15793 ;; Defined at:
 15794 ;;		line 77 in file "LEDcomm.c"
 15795 ;; Parameters:    Size  Location     Type
 15796 ;;  range           2   36[BANK0 ] int 
 15797 ;;  topOrBottom     2   38[BANK0 ] int 
 15798 ;; Auto vars:     Size  Location     Type
 15799 ;;  LED_configRe    4   40[BANK0 ] long 
 15800 ;; Return value:  Size  Location     Type
 15801 ;;                  1    wreg      void 
 15802 ;; Registers used:
 15803 ;;		wreg, status,2, status,0, pclath, cstack
 15804 ;; Tracked objects:
 15805 ;;		On entry : 0/0
 15806 ;;		On exit  : 0/0
 15807 ;;		Unchanged: 0/0
 15808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15809 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15810 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15811 ;;      Temps:          0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15812 ;;      Totals:         0       8      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15813 ;;Total ram usage:       25 bytes
 15814 ;; Hardware stack levels used:    1
 15815 ;; Hardware stack levels required when called:    8
 15816 ;; This function calls:
 15817 ;;		_send_2length_2bytes_IK
 15818 ;; This function is called by:
 15819 ;;		_LED_testComm
 15820 ;;		_main_initialize
 15821 ;;		_setLEDBrightnessRange
 15822 ;; This function uses a non-reentrant model
 15823 ;;
 15824                           
 15825                           
 15826                           ;psect for function _LED_setBrightnessRange
 15827  0BDE                     _LED_setBrightnessRange:	
 15828                           
 15829                           ;LEDcomm.c: 79: long LED_configReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 15830                           
 15831                           ;incstack = 0
 15832                           ; Regs used in _LED_setBrightnessRange: [wreg+status,2+status,0+pclath+cstack]
 15833  0BDE  0020               	movlb	0	; select bank0
 15834  0BDF  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 15835  0BE0  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 15836  0BE1  1903               	btfsc	3,2
 15837  0BE2  2BF2               	goto	l7555
 15838  0BE3  0022               	movlb	2	; select bank2
 15839  0BE4  084D               	movf	(_LED_configReg_bot+3)^(0+256),w
 15840  0BE5  0020               	movlb	0	; select bank0
 15841  0BE6  00CB               	movwf	LED_setBrightnessRange@LED_configReg+3
 15842  0BE7  0022               	movlb	2	; select bank2
 15843  0BE8  084C               	movf	(_LED_configReg_bot+2)^(0+256),w
 15844  0BE9  0020               	movlb	0	; select bank0
 15845  0BEA  00CA               	movwf	LED_setBrightnessRange@LED_configReg+2
 15846  0BEB  0022               	movlb	2	; select bank2
 15847  0BEC  084B               	movf	(_LED_configReg_bot+1)^(0+256),w
 15848  0BED  0020               	movlb	0	; select bank0
 15849  0BEE  00C9               	movwf	LED_setBrightnessRange@LED_configReg+1
 15850  0BEF  0022               	movlb	2	; select bank2
 15851  0BF0  084A               	movf	_LED_configReg_bot^(0+256),w
 15852  0BF1  2C00               	goto	L30
 15853  0BF2                     l7555:	
 15854  0BF2  0022               	movlb	2	; select bank2
 15855  0BF3  0851               	movf	(_LED_configReg_top+3)^(0+256),w
 15856  0BF4  0020               	movlb	0	; select bank0
 15857  0BF5  00CB               	movwf	LED_setBrightnessRange@LED_configReg+3
 15858  0BF6  0022               	movlb	2	; select bank2
 15859  0BF7  0850               	movf	(_LED_configReg_top+2)^(0+256),w
 15860  0BF8  0020               	movlb	0	; select bank0
 15861  0BF9  00CA               	movwf	LED_setBrightnessRange@LED_configReg+2
 15862  0BFA  0022               	movlb	2	; select bank2
 15863  0BFB  084F               	movf	(_LED_configReg_top+1)^(0+256),w
 15864  0BFC  0020               	movlb	0	; select bank0
 15865  0BFD  00C9               	movwf	LED_setBrightnessRange@LED_configReg+1
 15866  0BFE  0022               	movlb	2	; select bank2
 15867  0BFF  084E               	movf	_LED_configReg_top^(0+256),w
 15868  0C00                     L30:	
 15869  0C00  0020               	movlb	0	; select bank0
 15870  0C01  00C8               	movwf	LED_setBrightnessRange@LED_configReg
 15871                           
 15872                           ;LEDcomm.c: 80: LED_configReg |= ((range>0) | (range>0)<<1 | (range>0) << 2);
 15873  0C02  0845               	movf	LED_setBrightnessRange@range+1,w
 15874  0C03  3A80               	xorlw	128
 15875  0C04  0021               	movlb	1	; select bank1
 15876  0C05  00A0               	movwf	??_LED_setBrightnessRange^(0+128)
 15877  0C06  3080               	movlw	128
 15878  0C07  0220               	subwf	??_LED_setBrightnessRange^(0+128),w
 15879  0C08  1D03               	skipz
 15880  0C09  2C0D               	goto	u7325
 15881  0C0A  3001               	movlw	1
 15882  0C0B  0020               	movlb	0	; select bank0
 15883  0C0C  0244               	subwf	LED_setBrightnessRange@range,w
 15884  0C0D                     u7325:	
 15885  0C0D  1C03               	btfss	3,0
 15886  0C0E  2C11               	goto	u7320
 15887  0C0F  3001               	movlw	1
 15888  0C10  2C12               	goto	u7330
 15889  0C11                     u7320:	
 15890  0C11  3000               	movlw	0
 15891  0C12                     u7330:	
 15892  0C12  0021               	movlb	1	; select bank1
 15893  0C13  00A1               	movwf	(??_LED_setBrightnessRange+1)^(0+128)
 15894  0C14  01A2               	clrf	((??_LED_setBrightnessRange+1)^(0+128)+1)
 15895  0C15  35A1               	lslf	(??_LED_setBrightnessRange+1)^(0+128),f
 15896  0C16  0DA2               	rlf	((??_LED_setBrightnessRange+1)^(0+128)+1),f
 15897  0C17  35A1               	lslf	(??_LED_setBrightnessRange+1)^(0+128),f
 15898  0C18  0DA2               	rlf	((??_LED_setBrightnessRange+1)^(0+128)+1),f
 15899  0C19  0020               	movlb	0	; select bank0
 15900  0C1A  0845               	movf	LED_setBrightnessRange@range+1,w
 15901  0C1B  3A80               	xorlw	128
 15902  0C1C  0021               	movlb	1	; select bank1
 15903  0C1D  00A3               	movwf	(??_LED_setBrightnessRange+3)^(0+128)
 15904  0C1E  3080               	movlw	128
 15905  0C1F  0223               	subwf	(??_LED_setBrightnessRange+3)^(0+128),w
 15906  0C20  1D03               	skipz
 15907  0C21  2C25               	goto	u7345
 15908  0C22  3001               	movlw	1
 15909  0C23  0020               	movlb	0	; select bank0
 15910  0C24  0244               	subwf	LED_setBrightnessRange@range,w
 15911  0C25                     u7345:	
 15912  0C25  1C03               	btfss	3,0
 15913  0C26  2C29               	goto	u7340
 15914  0C27  3001               	movlw	1
 15915  0C28  2C2A               	goto	u7350
 15916  0C29                     u7340:	
 15917  0C29  3000               	movlw	0
 15918  0C2A                     u7350:	
 15919  0C2A  0021               	movlb	1	; select bank1
 15920  0C2B  00A4               	movwf	(??_LED_setBrightnessRange+4)^(0+128)
 15921  0C2C  01A5               	clrf	((??_LED_setBrightnessRange+4)^(0+128)+1)
 15922  0C2D  35A4               	lslf	(??_LED_setBrightnessRange+4)^(0+128),f
 15923  0C2E  0DA5               	rlf	((??_LED_setBrightnessRange+4)^(0+128)+1),f
 15924  0C2F  0020               	movlb	0	; select bank0
 15925  0C30  0845               	movf	LED_setBrightnessRange@range+1,w
 15926  0C31  3A80               	xorlw	128
 15927  0C32  0021               	movlb	1	; select bank1
 15928  0C33  00A6               	movwf	(??_LED_setBrightnessRange+6)^(0+128)
 15929  0C34  3080               	movlw	128
 15930  0C35  0226               	subwf	(??_LED_setBrightnessRange+6)^(0+128),w
 15931  0C36  1D03               	skipz
 15932  0C37  2C3B               	goto	u7365
 15933  0C38  3001               	movlw	1
 15934  0C39  0020               	movlb	0	; select bank0
 15935  0C3A  0244               	subwf	LED_setBrightnessRange@range,w
 15936  0C3B                     u7365:	
 15937  0C3B  1C03               	btfss	3,0
 15938  0C3C  2C3F               	goto	u7360
 15939  0C3D  3001               	movlw	1
 15940  0C3E  2C40               	goto	u7370
 15941  0C3F                     u7360:	
 15942  0C3F  3000               	movlw	0
 15943  0C40                     u7370:	
 15944  0C40  0021               	movlb	1	; select bank1
 15945  0C41  00A7               	movwf	(??_LED_setBrightnessRange+7)^(0+128)
 15946  0C42  01A8               	clrf	((??_LED_setBrightnessRange+7)^(0+128)+1)
 15947  0C43  0824               	movf	(??_LED_setBrightnessRange+4)^(0+128),w
 15948  0C44  0427               	iorwf	(??_LED_setBrightnessRange+7)^(0+128),w
 15949  0C45  00A9               	movwf	(??_LED_setBrightnessRange+9)^(0+128)
 15950  0C46  0825               	movf	(??_LED_setBrightnessRange+5)^(0+128),w
 15951  0C47  0428               	iorwf	(??_LED_setBrightnessRange+8)^(0+128),w
 15952  0C48  00AA               	movwf	(??_LED_setBrightnessRange+10)^(0+128)
 15953  0C49  0821               	movf	(??_LED_setBrightnessRange+1)^(0+128),w
 15954  0C4A  0429               	iorwf	(??_LED_setBrightnessRange+9)^(0+128),w
 15955  0C4B  00AB               	movwf	(??_LED_setBrightnessRange+11)^(0+128)
 15956  0C4C  0822               	movf	(??_LED_setBrightnessRange+2)^(0+128),w
 15957  0C4D  042A               	iorwf	(??_LED_setBrightnessRange+10)^(0+128),w
 15958  0C4E  00AC               	movwf	(??_LED_setBrightnessRange+12)^(0+128)
 15959  0C4F  082B               	movf	(??_LED_setBrightnessRange+11)^(0+128),w
 15960  0C50  00AD               	movwf	(??_LED_setBrightnessRange+13)^(0+128)
 15961  0C51  082C               	movf	(??_LED_setBrightnessRange+12)^(0+128),w
 15962  0C52  00AE               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+1)
 15963  0C53  3000               	movlw	0
 15964  0C54  1BAE               	btfsc	((??_LED_setBrightnessRange+13)^(0+128)+1),7
 15965  0C55  30FF               	movlw	255
 15966  0C56  00AF               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+2)
 15967  0C57  00B0               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+3)
 15968  0C58  082D               	movf	(??_LED_setBrightnessRange+13)^(0+128),w
 15969  0C59  0020               	movlb	0	; select bank0
 15970  0C5A  04C8               	iorwf	LED_setBrightnessRange@LED_configReg,f
 15971  0C5B  0021               	movlb	1	; select bank1
 15972  0C5C  082E               	movf	(??_LED_setBrightnessRange+14)^(0+128),w
 15973  0C5D  0020               	movlb	0	; select bank0
 15974  0C5E  04C9               	iorwf	LED_setBrightnessRange@LED_configReg+1,f
 15975  0C5F  0021               	movlb	1	; select bank1
 15976  0C60  082F               	movf	(??_LED_setBrightnessRange+15)^(0+128),w
 15977  0C61  0020               	movlb	0	; select bank0
 15978  0C62  04CA               	iorwf	LED_setBrightnessRange@LED_configReg+2,f
 15979  0C63  0021               	movlb	1	; select bank1
 15980  0C64  0830               	movf	(??_LED_setBrightnessRange+16)^(0+128),w
 15981  0C65  0020               	movlb	0	; select bank0
 15982  0C66  04CB               	iorwf	LED_setBrightnessRange@LED_configReg+3,f
 15983                           
 15984                           ;LEDcomm.c: 81: send_2length_2bytes_IK((unsigned int)((LED_configReg>>16) & 0xFFFF),(uns
      +                          igned int)LED_configReg, 3, topOrBottom);
 15985  0C67  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15986  0C68  0021               	movlb	1	; select bank1
 15987  0C69  00A0               	movwf	??_LED_setBrightnessRange^(0+128)
 15988  0C6A  0020               	movlb	0	; select bank0
 15989  0C6B  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15990  0C6C  0021               	movlb	1	; select bank1
 15991  0C6D  00A1               	movwf	(??_LED_setBrightnessRange^(0+128)+1)
 15992  0C6E  0020               	movlb	0	; select bank0
 15993  0C6F  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 15994  0C70  0021               	movlb	1	; select bank1
 15995  0C71  00A2               	movwf	(??_LED_setBrightnessRange^(0+128)+2)
 15996  0C72  0020               	movlb	0	; select bank0
 15997  0C73  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 15998  0C74  0021               	movlb	1	; select bank1
 15999  0C75  00A3               	movwf	(??_LED_setBrightnessRange^(0+128)+3)
 16000  0C76  3010               	movlw	16
 16001  0C77  00A4               	movwf	(??_LED_setBrightnessRange+4)^(0+128)
 16002  0C78                     u7385:	
 16003  0C78  37A3               	asrf	(??_LED_setBrightnessRange^(0+128)+3),f
 16004  0C79  0CA2               	rrf	(??_LED_setBrightnessRange^(0+128)+2),f
 16005  0C7A  0CA1               	rrf	(??_LED_setBrightnessRange^(0+128)+1),f
 16006  0C7B  0CA0               	rrf	??_LED_setBrightnessRange^(0+128),f
 16007  0C7C  0BA4               	decfsz	(??_LED_setBrightnessRange+4)^(0+128),f
 16008  0C7D  2C78               	goto	u7385
 16009  0C7E  0821               	movf	(??_LED_setBrightnessRange+1)^(0+128),w
 16010  0C7F  0020               	movlb	0	; select bank0
 16011  0C80  00BD               	movwf	send_2length_2bytes_IK@data1+1
 16012  0C81  0021               	movlb	1	; select bank1
 16013  0C82  0820               	movf	??_LED_setBrightnessRange^(0+128),w
 16014  0C83  0020               	movlb	0	; select bank0
 16015  0C84  00BC               	movwf	send_2length_2bytes_IK@data1
 16016  0C85  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 16017  0C86  00BF               	movwf	send_2length_2bytes_IK@data2+1
 16018  0C87  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 16019  0C88  00BE               	movwf	send_2length_2bytes_IK@data2
 16020  0C89  3003               	movlw	3
 16021  0C8A  0021               	movlb	1	; select bank1
 16022  0C8B  00A5               	movwf	(??_LED_setBrightnessRange+5)^(0+128)
 16023  0C8C  0825               	movf	(??_LED_setBrightnessRange+5)^(0+128),w
 16024  0C8D  0020               	movlb	0	; select bank0
 16025  0C8E  00C0               	movwf	send_2length_2bytes_IK@latch_start
 16026  0C8F  0847               	movf	LED_setBrightnessRange@topOrBottom+1,w
 16027  0C90  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 16028  0C91  0846               	movf	LED_setBrightnessRange@topOrBottom,w
 16029  0C92  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 16030  0C93  31A3  23DA  318B   	fcall	_send_2length_2bytes_IK
 16031                           
 16032                           ;LEDcomm.c: 84: if (topOrBottom == 1)
 16033  0C96  0020               	movlb	0	; select bank0
 16034  0C97  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 16035  0C98  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 16036  0C99  1D03               	btfss	3,2
 16037  0C9A  2CAB               	goto	l7565
 16038                           
 16039                           ;LEDcomm.c: 85: LED_configReg_top = LED_configReg;
 16040  0C9B  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 16041  0C9C  0022               	movlb	2	; select bank2
 16042  0C9D  00D1               	movwf	(_LED_configReg_top+3)^(0+256)
 16043  0C9E  0020               	movlb	0	; select bank0
 16044  0C9F  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 16045  0CA0  0022               	movlb	2	; select bank2
 16046  0CA1  00D0               	movwf	(_LED_configReg_top+2)^(0+256)
 16047  0CA2  0020               	movlb	0	; select bank0
 16048  0CA3  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 16049  0CA4  0022               	movlb	2	; select bank2
 16050  0CA5  00CF               	movwf	(_LED_configReg_top+1)^(0+256)
 16051  0CA6  0020               	movlb	0	; select bank0
 16052  0CA7  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 16053  0CA8  0022               	movlb	2	; select bank2
 16054  0CA9  00CE               	movwf	_LED_configReg_top^(0+256)
 16055  0CAA  0008               	return
 16056  0CAB                     l7565:	
 16057                           
 16058                           ;LEDcomm.c: 86: else
 16059                           ;LEDcomm.c: 87: LED_configReg_bot = LED_configReg;
 16060  0CAB  0020               	movlb	0	; select bank0
 16061  0CAC  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 16062  0CAD  0022               	movlb	2	; select bank2
 16063  0CAE  00CD               	movwf	(_LED_configReg_bot+3)^(0+256)
 16064  0CAF  0020               	movlb	0	; select bank0
 16065  0CB0  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 16066  0CB1  0022               	movlb	2	; select bank2
 16067  0CB2  00CC               	movwf	(_LED_configReg_bot+2)^(0+256)
 16068  0CB3  0020               	movlb	0	; select bank0
 16069  0CB4  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 16070  0CB5  0022               	movlb	2	; select bank2
 16071  0CB6  00CB               	movwf	(_LED_configReg_bot+1)^(0+256)
 16072  0CB7  0020               	movlb	0	; select bank0
 16073  0CB8  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 16074  0CB9  0022               	movlb	2	; select bank2
 16075  0CBA  00CA               	movwf	_LED_configReg_bot^(0+256)
 16076  0CBB  0008               	return
 16077  0CBC                     __end_of_LED_setBrightnessRange:	
 16078                           
 16079                           	psect	text51
 16080  26C3                     __ptext51:	
 16081 ;; *************** function _LED_readConfig *****************
 16082 ;; Defined at:
 16083 ;;		line 120 in file "LEDcomm.c"
 16084 ;; Parameters:    Size  Location     Type
 16085 ;;  topOrBottom     2   38[BANK1 ] int 
 16086 ;; Auto vars:     Size  Location     Type
 16087 ;;		None
 16088 ;; Return value:  Size  Location     Type
 16089 ;;                  4   38[BANK1 ] long 
 16090 ;; Registers used:
 16091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16092 ;; Tracked objects:
 16093 ;;		On entry : 0/0
 16094 ;;		On exit  : 0/0
 16095 ;;		Unchanged: 0/0
 16096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16097 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16099 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16100 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16101 ;;Total ram usage:        5 bytes
 16102 ;; Hardware stack levels used:    1
 16103 ;; Hardware stack levels required when called:   10
 16104 ;; This function calls:
 16105 ;;		_LED_getData
 16106 ;;		_send_2length_2bytes_IK
 16107 ;; This function is called by:
 16108 ;;		_LED_testComm
 16109 ;; This function uses a non-reentrant model
 16110 ;;
 16111                           
 16112                           
 16113                           ;psect for function _LED_readConfig
 16114  26C3                     _LED_readConfig:	
 16115                           
 16116                           ;incstack = 0
 16117                           ; Regs used in _LED_readConfig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16118                           ;LEDcomm.c: 121: do { LATCbits.LATC1 = 1; } while(0);
 16119  26C3  0022               	movlb	2	; select bank2
 16120  26C4  148E               	bsf	14,1	;volatile
 16121                           
 16122                           ;LEDcomm.c: 122: send_2length_2bytes_IK(0,0,5,topOrBottom);
 16123  26C5  3000               	movlw	0
 16124  26C6  0020               	movlb	0	; select bank0
 16125  26C7  00BC               	movwf	send_2length_2bytes_IK@data1
 16126  26C8  00BD               	movwf	send_2length_2bytes_IK@data1+1
 16127  26C9  3000               	movlw	0
 16128  26CA  00BE               	movwf	send_2length_2bytes_IK@data2
 16129  26CB  00BF               	movwf	send_2length_2bytes_IK@data2+1
 16130  26CC  3005               	movlw	5
 16131  26CD  00C9               	movwf	??_LED_readConfig
 16132  26CE  0849               	movf	??_LED_readConfig,w
 16133  26CF  00C0               	movwf	send_2length_2bytes_IK@latch_start
 16134  26D0  0021               	movlb	1	; select bank1
 16135  26D1  0847               	movf	(LED_readConfig@topOrBottom+1)^(0+128),w
 16136  26D2  0020               	movlb	0	; select bank0
 16137  26D3  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 16138  26D4  0021               	movlb	1	; select bank1
 16139  26D5  0846               	movf	LED_readConfig@topOrBottom^(0+128),w
 16140  26D6  0020               	movlb	0	; select bank0
 16141  26D7  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 16142  26D8  31A3  23DA  31A6   	fcall	_send_2length_2bytes_IK
 16143                           
 16144                           ;LEDcomm.c: 123: return LED_getData(topOrBottom);
 16145  26DB  0021               	movlb	1	; select bank1
 16146  26DC  0847               	movf	(LED_readConfig@topOrBottom+1)^(0+128),w
 16147  26DD  00B6               	movwf	(LED_getData@topOrBottom+1)^(0+128)
 16148  26DE  0846               	movf	LED_readConfig@topOrBottom^(0+128),w
 16149  26DF  00B5               	movwf	LED_getData@topOrBottom^(0+128)
 16150  26E0  3197  2779         	fcall	_LED_getData
 16151  26E2  0021               	movlb	1	; select bank1
 16152  26E3  0838               	movf	(?_LED_getData+3)^(0+128),w
 16153  26E4  00C9               	movwf	(?_LED_readConfig+3)^(0+128)
 16154  26E5  0837               	movf	(?_LED_getData+2)^(0+128),w
 16155  26E6  00C8               	movwf	(?_LED_readConfig+2)^(0+128)
 16156  26E7  0836               	movf	(?_LED_getData+1)^(0+128),w
 16157  26E8  00C7               	movwf	(?_LED_readConfig+1)^(0+128)
 16158  26E9  0835               	movf	?_LED_getData^(0+128),w
 16159  26EA  00C6               	movwf	?_LED_readConfig^(0+128)
 16160  26EB  0008               	return
 16161  26EC                     __end_of_LED_readConfig:	
 16162                           
 16163                           	psect	text52
 16164  1779                     __ptext52:	
 16165 ;; *************** function _LED_getData *****************
 16166 ;; Defined at:
 16167 ;;		line 126 in file "LEDcomm.c"
 16168 ;; Parameters:    Size  Location     Type
 16169 ;;  topOrBottom     2   21[BANK1 ] int 
 16170 ;; Auto vars:     Size  Location     Type
 16171 ;;  j               2   36[BANK1 ] int 
 16172 ;;  readData        4   32[BANK1 ] long 
 16173 ;; Return value:  Size  Location     Type
 16174 ;;                  4   21[BANK1 ] long 
 16175 ;; Registers used:
 16176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16177 ;; Tracked objects:
 16178 ;;		On entry : 0/0
 16179 ;;		On exit  : 0/0
 16180 ;;		Unchanged: 0/0
 16181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16182 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16183 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16184 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16185 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16186 ;;Total ram usage:       17 bytes
 16187 ;; Hardware stack levels used:    1
 16188 ;; Hardware stack levels required when called:    9
 16189 ;; This function calls:
 16190 ;;		_printf
 16191 ;; This function is called by:
 16192 ;;		_LED_readConfig
 16193 ;; This function uses a non-reentrant model
 16194 ;;
 16195                           
 16196                           
 16197                           ;psect for function _LED_getData
 16198  1779                     _LED_getData:	
 16199                           
 16200                           ;LEDcomm.c: 128: long readData = 0;
 16201                           
 16202                           ;incstack = 0
 16203                           ; Regs used in _LED_getData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16204  1779  3000               	movlw	0
 16205  177A  0021               	movlb	1	; select bank1
 16206  177B  00C3               	movwf	(LED_getData@readData+3)^(0+128)
 16207  177C  3000               	movlw	0
 16208  177D  00C2               	movwf	(LED_getData@readData+2)^(0+128)
 16209  177E  3000               	movlw	0
 16210  177F  00C1               	movwf	(LED_getData@readData+1)^(0+128)
 16211  1780  3000               	movlw	0
 16212  1781  00C0               	movwf	LED_getData@readData^(0+128)
 16213                           
 16214                           ;LEDcomm.c: 130: if (topOrBottom == 1) do { LATBbits.LATB4 = 0; } while(0);
 16215  1782  0335               	decf	LED_getData@topOrBottom^(0+128),w
 16216  1783  0436               	iorwf	(LED_getData@topOrBottom+1)^(0+128),w
 16217  1784  1D03               	btfss	3,2
 16218  1785  2F89               	goto	l302
 16219  1786  0022               	movlb	2	; select bank2
 16220  1787  120D               	bcf	13,4	;volatile
 16221  1788  2F8B               	goto	l7503
 16222  1789                     l302:	
 16223                           ;LEDcomm.c: 131: else do { LATCbits.LATC0 = 0; } while(0);
 16224                           
 16225  1789  0022               	movlb	2	; select bank2
 16226  178A  100E               	bcf	14,0	;volatile
 16227  178B                     l7503:	
 16228                           
 16229                           ;LEDcomm.c: 133: for(int j = 23; j>=0; j--){
 16230  178B  3017               	movlw	23
 16231  178C  0021               	movlb	1	; select bank1
 16232  178D  00C4               	movwf	LED_getData@j^(0+128)
 16233  178E  3000               	movlw	0
 16234  178F  00C5               	movwf	(LED_getData@j^(0+128)+1)
 16235  1790  1BC5               	btfsc	(LED_getData@j+1)^(0+128),7
 16236  1791  2FE5               	goto	l312
 16237  1792                     l306:	
 16238                           ;LEDcomm.c: 134: do { LATAbits.LATA2 = 1; } while(0);
 16239                           
 16240  1792  0022               	movlb	2	; select bank2
 16241  1793  150C               	bsf	12,2	;volatile
 16242                           
 16243                           ;LEDcomm.c: 136: if (topOrBottom == 1)
 16244  1794  0021               	movlb	1	; select bank1
 16245  1795  0335               	decf	LED_getData@topOrBottom^(0+128),w
 16246  1796  0436               	iorwf	(LED_getData@topOrBottom+1)^(0+128),w
 16247  1797  1D03               	btfss	3,2
 16248  1798  2FB8               	goto	l7513
 16249                           
 16250                           ;LEDcomm.c: 137: {readData |= (PORTCbits.RC6 << j);}
 16251  1799  0020               	movlb	0	; select bank0
 16252  179A  0E0E               	swapf	14,w	;volatile
 16253  179B  0C89               	rrf	9,f
 16254  179C  0C89               	rrf	9,f
 16255  179D  3901               	andlw	1
 16256  179E  0021               	movlb	1	; select bank1
 16257  179F  00B9               	movwf	??_LED_getData^(0+128)
 16258  17A0  01BA               	clrf	(??_LED_getData^(0+128)+1)
 16259  17A1  0A44               	incf	LED_getData@j^(0+128),w
 16260  17A2  2FA5               	goto	u7254
 16261  17A3                     u7255:	
 16262  17A3  35B9               	lslf	??_LED_getData^(0+128),f
 16263  17A4  0DBA               	rlf	(??_LED_getData^(0+128)+1),f
 16264  17A5                     u7254:	
 16265  17A5  0B89               	decfsz	9,f
 16266  17A6  2FA3               	goto	u7255
 16267  17A7  0839               	movf	??_LED_getData^(0+128),w
 16268  17A8  00BB               	movwf	(??_LED_getData+2)^(0+128)
 16269  17A9  083A               	movf	(??_LED_getData+1)^(0+128),w
 16270  17AA  00BC               	movwf	((??_LED_getData+2)^(0+128)+1)
 16271  17AB  3000               	movlw	0
 16272  17AC  1BBC               	btfsc	((??_LED_getData+2)^(0+128)+1),7
 16273  17AD  30FF               	movlw	255
 16274  17AE  00BD               	movwf	((??_LED_getData+2)^(0+128)+2)
 16275  17AF  00BE               	movwf	((??_LED_getData+2)^(0+128)+3)
 16276  17B0  083B               	movf	(??_LED_getData+2)^(0+128),w
 16277  17B1  04C0               	iorwf	LED_getData@readData^(0+128),f
 16278  17B2  083C               	movf	(??_LED_getData+3)^(0+128),w
 16279  17B3  04C1               	iorwf	(LED_getData@readData+1)^(0+128),f
 16280  17B4  083D               	movf	(??_LED_getData+4)^(0+128),w
 16281  17B5  04C2               	iorwf	(LED_getData@readData+2)^(0+128),f
 16282  17B6  083E               	movf	(??_LED_getData+5)^(0+128),w
 16283  17B7  2FD7               	goto	L31
 16284  17B8                     l7513:	
 16285                           
 16286                           ;LEDcomm.c: 138: else
 16287                           ;LEDcomm.c: 139: {readData |= (PORTCbits.RC3 << j);}
 16288  17B8  0020               	movlb	0	; select bank0
 16289  17B9  0C0E               	rrf	14,w	;volatile
 16290  17BA  0021               	movlb	1	; select bank1
 16291  17BB  00B9               	movwf	??_LED_getData^(0+128)
 16292  17BC  0CB9               	rrf	??_LED_getData^(0+128),f
 16293  17BD  0C39               	rrf	??_LED_getData^(0+128),w
 16294  17BE  3901               	andlw	1
 16295  17BF  00BA               	movwf	(??_LED_getData+1)^(0+128)
 16296  17C0  01BB               	clrf	((??_LED_getData+1)^(0+128)+1)
 16297  17C1  0A44               	incf	LED_getData@j^(0+128),w
 16298  17C2  2FC5               	goto	u7264
 16299  17C3                     u7265:	
 16300  17C3  35BA               	lslf	(??_LED_getData+1)^(0+128),f
 16301  17C4  0DBB               	rlf	((??_LED_getData+1)^(0+128)+1),f
 16302  17C5                     u7264:	
 16303  17C5  0B89               	decfsz	9,f
 16304  17C6  2FC3               	goto	u7265
 16305  17C7  083A               	movf	(??_LED_getData+1)^(0+128),w
 16306  17C8  00BC               	movwf	(??_LED_getData+3)^(0+128)
 16307  17C9  083B               	movf	(??_LED_getData+2)^(0+128),w
 16308  17CA  00BD               	movwf	((??_LED_getData+3)^(0+128)+1)
 16309  17CB  3000               	movlw	0
 16310  17CC  1BBD               	btfsc	((??_LED_getData+3)^(0+128)+1),7
 16311  17CD  30FF               	movlw	255
 16312  17CE  00BE               	movwf	((??_LED_getData+3)^(0+128)+2)
 16313  17CF  00BF               	movwf	((??_LED_getData+3)^(0+128)+3)
 16314  17D0  083C               	movf	(??_LED_getData+3)^(0+128),w
 16315  17D1  04C0               	iorwf	LED_getData@readData^(0+128),f
 16316  17D2  083D               	movf	(??_LED_getData+4)^(0+128),w
 16317  17D3  04C1               	iorwf	(LED_getData@readData+1)^(0+128),f
 16318  17D4  083E               	movf	(??_LED_getData+5)^(0+128),w
 16319  17D5  04C2               	iorwf	(LED_getData@readData+2)^(0+128),f
 16320  17D6  083F               	movf	(??_LED_getData+6)^(0+128),w
 16321  17D7                     L31:	
 16322  17D7  04C3               	iorwf	(LED_getData@readData+3)^(0+128),f
 16323                           
 16324                           ;LEDcomm.c: 141: do { LATAbits.LATA2 = 0; } while(0);
 16325  17D8  0022               	movlb	2	; select bank2
 16326  17D9  110C               	bcf	12,2	;volatile
 16327                           
 16328                           ;LEDcomm.c: 142: _delay((unsigned long)((100)*(1000000/4000000.0)));
 16329  17DA  3008               	movlw	8
 16330  17DB                     u9157:	
 16331  17DB  0B89               	decfsz	9,f
 16332  17DC  2FDB               	goto	u9157
 16333  17DD  0000               	nop
 16334  17DE  30FF               	movlw	255
 16335  17DF  0021               	movlb	1	; select bank1
 16336  17E0  07C4               	addwf	LED_getData@j^(0+128),f
 16337  17E1  30FF               	movlw	255
 16338  17E2  3DC5               	addwfc	(LED_getData@j+1)^(0+128),f
 16339  17E3  1FC5               	btfss	(LED_getData@j+1)^(0+128),7
 16340  17E4  2F92               	goto	l306
 16341  17E5                     l312:	
 16342                           ;LEDcomm.c: 144: }
 16343                           ;LEDcomm.c: 146: do { LATAbits.LATA2 = 0; } while(0);
 16344                           
 16345  17E5  0022               	movlb	2	; select bank2
 16346  17E6  110C               	bcf	12,2	;volatile
 16347                           
 16348                           ;LEDcomm.c: 147: printf("read data: %lu\n", readData);
 16349  17E7  3020               	movlw	low (STR_4| (0+32768))
 16350  17E8  0021               	movlb	1	; select bank1
 16351  17E9  00A0               	movwf	printf@f^(0+128)
 16352  17EA  30A9               	movlw	high (STR_4| (0+32768))
 16353  17EB  00A1               	movwf	(printf@f^(0+128)+1)
 16354  17EC  0843               	movf	(LED_getData@readData+3)^(0+128),w
 16355  17ED  00A5               	movwf	((?_printf+3)^(0+128)+2)
 16356  17EE  0842               	movf	(LED_getData@readData+2)^(0+128),w
 16357  17EF  00A4               	movwf	((?_printf+2)^(0+128)+2)
 16358  17F0  0841               	movf	(LED_getData@readData+1)^(0+128),w
 16359  17F1  00A3               	movwf	((?_printf+1)^(0+128)+2)
 16360  17F2  0840               	movf	LED_getData@readData^(0+128),w
 16361  17F3  00A2               	movwf	(?_printf^(0+128)+2)
 16362  17F4  318E  26CE         	fcall	_printf
 16363                           
 16364                           ;LEDcomm.c: 148: return readData;
 16365  17F6  0021               	movlb	1	; select bank1
 16366  17F7  0843               	movf	(LED_getData@readData+3)^(0+128),w
 16367  17F8  00B8               	movwf	(?_LED_getData+3)^(0+128)
 16368  17F9  0842               	movf	(LED_getData@readData+2)^(0+128),w
 16369  17FA  00B7               	movwf	(?_LED_getData+2)^(0+128)
 16370  17FB  0841               	movf	(LED_getData@readData+1)^(0+128),w
 16371  17FC  00B6               	movwf	(?_LED_getData+1)^(0+128)
 16372  17FD  0840               	movf	LED_getData@readData^(0+128),w
 16373  17FE  00B5               	movwf	?_LED_getData^(0+128)
 16374  17FF  0008               	return
 16375  1800                     __end_of_LED_getData:	
 16376                           
 16377                           	psect	text53
 16378  0D9D                     __ptext53:	
 16379 ;; *************** function _doRelMove *****************
 16380 ;; Defined at:
 16381 ;;		line 339 in file "main.c"
 16382 ;; Parameters:    Size  Location     Type
 16383 ;;		None
 16384 ;; Auto vars:     Size  Location     Type
 16385 ;;  j               2   60[BANK1 ] int 
 16386 ;; Return value:  Size  Location     Type
 16387 ;;                  1    wreg      void 
 16388 ;; Registers used:
 16389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16390 ;; Tracked objects:
 16391 ;;		On entry : 0/0
 16392 ;;		On exit  : 0/0
 16393 ;;		Unchanged: 0/0
 16394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16396 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16397 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16398 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16399 ;;Total ram usage:       18 bytes
 16400 ;; Hardware stack levels used:    1
 16401 ;; Hardware stack levels required when called:   16
 16402 ;; This function calls:
 16403 ;;		_doMove
 16404 ;; This function is called by:
 16405 ;;		_main
 16406 ;; This function uses a non-reentrant model
 16407 ;;
 16408                           
 16409                           
 16410                           ;psect for function _doRelMove
 16411  0D9D                     _doRelMove:	
 16412                           
 16413                           ;main.c: 340: if(remainingSteps == 0){
 16414                           
 16415                           ;incstack = 0
 16416 ;; hardware stack exceeded
 16417                           ; Regs used in _doRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16418  0D9D  0022               	movlb	2	; select bank2
 16419  0D9E  0845               	movf	(_remainingSteps+3)^(0+256),w
 16420  0D9F  0444               	iorwf	(_remainingSteps+2)^(0+256),w
 16421  0DA0  0443               	iorwf	(_remainingSteps+1)^(0+256),w
 16422  0DA1  0442               	iorwf	_remainingSteps^(0+256),w
 16423  0DA2  1D03               	skipz
 16424  0DA3  2DB8               	goto	l8457
 16425                           
 16426                           ;main.c: 341: motionType = NONE;
 16427  0DA4  0020               	movlb	0	; select bank0
 16428  0DA5  01D5               	clrf	_motionType
 16429                           
 16430                           ;main.c: 342: moveVector_ups = 0;
 16431  0DA6  3000               	movlw	0
 16432  0DA7  00D1               	movwf	_moveVector_ups+3
 16433  0DA8  3000               	movlw	0
 16434  0DA9  00D0               	movwf	_moveVector_ups+2
 16435  0DAA  3000               	movlw	0
 16436  0DAB  00CF               	movwf	_moveVector_ups+1
 16437  0DAC  3000               	movlw	0
 16438  0DAD  00CE               	movwf	_moveVector_ups
 16439                           
 16440                           ;main.c: 343: moveVector_downs = 0;
 16441  0DAE  3000               	movlw	0
 16442  0DAF  0022               	movlb	2	; select bank2
 16443  0DB0  00C9               	movwf	(_moveVector_downs+3)^(0+256)
 16444  0DB1  3000               	movlw	0
 16445  0DB2  00C8               	movwf	(_moveVector_downs+2)^(0+256)
 16446  0DB3  3000               	movlw	0
 16447  0DB4  00C7               	movwf	(_moveVector_downs+1)^(0+256)
 16448  0DB5  3000               	movlw	0
 16449  0DB6  00C6               	movwf	_moveVector_downs^(0+256)
 16450                           
 16451                           ;main.c: 345: }
 16452                           
 16453                           ;main.c: 344: return;
 16454  0DB7  0008               	return
 16455  0DB8                     l8457:	
 16456                           
 16457                           ;main.c: 346: else{
 16458                           ;main.c: 347: int j;
 16459                           ;main.c: 348: if (remainingSteps > 0){
 16460  0DB8  1BC5               	btfsc	(_remainingSteps+3)^(0+256),7
 16461  0DB9  2E4A               	goto	l8477
 16462  0DBA  0845               	movf	(_remainingSteps+3)^(0+256),w
 16463  0DBB  1D03               	btfss	3,2
 16464  0DBC  2DC7               	goto	l8459
 16465  0DBD  0844               	movf	(_remainingSteps+2)^(0+256),w
 16466  0DBE  1D03               	btfss	3,2
 16467  0DBF  2DC7               	goto	l8459
 16468  0DC0  0843               	movf	(_remainingSteps+1)^(0+256),w
 16469  0DC1  1D03               	btfss	3,2
 16470  0DC2  2DC7               	goto	l8459
 16471  0DC3  3001               	movlw	1
 16472  0DC4  0242               	subwf	_remainingSteps^(0+256),w
 16473  0DC5  1C03               	btfss	3,0
 16474  0DC6  2E4A               	goto	l8477
 16475  0DC7                     l8459:	
 16476                           
 16477                           ;main.c: 349: moveVector_ups = 0;
 16478  0DC7  3000               	movlw	0
 16479  0DC8  0020               	movlb	0	; select bank0
 16480  0DC9  00D1               	movwf	_moveVector_ups+3
 16481  0DCA  3000               	movlw	0
 16482  0DCB  00D0               	movwf	_moveVector_ups+2
 16483  0DCC  3000               	movlw	0
 16484  0DCD  00CF               	movwf	_moveVector_ups+1
 16485  0DCE  3000               	movlw	0
 16486  0DCF  00CE               	movwf	_moveVector_ups
 16487                           
 16488                           ;main.c: 350: moveVector_downs = activeMask;
 16489  0DD0  0021               	movlb	1	; select bank1
 16490  0DD1  0866               	movf	(_activeMask+3)^(0+128),w
 16491  0DD2  0022               	movlb	2	; select bank2
 16492  0DD3  00C9               	movwf	(_moveVector_downs+3)^(0+256)
 16493  0DD4  0021               	movlb	1	; select bank1
 16494  0DD5  0865               	movf	(_activeMask+2)^(0+128),w
 16495  0DD6  0022               	movlb	2	; select bank2
 16496  0DD7  00C8               	movwf	(_moveVector_downs+2)^(0+256)
 16497  0DD8  0021               	movlb	1	; select bank1
 16498  0DD9  0864               	movf	(_activeMask+1)^(0+128),w
 16499  0DDA  0022               	movlb	2	; select bank2
 16500  0DDB  00C7               	movwf	(_moveVector_downs+1)^(0+256)
 16501  0DDC  0021               	movlb	1	; select bank1
 16502  0DDD  0863               	movf	_activeMask^(0+128),w
 16503  0DDE  0022               	movlb	2	; select bank2
 16504  0DDF  00C6               	movwf	_moveVector_downs^(0+256)
 16505                           
 16506                           ;main.c: 352: doMove();
 16507  0DE0  3189  2188  318D   	fcall	_doMove
 16508                           
 16509                           ;main.c: 353: remainingSteps--;
 16510  0DE3  30FF               	movlw	255
 16511  0DE4  0022               	movlb	2	; select bank2
 16512  0DE5  07C2               	addwf	_remainingSteps^(0+256),f
 16513  0DE6  30FF               	movlw	255
 16514  0DE7  3DC3               	addwfc	(_remainingSteps+1)^(0+256),f
 16515  0DE8  30FF               	movlw	255
 16516  0DE9  3DC4               	addwfc	(_remainingSteps+2)^(0+256),f
 16517  0DEA  30FF               	movlw	255
 16518  0DEB  3DC5               	addwfc	(_remainingSteps+3)^(0+256),f
 16519                           
 16520                           ;main.c: 356: for(j = 0; j<24; j++)
 16521  0DEC  0021               	movlb	1	; select bank1
 16522  0DED  01DC               	clrf	doRelMove@j^(0+128)
 16523  0DEE  01DD               	clrf	(doRelMove@j+1)^(0+128)
 16524  0DEF                     L32:	
 16525  0DEF  085D               	movf	(doRelMove@j+1)^(0+128),w
 16526  0DF0  3A80               	xorlw	128
 16527  0DF1  00CC               	movwf	??_doRelMove^(0+128)
 16528  0DF2  3080               	movlw	128
 16529  0DF3  024C               	subwf	??_doRelMove^(0+128),w
 16530  0DF4  1D03               	skipz
 16531  0DF5  2DF8               	goto	u8465
 16532  0DF6  3018               	movlw	24
 16533  0DF7  025C               	subwf	doRelMove@j^(0+128),w
 16534  0DF8                     u8465:	
 16535  0DF8  1803               	btfsc	3,0
 16536  0DF9  0008               	return
 16537                           
 16538                           ;main.c: 357: currentPositions_steps[j] += (activeMask & (1UL<<j) > 0);
 16539  0DFA  0021               	movlb	1	; select bank1
 16540  0DFB  0863               	movf	_activeMask^(0+128),w
 16541  0DFC  00CC               	movwf	??_doRelMove^(0+128)
 16542  0DFD  0864               	movf	(_activeMask+1)^(0+128),w
 16543  0DFE  00CD               	movwf	(??_doRelMove^(0+128)+1)
 16544  0DFF  0865               	movf	(_activeMask+2)^(0+128),w
 16545  0E00  00CE               	movwf	(??_doRelMove^(0+128)+2)
 16546  0E01  0866               	movf	(_activeMask+3)^(0+128),w
 16547  0E02  00CF               	movwf	(??_doRelMove^(0+128)+3)
 16548  0E03  3001               	movlw	1
 16549  0E04  00D0               	movwf	(??_doRelMove+4)^(0+128)
 16550  0E05  3000               	movlw	0
 16551  0E06  00D1               	movwf	((??_doRelMove+4)^(0+128)+1)
 16552  0E07  3000               	movlw	0
 16553  0E08  00D2               	movwf	((??_doRelMove+4)^(0+128)+2)
 16554  0E09  3000               	movlw	0
 16555  0E0A  00D3               	movwf	((??_doRelMove+4)^(0+128)+3)
 16556  0E0B  0A5C               	incf	doRelMove@j^(0+128),w
 16557  0E0C  2E11               	goto	u8470
 16558  0E0D                     u8475:	
 16559  0E0D  35D0               	lslf	(??_doRelMove+4)^(0+128),f
 16560  0E0E  0DD1               	rlf	((??_doRelMove+4)^(0+128)+1),f
 16561  0E0F  0DD2               	rlf	((??_doRelMove+4)^(0+128)+2),f
 16562  0E10  0DD3               	rlf	((??_doRelMove+4)^(0+128)+3),f
 16563  0E11                     u8470:	
 16564  0E11  0B89               	decfsz	9,f
 16565  0E12  2E0D               	goto	u8475
 16566  0E13  0853               	movf	(??_doRelMove+7)^(0+128),w
 16567  0E14  0452               	iorwf	(??_doRelMove+6)^(0+128),w
 16568  0E15  0451               	iorwf	(??_doRelMove+5)^(0+128),w
 16569  0E16  0450               	iorwf	(??_doRelMove+4)^(0+128),w
 16570  0E17  1903               	btfsc	3,2
 16571  0E18  2E1B               	goto	u8480
 16572  0E19  3001               	movlw	1
 16573  0E1A  2E1C               	goto	u8490
 16574  0E1B                     u8480:	
 16575  0E1B  3000               	movlw	0
 16576  0E1C                     u8490:	
 16577  0E1C  00D4               	movwf	(??_doRelMove+8)^(0+128)
 16578  0E1D  01D5               	clrf	((??_doRelMove+8)^(0+128)+1)
 16579  0E1E  01D6               	clrf	((??_doRelMove+8)^(0+128)+2)
 16580  0E1F  01D7               	clrf	((??_doRelMove+8)^(0+128)+3)
 16581  0E20  0854               	movf	(??_doRelMove+8)^(0+128),w
 16582  0E21  05CC               	andwf	??_doRelMove^(0+128),f
 16583  0E22  0855               	movf	(??_doRelMove+9)^(0+128),w
 16584  0E23  05CD               	andwf	(??_doRelMove^(0+128)+1),f
 16585  0E24  0856               	movf	(??_doRelMove+10)^(0+128),w
 16586  0E25  05CE               	andwf	(??_doRelMove^(0+128)+2),f
 16587  0E26  0857               	movf	(??_doRelMove+11)^(0+128),w
 16588  0E27  05CF               	andwf	(??_doRelMove^(0+128)+3),f
 16589  0E28  085D               	movf	(doRelMove@j+1)^(0+128),w
 16590  0E29  00D9               	movwf	((??_doRelMove+12)^(0+128)+1)
 16591  0E2A  085C               	movf	doRelMove@j^(0+128),w
 16592  0E2B  00D8               	movwf	(??_doRelMove+12)^(0+128)
 16593  0E2C  35D8               	lslf	(??_doRelMove+12)^(0+128),f
 16594  0E2D  0DD9               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16595  0E2E  35D8               	lslf	(??_doRelMove+12)^(0+128),f
 16596  0E2F  0DD9               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16597  0E30  3090               	movlw	144
 16598  0E31  00DA               	movwf	(??_doRelMove+14)^(0+128)
 16599  0E32  3027               	movlw	39
 16600  0E33  00DB               	movwf	((??_doRelMove+14)^(0+128)+1)
 16601  0E34  0858               	movf	(??_doRelMove+12)^(0+128),w
 16602  0E35  075A               	addwf	(??_doRelMove+14)^(0+128),w
 16603  0E36  0086               	movwf	6
 16604  0E37  0859               	movf	(??_doRelMove+13)^(0+128),w
 16605  0E38  3D5B               	addwfc	(??_doRelMove+15)^(0+128),w
 16606  0E39  0087               	movwf	7
 16607  0E3A  084C               	movf	??_doRelMove^(0+128),w
 16608  0E3B  0781               	addwf	1,f
 16609  0E3C  3141               	addfsr 1,1
 16610  0E3D  084D               	movf	(??_doRelMove+1)^(0+128),w
 16611  0E3E  3D81               	addwfc	1,f
 16612  0E3F  3141               	addfsr 1,1
 16613  0E40  084E               	movf	(??_doRelMove+2)^(0+128),w
 16614  0E41  3D81               	addwfc	1,f
 16615  0E42  3141               	addfsr 1,1
 16616  0E43  084F               	movf	(??_doRelMove+3)^(0+128),w
 16617  0E44  3D81               	addwfc	1,f
 16618  0E45  3001               	movlw	1
 16619  0E46  07DC               	addwf	doRelMove@j^(0+128),f
 16620  0E47  3000               	movlw	0
 16621  0E48  3DDD               	addwfc	(doRelMove@j+1)^(0+128),f
 16622  0E49  2DEF               	goto	L32
 16623  0E4A                     l8477:	
 16624                           ;main.c: 359: }
 16625                           
 16626                           
 16627                           ;main.c: 360: else{
 16628                           ;main.c: 361: moveVector_ups = activeMask;
 16629  0E4A  0021               	movlb	1	; select bank1
 16630  0E4B  0866               	movf	(_activeMask+3)^(0+128),w
 16631  0E4C  0020               	movlb	0	; select bank0
 16632  0E4D  00D1               	movwf	_moveVector_ups+3
 16633  0E4E  0021               	movlb	1	; select bank1
 16634  0E4F  0865               	movf	(_activeMask+2)^(0+128),w
 16635  0E50  0020               	movlb	0	; select bank0
 16636  0E51  00D0               	movwf	_moveVector_ups+2
 16637  0E52  0021               	movlb	1	; select bank1
 16638  0E53  0864               	movf	(_activeMask+1)^(0+128),w
 16639  0E54  0020               	movlb	0	; select bank0
 16640  0E55  00CF               	movwf	_moveVector_ups+1
 16641  0E56  0021               	movlb	1	; select bank1
 16642  0E57  0863               	movf	_activeMask^(0+128),w
 16643  0E58  0020               	movlb	0	; select bank0
 16644  0E59  00CE               	movwf	_moveVector_ups
 16645                           
 16646                           ;main.c: 362: moveVector_downs = 0;
 16647  0E5A  3000               	movlw	0
 16648  0E5B  0022               	movlb	2	; select bank2
 16649  0E5C  00C9               	movwf	(_moveVector_downs+3)^(0+256)
 16650  0E5D  3000               	movlw	0
 16651  0E5E  00C8               	movwf	(_moveVector_downs+2)^(0+256)
 16652  0E5F  3000               	movlw	0
 16653  0E60  00C7               	movwf	(_moveVector_downs+1)^(0+256)
 16654  0E61  3000               	movlw	0
 16655  0E62  00C6               	movwf	_moveVector_downs^(0+256)
 16656                           
 16657                           ;main.c: 364: doMove();
 16658  0E63  3189  2188  318D   	fcall	_doMove
 16659                           
 16660                           ;main.c: 365: remainingSteps++;
 16661  0E66  3001               	movlw	1
 16662  0E67  0022               	movlb	2	; select bank2
 16663  0E68  07C2               	addwf	_remainingSteps^(0+256),f
 16664  0E69  3000               	movlw	0
 16665  0E6A  3DC3               	addwfc	(_remainingSteps+1)^(0+256),f
 16666  0E6B  3000               	movlw	0
 16667  0E6C  3DC4               	addwfc	(_remainingSteps+2)^(0+256),f
 16668  0E6D  3000               	movlw	0
 16669  0E6E  3DC5               	addwfc	(_remainingSteps+3)^(0+256),f
 16670                           
 16671                           ;main.c: 366: for(j = 0; j<24; j++)
 16672  0E6F  0021               	movlb	1	; select bank1
 16673  0E70  01DC               	clrf	doRelMove@j^(0+128)
 16674  0E71  01DD               	clrf	(doRelMove@j+1)^(0+128)
 16675  0E72                     L33:	
 16676  0E72  085D               	movf	(doRelMove@j+1)^(0+128),w
 16677  0E73  3A80               	xorlw	128
 16678  0E74  00CC               	movwf	??_doRelMove^(0+128)
 16679  0E75  3080               	movlw	128
 16680  0E76  024C               	subwf	??_doRelMove^(0+128),w
 16681  0E77  1D03               	skipz
 16682  0E78  2E7B               	goto	u8515
 16683  0E79  3018               	movlw	24
 16684  0E7A  025C               	subwf	doRelMove@j^(0+128),w
 16685  0E7B                     u8515:	
 16686  0E7B  1803               	btfsc	3,0
 16687  0E7C  0008               	return
 16688                           
 16689                           ;main.c: 367: currentPositions_steps[j] -= (activeMask & (1UL<<j) > 0);
 16690  0E7D  0021               	movlb	1	; select bank1
 16691  0E7E  0863               	movf	_activeMask^(0+128),w
 16692  0E7F  00CC               	movwf	??_doRelMove^(0+128)
 16693  0E80  0864               	movf	(_activeMask+1)^(0+128),w
 16694  0E81  00CD               	movwf	(??_doRelMove^(0+128)+1)
 16695  0E82  0865               	movf	(_activeMask+2)^(0+128),w
 16696  0E83  00CE               	movwf	(??_doRelMove^(0+128)+2)
 16697  0E84  0866               	movf	(_activeMask+3)^(0+128),w
 16698  0E85  00CF               	movwf	(??_doRelMove^(0+128)+3)
 16699  0E86  3001               	movlw	1
 16700  0E87  00D0               	movwf	(??_doRelMove+4)^(0+128)
 16701  0E88  3000               	movlw	0
 16702  0E89  00D1               	movwf	((??_doRelMove+4)^(0+128)+1)
 16703  0E8A  3000               	movlw	0
 16704  0E8B  00D2               	movwf	((??_doRelMove+4)^(0+128)+2)
 16705  0E8C  3000               	movlw	0
 16706  0E8D  00D3               	movwf	((??_doRelMove+4)^(0+128)+3)
 16707  0E8E  0A5C               	incf	doRelMove@j^(0+128),w
 16708  0E8F  2E94               	goto	u8520
 16709  0E90                     u8525:	
 16710  0E90  35D0               	lslf	(??_doRelMove+4)^(0+128),f
 16711  0E91  0DD1               	rlf	((??_doRelMove+4)^(0+128)+1),f
 16712  0E92  0DD2               	rlf	((??_doRelMove+4)^(0+128)+2),f
 16713  0E93  0DD3               	rlf	((??_doRelMove+4)^(0+128)+3),f
 16714  0E94                     u8520:	
 16715  0E94  0B89               	decfsz	9,f
 16716  0E95  2E90               	goto	u8525
 16717  0E96  0853               	movf	(??_doRelMove+7)^(0+128),w
 16718  0E97  0452               	iorwf	(??_doRelMove+6)^(0+128),w
 16719  0E98  0451               	iorwf	(??_doRelMove+5)^(0+128),w
 16720  0E99  0450               	iorwf	(??_doRelMove+4)^(0+128),w
 16721  0E9A  1903               	btfsc	3,2
 16722  0E9B  2E9E               	goto	u8530
 16723  0E9C  3001               	movlw	1
 16724  0E9D  2E9F               	goto	u8540
 16725  0E9E                     u8530:	
 16726  0E9E  3000               	movlw	0
 16727  0E9F                     u8540:	
 16728  0E9F  00D4               	movwf	(??_doRelMove+8)^(0+128)
 16729  0EA0  01D5               	clrf	((??_doRelMove+8)^(0+128)+1)
 16730  0EA1  01D6               	clrf	((??_doRelMove+8)^(0+128)+2)
 16731  0EA2  01D7               	clrf	((??_doRelMove+8)^(0+128)+3)
 16732  0EA3  0854               	movf	(??_doRelMove+8)^(0+128),w
 16733  0EA4  05CC               	andwf	??_doRelMove^(0+128),f
 16734  0EA5  0855               	movf	(??_doRelMove+9)^(0+128),w
 16735  0EA6  05CD               	andwf	(??_doRelMove^(0+128)+1),f
 16736  0EA7  0856               	movf	(??_doRelMove+10)^(0+128),w
 16737  0EA8  05CE               	andwf	(??_doRelMove^(0+128)+2),f
 16738  0EA9  0857               	movf	(??_doRelMove+11)^(0+128),w
 16739  0EAA  05CF               	andwf	(??_doRelMove^(0+128)+3),f
 16740  0EAB  085D               	movf	(doRelMove@j+1)^(0+128),w
 16741  0EAC  00D9               	movwf	((??_doRelMove+12)^(0+128)+1)
 16742  0EAD  085C               	movf	doRelMove@j^(0+128),w
 16743  0EAE  00D8               	movwf	(??_doRelMove+12)^(0+128)
 16744  0EAF  35D8               	lslf	(??_doRelMove+12)^(0+128),f
 16745  0EB0  0DD9               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16746  0EB1  35D8               	lslf	(??_doRelMove+12)^(0+128),f
 16747  0EB2  0DD9               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16748  0EB3  3090               	movlw	144
 16749  0EB4  00DA               	movwf	(??_doRelMove+14)^(0+128)
 16750  0EB5  3027               	movlw	39
 16751  0EB6  00DB               	movwf	((??_doRelMove+14)^(0+128)+1)
 16752  0EB7  0858               	movf	(??_doRelMove+12)^(0+128),w
 16753  0EB8  075A               	addwf	(??_doRelMove+14)^(0+128),w
 16754  0EB9  0086               	movwf	6
 16755  0EBA  0859               	movf	(??_doRelMove+13)^(0+128),w
 16756  0EBB  3D5B               	addwfc	(??_doRelMove+15)^(0+128),w
 16757  0EBC  0087               	movwf	7
 16758  0EBD  084C               	movf	??_doRelMove^(0+128),w
 16759  0EBE  0281               	subwf	1,f
 16760  0EBF  3141               	addfsr 1,1
 16761  0EC0  084D               	movf	(??_doRelMove+1)^(0+128),w
 16762  0EC1  3B81               	subwfb	1,f
 16763  0EC2  3141               	addfsr 1,1
 16764  0EC3  084E               	movf	(??_doRelMove+2)^(0+128),w
 16765  0EC4  3B81               	subwfb	1,f
 16766  0EC5  3141               	addfsr 1,1
 16767  0EC6  084F               	movf	(??_doRelMove+3)^(0+128),w
 16768  0EC7  3B81               	subwfb	1,f
 16769  0EC8  317D               	addfsr 1,-3
 16770  0EC9  3001               	movlw	1
 16771  0ECA  07DC               	addwf	doRelMove@j^(0+128),f
 16772  0ECB  3000               	movlw	0
 16773  0ECC  3DDD               	addwfc	(doRelMove@j+1)^(0+128),f
 16774  0ECD  2E72               	goto	L33
 16775  0ECE                     __end_of_doRelMove:	
 16776                           
 16777                           	psect	text54
 16778  00C5                     __ptext54:	
 16779 ;; *************** function _doAbsMove *****************
 16780 ;; Defined at:
 16781 ;;		line 307 in file "main.c"
 16782 ;; Parameters:    Size  Location     Type
 16783 ;;		None
 16784 ;; Auto vars:     Size  Location     Type
 16785 ;;  i               2   48[BANK1 ] int 
 16786 ;;  i               2   50[BANK1 ] int 
 16787 ;;  i               2   46[BANK1 ] int 
 16788 ;;  allThere        2   44[BANK1 ] int 
 16789 ;; Return value:  Size  Location     Type
 16790 ;;                  1    wreg      void 
 16791 ;; Registers used:
 16792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16793 ;; Tracked objects:
 16794 ;;		On entry : 0/0
 16795 ;;		On exit  : 0/0
 16796 ;;		Unchanged: 0/0
 16797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16799 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16800 ;;      Temps:          0       0       0       0       0      28       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16801 ;;      Totals:         0       0       8       0       0      28       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16802 ;;Total ram usage:       36 bytes
 16803 ;; Hardware stack levels used:    1
 16804 ;; Hardware stack levels required when called:   16
 16805 ;; This function calls:
 16806 ;;		_doMove
 16807 ;;		_printf
 16808 ;; This function is called by:
 16809 ;;		_main
 16810 ;; This function uses a non-reentrant model
 16811 ;;
 16812                           
 16813                           
 16814                           ;psect for function _doAbsMove
 16815  00C5                     _doAbsMove:	
 16816                           
 16817                           ;main.c: 310: int allThere=1;
 16818                           
 16819                           ;incstack = 0
 16820 ;; hardware stack exceeded
 16821                           ; Regs used in _doAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16822  00C5  3001               	movlw	1
 16823  00C6  0021               	movlb	1	; select bank1
 16824  00C7  00CC               	movwf	doAbsMove@allThere^(0+128)
 16825  00C8  3000               	movlw	0
 16826  00C9  00CD               	movwf	(doAbsMove@allThere^(0+128)+1)
 16827                           
 16828                           ;main.c: 311: for(int i=0;i<24;i++){
 16829  00CA  01CE               	clrf	doAbsMove@i^(0+128)
 16830  00CB  01CF               	clrf	(doAbsMove@i+1)^(0+128)
 16831  00CC  084F               	movf	(doAbsMove@i+1)^(0+128),w
 16832  00CD  3A80               	xorlw	128
 16833  00CE  0024               	movlb	4	; select bank4
 16834  00CF  00C0               	movwf	??_doAbsMove^(0+512)
 16835  00D0  3080               	movlw	128
 16836  00D1  0240               	subwf	??_doAbsMove^(0+512),w
 16837  00D2  1D03               	skipz
 16838  00D3  28D7               	goto	u8565
 16839  00D4  3018               	movlw	24
 16840  00D5  0021               	movlb	1	; select bank1
 16841  00D6  024E               	subwf	doAbsMove@i^(0+128),w
 16842  00D7                     u8565:	
 16843  00D7  1803               	btfsc	3,0
 16844  00D8  295D               	goto	l8511
 16845  00D9                     l8503:	
 16846                           
 16847                           ;main.c: 312: if((activeMask & (1UL << i)) > 0)
 16848  00D9  0021               	movlb	1	; select bank1
 16849  00DA  0863               	movf	_activeMask^(0+128),w
 16850  00DB  0024               	movlb	4	; select bank4
 16851  00DC  00C0               	movwf	??_doAbsMove^(0+512)
 16852  00DD  0021               	movlb	1	; select bank1
 16853  00DE  0864               	movf	(_activeMask+1)^(0+128),w
 16854  00DF  0024               	movlb	4	; select bank4
 16855  00E0  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 16856  00E1  0021               	movlb	1	; select bank1
 16857  00E2  0865               	movf	(_activeMask+2)^(0+128),w
 16858  00E3  0024               	movlb	4	; select bank4
 16859  00E4  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 16860  00E5  0021               	movlb	1	; select bank1
 16861  00E6  0866               	movf	(_activeMask+3)^(0+128),w
 16862  00E7  0024               	movlb	4	; select bank4
 16863  00E8  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 16864  00E9  3001               	movlw	1
 16865  00EA  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 16866  00EB  3000               	movlw	0
 16867  00EC  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 16868  00ED  3000               	movlw	0
 16869  00EE  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 16870  00EF  3000               	movlw	0
 16871  00F0  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 16872  00F1  0021               	movlb	1	; select bank1
 16873  00F2  0A4E               	incf	doAbsMove@i^(0+128),w
 16874  00F3  0024               	movlb	4	; select bank4
 16875  00F4  28F9               	goto	u8570
 16876  00F5                     u8575:	
 16877  00F5  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 16878  00F6  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 16879  00F7  0DC6               	rlf	((??_doAbsMove+4)^(0+512)+2),f
 16880  00F8  0DC7               	rlf	((??_doAbsMove+4)^(0+512)+3),f
 16881  00F9                     u8570:	
 16882  00F9  0B89               	decfsz	9,f
 16883  00FA  28F5               	goto	u8575
 16884  00FB  0844               	movf	(??_doAbsMove+4)^(0+512),w
 16885  00FC  05C0               	andwf	??_doAbsMove^(0+512),f
 16886  00FD  0845               	movf	(??_doAbsMove+5)^(0+512),w
 16887  00FE  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 16888  00FF  0846               	movf	(??_doAbsMove+6)^(0+512),w
 16889  0100  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 16890  0101  0847               	movf	(??_doAbsMove+7)^(0+512),w
 16891  0102  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 16892  0103  0843               	movf	(??_doAbsMove+3)^(0+512),w
 16893  0104  0442               	iorwf	(??_doAbsMove+2)^(0+512),w
 16894  0105  0441               	iorwf	(??_doAbsMove+1)^(0+512),w
 16895  0106  0440               	iorwf	??_doAbsMove^(0+512),w
 16896  0107  1903               	skipnz
 16897  0108  294B               	goto	l8507
 16898                           
 16899                           ;main.c: 313: allThere &= (currentPositions_steps[i] == absCommand);
 16900  0109  0021               	movlb	1	; select bank1
 16901  010A  084F               	movf	(doAbsMove@i+1)^(0+128),w
 16902  010B  0024               	movlb	4	; select bank4
 16903  010C  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 16904  010D  0021               	movlb	1	; select bank1
 16905  010E  084E               	movf	doAbsMove@i^(0+128),w
 16906  010F  0024               	movlb	4	; select bank4
 16907  0110  00C0               	movwf	??_doAbsMove^(0+512)
 16908  0111  35C0               	lslf	??_doAbsMove^(0+512),f
 16909  0112  0DC1               	rlf	(??_doAbsMove^(0+512)+1),f
 16910  0113  35C0               	lslf	??_doAbsMove^(0+512),f
 16911  0114  0DC1               	rlf	(??_doAbsMove^(0+512)+1),f
 16912  0115  3090               	movlw	144
 16913  0116  00C2               	movwf	(??_doAbsMove+2)^(0+512)
 16914  0117  3027               	movlw	39
 16915  0118  00C3               	movwf	((??_doAbsMove+2)^(0+512)+1)
 16916  0119  0840               	movf	??_doAbsMove^(0+512),w
 16917  011A  0742               	addwf	(??_doAbsMove+2)^(0+512),w
 16918  011B  0086               	movwf	6
 16919  011C  0841               	movf	(??_doAbsMove+1)^(0+512),w
 16920  011D  3D43               	addwfc	(??_doAbsMove+3)^(0+512),w
 16921  011E  0087               	movwf	7
 16922  011F  3F40               	moviw [0]fsr1
 16923  0120  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 16924  0121  3F41               	moviw [1]fsr1
 16925  0122  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 16926  0123  3F42               	moviw [2]fsr1
 16927  0124  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 16928  0125  3F43               	moviw [3]fsr1
 16929  0126  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 16930  0127  0022               	movlb	2	; select bank2
 16931  0128  0841               	movf	(_absCommand+3)^(0+256),w
 16932  0129  0024               	movlb	4	; select bank4
 16933  012A  0647               	xorwf	(??_doAbsMove+7)^(0+512),w
 16934  012B  1D03               	skipz
 16935  012C  293D               	goto	u8595
 16936  012D  0022               	movlb	2	; select bank2
 16937  012E  0840               	movf	(_absCommand+2)^(0+256),w
 16938  012F  0024               	movlb	4	; select bank4
 16939  0130  0646               	xorwf	(??_doAbsMove+6)^(0+512),w
 16940  0131  1D03               	skipz
 16941  0132  293D               	goto	u8595
 16942  0133  0022               	movlb	2	; select bank2
 16943  0134  083F               	movf	(_absCommand+1)^(0+256),w
 16944  0135  0024               	movlb	4	; select bank4
 16945  0136  0645               	xorwf	(??_doAbsMove+5)^(0+512),w
 16946  0137  1D03               	skipz
 16947  0138  293D               	goto	u8595
 16948  0139  0022               	movlb	2	; select bank2
 16949  013A  083E               	movf	_absCommand^(0+256),w
 16950  013B  0024               	movlb	4	; select bank4
 16951  013C  0644               	xorwf	(??_doAbsMove+4)^(0+512),w
 16952  013D                     u8595:	
 16953  013D  1D03               	btfss	3,2
 16954  013E  2941               	goto	u8590
 16955  013F  3001               	movlw	1
 16956  0140  2942               	goto	u8600
 16957  0141                     u8590:	
 16958  0141  3000               	movlw	0
 16959  0142                     u8600:	
 16960  0142  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 16961  0143  01C9               	clrf	((??_doAbsMove+8)^(0+512)+1)
 16962  0144  0848               	movf	(??_doAbsMove+8)^(0+512),w
 16963  0145  0021               	movlb	1	; select bank1
 16964  0146  05CC               	andwf	doAbsMove@allThere^(0+128),f
 16965  0147  0024               	movlb	4	; select bank4
 16966  0148  0849               	movf	(??_doAbsMove+9)^(0+512),w
 16967  0149  0021               	movlb	1	; select bank1
 16968  014A  05CD               	andwf	(doAbsMove@allThere+1)^(0+128),f
 16969  014B                     l8507:	
 16970  014B  3001               	movlw	1
 16971  014C  0021               	movlb	1	; select bank1
 16972  014D  07CE               	addwf	doAbsMove@i^(0+128),f
 16973  014E  3000               	movlw	0
 16974  014F  3DCF               	addwfc	(doAbsMove@i+1)^(0+128),f
 16975  0150  084F               	movf	(doAbsMove@i+1)^(0+128),w
 16976  0151  3A80               	xorlw	128
 16977  0152  0024               	movlb	4	; select bank4
 16978  0153  00C0               	movwf	??_doAbsMove^(0+512)
 16979  0154  3080               	movlw	128
 16980  0155  0240               	subwf	??_doAbsMove^(0+512),w
 16981  0156  1D03               	skipz
 16982  0157  295B               	goto	u8615
 16983  0158  3018               	movlw	24
 16984  0159  0021               	movlb	1	; select bank1
 16985  015A  024E               	subwf	doAbsMove@i^(0+128),w
 16986  015B                     u8615:	
 16987  015B  1C03               	skipc
 16988  015C  28D9               	goto	l8503
 16989  015D                     l8511:	
 16990                           
 16991                           ;main.c: 314: }
 16992                           ;main.c: 316: if(allThere){
 16993  015D  0021               	movlb	1	; select bank1
 16994  015E  084C               	movf	doAbsMove@allThere^(0+128),w
 16995  015F  044D               	iorwf	(doAbsMove@allThere+1)^(0+128),w
 16996  0160  1903               	btfsc	3,2
 16997  0161  297C               	goto	l8525
 16998                           
 16999                           ;main.c: 317: printf("abs: all there\n");
 17000  0162  3010               	movlw	low (STR_10| (0+32768))
 17001  0163  00A0               	movwf	printf@f^(0+128)
 17002  0164  30A9               	movlw	high (STR_10| (0+32768))
 17003  0165  00A1               	movwf	(printf@f^(0+128)+1)
 17004  0166  318E  26CE         	fcall	_printf
 17005                           
 17006                           ;main.c: 318: motionType = NONE;
 17007  0168  0020               	movlb	0	; select bank0
 17008  0169  01D5               	clrf	_motionType
 17009                           
 17010                           ;main.c: 319: moveVector_ups = 0;
 17011  016A  3000               	movlw	0
 17012  016B  00D1               	movwf	_moveVector_ups+3
 17013  016C  3000               	movlw	0
 17014  016D  00D0               	movwf	_moveVector_ups+2
 17015  016E  3000               	movlw	0
 17016  016F  00CF               	movwf	_moveVector_ups+1
 17017  0170  3000               	movlw	0
 17018  0171  00CE               	movwf	_moveVector_ups
 17019                           
 17020                           ;main.c: 320: moveVector_downs = 0;
 17021  0172  3000               	movlw	0
 17022  0173  0022               	movlb	2	; select bank2
 17023  0174  00C9               	movwf	(_moveVector_downs+3)^(0+256)
 17024  0175  3000               	movlw	0
 17025  0176  00C8               	movwf	(_moveVector_downs+2)^(0+256)
 17026  0177  3000               	movlw	0
 17027  0178  00C7               	movwf	(_moveVector_downs+1)^(0+256)
 17028  0179  3000               	movlw	0
 17029  017A  00C6               	movwf	_moveVector_downs^(0+256)
 17030                           
 17031                           ;main.c: 322: }
 17032                           
 17033                           ;main.c: 321: return;
 17034  017B  0008               	return
 17035  017C                     l8525:	
 17036                           
 17037                           ;main.c: 323: else{
 17038                           ;main.c: 324: for(int i=0;i<24;i++){
 17039  017C  0021               	movlb	1	; select bank1
 17040  017D  01D2               	clrf	doAbsMove@i_1582^(0+128)
 17041  017E  01D3               	clrf	(doAbsMove@i_1582+1)^(0+128)
 17042  017F  0853               	movf	(doAbsMove@i_1582+1)^(0+128),w
 17043  0180  3A80               	xorlw	128
 17044  0181  0024               	movlb	4	; select bank4
 17045  0182  00C0               	movwf	??_doAbsMove^(0+512)
 17046  0183  3080               	movlw	128
 17047  0184  0240               	subwf	??_doAbsMove^(0+512),w
 17048  0185  1D03               	skipz
 17049  0186  298A               	goto	u8635
 17050  0187  3018               	movlw	24
 17051  0188  0021               	movlb	1	; select bank1
 17052  0189  0252               	subwf	doAbsMove@i_1582^(0+128),w
 17053  018A                     u8635:	
 17054  018A  1803               	btfsc	3,0
 17055  018B  2AC2               	goto	l8537
 17056  018C                     l8531:	
 17057                           
 17058                           ;main.c: 326: moveVector_ups |= (activeMask & (1UL << i)) & ((currentPositions_steps[i] 
      +                          > absCommand)<<i);
 17059  018C  0021               	movlb	1	; select bank1
 17060  018D  0863               	movf	_activeMask^(0+128),w
 17061  018E  0024               	movlb	4	; select bank4
 17062  018F  00C0               	movwf	??_doAbsMove^(0+512)
 17063  0190  0021               	movlb	1	; select bank1
 17064  0191  0864               	movf	(_activeMask+1)^(0+128),w
 17065  0192  0024               	movlb	4	; select bank4
 17066  0193  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 17067  0194  0021               	movlb	1	; select bank1
 17068  0195  0865               	movf	(_activeMask+2)^(0+128),w
 17069  0196  0024               	movlb	4	; select bank4
 17070  0197  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 17071  0198  0021               	movlb	1	; select bank1
 17072  0199  0866               	movf	(_activeMask+3)^(0+128),w
 17073  019A  0024               	movlb	4	; select bank4
 17074  019B  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 17075  019C  0021               	movlb	1	; select bank1
 17076  019D  0853               	movf	(doAbsMove@i_1582+1)^(0+128),w
 17077  019E  0024               	movlb	4	; select bank4
 17078  019F  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17079  01A0  0021               	movlb	1	; select bank1
 17080  01A1  0852               	movf	doAbsMove@i_1582^(0+128),w
 17081  01A2  0024               	movlb	4	; select bank4
 17082  01A3  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17083  01A4  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17084  01A5  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17085  01A6  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17086  01A7  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17087  01A8  3090               	movlw	144
 17088  01A9  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 17089  01AA  3027               	movlw	39
 17090  01AB  00C7               	movwf	((??_doAbsMove+6)^(0+512)+1)
 17091  01AC  0844               	movf	(??_doAbsMove+4)^(0+512),w
 17092  01AD  0746               	addwf	(??_doAbsMove+6)^(0+512),w
 17093  01AE  0086               	movwf	6
 17094  01AF  0845               	movf	(??_doAbsMove+5)^(0+512),w
 17095  01B0  3D47               	addwfc	(??_doAbsMove+7)^(0+512),w
 17096  01B1  0087               	movwf	7
 17097  01B2  3F40               	moviw [0]fsr1
 17098  01B3  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 17099  01B4  3F41               	moviw [1]fsr1
 17100  01B5  00C9               	movwf	((??_doAbsMove+8)^(0+512)+1)
 17101  01B6  3F42               	moviw [2]fsr1
 17102  01B7  00CA               	movwf	((??_doAbsMove+8)^(0+512)+2)
 17103  01B8  3F43               	moviw [3]fsr1
 17104  01B9  00CB               	movwf	((??_doAbsMove+8)^(0+512)+3)
 17105  01BA  0022               	movlb	2	; select bank2
 17106  01BB  0841               	movf	(_absCommand+3)^(0+256),w
 17107  01BC  3A80               	xorlw	128
 17108  01BD  0024               	movlb	4	; select bank4
 17109  01BE  00CC               	movwf	(??_doAbsMove+12)^(0+512)
 17110  01BF  084B               	movf	(??_doAbsMove+11)^(0+512),w
 17111  01C0  3A80               	xorlw	128
 17112  01C1  024C               	subwf	(??_doAbsMove+12)^(0+512),w
 17113  01C2  0022               	movlb	2	; select bank2
 17114  01C3  1D03               	skipz
 17115  01C4  29D5               	goto	u8643
 17116  01C5  0024               	movlb	4	; select bank4
 17117  01C6  084A               	movf	(??_doAbsMove+10)^(0+512),w
 17118  01C7  0022               	movlb	2	; select bank2
 17119  01C8  0240               	subwf	(_absCommand+2)^(0+256),w
 17120  01C9  1D03               	skipz
 17121  01CA  29D5               	goto	u8643
 17122  01CB  0024               	movlb	4	; select bank4
 17123  01CC  0849               	movf	(??_doAbsMove+9)^(0+512),w
 17124  01CD  0022               	movlb	2	; select bank2
 17125  01CE  023F               	subwf	(_absCommand+1)^(0+256),w
 17126  01CF  1D03               	skipz
 17127  01D0  29D5               	goto	u8643
 17128  01D1  0024               	movlb	4	; select bank4
 17129  01D2  0848               	movf	(??_doAbsMove+8)^(0+512),w
 17130  01D3  0022               	movlb	2	; select bank2
 17131  01D4  023E               	subwf	_absCommand^(0+256),w
 17132  01D5                     u8643:	
 17133  01D5  1803               	btfsc	3,0
 17134  01D6  29D9               	goto	u8640
 17135  01D7  3001               	movlw	1
 17136  01D8  29DA               	goto	u8650
 17137  01D9                     u8640:	
 17138  01D9  3000               	movlw	0
 17139  01DA                     u8650:	
 17140  01DA  0024               	movlb	4	; select bank4
 17141  01DB  00CD               	movwf	(??_doAbsMove+13)^(0+512)
 17142  01DC  01CE               	clrf	((??_doAbsMove+13)^(0+512)+1)
 17143  01DD  0021               	movlb	1	; select bank1
 17144  01DE  0A52               	incf	doAbsMove@i_1582^(0+128),w
 17145  01DF  0024               	movlb	4	; select bank4
 17146  01E0  29E3               	goto	u8664
 17147  01E1                     u8665:	
 17148  01E1  35CD               	lslf	(??_doAbsMove+13)^(0+512),f
 17149  01E2  0DCE               	rlf	((??_doAbsMove+13)^(0+512)+1),f
 17150  01E3                     u8664:	
 17151  01E3  0B89               	decfsz	9,f
 17152  01E4  29E1               	goto	u8665
 17153  01E5  084D               	movf	(??_doAbsMove+13)^(0+512),w
 17154  01E6  00CF               	movwf	(??_doAbsMove+15)^(0+512)
 17155  01E7  084E               	movf	(??_doAbsMove+14)^(0+512),w
 17156  01E8  00D0               	movwf	((??_doAbsMove+15)^(0+512)+1)
 17157  01E9  3000               	movlw	0
 17158  01EA  1BD0               	btfsc	((??_doAbsMove+15)^(0+512)+1),7
 17159  01EB  30FF               	movlw	255
 17160  01EC  00D1               	movwf	((??_doAbsMove+15)^(0+512)+2)
 17161  01ED  00D2               	movwf	((??_doAbsMove+15)^(0+512)+3)
 17162  01EE  3001               	movlw	1
 17163  01EF  00D3               	movwf	(??_doAbsMove+19)^(0+512)
 17164  01F0  3000               	movlw	0
 17165  01F1  00D4               	movwf	((??_doAbsMove+19)^(0+512)+1)
 17166  01F2  3000               	movlw	0
 17167  01F3  00D5               	movwf	((??_doAbsMove+19)^(0+512)+2)
 17168  01F4  3000               	movlw	0
 17169  01F5  00D6               	movwf	((??_doAbsMove+19)^(0+512)+3)
 17170  01F6  0021               	movlb	1	; select bank1
 17171  01F7  0A52               	incf	doAbsMove@i_1582^(0+128),w
 17172  01F8  0024               	movlb	4	; select bank4
 17173  01F9  29FE               	goto	u8670
 17174  01FA                     u8675:	
 17175  01FA  35D3               	lslf	(??_doAbsMove+19)^(0+512),f
 17176  01FB  0DD4               	rlf	((??_doAbsMove+19)^(0+512)+1),f
 17177  01FC  0DD5               	rlf	((??_doAbsMove+19)^(0+512)+2),f
 17178  01FD  0DD6               	rlf	((??_doAbsMove+19)^(0+512)+3),f
 17179  01FE                     u8670:	
 17180  01FE  0B89               	decfsz	9,f
 17181  01FF  29FA               	goto	u8675
 17182  0200  0853               	movf	(??_doAbsMove+19)^(0+512),w
 17183  0201  05CF               	andwf	(??_doAbsMove+15)^(0+512),f
 17184  0202  0854               	movf	(??_doAbsMove+20)^(0+512),w
 17185  0203  05D0               	andwf	((??_doAbsMove+15)^(0+512)+1),f
 17186  0204  0855               	movf	(??_doAbsMove+21)^(0+512),w
 17187  0205  05D1               	andwf	((??_doAbsMove+15)^(0+512)+2),f
 17188  0206  0856               	movf	(??_doAbsMove+22)^(0+512),w
 17189  0207  05D2               	andwf	((??_doAbsMove+15)^(0+512)+3),f
 17190  0208  084F               	movf	(??_doAbsMove+15)^(0+512),w
 17191  0209  05C0               	andwf	??_doAbsMove^(0+512),f
 17192  020A  0850               	movf	(??_doAbsMove+16)^(0+512),w
 17193  020B  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17194  020C  0851               	movf	(??_doAbsMove+17)^(0+512),w
 17195  020D  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17196  020E  0852               	movf	(??_doAbsMove+18)^(0+512),w
 17197  020F  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17198  0210  0840               	movf	??_doAbsMove^(0+512),w
 17199  0211  0020               	movlb	0	; select bank0
 17200  0212  04CE               	iorwf	_moveVector_ups,f
 17201  0213  0024               	movlb	4	; select bank4
 17202  0214  0841               	movf	(??_doAbsMove+1)^(0+512),w
 17203  0215  0020               	movlb	0	; select bank0
 17204  0216  04CF               	iorwf	_moveVector_ups+1,f
 17205  0217  0024               	movlb	4	; select bank4
 17206  0218  0842               	movf	(??_doAbsMove+2)^(0+512),w
 17207  0219  0020               	movlb	0	; select bank0
 17208  021A  04D0               	iorwf	_moveVector_ups+2,f
 17209  021B  0024               	movlb	4	; select bank4
 17210  021C  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17211  021D  0020               	movlb	0	; select bank0
 17212  021E  04D1               	iorwf	_moveVector_ups+3,f
 17213                           
 17214                           ;main.c: 327: moveVector_downs |= (activeMask & (1UL << i)) & ((currentPositions_steps[i
      +                          ] < absCommand)<<i);
 17215  021F  0021               	movlb	1	; select bank1
 17216  0220  0863               	movf	_activeMask^(0+128),w
 17217  0221  0024               	movlb	4	; select bank4
 17218  0222  00C0               	movwf	??_doAbsMove^(0+512)
 17219  0223  0021               	movlb	1	; select bank1
 17220  0224  0864               	movf	(_activeMask+1)^(0+128),w
 17221  0225  0024               	movlb	4	; select bank4
 17222  0226  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 17223  0227  0021               	movlb	1	; select bank1
 17224  0228  0865               	movf	(_activeMask+2)^(0+128),w
 17225  0229  0024               	movlb	4	; select bank4
 17226  022A  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 17227  022B  0021               	movlb	1	; select bank1
 17228  022C  0866               	movf	(_activeMask+3)^(0+128),w
 17229  022D  0024               	movlb	4	; select bank4
 17230  022E  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 17231  022F  0021               	movlb	1	; select bank1
 17232  0230  0853               	movf	(doAbsMove@i_1582+1)^(0+128),w
 17233  0231  0024               	movlb	4	; select bank4
 17234  0232  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17235  0233  0021               	movlb	1	; select bank1
 17236  0234  0852               	movf	doAbsMove@i_1582^(0+128),w
 17237  0235  0024               	movlb	4	; select bank4
 17238  0236  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17239  0237  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17240  0238  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17241  0239  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17242  023A  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17243  023B  3090               	movlw	144
 17244  023C  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 17245  023D  3027               	movlw	39
 17246  023E  00C7               	movwf	((??_doAbsMove+6)^(0+512)+1)
 17247  023F  0844               	movf	(??_doAbsMove+4)^(0+512),w
 17248  0240  0746               	addwf	(??_doAbsMove+6)^(0+512),w
 17249  0241  0086               	movwf	6
 17250  0242  0845               	movf	(??_doAbsMove+5)^(0+512),w
 17251  0243  3D47               	addwfc	(??_doAbsMove+7)^(0+512),w
 17252  0244  0087               	movwf	7
 17253  0245  3F40               	moviw [0]fsr1
 17254  0246  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 17255  0247  3F41               	moviw [1]fsr1
 17256  0248  00C9               	movwf	((??_doAbsMove+8)^(0+512)+1)
 17257  0249  3F42               	moviw [2]fsr1
 17258  024A  00CA               	movwf	((??_doAbsMove+8)^(0+512)+2)
 17259  024B  3F43               	moviw [3]fsr1
 17260  024C  00CB               	movwf	((??_doAbsMove+8)^(0+512)+3)
 17261  024D  084B               	movf	(??_doAbsMove+11)^(0+512),w
 17262  024E  3A80               	xorlw	128
 17263  024F  00CC               	movwf	(??_doAbsMove+12)^(0+512)
 17264  0250  0022               	movlb	2	; select bank2
 17265  0251  0841               	movf	(_absCommand+3)^(0+256),w
 17266  0252  3A80               	xorlw	128
 17267  0253  0024               	movlb	4	; select bank4
 17268  0254  024C               	subwf	(??_doAbsMove+12)^(0+512),w
 17269  0255  1D03               	skipz
 17270  0256  2A67               	goto	u8683
 17271  0257  0022               	movlb	2	; select bank2
 17272  0258  0840               	movf	(_absCommand+2)^(0+256),w
 17273  0259  0024               	movlb	4	; select bank4
 17274  025A  024A               	subwf	(??_doAbsMove+10)^(0+512),w
 17275  025B  1D03               	skipz
 17276  025C  2A67               	goto	u8683
 17277  025D  0022               	movlb	2	; select bank2
 17278  025E  083F               	movf	(_absCommand+1)^(0+256),w
 17279  025F  0024               	movlb	4	; select bank4
 17280  0260  0249               	subwf	(??_doAbsMove+9)^(0+512),w
 17281  0261  1D03               	skipz
 17282  0262  2A67               	goto	u8683
 17283  0263  0022               	movlb	2	; select bank2
 17284  0264  083E               	movf	_absCommand^(0+256),w
 17285  0265  0024               	movlb	4	; select bank4
 17286  0266  0248               	subwf	(??_doAbsMove+8)^(0+512),w
 17287  0267                     u8683:	
 17288  0267  1803               	btfsc	3,0
 17289  0268  2A6B               	goto	u8680
 17290  0269  3001               	movlw	1
 17291  026A  2A6C               	goto	u8690
 17292  026B                     u8680:	
 17293  026B  3000               	movlw	0
 17294  026C                     u8690:	
 17295  026C  00CD               	movwf	(??_doAbsMove+13)^(0+512)
 17296  026D  01CE               	clrf	((??_doAbsMove+13)^(0+512)+1)
 17297  026E  0021               	movlb	1	; select bank1
 17298  026F  0A52               	incf	doAbsMove@i_1582^(0+128),w
 17299  0270  0024               	movlb	4	; select bank4
 17300  0271  2A74               	goto	u8704
 17301  0272                     u8705:	
 17302  0272  35CD               	lslf	(??_doAbsMove+13)^(0+512),f
 17303  0273  0DCE               	rlf	((??_doAbsMove+13)^(0+512)+1),f
 17304  0274                     u8704:	
 17305  0274  0B89               	decfsz	9,f
 17306  0275  2A72               	goto	u8705
 17307  0276  084D               	movf	(??_doAbsMove+13)^(0+512),w
 17308  0277  00CF               	movwf	(??_doAbsMove+15)^(0+512)
 17309  0278  084E               	movf	(??_doAbsMove+14)^(0+512),w
 17310  0279  00D0               	movwf	((??_doAbsMove+15)^(0+512)+1)
 17311  027A  3000               	movlw	0
 17312  027B  1BD0               	btfsc	((??_doAbsMove+15)^(0+512)+1),7
 17313  027C  30FF               	movlw	255
 17314  027D  00D1               	movwf	((??_doAbsMove+15)^(0+512)+2)
 17315  027E  00D2               	movwf	((??_doAbsMove+15)^(0+512)+3)
 17316  027F  3001               	movlw	1
 17317  0280  00D3               	movwf	(??_doAbsMove+19)^(0+512)
 17318  0281  3000               	movlw	0
 17319  0282  00D4               	movwf	((??_doAbsMove+19)^(0+512)+1)
 17320  0283  3000               	movlw	0
 17321  0284  00D5               	movwf	((??_doAbsMove+19)^(0+512)+2)
 17322  0285  3000               	movlw	0
 17323  0286  00D6               	movwf	((??_doAbsMove+19)^(0+512)+3)
 17324  0287  0021               	movlb	1	; select bank1
 17325  0288  0A52               	incf	doAbsMove@i_1582^(0+128),w
 17326  0289  0024               	movlb	4	; select bank4
 17327  028A  2A8F               	goto	u8710
 17328  028B                     u8715:	
 17329  028B  35D3               	lslf	(??_doAbsMove+19)^(0+512),f
 17330  028C  0DD4               	rlf	((??_doAbsMove+19)^(0+512)+1),f
 17331  028D  0DD5               	rlf	((??_doAbsMove+19)^(0+512)+2),f
 17332  028E  0DD6               	rlf	((??_doAbsMove+19)^(0+512)+3),f
 17333  028F                     u8710:	
 17334  028F  0B89               	decfsz	9,f
 17335  0290  2A8B               	goto	u8715
 17336  0291  0853               	movf	(??_doAbsMove+19)^(0+512),w
 17337  0292  05CF               	andwf	(??_doAbsMove+15)^(0+512),f
 17338  0293  0854               	movf	(??_doAbsMove+20)^(0+512),w
 17339  0294  05D0               	andwf	((??_doAbsMove+15)^(0+512)+1),f
 17340  0295  0855               	movf	(??_doAbsMove+21)^(0+512),w
 17341  0296  05D1               	andwf	((??_doAbsMove+15)^(0+512)+2),f
 17342  0297  0856               	movf	(??_doAbsMove+22)^(0+512),w
 17343  0298  05D2               	andwf	((??_doAbsMove+15)^(0+512)+3),f
 17344  0299  084F               	movf	(??_doAbsMove+15)^(0+512),w
 17345  029A  05C0               	andwf	??_doAbsMove^(0+512),f
 17346  029B  0850               	movf	(??_doAbsMove+16)^(0+512),w
 17347  029C  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17348  029D  0851               	movf	(??_doAbsMove+17)^(0+512),w
 17349  029E  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17350  029F  0852               	movf	(??_doAbsMove+18)^(0+512),w
 17351  02A0  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17352  02A1  0840               	movf	??_doAbsMove^(0+512),w
 17353  02A2  0022               	movlb	2	; select bank2
 17354  02A3  04C6               	iorwf	_moveVector_downs^(0+256),f
 17355  02A4  0024               	movlb	4	; select bank4
 17356  02A5  0841               	movf	(??_doAbsMove+1)^(0+512),w
 17357  02A6  0022               	movlb	2	; select bank2
 17358  02A7  04C7               	iorwf	(_moveVector_downs+1)^(0+256),f
 17359  02A8  0024               	movlb	4	; select bank4
 17360  02A9  0842               	movf	(??_doAbsMove+2)^(0+512),w
 17361  02AA  0022               	movlb	2	; select bank2
 17362  02AB  04C8               	iorwf	(_moveVector_downs+2)^(0+256),f
 17363  02AC  0024               	movlb	4	; select bank4
 17364  02AD  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17365  02AE  0022               	movlb	2	; select bank2
 17366  02AF  04C9               	iorwf	(_moveVector_downs+3)^(0+256),f
 17367  02B0  3001               	movlw	1
 17368  02B1  0021               	movlb	1	; select bank1
 17369  02B2  07D2               	addwf	doAbsMove@i_1582^(0+128),f
 17370  02B3  3000               	movlw	0
 17371  02B4  3DD3               	addwfc	(doAbsMove@i_1582+1)^(0+128),f
 17372  02B5  0853               	movf	(doAbsMove@i_1582+1)^(0+128),w
 17373  02B6  3A80               	xorlw	128
 17374  02B7  0024               	movlb	4	; select bank4
 17375  02B8  00C0               	movwf	??_doAbsMove^(0+512)
 17376  02B9  3080               	movlw	128
 17377  02BA  0240               	subwf	??_doAbsMove^(0+512),w
 17378  02BB  1D03               	skipz
 17379  02BC  2AC0               	goto	u8725
 17380  02BD  3018               	movlw	24
 17381  02BE  0021               	movlb	1	; select bank1
 17382  02BF  0252               	subwf	doAbsMove@i_1582^(0+128),w
 17383  02C0                     u8725:	
 17384  02C0  1C03               	skipc
 17385  02C1  298C               	goto	l8531
 17386  02C2                     l8537:	
 17387                           
 17388                           ;main.c: 329: }
 17389                           ;main.c: 330: doMove();
 17390  02C2  3189  2188  3180   	fcall	_doMove
 17391                           
 17392                           ;main.c: 332: for(int i=0;i<24;i++)
 17393  02C5  0021               	movlb	1	; select bank1
 17394  02C6  01D0               	clrf	doAbsMove@i_1584^(0+128)
 17395  02C7  01D1               	clrf	(doAbsMove@i_1584+1)^(0+128)
 17396  02C8                     L34:	
 17397  02C8  0851               	movf	(doAbsMove@i_1584+1)^(0+128),w
 17398  02C9  3A80               	xorlw	128
 17399  02CA  0024               	movlb	4	; select bank4
 17400  02CB  00C0               	movwf	??_doAbsMove^(0+512)
 17401  02CC  3080               	movlw	128
 17402  02CD  0240               	subwf	??_doAbsMove^(0+512),w
 17403  02CE  1D03               	skipz
 17404  02CF  2AD3               	goto	u8735
 17405  02D0  3018               	movlw	24
 17406  02D1  0021               	movlb	1	; select bank1
 17407  02D2  0250               	subwf	doAbsMove@i_1584^(0+128),w
 17408  02D3                     u8735:	
 17409  02D3  1803               	btfsc	3,0
 17410  02D4  0008               	return
 17411                           
 17412                           ;main.c: 333: currentPositions_steps[i] += ((moveVector_downs & (1UL << i)) > 0) - ((mov
      +                          eVector_ups & (1UL << i)) > 0);
 17413  02D5  0020               	movlb	0	; select bank0
 17414  02D6  084E               	movf	_moveVector_ups,w
 17415  02D7  0024               	movlb	4	; select bank4
 17416  02D8  00C0               	movwf	??_doAbsMove^(0+512)
 17417  02D9  0020               	movlb	0	; select bank0
 17418  02DA  084F               	movf	_moveVector_ups+1,w
 17419  02DB  0024               	movlb	4	; select bank4
 17420  02DC  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 17421  02DD  0020               	movlb	0	; select bank0
 17422  02DE  0850               	movf	_moveVector_ups+2,w
 17423  02DF  0024               	movlb	4	; select bank4
 17424  02E0  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 17425  02E1  0020               	movlb	0	; select bank0
 17426  02E2  0851               	movf	_moveVector_ups+3,w
 17427  02E3  0024               	movlb	4	; select bank4
 17428  02E4  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 17429  02E5  3001               	movlw	1
 17430  02E6  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17431  02E7  3000               	movlw	0
 17432  02E8  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17433  02E9  3000               	movlw	0
 17434  02EA  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 17435  02EB  3000               	movlw	0
 17436  02EC  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 17437  02ED  0021               	movlb	1	; select bank1
 17438  02EE  0A50               	incf	doAbsMove@i_1584^(0+128),w
 17439  02EF  0024               	movlb	4	; select bank4
 17440  02F0  2AF5               	goto	u8740
 17441  02F1                     u8745:	
 17442  02F1  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17443  02F2  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17444  02F3  0DC6               	rlf	((??_doAbsMove+4)^(0+512)+2),f
 17445  02F4  0DC7               	rlf	((??_doAbsMove+4)^(0+512)+3),f
 17446  02F5                     u8740:	
 17447  02F5  0B89               	decfsz	9,f
 17448  02F6  2AF1               	goto	u8745
 17449  02F7  0844               	movf	(??_doAbsMove+4)^(0+512),w
 17450  02F8  05C0               	andwf	??_doAbsMove^(0+512),f
 17451  02F9  0845               	movf	(??_doAbsMove+5)^(0+512),w
 17452  02FA  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17453  02FB  0846               	movf	(??_doAbsMove+6)^(0+512),w
 17454  02FC  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17455  02FD  0847               	movf	(??_doAbsMove+7)^(0+512),w
 17456  02FE  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17457  02FF  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17458  0300  0442               	iorwf	(??_doAbsMove+2)^(0+512),w
 17459  0301  0441               	iorwf	(??_doAbsMove+1)^(0+512),w
 17460  0302  0440               	iorwf	??_doAbsMove^(0+512),w
 17461  0303  1903               	btfsc	3,2
 17462  0304  2B07               	goto	u8750
 17463  0305  3001               	movlw	1
 17464  0306  2B08               	goto	u8760
 17465  0307                     u8750:	
 17466  0307  3000               	movlw	0
 17467  0308                     u8760:	
 17468  0308  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 17469  0309  01C9               	clrf	((??_doAbsMove+8)^(0+512)+1)
 17470  030A  09C8               	comf	(??_doAbsMove+8)^(0+512),f
 17471  030B  09C9               	comf	((??_doAbsMove+8)^(0+512)+1),f
 17472  030C  0AC8               	incf	(??_doAbsMove+8)^(0+512),f
 17473  030D  1903               	skipnz
 17474  030E  0AC9               	incf	((??_doAbsMove+8)^(0+512)+1),f
 17475  030F  0022               	movlb	2	; select bank2
 17476  0310  0846               	movf	_moveVector_downs^(0+256),w
 17477  0311  0024               	movlb	4	; select bank4
 17478  0312  00CA               	movwf	(??_doAbsMove+10)^(0+512)
 17479  0313  0022               	movlb	2	; select bank2
 17480  0314  0847               	movf	(_moveVector_downs+1)^(0+256),w
 17481  0315  0024               	movlb	4	; select bank4
 17482  0316  00CB               	movwf	((??_doAbsMove+10)^(0+512)+1)
 17483  0317  0022               	movlb	2	; select bank2
 17484  0318  0848               	movf	(_moveVector_downs+2)^(0+256),w
 17485  0319  0024               	movlb	4	; select bank4
 17486  031A  00CC               	movwf	((??_doAbsMove+10)^(0+512)+2)
 17487  031B  0022               	movlb	2	; select bank2
 17488  031C  0849               	movf	(_moveVector_downs+3)^(0+256),w
 17489  031D  0024               	movlb	4	; select bank4
 17490  031E  00CD               	movwf	((??_doAbsMove+10)^(0+512)+3)
 17491  031F  3001               	movlw	1
 17492  0320  00CE               	movwf	(??_doAbsMove+14)^(0+512)
 17493  0321  3000               	movlw	0
 17494  0322  00CF               	movwf	((??_doAbsMove+14)^(0+512)+1)
 17495  0323  3000               	movlw	0
 17496  0324  00D0               	movwf	((??_doAbsMove+14)^(0+512)+2)
 17497  0325  3000               	movlw	0
 17498  0326  00D1               	movwf	((??_doAbsMove+14)^(0+512)+3)
 17499  0327  0021               	movlb	1	; select bank1
 17500  0328  0A50               	incf	doAbsMove@i_1584^(0+128),w
 17501  0329  0024               	movlb	4	; select bank4
 17502  032A  2B2F               	goto	u8770
 17503  032B                     u8775:	
 17504  032B  35CE               	lslf	(??_doAbsMove+14)^(0+512),f
 17505  032C  0DCF               	rlf	((??_doAbsMove+14)^(0+512)+1),f
 17506  032D  0DD0               	rlf	((??_doAbsMove+14)^(0+512)+2),f
 17507  032E  0DD1               	rlf	((??_doAbsMove+14)^(0+512)+3),f
 17508  032F                     u8770:	
 17509  032F  0B89               	decfsz	9,f
 17510  0330  2B2B               	goto	u8775
 17511  0331  084E               	movf	(??_doAbsMove+14)^(0+512),w
 17512  0332  05CA               	andwf	(??_doAbsMove+10)^(0+512),f
 17513  0333  084F               	movf	(??_doAbsMove+15)^(0+512),w
 17514  0334  05CB               	andwf	((??_doAbsMove+10)^(0+512)+1),f
 17515  0335  0850               	movf	(??_doAbsMove+16)^(0+512),w
 17516  0336  05CC               	andwf	((??_doAbsMove+10)^(0+512)+2),f
 17517  0337  0851               	movf	(??_doAbsMove+17)^(0+512),w
 17518  0338  05CD               	andwf	((??_doAbsMove+10)^(0+512)+3),f
 17519  0339  084D               	movf	(??_doAbsMove+13)^(0+512),w
 17520  033A  044C               	iorwf	(??_doAbsMove+12)^(0+512),w
 17521  033B  044B               	iorwf	(??_doAbsMove+11)^(0+512),w
 17522  033C  044A               	iorwf	(??_doAbsMove+10)^(0+512),w
 17523  033D  1903               	btfsc	3,2
 17524  033E  2B41               	goto	u8780
 17525  033F  3001               	movlw	1
 17526  0340  2B42               	goto	u8790
 17527  0341                     u8780:	
 17528  0341  3000               	movlw	0
 17529  0342                     u8790:	
 17530  0342  0748               	addwf	(??_doAbsMove+8)^(0+512),w
 17531  0343  00D2               	movwf	(??_doAbsMove+18)^(0+512)
 17532  0344  0849               	movf	(??_doAbsMove+9)^(0+512),w
 17533  0345  1803               	skipnc
 17534  0346  0A49               	incf	(??_doAbsMove+9)^(0+512),w
 17535  0347  00D3               	movwf	((??_doAbsMove+18)^(0+512)+1)
 17536  0348  0852               	movf	(??_doAbsMove+18)^(0+512),w
 17537  0349  00D4               	movwf	(??_doAbsMove+20)^(0+512)
 17538  034A  0853               	movf	(??_doAbsMove+19)^(0+512),w
 17539  034B  00D5               	movwf	((??_doAbsMove+20)^(0+512)+1)
 17540  034C  3000               	movlw	0
 17541  034D  1BD5               	btfsc	((??_doAbsMove+20)^(0+512)+1),7
 17542  034E  30FF               	movlw	255
 17543  034F  00D6               	movwf	((??_doAbsMove+20)^(0+512)+2)
 17544  0350  00D7               	movwf	((??_doAbsMove+20)^(0+512)+3)
 17545  0351  0021               	movlb	1	; select bank1
 17546  0352  0851               	movf	(doAbsMove@i_1584+1)^(0+128),w
 17547  0353  0024               	movlb	4	; select bank4
 17548  0354  00D9               	movwf	((??_doAbsMove+24)^(0+512)+1)
 17549  0355  0021               	movlb	1	; select bank1
 17550  0356  0850               	movf	doAbsMove@i_1584^(0+128),w
 17551  0357  0024               	movlb	4	; select bank4
 17552  0358  00D8               	movwf	(??_doAbsMove+24)^(0+512)
 17553  0359  35D8               	lslf	(??_doAbsMove+24)^(0+512),f
 17554  035A  0DD9               	rlf	((??_doAbsMove+24)^(0+512)+1),f
 17555  035B  35D8               	lslf	(??_doAbsMove+24)^(0+512),f
 17556  035C  0DD9               	rlf	((??_doAbsMove+24)^(0+512)+1),f
 17557  035D  3090               	movlw	144
 17558  035E  00DA               	movwf	(??_doAbsMove+26)^(0+512)
 17559  035F  3027               	movlw	39
 17560  0360  00DB               	movwf	((??_doAbsMove+26)^(0+512)+1)
 17561  0361  0858               	movf	(??_doAbsMove+24)^(0+512),w
 17562  0362  075A               	addwf	(??_doAbsMove+26)^(0+512),w
 17563  0363  0086               	movwf	6
 17564  0364  0859               	movf	(??_doAbsMove+25)^(0+512),w
 17565  0365  3D5B               	addwfc	(??_doAbsMove+27)^(0+512),w
 17566  0366  0087               	movwf	7
 17567  0367  0854               	movf	(??_doAbsMove+20)^(0+512),w
 17568  0368  0781               	addwf	1,f
 17569  0369  3141               	addfsr 1,1
 17570  036A  0855               	movf	(??_doAbsMove+21)^(0+512),w
 17571  036B  3D81               	addwfc	1,f
 17572  036C  3141               	addfsr 1,1
 17573  036D  0856               	movf	(??_doAbsMove+22)^(0+512),w
 17574  036E  3D81               	addwfc	1,f
 17575  036F  3141               	addfsr 1,1
 17576  0370  0857               	movf	(??_doAbsMove+23)^(0+512),w
 17577  0371  3D81               	addwfc	1,f
 17578  0372  3001               	movlw	1
 17579  0373  0021               	movlb	1	; select bank1
 17580  0374  07D0               	addwf	doAbsMove@i_1584^(0+128),f
 17581  0375  3000               	movlw	0
 17582  0376  3DD1               	addwfc	(doAbsMove@i_1584+1)^(0+128),f
 17583  0377  2AC8               	goto	L34
 17584  0378                     __end_of_doAbsMove:	
 17585                           
 17586                           	psect	text55
 17587  0988                     __ptext55:	
 17588 ;; *************** function _doMove *****************
 17589 ;; Defined at:
 17590 ;;		line 236 in file "main.c"
 17591 ;; Parameters:    Size  Location     Type
 17592 ;;		None
 17593 ;; Auto vars:     Size  Location     Type
 17594 ;;  t               2   42[BANK1 ] int 
 17595 ;;  t               2   40[BANK1 ] int 
 17596 ;;  t               2   38[BANK1 ] int 
 17597 ;; Return value:  Size  Location     Type
 17598 ;;                  2   31[BANK1 ] int 
 17599 ;; Registers used:
 17600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17601 ;; Tracked objects:
 17602 ;;		On entry : 0/0
 17603 ;;		On exit  : 0/0
 17604 ;;		Unchanged: 0/0
 17605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17606 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17607 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17608 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17609 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17610 ;;Total ram usage:       13 bytes
 17611 ;; Hardware stack levels used:    1
 17612 ;; Hardware stack levels required when called:   15
 17613 ;; This function calls:
 17614 ;;		_LEDsOn
 17615 ;;		_TMR0_StartTimer
 17616 ;;		_TMR2_StartTimer
 17617 ;;		_calcHeaterPins
 17618 ;;		_drv_write_DC
 17619 ;; This function is called by:
 17620 ;;		_doAbsMove
 17621 ;;		_doRelMove
 17622 ;;		_execCmd
 17623 ;; This function uses a non-reentrant model
 17624 ;;
 17625                           
 17626                           
 17627                           ;psect for function _doMove
 17628  0988                     _doMove:	
 17629                           
 17630                           ;main.c: 238: calcHeaterPins();
 17631                           
 17632                           ;incstack = 0
 17633 ;; hardware stack exceeded
 17634                           ; Regs used in _doMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17635  0988  3194  24A7  3189   	fcall	_calcHeaterPins
 17636                           
 17637                           ;main.c: 239: do { LATCbits.LATC1 = 1; } while(0);
 17638  098B  0022               	movlb	2	; select bank2
 17639  098C  148E               	bsf	14,1	;volatile
 17640                           
 17641                           ;main.c: 240: LEDsOn(first_top, 1);
 17642  098D  0859               	movf	(_first_top+3)^(0+256),w
 17643  098E  0020               	movlb	0	; select bank0
 17644  098F  00C7               	movwf	LEDsOn@LEDpins+3
 17645  0990  0022               	movlb	2	; select bank2
 17646  0991  0858               	movf	(_first_top+2)^(0+256),w
 17647  0992  0020               	movlb	0	; select bank0
 17648  0993  00C6               	movwf	LEDsOn@LEDpins+2
 17649  0994  0022               	movlb	2	; select bank2
 17650  0995  0857               	movf	(_first_top+1)^(0+256),w
 17651  0996  0020               	movlb	0	; select bank0
 17652  0997  00C5               	movwf	LEDsOn@LEDpins+1
 17653  0998  0022               	movlb	2	; select bank2
 17654  0999  0856               	movf	_first_top^(0+256),w
 17655  099A  0020               	movlb	0	; select bank0
 17656  099B  00C4               	movwf	LEDsOn@LEDpins
 17657  099C  3001               	movlw	1
 17658  099D  00C8               	movwf	LEDsOn@topOrBottom
 17659  099E  3000               	movlw	0
 17660  099F  00C9               	movwf	LEDsOn@topOrBottom+1
 17661  09A0  31A5  2557  3189   	fcall	_LEDsOn
 17662                           
 17663                           ;main.c: 241: LEDsOn(first_bottom,2);
 17664  09A3  0022               	movlb	2	; select bank2
 17665  09A4  085D               	movf	(_first_bottom+3)^(0+256),w
 17666  09A5  0020               	movlb	0	; select bank0
 17667  09A6  00C7               	movwf	LEDsOn@LEDpins+3
 17668  09A7  0022               	movlb	2	; select bank2
 17669  09A8  085C               	movf	(_first_bottom+2)^(0+256),w
 17670  09A9  0020               	movlb	0	; select bank0
 17671  09AA  00C6               	movwf	LEDsOn@LEDpins+2
 17672  09AB  0022               	movlb	2	; select bank2
 17673  09AC  085B               	movf	(_first_bottom+1)^(0+256),w
 17674  09AD  0020               	movlb	0	; select bank0
 17675  09AE  00C5               	movwf	LEDsOn@LEDpins+1
 17676  09AF  0022               	movlb	2	; select bank2
 17677  09B0  085A               	movf	_first_bottom^(0+256),w
 17678  09B1  0020               	movlb	0	; select bank0
 17679  09B2  00C4               	movwf	LEDsOn@LEDpins
 17680  09B3  3002               	movlw	2
 17681  09B4  00C8               	movwf	LEDsOn@topOrBottom
 17682  09B5  3000               	movlw	0
 17683  09B6  00C9               	movwf	LEDsOn@topOrBottom+1
 17684  09B7  31A5  2557  3189   	fcall	_LEDsOn
 17685                           
 17686                           ;main.c: 242: do { LATCbits.LATC1 = 0; } while(0);
 17687  09BA  0022               	movlb	2	; select bank2
 17688  09BB  108E               	bcf	14,1	;volatile
 17689                           
 17690                           ;main.c: 243: for(int t=0; t<heater_pre_time_ms; t++) _delay((unsigned long)((1)*(100000
      +                          0/4000.0)));
 17691  09BC  0021               	movlb	1	; select bank1
 17692  09BD  01C6               	clrf	doMove@t^(0+128)
 17693  09BE  01C7               	clrf	(doMove@t+1)^(0+128)
 17694  09BF                     l1099:	
 17695  09BF  0847               	movf	(doMove@t+1)^(0+128),w
 17696  09C0  3A80               	xorlw	128
 17697  09C1  00C1               	movwf	??_doMove^(0+128)
 17698  09C2  086E               	movf	(_heater_pre_time_ms+1)^(0+128),w
 17699  09C3  3A80               	xorlw	128
 17700  09C4  0241               	subwf	??_doMove^(0+128),w
 17701  09C5  1D03               	skipz
 17702  09C6  29C9               	goto	u8075
 17703  09C7  086D               	movf	_heater_pre_time_ms^(0+128),w
 17704  09C8  0246               	subwf	doMove@t^(0+128),w
 17705  09C9                     u8075:	
 17706  09C9  1803               	btfsc	3,0
 17707  09CA  29D5               	goto	l7955
 17708  09CB  3053               	movlw	83
 17709  09CC                     u9167:	
 17710  09CC  0B89               	decfsz	9,f
 17711  09CD  29CC               	goto	u9167
 17712  09CE  0000               	nop
 17713  09CF  3001               	movlw	1
 17714  09D0  0021               	movlb	1	; select bank1
 17715  09D1  07C6               	addwf	doMove@t^(0+128),f
 17716  09D2  3000               	movlw	0
 17717  09D3  3DC7               	addwfc	(doMove@t+1)^(0+128),f
 17718  09D4  29BF               	goto	l1099
 17719  09D5                     l7955:	
 17720                           
 17721                           ;main.c: 244: TMR2_StartTimer();
 17722  09D5  31A1  215A  3189   	fcall	_TMR2_StartTimer
 17723                           
 17724                           ;main.c: 245: TMR0_StartTimer();
 17725  09D8  31A1  2157  3189   	fcall	_TMR0_StartTimer
 17726                           
 17727                           ;main.c: 247: drv_write_DC(drv_peak_val, piezo_on_time_ms);
 17728  09DB  0022               	movlb	2	; select bank2
 17729  09DC  086F               	movf	(_drv_peak_val+1)^(0+256),w
 17730  09DD  0021               	movlb	1	; select bank1
 17731  09DE  00B9               	movwf	(drv_write_DC@val+1)^(0+128)
 17732  09DF  0022               	movlb	2	; select bank2
 17733  09E0  086E               	movf	_drv_peak_val^(0+256),w
 17734  09E1  0021               	movlb	1	; select bank1
 17735  09E2  00B8               	movwf	drv_write_DC@val^(0+128)
 17736  09E3  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 17737  09E4  00BB               	movwf	(drv_write_DC@duration_ms+1)^(0+128)
 17738  09E5  0869               	movf	_piezo_on_time_ms^(0+128),w
 17739  09E6  00BA               	movwf	drv_write_DC@duration_ms^(0+128)
 17740  09E7  319C  240F  3189   	fcall	_drv_write_DC
 17741                           
 17742                           ;main.c: 249: for(int t=0; t<heater_post_time_ms; t++) _delay((unsigned long)((1)*(10000
      +                          00/4000.0)));
 17743  09EA  0021               	movlb	1	; select bank1
 17744  09EB  01C8               	clrf	doMove@t_1566^(0+128)
 17745  09EC  01C9               	clrf	(doMove@t_1566+1)^(0+128)
 17746  09ED                     l1102:	
 17747  09ED  0849               	movf	(doMove@t_1566+1)^(0+128),w
 17748  09EE  3A80               	xorlw	128
 17749  09EF  00C1               	movwf	??_doMove^(0+128)
 17750  09F0  086C               	movf	(_heater_post_time_ms+1)^(0+128),w
 17751  09F1  3A80               	xorlw	128
 17752  09F2  0241               	subwf	??_doMove^(0+128),w
 17753  09F3  1D03               	skipz
 17754  09F4  29F7               	goto	u8085
 17755  09F5  086B               	movf	_heater_post_time_ms^(0+128),w
 17756  09F6  0248               	subwf	doMove@t_1566^(0+128),w
 17757  09F7                     u8085:	
 17758  09F7  1803               	btfsc	3,0
 17759  09F8  2A03               	goto	l1105
 17760  09F9  3053               	movlw	83
 17761  09FA                     u9177:	
 17762  09FA  0B89               	decfsz	9,f
 17763  09FB  29FA               	goto	u9177
 17764  09FC  0000               	nop
 17765  09FD  3001               	movlw	1
 17766  09FE  0021               	movlb	1	; select bank1
 17767  09FF  07C8               	addwf	doMove@t_1566^(0+128),f
 17768  0A00  3000               	movlw	0
 17769  0A01  3DC9               	addwfc	(doMove@t_1566+1)^(0+128),f
 17770  0A02  29ED               	goto	l1102
 17771  0A03                     l1105:	
 17772                           ;main.c: 251: do { LATCbits.LATC1 = 1; } while(0);
 17773                           
 17774  0A03  0022               	movlb	2	; select bank2
 17775  0A04  148E               	bsf	14,1	;volatile
 17776                           
 17777                           ;main.c: 254: for(int t=0; t<inter_step_interval_ms; t++) _delay((unsigned long)((1)*(10
      +                          00000/4000.0)));
 17778  0A05  0021               	movlb	1	; select bank1
 17779  0A06  01CA               	clrf	doMove@t_1567^(0+128)
 17780  0A07  01CB               	clrf	(doMove@t_1567+1)^(0+128)
 17781  0A08                     l1107:	
 17782  0A08  084A               	movf	doMove@t_1567^(0+128),w
 17783  0A09  00C1               	movwf	??_doMove^(0+128)
 17784  0A0A  084B               	movf	(doMove@t_1567+1)^(0+128),w
 17785  0A0B  00C2               	movwf	(??_doMove^(0+128)+1)
 17786  0A0C  3000               	movlw	0
 17787  0A0D  1BC2               	btfsc	(??_doMove^(0+128)+1),7
 17788  0A0E  30FF               	movlw	255
 17789  0A0F  00C3               	movwf	(??_doMove^(0+128)+2)
 17790  0A10  00C4               	movwf	(??_doMove^(0+128)+3)
 17791  0A11  0844               	movf	(??_doMove+3)^(0+128),w
 17792  0A12  3A80               	xorlw	128
 17793  0A13  00C5               	movwf	(??_doMove+4)^(0+128)
 17794  0A14  0022               	movlb	2	; select bank2
 17795  0A15  086D               	movf	(_inter_step_interval_ms+3)^(0+256),w
 17796  0A16  3A80               	xorlw	128
 17797  0A17  0021               	movlb	1	; select bank1
 17798  0A18  0245               	subwf	(??_doMove+4)^(0+128),w
 17799  0A19  1D03               	skipz
 17800  0A1A  2A2B               	goto	u8093
 17801  0A1B  0022               	movlb	2	; select bank2
 17802  0A1C  086C               	movf	(_inter_step_interval_ms+2)^(0+256),w
 17803  0A1D  0021               	movlb	1	; select bank1
 17804  0A1E  0243               	subwf	(??_doMove+2)^(0+128),w
 17805  0A1F  1D03               	skipz
 17806  0A20  2A2B               	goto	u8093
 17807  0A21  0022               	movlb	2	; select bank2
 17808  0A22  086B               	movf	(_inter_step_interval_ms+1)^(0+256),w
 17809  0A23  0021               	movlb	1	; select bank1
 17810  0A24  0242               	subwf	(??_doMove+1)^(0+128),w
 17811  0A25  1D03               	skipz
 17812  0A26  2A2B               	goto	u8093
 17813  0A27  0022               	movlb	2	; select bank2
 17814  0A28  086A               	movf	_inter_step_interval_ms^(0+256),w
 17815  0A29  0021               	movlb	1	; select bank1
 17816  0A2A  0241               	subwf	??_doMove^(0+128),w
 17817  0A2B                     u8093:	
 17818  0A2B  1803               	btfsc	3,0
 17819  0A2C  2A37               	goto	l7967
 17820  0A2D  3053               	movlw	83
 17821  0A2E                     u9187:	
 17822  0A2E  0B89               	decfsz	9,f
 17823  0A2F  2A2E               	goto	u9187
 17824  0A30  0000               	nop
 17825  0A31  3001               	movlw	1
 17826  0A32  0021               	movlb	1	; select bank1
 17827  0A33  07CA               	addwf	doMove@t_1567^(0+128),f
 17828  0A34  3000               	movlw	0
 17829  0A35  3DCB               	addwfc	(doMove@t_1567+1)^(0+128),f
 17830  0A36  2A08               	goto	l1107
 17831  0A37                     l7967:	
 17832                           
 17833                           ;main.c: 255: return 0;
 17834  0A37  01BF               	clrf	?_doMove^(0+128)
 17835  0A38  01C0               	clrf	(?_doMove+1)^(0+128)
 17836  0A39  0008               	return
 17837  0A3A                     __end_of_doMove:	
 17838                           
 17839                           	psect	text56
 17840  1C0F                     __ptext56:	
 17841 ;; *************** function _drv_write_DC *****************
 17842 ;; Defined at:
 17843 ;;		line 106 in file "drv2665.c"
 17844 ;; Parameters:    Size  Location     Type
 17845 ;;  val             2   24[BANK1 ] int 
 17846 ;;  duration_ms     2   26[BANK1 ] int 
 17847 ;; Auto vars:     Size  Location     Type
 17848 ;;  i               2   29[BANK1 ] int 
 17849 ;; Return value:  Size  Location     Type
 17850 ;;                  1    wreg      void 
 17851 ;; Registers used:
 17852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17853 ;; Tracked objects:
 17854 ;;		On entry : 0/0
 17855 ;;		On exit  : 0/0
 17856 ;;		Unchanged: 0/0
 17857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17858 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17859 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17860 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17861 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17862 ;;Total ram usage:        7 bytes
 17863 ;; Hardware stack levels used:    1
 17864 ;; Hardware stack levels required when called:   14
 17865 ;; This function calls:
 17866 ;;		___awdiv
 17867 ;;		_drv_write
 17868 ;;		_fifo_check
 17869 ;;		_printf
 17870 ;; This function is called by:
 17871 ;;		_doMove
 17872 ;; This function uses a non-reentrant model
 17873 ;;
 17874                           
 17875                           
 17876                           ;psect for function _drv_write_DC
 17877  1C0F                     _drv_write_DC:	
 17878                           
 17879                           ;drv2665.c: 108: drv_write(0x0b, 0x00);
 17880                           
 17881                           ;incstack = 0
 17882 ;; hardware stack exceeded
 17883                           ; Regs used in _drv_write_DC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17884  1C0F  0020               	movlb	0	; select bank0
 17885  1C10  01C9               	clrf	drv_write@data
 17886  1C11  300B               	movlw	11
 17887  1C12  31A6  2605  319C   	fcall	_drv_write
 17888                           
 17889                           ;drv2665.c: 109: for(int i=0;i<duration_ms/5; i++){
 17890  1C15  0021               	movlb	1	; select bank1
 17891  1C16  01BD               	clrf	drv_write_DC@i^(0+128)
 17892  1C17  01BE               	clrf	(drv_write_DC@i+1)^(0+128)
 17893  1C18                     l7727:	
 17894  1C18  3005               	movlw	5
 17895  1C19  0020               	movlb	0	; select bank0
 17896  1C1A  00B1               	movwf	___awdiv@divisor
 17897  1C1B  3000               	movlw	0
 17898  1C1C  00B2               	movwf	___awdiv@divisor+1
 17899  1C1D  0021               	movlb	1	; select bank1
 17900  1C1E  083B               	movf	(drv_write_DC@duration_ms+1)^(0+128),w
 17901  1C1F  0020               	movlb	0	; select bank0
 17902  1C20  00B4               	movwf	___awdiv@dividend+1
 17903  1C21  0021               	movlb	1	; select bank1
 17904  1C22  083A               	movf	drv_write_DC@duration_ms^(0+128),w
 17905  1C23  0020               	movlb	0	; select bank0
 17906  1C24  00B3               	movwf	___awdiv@dividend
 17907  1C25  319C  245F  319C   	fcall	___awdiv
 17908  1C28  0021               	movlb	1	; select bank1
 17909  1C29  083E               	movf	(drv_write_DC@i+1)^(0+128),w
 17910  1C2A  3A80               	xorlw	128
 17911  1C2B  00BC               	movwf	??_drv_write_DC^(0+128)
 17912  1C2C  0020               	movlb	0	; select bank0
 17913  1C2D  0832               	movf	?___awdiv+1,w
 17914  1C2E  3A80               	xorlw	128
 17915  1C2F  0021               	movlb	1	; select bank1
 17916  1C30  023C               	subwf	??_drv_write_DC^(0+128),w
 17917  1C31  1D03               	skipz
 17918  1C32  2C37               	goto	u7695
 17919  1C33  0020               	movlb	0	; select bank0
 17920  1C34  0831               	movf	?___awdiv,w
 17921  1C35  0021               	movlb	1	; select bank1
 17922  1C36  023D               	subwf	drv_write_DC@i^(0+128),w
 17923  1C37                     u7695:	
 17924  1C37  1803               	btfsc	3,0
 17925  1C38  2C4C               	goto	l7729
 17926                           
 17927                           ;drv2665.c: 110: drv_write(0x0b, val);
 17928  1C39  0021               	movlb	1	; select bank1
 17929  1C3A  0838               	movf	drv_write_DC@val^(0+128),w
 17930  1C3B  00BC               	movwf	??_drv_write_DC^(0+128)
 17931  1C3C  083C               	movf	??_drv_write_DC^(0+128),w
 17932  1C3D  0020               	movlb	0	; select bank0
 17933  1C3E  00C9               	movwf	drv_write@data
 17934  1C3F  300B               	movlw	11
 17935  1C40  31A6  2605  319C   	fcall	_drv_write
 17936                           
 17937                           ;drv2665.c: 111: _delay((unsigned long)((20)*(1000000/4000000.0)));
 17938  1C43  3200               	nop2	;2 cycle nop
 17939  1C44  3200               	nop2	;2 cycle nop
 17940  1C45  0000               	nop
 17941  1C46  3001               	movlw	1
 17942  1C47  0021               	movlb	1	; select bank1
 17943  1C48  07BD               	addwf	drv_write_DC@i^(0+128),f
 17944  1C49  3000               	movlw	0
 17945  1C4A  3DBE               	addwfc	(drv_write_DC@i+1)^(0+128),f
 17946  1C4B  2C18               	goto	l7727
 17947  1C4C                     l7729:	
 17948                           
 17949                           ;drv2665.c: 113: }
 17950                           ;drv2665.c: 116: if(!fifo_check()) printf("fifo not ready!\n");
 17951  1C4C  31A3  234E  319C   	fcall	_fifo_check
 17952  1C4F  1803               	btfsc	3,0
 17953  1C50  2C59               	goto	l1338
 17954  1C51  30EE               	movlw	low (STR_53| (0+32768))
 17955  1C52  0021               	movlb	1	; select bank1
 17956  1C53  00A0               	movwf	printf@f^(0+128)
 17957  1C54  30A8               	movlw	high (STR_53| (0+32768))
 17958  1C55  00A1               	movwf	(printf@f^(0+128)+1)
 17959  1C56  318E  26CE  319C   	fcall	_printf
 17960  1C59                     l1338:	
 17961                           
 17962                           ;drv2665.c: 118: drv_write(0x0b, 0x00);
 17963  1C59  0020               	movlb	0	; select bank0
 17964  1C5A  01C9               	clrf	drv_write@data
 17965  1C5B  300B               	movlw	11
 17966  1C5C  31A6  2605         	fcall	_drv_write
 17967  1C5E  0008               	return
 17968  1C5F                     __end_of_drv_write_DC:	
 17969                           
 17970                           	psect	text57
 17971  234E                     __ptext57:	
 17972 ;; *************** function _fifo_check *****************
 17973 ;; Defined at:
 17974 ;;		line 124 in file "drv2665.c"
 17975 ;; Parameters:    Size  Location     Type
 17976 ;;		None
 17977 ;; Auto vars:     Size  Location     Type
 17978 ;;  reply           1   23[BANK1 ] unsigned char 
 17979 ;; Return value:  Size  Location     Type
 17980 ;;		None               void
 17981 ;; Registers used:
 17982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17983 ;; Tracked objects:
 17984 ;;		On entry : 0/0
 17985 ;;		On exit  : 0/0
 17986 ;;		Unchanged: 0/0
 17987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17989 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17991 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17992 ;;Total ram usage:        2 bytes
 17993 ;; Hardware stack levels used:    1
 17994 ;; Hardware stack levels required when called:   13
 17995 ;; This function calls:
 17996 ;;		_drv_read
 17997 ;; This function is called by:
 17998 ;;		_drv_write_DC
 17999 ;; This function uses a non-reentrant model
 18000 ;;
 18001                           
 18002                           
 18003                           ;psect for function _fifo_check
 18004  234E                     _fifo_check:	
 18005                           
 18006                           ;drv2665.c: 126: uint8_t reply;
 18007                           ;drv2665.c: 127: reply = drv_read(0x00);
 18008                           
 18009                           ;incstack = 0
 18010 ;; hardware stack exceeded
 18011                           ; Regs used in _fifo_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18012  234E  3000               	movlw	0
 18013  234F  319A  2200  31A3   	fcall	_drv_read
 18014  2352  0021               	movlb	1	; select bank1
 18015  2353  0835               	movf	?_drv_read^(0+128),w
 18016  2354  0020               	movlb	0	; select bank0
 18017  2355  00CD               	movwf	??_fifo_check
 18018  2356  084D               	movf	??_fifo_check,w
 18019  2357  0021               	movlb	1	; select bank1
 18020  2358  00B7               	movwf	fifo_check@reply^(0+128)
 18021                           
 18022                           ;drv2665.c: 129: return !(reply & 0x01);
 18023  2359  1C37               	btfss	fifo_check@reply^(0+128),0
 18024  235A  2B5D               	goto	l7587
 18025  235B  1003               	clrc
 18026  235C  0008               	return
 18027  235D                     l7587:	
 18028  235D  1403               	setc
 18029  235E  0008               	return
 18030  235F                     __end_of_fifo_check:	
 18031                           
 18032                           	psect	text58
 18033  1A00                     __ptext58:	
 18034 ;; *************** function _drv_read *****************
 18035 ;; Defined at:
 18036 ;;		line 84 in file "drv2665.c"
 18037 ;; Parameters:    Size  Location     Type
 18038 ;;  reg             1    wreg     unsigned char 
 18039 ;; Auto vars:     Size  Location     Type
 18040 ;;  reg             1   43[BANK0 ] unsigned char 
 18041 ;;  buff            1   44[BANK0 ] unsigned char 
 18042 ;; Return value:  Size  Location     Type
 18043 ;;                  2   21[BANK1 ] int 
 18044 ;; Registers used:
 18045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18046 ;; Tracked objects:
 18047 ;;		On entry : 0/0
 18048 ;;		On exit  : 0/0
 18049 ;;		Unchanged: 0/0
 18050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18051 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18052 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18053 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18054 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18055 ;;Total ram usage:        6 bytes
 18056 ;; Hardware stack levels used:    1
 18057 ;; Hardware stack levels required when called:   12
 18058 ;; This function calls:
 18059 ;;		_i2c_masterOperation
 18060 ;;		_i2c_setBuffer
 18061 ;;		_printf
 18062 ;; This function is called by:
 18063 ;;		_commCheck
 18064 ;;		_fifo_check
 18065 ;; This function uses a non-reentrant model
 18066 ;;
 18067                           
 18068                           
 18069                           ;psect for function _drv_read
 18070  1A00                     _drv_read:	
 18071                           
 18072                           ;incstack = 0
 18073 ;; hardware stack exceeded
 18074                           ; Regs used in _drv_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18075                           ;drv_read@reg stored from wreg
 18076  1A00  0020               	movlb	0	; select bank0
 18077  1A01  00CB               	movwf	drv_read@reg
 18078                           
 18079                           ;drv2665.c: 86: char buff=0;
 18080  1A02  01CC               	clrf	drv_read@buff
 18081                           
 18082                           ;drv2665.c: 89: i2c_setBuffer(&reg, 1);
 18083  1A03  304B               	movlw	low drv_read@reg
 18084  1A04  00B1               	movwf	i2c_setBuffer@buffer
 18085  1A05  3000               	movlw	high drv_read@reg
 18086  1A06  00B2               	movwf	i2c_setBuffer@buffer+1
 18087  1A07  3001               	movlw	1
 18088  1A08  00B3               	movwf	i2c_setBuffer@bufferSize
 18089  1A09  3000               	movlw	0
 18090  1A0A  00B4               	movwf	i2c_setBuffer@bufferSize+1
 18091  1A0B  31A3  23AD  319A   	fcall	_i2c_setBuffer
 18092                           
 18093                           ;drv2665.c: 90: if(i2c_masterOperation(0) != I2C_NOERR)
 18094  1A0E  3000               	movlw	0
 18095  1A0F  31A5  25E1  319A   	fcall	_i2c_masterOperation
 18096  1A12  3A00               	xorlw	0
 18097  1A13  1903               	skipnz
 18098  1A14  2A1D               	goto	l7537
 18099                           
 18100                           ;drv2665.c: 91: printf("drv_write error!\n");
 18101  1A15  30CB               	movlw	low (STR_50| (0+32768))
 18102  1A16  0021               	movlb	1	; select bank1
 18103  1A17  00A0               	movwf	printf@f^(0+128)
 18104  1A18  30A8               	movlw	high (STR_50| (0+32768))
 18105  1A19  00A1               	movwf	(printf@f^(0+128)+1)
 18106  1A1A  318E  26CE  319A   	fcall	_printf
 18107  1A1D                     l7537:	
 18108                           
 18109                           ;drv2665.c: 94: _delay((unsigned long)((100)*(1000000/4000000.0)));
 18110  1A1D  3008               	movlw	8
 18111  1A1E                     u9197:	
 18112  1A1E  0B89               	decfsz	9,f
 18113  1A1F  2A1E               	goto	u9197
 18114  1A20  0000               	nop
 18115                           
 18116                           ;drv2665.c: 97: i2c_setBuffer(&buff, 1);
 18117  1A21  304C               	movlw	low drv_read@buff
 18118  1A22  0020               	movlb	0	; select bank0
 18119  1A23  00B1               	movwf	i2c_setBuffer@buffer
 18120  1A24  3000               	movlw	high drv_read@buff
 18121  1A25  00B2               	movwf	i2c_setBuffer@buffer+1
 18122  1A26  3001               	movlw	1
 18123  1A27  00B3               	movwf	i2c_setBuffer@bufferSize
 18124  1A28  3000               	movlw	0
 18125  1A29  00B4               	movwf	i2c_setBuffer@bufferSize+1
 18126  1A2A  31A3  23AD  319A   	fcall	_i2c_setBuffer
 18127                           
 18128                           ;drv2665.c: 99: if(i2c_masterOperation(1) != I2C_NOERR)
 18129  1A2D  3001               	movlw	1
 18130  1A2E  31A5  25E1  319A   	fcall	_i2c_masterOperation
 18131  1A31  3A00               	xorlw	0
 18132  1A32  1903               	skipnz
 18133  1A33  2A3B               	goto	l7545
 18134                           
 18135                           ;drv2665.c: 100: printf("drv_read error!\n");
 18136  1A34  30DD               	movlw	low (STR_52| (0+32768))
 18137  1A35  0021               	movlb	1	; select bank1
 18138  1A36  00A0               	movwf	printf@f^(0+128)
 18139  1A37  30A8               	movlw	high (STR_52| (0+32768))
 18140  1A38  00A1               	movwf	(printf@f^(0+128)+1)
 18141  1A39  318E  26CE         	fcall	_printf
 18142  1A3B                     l7545:	
 18143                           
 18144                           ;drv2665.c: 102: return buff;
 18145  1A3B  0020               	movlb	0	; select bank0
 18146  1A3C  084C               	movf	drv_read@buff,w
 18147  1A3D  00C9               	movwf	??_drv_read
 18148  1A3E  01CA               	clrf	??_drv_read+1
 18149  1A3F  0849               	movf	??_drv_read,w
 18150  1A40  0021               	movlb	1	; select bank1
 18151  1A41  00B5               	movwf	?_drv_read^(0+128)
 18152  1A42  0020               	movlb	0	; select bank0
 18153  1A43  084A               	movf	??_drv_read+1,w
 18154  1A44  0021               	movlb	1	; select bank1
 18155  1A45  00B6               	movwf	(?_drv_read+1)^(0+128)
 18156  1A46  0008               	return
 18157  1A47                     __end_of_drv_read:	
 18158                           
 18159                           	psect	text59
 18160  2605                     __ptext59:	
 18161 ;; *************** function _drv_write *****************
 18162 ;; Defined at:
 18163 ;;		line 57 in file "drv2665.c"
 18164 ;; Parameters:    Size  Location     Type
 18165 ;;  reg             1    wreg     unsigned char 
 18166 ;;  data            1   41[BANK0 ] unsigned char 
 18167 ;; Auto vars:     Size  Location     Type
 18168 ;;  reg             1   43[BANK0 ] unsigned char 
 18169 ;;  buff            2   44[BANK0 ] unsigned char [2]
 18170 ;; Return value:  Size  Location     Type
 18171 ;;                  1    wreg      void 
 18172 ;; Registers used:
 18173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18174 ;; Tracked objects:
 18175 ;;		On entry : 0/0
 18176 ;;		On exit  : 0/0
 18177 ;;		Unchanged: 0/0
 18178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18179 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18180 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18181 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18182 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18183 ;;Total ram usage:        5 bytes
 18184 ;; Hardware stack levels used:    1
 18185 ;; Hardware stack levels required when called:   12
 18186 ;; This function calls:
 18187 ;;		_i2c_masterOperation
 18188 ;;		_i2c_setBuffer
 18189 ;;		_printf
 18190 ;; This function is called by:
 18191 ;;		_setDrvGain
 18192 ;;		_drv_init
 18193 ;;		_drv_reset
 18194 ;;		_drv_write_DC
 18195 ;;		_drv_outputSine
 18196 ;;		_drv_outputWave
 18197 ;; This function uses a non-reentrant model
 18198 ;;
 18199                           
 18200                           
 18201                           ;psect for function _drv_write
 18202  2605                     _drv_write:	
 18203                           
 18204                           ;incstack = 0
 18205                           ; Regs used in _drv_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18206                           ;drv_write@reg stored from wreg
 18207  2605  0020               	movlb	0	; select bank0
 18208  2606  00CB               	movwf	drv_write@reg
 18209                           
 18210                           ;drv2665.c: 62: uint8_t buff[2];
 18211                           ;drv2665.c: 64: buff[0] = reg;
 18212  2607  084B               	movf	drv_write@reg,w
 18213  2608  00CA               	movwf	??_drv_write
 18214  2609  084A               	movf	??_drv_write,w
 18215  260A  00CC               	movwf	drv_write@buff
 18216                           
 18217                           ;drv2665.c: 65: buff[1] = data;
 18218  260B  0849               	movf	drv_write@data,w
 18219  260C  00CA               	movwf	??_drv_write
 18220  260D  084A               	movf	??_drv_write,w
 18221  260E  00CD               	movwf	drv_write@buff+1
 18222                           
 18223                           ;drv2665.c: 68: i2c_setBuffer(buff, 2);
 18224  260F  304C               	movlw	low drv_write@buff
 18225  2610  00B1               	movwf	i2c_setBuffer@buffer
 18226  2611  3000               	movlw	high drv_write@buff
 18227  2612  00B2               	movwf	i2c_setBuffer@buffer+1
 18228  2613  3002               	movlw	2
 18229  2614  00B3               	movwf	i2c_setBuffer@bufferSize
 18230  2615  3000               	movlw	0
 18231  2616  00B4               	movwf	i2c_setBuffer@bufferSize+1
 18232  2617  31A3  23AD  31A6   	fcall	_i2c_setBuffer
 18233                           
 18234                           ;drv2665.c: 69: if(i2c_masterOperation(0) != I2C_NOERR)
 18235  261A  3000               	movlw	0
 18236  261B  31A5  25E1  31A6   	fcall	_i2c_masterOperation
 18237  261E  3A00               	xorlw	0
 18238  261F  1903               	skipnz
 18239  2620  0008               	return
 18240                           
 18241                           ;drv2665.c: 70: printf("drv_write error!\n");
 18242  2621  30CB               	movlw	low (STR_50| (0+32768))
 18243  2622  0021               	movlb	1	; select bank1
 18244  2623  00A0               	movwf	printf@f^(0+128)
 18245  2624  30A8               	movlw	high (STR_50| (0+32768))
 18246  2625  00A1               	movwf	(printf@f^(0+128)+1)
 18247  2626  318E  26CE         	fcall	_printf
 18248  2628  0008               	return
 18249  2629                     __end_of_drv_write:	
 18250                           
 18251                           	psect	text60
 18252  0ECE                     __ptext60:	
 18253 ;; *************** function _printf *****************
 18254 ;; Defined at:
 18255 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 18256 ;; Parameters:    Size  Location     Type
 18257 ;;  f               2    0[BANK1 ] PTR const unsigned char 
 18258 ;;		 -> STR_79(23), STR_78(3), STR_53(17), STR_52(17), 
 18259 ;;		 -> STR_51(18), STR_50(18), STR_49(17), STR_48(28), 
 18260 ;;		 -> STR_47(9), STR_46(9), STR_45(25), STR_44(11), 
 18261 ;;		 -> STR_43(8), STR_42(8), STR_41(8), STR_40(31), 
 18262 ;;		 -> STR_39(11), STR_38(8), STR_37(8), STR_36(8), 
 18263 ;;		 -> STR_35(26), STR_34(30), STR_33(2), STR_32(2), 
 18264 ;;		 -> STR_31(2), STR_30(2), STR_29(4), STR_28(2), 
 18265 ;;		 -> STR_27(4), STR_26(3), STR_25(3), STR_24(3), 
 18266 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
 18267 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(3), 
 18268 ;;		 -> STR_15(3), STR_14(3), STR_13(3), STR_12(4), 
 18269 ;;		 -> STR_11(3), STR_10(16), STR_9(3), STR_8(3), 
 18270 ;;		 -> STR_7(3), STR_6(13), STR_5(15), STR_4(16), 
 18271 ;;		 -> STR_3(2), STR_2(4), STR_1(4), 
 18272 ;; Auto vars:     Size  Location     Type
 18273 ;;  val             4   14[BANK1 ] unsigned long 
 18274 ;;  tmpval          4    0        struct .
 18275 ;;  prec            2   12[BANK1 ] int 
 18276 ;;  cp              2    0        PTR const unsigned char 
 18277 ;;  len             2    0        unsigned int 
 18278 ;;  c               1   20[BANK1 ] char 
 18279 ;;  ap              1   19[BANK1 ] PTR void [1]
 18280 ;;		 -> ?_printf(2), 
 18281 ;;  flag            1   18[BANK1 ] unsigned char 
 18282 ;; Return value:  Size  Location     Type
 18283 ;;                  2    0[BANK1 ] int 
 18284 ;; Registers used:
 18285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18286 ;; Tracked objects:
 18287 ;;		On entry : 0/0
 18288 ;;		On exit  : 0/0
 18289 ;;		Unchanged: 0/0
 18290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18291 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18292 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18293 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18294 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18295 ;;Total ram usage:       21 bytes
 18296 ;; Hardware stack levels used:    1
 18297 ;; Hardware stack levels required when called:    8
 18298 ;; This function calls:
 18299 ;;		___lldiv
 18300 ;;		___llmod
 18301 ;;		_putch
 18302 ;; This function is called by:
 18303 ;;		_LED_test_openshort
 18304 ;;		_LED_getData
 18305 ;;		_main
 18306 ;;		_main_initialize
 18307 ;;		_startRelMove
 18308 ;;		_startAbsMove
 18309 ;;		_stop
 18310 ;;		_doAbsMove
 18311 ;;		_zeroPosition
 18312 ;;		_getPosition
 18313 ;;		_setDrvPeak
 18314 ;;		_setDrvGain
 18315 ;;		_setDrvPiezoOnTime
 18316 ;;		_setHeaterPreTime
 18317 ;;		_setHeaterPostTime
 18318 ;;		_setLEDBrightnessRange
 18319 ;;		_setLEDPwr
 18320 ;;		_setHeaterToggle
 18321 ;;		_timedActiveHeatOn
 18322 ;;		_setActive
 18323 ;;		_setMoveMask
 18324 ;;		_getActive
 18325 ;;		_getMoveMask
 18326 ;;		_getMotionStatus
 18327 ;;		_commCheck
 18328 ;;		_drv_init
 18329 ;;		_drv_write
 18330 ;;		_drv_read
 18331 ;;		_drv_write_DC
 18332 ;;		_execCmd
 18333 ;; This function uses a non-reentrant model
 18334 ;;
 18335                           
 18336                           
 18337                           ;psect for function _printf
 18338  0ECE                     _printf:	
 18339                           
 18340                           ;doprnt.c: 466: va_list ap;
 18341                           ;doprnt.c: 499: signed char c;
 18342                           ;doprnt.c: 504: int prec;
 18343                           ;doprnt.c: 508: unsigned char flag;
 18344                           ;doprnt.c: 523: union {
 18345                           ;doprnt.c: 524: unsigned long vd;
 18346                           ;doprnt.c: 525: double integ;
 18347                           ;doprnt.c: 526: } tmpval;
 18348                           ;doprnt.c: 528: unsigned long val;
 18349                           ;doprnt.c: 529: unsigned len;
 18350                           ;doprnt.c: 530: const char * cp;
 18351                           ;doprnt.c: 533: *ap = __va_start();
 18352                           
 18353                           ;incstack = 0
 18354                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18355  0ECE  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 18356  0ECF  0021               	movlb	1	; select bank1
 18357  0ED0  00A6               	movwf	??_printf^(0+128)
 18358  0ED1  0826               	movf	??_printf^(0+128),w
 18359  0ED2  00B3               	movwf	printf@ap^(0+128)
 18360  0ED3                     l7469:	
 18361                           ;doprnt.c: 536: while(c = *f++) {
 18362                           
 18363  0ED3  0021               	movlb	1	; select bank1
 18364  0ED4  0821               	movf	(printf@f+1)^(0+128),w
 18365  0ED5  00A7               	movwf	(??_printf^(0+128)+1)
 18366  0ED6  0820               	movf	printf@f^(0+128),w
 18367  0ED7  00A6               	movwf	??_printf^(0+128)
 18368  0ED8  0AA0               	incf	printf@f^(0+128),f
 18369  0ED9  1903               	skipnz
 18370  0EDA  0AA1               	incf	(printf@f+1)^(0+128),f
 18371  0EDB  0826               	movf	??_printf^(0+128),w
 18372  0EDC  0084               	movwf	4
 18373  0EDD  0827               	movf	(??_printf+1)^(0+128),w
 18374  0EDE  0085               	movwf	5
 18375  0EDF  0800               	movf	0,w	;code access
 18376  0EE0  00A8               	movwf	(??_printf+2)^(0+128)
 18377  0EE1  0828               	movf	(??_printf+2)^(0+128),w
 18378  0EE2  00B4               	movwf	printf@c^(0+128)
 18379  0EE3  0834               	movf	printf@c^(0+128),w
 18380  0EE4  1903               	btfsc	3,2
 18381  0EE5  0008               	return
 18382                           
 18383                           ;doprnt.c: 538: if(c != '%')
 18384  0EE6  3025               	movlw	37
 18385  0EE7  0634               	xorwf	printf@c^(0+128),w
 18386  0EE8  1903               	btfsc	3,2
 18387  0EE9  2EEF               	goto	l7415
 18388                           
 18389                           ;doprnt.c: 540: {
 18390                           ;doprnt.c: 541: (putch(c) );
 18391  0EEA  0834               	movf	printf@c^(0+128),w
 18392  0EEB  31A1  21D4  318E   	fcall	_putch
 18393                           
 18394                           ;doprnt.c: 542: continue;
 18395  0EEE  2ED3               	goto	l7469
 18396  0EEF                     l7415:	
 18397                           
 18398                           ;doprnt.c: 543: }
 18399                           ;doprnt.c: 548: flag = 0;
 18400  0EEF  0021               	movlb	1	; select bank1
 18401  0EF0  01B2               	clrf	printf@flag^(0+128)
 18402                           
 18403                           ;doprnt.c: 635: switch(c = *f++) {
 18404                           
 18405                           ;doprnt.c: 633: loop:
 18406  0EF1  2EF6               	goto	l7419
 18407  0EF2                     l1494:	
 18408                           ;doprnt.c: 641: case 'l':
 18409                           
 18410                           ;doprnt.c: 638: goto alldone;
 18411                           
 18412                           ;doprnt.c: 637: case 0:
 18413                           
 18414                           
 18415                           ;doprnt.c: 643: flag |= 0x10;
 18416  0EF2  1632               	bsf	printf@flag^(0+128),4
 18417                           
 18418                           ;doprnt.c: 644: goto loop;
 18419  0EF3  2EF6               	goto	l7419
 18420  0EF4                     l1499:	
 18421                           ;doprnt.c: 817: case 'u':
 18422                           
 18423                           ;doprnt.c: 813: continue;
 18424                           
 18425                           ;doprnt.c: 802: default:
 18426                           
 18427                           ;doprnt.c: 698: case 'i':
 18428                           ;doprnt.c: 699: break;
 18429                           
 18430                           ;doprnt.c: 697: case 'd':
 18431                           
 18432                           
 18433                           ;doprnt.c: 818: flag |= 0x40;
 18434  0EF4  1732               	bsf	printf@flag^(0+128),6
 18435                           
 18436                           ;doprnt.c: 822: }
 18437                           
 18438                           ;doprnt.c: 819: break;
 18439  0EF5  2F13               	goto	l1497
 18440  0EF6                     l7419:	
 18441  0EF6  0821               	movf	(printf@f+1)^(0+128),w
 18442  0EF7  00A7               	movwf	(??_printf^(0+128)+1)
 18443  0EF8  0820               	movf	printf@f^(0+128),w
 18444  0EF9  00A6               	movwf	??_printf^(0+128)
 18445  0EFA  0AA0               	incf	printf@f^(0+128),f
 18446  0EFB  1903               	skipnz
 18447  0EFC  0AA1               	incf	(printf@f+1)^(0+128),f
 18448  0EFD  0826               	movf	??_printf^(0+128),w
 18449  0EFE  0084               	movwf	4
 18450  0EFF  0827               	movf	(??_printf+1)^(0+128),w
 18451  0F00  0085               	movwf	5
 18452  0F01  0800               	movf	0,w	;code access
 18453  0F02  00B4               	movwf	printf@c^(0+128)
 18454                           
 18455                           ; Switch size 1, requested type "space"
 18456                           ; Number of cases is 5, Range of values is 0 to 117
 18457                           ; switch strategies available:
 18458                           ; Name         Instructions Cycles
 18459                           ; simple_byte           16     9 (average)
 18460                           ; direct_byte          242     6 (fixed)
 18461                           ; jumptable            260     6 (fixed)
 18462                           ;	Chosen strategy is simple_byte
 18463  0F03  3A00               	xorlw	0	; case 0
 18464  0F04  1903               	skipnz
 18465  0F05  2FFF               	goto	l1515
 18466  0F06  3A64               	xorlw	100	; case 100
 18467  0F07  1903               	skipnz
 18468  0F08  2F13               	goto	l1497
 18469  0F09  3A0D               	xorlw	13	; case 105
 18470  0F0A  1903               	skipnz
 18471  0F0B  2F13               	goto	l1497
 18472  0F0C  3A05               	xorlw	5	; case 108
 18473  0F0D  1903               	skipnz
 18474  0F0E  2EF2               	goto	l1494
 18475  0F0F  3A19               	xorlw	25	; case 117
 18476  0F10  1903               	skipnz
 18477  0F11  2EF4               	goto	l1499
 18478  0F12  2ED3               	goto	l7469
 18479  0F13                     l1497:	
 18480                           
 18481                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 18482  0F13  1B32               	btfsc	printf@flag^(0+128),6
 18483  0F14  2F4A               	goto	l1500
 18484                           
 18485                           ;doprnt.c: 1253: {
 18486                           ;doprnt.c: 1255: if(flag & 0x10)
 18487  0F15  1E32               	btfss	printf@flag^(0+128),4
 18488  0F16  2F24               	goto	l7427
 18489                           
 18490                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 18491  0F17  0833               	movf	printf@ap^(0+128),w
 18492  0F18  0086               	movwf	6
 18493  0F19  0187               	clrf	7
 18494  0F1A  3F40               	moviw [0]fsr1
 18495  0F1B  00AE               	movwf	printf@val^(0+128)
 18496  0F1C  3F41               	moviw [1]fsr1
 18497  0F1D  00AF               	movwf	(printf@val+1)^(0+128)
 18498  0F1E  3F42               	moviw [2]fsr1
 18499  0F1F  00B0               	movwf	(printf@val+2)^(0+128)
 18500  0F20  3F43               	moviw [3]fsr1
 18501  0F21  00B1               	movwf	(printf@val+3)^(0+128)
 18502  0F22  3004               	movlw	4
 18503  0F23  2F35               	goto	L35
 18504  0F24                     l7427:	
 18505                           
 18506                           ;doprnt.c: 1257: else
 18507                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 18508  0F24  0833               	movf	printf@ap^(0+128),w
 18509  0F25  0086               	movwf	6
 18510  0F26  0187               	clrf	7
 18511  0F27  3F40               	moviw [0]fsr1
 18512  0F28  00A6               	movwf	??_printf^(0+128)
 18513  0F29  3F41               	moviw [1]fsr1
 18514  0F2A  00A7               	movwf	(??_printf^(0+128)+1)
 18515  0F2B  0826               	movf	??_printf^(0+128),w
 18516  0F2C  00AE               	movwf	printf@val^(0+128)
 18517  0F2D  0827               	movf	(??_printf+1)^(0+128),w
 18518  0F2E  00AF               	movwf	(printf@val+1)^(0+128)
 18519  0F2F  0D89               	rlf	9,f
 18520  0F30  3B89               	subwfb	9,f
 18521  0F31  0989               	comf	9,f
 18522  0F32  00B0               	movwf	(printf@val+2)^(0+128)
 18523  0F33  00B1               	movwf	(printf@val+3)^(0+128)
 18524  0F34  3002               	movlw	2
 18525  0F35                     L35:	
 18526  0F35  00A6               	movwf	??_printf^(0+128)
 18527  0F36  0826               	movf	??_printf^(0+128),w
 18528  0F37  07B3               	addwf	printf@ap^(0+128),f
 18529                           
 18530                           ;doprnt.c: 1261: if((long)val < 0) {
 18531  0F38  1FB1               	btfss	(printf@val+3)^(0+128),7
 18532  0F39  2F6A               	goto	l7445
 18533                           
 18534                           ;doprnt.c: 1262: flag |= 0x03;
 18535  0F3A  3003               	movlw	3
 18536  0F3B  00A6               	movwf	??_printf^(0+128)
 18537  0F3C  0826               	movf	??_printf^(0+128),w
 18538  0F3D  04B2               	iorwf	printf@flag^(0+128),f
 18539                           
 18540                           ;doprnt.c: 1263: val = -val;
 18541  0F3E  09AE               	comf	printf@val^(0+128),f
 18542  0F3F  09AF               	comf	(printf@val+1)^(0+128),f
 18543  0F40  09B0               	comf	(printf@val+2)^(0+128),f
 18544  0F41  09B1               	comf	(printf@val+3)^(0+128),f
 18545  0F42  0AAE               	incf	printf@val^(0+128),f
 18546  0F43  1903               	skipnz
 18547  0F44  0AAF               	incf	(printf@val+1)^(0+128),f
 18548  0F45  1903               	skipnz
 18549  0F46  0AB0               	incf	(printf@val+2)^(0+128),f
 18550  0F47  1903               	skipnz
 18551  0F48  0AB1               	incf	(printf@val+3)^(0+128),f
 18552                           
 18553                           ;doprnt.c: 1264: }
 18554                           ;doprnt.c: 1266: }
 18555  0F49  2F6A               	goto	l7445
 18556  0F4A                     l1500:	
 18557                           
 18558                           ;doprnt.c: 1268: else
 18559                           ;doprnt.c: 1273: {
 18560                           ;doprnt.c: 1281: if(flag & 0x10)
 18561  0F4A  1E32               	btfss	printf@flag^(0+128),4
 18562  0F4B  2F59               	goto	l7441
 18563                           
 18564                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 18565  0F4C  0833               	movf	printf@ap^(0+128),w
 18566  0F4D  0086               	movwf	6
 18567  0F4E  0187               	clrf	7
 18568  0F4F  3F40               	moviw [0]fsr1
 18569  0F50  00AE               	movwf	printf@val^(0+128)
 18570  0F51  3F41               	moviw [1]fsr1
 18571  0F52  00AF               	movwf	(printf@val+1)^(0+128)
 18572  0F53  3F42               	moviw [2]fsr1
 18573  0F54  00B0               	movwf	(printf@val+2)^(0+128)
 18574  0F55  3F43               	moviw [3]fsr1
 18575  0F56  00B1               	movwf	(printf@val+3)^(0+128)
 18576  0F57  3004               	movlw	4
 18577  0F58  2F67               	goto	L36
 18578  0F59                     l7441:	
 18579                           
 18580                           ;doprnt.c: 1283: else
 18581                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 18582  0F59  0833               	movf	printf@ap^(0+128),w
 18583  0F5A  0086               	movwf	6
 18584  0F5B  0187               	clrf	7
 18585  0F5C  3F40               	moviw [0]fsr1
 18586  0F5D  00A6               	movwf	??_printf^(0+128)
 18587  0F5E  3F41               	moviw [1]fsr1
 18588  0F5F  00A7               	movwf	(??_printf^(0+128)+1)
 18589  0F60  0826               	movf	??_printf^(0+128),w
 18590  0F61  00AE               	movwf	printf@val^(0+128)
 18591  0F62  0827               	movf	(??_printf+1)^(0+128),w
 18592  0F63  00AF               	movwf	(printf@val^(0+128)+1)
 18593  0F64  01B0               	clrf	(printf@val^(0+128)+2)
 18594  0F65  01B1               	clrf	(printf@val^(0+128)+3)
 18595  0F66  3002               	movlw	2
 18596  0F67                     L36:	
 18597  0F67  00A6               	movwf	??_printf^(0+128)
 18598  0F68  0826               	movf	??_printf^(0+128),w
 18599  0F69  07B3               	addwf	printf@ap^(0+128),f
 18600  0F6A                     l7445:	
 18601                           
 18602                           ;doprnt.c: 1287: }
 18603                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 18604  0F6A  01B4               	clrf	printf@c^(0+128)
 18605  0F6B  0AB4               	incf	printf@c^(0+128),f
 18606  0F6C  300A               	movlw	10
 18607  0F6D  0634               	xorwf	printf@c^(0+128),w
 18608  0F6E  1903               	btfsc	3,2
 18609  0F6F  2F9D               	goto	l7457
 18610  0F70                     l7451:	
 18611                           
 18612                           ;doprnt.c: 1306: if(val < dpowers[c])
 18613  0F70  0834               	movf	printf@c^(0+128),w
 18614  0F71  00A6               	movwf	??_printf^(0+128)
 18615  0F72  01A7               	clrf	(??_printf^(0+128)+1)
 18616  0F73  35A6               	lslf	??_printf^(0+128),f
 18617  0F74  0DA7               	rlf	(??_printf^(0+128)+1),f
 18618  0F75  35A6               	lslf	??_printf^(0+128),f
 18619  0F76  0DA7               	rlf	(??_printf^(0+128)+1),f
 18620  0F77  3000               	movlw	low (_dpowers| (0+32768))
 18621  0F78  0726               	addwf	??_printf^(0+128),w
 18622  0F79  0084               	movwf	4
 18623  0F7A  30A8               	movlw	high (_dpowers| (0+32768))
 18624  0F7B  3D27               	addwfc	(??_printf+1)^(0+128),w
 18625  0F7C  0085               	movwf	5
 18626  0F7D  3F00               	moviw [0]fsr0
 18627  0F7E  00A8               	movwf	(??_printf+2)^(0+128)
 18628  0F7F  3F01               	moviw [1]fsr0
 18629  0F80  00A9               	movwf	((??_printf+2)^(0+128)+1)
 18630  0F81  3F02               	moviw [2]fsr0
 18631  0F82  00AA               	movwf	((??_printf+2)^(0+128)+2)
 18632  0F83  3F03               	moviw [3]fsr0
 18633  0F84  00AB               	movwf	((??_printf+2)^(0+128)+3)
 18634  0F85  082B               	movf	(??_printf+5)^(0+128),w
 18635  0F86  0231               	subwf	(printf@val+3)^(0+128),w
 18636  0F87  1D03               	skipz
 18637  0F88  2F93               	goto	u7135
 18638  0F89  082A               	movf	(??_printf+4)^(0+128),w
 18639  0F8A  0230               	subwf	(printf@val+2)^(0+128),w
 18640  0F8B  1D03               	skipz
 18641  0F8C  2F93               	goto	u7135
 18642  0F8D  0829               	movf	(??_printf+3)^(0+128),w
 18643  0F8E  022F               	subwf	(printf@val+1)^(0+128),w
 18644  0F8F  1D03               	skipz
 18645  0F90  2F93               	goto	u7135
 18646  0F91  0828               	movf	(??_printf+2)^(0+128),w
 18647  0F92  022E               	subwf	printf@val^(0+128),w
 18648  0F93                     u7135:	
 18649  0F93  1C03               	btfss	3,0
 18650  0F94  2F9D               	goto	l7457
 18651                           
 18652                           ;doprnt.c: 1307: break;
 18653  0F95  3001               	movlw	1
 18654  0F96  00A6               	movwf	??_printf^(0+128)
 18655  0F97  0826               	movf	??_printf^(0+128),w
 18656  0F98  07B4               	addwf	printf@c^(0+128),f
 18657  0F99  300A               	movlw	10
 18658  0F9A  0634               	xorwf	printf@c^(0+128),w
 18659  0F9B  1D03               	btfss	3,2
 18660  0F9C  2F70               	goto	l7451
 18661  0F9D                     l7457:	
 18662                           
 18663                           ;doprnt.c: 1422: {
 18664                           ;doprnt.c: 1438: if(flag & 0x03)
 18665  0F9D  0832               	movf	printf@flag^(0+128),w
 18666  0F9E  3903               	andlw	3
 18667  0F9F  1903               	btfsc	3,2
 18668  0FA0  2FA5               	goto	l7461
 18669                           
 18670                           ;doprnt.c: 1439: (putch('-') );
 18671  0FA1  302D               	movlw	45
 18672  0FA2  31A1  21D4  318E   	fcall	_putch
 18673  0FA5                     l7461:	
 18674                           
 18675                           ;doprnt.c: 1469: }
 18676                           ;doprnt.c: 1472: prec = c;
 18677  0FA5  0021               	movlb	1	; select bank1
 18678  0FA6  0834               	movf	printf@c^(0+128),w
 18679  0FA7  00AC               	movwf	printf@prec^(0+128)
 18680  0FA8  01AD               	clrf	(printf@prec+1)^(0+128)
 18681  0FA9  1BAC               	btfsc	printf@prec^(0+128),7
 18682  0FAA  03AD               	decf	(printf@prec+1)^(0+128),f
 18683  0FAB                     l7467:	
 18684                           ;doprnt.c: 1474: while(prec--) {
 18685                           
 18686  0FAB  30FF               	movlw	255
 18687  0FAC  0021               	movlb	1	; select bank1
 18688  0FAD  07AC               	addwf	printf@prec^(0+128),f
 18689  0FAE  30FF               	movlw	255
 18690  0FAF  3DAD               	addwfc	(printf@prec+1)^(0+128),f
 18691  0FB0  0A2C               	incf	printf@prec^(0+128),w
 18692  0FB1  1903               	btfsc	3,2
 18693  0FB2  0A2D               	incf	(printf@prec+1)^(0+128),w
 18694  0FB3  1903               	btfsc	3,2
 18695  0FB4  2ED3               	goto	l7469
 18696                           
 18697                           ;doprnt.c: 1478: {
 18698                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 18699  0FB5  3000               	movlw	0
 18700  0FB6  0020               	movlb	0	; select bank0
 18701  0FB7  00C2               	movwf	___llmod@divisor+3
 18702  0FB8  3000               	movlw	0
 18703  0FB9  00C1               	movwf	___llmod@divisor+2
 18704  0FBA  3000               	movlw	0
 18705  0FBB  00C0               	movwf	___llmod@divisor+1
 18706  0FBC  300A               	movlw	10
 18707  0FBD  00BF               	movwf	___llmod@divisor
 18708  0FBE  0021               	movlb	1	; select bank1
 18709  0FBF  082D               	movf	(printf@prec+1)^(0+128),w
 18710  0FC0  0085               	movwf	5
 18711  0FC1  082C               	movf	printf@prec^(0+128),w
 18712  0FC2  0084               	movwf	4
 18713  0FC3  3584               	lslf	4,f
 18714  0FC4  0D85               	rlf	5,f
 18715  0FC5  3584               	lslf	4,f
 18716  0FC6  0D85               	rlf	5,f
 18717  0FC7  3000               	movlw	low (_dpowers| (0+32768))
 18718  0FC8  0784               	addwf	4,f
 18719  0FC9  30A8               	movlw	high (_dpowers| (0+32768))
 18720  0FCA  3D85               	addwfc	5,f
 18721  0FCB  3F00               	moviw [0]fsr0
 18722  0FCC  0020               	movlb	0	; select bank0
 18723  0FCD  00B1               	movwf	___lldiv@divisor
 18724  0FCE  3F01               	moviw [1]fsr0
 18725  0FCF  00B2               	movwf	___lldiv@divisor+1
 18726  0FD0  3F02               	moviw [2]fsr0
 18727  0FD1  00B3               	movwf	___lldiv@divisor+2
 18728  0FD2  3F03               	moviw [3]fsr0
 18729  0FD3  00B4               	movwf	___lldiv@divisor+3
 18730  0FD4  0021               	movlb	1	; select bank1
 18731  0FD5  0831               	movf	(printf@val+3)^(0+128),w
 18732  0FD6  0020               	movlb	0	; select bank0
 18733  0FD7  00B8               	movwf	___lldiv@dividend+3
 18734  0FD8  0021               	movlb	1	; select bank1
 18735  0FD9  0830               	movf	(printf@val+2)^(0+128),w
 18736  0FDA  0020               	movlb	0	; select bank0
 18737  0FDB  00B7               	movwf	___lldiv@dividend+2
 18738  0FDC  0021               	movlb	1	; select bank1
 18739  0FDD  082F               	movf	(printf@val+1)^(0+128),w
 18740  0FDE  0020               	movlb	0	; select bank0
 18741  0FDF  00B6               	movwf	___lldiv@dividend+1
 18742  0FE0  0021               	movlb	1	; select bank1
 18743  0FE1  082E               	movf	printf@val^(0+128),w
 18744  0FE2  0020               	movlb	0	; select bank0
 18745  0FE3  00B5               	movwf	___lldiv@dividend
 18746  0FE4  319D  2503  318E   	fcall	___lldiv
 18747  0FE7  0020               	movlb	0	; select bank0
 18748  0FE8  0834               	movf	?___lldiv+3,w
 18749  0FE9  00C6               	movwf	___llmod@dividend+3
 18750  0FEA  0833               	movf	?___lldiv+2,w
 18751  0FEB  00C5               	movwf	___llmod@dividend+2
 18752  0FEC  0832               	movf	?___lldiv+1,w
 18753  0FED  00C4               	movwf	___llmod@dividend+1
 18754  0FEE  0831               	movf	?___lldiv,w
 18755  0FEF  00C3               	movwf	___llmod@dividend
 18756  0FF0  3199  2136  318E   	fcall	___llmod
 18757  0FF3  0020               	movlb	0	; select bank0
 18758  0FF4  083F               	movf	?___llmod,w
 18759  0FF5  3E30               	addlw	48
 18760  0FF6  0021               	movlb	1	; select bank1
 18761  0FF7  00A6               	movwf	??_printf^(0+128)
 18762  0FF8  0826               	movf	??_printf^(0+128),w
 18763  0FF9  00B4               	movwf	printf@c^(0+128)
 18764                           
 18765                           ;doprnt.c: 1523: }
 18766                           ;doprnt.c: 1524: (putch(c) );
 18767  0FFA  0834               	movf	printf@c^(0+128),w
 18768  0FFB  31A1  21D4  318E   	fcall	_putch
 18769  0FFE  2FAB               	goto	l7467
 18770  0FFF                     l1515:	
 18771                           ;doprnt.c: 1540: return 0;
 18772                           ;	Return value of _printf is never used
 18773                           
 18774                           ;doprnt.c: 1525: }
 18775                           ;doprnt.c: 1533: }
 18776                           ;doprnt.c: 1535: alldone:
 18777                           
 18778  0FFF  0008               	return
 18779  1000                     __end_of_printf:	
 18780                           
 18781                           	psect	text61
 18782  21D4                     __ptext61:	
 18783 ;; *************** function _putch *****************
 18784 ;; Defined at:
 18785 ;;		line 156 in file "mcc_generated_files/eusart.c"
 18786 ;; Parameters:    Size  Location     Type
 18787 ;;  txData          1    wreg     unsigned char 
 18788 ;; Auto vars:     Size  Location     Type
 18789 ;;  txData          1   19[BANK0 ] unsigned char 
 18790 ;; Return value:  Size  Location     Type
 18791 ;;                  1    wreg      void 
 18792 ;; Registers used:
 18793 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18794 ;; Tracked objects:
 18795 ;;		On entry : 0/0
 18796 ;;		On exit  : 0/0
 18797 ;;		Unchanged: 0/0
 18798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18800 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18802 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18803 ;;Total ram usage:        1 bytes
 18804 ;; Hardware stack levels used:    1
 18805 ;; Hardware stack levels required when called:    7
 18806 ;; This function calls:
 18807 ;;		_EUSART_Write
 18808 ;; This function is called by:
 18809 ;;		_printf
 18810 ;; This function uses a non-reentrant model
 18811 ;;
 18812                           
 18813                           
 18814                           ;psect for function _putch
 18815  21D4                     _putch:	
 18816                           
 18817                           ;incstack = 0
 18818                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18819                           ;putch@txData stored from wreg
 18820  21D4  0020               	movlb	0	; select bank0
 18821  21D5  00B3               	movwf	putch@txData
 18822                           
 18823                           ;eusart.c: 158: EUSART_Write(txData);
 18824  21D6  0833               	movf	putch@txData,w
 18825  21D7  31A6  2629         	fcall	_EUSART_Write
 18826  21D9  0008               	return
 18827  21DA                     __end_of_putch:	
 18828                           
 18829                           	psect	text62
 18830  2629                     __ptext62:	
 18831 ;; *************** function _EUSART_Write *****************
 18832 ;; Defined at:
 18833 ;;		line 128 in file "mcc_generated_files/eusart.c"
 18834 ;; Parameters:    Size  Location     Type
 18835 ;;  txData          1    wreg     unsigned char 
 18836 ;; Auto vars:     Size  Location     Type
 18837 ;;  txData          1   18[BANK0 ] unsigned char 
 18838 ;; Return value:  Size  Location     Type
 18839 ;;                  1    wreg      void 
 18840 ;; Registers used:
 18841 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18842 ;; Tracked objects:
 18843 ;;		On entry : 0/0
 18844 ;;		On exit  : 0/0
 18845 ;;		Unchanged: 0/0
 18846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18850 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18851 ;;Total ram usage:        2 bytes
 18852 ;; Hardware stack levels used:    1
 18853 ;; Hardware stack levels required when called:    6
 18854 ;; This function calls:
 18855 ;;		Nothing
 18856 ;; This function is called by:
 18857 ;;		_putch
 18858 ;; This function uses a non-reentrant model
 18859 ;;
 18860                           
 18861                           
 18862                           ;psect for function _EUSART_Write
 18863  2629                     _EUSART_Write:	
 18864                           
 18865                           ;incstack = 0
 18866                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 18867                           ;EUSART_Write@txData stored from wreg
 18868  2629  0020               	movlb	0	; select bank0
 18869  262A  00B2               	movwf	EUSART_Write@txData
 18870  262B                     l7285:	
 18871                           ;eusart.c: 131: {
 18872                           
 18873                           ;eusart.c: 130: while(0 == eusartTxBufferRemaining)
 18874                           
 18875  262B  085E               	movf	_eusartTxBufferRemaining,w	;volatile
 18876  262C  1903               	btfsc	3,2
 18877  262D  2E2B               	goto	l7285
 18878                           
 18879                           ;eusart.c: 132: }
 18880                           ;eusart.c: 134: if(0 == PIE1bits.TXIE)
 18881  262E  0021               	movlb	1	; select bank1
 18882  262F  1A11               	btfsc	17,4	;volatile
 18883  2630  2E36               	goto	l424
 18884                           
 18885                           ;eusart.c: 135: {
 18886                           ;eusart.c: 136: TX1REG = txData;
 18887  2631  0020               	movlb	0	; select bank0
 18888  2632  0832               	movf	EUSART_Write@txData,w
 18889  2633  0023               	movlb	3	; select bank3
 18890  2634  009A               	movwf	26	;volatile
 18891                           
 18892                           ;eusart.c: 137: }
 18893  2635  2E4B               	goto	l7299
 18894  2636                     l424:	
 18895                           
 18896                           ;eusart.c: 138: else
 18897                           ;eusart.c: 139: {
 18898                           ;eusart.c: 140: PIE1bits.TXIE = 0;
 18899  2636  1211               	bcf	17,4	;volatile
 18900                           
 18901                           ;eusart.c: 141: eusartTxBuffer[eusartTxHead++] = txData;
 18902  2637  0020               	movlb	0	; select bank0
 18903  2638  0832               	movf	EUSART_Write@txData,w
 18904  2639  00B1               	movwf	??_EUSART_Write
 18905  263A  087D               	movf	_eusartTxHead,w
 18906  263B  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 18907  263C  0086               	movwf	6
 18908  263D  3001               	movlw	1	; select bank3/4
 18909  263E  0087               	movwf	7
 18910  263F  0831               	movf	??_EUSART_Write,w
 18911  2640  0081               	movwf	1
 18912  2641  3001               	movlw	1
 18913  2642  00B1               	movwf	??_EUSART_Write
 18914  2643  0831               	movf	??_EUSART_Write,w
 18915  2644  07FD               	addwf	_eusartTxHead,f	;volatile
 18916                           
 18917                           ;eusart.c: 142: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 18918  2645  3008               	movlw	8
 18919  2646  027D               	subwf	_eusartTxHead,w	;volatile
 18920  2647  1803               	btfsc	3,0
 18921                           
 18922                           ;eusart.c: 143: {
 18923                           ;eusart.c: 144: eusartTxHead = 0;
 18924  2648  01FD               	clrf	_eusartTxHead	;volatile
 18925                           
 18926                           ;eusart.c: 145: }
 18927                           ;eusart.c: 146: eusartTxBufferRemaining--;
 18928  2649  3001               	movlw	1
 18929  264A  02DE               	subwf	_eusartTxBufferRemaining,f	;volatile
 18930  264B                     l7299:	
 18931                           
 18932                           ;eusart.c: 147: }
 18933                           ;eusart.c: 148: PIE1bits.TXIE = 1;
 18934  264B  0021               	movlb	1	; select bank1
 18935  264C  1611               	bsf	17,4	;volatile
 18936  264D  0008               	return
 18937  264E                     __end_of_EUSART_Write:	
 18938                           
 18939                           	psect	text63
 18940  1936                     __ptext63:	
 18941 ;; *************** function ___llmod *****************
 18942 ;; Defined at:
 18943 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 18944 ;; Parameters:    Size  Location     Type
 18945 ;;  divisor         4   31[BANK0 ] unsigned long 
 18946 ;;  dividend        4   35[BANK0 ] unsigned long 
 18947 ;; Auto vars:     Size  Location     Type
 18948 ;;  counter         1   40[BANK0 ] unsigned char 
 18949 ;; Return value:  Size  Location     Type
 18950 ;;                  4   31[BANK0 ] unsigned long 
 18951 ;; Registers used:
 18952 ;;		wreg, status,2, status,0
 18953 ;; Tracked objects:
 18954 ;;		On entry : 0/0
 18955 ;;		On exit  : 0/0
 18956 ;;		Unchanged: 0/0
 18957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18958 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18959 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18960 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18961 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18962 ;;Total ram usage:       10 bytes
 18963 ;; Hardware stack levels used:    1
 18964 ;; Hardware stack levels required when called:    6
 18965 ;; This function calls:
 18966 ;;		Nothing
 18967 ;; This function is called by:
 18968 ;;		_printf
 18969 ;; This function uses a non-reentrant model
 18970 ;;
 18971                           
 18972                           
 18973                           ;psect for function ___llmod
 18974  1936                     ___llmod:	
 18975                           
 18976                           ;incstack = 0
 18977                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 18978  1936  0020               	movlb	0	; select bank0
 18979  1937  0842               	movf	___llmod@divisor+3,w
 18980  1938  0441               	iorwf	___llmod@divisor+2,w
 18981  1939  0440               	iorwf	___llmod@divisor+1,w
 18982  193A  043F               	iorwf	___llmod@divisor,w
 18983  193B  1903               	skipnz
 18984  193C  2970               	goto	l7373
 18985  193D  01C8               	clrf	___llmod@counter
 18986  193E  0AC8               	incf	___llmod@counter,f
 18987  193F                     l7363:	
 18988  193F  1BC2               	btfsc	___llmod@divisor+3,7
 18989  1940  294D               	goto	l7365
 18990  1941  3001               	movlw	1
 18991  1942                     u6905:	
 18992  1942  35BF               	lslf	___llmod@divisor,f
 18993  1943  0DC0               	rlf	___llmod@divisor+1,f
 18994  1944  0DC1               	rlf	___llmod@divisor+2,f
 18995  1945  0DC2               	rlf	___llmod@divisor+3,f
 18996  1946  0B89               	decfsz	9,f
 18997  1947  2942               	goto	u6905
 18998  1948  3001               	movlw	1
 18999  1949  00C7               	movwf	??___llmod
 19000  194A  0847               	movf	??___llmod,w
 19001  194B  07C8               	addwf	___llmod@counter,f
 19002  194C  293F               	goto	l7363
 19003  194D                     l7365:	
 19004  194D  0842               	movf	___llmod@divisor+3,w
 19005  194E  0246               	subwf	___llmod@dividend+3,w
 19006  194F  1D03               	skipz
 19007  1950  295B               	goto	u6925
 19008  1951  0841               	movf	___llmod@divisor+2,w
 19009  1952  0245               	subwf	___llmod@dividend+2,w
 19010  1953  1D03               	skipz
 19011  1954  295B               	goto	u6925
 19012  1955  0840               	movf	___llmod@divisor+1,w
 19013  1956  0244               	subwf	___llmod@dividend+1,w
 19014  1957  1D03               	skipz
 19015  1958  295B               	goto	u6925
 19016  1959  083F               	movf	___llmod@divisor,w
 19017  195A  0243               	subwf	___llmod@dividend,w
 19018  195B                     u6925:	
 19019  195B  1C03               	skipc
 19020  195C  2965               	goto	l7369
 19021  195D  083F               	movf	___llmod@divisor,w
 19022  195E  02C3               	subwf	___llmod@dividend,f
 19023  195F  0840               	movf	___llmod@divisor+1,w
 19024  1960  3BC4               	subwfb	___llmod@dividend+1,f
 19025  1961  0841               	movf	___llmod@divisor+2,w
 19026  1962  3BC5               	subwfb	___llmod@dividend+2,f
 19027  1963  0842               	movf	___llmod@divisor+3,w
 19028  1964  3BC6               	subwfb	___llmod@dividend+3,f
 19029  1965                     l7369:	
 19030  1965  3001               	movlw	1
 19031  1966                     u6935:	
 19032  1966  36C2               	lsrf	___llmod@divisor+3,f
 19033  1967  0CC1               	rrf	___llmod@divisor+2,f
 19034  1968  0CC0               	rrf	___llmod@divisor+1,f
 19035  1969  0CBF               	rrf	___llmod@divisor,f
 19036  196A  0B89               	decfsz	9,f
 19037  196B  2966               	goto	u6935
 19038  196C  3001               	movlw	1
 19039  196D  02C8               	subwf	___llmod@counter,f
 19040  196E  1D03               	btfss	3,2
 19041  196F  294D               	goto	l7365
 19042  1970                     l7373:	
 19043  1970  0846               	movf	___llmod@dividend+3,w
 19044  1971  00C2               	movwf	?___llmod+3
 19045  1972  0845               	movf	___llmod@dividend+2,w
 19046  1973  00C1               	movwf	?___llmod+2
 19047  1974  0844               	movf	___llmod@dividend+1,w
 19048  1975  00C0               	movwf	?___llmod+1
 19049  1976  0843               	movf	___llmod@dividend,w
 19050  1977  00BF               	movwf	?___llmod
 19051  1978  0008               	return
 19052  1979                     __end_of___llmod:	
 19053                           
 19054                           	psect	text64
 19055  1D03                     __ptext64:	
 19056 ;; *************** function ___lldiv *****************
 19057 ;; Defined at:
 19058 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 19059 ;; Parameters:    Size  Location     Type
 19060 ;;  divisor         4   17[BANK0 ] unsigned long 
 19061 ;;  dividend        4   21[BANK0 ] unsigned long 
 19062 ;; Auto vars:     Size  Location     Type
 19063 ;;  quotient        4   26[BANK0 ] unsigned long 
 19064 ;;  counter         1   30[BANK0 ] unsigned char 
 19065 ;; Return value:  Size  Location     Type
 19066 ;;                  4   17[BANK0 ] unsigned long 
 19067 ;; Registers used:
 19068 ;;		wreg, status,2, status,0
 19069 ;; Tracked objects:
 19070 ;;		On entry : 0/0
 19071 ;;		On exit  : 0/0
 19072 ;;		Unchanged: 0/0
 19073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19074 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19075 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19076 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19077 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19078 ;;Total ram usage:       14 bytes
 19079 ;; Hardware stack levels used:    1
 19080 ;; Hardware stack levels required when called:    6
 19081 ;; This function calls:
 19082 ;;		Nothing
 19083 ;; This function is called by:
 19084 ;;		_printf
 19085 ;; This function uses a non-reentrant model
 19086 ;;
 19087                           
 19088                           
 19089                           ;psect for function ___lldiv
 19090  1D03                     ___lldiv:	
 19091                           
 19092                           ;incstack = 0
 19093                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 19094  1D03  3000               	movlw	0
 19095  1D04  0020               	movlb	0	; select bank0
 19096  1D05  00BD               	movwf	___lldiv@quotient+3
 19097  1D06  3000               	movlw	0
 19098  1D07  00BC               	movwf	___lldiv@quotient+2
 19099  1D08  3000               	movlw	0
 19100  1D09  00BB               	movwf	___lldiv@quotient+1
 19101  1D0A  3000               	movlw	0
 19102  1D0B  00BA               	movwf	___lldiv@quotient
 19103  1D0C  0834               	movf	___lldiv@divisor+3,w
 19104  1D0D  0433               	iorwf	___lldiv@divisor+2,w
 19105  1D0E  0432               	iorwf	___lldiv@divisor+1,w
 19106  1D0F  0431               	iorwf	___lldiv@divisor,w
 19107  1D10  1903               	skipnz
 19108  1D11  2D4D               	goto	l7353
 19109  1D12  01BE               	clrf	___lldiv@counter
 19110  1D13  0ABE               	incf	___lldiv@counter,f
 19111  1D14                     l7339:	
 19112  1D14  1BB4               	btfsc	___lldiv@divisor+3,7
 19113  1D15  2D22               	goto	l7341
 19114  1D16  3001               	movlw	1
 19115  1D17                     u6835:	
 19116  1D17  35B1               	lslf	___lldiv@divisor,f
 19117  1D18  0DB2               	rlf	___lldiv@divisor+1,f
 19118  1D19  0DB3               	rlf	___lldiv@divisor+2,f
 19119  1D1A  0DB4               	rlf	___lldiv@divisor+3,f
 19120  1D1B  0B89               	decfsz	9,f
 19121  1D1C  2D17               	goto	u6835
 19122  1D1D  3001               	movlw	1
 19123  1D1E  00B9               	movwf	??___lldiv
 19124  1D1F  0839               	movf	??___lldiv,w
 19125  1D20  07BE               	addwf	___lldiv@counter,f
 19126  1D21  2D14               	goto	l7339
 19127  1D22                     l7341:	
 19128  1D22  3001               	movlw	1
 19129  1D23                     u6855:	
 19130  1D23  35BA               	lslf	___lldiv@quotient,f
 19131  1D24  0DBB               	rlf	___lldiv@quotient+1,f
 19132  1D25  0DBC               	rlf	___lldiv@quotient+2,f
 19133  1D26  0DBD               	rlf	___lldiv@quotient+3,f
 19134  1D27  0B89               	decfsz	9,f
 19135  1D28  2D23               	goto	u6855
 19136  1D29  0834               	movf	___lldiv@divisor+3,w
 19137  1D2A  0238               	subwf	___lldiv@dividend+3,w
 19138  1D2B  1D03               	skipz
 19139  1D2C  2D37               	goto	u6865
 19140  1D2D  0833               	movf	___lldiv@divisor+2,w
 19141  1D2E  0237               	subwf	___lldiv@dividend+2,w
 19142  1D2F  1D03               	skipz
 19143  1D30  2D37               	goto	u6865
 19144  1D31  0832               	movf	___lldiv@divisor+1,w
 19145  1D32  0236               	subwf	___lldiv@dividend+1,w
 19146  1D33  1D03               	skipz
 19147  1D34  2D37               	goto	u6865
 19148  1D35  0831               	movf	___lldiv@divisor,w
 19149  1D36  0235               	subwf	___lldiv@dividend,w
 19150  1D37                     u6865:	
 19151  1D37  1C03               	skipc
 19152  1D38  2D42               	goto	l7349
 19153  1D39  0831               	movf	___lldiv@divisor,w
 19154  1D3A  02B5               	subwf	___lldiv@dividend,f
 19155  1D3B  0832               	movf	___lldiv@divisor+1,w
 19156  1D3C  3BB6               	subwfb	___lldiv@dividend+1,f
 19157  1D3D  0833               	movf	___lldiv@divisor+2,w
 19158  1D3E  3BB7               	subwfb	___lldiv@dividend+2,f
 19159  1D3F  0834               	movf	___lldiv@divisor+3,w
 19160  1D40  3BB8               	subwfb	___lldiv@dividend+3,f
 19161  1D41  143A               	bsf	___lldiv@quotient,0
 19162  1D42                     l7349:	
 19163  1D42  3001               	movlw	1
 19164  1D43                     u6875:	
 19165  1D43  36B4               	lsrf	___lldiv@divisor+3,f
 19166  1D44  0CB3               	rrf	___lldiv@divisor+2,f
 19167  1D45  0CB2               	rrf	___lldiv@divisor+1,f
 19168  1D46  0CB1               	rrf	___lldiv@divisor,f
 19169  1D47  0B89               	decfsz	9,f
 19170  1D48  2D43               	goto	u6875
 19171  1D49  3001               	movlw	1
 19172  1D4A  02BE               	subwf	___lldiv@counter,f
 19173  1D4B  1D03               	btfss	3,2
 19174  1D4C  2D22               	goto	l7341
 19175  1D4D                     l7353:	
 19176  1D4D  083D               	movf	___lldiv@quotient+3,w
 19177  1D4E  00B4               	movwf	?___lldiv+3
 19178  1D4F  083C               	movf	___lldiv@quotient+2,w
 19179  1D50  00B3               	movwf	?___lldiv+2
 19180  1D51  083B               	movf	___lldiv@quotient+1,w
 19181  1D52  00B2               	movwf	?___lldiv+1
 19182  1D53  083A               	movf	___lldiv@quotient,w
 19183  1D54  00B1               	movwf	?___lldiv
 19184  1D55  0008               	return
 19185  1D56                     __end_of___lldiv:	
 19186                           
 19187                           	psect	text65
 19188  23AD                     __ptext65:	
 19189 ;; *************** function _i2c_setBuffer *****************
 19190 ;; Defined at:
 19191 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 19192 ;; Parameters:    Size  Location     Type
 19193 ;;  buffer          2   17[BANK0 ] PTR void 
 19194 ;;		 -> drv_read@reg(1), drv_read@buff(1), drv2665@drv_fifo_sine(244), drv_write@buff(2), 
 19195 ;;  bufferSize      2   19[BANK0 ] unsigned int 
 19196 ;; Auto vars:     Size  Location     Type
 19197 ;;		None
 19198 ;; Return value:  Size  Location     Type
 19199 ;;                  1    wreg      void 
 19200 ;; Registers used:
 19201 ;;		wreg
 19202 ;; Tracked objects:
 19203 ;;		On entry : 0/0
 19204 ;;		On exit  : 0/0
 19205 ;;		Unchanged: 0/0
 19206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19207 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19210 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19211 ;;Total ram usage:        4 bytes
 19212 ;; Hardware stack levels used:    1
 19213 ;; Hardware stack levels required when called:    6
 19214 ;; This function calls:
 19215 ;;		Nothing
 19216 ;; This function is called by:
 19217 ;;		_drv_write
 19218 ;;		_drv_read
 19219 ;;		_drv_write_wvfrm
 19220 ;; This function uses a non-reentrant model
 19221 ;;
 19222                           
 19223                           
 19224                           ;psect for function _i2c_setBuffer
 19225  23AD                     _i2c_setBuffer:	
 19226                           
 19227                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 19228                           
 19229                           ;incstack = 0
 19230                           ; Regs used in _i2c_setBuffer: [wreg]
 19231  23AD  0022               	movlb	2	; select bank2
 19232  23AE  1D20               	btfss	_i2c_status^(0+256),2
 19233  23AF  0008               	return
 19234                           
 19235                           ;i2c_master.c: 187: {
 19236                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 19237  23B0  0020               	movlb	0	; select bank0
 19238  23B1  0832               	movf	i2c_setBuffer@buffer+1,w
 19239  23B2  0022               	movlb	2	; select bank2
 19240  23B3  00A3               	movwf	((low ((_i2c_status| (0+256)+2))+1))^0
 19241  23B4  0020               	movlb	0	; select bank0
 19242  23B5  0831               	movf	i2c_setBuffer@buffer,w
 19243  23B6  0022               	movlb	2	; select bank2
 19244  23B7  00A2               	movwf	(low ((_i2c_status| (0+256)+2)))^0
 19245                           
 19246                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 19247  23B8  0020               	movlb	0	; select bank0
 19248  23B9  0834               	movf	i2c_setBuffer@bufferSize+1,w
 19249  23BA  0022               	movlb	2	; select bank2
 19250  23BB  00A5               	movwf	((_i2c_status+1)^(0+256)+4)
 19251  23BC  0020               	movlb	0	; select bank0
 19252  23BD  0833               	movf	i2c_setBuffer@bufferSize,w
 19253  23BE  0022               	movlb	2	; select bank2
 19254  23BF  00A4               	movwf	(_i2c_status^(0+256)+4)
 19255                           
 19256                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 19257  23C0  1120               	bcf	_i2c_status^(0+256),2
 19258  23C1  0008               	return
 19259  23C2                     __end_of_i2c_setBuffer:	
 19260                           
 19261                           	psect	text66
 19262  25E1                     __ptext66:	
 19263 ;; *************** function _i2c_masterOperation *****************
 19264 ;; Defined at:
 19265 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 19266 ;; Parameters:    Size  Location     Type
 19267 ;;  read            1    wreg     unsigned char 
 19268 ;; Auto vars:     Size  Location     Type
 19269 ;;  read            1   24[BANK0 ] unsigned char 
 19270 ;;  ret             1   25[BANK0 ] enum E8193
 19271 ;; Return value:  Size  Location     Type
 19272 ;;                  1    wreg      enum E8193
 19273 ;; Registers used:
 19274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19275 ;; Tracked objects:
 19276 ;;		On entry : 0/0
 19277 ;;		On exit  : 0/0
 19278 ;;		Unchanged: 0/0
 19279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19281 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19282 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19283 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19284 ;;Total ram usage:        3 bytes
 19285 ;; Hardware stack levels used:    1
 19286 ;; Hardware stack levels required when called:   11
 19287 ;; This function calls:
 19288 ;;		_i2c1_driver_start
 19289 ;;		_i2c_poller
 19290 ;;		_mssp1_IRQisEnabled
 19291 ;; This function is called by:
 19292 ;;		_drv_write
 19293 ;;		_drv_read
 19294 ;;		_i2c_masterRead
 19295 ;;		_i2c_masterWrite
 19296 ;;		_drv_write_wvfrm
 19297 ;; This function uses a non-reentrant model
 19298 ;;
 19299                           
 19300                           
 19301                           ;psect for function _i2c_masterOperation
 19302  25E1                     _i2c_masterOperation:	
 19303                           
 19304                           ;incstack = 0
 19305                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19306                           ;i2c_masterOperation@read stored from wreg
 19307  25E1  0020               	movlb	0	; select bank0
 19308  25E2  00B8               	movwf	i2c_masterOperation@read
 19309                           
 19310                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 19311  25E3  01B9               	clrf	i2c_masterOperation@ret
 19312  25E4  0AB9               	incf	i2c_masterOperation@ret,f
 19313                           
 19314                           ;i2c_master.c: 196: if(!i2c_status.busy)
 19315  25E5  0022               	movlb	2	; select bank2
 19316  25E6  1820               	btfsc	_i2c_status^(0+256),0
 19317  25E7  2E02               	goto	l7493
 19318                           
 19319                           ;i2c_master.c: 197: {
 19320                           ;i2c_master.c: 198: i2c_status.busy = 1;
 19321  25E8  1420               	bsf	_i2c_status^(0+256),0
 19322                           
 19323                           ;i2c_master.c: 199: ret = I2C_NOERR;
 19324  25E9  0020               	movlb	0	; select bank0
 19325  25EA  01B9               	clrf	i2c_masterOperation@ret
 19326                           
 19327                           ;i2c_master.c: 201: if(read)
 19328  25EB  0838               	movf	i2c_masterOperation@read,w
 19329  25EC  1903               	btfsc	3,2
 19330  25ED  2DF2               	goto	l7487
 19331                           
 19332                           ;i2c_master.c: 202: {
 19333                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 19334  25EE  0022               	movlb	2	; select bank2
 19335  25EF  01AA               	clrf	(_i2c_status^(0+256)+10)
 19336  25F0  0AAA               	incf	(_i2c_status^(0+256)+10),f
 19337                           
 19338                           ;i2c_master.c: 204: }
 19339  25F1  2DF8               	goto	l7489
 19340  25F2                     l7487:	
 19341                           
 19342                           ;i2c_master.c: 205: else
 19343                           ;i2c_master.c: 206: {
 19344                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 19345  25F2  3002               	movlw	2
 19346  25F3  0020               	movlb	0	; select bank0
 19347  25F4  00B7               	movwf	??_i2c_masterOperation
 19348  25F5  0837               	movf	??_i2c_masterOperation,w
 19349  25F6  0022               	movlb	2	; select bank2
 19350  25F7  00AA               	movwf	(_i2c_status^(0+256)+10)
 19351  25F8                     l7489:	
 19352                           
 19353                           ;i2c_master.c: 208: }
 19354                           ;i2c_master.c: 209: i2c1_driver_start();
 19355  25F8  31A1  215D  31A5   	fcall	_i2c1_driver_start
 19356                           
 19357                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 19358  25FB  31A2  228E  31A5   	fcall	_mssp1_IRQisEnabled
 19359  25FE  1803               	btfsc	3,0
 19360  25FF  2E02               	goto	l7493
 19361                           
 19362                           ;i2c_master.c: 212: i2c_poller();
 19363  2600  31A2  22CD         	fcall	_i2c_poller
 19364  2602                     l7493:	
 19365                           
 19366                           ;i2c_master.c: 213: }
 19367                           ;i2c_master.c: 214: return ret;
 19368  2602  0020               	movlb	0	; select bank0
 19369  2603  0839               	movf	i2c_masterOperation@ret,w
 19370  2604  0008               	return
 19371  2605                     __end_of_i2c_masterOperation:	
 19372                           
 19373                           	psect	text67
 19374  228E                     __ptext67:	
 19375 ;; *************** function _mssp1_IRQisEnabled *****************
 19376 ;; Defined at:
 19377 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
 19378 ;; Parameters:    Size  Location     Type
 19379 ;;		None
 19380 ;; Auto vars:     Size  Location     Type
 19381 ;;		None
 19382 ;; Return value:  Size  Location     Type
 19383 ;;		None               void
 19384 ;; Registers used:
 19385 ;;		wreg, status,2, status,0
 19386 ;; Tracked objects:
 19387 ;;		On entry : 0/0
 19388 ;;		On exit  : 0/0
 19389 ;;		Unchanged: 0/0
 19390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19393 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19394 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19395 ;;Total ram usage:        2 bytes
 19396 ;; Hardware stack levels used:    1
 19397 ;; Hardware stack levels required when called:    6
 19398 ;; This function calls:
 19399 ;;		Nothing
 19400 ;; This function is called by:
 19401 ;;		_i2c_masterOperation
 19402 ;; This function uses a non-reentrant model
 19403 ;;
 19404                           
 19405                           
 19406                           ;psect for function _mssp1_IRQisEnabled
 19407  228E                     _mssp1_IRQisEnabled:	
 19408                           
 19409                           ;i2c1_driver.c: 45: return PIE1bits.SSP1IE;
 19410                           
 19411                           ;incstack = 0
 19412                           ; Regs used in _mssp1_IRQisEnabled: [wreg+status,2+status,0]
 19413  228E  0021               	movlb	1	; select bank1
 19414  228F  0C11               	rrf	17,w	;volatile
 19415  2290  0020               	movlb	0	; select bank0
 19416  2291  00B1               	movwf	??_mssp1_IRQisEnabled
 19417  2292  0CB1               	rrf	??_mssp1_IRQisEnabled,f
 19418  2293  0C31               	rrf	??_mssp1_IRQisEnabled,w
 19419  2294  3901               	andlw	1
 19420  2295  00B2               	movwf	??_mssp1_IRQisEnabled+1
 19421  2296  0C32               	rrf	??_mssp1_IRQisEnabled+1,w
 19422  2297  0008               	return
 19423  2298                     __end_of_mssp1_IRQisEnabled:	
 19424                           
 19425                           	psect	text68
 19426  22CD                     __ptext68:	
 19427 ;; *************** function _i2c_poller *****************
 19428 ;; Defined at:
 19429 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 19430 ;; Parameters:    Size  Location     Type
 19431 ;;		None
 19432 ;; Auto vars:     Size  Location     Type
 19433 ;;		None
 19434 ;; Return value:  Size  Location     Type
 19435 ;;                  1    wreg      void 
 19436 ;; Registers used:
 19437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19438 ;; Tracked objects:
 19439 ;;		On entry : 0/0
 19440 ;;		On exit  : 0/0
 19441 ;;		Unchanged: 0/0
 19442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19447 ;;Total ram usage:        0 bytes
 19448 ;; Hardware stack levels used:    1
 19449 ;; Hardware stack levels required when called:   10
 19450 ;; This function calls:
 19451 ;;		_i2c_ISR
 19452 ;;		_mssp1_waitForEvent
 19453 ;; This function is called by:
 19454 ;;		_i2c_masterOperation
 19455 ;; This function uses a non-reentrant model
 19456 ;;
 19457                           
 19458                           
 19459                           ;psect for function _i2c_poller
 19460  22CD                     _i2c_poller:	
 19461  22CD                     l7331:	
 19462                           ;i2c_master.c: 232: while(i2c_status.busy)
 19463                           
 19464                           ;incstack = 0
 19465                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19466                           
 19467  22CD  0022               	movlb	2	; select bank2
 19468  22CE  1C20               	btfss	_i2c_status^(0+256),0
 19469  22CF  0008               	return
 19470                           
 19471                           ;i2c_master.c: 233: {
 19472                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 19473  22D0  3000               	movlw	0
 19474  22D1  31A2  22C2  31A2   	fcall	_mssp1_waitForEvent
 19475                           
 19476                           ;i2c_master.c: 235: i2c_ISR();
 19477  22D4  31A6  264E  31A2   	fcall	_i2c_ISR
 19478  22D7  2ACD               	goto	l7331
 19479  22D8                     __end_of_i2c_poller:	
 19480                           
 19481                           	psect	text69
 19482  22C2                     __ptext69:	
 19483 ;; *************** function _mssp1_waitForEvent *****************
 19484 ;; Defined at:
 19485 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
 19486 ;; Parameters:    Size  Location     Type
 19487 ;;  timeout         1    wreg     PTR unsigned int 
 19488 ;;		 -> NULL(0), 
 19489 ;; Auto vars:     Size  Location     Type
 19490 ;;  timeout         1   17[BANK0 ] PTR unsigned int 
 19491 ;;		 -> NULL(0), 
 19492 ;; Return value:  Size  Location     Type
 19493 ;;                  1    wreg      void 
 19494 ;; Registers used:
 19495 ;;		wreg
 19496 ;; Tracked objects:
 19497 ;;		On entry : 0/0
 19498 ;;		On exit  : 0/0
 19499 ;;		Unchanged: 0/0
 19500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19502 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19504 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19505 ;;Total ram usage:        1 bytes
 19506 ;; Hardware stack levels used:    1
 19507 ;; Hardware stack levels required when called:    6
 19508 ;; This function calls:
 19509 ;;		Nothing
 19510 ;; This function is called by:
 19511 ;;		_i2c_poller
 19512 ;; This function uses a non-reentrant model
 19513 ;;
 19514                           
 19515                           
 19516                           ;psect for function _mssp1_waitForEvent
 19517  22C2                     _mssp1_waitForEvent:	
 19518                           
 19519                           ;i2c1_driver.c: 73: if(PIR1bits.SSP1IF == 0)
 19520                           
 19521                           ;incstack = 0
 19522                           ; Regs used in _mssp1_waitForEvent: [wreg]
 19523  22C2  0020               	movlb	0	; select bank0
 19524  22C3  1991               	btfsc	17,3	;volatile
 19525  22C4  0008               	return
 19526  22C5                     l509:	
 19527                           ;i2c1_driver.c: 74: {
 19528                           ;i2c1_driver.c: 75: while(1)
 19529                           
 19530                           
 19531                           ;i2c1_driver.c: 76: {
 19532                           ;i2c1_driver.c: 77: if(PIR1bits.SSP1IF) break;
 19533  22C5  0020               	movlb	0	; select bank0
 19534  22C6  1991               	btfsc	17,3	;volatile
 19535  22C7  0008               	return
 19536                           
 19537                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(1000000/4000000.0)));
 19538  22C8  3008               	movlw	8
 19539  22C9                     u9207:	
 19540  22C9  0B89               	decfsz	9,f
 19541  22CA  2AC9               	goto	u9207
 19542  22CB  0000               	nop
 19543  22CC  2AC5               	goto	l509
 19544  22CD                     __end_of_mssp1_waitForEvent:	
 19545                           
 19546                           	psect	text70
 19547  264E                     __ptext70:	
 19548 ;; *************** function _i2c_ISR *****************
 19549 ;; Defined at:
 19550 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 19551 ;; Parameters:    Size  Location     Type
 19552 ;;		None
 19553 ;; Auto vars:     Size  Location     Type
 19554 ;;		None
 19555 ;; Return value:  Size  Location     Type
 19556 ;;                  1    wreg      void 
 19557 ;; Registers used:
 19558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19559 ;; Tracked objects:
 19560 ;;		On entry : 0/0
 19561 ;;		On exit  : 0/0
 19562 ;;		Unchanged: 0/0
 19563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19566 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19567 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19568 ;;Total ram usage:        1 bytes
 19569 ;; Hardware stack levels used:    1
 19570 ;; Hardware stack levels required when called:    9
 19571 ;; This function calls:
 19572 ;;		_do_I2C_DO_ACK
 19573 ;;		_do_I2C_DO_ADDRESS_NACK
 19574 ;;		_do_I2C_DO_NACK_RESTART
 19575 ;;		_do_I2C_DO_NACK_STOP
 19576 ;;		_do_I2C_IDLE
 19577 ;;		_do_I2C_RCEN
 19578 ;;		_do_I2C_RESET
 19579 ;;		_do_I2C_RX
 19580 ;;		_do_I2C_SEND_ADR_READ
 19581 ;;		_do_I2C_SEND_ADR_WRITE
 19582 ;;		_do_I2C_SEND_RESTART
 19583 ;;		_do_I2C_SEND_RESTART_READ
 19584 ;;		_do_I2C_SEND_RESTART_WRITE
 19585 ;;		_do_I2C_SEND_STOP
 19586 ;;		_do_I2C_TX
 19587 ;;		_do_I2C_TX_EMPTY
 19588 ;;		_i2c1_driver_isNACK
 19589 ;;		_mssp1_clearIRQ
 19590 ;; This function is called by:
 19591 ;;		_i2c_open
 19592 ;;		_i2c_poller
 19593 ;;		_INTERRUPT_InterruptManager
 19594 ;; This function uses a non-reentrant model
 19595 ;;
 19596                           
 19597                           
 19598                           ;psect for function _i2c_ISR
 19599  264E                     _i2c_ISR:	
 19600                           
 19601                           ;Skip over the trampoline to the duplicate function for level 1
 19602  264E  1C7E               	btfss	126,0
 19603  264F  2E52               	goto	l7307
 19604  2650  31A4  2CD6         	ljmp	i1l8551
 19605  2652                     _i2c_ISR$intlevel0:	
 19606  2652                     l7307:	
 19607                           ;incstack = 0
 19608                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19609                           
 19610                           
 19611                           ;i2c_master.c: 421: mssp1_clearIRQ();
 19612  2652  31A1  216F  31A6   	fcall	_mssp1_clearIRQ
 19613                           
 19614                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 19615  2655  0022               	movlb	2	; select bank2
 19616  2656  1DA0               	btfss	_i2c_status^(0+256),3
 19617  2657  2E63               	goto	l7315
 19618  2658  31A3  2322  31A6   	fcall	_i2c1_driver_isNACK
 19619  265B  1C03               	btfss	3,0
 19620  265C  2E63               	goto	l7315
 19621                           
 19622                           ;i2c_master.c: 428: {
 19623                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 19624  265D  300F               	movlw	15
 19625  265E  0020               	movlb	0	; select bank0
 19626  265F  00B6               	movwf	??_i2c_ISR
 19627  2660  0836               	movf	??_i2c_ISR,w
 19628  2661  0022               	movlb	2	; select bank2
 19629  2662  00AA               	movwf	(_i2c_status^(0+256)+10)
 19630  2663                     l7315:	
 19631                           
 19632                           ;i2c_master.c: 430: }
 19633                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 19634  2663  0022               	movlb	2	; select bank2
 19635  2664  352A               	lslf	(_i2c_status^(0+256)+10),w
 19636  2665  3E20               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 19637  2666  0086               	movwf	6
 19638  2667  3002               	movlw	2	; select bank4/5
 19639  2668  0087               	movwf	7
 19640  2669  3F41               	moviw [1]fsr1
 19641  266A  008A               	movwf	10
 19642  266B  3F40               	moviw [0]fsr1
 19643  266C  000A               	callw
 19644  266D  31A6               	pagesel	$
 19645  266E  0020               	movlb	0	; select bank0
 19646  266F  00B6               	movwf	??_i2c_ISR
 19647  2670  0836               	movf	??_i2c_ISR,w
 19648  2671  0022               	movlb	2	; select bank2
 19649  2672  00AA               	movwf	(_i2c_status^(0+256)+10)
 19650  2673  0008               	return
 19651  2674                     __end_of_i2c_ISR:	
 19652                           
 19653                           	psect	text71
 19654  216F                     __ptext71:	
 19655 ;; *************** function _mssp1_clearIRQ *****************
 19656 ;; Defined at:
 19657 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 19658 ;; Parameters:    Size  Location     Type
 19659 ;;		None
 19660 ;; Auto vars:     Size  Location     Type
 19661 ;;		None
 19662 ;; Return value:  Size  Location     Type
 19663 ;;                  1    wreg      void 
 19664 ;; Registers used:
 19665 ;;		None
 19666 ;; Tracked objects:
 19667 ;;		On entry : 0/0
 19668 ;;		On exit  : 0/0
 19669 ;;		Unchanged: 0/0
 19670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19675 ;;Total ram usage:        0 bytes
 19676 ;; Hardware stack levels used:    1
 19677 ;; Hardware stack levels required when called:    6
 19678 ;; This function calls:
 19679 ;;		Nothing
 19680 ;; This function is called by:
 19681 ;;		_i2c_open
 19682 ;;		_i2c_ISR
 19683 ;;		_i2c_close
 19684 ;; This function uses a non-reentrant model
 19685 ;;
 19686                           
 19687                           
 19688                           ;psect for function _mssp1_clearIRQ
 19689  216F                     _mssp1_clearIRQ:	
 19690                           
 19691                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 19692                           
 19693                           ;incstack = 0
 19694                           ; Regs used in _mssp1_clearIRQ: []
 19695  216F  0020               	movlb	0	; select bank0
 19696  2170  1191               	bcf	17,3	;volatile
 19697  2171  0008               	return
 19698  2172                     __end_of_mssp1_clearIRQ:	
 19699                           
 19700                           	psect	text72
 19701  19BC                     __ptext72:	
 19702 ;; *************** function _do_I2C_RX *****************
 19703 ;; Defined at:
 19704 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 19705 ;; Parameters:    Size  Location     Type
 19706 ;;		None
 19707 ;; Auto vars:     Size  Location     Type
 19708 ;;		None
 19709 ;; Return value:  Size  Location     Type
 19710 ;;                  1    wreg      enum E8364
 19711 ;; Registers used:
 19712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19713 ;; Tracked objects:
 19714 ;;		On entry : 0/0
 19715 ;;		On exit  : 0/0
 19716 ;;		Unchanged: 0/0
 19717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19720 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19721 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19722 ;;Total ram usage:        1 bytes
 19723 ;; Hardware stack levels used:    1
 19724 ;; Hardware stack levels required when called:    8
 19725 ;; This function calls:
 19726 ;;		_do_I2C_DO_NACK_RESTART
 19727 ;;		_do_I2C_DO_NACK_STOP
 19728 ;;		_i2c1_driver_getRXData
 19729 ;;		_i2c1_driver_sendACK
 19730 ;;		_returnReset
 19731 ;;		_returnStop
 19732 ;; This function is called by:
 19733 ;;		_i2c_ISR
 19734 ;;		i1_i2c_ISR
 19735 ;; This function uses a non-reentrant model
 19736 ;;
 19737                           
 19738                           
 19739                           ;psect for function _do_I2C_RX
 19740  19BC                     _do_I2C_RX:	
 19741                           
 19742                           ;Skip over the trampoline to the duplicate function for level 1
 19743  19BC  1C7E               	btfss	126,0
 19744  19BD  29C0               	goto	l7237
 19745  19BE  3198  28B8         	ljmp	i1l8333
 19746  19C0                     _do_I2C_RX$intlevel0:	
 19747  19C0                     l7237:	
 19748                           ;incstack = 0
 19749                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19750                           
 19751                           
 19752                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 19753  19C0  0022               	movlb	2	; select bank2
 19754  19C1  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 19755  19C2  0086               	movwf	6
 19756  19C3  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 19757  19C4  0087               	movwf	7
 19758  19C5  31A1  2169  3199   	fcall	_i2c1_driver_getRXData
 19759  19C8  0081               	movwf	1
 19760  19C9  3001               	movlw	1
 19761  19CA  0022               	movlb	2	; select bank2
 19762  19CB  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 19763  19CC  3000               	movlw	0
 19764  19CD  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 19765                           
 19766                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 19767  19CE  3001               	movlw	1
 19768  19CF  02A4               	subwf	(_i2c_status^(0+256)+4),f
 19769  19D0  3000               	movlw	0
 19770  19D1  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 19771  19D2  0824               	movf	(_i2c_status^(0+256)+4),w
 19772  19D3  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 19773  19D4  1903               	btfsc	3,2
 19774  19D5  29DA               	goto	l770
 19775                           
 19776                           ;i2c_master.c: 361: {
 19777                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 19778  19D6  31A1  219A         	fcall	_i2c1_driver_sendACK
 19779                           
 19780                           ;i2c_master.c: 363: return I2C_RCEN;
 19781  19D8  3005               	movlw	5
 19782                           
 19783                           ;i2c_master.c: 364: }
 19784  19D9  0008               	return
 19785  19DA                     l770:	
 19786                           
 19787                           ;i2c_master.c: 365: else
 19788                           ;i2c_master.c: 366: {
 19789                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 19790  19DA  1520               	bsf	_i2c_status^(0+256),2
 19791                           
 19792                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 19793  19DB  29E2               	goto	l7261
 19794  19DC                     l7251:	
 19795                           ;i2c_master.c: 369: {
 19796                           ;i2c_master.c: 370: case i2c_restart_write:
 19797                           
 19798                           
 19799                           ;i2c_master.c: 371: case i2c_restart_read:
 19800                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 19801  19DC  31A2  2234         	fcall	_do_I2C_DO_NACK_RESTART
 19802  19DE  0008               	return
 19803  19DF                     l7255:	
 19804                           ;i2c_master.c: 374: case i2c_continue:
 19805                           
 19806                           ;i2c_master.c: 373: default:
 19807                           
 19808                           
 19809                           ;i2c_master.c: 375: case i2c_stop:
 19810                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 19811  19DF  31A2  222C         	fcall	_do_I2C_DO_NACK_STOP
 19812                           
 19813                           ;i2c_master.c: 377: }
 19814  19E1  0008               	return
 19815  19E2                     l7261:	
 19816  19E2  0022               	movlb	2	; select bank2
 19817  19E3  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 19818  19E4  0020               	movlb	0	; select bank0
 19819  19E5  00B1               	movwf	??_do_I2C_RX
 19820  19E6  0831               	movf	??_do_I2C_RX,w
 19821  19E7  00B1               	movwf	returnReset@p
 19822  19E8  300C               	movlw	12
 19823  19E9  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 19824  19EA  0086               	movwf	6
 19825  19EB  3001               	movlw	1	; select bank2/3
 19826  19EC  0087               	movwf	7
 19827  19ED  3F41               	moviw [1]fsr1
 19828  19EE  008A               	movwf	10
 19829  19EF  3F40               	moviw [0]fsr1
 19830  19F0  000A               	callw
 19831  19F1  3199               	pagesel	$
 19832                           
 19833                           ; Switch size 1, requested type "space"
 19834                           ; Number of cases is 4, Range of values is 1 to 4
 19835                           ; switch strategies available:
 19836                           ; Name         Instructions Cycles
 19837                           ; simple_byte           13     7 (average)
 19838                           ; direct_byte           17     9 (fixed)
 19839                           ; jumptable            263     9 (fixed)
 19840                           ;	Chosen strategy is simple_byte
 19841  19F2  3A01               	xorlw	1	; case 1
 19842  19F3  1903               	skipnz
 19843  19F4  29DF               	goto	l7255
 19844  19F5  3A03               	xorlw	3	; case 2
 19845  19F6  1903               	skipnz
 19846  19F7  29DC               	goto	l7251
 19847  19F8  3A01               	xorlw	1	; case 3
 19848  19F9  1903               	skipnz
 19849  19FA  29DC               	goto	l7251
 19850  19FB  3A07               	xorlw	7	; case 4
 19851  19FC  1903               	skipnz
 19852  19FD  29DF               	goto	l7255
 19853  19FE  29DF               	goto	l7255
 19854  19FF  0008               	return
 19855  1A00                     __end_of_do_I2C_RX:	
 19856                           
 19857                           	psect	text73
 19858  1DAE                     __ptext73:	
 19859 ;; *************** function _do_I2C_TX *****************
 19860 ;; Defined at:
 19861 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 19862 ;; Parameters:    Size  Location     Type
 19863 ;;		None
 19864 ;; Auto vars:     Size  Location     Type
 19865 ;;		None
 19866 ;; Return value:  Size  Location     Type
 19867 ;;                  1    wreg      enum E8364
 19868 ;; Registers used:
 19869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19870 ;; Tracked objects:
 19871 ;;		On entry : 0/0
 19872 ;;		On exit  : 0/0
 19873 ;;		Unchanged: 0/0
 19874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19876 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19877 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19878 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19879 ;;Total ram usage:        4 bytes
 19880 ;; Hardware stack levels used:    1
 19881 ;; Hardware stack levels required when called:    8
 19882 ;; This function calls:
 19883 ;;		_do_I2C_SEND_RESTART_READ
 19884 ;;		_do_I2C_SEND_RESTART_WRITE
 19885 ;;		_do_I2C_SEND_STOP
 19886 ;;		_i2c1_driver_TXData
 19887 ;;		_i2c1_driver_isNACK
 19888 ;;		_returnReset
 19889 ;;		_returnStop
 19890 ;; This function is called by:
 19891 ;;		_i2c_ISR
 19892 ;;		i1_i2c_ISR
 19893 ;; This function uses a non-reentrant model
 19894 ;;
 19895                           
 19896                           
 19897                           ;psect for function _do_I2C_TX
 19898  1DAE                     _do_I2C_TX:	
 19899                           
 19900                           ;Skip over the trampoline to the duplicate function for level 1
 19901  1DAE  1C7E               	btfss	126,0
 19902  1DAF  2DB2               	goto	l7207
 19903  1DB0  319B  2BC1         	ljmp	i1l8303
 19904  1DB2                     _do_I2C_TX$intlevel0:	
 19905  1DB2                     l7207:	
 19906                           ;incstack = 0
 19907                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19908                           
 19909                           
 19910                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 19911  1DB2  31A3  2322  319D   	fcall	_i2c1_driver_isNACK
 19912  1DB5  1803               	btfsc	3,0
 19913  1DB6  2DC1               	goto	l7225
 19914  1DB7  2DDF               	goto	l754
 19915  1DB8                     l7211:	
 19916                           ;i2c_master.c: 338: {
 19917                           ;i2c_master.c: 339: case i2c_restart_read:
 19918                           
 19919                           ;i2c_master.c: 336: {
 19920                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 19921                           
 19922                           
 19923                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 19924  1DB8  31A2  2204         	fcall	_do_I2C_SEND_RESTART_READ
 19925  1DBA  0008               	return
 19926  1DBB                     l7215:	
 19927                           ;i2c_master.c: 341: case i2c_restart_write:
 19928                           
 19929                           
 19930                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 19931  1DBB  31A2  220C         	fcall	_do_I2C_SEND_RESTART_WRITE
 19932  1DBD  0008               	return
 19933  1DBE                     l7219:	
 19934                           ;i2c_master.c: 344: case i2c_continue:
 19935                           
 19936                           ;i2c_master.c: 343: default:
 19937                           
 19938                           
 19939                           ;i2c_master.c: 345: case i2c_stop:
 19940                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 19941  1DBE  31A2  221C         	fcall	_do_I2C_SEND_STOP
 19942                           
 19943                           ;i2c_master.c: 347: }
 19944  1DC0  0008               	return
 19945  1DC1                     l7225:	
 19946  1DC1  0022               	movlb	2	; select bank2
 19947  1DC2  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 19948  1DC3  0020               	movlb	0	; select bank0
 19949  1DC4  00B2               	movwf	??_do_I2C_TX
 19950  1DC5  0832               	movf	??_do_I2C_TX,w
 19951  1DC6  00B1               	movwf	returnReset@p
 19952  1DC7  3012               	movlw	18
 19953  1DC8  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 19954  1DC9  0086               	movwf	6
 19955  1DCA  3001               	movlw	1	; select bank2/3
 19956  1DCB  0087               	movwf	7
 19957  1DCC  3F41               	moviw [1]fsr1
 19958  1DCD  008A               	movwf	10
 19959  1DCE  3F40               	moviw [0]fsr1
 19960  1DCF  000A               	callw
 19961  1DD0  319D               	pagesel	$
 19962                           
 19963                           ; Switch size 1, requested type "space"
 19964                           ; Number of cases is 4, Range of values is 1 to 4
 19965                           ; switch strategies available:
 19966                           ; Name         Instructions Cycles
 19967                           ; simple_byte           13     7 (average)
 19968                           ; direct_byte           17     9 (fixed)
 19969                           ; jumptable            263     9 (fixed)
 19970                           ;	Chosen strategy is simple_byte
 19971  1DD1  3A01               	xorlw	1	; case 1
 19972  1DD2  1903               	skipnz
 19973  1DD3  2DBE               	goto	l7219
 19974  1DD4  3A03               	xorlw	3	; case 2
 19975  1DD5  1903               	skipnz
 19976  1DD6  2DB8               	goto	l7211
 19977  1DD7  3A01               	xorlw	1	; case 3
 19978  1DD8  1903               	skipnz
 19979  1DD9  2DBB               	goto	l7215
 19980  1DDA  3A07               	xorlw	7	; case 4
 19981  1DDB  1903               	skipnz
 19982  1DDC  2DBE               	goto	l7219
 19983  1DDD  2DBE               	goto	l7219
 19984                           
 19985                           ;i2c_master.c: 348: }
 19986  1DDE  0008               	return
 19987  1DDF                     l754:	
 19988                           
 19989                           ;i2c_master.c: 349: else
 19990                           ;i2c_master.c: 350: {
 19991                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 19992  1DDF  0022               	movlb	2	; select bank2
 19993  1DE0  11A0               	bcf	_i2c_status^(0+256),3
 19994                           
 19995                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 19996  1DE1  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 19997  1DE2  0020               	movlb	0	; select bank0
 19998  1DE3  00B3               	movwf	??_do_I2C_TX+1
 19999  1DE4  0022               	movlb	2	; select bank2
 20000  1DE5  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 20001  1DE6  0020               	movlb	0	; select bank0
 20002  1DE7  00B2               	movwf	??_do_I2C_TX
 20003  1DE8  0022               	movlb	2	; select bank2
 20004  1DE9  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 20005  1DEA  1903               	skipnz
 20006  1DEB  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 20007  1DEC  0020               	movlb	0	; select bank0
 20008  1DED  0832               	movf	??_do_I2C_TX,w
 20009  1DEE  0084               	movwf	4
 20010  1DEF  0833               	movf	??_do_I2C_TX+1,w
 20011  1DF0  0085               	movwf	5
 20012  1DF1  0800               	movf	0,w	;code access
 20013  1DF2  31A1  21CE  319D   	fcall	_i2c1_driver_TXData
 20014                           
 20015                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 20016  1DF5  3001               	movlw	1
 20017  1DF6  0022               	movlb	2	; select bank2
 20018  1DF7  02A4               	subwf	(_i2c_status^(0+256)+4),f
 20019  1DF8  3000               	movlw	0
 20020  1DF9  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 20021  1DFA  0824               	movf	(_i2c_status^(0+256)+4),w
 20022  1DFB  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 20023  1DFC  1D03               	btfss	3,2
 20024  1DFD  2E00               	goto	l7233
 20025  1DFE  3006               	movlw	6
 20026  1DFF  2E01               	goto	L37
 20027  1E00                     l7233:	
 20028  1E00  3003               	movlw	3
 20029  1E01                     L37:	
 20030  1E01  0020               	movlb	0	; select bank0
 20031  1E02  00B4               	movwf	_do_I2C_TX$1134
 20032  1E03  3000               	movlw	0
 20033  1E04  00B5               	movwf	_do_I2C_TX$1134+1
 20034  1E05  0834               	movf	_do_I2C_TX$1134,w
 20035  1E06  0008               	return
 20036  1E07                     __end_of_do_I2C_TX:	
 20037                           
 20038                           	psect	text74
 20039  2716                     __ptext74:	
 20040 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 20041 ;; Defined at:
 20042 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 20043 ;; Parameters:    Size  Location     Type
 20044 ;;		None
 20045 ;; Auto vars:     Size  Location     Type
 20046 ;;		None
 20047 ;; Return value:  Size  Location     Type
 20048 ;;                  1    wreg      enum E8364
 20049 ;; Registers used:
 20050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20051 ;; Tracked objects:
 20052 ;;		On entry : 0/0
 20053 ;;		On exit  : 0/0
 20054 ;;		Unchanged: 0/0
 20055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20058 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20059 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20060 ;;Total ram usage:        1 bytes
 20061 ;; Hardware stack levels used:    1
 20062 ;; Hardware stack levels required when called:    8
 20063 ;; This function calls:
 20064 ;;		_do_I2C_SEND_RESTART
 20065 ;;		_do_I2C_SEND_STOP
 20066 ;;		_returnReset
 20067 ;;		_returnStop
 20068 ;; This function is called by:
 20069 ;;		_i2c_ISR
 20070 ;;		i1_i2c_ISR
 20071 ;; This function uses a non-reentrant model
 20072 ;;
 20073                           
 20074                           
 20075                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 20076  2716                     _do_I2C_DO_ADDRESS_NACK:	
 20077                           
 20078                           ;Skip over the trampoline to the duplicate function for level 1
 20079  2716  1C7E               	btfss	126,0
 20080  2717  2F1A               	goto	l7191
 20081  2718  31A5  2DBD         	ljmp	i1l8287
 20082  271A                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
 20083  271A                     l7191:	
 20084                           ;incstack = 0
 20085                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20086                           
 20087                           
 20088                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 20089  271A  0022               	movlb	2	; select bank2
 20090  271B  11A0               	bcf	_i2c_status^(0+256),3
 20091                           
 20092                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 20093  271C  3002               	movlw	2
 20094  271D  0020               	movlb	0	; select bank0
 20095  271E  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 20096  271F  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 20097  2720  0022               	movlb	2	; select bank2
 20098  2721  00AB               	movwf	(_i2c_status^(0+256)+11)
 20099                           
 20100                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 20101  2722  2F29               	goto	l7205
 20102  2723                     l7195:	
 20103                           ;i2c_master.c: 324: {
 20104                           ;i2c_master.c: 325: case i2c_restart_read:
 20105                           
 20106                           
 20107                           ;i2c_master.c: 326: case i2c_restart_write:
 20108                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 20109  2723  31A2  2214         	fcall	_do_I2C_SEND_RESTART
 20110  2725  0008               	return
 20111  2726                     l7199:	
 20112                           ;i2c_master.c: 328: default:
 20113                           
 20114                           
 20115                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 20116  2726  31A2  221C         	fcall	_do_I2C_SEND_STOP
 20117                           
 20118                           ;i2c_master.c: 330: }
 20119  2728  0008               	return
 20120  2729                     l7205:	
 20121  2729  0022               	movlb	2	; select bank2
 20122  272A  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 20123  272B  0020               	movlb	0	; select bank0
 20124  272C  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 20125  272D  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 20126  272E  00B1               	movwf	returnReset@p
 20127  272F  3010               	movlw	16
 20128  2730  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 20129  2731  0086               	movwf	6
 20130  2732  3001               	movlw	1	; select bank2/3
 20131  2733  0087               	movwf	7
 20132  2734  3F41               	moviw [1]fsr1
 20133  2735  008A               	movwf	10
 20134  2736  3F40               	moviw [0]fsr1
 20135  2737  000A               	callw
 20136  2738  31A7               	pagesel	$
 20137                           
 20138                           ; Switch size 1, requested type "space"
 20139                           ; Number of cases is 2, Range of values is 2 to 3
 20140                           ; switch strategies available:
 20141                           ; Name         Instructions Cycles
 20142                           ; simple_byte            7     4 (average)
 20143                           ; direct_byte           13     9 (fixed)
 20144                           ; jumptable            263     9 (fixed)
 20145                           ;	Chosen strategy is simple_byte
 20146  2739  3A02               	xorlw	2	; case 2
 20147  273A  1903               	skipnz
 20148  273B  2F23               	goto	l7195
 20149  273C  3A01               	xorlw	1	; case 3
 20150  273D  1903               	skipnz
 20151  273E  2F23               	goto	l7195
 20152  273F  2F26               	goto	l7199
 20153  2740  0008               	return
 20154  2741                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 20155                           
 20156                           	psect	text75
 20157  2234                     __ptext75:	
 20158 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 20159 ;; Defined at:
 20160 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 20161 ;; Parameters:    Size  Location     Type
 20162 ;;		None
 20163 ;; Auto vars:     Size  Location     Type
 20164 ;;		None
 20165 ;; Return value:  Size  Location     Type
 20166 ;;                  1    wreg      enum E8364
 20167 ;; Registers used:
 20168 ;;		wreg, status,2, status,0, pclath, cstack
 20169 ;; Tracked objects:
 20170 ;;		On entry : 0/0
 20171 ;;		On exit  : 0/0
 20172 ;;		Unchanged: 0/0
 20173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20178 ;;Total ram usage:        0 bytes
 20179 ;; Hardware stack levels used:    1
 20180 ;; Hardware stack levels required when called:    7
 20181 ;; This function calls:
 20182 ;;		_i2c1_driver_sendNACK
 20183 ;; This function is called by:
 20184 ;;		_do_I2C_RX
 20185 ;;		_i2c_ISR
 20186 ;;		i1_i2c_ISR
 20187 ;; This function uses a non-reentrant model
 20188 ;;
 20189                           
 20190                           
 20191                           ;psect for function _do_I2C_DO_NACK_RESTART
 20192  2234                     _do_I2C_DO_NACK_RESTART:	
 20193                           
 20194                           ;Skip over the trampoline to the duplicate function for level 1
 20195  2234  1C7E               	btfss	126,0
 20196  2235  2A38               	goto	l7127
 20197  2236  31A1  2992         	ljmp	i1l7909
 20198  2238                     _do_I2C_DO_NACK_RESTART$intlevel0:	
 20199  2238                     l7127:	
 20200                           ;incstack = 0
 20201                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20202                           
 20203                           
 20204                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 20205  2238  3193  23CC         	fcall	_i2c1_driver_sendNACK
 20206                           
 20207                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 20208  223A  3009               	movlw	9
 20209  223B  0008               	return
 20210  223C                     __end_of_do_I2C_DO_NACK_RESTART:	
 20211                           
 20212                           	psect	text76
 20213  222C                     __ptext76:	
 20214 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 20215 ;; Defined at:
 20216 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 20217 ;; Parameters:    Size  Location     Type
 20218 ;;		None
 20219 ;; Auto vars:     Size  Location     Type
 20220 ;;		None
 20221 ;; Return value:  Size  Location     Type
 20222 ;;                  1    wreg      enum E8364
 20223 ;; Registers used:
 20224 ;;		wreg, status,2, status,0, pclath, cstack
 20225 ;; Tracked objects:
 20226 ;;		On entry : 0/0
 20227 ;;		On exit  : 0/0
 20228 ;;		Unchanged: 0/0
 20229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20234 ;;Total ram usage:        0 bytes
 20235 ;; Hardware stack levels used:    1
 20236 ;; Hardware stack levels required when called:    7
 20237 ;; This function calls:
 20238 ;;		_i2c1_driver_sendNACK
 20239 ;; This function is called by:
 20240 ;;		_do_I2C_RX
 20241 ;;		_i2c_ISR
 20242 ;;		i1_i2c_ISR
 20243 ;; This function uses a non-reentrant model
 20244 ;;
 20245                           
 20246                           
 20247                           ;psect for function _do_I2C_DO_NACK_STOP
 20248  222C                     _do_I2C_DO_NACK_STOP:	
 20249                           
 20250                           ;Skip over the trampoline to the duplicate function for level 1
 20251  222C  1C7E               	btfss	126,0
 20252  222D  2A30               	goto	l7121
 20253  222E  31A1  298E         	ljmp	i1l7903
 20254  2230                     _do_I2C_DO_NACK_STOP$intlevel0:	
 20255  2230                     l7121:	
 20256                           ;incstack = 0
 20257                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 20258                           
 20259                           
 20260                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 20261  2230  3193  23CC         	fcall	_i2c1_driver_sendNACK
 20262                           
 20263                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 20264  2232  300A               	movlw	10
 20265  2233  0008               	return
 20266  2234                     __end_of_do_I2C_DO_NACK_STOP:	
 20267                           
 20268                           	psect	text77
 20269  2224                     __ptext77:	
 20270 ;; *************** function _do_I2C_DO_ACK *****************
 20271 ;; Defined at:
 20272 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 20273 ;; Parameters:    Size  Location     Type
 20274 ;;		None
 20275 ;; Auto vars:     Size  Location     Type
 20276 ;;		None
 20277 ;; Return value:  Size  Location     Type
 20278 ;;                  1    wreg      enum E8364
 20279 ;; Registers used:
 20280 ;;		wreg, status,2, status,0, pclath, cstack
 20281 ;; Tracked objects:
 20282 ;;		On entry : 0/0
 20283 ;;		On exit  : 0/0
 20284 ;;		Unchanged: 0/0
 20285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20290 ;;Total ram usage:        0 bytes
 20291 ;; Hardware stack levels used:    1
 20292 ;; Hardware stack levels required when called:    7
 20293 ;; This function calls:
 20294 ;;		_i2c1_driver_sendACK
 20295 ;; This function is called by:
 20296 ;;		_i2c_ISR
 20297 ;;		i1_i2c_ISR
 20298 ;; This function uses a non-reentrant model
 20299 ;;
 20300                           
 20301                           
 20302                           ;psect for function _do_I2C_DO_ACK
 20303  2224                     _do_I2C_DO_ACK:	
 20304                           
 20305                           ;Skip over the trampoline to the duplicate function for level 1
 20306  2224  1C7E               	btfss	126,0
 20307  2225  2A28               	goto	l7185
 20308  2226  31A1  298A         	ljmp	i1l8281
 20309  2228                     _do_I2C_DO_ACK$intlevel0:	
 20310  2228                     l7185:	
 20311                           ;incstack = 0
 20312                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 20313                           
 20314                           
 20315                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 20316  2228  31A1  219A         	fcall	_i2c1_driver_sendACK
 20317                           
 20318                           ;i2c_master.c: 302: return I2C_RCEN;
 20319  222A  3005               	movlw	5
 20320  222B  0008               	return
 20321  222C                     __end_of_do_I2C_DO_ACK:	
 20322                           
 20323                           	psect	text78
 20324  2284                     __ptext78:	
 20325 ;; *************** function _do_I2C_RCEN *****************
 20326 ;; Defined at:
 20327 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 20328 ;; Parameters:    Size  Location     Type
 20329 ;;		None
 20330 ;; Auto vars:     Size  Location     Type
 20331 ;;		None
 20332 ;; Return value:  Size  Location     Type
 20333 ;;                  1    wreg      enum E8364
 20334 ;; Registers used:
 20335 ;;		wreg, status,2, status,0, pclath, cstack
 20336 ;; Tracked objects:
 20337 ;;		On entry : 0/0
 20338 ;;		On exit  : 0/0
 20339 ;;		Unchanged: 0/0
 20340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20345 ;;Total ram usage:        0 bytes
 20346 ;; Hardware stack levels used:    1
 20347 ;; Hardware stack levels required when called:    7
 20348 ;; This function calls:
 20349 ;;		_i2c1_driver_startRX
 20350 ;; This function is called by:
 20351 ;;		_i2c_ISR
 20352 ;;		i1_i2c_ISR
 20353 ;; This function uses a non-reentrant model
 20354 ;;
 20355                           
 20356                           
 20357                           ;psect for function _do_I2C_RCEN
 20358  2284                     _do_I2C_RCEN:	
 20359                           
 20360                           ;Skip over the trampoline to the duplicate function for level 1
 20361  2284  1C7E               	btfss	126,0
 20362  2285  2A88               	goto	l7177
 20363  2286  31A1  29BC         	ljmp	i1l6377
 20364  2288                     _do_I2C_RCEN$intlevel0:	
 20365  2288                     l7177:	
 20366                           ;incstack = 0
 20367                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 20368                           
 20369                           
 20370                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 20371  2288  0022               	movlb	2	; select bank2
 20372  2289  11A0               	bcf	_i2c_status^(0+256),3
 20373                           
 20374                           ;i2c_master.c: 295: i2c1_driver_startRX();
 20375  228A  31A1  2166         	fcall	_i2c1_driver_startRX
 20376                           
 20377                           ;i2c_master.c: 296: return I2C_RX;
 20378  228C  3004               	movlw	4
 20379  228D  0008               	return
 20380  228E                     __end_of_do_I2C_RCEN:	
 20381                           
 20382                           	psect	text79
 20383  22B7                     __ptext79:	
 20384 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 20385 ;; Defined at:
 20386 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 20387 ;; Parameters:    Size  Location     Type
 20388 ;;		None
 20389 ;; Auto vars:     Size  Location     Type
 20390 ;;		None
 20391 ;; Return value:  Size  Location     Type
 20392 ;;                  1    wreg      enum E8364
 20393 ;; Registers used:
 20394 ;;		wreg, status,2, status,0, pclath, cstack
 20395 ;; Tracked objects:
 20396 ;;		On entry : 0/0
 20397 ;;		On exit  : 0/0
 20398 ;;		Unchanged: 0/0
 20399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20404 ;;Total ram usage:        0 bytes
 20405 ;; Hardware stack levels used:    1
 20406 ;; Hardware stack levels required when called:    7
 20407 ;; This function calls:
 20408 ;;		_i2c1_driver_TXData
 20409 ;; This function is called by:
 20410 ;;		_i2c_ISR
 20411 ;;		i1_i2c_ISR
 20412 ;; This function uses a non-reentrant model
 20413 ;;
 20414                           
 20415                           
 20416                           ;psect for function _do_I2C_SEND_ADR_WRITE
 20417  22B7                     _do_I2C_SEND_ADR_WRITE:	
 20418                           
 20419                           ;Skip over the trampoline to the duplicate function for level 1
 20420  22B7  1C7E               	btfss	126,0
 20421  22B8  2ABB               	goto	l7169
 20422  22B9  31A1  29ED         	ljmp	i1l8273
 20423  22BB                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
 20424  22BB                     l7169:	
 20425                           ;incstack = 0
 20426                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20427                           
 20428                           
 20429                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 20430  22BB  0022               	movlb	2	; select bank2
 20431  22BC  15A0               	bsf	_i2c_status^(0+256),3
 20432                           
 20433                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 20434  22BD  3521               	lslf	(_i2c_status^(0+256)+1),w
 20435  22BE  31A1  21CE         	fcall	_i2c1_driver_TXData
 20436                           
 20437                           ;i2c_master.c: 289: return I2C_TX;
 20438  22C0  3003               	movlw	3
 20439  22C1  0008               	return
 20440  22C2                     __end_of_do_I2C_SEND_ADR_WRITE:	
 20441                           
 20442                           	psect	text80
 20443  22E4                     __ptext80:	
 20444 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 20445 ;; Defined at:
 20446 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 20447 ;; Parameters:    Size  Location     Type
 20448 ;;		None
 20449 ;; Auto vars:     Size  Location     Type
 20450 ;;		None
 20451 ;; Return value:  Size  Location     Type
 20452 ;;                  1    wreg      enum E8364
 20453 ;; Registers used:
 20454 ;;		wreg, status,2, status,0, pclath, cstack
 20455 ;; Tracked objects:
 20456 ;;		On entry : 0/0
 20457 ;;		On exit  : 0/0
 20458 ;;		Unchanged: 0/0
 20459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20464 ;;Total ram usage:        0 bytes
 20465 ;; Hardware stack levels used:    1
 20466 ;; Hardware stack levels required when called:    7
 20467 ;; This function calls:
 20468 ;;		_i2c1_driver_TXData
 20469 ;; This function is called by:
 20470 ;;		_i2c_ISR
 20471 ;;		i1_i2c_ISR
 20472 ;; This function uses a non-reentrant model
 20473 ;;
 20474                           
 20475                           
 20476                           ;psect for function _do_I2C_SEND_ADR_READ
 20477  22E4                     _do_I2C_SEND_ADR_READ:	
 20478                           
 20479                           ;Skip over the trampoline to the duplicate function for level 1
 20480  22E4  1C7E               	btfss	126,0
 20481  22E5  2AE8               	goto	l7161
 20482  22E6  31A1  29F4         	ljmp	i1l8265
 20483  22E8                     _do_I2C_SEND_ADR_READ$intlevel0:	
 20484  22E8                     l7161:	
 20485                           ;incstack = 0
 20486                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 20487                           
 20488                           
 20489                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 20490  22E8  0022               	movlb	2	; select bank2
 20491  22E9  15A0               	bsf	_i2c_status^(0+256),3
 20492                           
 20493                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 20494  22EA  1403               	setc
 20495  22EB  0D21               	rlf	(_i2c_status^(0+256)+1),w
 20496  22EC  31A1  21CE         	fcall	_i2c1_driver_TXData
 20497                           
 20498                           ;i2c_master.c: 282: return I2C_RCEN;
 20499  22EE  3005               	movlw	5
 20500  22EF  0008               	return
 20501  22F0                     __end_of_do_I2C_SEND_ADR_READ:	
 20502                           
 20503                           	psect	text81
 20504  221C                     __ptext81:	
 20505 ;; *************** function _do_I2C_SEND_STOP *****************
 20506 ;; Defined at:
 20507 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 20508 ;; Parameters:    Size  Location     Type
 20509 ;;		None
 20510 ;; Auto vars:     Size  Location     Type
 20511 ;;		None
 20512 ;; Return value:  Size  Location     Type
 20513 ;;                  1    wreg      enum E8364
 20514 ;; Registers used:
 20515 ;;		wreg, status,2, status,0, pclath, cstack
 20516 ;; Tracked objects:
 20517 ;;		On entry : 0/0
 20518 ;;		On exit  : 0/0
 20519 ;;		Unchanged: 0/0
 20520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20525 ;;Total ram usage:        0 bytes
 20526 ;; Hardware stack levels used:    1
 20527 ;; Hardware stack levels required when called:    7
 20528 ;; This function calls:
 20529 ;;		_i2c1_driver_stop
 20530 ;; This function is called by:
 20531 ;;		_do_I2C_DO_ADDRESS_NACK
 20532 ;;		_do_I2C_TX
 20533 ;;		_do_I2C_TX_EMPTY
 20534 ;;		_i2c_ISR
 20535 ;;		i1_i2c_ISR
 20536 ;; This function uses a non-reentrant model
 20537 ;;
 20538                           
 20539                           
 20540                           ;psect for function _do_I2C_SEND_STOP
 20541  221C                     _do_I2C_SEND_STOP:	
 20542                           
 20543                           ;Skip over the trampoline to the duplicate function for level 1
 20544  221C  1C7E               	btfss	126,0
 20545  221D  2A20               	goto	l7115
 20546  221E  31A1  2986         	ljmp	i1l7897
 20547  2220                     _do_I2C_SEND_STOP$intlevel0:	
 20548  2220                     l7115:	
 20549                           ;incstack = 0
 20550                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 20551                           
 20552                           
 20553                           ;i2c_master.c: 274: i2c1_driver_stop();
 20554  2220  31A1  2163         	fcall	_i2c1_driver_stop
 20555                           
 20556                           ;i2c_master.c: 275: return I2C_IDLE;
 20557  2222  3000               	movlw	0
 20558  2223  0008               	return
 20559  2224                     __end_of_do_I2C_SEND_STOP:	
 20560                           
 20561                           	psect	text82
 20562  2214                     __ptext82:	
 20563 ;; *************** function _do_I2C_SEND_RESTART *****************
 20564 ;; Defined at:
 20565 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 20566 ;; Parameters:    Size  Location     Type
 20567 ;;		None
 20568 ;; Auto vars:     Size  Location     Type
 20569 ;;		None
 20570 ;; Return value:  Size  Location     Type
 20571 ;;                  1    wreg      enum E8364
 20572 ;; Registers used:
 20573 ;;		wreg, status,2, status,0, pclath, cstack
 20574 ;; Tracked objects:
 20575 ;;		On entry : 0/0
 20576 ;;		On exit  : 0/0
 20577 ;;		Unchanged: 0/0
 20578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20583 ;;Total ram usage:        0 bytes
 20584 ;; Hardware stack levels used:    1
 20585 ;; Hardware stack levels required when called:    7
 20586 ;; This function calls:
 20587 ;;		_i2c1_driver_restart
 20588 ;; This function is called by:
 20589 ;;		_do_I2C_DO_ADDRESS_NACK
 20590 ;;		_do_I2C_TX_EMPTY
 20591 ;;		_i2c_ISR
 20592 ;;		i1_i2c_ISR
 20593 ;; This function uses a non-reentrant model
 20594 ;;
 20595                           
 20596                           
 20597                           ;psect for function _do_I2C_SEND_RESTART
 20598  2214                     _do_I2C_SEND_RESTART:	
 20599                           
 20600                           ;Skip over the trampoline to the duplicate function for level 1
 20601  2214  1C7E               	btfss	126,0
 20602  2215  2A18               	goto	l7109
 20603  2216  31A1  2982         	ljmp	i1l7891
 20604  2218                     _do_I2C_SEND_RESTART$intlevel0:	
 20605  2218                     l7109:	
 20606                           ;incstack = 0
 20607                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20608                           
 20609                           
 20610                           ;i2c_master.c: 268: i2c1_driver_restart();
 20611  2218  31A1  2160         	fcall	_i2c1_driver_restart
 20612                           
 20613                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 20614  221A  3001               	movlw	1
 20615  221B  0008               	return
 20616  221C                     __end_of_do_I2C_SEND_RESTART:	
 20617                           
 20618                           	psect	text83
 20619  220C                     __ptext83:	
 20620 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 20621 ;; Defined at:
 20622 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 20623 ;; Parameters:    Size  Location     Type
 20624 ;;		None
 20625 ;; Auto vars:     Size  Location     Type
 20626 ;;		None
 20627 ;; Return value:  Size  Location     Type
 20628 ;;                  1    wreg      enum E8364
 20629 ;; Registers used:
 20630 ;;		wreg, status,2, status,0, pclath, cstack
 20631 ;; Tracked objects:
 20632 ;;		On entry : 0/0
 20633 ;;		On exit  : 0/0
 20634 ;;		Unchanged: 0/0
 20635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20640 ;;Total ram usage:        0 bytes
 20641 ;; Hardware stack levels used:    1
 20642 ;; Hardware stack levels required when called:    7
 20643 ;; This function calls:
 20644 ;;		_i2c1_driver_restart
 20645 ;; This function is called by:
 20646 ;;		_do_I2C_TX
 20647 ;;		_i2c_ISR
 20648 ;;		i1_i2c_ISR
 20649 ;; This function uses a non-reentrant model
 20650 ;;
 20651                           
 20652                           
 20653                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 20654  220C                     _do_I2C_SEND_RESTART_WRITE:	
 20655                           
 20656                           ;Skip over the trampoline to the duplicate function for level 1
 20657  220C  1C7E               	btfss	126,0
 20658  220D  2A10               	goto	l7103
 20659  220E  31A1  297E         	ljmp	i1l7885
 20660  2210                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
 20661  2210                     l7103:	
 20662                           ;incstack = 0
 20663                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20664                           
 20665                           
 20666                           ;i2c_master.c: 262: i2c1_driver_restart();
 20667  2210  31A1  2160         	fcall	_i2c1_driver_restart
 20668                           
 20669                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 20670  2212  3002               	movlw	2
 20671  2213  0008               	return
 20672  2214                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 20673                           
 20674                           	psect	text84
 20675  2204                     __ptext84:	
 20676 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 20677 ;; Defined at:
 20678 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 20679 ;; Parameters:    Size  Location     Type
 20680 ;;		None
 20681 ;; Auto vars:     Size  Location     Type
 20682 ;;		None
 20683 ;; Return value:  Size  Location     Type
 20684 ;;                  1    wreg      enum E8364
 20685 ;; Registers used:
 20686 ;;		wreg, status,2, status,0, pclath, cstack
 20687 ;; Tracked objects:
 20688 ;;		On entry : 0/0
 20689 ;;		On exit  : 0/0
 20690 ;;		Unchanged: 0/0
 20691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20696 ;;Total ram usage:        0 bytes
 20697 ;; Hardware stack levels used:    1
 20698 ;; Hardware stack levels required when called:    7
 20699 ;; This function calls:
 20700 ;;		_i2c1_driver_restart
 20701 ;; This function is called by:
 20702 ;;		_do_I2C_TX
 20703 ;;		_i2c_ISR
 20704 ;;		i1_i2c_ISR
 20705 ;; This function uses a non-reentrant model
 20706 ;;
 20707                           
 20708                           
 20709                           ;psect for function _do_I2C_SEND_RESTART_READ
 20710  2204                     _do_I2C_SEND_RESTART_READ:	
 20711                           
 20712                           ;Skip over the trampoline to the duplicate function for level 1
 20713  2204  1C7E               	btfss	126,0
 20714  2205  2A08               	goto	l7097
 20715  2206  31A1  297A         	ljmp	i1l7879
 20716  2208                     _do_I2C_SEND_RESTART_READ$intlevel0:	
 20717  2208                     l7097:	
 20718                           ;incstack = 0
 20719                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 20720                           
 20721                           
 20722                           ;i2c_master.c: 256: i2c1_driver_restart();
 20723  2208  31A1  2160         	fcall	_i2c1_driver_restart
 20724                           
 20725                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 20726  220A  3001               	movlw	1
 20727  220B  0008               	return
 20728  220C                     __end_of_do_I2C_SEND_RESTART_READ:	
 20729                           
 20730                           	psect	text85
 20731  225F                     __ptext85:	
 20732 ;; *************** function _do_I2C_IDLE *****************
 20733 ;; Defined at:
 20734 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 20735 ;; Parameters:    Size  Location     Type
 20736 ;;		None
 20737 ;; Auto vars:     Size  Location     Type
 20738 ;;		None
 20739 ;; Return value:  Size  Location     Type
 20740 ;;                  1    wreg      enum E8364
 20741 ;; Registers used:
 20742 ;;		wreg, status,2
 20743 ;; Tracked objects:
 20744 ;;		On entry : 0/0
 20745 ;;		On exit  : 0/0
 20746 ;;		Unchanged: 0/0
 20747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20752 ;;Total ram usage:        0 bytes
 20753 ;; Hardware stack levels used:    1
 20754 ;; Hardware stack levels required when called:    6
 20755 ;; This function calls:
 20756 ;;		Nothing
 20757 ;; This function is called by:
 20758 ;;		_i2c_ISR
 20759 ;;		i1_i2c_ISR
 20760 ;; This function uses a non-reentrant model
 20761 ;;
 20762                           
 20763                           
 20764                           ;psect for function _do_I2C_IDLE
 20765  225F                     _do_I2C_IDLE:	
 20766                           
 20767                           ;Skip over the trampoline to the duplicate function for level 1
 20768  225F  1C7E               	btfss	126,0
 20769  2260  2A63               	goto	l7153
 20770  2261  31A1  29AD         	ljmp	i1l6353
 20771  2263                     _do_I2C_IDLE$intlevel0:	
 20772  2263                     l7153:	
 20773                           ;incstack = 0
 20774                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 20775                           
 20776                           
 20777                           ;i2c_master.c: 249: i2c_status.busy = 0;
 20778  2263  0022               	movlb	2	; select bank2
 20779  2264  1020               	bcf	_i2c_status^(0+256),0
 20780                           
 20781                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 20782  2265  01AB               	clrf	(_i2c_status^(0+256)+11)
 20783                           
 20784                           ;i2c_master.c: 251: return I2C_RESET;
 20785  2266  300E               	movlw	14
 20786  2267  0008               	return
 20787  2268                     __end_of_do_I2C_IDLE:	
 20788                           
 20789                           	psect	text86
 20790  22AC                     __ptext86:	
 20791 ;; *************** function _do_I2C_RESET *****************
 20792 ;; Defined at:
 20793 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 20794 ;; Parameters:    Size  Location     Type
 20795 ;;		None
 20796 ;; Auto vars:     Size  Location     Type
 20797 ;;		None
 20798 ;; Return value:  Size  Location     Type
 20799 ;;                  1    wreg      enum E8364
 20800 ;; Registers used:
 20801 ;;		wreg, status,2, status,0, pclath, cstack
 20802 ;; Tracked objects:
 20803 ;;		On entry : 0/0
 20804 ;;		On exit  : 0/0
 20805 ;;		Unchanged: 0/0
 20806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20811 ;;Total ram usage:        0 bytes
 20812 ;; Hardware stack levels used:    1
 20813 ;; Hardware stack levels required when called:    7
 20814 ;; This function calls:
 20815 ;;		_i2c1_driver_resetBus
 20816 ;; This function is called by:
 20817 ;;		_i2c_ISR
 20818 ;;		i1_i2c_ISR
 20819 ;; This function uses a non-reentrant model
 20820 ;;
 20821                           
 20822                           
 20823                           ;psect for function _do_I2C_RESET
 20824  22AC                     _do_I2C_RESET:	
 20825                           
 20826                           ;Skip over the trampoline to the duplicate function for level 1
 20827  22AC  1C7E               	btfss	126,0
 20828  22AD  2AB0               	goto	l7143
 20829  22AE  31A1  29E6         	ljmp	i1l6343
 20830  22B0                     _do_I2C_RESET$intlevel0:	
 20831  22B0                     l7143:	
 20832                           ;incstack = 0
 20833                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 20834                           
 20835                           
 20836                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 20837  22B0  31A1  2138         	fcall	_i2c1_driver_resetBus
 20838                           
 20839                           ;i2c_master.c: 242: i2c_status.busy = 0;
 20840  22B2  0022               	movlb	2	; select bank2
 20841  22B3  1020               	bcf	_i2c_status^(0+256),0
 20842                           
 20843                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 20844  22B4  01AB               	clrf	(_i2c_status^(0+256)+11)
 20845                           
 20846                           ;i2c_master.c: 244: return I2C_RESET;
 20847  22B5  300E               	movlw	14
 20848  22B6  0008               	return
 20849  22B7                     __end_of_do_I2C_RESET:	
 20850                           
 20851                           	psect	text87
 20852  2741                     __ptext87:	
 20853 ;; *************** function _do_I2C_TX_EMPTY *****************
 20854 ;; Defined at:
 20855 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 20856 ;; Parameters:    Size  Location     Type
 20857 ;;		None
 20858 ;; Auto vars:     Size  Location     Type
 20859 ;;		None
 20860 ;; Return value:  Size  Location     Type
 20861 ;;                  1    wreg      enum E8364
 20862 ;; Registers used:
 20863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20864 ;; Tracked objects:
 20865 ;;		On entry : 0/0
 20866 ;;		On exit  : 0/0
 20867 ;;		Unchanged: 0/0
 20868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20871 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20872 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20873 ;;Total ram usage:        1 bytes
 20874 ;; Hardware stack levels used:    1
 20875 ;; Hardware stack levels required when called:    8
 20876 ;; This function calls:
 20877 ;;		_do_I2C_SEND_RESTART
 20878 ;;		_do_I2C_SEND_STOP
 20879 ;;		_mssp1_setIRQ
 20880 ;;		_returnReset
 20881 ;;		_returnStop
 20882 ;; This function is called by:
 20883 ;;		_i2c_ISR
 20884 ;;		i1_i2c_ISR
 20885 ;; This function uses a non-reentrant model
 20886 ;;
 20887                           
 20888                           
 20889                           ;psect for function _do_I2C_TX_EMPTY
 20890  2741                     _do_I2C_TX_EMPTY:	
 20891                           
 20892                           ;Skip over the trampoline to the duplicate function for level 1
 20893  2741  1C7E               	btfss	126,0
 20894  2742  2F45               	goto	l7263
 20895  2743  31A6  2EEC         	ljmp	i1l8359
 20896  2745                     _do_I2C_TX_EMPTY$intlevel0:	
 20897  2745                     l7263:	
 20898                           ;incstack = 0
 20899                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20900                           
 20901                           
 20902                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 20903  2745  0022               	movlb	2	; select bank2
 20904  2746  1520               	bsf	_i2c_status^(0+256),2
 20905                           
 20906                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 20907  2747  2F52               	goto	l7281
 20908  2748                     l7265:	
 20909                           ;i2c_master.c: 386: {
 20910                           ;i2c_master.c: 387: case i2c_restart_read:
 20911                           
 20912                           
 20913                           ;i2c_master.c: 388: case i2c_restart_write:
 20914                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 20915  2748  31A2  2214         	fcall	_do_I2C_SEND_RESTART
 20916  274A  0008               	return
 20917  274B                     l7269:	
 20918                           ;i2c_master.c: 390: case i2c_continue:
 20919                           
 20920                           
 20921                           ;i2c_master.c: 391: mssp1_setIRQ();
 20922  274B  31A1  216C         	fcall	_mssp1_setIRQ
 20923                           
 20924                           ;i2c_master.c: 392: return I2C_TX;
 20925  274D  3003               	movlw	3
 20926  274E  0008               	return
 20927  274F                     l7275:	
 20928                           ;i2c_master.c: 394: case i2c_stop:
 20929                           
 20930                           ;i2c_master.c: 393: default:
 20931                           
 20932                           
 20933                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 20934  274F  31A2  221C         	fcall	_do_I2C_SEND_STOP
 20935                           
 20936                           ;i2c_master.c: 396: }
 20937  2751  0008               	return
 20938  2752                     l7281:	
 20939  2752  0022               	movlb	2	; select bank2
 20940  2753  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 20941  2754  0020               	movlb	0	; select bank0
 20942  2755  00B1               	movwf	??_do_I2C_TX_EMPTY
 20943  2756  0831               	movf	??_do_I2C_TX_EMPTY,w
 20944  2757  00B1               	movwf	returnReset@p
 20945  2758  300C               	movlw	12
 20946  2759  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 20947  275A  0086               	movwf	6
 20948  275B  3001               	movlw	1	; select bank2/3
 20949  275C  0087               	movwf	7
 20950  275D  3F41               	moviw [1]fsr1
 20951  275E  008A               	movwf	10
 20952  275F  3F40               	moviw [0]fsr1
 20953  2760  000A               	callw
 20954  2761  31A7               	pagesel	$
 20955                           
 20956                           ; Switch size 1, requested type "space"
 20957                           ; Number of cases is 4, Range of values is 1 to 4
 20958                           ; switch strategies available:
 20959                           ; Name         Instructions Cycles
 20960                           ; simple_byte           13     7 (average)
 20961                           ; direct_byte           17     9 (fixed)
 20962                           ; jumptable            263     9 (fixed)
 20963                           ;	Chosen strategy is simple_byte
 20964  2762  3A01               	xorlw	1	; case 1
 20965  2763  1903               	skipnz
 20966  2764  2F4F               	goto	l7275
 20967  2765  3A03               	xorlw	3	; case 2
 20968  2766  1903               	skipnz
 20969  2767  2F48               	goto	l7265
 20970  2768  3A01               	xorlw	1	; case 3
 20971  2769  1903               	skipnz
 20972  276A  2F48               	goto	l7265
 20973  276B  3A07               	xorlw	7	; case 4
 20974  276C  1903               	skipnz
 20975  276D  2F4B               	goto	l7269
 20976  276E  2F4F               	goto	l7275
 20977  276F  0008               	return
 20978  2770                     __end_of_do_I2C_TX_EMPTY:	
 20979                           
 20980                           	psect	text88
 20981  216C                     __ptext88:	
 20982 ;; *************** function _mssp1_setIRQ *****************
 20983 ;; Defined at:
 20984 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 20985 ;; Parameters:    Size  Location     Type
 20986 ;;		None
 20987 ;; Auto vars:     Size  Location     Type
 20988 ;;		None
 20989 ;; Return value:  Size  Location     Type
 20990 ;;                  1    wreg      void 
 20991 ;; Registers used:
 20992 ;;		None
 20993 ;; Tracked objects:
 20994 ;;		On entry : 0/0
 20995 ;;		On exit  : 0/0
 20996 ;;		Unchanged: 0/0
 20997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21002 ;;Total ram usage:        0 bytes
 21003 ;; Hardware stack levels used:    1
 21004 ;; Hardware stack levels required when called:    6
 21005 ;; This function calls:
 21006 ;;		Nothing
 21007 ;; This function is called by:
 21008 ;;		_do_I2C_TX_EMPTY
 21009 ;; This function uses a non-reentrant model
 21010 ;;
 21011                           
 21012                           
 21013                           ;psect for function _mssp1_setIRQ
 21014  216C                     _mssp1_setIRQ:	
 21015                           
 21016                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 21017                           
 21018                           ;incstack = 0
 21019                           ; Regs used in _mssp1_setIRQ: []
 21020  216C  0020               	movlb	0	; select bank0
 21021  216D  1591               	bsf	17,3	;volatile
 21022  216E  0008               	return
 21023  216F                     __end_of_mssp1_setIRQ:	
 21024                           
 21025                           	psect	text89
 21026  2322                     __ptext89:	
 21027 ;; *************** function _i2c1_driver_isNACK *****************
 21028 ;; Defined at:
 21029 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 21030 ;; Parameters:    Size  Location     Type
 21031 ;;		None
 21032 ;; Auto vars:     Size  Location     Type
 21033 ;;		None
 21034 ;; Return value:  Size  Location     Type
 21035 ;;		None               void
 21036 ;; Registers used:
 21037 ;;		wreg, status,2, status,0
 21038 ;; Tracked objects:
 21039 ;;		On entry : 0/0
 21040 ;;		On exit  : 0/0
 21041 ;;		Unchanged: 0/0
 21042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21045 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21046 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21047 ;;Total ram usage:        1 bytes
 21048 ;; Hardware stack levels used:    1
 21049 ;; Hardware stack levels required when called:    6
 21050 ;; This function calls:
 21051 ;;		Nothing
 21052 ;; This function is called by:
 21053 ;;		_do_I2C_TX
 21054 ;;		_i2c_ISR
 21055 ;; This function uses a non-reentrant model
 21056 ;;
 21057                           
 21058                           
 21059                           ;psect for function _i2c1_driver_isNACK
 21060  2322                     _i2c1_driver_isNACK:	
 21061                           
 21062                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 21063                           
 21064                           ;incstack = 0
 21065                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 21066  2322  0024               	movlb	4	; select bank4
 21067  2323  0816               	movf	22,w	;volatile
 21068  2324  39BF               	andlw	-65
 21069  2325  3840               	iorlw	64
 21070  2326  0096               	movwf	22	;volatile
 21071  2327  0E16               	swapf	22,w	;volatile
 21072  2328  0C89               	rrf	9,f
 21073  2329  0C89               	rrf	9,f
 21074  232A  3901               	andlw	1
 21075  232B  0020               	movlb	0	; select bank0
 21076  232C  00B1               	movwf	??_i2c1_driver_isNACK
 21077  232D  0C31               	rrf	??_i2c1_driver_isNACK,w
 21078  232E  0008               	return
 21079  232F                     __end_of_i2c1_driver_isNACK:	
 21080                           
 21081                           	psect	text90
 21082  21CE                     __ptext90:	
 21083 ;; *************** function _i2c1_driver_TXData *****************
 21084 ;; Defined at:
 21085 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 21086 ;; Parameters:    Size  Location     Type
 21087 ;;  d               1    wreg     unsigned char 
 21088 ;; Auto vars:     Size  Location     Type
 21089 ;;  d               1   17[BANK0 ] unsigned char 
 21090 ;; Return value:  Size  Location     Type
 21091 ;;                  1    wreg      void 
 21092 ;; Registers used:
 21093 ;;		wreg
 21094 ;; Tracked objects:
 21095 ;;		On entry : 0/0
 21096 ;;		On exit  : 0/0
 21097 ;;		Unchanged: 0/0
 21098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21100 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21102 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21103 ;;Total ram usage:        1 bytes
 21104 ;; Hardware stack levels used:    1
 21105 ;; Hardware stack levels required when called:    6
 21106 ;; This function calls:
 21107 ;;		Nothing
 21108 ;; This function is called by:
 21109 ;;		_do_I2C_SEND_ADR_READ
 21110 ;;		_do_I2C_SEND_ADR_WRITE
 21111 ;;		_do_I2C_TX
 21112 ;; This function uses a non-reentrant model
 21113 ;;
 21114                           
 21115                           
 21116                           ;psect for function _i2c1_driver_TXData
 21117  21CE                     _i2c1_driver_TXData:	
 21118                           
 21119                           ;incstack = 0
 21120                           ; Regs used in _i2c1_driver_TXData: [wreg]
 21121                           ;i2c1_driver_TXData@d stored from wreg
 21122  21CE  0020               	movlb	0	; select bank0
 21123  21CF  00B1               	movwf	i2c1_driver_TXData@d
 21124                           
 21125                           ;i2c1_driver.c: 188: SSP1BUF = d;
 21126  21D0  0831               	movf	i2c1_driver_TXData@d,w
 21127  21D1  0024               	movlb	4	; select bank4
 21128  21D2  0091               	movwf	17	;volatile
 21129  21D3  0008               	return
 21130  21D4                     __end_of_i2c1_driver_TXData:	
 21131                           
 21132                           	psect	text91
 21133  2169                     __ptext91:	
 21134 ;; *************** function _i2c1_driver_getRXData *****************
 21135 ;; Defined at:
 21136 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 21137 ;; Parameters:    Size  Location     Type
 21138 ;;		None
 21139 ;; Auto vars:     Size  Location     Type
 21140 ;;		None
 21141 ;; Return value:  Size  Location     Type
 21142 ;;                  1    wreg      unsigned char 
 21143 ;; Registers used:
 21144 ;;		wreg
 21145 ;; Tracked objects:
 21146 ;;		On entry : 0/0
 21147 ;;		On exit  : 0/0
 21148 ;;		Unchanged: 0/0
 21149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21154 ;;Total ram usage:        0 bytes
 21155 ;; Hardware stack levels used:    1
 21156 ;; Hardware stack levels required when called:    6
 21157 ;; This function calls:
 21158 ;;		Nothing
 21159 ;; This function is called by:
 21160 ;;		_do_I2C_RX
 21161 ;; This function uses a non-reentrant model
 21162 ;;
 21163                           
 21164                           
 21165                           ;psect for function _i2c1_driver_getRXData
 21166  2169                     _i2c1_driver_getRXData:	
 21167                           
 21168                           ;i2c1_driver.c: 173: return SSP1BUF;
 21169                           
 21170                           ;incstack = 0
 21171                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 21172  2169  0024               	movlb	4	; select bank4
 21173  216A  0811               	movf	17,w	;volatile
 21174  216B  0008               	return
 21175  216C                     __end_of_i2c1_driver_getRXData:	
 21176                           
 21177                           	psect	text92
 21178  13CC                     __ptext92:	
 21179 ;; *************** function _i2c1_driver_sendNACK *****************
 21180 ;; Defined at:
 21181 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 21182 ;; Parameters:    Size  Location     Type
 21183 ;;		None
 21184 ;; Auto vars:     Size  Location     Type
 21185 ;;		None
 21186 ;; Return value:  Size  Location     Type
 21187 ;;                  1    wreg      void 
 21188 ;; Registers used:
 21189 ;;		None
 21190 ;; Tracked objects:
 21191 ;;		On entry : 0/0
 21192 ;;		On exit  : 0/0
 21193 ;;		Unchanged: 0/0
 21194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21199 ;;Total ram usage:        0 bytes
 21200 ;; Hardware stack levels used:    1
 21201 ;; Hardware stack levels required when called:    6
 21202 ;; This function calls:
 21203 ;;		Nothing
 21204 ;; This function is called by:
 21205 ;;		_do_I2C_DO_NACK_STOP
 21206 ;;		_do_I2C_DO_NACK_RESTART
 21207 ;; This function uses a non-reentrant model
 21208 ;;
 21209                           
 21210                           
 21211                           ;psect for function _i2c1_driver_sendNACK
 21212  13CC                     _i2c1_driver_sendNACK:	
 21213                           
 21214                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 21215                           
 21216                           ;incstack = 0
 21217                           ; Regs used in _i2c1_driver_sendNACK: []
 21218  13CC  0024               	movlb	4	; select bank4
 21219  13CD  1696               	bsf	22,5	;volatile
 21220                           
 21221                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 21222  13CE  1616               	bsf	22,4	;volatile
 21223  13CF  0008               	return
 21224  13D0                     __end_of_i2c1_driver_sendNACK:	
 21225                           
 21226                           	psect	text93
 21227  2138                     __ptext93:	
 21228 ;; *************** function _i2c1_driver_resetBus *****************
 21229 ;; Defined at:
 21230 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 21231 ;; Parameters:    Size  Location     Type
 21232 ;;		None
 21233 ;; Auto vars:     Size  Location     Type
 21234 ;;		None
 21235 ;; Return value:  Size  Location     Type
 21236 ;;                  1    wreg      void 
 21237 ;; Registers used:
 21238 ;;		None
 21239 ;; Tracked objects:
 21240 ;;		On entry : 0/0
 21241 ;;		On exit  : 0/0
 21242 ;;		Unchanged: 0/0
 21243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21248 ;;Total ram usage:        0 bytes
 21249 ;; Hardware stack levels used:    1
 21250 ;; Hardware stack levels required when called:    6
 21251 ;; This function calls:
 21252 ;;		Nothing
 21253 ;; This function is called by:
 21254 ;;		_do_I2C_RESET
 21255 ;; This function uses a non-reentrant model
 21256 ;;
 21257                           
 21258                           
 21259                           ;psect for function _i2c1_driver_resetBus
 21260  2138                     _i2c1_driver_resetBus:	
 21261                           
 21262                           ;incstack = 0
 21263                           ; Regs used in _i2c1_driver_resetBus: []
 21264  2138  0008               	return
 21265  2139                     __end_of_i2c1_driver_resetBus:	
 21266                           
 21267                           	psect	text94
 21268  2166                     __ptext94:	
 21269 ;; *************** function _i2c1_driver_startRX *****************
 21270 ;; Defined at:
 21271 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 21272 ;; Parameters:    Size  Location     Type
 21273 ;;		None
 21274 ;; Auto vars:     Size  Location     Type
 21275 ;;		None
 21276 ;; Return value:  Size  Location     Type
 21277 ;;                  1    wreg      void 
 21278 ;; Registers used:
 21279 ;;		None
 21280 ;; Tracked objects:
 21281 ;;		On entry : 0/0
 21282 ;;		On exit  : 0/0
 21283 ;;		Unchanged: 0/0
 21284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21289 ;;Total ram usage:        0 bytes
 21290 ;; Hardware stack levels used:    1
 21291 ;; Hardware stack levels required when called:    6
 21292 ;; This function calls:
 21293 ;;		Nothing
 21294 ;; This function is called by:
 21295 ;;		_do_I2C_RCEN
 21296 ;; This function uses a non-reentrant model
 21297 ;;
 21298                           
 21299                           
 21300                           ;psect for function _i2c1_driver_startRX
 21301  2166                     _i2c1_driver_startRX:	
 21302                           
 21303                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 21304                           
 21305                           ;incstack = 0
 21306                           ; Regs used in _i2c1_driver_startRX: []
 21307  2166  0024               	movlb	4	; select bank4
 21308  2167  1596               	bsf	22,3	;volatile
 21309  2168  0008               	return
 21310  2169                     __end_of_i2c1_driver_startRX:	
 21311                           
 21312                           	psect	text95
 21313  21C8                     __ptext95:	
 21314 ;; *************** function _returnReset *****************
 21315 ;; Defined at:
 21316 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 21317 ;; Parameters:    Size  Location     Type
 21318 ;;  p               1   17[BANK0 ] PTR void 
 21319 ;;		 -> NULL(0), 
 21320 ;; Auto vars:     Size  Location     Type
 21321 ;;		None
 21322 ;; Return value:  Size  Location     Type
 21323 ;;                  1    wreg      enum E8198
 21324 ;; Registers used:
 21325 ;;		wreg
 21326 ;; Tracked objects:
 21327 ;;		On entry : 0/0
 21328 ;;		On exit  : 0/0
 21329 ;;		Unchanged: 0/0
 21330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21331 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21334 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21335 ;;Total ram usage:        1 bytes
 21336 ;; Hardware stack levels used:    1
 21337 ;; Hardware stack levels required when called:    6
 21338 ;; This function calls:
 21339 ;;		Nothing
 21340 ;; This function is called by:
 21341 ;;		_i2c_open
 21342 ;;		_do_I2C_DO_ADDRESS_NACK
 21343 ;;		_do_I2C_TX
 21344 ;;		_do_I2C_RX
 21345 ;;		_do_I2C_TX_EMPTY
 21346 ;;		i1_do_I2C_DO_ADDRESS_NACK
 21347 ;;		i1_do_I2C_TX
 21348 ;;		i1_do_I2C_RX
 21349 ;;		i1_do_I2C_TX_EMPTY
 21350 ;; This function uses a non-reentrant model
 21351 ;;
 21352                           
 21353                           
 21354                           ;psect for function _returnReset
 21355  21C8                     _returnReset:	
 21356                           
 21357                           ;Skip over the trampoline to the duplicate function for level 1
 21358  21C8  1C7E               	btfss	126,0
 21359  21C9  29CC               	goto	l7137
 21360  21CA  3187  2FFE         	ljmp	i1l7919
 21361  21CC                     _returnReset$intlevel0:	
 21362  21CC                     l7137:	
 21363                           ;incstack = 0
 21364                           ; Regs used in _returnReset: [wreg]
 21365                           
 21366                           
 21367                           ;i2c_master.c: 450: return i2c_reset_link;
 21368  21CC  3005               	movlw	5
 21369  21CD  0008               	return
 21370  21CE                     __end_of_returnReset:	
 21371                           
 21372                           	psect	text96
 21373  21C2                     __ptext96:	
 21374 ;; *************** function _returnStop *****************
 21375 ;; Defined at:
 21376 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 21377 ;; Parameters:    Size  Location     Type
 21378 ;;  p               1   17[BANK0 ] PTR void 
 21379 ;;		 -> NULL(0), 
 21380 ;; Auto vars:     Size  Location     Type
 21381 ;;		None
 21382 ;; Return value:  Size  Location     Type
 21383 ;;                  1    wreg      enum E8198
 21384 ;; Registers used:
 21385 ;;		wreg
 21386 ;; Tracked objects:
 21387 ;;		On entry : 0/0
 21388 ;;		On exit  : 0/0
 21389 ;;		Unchanged: 0/0
 21390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21391 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21394 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21395 ;;Total ram usage:        1 bytes
 21396 ;; Hardware stack levels used:    1
 21397 ;; Hardware stack levels required when called:    6
 21398 ;; This function calls:
 21399 ;;		Nothing
 21400 ;; This function is called by:
 21401 ;;		_i2c_open
 21402 ;;		_setCallBack
 21403 ;;		_do_I2C_DO_ADDRESS_NACK
 21404 ;;		_do_I2C_TX
 21405 ;;		_do_I2C_RX
 21406 ;;		_do_I2C_TX_EMPTY
 21407 ;;		i1_do_I2C_DO_ADDRESS_NACK
 21408 ;;		i1_do_I2C_TX
 21409 ;;		i1_do_I2C_RX
 21410 ;;		i1_do_I2C_TX_EMPTY
 21411 ;; This function uses a non-reentrant model
 21412 ;;
 21413                           
 21414                           
 21415                           ;psect for function _returnStop
 21416  21C2                     _returnStop:	
 21417                           
 21418                           ;Skip over the trampoline to the duplicate function for level 1
 21419  21C2  1C7E               	btfss	126,0
 21420  21C3  29C6               	goto	l7133
 21421  21C4  3180  2802         	ljmp	i1l7915
 21422  21C6                     _returnStop$intlevel0:	
 21423  21C6                     l7133:	
 21424                           ;incstack = 0
 21425                           ; Regs used in _returnStop: [wreg]
 21426                           
 21427                           
 21428                           ;i2c_master.c: 445: return i2c_stop;
 21429  21C6  3001               	movlw	1
 21430  21C7  0008               	return
 21431  21C8                     __end_of_returnStop:	
 21432                           
 21433                           	psect	text97
 21434  2163                     __ptext97:	
 21435 ;; *************** function _i2c1_driver_stop *****************
 21436 ;; Defined at:
 21437 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 21438 ;; Parameters:    Size  Location     Type
 21439 ;;		None
 21440 ;; Auto vars:     Size  Location     Type
 21441 ;;		None
 21442 ;; Return value:  Size  Location     Type
 21443 ;;                  1    wreg      void 
 21444 ;; Registers used:
 21445 ;;		None
 21446 ;; Tracked objects:
 21447 ;;		On entry : 0/0
 21448 ;;		On exit  : 0/0
 21449 ;;		Unchanged: 0/0
 21450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21455 ;;Total ram usage:        0 bytes
 21456 ;; Hardware stack levels used:    1
 21457 ;; Hardware stack levels required when called:    6
 21458 ;; This function calls:
 21459 ;;		Nothing
 21460 ;; This function is called by:
 21461 ;;		_do_I2C_SEND_STOP
 21462 ;; This function uses a non-reentrant model
 21463 ;;
 21464                           
 21465                           
 21466                           ;psect for function _i2c1_driver_stop
 21467  2163                     _i2c1_driver_stop:	
 21468                           
 21469                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 21470                           
 21471                           ;incstack = 0
 21472                           ; Regs used in _i2c1_driver_stop: []
 21473  2163  0024               	movlb	4	; select bank4
 21474  2164  1516               	bsf	22,2	;volatile
 21475  2165  0008               	return
 21476  2166                     __end_of_i2c1_driver_stop:	
 21477                           
 21478                           	psect	text98
 21479  2160                     __ptext98:	
 21480 ;; *************** function _i2c1_driver_restart *****************
 21481 ;; Defined at:
 21482 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 21483 ;; Parameters:    Size  Location     Type
 21484 ;;		None
 21485 ;; Auto vars:     Size  Location     Type
 21486 ;;		None
 21487 ;; Return value:  Size  Location     Type
 21488 ;;                  1    wreg      void 
 21489 ;; Registers used:
 21490 ;;		None
 21491 ;; Tracked objects:
 21492 ;;		On entry : 0/0
 21493 ;;		On exit  : 0/0
 21494 ;;		Unchanged: 0/0
 21495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21500 ;;Total ram usage:        0 bytes
 21501 ;; Hardware stack levels used:    1
 21502 ;; Hardware stack levels required when called:    6
 21503 ;; This function calls:
 21504 ;;		Nothing
 21505 ;; This function is called by:
 21506 ;;		_do_I2C_SEND_RESTART_READ
 21507 ;;		_do_I2C_SEND_RESTART_WRITE
 21508 ;;		_do_I2C_SEND_RESTART
 21509 ;; This function uses a non-reentrant model
 21510 ;;
 21511                           
 21512                           
 21513                           ;psect for function _i2c1_driver_restart
 21514  2160                     _i2c1_driver_restart:	
 21515                           
 21516                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 21517                           
 21518                           ;incstack = 0
 21519                           ; Regs used in _i2c1_driver_restart: []
 21520  2160  0024               	movlb	4	; select bank4
 21521  2161  1496               	bsf	22,1	;volatile
 21522  2162  0008               	return
 21523  2163                     __end_of_i2c1_driver_restart:	
 21524                           
 21525                           	psect	text99
 21526  219A                     __ptext99:	
 21527 ;; *************** function _i2c1_driver_sendACK *****************
 21528 ;; Defined at:
 21529 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 21530 ;; Parameters:    Size  Location     Type
 21531 ;;		None
 21532 ;; Auto vars:     Size  Location     Type
 21533 ;;		None
 21534 ;; Return value:  Size  Location     Type
 21535 ;;                  1    wreg      void 
 21536 ;; Registers used:
 21537 ;;		None
 21538 ;; Tracked objects:
 21539 ;;		On entry : 0/0
 21540 ;;		On exit  : 0/0
 21541 ;;		Unchanged: 0/0
 21542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21547 ;;Total ram usage:        0 bytes
 21548 ;; Hardware stack levels used:    1
 21549 ;; Hardware stack levels required when called:    6
 21550 ;; This function calls:
 21551 ;;		Nothing
 21552 ;; This function is called by:
 21553 ;;		_do_I2C_DO_ACK
 21554 ;;		_do_I2C_RX
 21555 ;; This function uses a non-reentrant model
 21556 ;;
 21557                           
 21558                           
 21559                           ;psect for function _i2c1_driver_sendACK
 21560  219A                     _i2c1_driver_sendACK:	
 21561                           
 21562                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 21563                           
 21564                           ;incstack = 0
 21565                           ; Regs used in _i2c1_driver_sendACK: []
 21566  219A  0024               	movlb	4	; select bank4
 21567  219B  1296               	bcf	22,5	;volatile
 21568                           
 21569                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 21570  219C  1616               	bsf	22,4	;volatile
 21571  219D  0008               	return
 21572  219E                     __end_of_i2c1_driver_sendACK:	
 21573                           
 21574                           	psect	text100
 21575  215D                     __ptext100:	
 21576 ;; *************** function _i2c1_driver_start *****************
 21577 ;; Defined at:
 21578 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 21579 ;; Parameters:    Size  Location     Type
 21580 ;;		None
 21581 ;; Auto vars:     Size  Location     Type
 21582 ;;		None
 21583 ;; Return value:  Size  Location     Type
 21584 ;;                  1    wreg      void 
 21585 ;; Registers used:
 21586 ;;		None
 21587 ;; Tracked objects:
 21588 ;;		On entry : 0/0
 21589 ;;		On exit  : 0/0
 21590 ;;		Unchanged: 0/0
 21591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21596 ;;Total ram usage:        0 bytes
 21597 ;; Hardware stack levels used:    1
 21598 ;; Hardware stack levels required when called:    6
 21599 ;; This function calls:
 21600 ;;		Nothing
 21601 ;; This function is called by:
 21602 ;;		_i2c_masterOperation
 21603 ;; This function uses a non-reentrant model
 21604 ;;
 21605                           
 21606                           
 21607                           ;psect for function _i2c1_driver_start
 21608  215D                     _i2c1_driver_start:	
 21609                           
 21610                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
 21611                           
 21612                           ;incstack = 0
 21613                           ; Regs used in _i2c1_driver_start: []
 21614  215D  0024               	movlb	4	; select bank4
 21615  215E  1416               	bsf	22,0	;volatile
 21616  215F  0008               	return
 21617  2160                     __end_of_i2c1_driver_start:	
 21618                           
 21619                           	psect	text101
 21620  1C5F                     __ptext101:	
 21621 ;; *************** function ___awdiv *****************
 21622 ;; Defined at:
 21623 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 21624 ;; Parameters:    Size  Location     Type
 21625 ;;  divisor         2   17[BANK0 ] int 
 21626 ;;  dividend        2   19[BANK0 ] int 
 21627 ;; Auto vars:     Size  Location     Type
 21628 ;;  quotient        2   24[BANK0 ] int 
 21629 ;;  sign            1   23[BANK0 ] unsigned char 
 21630 ;;  counter         1   22[BANK0 ] unsigned char 
 21631 ;; Return value:  Size  Location     Type
 21632 ;;                  2   17[BANK0 ] int 
 21633 ;; Registers used:
 21634 ;;		wreg, status,2, status,0
 21635 ;; Tracked objects:
 21636 ;;		On entry : 0/0
 21637 ;;		On exit  : 0/0
 21638 ;;		Unchanged: 0/0
 21639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21640 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21641 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21642 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21643 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21644 ;;Total ram usage:        9 bytes
 21645 ;; Hardware stack levels used:    1
 21646 ;; Hardware stack levels required when called:    6
 21647 ;; This function calls:
 21648 ;;		Nothing
 21649 ;; This function is called by:
 21650 ;;		_drv_write_DC
 21651 ;;		_drv_outputSine
 21652 ;; This function uses a non-reentrant model
 21653 ;;
 21654                           
 21655                           
 21656                           ;psect for function ___awdiv
 21657  1C5F                     ___awdiv:	
 21658                           
 21659                           ;incstack = 0
 21660                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 21661  1C5F  0020               	movlb	0	; select bank0
 21662  1C60  01B7               	clrf	___awdiv@sign
 21663  1C61  1FB2               	btfss	___awdiv@divisor+1,7
 21664  1C62  2C6A               	goto	l5339
 21665  1C63  09B1               	comf	___awdiv@divisor,f
 21666  1C64  09B2               	comf	___awdiv@divisor+1,f
 21667  1C65  0AB1               	incf	___awdiv@divisor,f
 21668  1C66  1903               	skipnz
 21669  1C67  0AB2               	incf	___awdiv@divisor+1,f
 21670  1C68  01B7               	clrf	___awdiv@sign
 21671  1C69  0AB7               	incf	___awdiv@sign,f
 21672  1C6A                     l5339:	
 21673  1C6A  1FB4               	btfss	___awdiv@dividend+1,7
 21674  1C6B  2C75               	goto	l5345
 21675  1C6C  09B3               	comf	___awdiv@dividend,f
 21676  1C6D  09B4               	comf	___awdiv@dividend+1,f
 21677  1C6E  0AB3               	incf	___awdiv@dividend,f
 21678  1C6F  1903               	skipnz
 21679  1C70  0AB4               	incf	___awdiv@dividend+1,f
 21680  1C71  3001               	movlw	1
 21681  1C72  00B5               	movwf	??___awdiv
 21682  1C73  0835               	movf	??___awdiv,w
 21683  1C74  06B7               	xorwf	___awdiv@sign,f
 21684  1C75                     l5345:	
 21685  1C75  01B8               	clrf	___awdiv@quotient
 21686  1C76  01B9               	clrf	___awdiv@quotient+1
 21687  1C77  0831               	movf	___awdiv@divisor,w
 21688  1C78  0432               	iorwf	___awdiv@divisor+1,w
 21689  1C79  1903               	btfsc	3,2
 21690  1C7A  2CA4               	goto	l5367
 21691  1C7B  01B6               	clrf	___awdiv@counter
 21692  1C7C  0AB6               	incf	___awdiv@counter,f
 21693  1C7D                     l5355:	
 21694  1C7D  1BB2               	btfsc	___awdiv@divisor+1,7
 21695  1C7E  2C89               	goto	l5357
 21696  1C7F  3001               	movlw	1
 21697  1C80                     u4395:	
 21698  1C80  35B1               	lslf	___awdiv@divisor,f
 21699  1C81  0DB2               	rlf	___awdiv@divisor+1,f
 21700  1C82  0B89               	decfsz	9,f
 21701  1C83  2C80               	goto	u4395
 21702  1C84  3001               	movlw	1
 21703  1C85  00B5               	movwf	??___awdiv
 21704  1C86  0835               	movf	??___awdiv,w
 21705  1C87  07B6               	addwf	___awdiv@counter,f
 21706  1C88  2C7D               	goto	l5355
 21707  1C89                     l5357:	
 21708  1C89  3001               	movlw	1
 21709  1C8A                     u4415:	
 21710  1C8A  35B8               	lslf	___awdiv@quotient,f
 21711  1C8B  0DB9               	rlf	___awdiv@quotient+1,f
 21712  1C8C  0B89               	decfsz	9,f
 21713  1C8D  2C8A               	goto	u4415
 21714  1C8E  0832               	movf	___awdiv@divisor+1,w
 21715  1C8F  0234               	subwf	___awdiv@dividend+1,w
 21716  1C90  1D03               	skipz
 21717  1C91  2C94               	goto	u4425
 21718  1C92  0831               	movf	___awdiv@divisor,w
 21719  1C93  0233               	subwf	___awdiv@dividend,w
 21720  1C94                     u4425:	
 21721  1C94  1C03               	skipc
 21722  1C95  2C9B               	goto	l5363
 21723  1C96  0831               	movf	___awdiv@divisor,w
 21724  1C97  02B3               	subwf	___awdiv@dividend,f
 21725  1C98  0832               	movf	___awdiv@divisor+1,w
 21726  1C99  3BB4               	subwfb	___awdiv@dividend+1,f
 21727  1C9A  1438               	bsf	___awdiv@quotient,0
 21728  1C9B                     l5363:	
 21729  1C9B  3001               	movlw	1
 21730  1C9C                     u4435:	
 21731  1C9C  36B2               	lsrf	___awdiv@divisor+1,f
 21732  1C9D  0CB1               	rrf	___awdiv@divisor,f
 21733  1C9E  0B89               	decfsz	9,f
 21734  1C9F  2C9C               	goto	u4435
 21735  1CA0  3001               	movlw	1
 21736  1CA1  02B6               	subwf	___awdiv@counter,f
 21737  1CA2  1D03               	btfss	3,2
 21738  1CA3  2C89               	goto	l5357
 21739  1CA4                     l5367:	
 21740  1CA4  0837               	movf	___awdiv@sign,w
 21741  1CA5  1903               	btfsc	3,2
 21742  1CA6  2CAC               	goto	l5371
 21743  1CA7  09B8               	comf	___awdiv@quotient,f
 21744  1CA8  09B9               	comf	___awdiv@quotient+1,f
 21745  1CA9  0AB8               	incf	___awdiv@quotient,f
 21746  1CAA  1903               	skipnz
 21747  1CAB  0AB9               	incf	___awdiv@quotient+1,f
 21748  1CAC                     l5371:	
 21749  1CAC  0839               	movf	___awdiv@quotient+1,w
 21750  1CAD  00B2               	movwf	?___awdiv+1
 21751  1CAE  0838               	movf	___awdiv@quotient,w
 21752  1CAF  00B1               	movwf	?___awdiv
 21753  1CB0  0008               	return
 21754  1CB1                     __end_of___awdiv:	
 21755                           
 21756                           	psect	text102
 21757  14A7                     __ptext102:	
 21758 ;; *************** function _calcHeaterPins *****************
 21759 ;; Defined at:
 21760 ;;		line 261 in file "main.c"
 21761 ;; Parameters:    Size  Location     Type
 21762 ;;		None
 21763 ;; Auto vars:     Size  Location     Type
 21764 ;;		None
 21765 ;; Return value:  Size  Location     Type
 21766 ;;                  1    wreg      void 
 21767 ;; Registers used:
 21768 ;;		wreg, status,2, status,0
 21769 ;; Tracked objects:
 21770 ;;		On entry : 0/0
 21771 ;;		On exit  : 0/0
 21772 ;;		Unchanged: 0/0
 21773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21776 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21777 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21778 ;;Total ram usage:        4 bytes
 21779 ;; Hardware stack levels used:    1
 21780 ;; Hardware stack levels required when called:    6
 21781 ;; This function calls:
 21782 ;;		Nothing
 21783 ;; This function is called by:
 21784 ;;		_doMove
 21785 ;; This function uses a non-reentrant model
 21786 ;;
 21787                           
 21788                           
 21789                           ;psect for function _calcHeaterPins
 21790  14A7                     _calcHeaterPins:	
 21791                           
 21792                           ;main.c: 262: first_top = moveVector_downs & moveMask;
 21793                           
 21794                           ;incstack = 0
 21795                           ; Regs used in _calcHeaterPins: [wreg+status,2+status,0]
 21796  14A7  0021               	movlb	1	; select bank1
 21797  14A8  085F               	movf	_moveMask^(0+128),w
 21798  14A9  0022               	movlb	2	; select bank2
 21799  14AA  0546               	andwf	_moveVector_downs^(0+256),w
 21800  14AB  00D6               	movwf	_first_top^(0+256)
 21801  14AC  0021               	movlb	1	; select bank1
 21802  14AD  0860               	movf	(_moveMask+1)^(0+128),w
 21803  14AE  0022               	movlb	2	; select bank2
 21804  14AF  0547               	andwf	(_moveVector_downs+1)^(0+256),w
 21805  14B0  00D7               	movwf	(_first_top+1)^(0+256)
 21806  14B1  0021               	movlb	1	; select bank1
 21807  14B2  0861               	movf	(_moveMask+2)^(0+128),w
 21808  14B3  0022               	movlb	2	; select bank2
 21809  14B4  0548               	andwf	(_moveVector_downs+2)^(0+256),w
 21810  14B5  00D8               	movwf	(_first_top+2)^(0+256)
 21811  14B6  0021               	movlb	1	; select bank1
 21812  14B7  0862               	movf	(_moveMask+3)^(0+128),w
 21813  14B8  0022               	movlb	2	; select bank2
 21814  14B9  0549               	andwf	(_moveVector_downs+3)^(0+256),w
 21815  14BA  00D9               	movwf	(_first_top+3)^(0+256)
 21816                           
 21817                           ;main.c: 263: first_bottom = (~moveVector_downs) & moveMask;
 21818  14BB  0946               	comf	_moveVector_downs^(0+256),w
 21819  14BC  0020               	movlb	0	; select bank0
 21820  14BD  00B1               	movwf	??_calcHeaterPins
 21821  14BE  0022               	movlb	2	; select bank2
 21822  14BF  0947               	comf	(_moveVector_downs+1)^(0+256),w
 21823  14C0  0020               	movlb	0	; select bank0
 21824  14C1  00B2               	movwf	??_calcHeaterPins+1
 21825  14C2  0022               	movlb	2	; select bank2
 21826  14C3  0948               	comf	(_moveVector_downs+2)^(0+256),w
 21827  14C4  0020               	movlb	0	; select bank0
 21828  14C5  00B3               	movwf	??_calcHeaterPins+2
 21829  14C6  0022               	movlb	2	; select bank2
 21830  14C7  0949               	comf	(_moveVector_downs+3)^(0+256),w
 21831  14C8  0020               	movlb	0	; select bank0
 21832  14C9  00B4               	movwf	??_calcHeaterPins+3
 21833  14CA  0021               	movlb	1	; select bank1
 21834  14CB  085F               	movf	_moveMask^(0+128),w
 21835  14CC  0020               	movlb	0	; select bank0
 21836  14CD  0531               	andwf	??_calcHeaterPins,w
 21837  14CE  0022               	movlb	2	; select bank2
 21838  14CF  00DA               	movwf	_first_bottom^(0+256)
 21839  14D0  0021               	movlb	1	; select bank1
 21840  14D1  0860               	movf	(_moveMask+1)^(0+128),w
 21841  14D2  0020               	movlb	0	; select bank0
 21842  14D3  0532               	andwf	??_calcHeaterPins+1,w
 21843  14D4  0022               	movlb	2	; select bank2
 21844  14D5  00DB               	movwf	(_first_bottom+1)^(0+256)
 21845  14D6  0021               	movlb	1	; select bank1
 21846  14D7  0861               	movf	(_moveMask+2)^(0+128),w
 21847  14D8  0020               	movlb	0	; select bank0
 21848  14D9  0533               	andwf	??_calcHeaterPins+2,w
 21849  14DA  0022               	movlb	2	; select bank2
 21850  14DB  00DC               	movwf	(_first_bottom+2)^(0+256)
 21851  14DC  0021               	movlb	1	; select bank1
 21852  14DD  0862               	movf	(_moveMask+3)^(0+128),w
 21853  14DE  0020               	movlb	0	; select bank0
 21854  14DF  0534               	andwf	??_calcHeaterPins+3,w
 21855  14E0  0022               	movlb	2	; select bank2
 21856  14E1  00DD               	movwf	(_first_bottom+3)^(0+256)
 21857                           
 21858                           ;main.c: 264: second_top = moveVector_ups & moveMask;
 21859  14E2  0021               	movlb	1	; select bank1
 21860  14E3  085F               	movf	_moveMask^(0+128),w
 21861  14E4  0020               	movlb	0	; select bank0
 21862  14E5  054E               	andwf	_moveVector_ups,w
 21863  14E6  0022               	movlb	2	; select bank2
 21864  14E7  00DE               	movwf	_second_top^(0+256)
 21865  14E8  0021               	movlb	1	; select bank1
 21866  14E9  0860               	movf	(_moveMask+1)^(0+128),w
 21867  14EA  0020               	movlb	0	; select bank0
 21868  14EB  054F               	andwf	_moveVector_ups+1,w
 21869  14EC  0022               	movlb	2	; select bank2
 21870  14ED  00DF               	movwf	(_second_top+1)^(0+256)
 21871  14EE  0021               	movlb	1	; select bank1
 21872  14EF  0861               	movf	(_moveMask+2)^(0+128),w
 21873  14F0  0020               	movlb	0	; select bank0
 21874  14F1  0550               	andwf	_moveVector_ups+2,w
 21875  14F2  0022               	movlb	2	; select bank2
 21876  14F3  00E0               	movwf	(_second_top+2)^(0+256)
 21877  14F4  0021               	movlb	1	; select bank1
 21878  14F5  0862               	movf	(_moveMask+3)^(0+128),w
 21879  14F6  0020               	movlb	0	; select bank0
 21880  14F7  0551               	andwf	_moveVector_ups+3,w
 21881  14F8  0022               	movlb	2	; select bank2
 21882  14F9  00E1               	movwf	(_second_top+3)^(0+256)
 21883                           
 21884                           ;main.c: 265: second_bottom = (~moveVector_ups) & moveMask;
 21885  14FA  0020               	movlb	0	; select bank0
 21886  14FB  094E               	comf	_moveVector_ups,w
 21887  14FC  00B1               	movwf	??_calcHeaterPins
 21888  14FD  094F               	comf	_moveVector_ups+1,w
 21889  14FE  00B2               	movwf	??_calcHeaterPins+1
 21890  14FF  0950               	comf	_moveVector_ups+2,w
 21891  1500  00B3               	movwf	??_calcHeaterPins+2
 21892  1501  0951               	comf	_moveVector_ups+3,w
 21893  1502  00B4               	movwf	??_calcHeaterPins+3
 21894  1503  0021               	movlb	1	; select bank1
 21895  1504  085F               	movf	_moveMask^(0+128),w
 21896  1505  0020               	movlb	0	; select bank0
 21897  1506  0531               	andwf	??_calcHeaterPins,w
 21898  1507  0022               	movlb	2	; select bank2
 21899  1508  00D2               	movwf	_second_bottom^(0+256)
 21900  1509  0021               	movlb	1	; select bank1
 21901  150A  0860               	movf	(_moveMask+1)^(0+128),w
 21902  150B  0020               	movlb	0	; select bank0
 21903  150C  0532               	andwf	??_calcHeaterPins+1,w
 21904  150D  0022               	movlb	2	; select bank2
 21905  150E  00D3               	movwf	(_second_bottom+1)^(0+256)
 21906  150F  0021               	movlb	1	; select bank1
 21907  1510  0861               	movf	(_moveMask+2)^(0+128),w
 21908  1511  0020               	movlb	0	; select bank0
 21909  1512  0533               	andwf	??_calcHeaterPins+2,w
 21910  1513  0022               	movlb	2	; select bank2
 21911  1514  00D4               	movwf	(_second_bottom+2)^(0+256)
 21912  1515  0021               	movlb	1	; select bank1
 21913  1516  0862               	movf	(_moveMask+3)^(0+128),w
 21914  1517  0020               	movlb	0	; select bank0
 21915  1518  0534               	andwf	??_calcHeaterPins+3,w
 21916  1519  0022               	movlb	2	; select bank2
 21917  151A  00D5               	movwf	(_second_bottom+3)^(0+256)
 21918  151B  0008               	return
 21919  151C                     __end_of_calcHeaterPins:	
 21920                           
 21921                           	psect	text103
 21922  215A                     __ptext103:	
 21923 ;; *************** function _TMR2_StartTimer *****************
 21924 ;; Defined at:
 21925 ;;		line 85 in file "mcc_generated_files/tmr2.c"
 21926 ;; Parameters:    Size  Location     Type
 21927 ;;		None
 21928 ;; Auto vars:     Size  Location     Type
 21929 ;;		None
 21930 ;; Return value:  Size  Location     Type
 21931 ;;                  1    wreg      void 
 21932 ;; Registers used:
 21933 ;;		None
 21934 ;; Tracked objects:
 21935 ;;		On entry : 0/0
 21936 ;;		On exit  : 0/0
 21937 ;;		Unchanged: 0/0
 21938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21943 ;;Total ram usage:        0 bytes
 21944 ;; Hardware stack levels used:    1
 21945 ;; Hardware stack levels required when called:    6
 21946 ;; This function calls:
 21947 ;;		Nothing
 21948 ;; This function is called by:
 21949 ;;		_doMove
 21950 ;; This function uses a non-reentrant model
 21951 ;;
 21952                           
 21953                           
 21954                           ;psect for function _TMR2_StartTimer
 21955  215A                     _TMR2_StartTimer:	
 21956                           
 21957                           ;tmr2.c: 88: T2CONbits.TMR2ON = 1;
 21958                           
 21959                           ;incstack = 0
 21960                           ; Regs used in _TMR2_StartTimer: []
 21961  215A  0020               	movlb	0	; select bank0
 21962  215B  151F               	bsf	31,2	;volatile
 21963  215C  0008               	return
 21964  215D                     __end_of_TMR2_StartTimer:	
 21965                           
 21966                           	psect	text104
 21967  2157                     __ptext104:	
 21968 ;; *************** function _TMR0_StartTimer *****************
 21969 ;; Defined at:
 21970 ;;		line 85 in file "mcc_generated_files/tmr0.c"
 21971 ;; Parameters:    Size  Location     Type
 21972 ;;		None
 21973 ;; Auto vars:     Size  Location     Type
 21974 ;;		None
 21975 ;; Return value:  Size  Location     Type
 21976 ;;                  1    wreg      void 
 21977 ;; Registers used:
 21978 ;;		None
 21979 ;; Tracked objects:
 21980 ;;		On entry : 0/0
 21981 ;;		On exit  : 0/0
 21982 ;;		Unchanged: 0/0
 21983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21988 ;;Total ram usage:        0 bytes
 21989 ;; Hardware stack levels used:    1
 21990 ;; Hardware stack levels required when called:    6
 21991 ;; This function calls:
 21992 ;;		Nothing
 21993 ;; This function is called by:
 21994 ;;		_doMove
 21995 ;; This function uses a non-reentrant model
 21996 ;;
 21997                           
 21998                           
 21999                           ;psect for function _TMR0_StartTimer
 22000  2157                     _TMR0_StartTimer:	
 22001                           
 22002                           ;tmr0.c: 88: T0CON0bits.T0EN = 1;
 22003                           
 22004                           ;incstack = 0
 22005                           ; Regs used in _TMR0_StartTimer: []
 22006  2157  0020               	movlb	0	; select bank0
 22007  2158  1797               	bsf	23,7	;volatile
 22008  2159  0008               	return
 22009  215A                     __end_of_TMR0_StartTimer:	
 22010                           
 22011                           	psect	text105
 22012  2557                     __ptext105:	
 22013 ;; *************** function _LEDsOn *****************
 22014 ;; Defined at:
 22015 ;;		line 6 in file "LEDcomm.c"
 22016 ;; Parameters:    Size  Location     Type
 22017 ;;  LEDpins         4   36[BANK0 ] unsigned long 
 22018 ;;  topOrBottom     2   40[BANK0 ] int 
 22019 ;; Auto vars:     Size  Location     Type
 22020 ;;		None
 22021 ;; Return value:  Size  Location     Type
 22022 ;;                  1    wreg      void 
 22023 ;; Registers used:
 22024 ;;		wreg, status,2, status,0, pclath, cstack
 22025 ;; Tracked objects:
 22026 ;;		On entry : 0/0
 22027 ;;		On exit  : 0/0
 22028 ;;		Unchanged: 0/0
 22029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22030 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22032 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22033 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22034 ;;Total ram usage:       10 bytes
 22035 ;; Hardware stack levels used:    1
 22036 ;; Hardware stack levels required when called:    8
 22037 ;; This function calls:
 22038 ;;		_send_2length_2bytes_IK
 22039 ;; This function is called by:
 22040 ;;		_LED_test_openshort
 22041 ;;		_doMove
 22042 ;;		_setHeaterToggle
 22043 ;;		_timedActiveHeatOn
 22044 ;;		_demoSequence
 22045 ;; This function uses a non-reentrant model
 22046 ;;
 22047                           
 22048                           
 22049                           ;psect for function _LEDsOn
 22050  2557                     _LEDsOn:	
 22051                           
 22052                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 22053                           
 22054                           ;incstack = 0
 22055                           ; Regs used in _LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 22056  2557  0020               	movlb	0	; select bank0
 22057  2558  0844               	movf	LEDsOn@LEDpins,w
 22058  2559  00CA               	movwf	??_LEDsOn
 22059  255A  0845               	movf	LEDsOn@LEDpins+1,w
 22060  255B  00CB               	movwf	??_LEDsOn+1
 22061  255C  0846               	movf	LEDsOn@LEDpins+2,w
 22062  255D  00CC               	movwf	??_LEDsOn+2
 22063  255E  0847               	movf	LEDsOn@LEDpins+3,w
 22064  255F  00CD               	movwf	??_LEDsOn+3
 22065  2560  3010               	movlw	16
 22066  2561                     u7305:	
 22067  2561  36CD               	lsrf	??_LEDsOn+3,f
 22068  2562  0CCC               	rrf	??_LEDsOn+2,f
 22069  2563  0CCB               	rrf	??_LEDsOn+1,f
 22070  2564  0CCA               	rrf	??_LEDsOn,f
 22071  2565  0B89               	decfsz	9,f
 22072  2566  2D61               	goto	u7305
 22073  2567  084B               	movf	??_LEDsOn+1,w
 22074  2568  00BD               	movwf	send_2length_2bytes_IK@data1+1
 22075  2569  084A               	movf	??_LEDsOn,w
 22076  256A  00BC               	movwf	send_2length_2bytes_IK@data1
 22077  256B  0845               	movf	LEDsOn@LEDpins+1,w
 22078  256C  00BF               	movwf	send_2length_2bytes_IK@data2+1
 22079  256D  0844               	movf	LEDsOn@LEDpins,w
 22080  256E  00BE               	movwf	send_2length_2bytes_IK@data2
 22081  256F  01C0               	clrf	send_2length_2bytes_IK@latch_start
 22082  2570  0AC0               	incf	send_2length_2bytes_IK@latch_start,f
 22083  2571  0849               	movf	LEDsOn@topOrBottom+1,w
 22084  2572  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 22085  2573  0848               	movf	LEDsOn@topOrBottom,w
 22086  2574  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 22087  2575  31A3  23DA         	fcall	_send_2length_2bytes_IK
 22088  2577  0008               	return
 22089  2578                     __end_of_LEDsOn:	
 22090                           
 22091                           	psect	text106
 22092  23DA                     __ptext106:	
 22093 ;; *************** function _send_2length_2bytes_IK *****************
 22094 ;; Defined at:
 22095 ;;		line 70 in file "LEDcomm.c"
 22096 ;; Parameters:    Size  Location     Type
 22097 ;;  data1           2   28[BANK0 ] unsigned int 
 22098 ;;  data2           2   30[BANK0 ] unsigned int 
 22099 ;;  latch_start     1   32[BANK0 ] unsigned char 
 22100 ;;  topOrBottom     2   33[BANK0 ] int 
 22101 ;; Auto vars:     Size  Location     Type
 22102 ;;		None
 22103 ;; Return value:  Size  Location     Type
 22104 ;;                  1    wreg      void 
 22105 ;; Registers used:
 22106 ;;		wreg, status,2, status,0, pclath, cstack
 22107 ;; Tracked objects:
 22108 ;;		On entry : 0/0
 22109 ;;		On exit  : 0/0
 22110 ;;		Unchanged: 0/0
 22111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22112 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22114 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22115 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22116 ;;Total ram usage:        8 bytes
 22117 ;; Hardware stack levels used:    1
 22118 ;; Hardware stack levels required when called:    7
 22119 ;; This function calls:
 22120 ;;		_send_2bytes_latchless_IK
 22121 ;;		_send_last_2bytes_IK
 22122 ;; This function is called by:
 22123 ;;		_LEDsOn
 22124 ;;		_LEDsPwr
 22125 ;;		_LED_setBrightnessRange
 22126 ;;		_LED_test_openshort
 22127 ;;		_LED_readConfig
 22128 ;; This function uses a non-reentrant model
 22129 ;;
 22130                           
 22131                           
 22132                           ;psect for function _send_2length_2bytes_IK
 22133  23DA                     _send_2length_2bytes_IK:	
 22134                           
 22135                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 22136                           
 22137                           ;incstack = 0
 22138                           ; Regs used in _send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 22139  23DA  0020               	movlb	0	; select bank0
 22140  23DB  083D               	movf	send_2length_2bytes_IK@data1+1,w
 22141  23DC  00B2               	movwf	send_2bytes_latchless_IK@data+1
 22142  23DD  083C               	movf	send_2length_2bytes_IK@data1,w
 22143  23DE  00B1               	movwf	send_2bytes_latchless_IK@data
 22144  23DF  31A7  2770  31A3   	fcall	_send_2bytes_latchless_IK
 22145                           
 22146                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 22147  23E2  0020               	movlb	0	; select bank0
 22148  23E3  083F               	movf	send_2length_2bytes_IK@data2+1,w
 22149  23E4  00B2               	movwf	send_last_2bytes_IK@data+1
 22150  23E5  083E               	movf	send_2length_2bytes_IK@data2,w
 22151  23E6  00B1               	movwf	send_last_2bytes_IK@data
 22152  23E7  0840               	movf	send_2length_2bytes_IK@latch_start,w
 22153  23E8  00C3               	movwf	??_send_2length_2bytes_IK
 22154  23E9  0843               	movf	??_send_2length_2bytes_IK,w
 22155  23EA  00B3               	movwf	send_last_2bytes_IK@latch_start
 22156  23EB  0842               	movf	send_2length_2bytes_IK@topOrBottom+1,w
 22157  23EC  00B5               	movwf	send_last_2bytes_IK@topOrBottom+1
 22158  23ED  0841               	movf	send_2length_2bytes_IK@topOrBottom,w
 22159  23EE  00B4               	movwf	send_last_2bytes_IK@topOrBottom
 22160  23EF  319D  2556         	fcall	_send_last_2bytes_IK
 22161  23F1  0008               	return
 22162  23F2                     __end_of_send_2length_2bytes_IK:	
 22163                           
 22164                           	psect	text107
 22165  1D56                     __ptext107:	
 22166 ;; *************** function _send_last_2bytes_IK *****************
 22167 ;; Defined at:
 22168 ;;		line 19 in file "LEDcomm.c"
 22169 ;; Parameters:    Size  Location     Type
 22170 ;;  data            2   17[BANK0 ] unsigned int 
 22171 ;;  latch_start     1   19[BANK0 ] unsigned char 
 22172 ;;  topOrBottom     2   20[BANK0 ] int 
 22173 ;; Auto vars:     Size  Location     Type
 22174 ;;  j               2   26[BANK0 ] int 
 22175 ;; Return value:  Size  Location     Type
 22176 ;;                  1    wreg      void 
 22177 ;; Registers used:
 22178 ;;		wreg, status,2, status,0
 22179 ;; Tracked objects:
 22180 ;;		On entry : 0/0
 22181 ;;		On exit  : 0/0
 22182 ;;		Unchanged: 0/0
 22183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22184 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22185 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22186 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22187 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22188 ;;Total ram usage:       11 bytes
 22189 ;; Hardware stack levels used:    1
 22190 ;; Hardware stack levels required when called:    6
 22191 ;; This function calls:
 22192 ;;		Nothing
 22193 ;; This function is called by:
 22194 ;;		_send_2length_2bytes_IK
 22195 ;; This function uses a non-reentrant model
 22196 ;;
 22197                           
 22198                           
 22199                           ;psect for function _send_last_2bytes_IK
 22200  1D56                     _send_last_2bytes_IK:	
 22201                           
 22202                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 22203                           
 22204                           ;incstack = 0
 22205                           ; Regs used in _send_last_2bytes_IK: [wreg+status,2+status,0]
 22206  1D56  0020               	movlb	0	; select bank0
 22207  1D57  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 22208  1D58  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 22209  1D59  1D03               	btfss	3,2
 22210  1D5A  2D5E               	goto	l210
 22211  1D5B  0022               	movlb	2	; select bank2
 22212  1D5C  120D               	bcf	13,4	;volatile
 22213  1D5D  2D60               	goto	l7379
 22214  1D5E                     l210:	
 22215  1D5E  0022               	movlb	2	; select bank2
 22216  1D5F  100E               	bcf	14,0	;volatile
 22217  1D60                     l7379:	
 22218                           
 22219                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 22220  1D60  300F               	movlw	15
 22221  1D61  0020               	movlb	0	; select bank0
 22222  1D62  00BA               	movwf	send_last_2bytes_IK@j
 22223  1D63  3000               	movlw	0
 22224  1D64  00BB               	movwf	send_last_2bytes_IK@j+1
 22225  1D65  1BBB               	btfsc	send_last_2bytes_IK@j+1,7
 22226  1D66  2DA1               	goto	l231
 22227  1D67                     l214:	
 22228                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 22229                           
 22230  1D67  0022               	movlb	2	; select bank2
 22231  1D68  110C               	bcf	12,2	;volatile
 22232                           
 22233                           ;LEDcomm.c: 28: if (data & 1 << j){
 22234  1D69  3001               	movlw	1
 22235  1D6A  0020               	movlb	0	; select bank0
 22236  1D6B  00B6               	movwf	??_send_last_2bytes_IK
 22237  1D6C  3000               	movlw	0
 22238  1D6D  00B7               	movwf	??_send_last_2bytes_IK+1
 22239  1D6E  0A3A               	incf	send_last_2bytes_IK@j,w
 22240  1D6F  2D72               	goto	u6974
 22241  1D70                     u6975:	
 22242  1D70  35B6               	lslf	??_send_last_2bytes_IK,f
 22243  1D71  0DB7               	rlf	??_send_last_2bytes_IK+1,f
 22244  1D72                     u6974:	
 22245  1D72  0B89               	decfsz	9,f
 22246  1D73  2D70               	goto	u6975
 22247  1D74  0831               	movf	send_last_2bytes_IK@data,w
 22248  1D75  0536               	andwf	??_send_last_2bytes_IK,w
 22249  1D76  00B8               	movwf	??_send_last_2bytes_IK+2
 22250  1D77  0832               	movf	send_last_2bytes_IK@data+1,w
 22251  1D78  0537               	andwf	??_send_last_2bytes_IK+1,w
 22252  1D79  00B9               	movwf	??_send_last_2bytes_IK+3
 22253  1D7A  0838               	movf	??_send_last_2bytes_IK+2,w
 22254  1D7B  0439               	iorwf	??_send_last_2bytes_IK+3,w
 22255  1D7C  1903               	btfsc	3,2
 22256  1D7D  2D81               	goto	l220
 22257                           
 22258                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 22259  1D7E  0022               	movlb	2	; select bank2
 22260  1D7F  150E               	bsf	14,2	;volatile
 22261                           
 22262                           ;LEDcomm.c: 30: }
 22263  1D80  2D83               	goto	l7387
 22264  1D81                     l220:	
 22265                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 22266                           
 22267  1D81  0022               	movlb	2	; select bank2
 22268  1D82  110E               	bcf	14,2	;volatile
 22269  1D83                     l7387:	
 22270                           
 22271                           ;LEDcomm.c: 33: if( j == latch_start) {
 22272  1D83  0020               	movlb	0	; select bank0
 22273  1D84  0833               	movf	send_last_2bytes_IK@latch_start,w
 22274  1D85  00B6               	movwf	??_send_last_2bytes_IK
 22275  1D86  01B7               	clrf	??_send_last_2bytes_IK+1
 22276  1D87  083B               	movf	send_last_2bytes_IK@j+1,w
 22277  1D88  0637               	xorwf	??_send_last_2bytes_IK+1,w
 22278  1D89  1D03               	skipz
 22279  1D8A  2D8D               	goto	u6995
 22280  1D8B  083A               	movf	send_last_2bytes_IK@j,w
 22281  1D8C  0636               	xorwf	??_send_last_2bytes_IK,w
 22282  1D8D                     u6995:	
 22283  1D8D  1D03               	skipz
 22284  1D8E  2D98               	goto	l229
 22285                           
 22286                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 22287  1D8F  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 22288  1D90  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 22289  1D91  1D03               	btfss	3,2
 22290  1D92  2D96               	goto	l227
 22291  1D93  0022               	movlb	2	; select bank2
 22292  1D94  160D               	bsf	13,4	;volatile
 22293  1D95  2D98               	goto	l229
 22294  1D96                     l227:	
 22295  1D96  0022               	movlb	2	; select bank2
 22296  1D97  140E               	bsf	14,0	;volatile
 22297  1D98                     l229:	
 22298                           ;LEDcomm.c: 37: }
 22299                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 22300                           
 22301  1D98  0022               	movlb	2	; select bank2
 22302  1D99  150C               	bsf	12,2	;volatile
 22303  1D9A  30FF               	movlw	255
 22304  1D9B  0020               	movlb	0	; select bank0
 22305  1D9C  07BA               	addwf	send_last_2bytes_IK@j,f
 22306  1D9D  30FF               	movlw	255
 22307  1D9E  3DBB               	addwfc	send_last_2bytes_IK@j+1,f
 22308  1D9F  1FBB               	btfss	send_last_2bytes_IK@j+1,7
 22309  1DA0  2D67               	goto	l214
 22310  1DA1                     l231:	
 22311                           ;LEDcomm.c: 41: }
 22312                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 22313                           
 22314  1DA1  0022               	movlb	2	; select bank2
 22315  1DA2  110C               	bcf	12,2	;volatile
 22316                           
 22317                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 22318  1DA3  0020               	movlb	0	; select bank0
 22319  1DA4  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 22320  1DA5  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 22321  1DA6  1D03               	btfss	3,2
 22322  1DA7  2DAB               	goto	l237
 22323  1DA8  0022               	movlb	2	; select bank2
 22324  1DA9  120D               	bcf	13,4	;volatile
 22325  1DAA  0008               	return
 22326  1DAB                     l237:	
 22327  1DAB  0022               	movlb	2	; select bank2
 22328  1DAC  100E               	bcf	14,0	;volatile
 22329  1DAD  0008               	return
 22330  1DAE                     __end_of_send_last_2bytes_IK:	
 22331                           
 22332                           	psect	text108
 22333  2770                     __ptext108:	
 22334 ;; *************** function _send_2bytes_latchless_IK *****************
 22335 ;; Defined at:
 22336 ;;		line 49 in file "LEDcomm.c"
 22337 ;; Parameters:    Size  Location     Type
 22338 ;;  data            2   17[BANK0 ] unsigned int 
 22339 ;; Auto vars:     Size  Location     Type
 22340 ;;  j               2   23[BANK0 ] int 
 22341 ;; Return value:  Size  Location     Type
 22342 ;;                  1    wreg      void 
 22343 ;; Registers used:
 22344 ;;		wreg, status,2, status,0
 22345 ;; Tracked objects:
 22346 ;;		On entry : 0/0
 22347 ;;		On exit  : 0/0
 22348 ;;		Unchanged: 0/0
 22349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22351 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22352 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22353 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22354 ;;Total ram usage:        8 bytes
 22355 ;; Hardware stack levels used:    1
 22356 ;; Hardware stack levels required when called:    6
 22357 ;; This function calls:
 22358 ;;		Nothing
 22359 ;; This function is called by:
 22360 ;;		_send_2length_2bytes_IK
 22361 ;; This function uses a non-reentrant model
 22362 ;;
 22363                           
 22364                           
 22365                           ;psect for function _send_2bytes_latchless_IK
 22366  2770                     _send_2bytes_latchless_IK:	
 22367                           
 22368                           ;incstack = 0
 22369                           ; Regs used in _send_2bytes_latchless_IK: [wreg+status,2+status,0]
 22370                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 22371  2770  0022               	movlb	2	; select bank2
 22372  2771  120D               	bcf	13,4	;volatile
 22373                           
 22374                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 22375  2772  300F               	movlw	15
 22376  2773  0020               	movlb	0	; select bank0
 22377  2774  00B7               	movwf	send_2bytes_latchless_IK@j
 22378  2775  3000               	movlw	0
 22379  2776  00B8               	movwf	send_2bytes_latchless_IK@j+1
 22380  2777  1BB8               	btfsc	send_2bytes_latchless_IK@j+1,7
 22381  2778  2F9D               	goto	l256
 22382  2779                     l246:	
 22383                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 22384                           
 22385  2779  0022               	movlb	2	; select bank2
 22386  277A  110C               	bcf	12,2	;volatile
 22387                           
 22388                           ;LEDcomm.c: 56: if (data & 1 << j){
 22389  277B  3001               	movlw	1
 22390  277C  0020               	movlb	0	; select bank0
 22391  277D  00B3               	movwf	??_send_2bytes_latchless_IK
 22392  277E  3000               	movlw	0
 22393  277F  00B4               	movwf	??_send_2bytes_latchless_IK+1
 22394  2780  0A37               	incf	send_2bytes_latchless_IK@j,w
 22395  2781  2F84               	goto	u7044
 22396  2782                     u7045:	
 22397  2782  35B3               	lslf	??_send_2bytes_latchless_IK,f
 22398  2783  0DB4               	rlf	??_send_2bytes_latchless_IK+1,f
 22399  2784                     u7044:	
 22400  2784  0B89               	decfsz	9,f
 22401  2785  2F82               	goto	u7045
 22402  2786  0831               	movf	send_2bytes_latchless_IK@data,w
 22403  2787  0533               	andwf	??_send_2bytes_latchless_IK,w
 22404  2788  00B5               	movwf	??_send_2bytes_latchless_IK+2
 22405  2789  0832               	movf	send_2bytes_latchless_IK@data+1,w
 22406  278A  0534               	andwf	??_send_2bytes_latchless_IK+1,w
 22407  278B  00B6               	movwf	??_send_2bytes_latchless_IK+3
 22408  278C  0835               	movf	??_send_2bytes_latchless_IK+2,w
 22409  278D  0436               	iorwf	??_send_2bytes_latchless_IK+3,w
 22410  278E  1903               	btfsc	3,2
 22411  278F  2F93               	goto	l252
 22412                           
 22413                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 22414  2790  0022               	movlb	2	; select bank2
 22415  2791  150E               	bsf	14,2	;volatile
 22416                           
 22417                           ;LEDcomm.c: 58: }
 22418  2792  2F95               	goto	l254
 22419  2793                     l252:	
 22420                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 22421                           
 22422  2793  0022               	movlb	2	; select bank2
 22423  2794  110E               	bcf	14,2	;volatile
 22424  2795                     l254:	
 22425                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 22426                           
 22427  2795  150C               	bsf	12,2	;volatile
 22428  2796  30FF               	movlw	255
 22429  2797  0020               	movlb	0	; select bank0
 22430  2798  07B7               	addwf	send_2bytes_latchless_IK@j,f
 22431  2799  30FF               	movlw	255
 22432  279A  3DB8               	addwfc	send_2bytes_latchless_IK@j+1,f
 22433  279B  1FB8               	btfss	send_2bytes_latchless_IK@j+1,7
 22434  279C  2F79               	goto	l246
 22435  279D                     l256:	
 22436                           ;LEDcomm.c: 64: }
 22437                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 22438                           
 22439  279D  0022               	movlb	2	; select bank2
 22440  279E  110C               	bcf	12,2	;volatile
 22441  279F  0008               	return
 22442  27A0                     __end_of_send_2bytes_latchless_IK:	
 22443                           
 22444                           	psect	text109
 22445  2398                     __ptext109:	
 22446 ;; *************** function _SYSTEM_Initialize *****************
 22447 ;; Defined at:
 22448 ;;		line 77 in file "mcc_generated_files/mcc.c"
 22449 ;; Parameters:    Size  Location     Type
 22450 ;;		None
 22451 ;; Auto vars:     Size  Location     Type
 22452 ;;		None
 22453 ;; Return value:  Size  Location     Type
 22454 ;;                  1    wreg      void 
 22455 ;; Registers used:
 22456 ;;		wreg, status,2, status,0, pclath, cstack
 22457 ;; Tracked objects:
 22458 ;;		On entry : 0/0
 22459 ;;		On exit  : 0/0
 22460 ;;		Unchanged: 0/0
 22461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22466 ;;Total ram usage:        0 bytes
 22467 ;; Hardware stack levels used:    1
 22468 ;; Hardware stack levels required when called:    8
 22469 ;; This function calls:
 22470 ;;		_EUSART_Initialize
 22471 ;;		_OSCILLATOR_Initialize
 22472 ;;		_PIN_MANAGER_Initialize
 22473 ;;		_PMD_Initialize
 22474 ;;		_TMR0_Initialize
 22475 ;;		_TMR2_Initialize
 22476 ;;		_WDT_Initialize
 22477 ;; This function is called by:
 22478 ;;		_main
 22479 ;; This function uses a non-reentrant model
 22480 ;;
 22481                           
 22482                           
 22483                           ;psect for function _SYSTEM_Initialize
 22484  2398                     _SYSTEM_Initialize:	
 22485                           
 22486                           ;mcc.c: 80: PMD_Initialize();
 22487                           
 22488                           ;incstack = 0
 22489                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22490  2398  31A1  21FC  31A3   	fcall	_PMD_Initialize
 22491                           
 22492                           ;mcc.c: 81: PIN_MANAGER_Initialize();
 22493  239B  3198  201A  31A3   	fcall	_PIN_MANAGER_Initialize
 22494                           
 22495                           ;mcc.c: 82: OSCILLATOR_Initialize();
 22496  239E  31A2  227A  31A3   	fcall	_OSCILLATOR_Initialize
 22497                           
 22498                           ;mcc.c: 83: WDT_Initialize();
 22499  23A1  31A1  2196  31A3   	fcall	_WDT_Initialize
 22500                           
 22501                           ;mcc.c: 84: TMR2_Initialize();
 22502  23A4  31A3  235F  31A3   	fcall	_TMR2_Initialize
 22503                           
 22504                           ;mcc.c: 85: TMR0_Initialize();
 22505  23A7  31A3  2384  31A3   	fcall	_TMR0_Initialize
 22506                           
 22507                           ;mcc.c: 86: EUSART_Initialize();
 22508  23AA  31A3  23F2         	fcall	_EUSART_Initialize
 22509  23AC  0008               	return
 22510  23AD                     __end_of_SYSTEM_Initialize:	
 22511                           
 22512                           	psect	text110
 22513  2196                     __ptext110:	
 22514 ;; *************** function _WDT_Initialize *****************
 22515 ;; Defined at:
 22516 ;;		line 103 in file "mcc_generated_files/mcc.c"
 22517 ;; Parameters:    Size  Location     Type
 22518 ;;		None
 22519 ;; Auto vars:     Size  Location     Type
 22520 ;;		None
 22521 ;; Return value:  Size  Location     Type
 22522 ;;                  1    wreg      void 
 22523 ;; Registers used:
 22524 ;;		wreg
 22525 ;; Tracked objects:
 22526 ;;		On entry : 0/0
 22527 ;;		On exit  : 0/0
 22528 ;;		Unchanged: 0/0
 22529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22534 ;;Total ram usage:        0 bytes
 22535 ;; Hardware stack levels used:    1
 22536 ;; Hardware stack levels required when called:    6
 22537 ;; This function calls:
 22538 ;;		Nothing
 22539 ;; This function is called by:
 22540 ;;		_SYSTEM_Initialize
 22541 ;; This function uses a non-reentrant model
 22542 ;;
 22543                           
 22544                           
 22545                           ;psect for function _WDT_Initialize
 22546  2196                     _WDT_Initialize:	
 22547                           
 22548                           ;mcc.c: 106: WDTCON = 0x16;
 22549                           
 22550                           ;incstack = 0
 22551                           ; Regs used in _WDT_Initialize: [wreg]
 22552  2196  3016               	movlw	22
 22553  2197  0021               	movlb	1	; select bank1
 22554  2198  0097               	movwf	23	;volatile
 22555  2199  0008               	return
 22556  219A                     __end_of_WDT_Initialize:	
 22557                           
 22558                           	psect	text111
 22559  235F                     __ptext111:	
 22560 ;; *************** function _TMR2_Initialize *****************
 22561 ;; Defined at:
 22562 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22563 ;; Parameters:    Size  Location     Type
 22564 ;;		None
 22565 ;; Auto vars:     Size  Location     Type
 22566 ;;		None
 22567 ;; Return value:  Size  Location     Type
 22568 ;;                  1    wreg      void 
 22569 ;; Registers used:
 22570 ;;		wreg, status,2, status,0, pclath, cstack
 22571 ;; Tracked objects:
 22572 ;;		On entry : 0/0
 22573 ;;		On exit  : 0/0
 22574 ;;		Unchanged: 0/0
 22575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22580 ;;Total ram usage:        0 bytes
 22581 ;; Hardware stack levels used:    1
 22582 ;; Hardware stack levels required when called:    7
 22583 ;; This function calls:
 22584 ;;		_TMR2_SetInterruptHandler
 22585 ;; This function is called by:
 22586 ;;		_SYSTEM_Initialize
 22587 ;; This function uses a non-reentrant model
 22588 ;;
 22589                           
 22590                           
 22591                           ;psect for function _TMR2_Initialize
 22592  235F                     _TMR2_Initialize:	
 22593                           
 22594                           ;tmr2.c: 67: PR2 = 0x0F;
 22595                           
 22596                           ;incstack = 0
 22597                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22598  235F  300F               	movlw	15
 22599  2360  0020               	movlb	0	; select bank0
 22600  2361  009E               	movwf	30	;volatile
 22601                           
 22602                           ;tmr2.c: 70: TMR2 = 0x00;
 22603  2362  019D               	clrf	29	;volatile
 22604                           
 22605                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 22606  2363  1091               	bcf	17,1	;volatile
 22607                           
 22608                           ;tmr2.c: 76: PIE1bits.TMR2IE = 1;
 22609  2364  0021               	movlb	1	; select bank1
 22610  2365  1491               	bsf	17,1	;volatile
 22611                           
 22612                           ;tmr2.c: 79: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 22613  2366  3044               	movlw	low _TMR2_DefaultInterruptHandler
 22614  2367  0020               	movlb	0	; select bank0
 22615  2368  00B1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 22616  2369  3022               	movlw	high _TMR2_DefaultInterruptHandler
 22617  236A  00B2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 22618  236B  31A2  2256         	fcall	_TMR2_SetInterruptHandler
 22619                           
 22620                           ;tmr2.c: 82: T2CON = 0x4E;
 22621  236D  304E               	movlw	78
 22622  236E  0020               	movlb	0	; select bank0
 22623  236F  009F               	movwf	31	;volatile
 22624  2370  0008               	return
 22625  2371                     __end_of_TMR2_Initialize:	
 22626                           
 22627                           	psect	text112
 22628  2256                     __ptext112:	
 22629 ;; *************** function _TMR2_SetInterruptHandler *****************
 22630 ;; Defined at:
 22631 ;;		line 130 in file "mcc_generated_files/tmr2.c"
 22632 ;; Parameters:    Size  Location     Type
 22633 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 22634 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 22635 ;; Auto vars:     Size  Location     Type
 22636 ;;		None
 22637 ;; Return value:  Size  Location     Type
 22638 ;;                  1    wreg      void 
 22639 ;; Registers used:
 22640 ;;		wreg
 22641 ;; Tracked objects:
 22642 ;;		On entry : 0/0
 22643 ;;		On exit  : 0/0
 22644 ;;		Unchanged: 0/0
 22645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22646 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22649 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22650 ;;Total ram usage:        2 bytes
 22651 ;; Hardware stack levels used:    1
 22652 ;; Hardware stack levels required when called:    6
 22653 ;; This function calls:
 22654 ;;		Nothing
 22655 ;; This function is called by:
 22656 ;;		_TMR2_Initialize
 22657 ;; This function uses a non-reentrant model
 22658 ;;
 22659                           
 22660                           
 22661                           ;psect for function _TMR2_SetInterruptHandler
 22662  2256                     _TMR2_SetInterruptHandler:	
 22663                           
 22664                           ;tmr2.c: 131: TMR2_InterruptHandler = InterruptHandler;
 22665                           
 22666                           ;incstack = 0
 22667                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 22668  2256  0020               	movlb	0	; select bank0
 22669  2257  0832               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 22670  2258  0023               	movlb	3	; select bank3
 22671  2259  00E2               	movwf	(_TMR2_InterruptHandler+1)^(0+384)
 22672  225A  0020               	movlb	0	; select bank0
 22673  225B  0831               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 22674  225C  0023               	movlb	3	; select bank3
 22675  225D  00E1               	movwf	_TMR2_InterruptHandler^(0+384)
 22676  225E  0008               	return
 22677  225F                     __end_of_TMR2_SetInterruptHandler:	
 22678                           
 22679                           	psect	text113
 22680  2384                     __ptext113:	
 22681 ;; *************** function _TMR0_Initialize *****************
 22682 ;; Defined at:
 22683 ;;		line 59 in file "mcc_generated_files/tmr0.c"
 22684 ;; Parameters:    Size  Location     Type
 22685 ;;		None
 22686 ;; Auto vars:     Size  Location     Type
 22687 ;;		None
 22688 ;; Return value:  Size  Location     Type
 22689 ;;                  1    wreg      void 
 22690 ;; Registers used:
 22691 ;;		wreg, status,2, status,0, pclath, cstack
 22692 ;; Tracked objects:
 22693 ;;		On entry : 0/0
 22694 ;;		On exit  : 0/0
 22695 ;;		Unchanged: 0/0
 22696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22701 ;;Total ram usage:        0 bytes
 22702 ;; Hardware stack levels used:    1
 22703 ;; Hardware stack levels required when called:    7
 22704 ;; This function calls:
 22705 ;;		_TMR0_SetInterruptHandler
 22706 ;; This function is called by:
 22707 ;;		_SYSTEM_Initialize
 22708 ;; This function uses a non-reentrant model
 22709 ;;
 22710                           
 22711                           
 22712                           ;psect for function _TMR0_Initialize
 22713  2384                     _TMR0_Initialize:	
 22714                           
 22715                           ;tmr0.c: 64: T0CON1 = 0x58;
 22716                           
 22717                           ;incstack = 0
 22718                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22719  2384  3058               	movlw	88
 22720  2385  0020               	movlb	0	; select bank0
 22721  2386  0098               	movwf	24	;volatile
 22722                           
 22723                           ;tmr0.c: 67: TMR0H = 0x61;
 22724  2387  3061               	movlw	97
 22725  2388  0096               	movwf	22	;volatile
 22726                           
 22727                           ;tmr0.c: 70: TMR0L = 0x00;
 22728  2389  0195               	clrf	21	;volatile
 22729                           
 22730                           ;tmr0.c: 73: PIR0bits.TMR0IF = 0;
 22731  238A  1290               	bcf	16,5	;volatile
 22732                           
 22733                           ;tmr0.c: 76: PIE0bits.TMR0IE = 1;
 22734  238B  0021               	movlb	1	; select bank1
 22735  238C  1690               	bsf	16,5	;volatile
 22736                           
 22737                           ;tmr0.c: 79: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 22738  238D  3081               	movlw	low _TMR0_DefaultInterruptHandler
 22739  238E  0020               	movlb	0	; select bank0
 22740  238F  00B1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 22741  2390  3018               	movlw	high _TMR0_DefaultInterruptHandler
 22742  2391  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 22743  2392  31A2  224D         	fcall	_TMR0_SetInterruptHandler
 22744                           
 22745                           ;tmr0.c: 82: T0CON0 = 0x89;
 22746  2394  3089               	movlw	137
 22747  2395  0020               	movlb	0	; select bank0
 22748  2396  0097               	movwf	23	;volatile
 22749  2397  0008               	return
 22750  2398                     __end_of_TMR0_Initialize:	
 22751                           
 22752                           	psect	text114
 22753  224D                     __ptext114:	
 22754 ;; *************** function _TMR0_SetInterruptHandler *****************
 22755 ;; Defined at:
 22756 ;;		line 132 in file "mcc_generated_files/tmr0.c"
 22757 ;; Parameters:    Size  Location     Type
 22758 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 22759 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 22760 ;; Auto vars:     Size  Location     Type
 22761 ;;		None
 22762 ;; Return value:  Size  Location     Type
 22763 ;;                  1    wreg      void 
 22764 ;; Registers used:
 22765 ;;		wreg
 22766 ;; Tracked objects:
 22767 ;;		On entry : 0/0
 22768 ;;		On exit  : 0/0
 22769 ;;		Unchanged: 0/0
 22770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22771 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22774 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22775 ;;Total ram usage:        2 bytes
 22776 ;; Hardware stack levels used:    1
 22777 ;; Hardware stack levels required when called:    6
 22778 ;; This function calls:
 22779 ;;		Nothing
 22780 ;; This function is called by:
 22781 ;;		_TMR0_Initialize
 22782 ;; This function uses a non-reentrant model
 22783 ;;
 22784                           
 22785                           
 22786                           ;psect for function _TMR0_SetInterruptHandler
 22787  224D                     _TMR0_SetInterruptHandler:	
 22788                           
 22789                           ;tmr0.c: 133: TMR0_InterruptHandler = InterruptHandler;
 22790                           
 22791                           ;incstack = 0
 22792                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 22793  224D  0020               	movlb	0	; select bank0
 22794  224E  0832               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 22795  224F  0023               	movlb	3	; select bank3
 22796  2250  00E4               	movwf	(_TMR0_InterruptHandler+1)^(0+384)
 22797  2251  0020               	movlb	0	; select bank0
 22798  2252  0831               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 22799  2253  0023               	movlb	3	; select bank3
 22800  2254  00E3               	movwf	_TMR0_InterruptHandler^(0+384)
 22801  2255  0008               	return
 22802  2256                     __end_of_TMR0_SetInterruptHandler:	
 22803                           
 22804                           	psect	text115
 22805  21FC                     __ptext115:	
 22806 ;; *************** function _PMD_Initialize *****************
 22807 ;; Defined at:
 22808 ;;		line 109 in file "mcc_generated_files/mcc.c"
 22809 ;; Parameters:    Size  Location     Type
 22810 ;;		None
 22811 ;; Auto vars:     Size  Location     Type
 22812 ;;		None
 22813 ;; Return value:  Size  Location     Type
 22814 ;;                  1    wreg      void 
 22815 ;; Registers used:
 22816 ;;		status,2
 22817 ;; Tracked objects:
 22818 ;;		On entry : 0/0
 22819 ;;		On exit  : 0/0
 22820 ;;		Unchanged: 0/0
 22821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22826 ;;Total ram usage:        0 bytes
 22827 ;; Hardware stack levels used:    1
 22828 ;; Hardware stack levels required when called:    6
 22829 ;; This function calls:
 22830 ;;		Nothing
 22831 ;; This function is called by:
 22832 ;;		_SYSTEM_Initialize
 22833 ;; This function uses a non-reentrant model
 22834 ;;
 22835                           
 22836                           
 22837                           ;psect for function _PMD_Initialize
 22838  21FC                     _PMD_Initialize:	
 22839                           
 22840                           ;mcc.c: 112: PMD0 = 0x00;
 22841                           
 22842                           ;incstack = 0
 22843                           ; Regs used in _PMD_Initialize: [status,2]
 22844  21FC  0032               	movlb	18	; select bank18
 22845  21FD  0191               	clrf	17	;volatile
 22846                           
 22847                           ;mcc.c: 114: PMD1 = 0x00;
 22848  21FE  0192               	clrf	18	;volatile
 22849                           
 22850                           ;mcc.c: 116: PMD2 = 0x00;
 22851  21FF  0193               	clrf	19	;volatile
 22852                           
 22853                           ;mcc.c: 118: PMD3 = 0x00;
 22854  2200  0194               	clrf	20	;volatile
 22855                           
 22856                           ;mcc.c: 120: PMD4 = 0x00;
 22857  2201  0195               	clrf	21	;volatile
 22858                           
 22859                           ;mcc.c: 122: PMD5 = 0x00;
 22860  2202  0196               	clrf	22	;volatile
 22861  2203  0008               	return
 22862  2204                     __end_of_PMD_Initialize:	
 22863                           
 22864                           	psect	text116
 22865  181A                     __ptext116:	
 22866 ;; *************** function _PIN_MANAGER_Initialize *****************
 22867 ;; Defined at:
 22868 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 22869 ;; Parameters:    Size  Location     Type
 22870 ;;		None
 22871 ;; Auto vars:     Size  Location     Type
 22872 ;;		None
 22873 ;; Return value:  Size  Location     Type
 22874 ;;                  1    wreg      void 
 22875 ;; Registers used:
 22876 ;;		wreg, status,2, status,0
 22877 ;; Tracked objects:
 22878 ;;		On entry : 0/0
 22879 ;;		On exit  : 0/0
 22880 ;;		Unchanged: 0/0
 22881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22886 ;;Total ram usage:        0 bytes
 22887 ;; Hardware stack levels used:    1
 22888 ;; Hardware stack levels required when called:    6
 22889 ;; This function calls:
 22890 ;;		Nothing
 22891 ;; This function is called by:
 22892 ;;		_SYSTEM_Initialize
 22893 ;; This function uses a non-reentrant model
 22894 ;;
 22895                           
 22896                           
 22897                           ;psect for function _PIN_MANAGER_Initialize
 22898  181A                     _PIN_MANAGER_Initialize:	
 22899                           
 22900                           ;pin_manager.c: 57: LATA = 0x00;
 22901                           
 22902                           ;incstack = 0
 22903                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 22904  181A  0022               	movlb	2	; select bank2
 22905  181B  018C               	clrf	12	;volatile
 22906                           
 22907                           ;pin_manager.c: 58: LATB = 0x00;
 22908  181C  018D               	clrf	13	;volatile
 22909                           
 22910                           ;pin_manager.c: 59: LATC = 0x00;
 22911  181D  018E               	clrf	14	;volatile
 22912                           
 22913                           ;pin_manager.c: 64: TRISA = 0x33;
 22914  181E  3033               	movlw	51
 22915  181F  0021               	movlb	1	; select bank1
 22916  1820  008C               	movwf	12	;volatile
 22917                           
 22918                           ;pin_manager.c: 65: TRISB = 0x60;
 22919  1821  3060               	movlw	96
 22920  1822  008D               	movwf	13	;volatile
 22921                           
 22922                           ;pin_manager.c: 66: TRISC = 0xF8;
 22923  1823  30F8               	movlw	248
 22924  1824  008E               	movwf	14	;volatile
 22925                           
 22926                           ;pin_manager.c: 71: ANSELC = 0x00;
 22927  1825  0023               	movlb	3	; select bank3
 22928  1826  018E               	clrf	14	;volatile
 22929                           
 22930                           ;pin_manager.c: 72: ANSELB = 0x00;
 22931  1827  018D               	clrf	13	;volatile
 22932                           
 22933                           ;pin_manager.c: 73: ANSELA = 0x00;
 22934  1828  018C               	clrf	12	;volatile
 22935                           
 22936                           ;pin_manager.c: 78: WPUB = 0x00;
 22937  1829  0024               	movlb	4	; select bank4
 22938  182A  018D               	clrf	13	;volatile
 22939                           
 22940                           ;pin_manager.c: 79: WPUA = 0x00;
 22941  182B  018C               	clrf	12	;volatile
 22942                           
 22943                           ;pin_manager.c: 80: WPUC = 0xC8;
 22944  182C  30C8               	movlw	200
 22945  182D  008E               	movwf	14	;volatile
 22946                           
 22947                           ;pin_manager.c: 85: ODCONA = 0x00;
 22948  182E  0025               	movlb	5	; select bank5
 22949  182F  018C               	clrf	12	;volatile
 22950                           
 22951                           ;pin_manager.c: 86: ODCONB = 0x00;
 22952  1830  018D               	clrf	13	;volatile
 22953                           
 22954                           ;pin_manager.c: 87: ODCONC = 0x00;
 22955  1831  018E               	clrf	14	;volatile
 22956                           
 22957                           ;pin_manager.c: 94: SSP1DATPPSbits.SSP1DATPPS = 0x0D;
 22958  1832  003C               	movlb	28	; select bank28
 22959  1833  0821               	movf	33,w	;volatile
 22960  1834  39E0               	andlw	-32
 22961  1835  380D               	iorlw	13
 22962  1836  00A1               	movwf	33	;volatile
 22963                           
 22964                           ;pin_manager.c: 95: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 22965  1837  0820               	movf	32,w	;volatile
 22966  1838  39E0               	andlw	-32
 22967  1839  380E               	iorlw	14
 22968  183A  00A0               	movwf	32	;volatile
 22969                           
 22970                           ;pin_manager.c: 96: RXPPSbits.RXPPS = 0x17;
 22971  183B  0824               	movf	36,w	;volatile
 22972  183C  39E0               	andlw	-32
 22973  183D  3817               	iorlw	23
 22974  183E  00A4               	movwf	36	;volatile
 22975                           
 22976                           ;pin_manager.c: 97: RB7PPSbits.RB7PPS = 0x14;
 22977  183F  003D               	movlb	29	; select bank29
 22978  1840  081F               	movf	31,w	;volatile
 22979  1841  39E0               	andlw	-32
 22980  1842  3814               	iorlw	20
 22981  1843  009F               	movwf	31	;volatile
 22982                           
 22983                           ;pin_manager.c: 98: RB6PPSbits.RB6PPS = 0x18;
 22984  1844  081E               	movf	30,w	;volatile
 22985  1845  39E0               	andlw	-32
 22986  1846  3818               	iorlw	24
 22987  1847  009E               	movwf	30	;volatile
 22988                           
 22989                           ;pin_manager.c: 99: RB5PPSbits.RB5PPS = 0x19;
 22990  1848  081D               	movf	29,w	;volatile
 22991  1849  39E0               	andlw	-32
 22992  184A  3819               	iorlw	25
 22993  184B  009D               	movwf	29	;volatile
 22994  184C  0008               	return
 22995  184D                     __end_of_PIN_MANAGER_Initialize:	
 22996                           
 22997                           	psect	text117
 22998  227A                     __ptext117:	
 22999 ;; *************** function _OSCILLATOR_Initialize *****************
 23000 ;; Defined at:
 23001 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23002 ;; Parameters:    Size  Location     Type
 23003 ;;		None
 23004 ;; Auto vars:     Size  Location     Type
 23005 ;;		None
 23006 ;; Return value:  Size  Location     Type
 23007 ;;                  1    wreg      void 
 23008 ;; Registers used:
 23009 ;;		wreg, status,2
 23010 ;; Tracked objects:
 23011 ;;		On entry : 0/0
 23012 ;;		On exit  : 0/0
 23013 ;;		Unchanged: 0/0
 23014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23019 ;;Total ram usage:        0 bytes
 23020 ;; Hardware stack levels used:    1
 23021 ;; Hardware stack levels required when called:    6
 23022 ;; This function calls:
 23023 ;;		Nothing
 23024 ;; This function is called by:
 23025 ;;		_SYSTEM_Initialize
 23026 ;; This function uses a non-reentrant model
 23027 ;;
 23028                           
 23029                           
 23030                           ;psect for function _OSCILLATOR_Initialize
 23031  227A                     _OSCILLATOR_Initialize:	
 23032                           
 23033                           ;mcc.c: 92: OSCCON1 = 0x62;
 23034                           
 23035                           ;incstack = 0
 23036                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 23037  227A  3062               	movlw	98
 23038  227B  0032               	movlb	18	; select bank18
 23039  227C  0099               	movwf	25	;volatile
 23040                           
 23041                           ;mcc.c: 94: OSCCON3 = 0x00;
 23042  227D  019B               	clrf	27	;volatile
 23043                           
 23044                           ;mcc.c: 96: OSCEN = 0x00;
 23045  227E  019D               	clrf	29	;volatile
 23046                           
 23047                           ;mcc.c: 98: OSCFRQ = 0x03;
 23048  227F  3003               	movlw	3
 23049  2280  009F               	movwf	31	;volatile
 23050                           
 23051                           ;mcc.c: 100: OSCTUNE = 0x20;
 23052  2281  3020               	movlw	32
 23053  2282  009E               	movwf	30	;volatile
 23054  2283  0008               	return
 23055  2284                     __end_of_OSCILLATOR_Initialize:	
 23056                           
 23057                           	psect	text118
 23058  23F2                     __ptext118:	
 23059 ;; *************** function _EUSART_Initialize *****************
 23060 ;; Defined at:
 23061 ;;		line 72 in file "mcc_generated_files/eusart.c"
 23062 ;; Parameters:    Size  Location     Type
 23063 ;;		None
 23064 ;; Auto vars:     Size  Location     Type
 23065 ;;		None
 23066 ;; Return value:  Size  Location     Type
 23067 ;;                  1    wreg      void 
 23068 ;; Registers used:
 23069 ;;		wreg, status,2
 23070 ;; Tracked objects:
 23071 ;;		On entry : 0/0
 23072 ;;		On exit  : 0/0
 23073 ;;		Unchanged: 0/0
 23074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23077 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23078 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23079 ;;Total ram usage:        1 bytes
 23080 ;; Hardware stack levels used:    1
 23081 ;; Hardware stack levels required when called:    6
 23082 ;; This function calls:
 23083 ;;		Nothing
 23084 ;; This function is called by:
 23085 ;;		_SYSTEM_Initialize
 23086 ;; This function uses a non-reentrant model
 23087 ;;
 23088                           
 23089                           
 23090                           ;psect for function _EUSART_Initialize
 23091  23F2                     _EUSART_Initialize:	
 23092                           
 23093                           ;eusart.c: 75: PIE1bits.RCIE = 0;
 23094                           
 23095                           ;incstack = 0
 23096                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 23097  23F2  0021               	movlb	1	; select bank1
 23098  23F3  1291               	bcf	17,5	;volatile
 23099                           
 23100                           ;eusart.c: 76: PIE1bits.TXIE = 0;
 23101  23F4  1211               	bcf	17,4	;volatile
 23102                           
 23103                           ;eusart.c: 80: BAUD1CON = 0x08;
 23104  23F5  3008               	movlw	8
 23105  23F6  0023               	movlb	3	; select bank3
 23106  23F7  009F               	movwf	31	;volatile
 23107                           
 23108                           ;eusart.c: 83: RC1STA = 0x90;
 23109  23F8  3090               	movlw	144
 23110  23F9  009D               	movwf	29	;volatile
 23111                           
 23112                           ;eusart.c: 86: TX1STA = 0x24;
 23113  23FA  3024               	movlw	36
 23114  23FB  009E               	movwf	30	;volatile
 23115                           
 23116                           ;eusart.c: 89: SP1BRGL = 0x19;
 23117  23FC  3019               	movlw	25
 23118  23FD  009B               	movwf	27	;volatile
 23119                           
 23120                           ;eusart.c: 92: SP1BRGH = 0x00;
 23121  23FE  019C               	clrf	28	;volatile
 23122                           
 23123                           ;eusart.c: 96: eusartTxHead = 0;
 23124  23FF  01FD               	clrf	_eusartTxHead	;volatile
 23125                           
 23126                           ;eusart.c: 97: eusartTxTail = 0;
 23127  2400  0020               	movlb	0	; select bank0
 23128  2401  01D9               	clrf	_eusartTxTail	;volatile
 23129                           
 23130                           ;eusart.c: 98: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 23131  2402  3008               	movlw	8
 23132  2403  00B1               	movwf	??_EUSART_Initialize
 23133  2404  0831               	movf	??_EUSART_Initialize,w
 23134  2405  00DE               	movwf	_eusartTxBufferRemaining	;volatile
 23135                           
 23136                           ;eusart.c: 100: eusartRxHead = 0;
 23137  2406  01D8               	clrf	_eusartRxHead	;volatile
 23138                           
 23139                           ;eusart.c: 101: eusartRxTail = 0;
 23140  2407  01D7               	clrf	_eusartRxTail	;volatile
 23141                           
 23142                           ;eusart.c: 102: eusartRxCount = 0;
 23143  2408  01D6               	clrf	_eusartRxCount	;volatile
 23144                           
 23145                           ;eusart.c: 105: PIE1bits.RCIE = 1;
 23146  2409  0021               	movlb	1	; select bank1
 23147  240A  1691               	bsf	17,5	;volatile
 23148  240B  0008               	return
 23149  240C                     __end_of_EUSART_Initialize:	
 23150                           
 23151                           	psect	text119
 23152  24F6                     __ptext119:	
 23153 ;; *************** function _EUSART_Read *****************
 23154 ;; Defined at:
 23155 ;;		line 108 in file "mcc_generated_files/eusart.c"
 23156 ;; Parameters:    Size  Location     Type
 23157 ;;		None
 23158 ;; Auto vars:     Size  Location     Type
 23159 ;;  readValue       1   18[BANK0 ] unsigned char 
 23160 ;; Return value:  Size  Location     Type
 23161 ;;                  1    wreg      unsigned char 
 23162 ;; Registers used:
 23163 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23164 ;; Tracked objects:
 23165 ;;		On entry : 0/0
 23166 ;;		On exit  : 0/0
 23167 ;;		Unchanged: 0/0
 23168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23170 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23171 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23172 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23173 ;;Total ram usage:        2 bytes
 23174 ;; Hardware stack levels used:    1
 23175 ;; Hardware stack levels required when called:    6
 23176 ;; This function calls:
 23177 ;;		Nothing
 23178 ;; This function is called by:
 23179 ;;		_main
 23180 ;;		_getch
 23181 ;; This function uses a non-reentrant model
 23182 ;;
 23183                           
 23184                           
 23185                           ;psect for function _EUSART_Read
 23186  24F6                     _EUSART_Read:	
 23187                           
 23188                           ;eusart.c: 110: uint8_t readValue = 0;
 23189                           
 23190                           ;incstack = 0
 23191                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 23192  24F6  0020               	movlb	0	; select bank0
 23193  24F7  01B2               	clrf	EUSART_Read@readValue
 23194  24F8                     l6537:	
 23195                           ;eusart.c: 113: {
 23196                           
 23197                           ;eusart.c: 112: while(0 == eusartRxCount)
 23198                           
 23199  24F8  0856               	movf	_eusartRxCount,w	;volatile
 23200  24F9  1903               	btfsc	3,2
 23201  24FA  2CF8               	goto	l6537
 23202                           
 23203                           ;eusart.c: 114: }
 23204                           ;eusart.c: 116: readValue = eusartRxBuffer[eusartRxTail++];
 23205  24FB  0857               	movf	_eusartRxTail,w
 23206  24FC  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 23207  24FD  0086               	movwf	6
 23208  24FE  3001               	movlw	1	; select bank3/4
 23209  24FF  0087               	movwf	7
 23210  2500  0801               	movf	1,w
 23211  2501  00B1               	movwf	??_EUSART_Read
 23212  2502  0831               	movf	??_EUSART_Read,w
 23213  2503  00B2               	movwf	EUSART_Read@readValue
 23214  2504  3001               	movlw	1
 23215  2505  00B1               	movwf	??_EUSART_Read
 23216  2506  0831               	movf	??_EUSART_Read,w
 23217  2507  07D7               	addwf	_eusartRxTail,f	;volatile
 23218                           
 23219                           ;eusart.c: 117: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 23220  2508  3008               	movlw	8
 23221  2509  0257               	subwf	_eusartRxTail,w	;volatile
 23222  250A  1803               	btfsc	3,0
 23223                           
 23224                           ;eusart.c: 118: {
 23225                           ;eusart.c: 119: eusartRxTail = 0;
 23226  250B  01D7               	clrf	_eusartRxTail	;volatile
 23227                           
 23228                           ;eusart.c: 120: }
 23229                           ;eusart.c: 121: PIE1bits.RCIE = 0;
 23230  250C  0021               	movlb	1	; select bank1
 23231  250D  1291               	bcf	17,5	;volatile
 23232                           
 23233                           ;eusart.c: 122: eusartRxCount--;
 23234  250E  3001               	movlw	1
 23235  250F  0020               	movlb	0	; select bank0
 23236  2510  02D6               	subwf	_eusartRxCount,f	;volatile
 23237                           
 23238                           ;eusart.c: 123: PIE1bits.RCIE = 1;
 23239  2511  0021               	movlb	1	; select bank1
 23240  2512  1691               	bsf	17,5	;volatile
 23241                           
 23242                           ;eusart.c: 125: return readValue;
 23243  2513  0020               	movlb	0	; select bank0
 23244  2514  0832               	movf	EUSART_Read@readValue,w
 23245  2515  0008               	return
 23246  2516                     __end_of_EUSART_Read:	
 23247                           
 23248                           	psect	intentry
 23249  0004                     __pintentry:	
 23250 ;; *************** function _INTERRUPT_InterruptManager *****************
 23251 ;; Defined at:
 23252 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 23253 ;; Parameters:    Size  Location     Type
 23254 ;;		None
 23255 ;; Auto vars:     Size  Location     Type
 23256 ;;		None
 23257 ;; Return value:  Size  Location     Type
 23258 ;;                  1    wreg      void 
 23259 ;; Registers used:
 23260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23261 ;; Tracked objects:
 23262 ;;		On entry : 0/0
 23263 ;;		On exit  : 0/0
 23264 ;;		Unchanged: 0/0
 23265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23268 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23270 ;;Total ram usage:        1 bytes
 23271 ;; Hardware stack levels used:    1
 23272 ;; Hardware stack levels required when called:    5
 23273 ;; This function calls:
 23274 ;;		Absolute function
 23275 ;;		_EUSART_Receive_ISR
 23276 ;;		_EUSART_Transmit_ISR
 23277 ;;		_TMR0_ISR
 23278 ;;		_TMR2_ISR
 23279 ;;		_i2c_busCollisionISR
 23280 ;;		i1_i2c_ISR
 23281 ;; This function is called by:
 23282 ;;		Interrupt level 1
 23283 ;; This function uses a non-reentrant model
 23284 ;;
 23285                           
 23286  0004                     _INTERRUPT_InterruptManager:	
 23287                           
 23288                           ;incstack = 0
 23289 ;; hardware stack exceeded
 23290  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 23291                           
 23292                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23293  0005  3180               	pagesel	$
 23294  0006  0020               	movlb	0	; select bank0
 23295  0007  087F               	movf	127,w
 23296  0008  00FC               	movwf	??_INTERRUPT_InterruptManager
 23297                           
 23298                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 23299  0009  0021               	movlb	1	; select bank1
 23300  000A  1E90               	btfss	16,5	;volatile
 23301  000B  2813               	goto	i1l360
 23302  000C  0020               	movlb	0	; select bank0
 23303  000D  1E90               	btfss	16,5	;volatile
 23304  000E  2813               	goto	i1l360
 23305                           
 23306                           ;interrupt_manager.c: 55: {
 23307                           ;interrupt_manager.c: 56: TMR0_ISR();
 23308  000F  31A3  2308  3180   	fcall	_TMR0_ISR
 23309                           
 23310                           ;interrupt_manager.c: 57: }
 23311  0012  284B               	goto	i1l374
 23312  0013                     i1l360:	
 23313                           
 23314                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1)
 23315  0013  1F0B               	btfss	11,6	;volatile
 23316  0014  284B               	goto	i1l374
 23317                           
 23318                           ;interrupt_manager.c: 59: {
 23319                           ;interrupt_manager.c: 60: if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
 23320  0015  0021               	movlb	1	; select bank1
 23321  0016  1D11               	btfss	17,2	;volatile
 23322  0017  2822               	goto	i1l363
 23323  0018  0020               	movlb	0	; select bank0
 23324  0019  1D11               	btfss	17,2	;volatile
 23325  001A  2822               	goto	i1l363
 23326                           
 23327                           ;interrupt_manager.c: 61: {
 23328                           ;interrupt_manager.c: 62: i2c1_driver_busCollisionISR();
 23329  001B  0021               	movlb	1	; select bank1
 23330  001C  0868               	movf	(_i2c1_driver_busCollisionISR+1)^(0+128),w
 23331  001D  008A               	movwf	10
 23332  001E  0867               	movf	_i2c1_driver_busCollisionISR^(0+128),w
 23333  001F  000A               	callw
 23334  0020  3180               	pagesel	$
 23335                           
 23336                           ;interrupt_manager.c: 63: }
 23337  0021  284B               	goto	i1l374
 23338  0022                     i1l363:	
 23339                           
 23340                           ;interrupt_manager.c: 64: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 23341  0022  0021               	movlb	1	; select bank1
 23342  0023  1D91               	btfss	17,3	;volatile
 23343  0024  282F               	goto	i1l365
 23344  0025  0020               	movlb	0	; select bank0
 23345  0026  1D91               	btfss	17,3	;volatile
 23346  0027  282F               	goto	i1l365
 23347                           
 23348                           ;interrupt_manager.c: 65: {
 23349                           ;interrupt_manager.c: 66: i2c1_driver_i2cISR();
 23350  0028  0022               	movlb	2	; select bank2
 23351  0029  0869               	movf	(_i2c1_driver_i2cISR+1)^(0+256),w
 23352  002A  008A               	movwf	10
 23353  002B  0868               	movf	_i2c1_driver_i2cISR^(0+256),w
 23354  002C  000A               	callw
 23355  002D  3180               	pagesel	$
 23356                           
 23357                           ;interrupt_manager.c: 67: }
 23358  002E  284B               	goto	i1l374
 23359  002F                     i1l365:	
 23360                           
 23361                           ;interrupt_manager.c: 68: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 23362  002F  0021               	movlb	1	; select bank1
 23363  0030  1C91               	btfss	17,1	;volatile
 23364  0031  2839               	goto	i1l367
 23365  0032  0020               	movlb	0	; select bank0
 23366  0033  1C91               	btfss	17,1	;volatile
 23367  0034  2839               	goto	i1l367
 23368                           
 23369                           ;interrupt_manager.c: 69: {
 23370                           ;interrupt_manager.c: 70: TMR2_ISR();
 23371  0035  31A3  2315  3180   	fcall	_TMR2_ISR
 23372                           
 23373                           ;interrupt_manager.c: 71: }
 23374  0038  284B               	goto	i1l374
 23375  0039                     i1l367:	
 23376                           
 23377                           ;interrupt_manager.c: 72: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 23378  0039  0021               	movlb	1	; select bank1
 23379  003A  1E91               	btfss	17,5	;volatile
 23380  003B  2843               	goto	i1l369
 23381  003C  0020               	movlb	0	; select bank0
 23382  003D  1E91               	btfss	17,5	;volatile
 23383  003E  2843               	goto	i1l369
 23384                           
 23385                           ;interrupt_manager.c: 73: {
 23386                           ;interrupt_manager.c: 74: EUSART_Receive_ISR();
 23387  003F  31A4  2427  3180   	fcall	_EUSART_Receive_ISR
 23388                           
 23389                           ;interrupt_manager.c: 75: }
 23390  0042  284B               	goto	i1l374
 23391  0043                     i1l369:	
 23392                           
 23393                           ;interrupt_manager.c: 76: else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 23394  0043  0021               	movlb	1	; select bank1
 23395  0044  1E11               	btfss	17,4	;volatile
 23396  0045  284B               	goto	i1l374
 23397  0046  0020               	movlb	0	; select bank0
 23398  0047  1E11               	btfss	17,4	;volatile
 23399  0048  284B               	goto	i1l374
 23400                           
 23401                           ;interrupt_manager.c: 77: {
 23402                           ;interrupt_manager.c: 78: EUSART_Transmit_ISR();
 23403  0049  31A4  247C         	fcall	_EUSART_Transmit_ISR
 23404  004B                     i1l374:	
 23405                           ;interrupt_manager.c: 85: else
 23406                           ;interrupt_manager.c: 86: {
 23407                           
 23408                           ;interrupt_manager.c: 83: }
 23409                           ;interrupt_manager.c: 84: }
 23410                           
 23411                           ;interrupt_manager.c: 80: else
 23412                           ;interrupt_manager.c: 81: {
 23413                           
 23414                           ;interrupt_manager.c: 79: }
 23415                           
 23416  004B  087C               	movf	??_INTERRUPT_InterruptManager,w
 23417  004C  0020               	movlb	0	; select bank0
 23418  004D  00FF               	movwf	127
 23419  004E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 23420  004F  0009               	retfie
 23421  0050                     __end_of_INTERRUPT_InterruptManager:	
 23422                           
 23423                           	psect	text121
 23424  24D6                     __ptext121:	
 23425 ;; *************** function i1_i2c_ISR *****************
 23426 ;; Defined at:
 23427 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 23428 ;; Parameters:    Size  Location     Type
 23429 ;;		None
 23430 ;; Auto vars:     Size  Location     Type
 23431 ;;		None
 23432 ;; Return value:  Size  Location     Type
 23433 ;;                  1    wreg      void 
 23434 ;; Registers used:
 23435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23436 ;; Tracked objects:
 23437 ;;		On entry : 0/0
 23438 ;;		On exit  : 0/0
 23439 ;;		Unchanged: 0/0
 23440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23445 ;;Total ram usage:        1 bytes
 23446 ;; Hardware stack levels used:    1
 23447 ;; Hardware stack levels required when called:    3
 23448 ;; This function calls:
 23449 ;;		i1_do_I2C_DO_ACK
 23450 ;;		i1_do_I2C_DO_ADDRESS_NACK
 23451 ;;		i1_do_I2C_DO_NACK_RESTART
 23452 ;;		i1_do_I2C_DO_NACK_STOP
 23453 ;;		i1_do_I2C_IDLE
 23454 ;;		i1_do_I2C_RCEN
 23455 ;;		i1_do_I2C_RESET
 23456 ;;		i1_do_I2C_RX
 23457 ;;		i1_do_I2C_SEND_ADR_READ
 23458 ;;		i1_do_I2C_SEND_ADR_WRITE
 23459 ;;		i1_do_I2C_SEND_RESTART
 23460 ;;		i1_do_I2C_SEND_RESTART_READ
 23461 ;;		i1_do_I2C_SEND_RESTART_WRITE
 23462 ;;		i1_do_I2C_SEND_STOP
 23463 ;;		i1_do_I2C_TX
 23464 ;;		i1_do_I2C_TX_EMPTY
 23465 ;;		i1_i2c1_driver_isNACK
 23466 ;;		i1_mssp1_clearIRQ
 23467 ;; This function is called by:
 23468 ;; This function uses a non-reentrant model
 23469 ;;
 23470                           
 23471                           
 23472                           ;psect for function i1_i2c_ISR
 23473  24D6                     i1_i2c_ISR:	
 23474  24D6                     i1l8551:	
 23475                           ;incstack = 0
 23476                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23477                           
 23478                           
 23479                           ;i2c_master.c: 421: mssp1_clearIRQ();
 23480  24D6  31A1  2154  31A4   	fcall	i1_mssp1_clearIRQ
 23481                           
 23482                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 23483  24D9  0022               	movlb	2	; select bank2
 23484  24DA  1DA0               	btfss	_i2c_status^(0+256),3
 23485  24DB  2CE6               	goto	i1l8559
 23486  24DC  31A2  22D8  31A4   	fcall	i1_i2c1_driver_isNACK
 23487  24DF  1C03               	btfss	3,0
 23488  24E0  2CE6               	goto	i1l8559
 23489                           
 23490                           ;i2c_master.c: 428: {
 23491                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 23492  24E1  300F               	movlw	15
 23493  24E2  00F5               	movwf	??i1_i2c_ISR
 23494  24E3  0875               	movf	??i1_i2c_ISR,w
 23495  24E4  0022               	movlb	2	; select bank2
 23496  24E5  00AA               	movwf	(_i2c_status^(0+256)+10)
 23497  24E6                     i1l8559:	
 23498                           
 23499                           ;i2c_master.c: 430: }
 23500                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 23501  24E6  0022               	movlb	2	; select bank2
 23502  24E7  352A               	lslf	(_i2c_status^(0+256)+10),w
 23503  24E8  3E20               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 23504  24E9  0086               	movwf	6
 23505  24EA  3002               	movlw	2	; select bank4/5
 23506  24EB  0087               	movwf	7
 23507  24EC  3F41               	moviw [1]fsr1
 23508  24ED  008A               	movwf	10
 23509  24EE  3F40               	moviw [0]fsr1
 23510  24EF  000A               	callw
 23511  24F0  31A4               	pagesel	$
 23512  24F1  00F5               	movwf	??i1_i2c_ISR
 23513  24F2  0875               	movf	??i1_i2c_ISR,w
 23514  24F3  0022               	movlb	2	; select bank2
 23515  24F4  00AA               	movwf	(_i2c_status^(0+256)+10)
 23516  24F5  0008               	return
 23517  24F6                     __end_ofi1_i2c_ISR:	
 23518                           
 23519                           	psect	text122
 23520  2154                     __ptext122:	
 23521 ;; *************** function i1_mssp1_clearIRQ *****************
 23522 ;; Defined at:
 23523 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 23524 ;; Parameters:    Size  Location     Type
 23525 ;;		None
 23526 ;; Auto vars:     Size  Location     Type
 23527 ;;		None
 23528 ;; Return value:  Size  Location     Type
 23529 ;;                  1    wreg      void 
 23530 ;; Registers used:
 23531 ;;		None
 23532 ;; Tracked objects:
 23533 ;;		On entry : 0/0
 23534 ;;		On exit  : 0/0
 23535 ;;		Unchanged: 0/0
 23536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23541 ;;Total ram usage:        0 bytes
 23542 ;; Hardware stack levels used:    1
 23543 ;; This function calls:
 23544 ;;		Nothing
 23545 ;; This function is called by:
 23546 ;;		i1_i2c_ISR
 23547 ;; This function uses a non-reentrant model
 23548 ;;
 23549                           
 23550                           
 23551                           ;psect for function i1_mssp1_clearIRQ
 23552  2154                     i1_mssp1_clearIRQ:	
 23553                           
 23554                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 23555                           
 23556                           ;incstack = 0
 23557                           ; Regs used in i1_mssp1_clearIRQ: []
 23558  2154  0020               	movlb	0	; select bank0
 23559  2155  1191               	bcf	17,3	;volatile
 23560  2156  0008               	return
 23561  2157                     __end_ofi1_mssp1_clearIRQ:	
 23562                           
 23563                           	psect	text123
 23564  18B8                     __ptext123:	
 23565 ;; *************** function i1_do_I2C_RX *****************
 23566 ;; Defined at:
 23567 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 23568 ;; Parameters:    Size  Location     Type
 23569 ;;		None
 23570 ;; Auto vars:     Size  Location     Type
 23571 ;;		None
 23572 ;; Return value:  Size  Location     Type
 23573 ;;                  1    wreg      enum E8364
 23574 ;; Registers used:
 23575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23576 ;; Tracked objects:
 23577 ;;		On entry : 0/0
 23578 ;;		On exit  : 0/0
 23579 ;;		Unchanged: 0/0
 23580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23585 ;;Total ram usage:        1 bytes
 23586 ;; Hardware stack levels used:    1
 23587 ;; Hardware stack levels required when called:    2
 23588 ;; This function calls:
 23589 ;;		i1_do_I2C_DO_NACK_RESTART
 23590 ;;		i1_do_I2C_DO_NACK_STOP
 23591 ;;		i1_i2c1_driver_getRXData
 23592 ;;		i1_i2c1_driver_sendACK
 23593 ;;		i1_returnReset
 23594 ;;		i1_returnStop
 23595 ;; This function is called by:
 23596 ;; This function uses a non-reentrant model
 23597 ;;
 23598                           
 23599                           
 23600                           ;psect for function i1_do_I2C_RX
 23601  18B8                     i1_do_I2C_RX:	
 23602  18B8                     i1l8333:	
 23603                           ;incstack = 0
 23604                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23605                           
 23606                           
 23607                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 23608  18B8  0022               	movlb	2	; select bank2
 23609  18B9  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 23610  18BA  0086               	movwf	6
 23611  18BB  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 23612  18BC  0087               	movwf	7
 23613  18BD  31A1  214E  3198   	fcall	i1_i2c1_driver_getRXData
 23614  18C0  0081               	movwf	1
 23615  18C1  3001               	movlw	1
 23616  18C2  0022               	movlb	2	; select bank2
 23617  18C3  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 23618  18C4  3000               	movlw	0
 23619  18C5  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 23620                           
 23621                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 23622  18C6  3001               	movlw	1
 23623  18C7  02A4               	subwf	(_i2c_status^(0+256)+4),f
 23624  18C8  3000               	movlw	0
 23625  18C9  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 23626  18CA  0824               	movf	(_i2c_status^(0+256)+4),w
 23627  18CB  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 23628  18CC  1903               	btfsc	3,2
 23629  18CD  28D2               	goto	i1l770
 23630                           
 23631                           ;i2c_master.c: 361: {
 23632                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 23633  18CE  31A1  2172         	fcall	i1_i2c1_driver_sendACK
 23634                           
 23635                           ;i2c_master.c: 363: return I2C_RCEN;
 23636  18D0  3005               	movlw	5
 23637                           
 23638                           ;i2c_master.c: 364: }
 23639  18D1  0008               	return
 23640  18D2                     i1l770:	
 23641                           
 23642                           ;i2c_master.c: 365: else
 23643                           ;i2c_master.c: 366: {
 23644                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 23645  18D2  1520               	bsf	_i2c_status^(0+256),2
 23646                           
 23647                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 23648  18D3  28DA               	goto	i1l8357
 23649  18D4                     i1l8347:	
 23650                           ;i2c_master.c: 369: {
 23651                           ;i2c_master.c: 370: case i2c_restart_write:
 23652                           
 23653                           
 23654                           ;i2c_master.c: 371: case i2c_restart_read:
 23655                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 23656  18D4  31A1  2192         	fcall	i1_do_I2C_DO_NACK_RESTART
 23657  18D6  0008               	return
 23658  18D7                     i1l8351:	
 23659                           ;i2c_master.c: 374: case i2c_continue:
 23660                           
 23661                           ;i2c_master.c: 373: default:
 23662                           
 23663                           
 23664                           ;i2c_master.c: 375: case i2c_stop:
 23665                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 23666  18D7  31A1  218E         	fcall	i1_do_I2C_DO_NACK_STOP
 23667                           
 23668                           ;i2c_master.c: 377: }
 23669  18D9  0008               	return
 23670  18DA                     i1l8357:	
 23671  18DA  0022               	movlb	2	; select bank2
 23672  18DB  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 23673  18DC  00F0               	movwf	??i1_do_I2C_RX
 23674  18DD  0870               	movf	??i1_do_I2C_RX,w
 23675  18DE  00F0               	movwf	i1returnReset@p
 23676  18DF  300C               	movlw	12
 23677  18E0  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23678  18E1  0086               	movwf	6
 23679  18E2  3001               	movlw	1	; select bank2/3
 23680  18E3  0087               	movwf	7
 23681  18E4  3F41               	moviw [1]fsr1
 23682  18E5  008A               	movwf	10
 23683  18E6  3F40               	moviw [0]fsr1
 23684  18E7  000A               	callw
 23685  18E8  3198               	pagesel	$
 23686                           
 23687                           ; Switch size 1, requested type "space"
 23688                           ; Number of cases is 4, Range of values is 1 to 4
 23689                           ; switch strategies available:
 23690                           ; Name         Instructions Cycles
 23691                           ; simple_byte           13     7 (average)
 23692                           ; direct_byte           17     9 (fixed)
 23693                           ; jumptable            263     9 (fixed)
 23694                           ;	Chosen strategy is simple_byte
 23695  18E9  3A01               	xorlw	1	; case 1
 23696  18EA  1903               	skipnz
 23697  18EB  28D7               	goto	i1l8351
 23698  18EC  3A03               	xorlw	3	; case 2
 23699  18ED  1903               	skipnz
 23700  18EE  28D4               	goto	i1l8347
 23701  18EF  3A01               	xorlw	1	; case 3
 23702  18F0  1903               	skipnz
 23703  18F1  28D4               	goto	i1l8347
 23704  18F2  3A07               	xorlw	7	; case 4
 23705  18F3  1903               	skipnz
 23706  18F4  28D7               	goto	i1l8351
 23707  18F5  28D7               	goto	i1l8351
 23708  18F6  0008               	return
 23709  18F7                     __end_ofi1_do_I2C_RX:	
 23710                           
 23711                           	psect	text124
 23712  1BC1                     __ptext124:	
 23713 ;; *************** function i1_do_I2C_TX *****************
 23714 ;; Defined at:
 23715 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 23716 ;; Parameters:    Size  Location     Type
 23717 ;;		None
 23718 ;; Auto vars:     Size  Location     Type
 23719 ;;		None
 23720 ;; Return value:  Size  Location     Type
 23721 ;;                  1    wreg      enum E8364
 23722 ;; Registers used:
 23723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23724 ;; Tracked objects:
 23725 ;;		On entry : 0/0
 23726 ;;		On exit  : 0/0
 23727 ;;		Unchanged: 0/0
 23728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23730 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23731 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23732 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23733 ;;Total ram usage:        4 bytes
 23734 ;; Hardware stack levels used:    1
 23735 ;; Hardware stack levels required when called:    2
 23736 ;; This function calls:
 23737 ;;		i1_do_I2C_SEND_RESTART_READ
 23738 ;;		i1_do_I2C_SEND_RESTART_WRITE
 23739 ;;		i1_do_I2C_SEND_STOP
 23740 ;;		i1_i2c1_driver_TXData
 23741 ;;		i1_i2c1_driver_isNACK
 23742 ;;		i1_returnReset
 23743 ;;		i1_returnStop
 23744 ;; This function is called by:
 23745 ;; This function uses a non-reentrant model
 23746 ;;
 23747                           
 23748                           
 23749                           ;psect for function i1_do_I2C_TX
 23750  1BC1                     i1_do_I2C_TX:	
 23751  1BC1                     i1l8303:	
 23752                           ;incstack = 0
 23753                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23754                           
 23755                           
 23756                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 23757  1BC1  31A2  22D8  319B   	fcall	i1_i2c1_driver_isNACK
 23758  1BC4  1803               	btfsc	3,0
 23759  1BC5  2BD0               	goto	i1l8321
 23760  1BC6  2BED               	goto	i1l754
 23761  1BC7                     i1l8307:	
 23762                           ;i2c_master.c: 338: {
 23763                           ;i2c_master.c: 339: case i2c_restart_read:
 23764                           
 23765                           ;i2c_master.c: 336: {
 23766                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 23767                           
 23768                           
 23769                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 23770  1BC7  31A1  217A         	fcall	i1_do_I2C_SEND_RESTART_READ
 23771  1BC9  0008               	return
 23772  1BCA                     i1l8311:	
 23773                           ;i2c_master.c: 341: case i2c_restart_write:
 23774                           
 23775                           
 23776                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 23777  1BCA  31A1  217E         	fcall	i1_do_I2C_SEND_RESTART_WRITE
 23778  1BCC  0008               	return
 23779  1BCD                     i1l8315:	
 23780                           ;i2c_master.c: 344: case i2c_continue:
 23781                           
 23782                           ;i2c_master.c: 343: default:
 23783                           
 23784                           
 23785                           ;i2c_master.c: 345: case i2c_stop:
 23786                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 23787  1BCD  31A1  2186         	fcall	i1_do_I2C_SEND_STOP
 23788                           
 23789                           ;i2c_master.c: 347: }
 23790  1BCF  0008               	return
 23791  1BD0                     i1l8321:	
 23792  1BD0  0022               	movlb	2	; select bank2
 23793  1BD1  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 23794  1BD2  00F1               	movwf	??i1_do_I2C_TX
 23795  1BD3  0871               	movf	??i1_do_I2C_TX,w
 23796  1BD4  00F0               	movwf	i1returnReset@p
 23797  1BD5  3012               	movlw	18
 23798  1BD6  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23799  1BD7  0086               	movwf	6
 23800  1BD8  3001               	movlw	1	; select bank2/3
 23801  1BD9  0087               	movwf	7
 23802  1BDA  3F41               	moviw [1]fsr1
 23803  1BDB  008A               	movwf	10
 23804  1BDC  3F40               	moviw [0]fsr1
 23805  1BDD  000A               	callw
 23806  1BDE  319B               	pagesel	$
 23807                           
 23808                           ; Switch size 1, requested type "space"
 23809                           ; Number of cases is 4, Range of values is 1 to 4
 23810                           ; switch strategies available:
 23811                           ; Name         Instructions Cycles
 23812                           ; simple_byte           13     7 (average)
 23813                           ; direct_byte           17     9 (fixed)
 23814                           ; jumptable            263     9 (fixed)
 23815                           ;	Chosen strategy is simple_byte
 23816  1BDF  3A01               	xorlw	1	; case 1
 23817  1BE0  1903               	skipnz
 23818  1BE1  2BCD               	goto	i1l8315
 23819  1BE2  3A03               	xorlw	3	; case 2
 23820  1BE3  1903               	skipnz
 23821  1BE4  2BC7               	goto	i1l8307
 23822  1BE5  3A01               	xorlw	1	; case 3
 23823  1BE6  1903               	skipnz
 23824  1BE7  2BCA               	goto	i1l8311
 23825  1BE8  3A07               	xorlw	7	; case 4
 23826  1BE9  1903               	skipnz
 23827  1BEA  2BCD               	goto	i1l8315
 23828  1BEB  2BCD               	goto	i1l8315
 23829                           
 23830                           ;i2c_master.c: 348: }
 23831  1BEC  0008               	return
 23832  1BED                     i1l754:	
 23833                           
 23834                           ;i2c_master.c: 349: else
 23835                           ;i2c_master.c: 350: {
 23836                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 23837  1BED  0022               	movlb	2	; select bank2
 23838  1BEE  11A0               	bcf	_i2c_status^(0+256),3
 23839                           
 23840                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 23841  1BEF  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 23842  1BF0  00F2               	movwf	??i1_do_I2C_TX+1
 23843  1BF1  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 23844  1BF2  00F1               	movwf	??i1_do_I2C_TX
 23845  1BF3  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 23846  1BF4  1903               	skipnz
 23847  1BF5  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 23848  1BF6  0871               	movf	??i1_do_I2C_TX,w
 23849  1BF7  0084               	movwf	4
 23850  1BF8  0872               	movf	??i1_do_I2C_TX+1,w
 23851  1BF9  0085               	movwf	5
 23852  1BFA  0800               	movf	0,w	;code access
 23853  1BFB  31A1  21A8  319B   	fcall	i1_i2c1_driver_TXData
 23854                           
 23855                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 23856  1BFE  3001               	movlw	1
 23857  1BFF  0022               	movlb	2	; select bank2
 23858  1C00  02A4               	subwf	(_i2c_status^(0+256)+4),f
 23859  1C01  3000               	movlw	0
 23860  1C02  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 23861  1C03  0824               	movf	(_i2c_status^(0+256)+4),w
 23862  1C04  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 23863  1C05  1D03               	btfss	3,2
 23864  1C06  2C09               	goto	i1l8329
 23865  1C07  3006               	movlw	6
 23866  1C08  2C0A               	goto	L38
 23867  1C09                     i1l8329:	
 23868  1C09  3003               	movlw	3
 23869  1C0A                     L38:	
 23870  1C0A  00F3               	movwf	i1_do_I2C_TX$1134
 23871  1C0B  3000               	movlw	0
 23872  1C0C  00F4               	movwf	i1_do_I2C_TX$1134+1
 23873  1C0D  0873               	movf	i1_do_I2C_TX$1134,w
 23874  1C0E  0008               	return
 23875  1C0F                     __end_ofi1_do_I2C_TX:	
 23876                           
 23877                           	psect	text125
 23878  25BD                     __ptext125:	
 23879 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 23880 ;; Defined at:
 23881 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 23882 ;; Parameters:    Size  Location     Type
 23883 ;;		None
 23884 ;; Auto vars:     Size  Location     Type
 23885 ;;		None
 23886 ;; Return value:  Size  Location     Type
 23887 ;;                  1    wreg      enum E8364
 23888 ;; Registers used:
 23889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23890 ;; Tracked objects:
 23891 ;;		On entry : 0/0
 23892 ;;		On exit  : 0/0
 23893 ;;		Unchanged: 0/0
 23894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23899 ;;Total ram usage:        1 bytes
 23900 ;; Hardware stack levels used:    1
 23901 ;; Hardware stack levels required when called:    2
 23902 ;; This function calls:
 23903 ;;		i1_do_I2C_SEND_RESTART
 23904 ;;		i1_do_I2C_SEND_STOP
 23905 ;;		i1_returnReset
 23906 ;;		i1_returnStop
 23907 ;; This function is called by:
 23908 ;; This function uses a non-reentrant model
 23909 ;;
 23910                           
 23911                           
 23912                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 23913  25BD                     i1_do_I2C_DO_ADDRESS_NACK:	
 23914  25BD                     i1l8287:	
 23915                           ;incstack = 0
 23916                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23917                           
 23918                           
 23919                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 23920  25BD  0022               	movlb	2	; select bank2
 23921  25BE  11A0               	bcf	_i2c_status^(0+256),3
 23922                           
 23923                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 23924  25BF  3002               	movlw	2
 23925  25C0  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 23926  25C1  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 23927  25C2  00AB               	movwf	(_i2c_status^(0+256)+11)
 23928                           
 23929                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 23930  25C3  2DCA               	goto	i1l8301
 23931  25C4                     i1l8291:	
 23932                           ;i2c_master.c: 324: {
 23933                           ;i2c_master.c: 325: case i2c_restart_read:
 23934                           
 23935                           
 23936                           ;i2c_master.c: 326: case i2c_restart_write:
 23937                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 23938  25C4  31A1  2182         	fcall	i1_do_I2C_SEND_RESTART
 23939  25C6  0008               	return
 23940  25C7                     i1l8295:	
 23941                           ;i2c_master.c: 328: default:
 23942                           
 23943                           
 23944                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 23945  25C7  31A1  2186         	fcall	i1_do_I2C_SEND_STOP
 23946                           
 23947                           ;i2c_master.c: 330: }
 23948  25C9  0008               	return
 23949  25CA                     i1l8301:	
 23950  25CA  0022               	movlb	2	; select bank2
 23951  25CB  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 23952  25CC  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 23953  25CD  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 23954  25CE  00F0               	movwf	i1returnReset@p
 23955  25CF  3010               	movlw	16
 23956  25D0  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23957  25D1  0086               	movwf	6
 23958  25D2  3001               	movlw	1	; select bank2/3
 23959  25D3  0087               	movwf	7
 23960  25D4  3F41               	moviw [1]fsr1
 23961  25D5  008A               	movwf	10
 23962  25D6  3F40               	moviw [0]fsr1
 23963  25D7  000A               	callw
 23964  25D8  31A5               	pagesel	$
 23965                           
 23966                           ; Switch size 1, requested type "space"
 23967                           ; Number of cases is 2, Range of values is 2 to 3
 23968                           ; switch strategies available:
 23969                           ; Name         Instructions Cycles
 23970                           ; simple_byte            7     4 (average)
 23971                           ; direct_byte           13     9 (fixed)
 23972                           ; jumptable            263     9 (fixed)
 23973                           ;	Chosen strategy is simple_byte
 23974  25D9  3A02               	xorlw	2	; case 2
 23975  25DA  1903               	skipnz
 23976  25DB  2DC4               	goto	i1l8291
 23977  25DC  3A01               	xorlw	1	; case 3
 23978  25DD  1903               	skipnz
 23979  25DE  2DC4               	goto	i1l8291
 23980  25DF  2DC7               	goto	i1l8295
 23981  25E0  0008               	return
 23982  25E1                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 23983                           
 23984                           	psect	text126
 23985  2192                     __ptext126:	
 23986 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 23987 ;; Defined at:
 23988 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 23989 ;; Parameters:    Size  Location     Type
 23990 ;;		None
 23991 ;; Auto vars:     Size  Location     Type
 23992 ;;		None
 23993 ;; Return value:  Size  Location     Type
 23994 ;;                  1    wreg      enum E8364
 23995 ;; Registers used:
 23996 ;;		wreg, status,2, status,0, pclath, cstack
 23997 ;; Tracked objects:
 23998 ;;		On entry : 0/0
 23999 ;;		On exit  : 0/0
 24000 ;;		Unchanged: 0/0
 24001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24006 ;;Total ram usage:        0 bytes
 24007 ;; Hardware stack levels used:    1
 24008 ;; Hardware stack levels required when called:    1
 24009 ;; This function calls:
 24010 ;;		i1_i2c1_driver_sendNACK
 24011 ;; This function is called by:
 24012 ;;		i1_do_I2C_RX
 24013 ;; This function uses a non-reentrant model
 24014 ;;
 24015                           
 24016                           
 24017                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 24018  2192                     i1_do_I2C_DO_NACK_RESTART:	
 24019  2192                     i1l7909:	
 24020                           ;incstack = 0
 24021                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 24022                           
 24023                           
 24024                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 24025  2192  31A1  2176         	fcall	i1_i2c1_driver_sendNACK
 24026                           
 24027                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 24028  2194  3009               	movlw	9
 24029  2195  0008               	return
 24030  2196                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 24031                           
 24032                           	psect	text127
 24033  218E                     __ptext127:	
 24034 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 24035 ;; Defined at:
 24036 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 24037 ;; Parameters:    Size  Location     Type
 24038 ;;		None
 24039 ;; Auto vars:     Size  Location     Type
 24040 ;;		None
 24041 ;; Return value:  Size  Location     Type
 24042 ;;                  1    wreg      enum E8364
 24043 ;; Registers used:
 24044 ;;		wreg, status,2, status,0, pclath, cstack
 24045 ;; Tracked objects:
 24046 ;;		On entry : 0/0
 24047 ;;		On exit  : 0/0
 24048 ;;		Unchanged: 0/0
 24049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24054 ;;Total ram usage:        0 bytes
 24055 ;; Hardware stack levels used:    1
 24056 ;; Hardware stack levels required when called:    1
 24057 ;; This function calls:
 24058 ;;		i1_i2c1_driver_sendNACK
 24059 ;; This function is called by:
 24060 ;;		i1_do_I2C_RX
 24061 ;; This function uses a non-reentrant model
 24062 ;;
 24063                           
 24064                           
 24065                           ;psect for function i1_do_I2C_DO_NACK_STOP
 24066  218E                     i1_do_I2C_DO_NACK_STOP:	
 24067  218E                     i1l7903:	
 24068                           ;incstack = 0
 24069                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 24070                           
 24071                           
 24072                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 24073  218E  31A1  2176         	fcall	i1_i2c1_driver_sendNACK
 24074                           
 24075                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 24076  2190  300A               	movlw	10
 24077  2191  0008               	return
 24078  2192                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 24079                           
 24080                           	psect	text128
 24081  218A                     __ptext128:	
 24082 ;; *************** function i1_do_I2C_DO_ACK *****************
 24083 ;; Defined at:
 24084 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 24085 ;; Parameters:    Size  Location     Type
 24086 ;;		None
 24087 ;; Auto vars:     Size  Location     Type
 24088 ;;		None
 24089 ;; Return value:  Size  Location     Type
 24090 ;;                  1    wreg      enum E8364
 24091 ;; Registers used:
 24092 ;;		wreg, status,2, status,0, pclath, cstack
 24093 ;; Tracked objects:
 24094 ;;		On entry : 0/0
 24095 ;;		On exit  : 0/0
 24096 ;;		Unchanged: 0/0
 24097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24102 ;;Total ram usage:        0 bytes
 24103 ;; Hardware stack levels used:    1
 24104 ;; Hardware stack levels required when called:    1
 24105 ;; This function calls:
 24106 ;;		i1_i2c1_driver_sendACK
 24107 ;; This function is called by:
 24108 ;; This function uses a non-reentrant model
 24109 ;;
 24110                           
 24111                           
 24112                           ;psect for function i1_do_I2C_DO_ACK
 24113  218A                     i1_do_I2C_DO_ACK:	
 24114  218A                     i1l8281:	
 24115                           ;incstack = 0
 24116                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 24117                           
 24118                           
 24119                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 24120  218A  31A1  2172         	fcall	i1_i2c1_driver_sendACK
 24121                           
 24122                           ;i2c_master.c: 302: return I2C_RCEN;
 24123  218C  3005               	movlw	5
 24124  218D  0008               	return
 24125  218E                     __end_ofi1_do_I2C_DO_ACK:	
 24126                           
 24127                           	psect	text129
 24128  21BC                     __ptext129:	
 24129 ;; *************** function i1_do_I2C_RCEN *****************
 24130 ;; Defined at:
 24131 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 24132 ;; Parameters:    Size  Location     Type
 24133 ;;		None
 24134 ;; Auto vars:     Size  Location     Type
 24135 ;;		None
 24136 ;; Return value:  Size  Location     Type
 24137 ;;                  1    wreg      enum E8364
 24138 ;; Registers used:
 24139 ;;		wreg, status,2, status,0, pclath, cstack
 24140 ;; Tracked objects:
 24141 ;;		On entry : 0/0
 24142 ;;		On exit  : 0/0
 24143 ;;		Unchanged: 0/0
 24144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24149 ;;Total ram usage:        0 bytes
 24150 ;; Hardware stack levels used:    1
 24151 ;; Hardware stack levels required when called:    1
 24152 ;; This function calls:
 24153 ;;		i1_i2c1_driver_startRX
 24154 ;; This function is called by:
 24155 ;; This function uses a non-reentrant model
 24156 ;;
 24157                           
 24158                           
 24159                           ;psect for function i1_do_I2C_RCEN
 24160  21BC                     i1_do_I2C_RCEN:	
 24161  21BC                     i1l6377:	
 24162                           ;incstack = 0
 24163                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 24164                           
 24165                           
 24166                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 24167  21BC  0022               	movlb	2	; select bank2
 24168  21BD  11A0               	bcf	_i2c_status^(0+256),3
 24169                           
 24170                           ;i2c_master.c: 295: i2c1_driver_startRX();
 24171  21BE  31A1  214B         	fcall	i1_i2c1_driver_startRX
 24172                           
 24173                           ;i2c_master.c: 296: return I2C_RX;
 24174  21C0  3004               	movlw	4
 24175  21C1  0008               	return
 24176  21C2                     __end_ofi1_do_I2C_RCEN:	
 24177                           
 24178                           	psect	text130
 24179  21ED                     __ptext130:	
 24180 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 24181 ;; Defined at:
 24182 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 24183 ;; Parameters:    Size  Location     Type
 24184 ;;		None
 24185 ;; Auto vars:     Size  Location     Type
 24186 ;;		None
 24187 ;; Return value:  Size  Location     Type
 24188 ;;                  1    wreg      enum E8364
 24189 ;; Registers used:
 24190 ;;		wreg, status,2, status,0, pclath, cstack
 24191 ;; Tracked objects:
 24192 ;;		On entry : 0/0
 24193 ;;		On exit  : 0/0
 24194 ;;		Unchanged: 0/0
 24195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24200 ;;Total ram usage:        0 bytes
 24201 ;; Hardware stack levels used:    1
 24202 ;; Hardware stack levels required when called:    1
 24203 ;; This function calls:
 24204 ;;		i1_i2c1_driver_TXData
 24205 ;; This function is called by:
 24206 ;; This function uses a non-reentrant model
 24207 ;;
 24208                           
 24209                           
 24210                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 24211  21ED                     i1_do_I2C_SEND_ADR_WRITE:	
 24212  21ED                     i1l8273:	
 24213                           ;incstack = 0
 24214                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 24215                           
 24216                           
 24217                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 24218  21ED  0022               	movlb	2	; select bank2
 24219  21EE  15A0               	bsf	_i2c_status^(0+256),3
 24220                           
 24221                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 24222  21EF  3521               	lslf	(_i2c_status^(0+256)+1),w
 24223  21F0  31A1  21A8         	fcall	i1_i2c1_driver_TXData
 24224                           
 24225                           ;i2c_master.c: 289: return I2C_TX;
 24226  21F2  3003               	movlw	3
 24227  21F3  0008               	return
 24228  21F4                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 24229                           
 24230                           	psect	text131
 24231  21F4                     __ptext131:	
 24232 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 24233 ;; Defined at:
 24234 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 24235 ;; Parameters:    Size  Location     Type
 24236 ;;		None
 24237 ;; Auto vars:     Size  Location     Type
 24238 ;;		None
 24239 ;; Return value:  Size  Location     Type
 24240 ;;                  1    wreg      enum E8364
 24241 ;; Registers used:
 24242 ;;		wreg, status,2, status,0, pclath, cstack
 24243 ;; Tracked objects:
 24244 ;;		On entry : 0/0
 24245 ;;		On exit  : 0/0
 24246 ;;		Unchanged: 0/0
 24247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24252 ;;Total ram usage:        0 bytes
 24253 ;; Hardware stack levels used:    1
 24254 ;; Hardware stack levels required when called:    1
 24255 ;; This function calls:
 24256 ;;		i1_i2c1_driver_TXData
 24257 ;; This function is called by:
 24258 ;; This function uses a non-reentrant model
 24259 ;;
 24260                           
 24261                           
 24262                           ;psect for function i1_do_I2C_SEND_ADR_READ
 24263  21F4                     i1_do_I2C_SEND_ADR_READ:	
 24264  21F4                     i1l8265:	
 24265                           ;incstack = 0
 24266                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 24267                           
 24268                           
 24269                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 24270  21F4  0022               	movlb	2	; select bank2
 24271  21F5  15A0               	bsf	_i2c_status^(0+256),3
 24272                           
 24273                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 24274  21F6  1403               	setc
 24275  21F7  0D21               	rlf	(_i2c_status^(0+256)+1),w
 24276  21F8  31A1  21A8         	fcall	i1_i2c1_driver_TXData
 24277                           
 24278                           ;i2c_master.c: 282: return I2C_RCEN;
 24279  21FA  3005               	movlw	5
 24280  21FB  0008               	return
 24281  21FC                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 24282                           
 24283                           	psect	text132
 24284  2186                     __ptext132:	
 24285 ;; *************** function i1_do_I2C_SEND_STOP *****************
 24286 ;; Defined at:
 24287 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 24288 ;; Parameters:    Size  Location     Type
 24289 ;;		None
 24290 ;; Auto vars:     Size  Location     Type
 24291 ;;		None
 24292 ;; Return value:  Size  Location     Type
 24293 ;;                  1    wreg      enum E8364
 24294 ;; Registers used:
 24295 ;;		wreg, status,2, status,0, pclath, cstack
 24296 ;; Tracked objects:
 24297 ;;		On entry : 0/0
 24298 ;;		On exit  : 0/0
 24299 ;;		Unchanged: 0/0
 24300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24305 ;;Total ram usage:        0 bytes
 24306 ;; Hardware stack levels used:    1
 24307 ;; Hardware stack levels required when called:    1
 24308 ;; This function calls:
 24309 ;;		i1_i2c1_driver_stop
 24310 ;; This function is called by:
 24311 ;;		i1_do_I2C_DO_ADDRESS_NACK
 24312 ;;		i1_do_I2C_TX
 24313 ;;		i1_do_I2C_TX_EMPTY
 24314 ;; This function uses a non-reentrant model
 24315 ;;
 24316                           
 24317                           
 24318                           ;psect for function i1_do_I2C_SEND_STOP
 24319  2186                     i1_do_I2C_SEND_STOP:	
 24320  2186                     i1l7897:	
 24321                           ;incstack = 0
 24322                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 24323                           
 24324                           
 24325                           ;i2c_master.c: 274: i2c1_driver_stop();
 24326  2186  31A1  2148         	fcall	i1_i2c1_driver_stop
 24327                           
 24328                           ;i2c_master.c: 275: return I2C_IDLE;
 24329  2188  3000               	movlw	0
 24330  2189  0008               	return
 24331  218A                     __end_ofi1_do_I2C_SEND_STOP:	
 24332                           
 24333                           	psect	text133
 24334  2182                     __ptext133:	
 24335 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 24336 ;; Defined at:
 24337 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 24338 ;; Parameters:    Size  Location     Type
 24339 ;;		None
 24340 ;; Auto vars:     Size  Location     Type
 24341 ;;		None
 24342 ;; Return value:  Size  Location     Type
 24343 ;;                  1    wreg      enum E8364
 24344 ;; Registers used:
 24345 ;;		wreg, status,2, status,0, pclath, cstack
 24346 ;; Tracked objects:
 24347 ;;		On entry : 0/0
 24348 ;;		On exit  : 0/0
 24349 ;;		Unchanged: 0/0
 24350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24355 ;;Total ram usage:        0 bytes
 24356 ;; Hardware stack levels used:    1
 24357 ;; Hardware stack levels required when called:    1
 24358 ;; This function calls:
 24359 ;;		i1_i2c1_driver_restart
 24360 ;; This function is called by:
 24361 ;;		i1_do_I2C_DO_ADDRESS_NACK
 24362 ;;		i1_do_I2C_TX_EMPTY
 24363 ;; This function uses a non-reentrant model
 24364 ;;
 24365                           
 24366                           
 24367                           ;psect for function i1_do_I2C_SEND_RESTART
 24368  2182                     i1_do_I2C_SEND_RESTART:	
 24369  2182                     i1l7891:	
 24370                           ;incstack = 0
 24371                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 24372                           
 24373                           
 24374                           ;i2c_master.c: 268: i2c1_driver_restart();
 24375  2182  31A1  2145         	fcall	i1_i2c1_driver_restart
 24376                           
 24377                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 24378  2184  3001               	movlw	1
 24379  2185  0008               	return
 24380  2186                     __end_ofi1_do_I2C_SEND_RESTART:	
 24381                           
 24382                           	psect	text134
 24383  217E                     __ptext134:	
 24384 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 24385 ;; Defined at:
 24386 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 24387 ;; Parameters:    Size  Location     Type
 24388 ;;		None
 24389 ;; Auto vars:     Size  Location     Type
 24390 ;;		None
 24391 ;; Return value:  Size  Location     Type
 24392 ;;                  1    wreg      enum E8364
 24393 ;; Registers used:
 24394 ;;		wreg, status,2, status,0, pclath, cstack
 24395 ;; Tracked objects:
 24396 ;;		On entry : 0/0
 24397 ;;		On exit  : 0/0
 24398 ;;		Unchanged: 0/0
 24399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24404 ;;Total ram usage:        0 bytes
 24405 ;; Hardware stack levels used:    1
 24406 ;; Hardware stack levels required when called:    1
 24407 ;; This function calls:
 24408 ;;		i1_i2c1_driver_restart
 24409 ;; This function is called by:
 24410 ;;		i1_do_I2C_TX
 24411 ;; This function uses a non-reentrant model
 24412 ;;
 24413                           
 24414                           
 24415                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 24416  217E                     i1_do_I2C_SEND_RESTART_WRITE:	
 24417  217E                     i1l7885:	
 24418                           ;incstack = 0
 24419                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 24420                           
 24421                           
 24422                           ;i2c_master.c: 262: i2c1_driver_restart();
 24423  217E  31A1  2145         	fcall	i1_i2c1_driver_restart
 24424                           
 24425                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 24426  2180  3002               	movlw	2
 24427  2181  0008               	return
 24428  2182                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 24429                           
 24430                           	psect	text135
 24431  217A                     __ptext135:	
 24432 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 24433 ;; Defined at:
 24434 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 24435 ;; Parameters:    Size  Location     Type
 24436 ;;		None
 24437 ;; Auto vars:     Size  Location     Type
 24438 ;;		None
 24439 ;; Return value:  Size  Location     Type
 24440 ;;                  1    wreg      enum E8364
 24441 ;; Registers used:
 24442 ;;		wreg, status,2, status,0, pclath, cstack
 24443 ;; Tracked objects:
 24444 ;;		On entry : 0/0
 24445 ;;		On exit  : 0/0
 24446 ;;		Unchanged: 0/0
 24447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24452 ;;Total ram usage:        0 bytes
 24453 ;; Hardware stack levels used:    1
 24454 ;; Hardware stack levels required when called:    1
 24455 ;; This function calls:
 24456 ;;		i1_i2c1_driver_restart
 24457 ;; This function is called by:
 24458 ;;		i1_do_I2C_TX
 24459 ;; This function uses a non-reentrant model
 24460 ;;
 24461                           
 24462                           
 24463                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 24464  217A                     i1_do_I2C_SEND_RESTART_READ:	
 24465  217A                     i1l7879:	
 24466                           ;incstack = 0
 24467                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 24468                           
 24469                           
 24470                           ;i2c_master.c: 256: i2c1_driver_restart();
 24471  217A  31A1  2145         	fcall	i1_i2c1_driver_restart
 24472                           
 24473                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 24474  217C  3001               	movlw	1
 24475  217D  0008               	return
 24476  217E                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 24477                           
 24478                           	psect	text136
 24479  21AD                     __ptext136:	
 24480 ;; *************** function i1_do_I2C_IDLE *****************
 24481 ;; Defined at:
 24482 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 24483 ;; Parameters:    Size  Location     Type
 24484 ;;		None
 24485 ;; Auto vars:     Size  Location     Type
 24486 ;;		None
 24487 ;; Return value:  Size  Location     Type
 24488 ;;                  1    wreg      enum E8364
 24489 ;; Registers used:
 24490 ;;		wreg, status,2
 24491 ;; Tracked objects:
 24492 ;;		On entry : 0/0
 24493 ;;		On exit  : 0/0
 24494 ;;		Unchanged: 0/0
 24495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24500 ;;Total ram usage:        0 bytes
 24501 ;; Hardware stack levels used:    1
 24502 ;; This function calls:
 24503 ;;		Nothing
 24504 ;; This function is called by:
 24505 ;; This function uses a non-reentrant model
 24506 ;;
 24507                           
 24508                           
 24509                           ;psect for function i1_do_I2C_IDLE
 24510  21AD                     i1_do_I2C_IDLE:	
 24511  21AD                     i1l6353:	
 24512                           ;incstack = 0
 24513                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 24514                           
 24515                           
 24516                           ;i2c_master.c: 249: i2c_status.busy = 0;
 24517  21AD  0022               	movlb	2	; select bank2
 24518  21AE  1020               	bcf	_i2c_status^(0+256),0
 24519                           
 24520                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 24521  21AF  01AB               	clrf	(_i2c_status^(0+256)+11)
 24522                           
 24523                           ;i2c_master.c: 251: return I2C_RESET;
 24524  21B0  300E               	movlw	14
 24525  21B1  0008               	return
 24526  21B2                     __end_ofi1_do_I2C_IDLE:	
 24527                           
 24528                           	psect	text137
 24529  21E6                     __ptext137:	
 24530 ;; *************** function i1_do_I2C_RESET *****************
 24531 ;; Defined at:
 24532 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 24533 ;; Parameters:    Size  Location     Type
 24534 ;;		None
 24535 ;; Auto vars:     Size  Location     Type
 24536 ;;		None
 24537 ;; Return value:  Size  Location     Type
 24538 ;;                  1    wreg      enum E8364
 24539 ;; Registers used:
 24540 ;;		wreg, status,2, status,0, pclath, cstack
 24541 ;; Tracked objects:
 24542 ;;		On entry : 0/0
 24543 ;;		On exit  : 0/0
 24544 ;;		Unchanged: 0/0
 24545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24550 ;;Total ram usage:        0 bytes
 24551 ;; Hardware stack levels used:    1
 24552 ;; Hardware stack levels required when called:    1
 24553 ;; This function calls:
 24554 ;;		i1_i2c1_driver_resetBus
 24555 ;; This function is called by:
 24556 ;; This function uses a non-reentrant model
 24557 ;;
 24558                           
 24559                           
 24560                           ;psect for function i1_do_I2C_RESET
 24561  21E6                     i1_do_I2C_RESET:	
 24562  21E6                     i1l6343:	
 24563                           ;incstack = 0
 24564                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 24565                           
 24566                           
 24567                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 24568  21E6  31A1  2137         	fcall	i1_i2c1_driver_resetBus
 24569                           
 24570                           ;i2c_master.c: 242: i2c_status.busy = 0;
 24571  21E8  0022               	movlb	2	; select bank2
 24572  21E9  1020               	bcf	_i2c_status^(0+256),0
 24573                           
 24574                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 24575  21EA  01AB               	clrf	(_i2c_status^(0+256)+11)
 24576                           
 24577                           ;i2c_master.c: 244: return I2C_RESET;
 24578  21EB  300E               	movlw	14
 24579  21EC  0008               	return
 24580  21ED                     __end_ofi1_do_I2C_RESET:	
 24581                           
 24582                           	psect	text138
 24583  26EC                     __ptext138:	
 24584 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 24585 ;; Defined at:
 24586 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 24587 ;; Parameters:    Size  Location     Type
 24588 ;;		None
 24589 ;; Auto vars:     Size  Location     Type
 24590 ;;		None
 24591 ;; Return value:  Size  Location     Type
 24592 ;;                  1    wreg      enum E8364
 24593 ;; Registers used:
 24594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24595 ;; Tracked objects:
 24596 ;;		On entry : 0/0
 24597 ;;		On exit  : 0/0
 24598 ;;		Unchanged: 0/0
 24599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24604 ;;Total ram usage:        1 bytes
 24605 ;; Hardware stack levels used:    1
 24606 ;; Hardware stack levels required when called:    2
 24607 ;; This function calls:
 24608 ;;		i1_do_I2C_SEND_RESTART
 24609 ;;		i1_do_I2C_SEND_STOP
 24610 ;;		i1_mssp1_setIRQ
 24611 ;;		i1_returnReset
 24612 ;;		i1_returnStop
 24613 ;; This function is called by:
 24614 ;; This function uses a non-reentrant model
 24615 ;;
 24616                           
 24617                           
 24618                           ;psect for function i1_do_I2C_TX_EMPTY
 24619  26EC                     i1_do_I2C_TX_EMPTY:	
 24620  26EC                     i1l8359:	
 24621                           ;incstack = 0
 24622                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24623                           
 24624                           
 24625                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 24626  26EC  0022               	movlb	2	; select bank2
 24627  26ED  1520               	bsf	_i2c_status^(0+256),2
 24628                           
 24629                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 24630  26EE  2EF9               	goto	i1l8377
 24631  26EF                     i1l8361:	
 24632                           ;i2c_master.c: 386: {
 24633                           ;i2c_master.c: 387: case i2c_restart_read:
 24634                           
 24635                           
 24636                           ;i2c_master.c: 388: case i2c_restart_write:
 24637                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 24638  26EF  31A1  2182         	fcall	i1_do_I2C_SEND_RESTART
 24639  26F1  0008               	return
 24640  26F2                     i1l8365:	
 24641                           ;i2c_master.c: 390: case i2c_continue:
 24642                           
 24643                           
 24644                           ;i2c_master.c: 391: mssp1_setIRQ();
 24645  26F2  31A1  2151         	fcall	i1_mssp1_setIRQ
 24646                           
 24647                           ;i2c_master.c: 392: return I2C_TX;
 24648  26F4  3003               	movlw	3
 24649  26F5  0008               	return
 24650  26F6                     i1l8371:	
 24651                           ;i2c_master.c: 394: case i2c_stop:
 24652                           
 24653                           ;i2c_master.c: 393: default:
 24654                           
 24655                           
 24656                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 24657  26F6  31A1  2186         	fcall	i1_do_I2C_SEND_STOP
 24658                           
 24659                           ;i2c_master.c: 396: }
 24660  26F8  0008               	return
 24661  26F9                     i1l8377:	
 24662  26F9  0022               	movlb	2	; select bank2
 24663  26FA  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 24664  26FB  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 24665  26FC  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 24666  26FD  00F0               	movwf	i1returnReset@p
 24667  26FE  300C               	movlw	12
 24668  26FF  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 24669  2700  0086               	movwf	6
 24670  2701  3001               	movlw	1	; select bank2/3
 24671  2702  0087               	movwf	7
 24672  2703  3F41               	moviw [1]fsr1
 24673  2704  008A               	movwf	10
 24674  2705  3F40               	moviw [0]fsr1
 24675  2706  000A               	callw
 24676  2707  31A6               	pagesel	$
 24677                           
 24678                           ; Switch size 1, requested type "space"
 24679                           ; Number of cases is 4, Range of values is 1 to 4
 24680                           ; switch strategies available:
 24681                           ; Name         Instructions Cycles
 24682                           ; simple_byte           13     7 (average)
 24683                           ; direct_byte           17     9 (fixed)
 24684                           ; jumptable            263     9 (fixed)
 24685                           ;	Chosen strategy is simple_byte
 24686  2708  3A01               	xorlw	1	; case 1
 24687  2709  1903               	skipnz
 24688  270A  2EF6               	goto	i1l8371
 24689  270B  3A03               	xorlw	3	; case 2
 24690  270C  1903               	skipnz
 24691  270D  2EEF               	goto	i1l8361
 24692  270E  3A01               	xorlw	1	; case 3
 24693  270F  1903               	skipnz
 24694  2710  2EEF               	goto	i1l8361
 24695  2711  3A07               	xorlw	7	; case 4
 24696  2712  1903               	skipnz
 24697  2713  2EF2               	goto	i1l8365
 24698  2714  2EF6               	goto	i1l8371
 24699  2715  0008               	return
 24700  2716                     __end_ofi1_do_I2C_TX_EMPTY:	
 24701                           
 24702                           	psect	text139
 24703  2151                     __ptext139:	
 24704 ;; *************** function i1_mssp1_setIRQ *****************
 24705 ;; Defined at:
 24706 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 24707 ;; Parameters:    Size  Location     Type
 24708 ;;		None
 24709 ;; Auto vars:     Size  Location     Type
 24710 ;;		None
 24711 ;; Return value:  Size  Location     Type
 24712 ;;                  1    wreg      void 
 24713 ;; Registers used:
 24714 ;;		None
 24715 ;; Tracked objects:
 24716 ;;		On entry : 0/0
 24717 ;;		On exit  : 0/0
 24718 ;;		Unchanged: 0/0
 24719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24724 ;;Total ram usage:        0 bytes
 24725 ;; Hardware stack levels used:    1
 24726 ;; This function calls:
 24727 ;;		Nothing
 24728 ;; This function is called by:
 24729 ;;		i1_do_I2C_TX_EMPTY
 24730 ;; This function uses a non-reentrant model
 24731 ;;
 24732                           
 24733                           
 24734                           ;psect for function i1_mssp1_setIRQ
 24735  2151                     i1_mssp1_setIRQ:	
 24736                           
 24737                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 24738                           
 24739                           ;incstack = 0
 24740                           ; Regs used in i1_mssp1_setIRQ: []
 24741  2151  0020               	movlb	0	; select bank0
 24742  2152  1591               	bsf	17,3	;volatile
 24743  2153  0008               	return
 24744  2154                     __end_ofi1_mssp1_setIRQ:	
 24745                           
 24746                           	psect	text140
 24747  22D8                     __ptext140:	
 24748 ;; *************** function i1_i2c1_driver_isNACK *****************
 24749 ;; Defined at:
 24750 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 24751 ;; Parameters:    Size  Location     Type
 24752 ;;		None
 24753 ;; Auto vars:     Size  Location     Type
 24754 ;;		None
 24755 ;; Return value:  Size  Location     Type
 24756 ;;		None               void
 24757 ;; Registers used:
 24758 ;;		wreg, status,2, status,0
 24759 ;; Tracked objects:
 24760 ;;		On entry : 0/0
 24761 ;;		On exit  : 0/0
 24762 ;;		Unchanged: 0/0
 24763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24768 ;;Total ram usage:        1 bytes
 24769 ;; Hardware stack levels used:    1
 24770 ;; This function calls:
 24771 ;;		Nothing
 24772 ;; This function is called by:
 24773 ;;		i1_do_I2C_TX
 24774 ;;		i1_i2c_ISR
 24775 ;; This function uses a non-reentrant model
 24776 ;;
 24777                           
 24778                           
 24779                           ;psect for function i1_i2c1_driver_isNACK
 24780  22D8                     i1_i2c1_driver_isNACK:	
 24781                           
 24782                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 24783                           
 24784                           ;incstack = 0
 24785                           ; Regs used in i1_i2c1_driver_isNACK: [wreg+status,2+status,0]
 24786  22D8  0024               	movlb	4	; select bank4
 24787  22D9  0816               	movf	22,w	;volatile
 24788  22DA  39BF               	andlw	-65
 24789  22DB  3840               	iorlw	64
 24790  22DC  0096               	movwf	22	;volatile
 24791  22DD  0E16               	swapf	22,w	;volatile
 24792  22DE  0C89               	rrf	9,f
 24793  22DF  0C89               	rrf	9,f
 24794  22E0  3901               	andlw	1
 24795  22E1  00F0               	movwf	??i1_i2c1_driver_isNACK
 24796  22E2  0C70               	rrf	??i1_i2c1_driver_isNACK,w
 24797  22E3  0008               	return
 24798  22E4                     __end_ofi1_i2c1_driver_isNACK:	
 24799                           
 24800                           	psect	text141
 24801  21A8                     __ptext141:	
 24802 ;; *************** function i1_i2c1_driver_TXData *****************
 24803 ;; Defined at:
 24804 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 24805 ;; Parameters:    Size  Location     Type
 24806 ;;  d               1    wreg     unsigned char 
 24807 ;; Auto vars:     Size  Location     Type
 24808 ;;  d               1    0[COMMON] unsigned char 
 24809 ;; Return value:  Size  Location     Type
 24810 ;;                  1    wreg      void 
 24811 ;; Registers used:
 24812 ;;		wreg
 24813 ;; Tracked objects:
 24814 ;;		On entry : 0/0
 24815 ;;		On exit  : 0/0
 24816 ;;		Unchanged: 0/0
 24817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24822 ;;Total ram usage:        1 bytes
 24823 ;; Hardware stack levels used:    1
 24824 ;; This function calls:
 24825 ;;		Nothing
 24826 ;; This function is called by:
 24827 ;;		i1_do_I2C_SEND_ADR_READ
 24828 ;;		i1_do_I2C_SEND_ADR_WRITE
 24829 ;;		i1_do_I2C_TX
 24830 ;; This function uses a non-reentrant model
 24831 ;;
 24832                           
 24833                           
 24834                           ;psect for function i1_i2c1_driver_TXData
 24835  21A8                     i1_i2c1_driver_TXData:	
 24836                           
 24837                           ;incstack = 0
 24838                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 24839                           ;i1i2c1_driver_TXData@d stored from wreg
 24840  21A8  00F0               	movwf	i1i2c1_driver_TXData@d
 24841                           
 24842                           ;i2c1_driver.c: 188: SSP1BUF = d;
 24843  21A9  0870               	movf	i1i2c1_driver_TXData@d,w
 24844  21AA  0024               	movlb	4	; select bank4
 24845  21AB  0091               	movwf	17	;volatile
 24846  21AC  0008               	return
 24847  21AD                     __end_ofi1_i2c1_driver_TXData:	
 24848                           
 24849                           	psect	text142
 24850  214E                     __ptext142:	
 24851 ;; *************** function i1_i2c1_driver_getRXData *****************
 24852 ;; Defined at:
 24853 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 24854 ;; Parameters:    Size  Location     Type
 24855 ;;		None
 24856 ;; Auto vars:     Size  Location     Type
 24857 ;;		None
 24858 ;; Return value:  Size  Location     Type
 24859 ;;                  1    wreg      unsigned char 
 24860 ;; Registers used:
 24861 ;;		wreg
 24862 ;; Tracked objects:
 24863 ;;		On entry : 0/0
 24864 ;;		On exit  : 0/0
 24865 ;;		Unchanged: 0/0
 24866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24871 ;;Total ram usage:        0 bytes
 24872 ;; Hardware stack levels used:    1
 24873 ;; This function calls:
 24874 ;;		Nothing
 24875 ;; This function is called by:
 24876 ;;		i1_do_I2C_RX
 24877 ;; This function uses a non-reentrant model
 24878 ;;
 24879                           
 24880                           
 24881                           ;psect for function i1_i2c1_driver_getRXData
 24882  214E                     i1_i2c1_driver_getRXData:	
 24883                           
 24884                           ;i2c1_driver.c: 173: return SSP1BUF;
 24885                           
 24886                           ;incstack = 0
 24887                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 24888  214E  0024               	movlb	4	; select bank4
 24889  214F  0811               	movf	17,w	;volatile
 24890  2150  0008               	return
 24891  2151                     __end_ofi1_i2c1_driver_getRXData:	
 24892                           
 24893                           	psect	text143
 24894  2176                     __ptext143:	
 24895 ;; *************** function i1_i2c1_driver_sendNACK *****************
 24896 ;; Defined at:
 24897 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 24898 ;; Parameters:    Size  Location     Type
 24899 ;;		None
 24900 ;; Auto vars:     Size  Location     Type
 24901 ;;		None
 24902 ;; Return value:  Size  Location     Type
 24903 ;;                  1    wreg      void 
 24904 ;; Registers used:
 24905 ;;		None
 24906 ;; Tracked objects:
 24907 ;;		On entry : 0/0
 24908 ;;		On exit  : 0/0
 24909 ;;		Unchanged: 0/0
 24910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24915 ;;Total ram usage:        0 bytes
 24916 ;; Hardware stack levels used:    1
 24917 ;; This function calls:
 24918 ;;		Nothing
 24919 ;; This function is called by:
 24920 ;;		i1_do_I2C_DO_NACK_STOP
 24921 ;;		i1_do_I2C_DO_NACK_RESTART
 24922 ;; This function uses a non-reentrant model
 24923 ;;
 24924                           
 24925                           
 24926                           ;psect for function i1_i2c1_driver_sendNACK
 24927  2176                     i1_i2c1_driver_sendNACK:	
 24928                           
 24929                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 24930                           
 24931                           ;incstack = 0
 24932                           ; Regs used in i1_i2c1_driver_sendNACK: []
 24933  2176  0024               	movlb	4	; select bank4
 24934  2177  1696               	bsf	22,5	;volatile
 24935                           
 24936                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 24937  2178  1616               	bsf	22,4	;volatile
 24938  2179  0008               	return
 24939  217A                     __end_ofi1_i2c1_driver_sendNACK:	
 24940                           
 24941                           	psect	text144
 24942  2137                     __ptext144:	
 24943 ;; *************** function i1_i2c1_driver_resetBus *****************
 24944 ;; Defined at:
 24945 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 24946 ;; Parameters:    Size  Location     Type
 24947 ;;		None
 24948 ;; Auto vars:     Size  Location     Type
 24949 ;;		None
 24950 ;; Return value:  Size  Location     Type
 24951 ;;                  1    wreg      void 
 24952 ;; Registers used:
 24953 ;;		None
 24954 ;; Tracked objects:
 24955 ;;		On entry : 0/0
 24956 ;;		On exit  : 0/0
 24957 ;;		Unchanged: 0/0
 24958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24963 ;;Total ram usage:        0 bytes
 24964 ;; Hardware stack levels used:    1
 24965 ;; This function calls:
 24966 ;;		Nothing
 24967 ;; This function is called by:
 24968 ;;		i1_do_I2C_RESET
 24969 ;; This function uses a non-reentrant model
 24970 ;;
 24971                           
 24972                           
 24973                           ;psect for function i1_i2c1_driver_resetBus
 24974  2137                     i1_i2c1_driver_resetBus:	
 24975                           
 24976                           ;incstack = 0
 24977                           ; Regs used in i1_i2c1_driver_resetBus: []
 24978  2137  0008               	return
 24979  2138                     __end_ofi1_i2c1_driver_resetBus:	
 24980                           
 24981                           	psect	text145
 24982  214B                     __ptext145:	
 24983 ;; *************** function i1_i2c1_driver_startRX *****************
 24984 ;; Defined at:
 24985 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 24986 ;; Parameters:    Size  Location     Type
 24987 ;;		None
 24988 ;; Auto vars:     Size  Location     Type
 24989 ;;		None
 24990 ;; Return value:  Size  Location     Type
 24991 ;;                  1    wreg      void 
 24992 ;; Registers used:
 24993 ;;		None
 24994 ;; Tracked objects:
 24995 ;;		On entry : 0/0
 24996 ;;		On exit  : 0/0
 24997 ;;		Unchanged: 0/0
 24998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25003 ;;Total ram usage:        0 bytes
 25004 ;; Hardware stack levels used:    1
 25005 ;; This function calls:
 25006 ;;		Nothing
 25007 ;; This function is called by:
 25008 ;;		i1_do_I2C_RCEN
 25009 ;; This function uses a non-reentrant model
 25010 ;;
 25011                           
 25012                           
 25013                           ;psect for function i1_i2c1_driver_startRX
 25014  214B                     i1_i2c1_driver_startRX:	
 25015                           
 25016                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 25017                           
 25018                           ;incstack = 0
 25019                           ; Regs used in i1_i2c1_driver_startRX: []
 25020  214B  0024               	movlb	4	; select bank4
 25021  214C  1596               	bsf	22,3	;volatile
 25022  214D  0008               	return
 25023  214E                     __end_ofi1_i2c1_driver_startRX:	
 25024                           
 25025                           	psect	text146
 25026  07FE                     __ptext146:	
 25027 ;; *************** function i1_returnReset *****************
 25028 ;; Defined at:
 25029 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 25030 ;; Parameters:    Size  Location     Type
 25031 ;;  p               1    0[COMMON] PTR void 
 25032 ;;		 -> NULL(0), 
 25033 ;; Auto vars:     Size  Location     Type
 25034 ;;		None
 25035 ;; Return value:  Size  Location     Type
 25036 ;;                  1    wreg      enum E8198
 25037 ;; Registers used:
 25038 ;;		wreg
 25039 ;; Tracked objects:
 25040 ;;		On entry : 0/0
 25041 ;;		On exit  : 0/0
 25042 ;;		Unchanged: 0/0
 25043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25044 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25048 ;;Total ram usage:        1 bytes
 25049 ;; Hardware stack levels used:    1
 25050 ;; This function calls:
 25051 ;;		Nothing
 25052 ;; This function is called by:
 25053 ;; This function uses a non-reentrant model
 25054 ;;
 25055                           
 25056                           
 25057                           ;psect for function i1_returnReset
 25058  07FE                     i1_returnReset:	
 25059  07FE                     i1l7919:	
 25060                           ;incstack = 0
 25061                           ; Regs used in i1_returnReset: [wreg]
 25062                           
 25063                           
 25064                           ;i2c_master.c: 450: return i2c_reset_link;
 25065  07FE  3005               	movlw	5
 25066  07FF  0008               	return
 25067  0800                     __end_ofi1_returnReset:	
 25068                           
 25069                           	psect	text147
 25070  0002                     __ptext147:	
 25071 ;; *************** function i1_returnStop *****************
 25072 ;; Defined at:
 25073 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 25074 ;; Parameters:    Size  Location     Type
 25075 ;;  p               1    0[COMMON] PTR void 
 25076 ;;		 -> NULL(0), 
 25077 ;; Auto vars:     Size  Location     Type
 25078 ;;		None
 25079 ;; Return value:  Size  Location     Type
 25080 ;;                  1    wreg      enum E8198
 25081 ;; Registers used:
 25082 ;;		wreg
 25083 ;; Tracked objects:
 25084 ;;		On entry : 0/0
 25085 ;;		On exit  : 0/0
 25086 ;;		Unchanged: 0/0
 25087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25088 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25091 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25092 ;;Total ram usage:        1 bytes
 25093 ;; Hardware stack levels used:    1
 25094 ;; This function calls:
 25095 ;;		Nothing
 25096 ;; This function is called by:
 25097 ;; This function uses a non-reentrant model
 25098 ;;
 25099                           
 25100                           
 25101                           ;psect for function i1_returnStop
 25102  0002                     i1_returnStop:	
 25103  0002                     i1l7915:	
 25104                           ;incstack = 0
 25105                           ; Regs used in i1_returnStop: [wreg]
 25106                           
 25107                           
 25108                           ;i2c_master.c: 445: return i2c_stop;
 25109  0002  3001               	movlw	1
 25110  0003  0008               	return
 25111  0004                     __end_ofi1_returnStop:	
 25112                           
 25113                           	psect	text148
 25114  2148                     __ptext148:	
 25115 ;; *************** function i1_i2c1_driver_stop *****************
 25116 ;; Defined at:
 25117 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 25118 ;; Parameters:    Size  Location     Type
 25119 ;;		None
 25120 ;; Auto vars:     Size  Location     Type
 25121 ;;		None
 25122 ;; Return value:  Size  Location     Type
 25123 ;;                  1    wreg      void 
 25124 ;; Registers used:
 25125 ;;		None
 25126 ;; Tracked objects:
 25127 ;;		On entry : 0/0
 25128 ;;		On exit  : 0/0
 25129 ;;		Unchanged: 0/0
 25130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25135 ;;Total ram usage:        0 bytes
 25136 ;; Hardware stack levels used:    1
 25137 ;; This function calls:
 25138 ;;		Nothing
 25139 ;; This function is called by:
 25140 ;;		i1_do_I2C_SEND_STOP
 25141 ;; This function uses a non-reentrant model
 25142 ;;
 25143                           
 25144                           
 25145                           ;psect for function i1_i2c1_driver_stop
 25146  2148                     i1_i2c1_driver_stop:	
 25147                           
 25148                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 25149                           
 25150                           ;incstack = 0
 25151                           ; Regs used in i1_i2c1_driver_stop: []
 25152  2148  0024               	movlb	4	; select bank4
 25153  2149  1516               	bsf	22,2	;volatile
 25154  214A  0008               	return
 25155  214B                     __end_ofi1_i2c1_driver_stop:	
 25156                           
 25157                           	psect	text149
 25158  2145                     __ptext149:	
 25159 ;; *************** function i1_i2c1_driver_restart *****************
 25160 ;; Defined at:
 25161 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 25162 ;; Parameters:    Size  Location     Type
 25163 ;;		None
 25164 ;; Auto vars:     Size  Location     Type
 25165 ;;		None
 25166 ;; Return value:  Size  Location     Type
 25167 ;;                  1    wreg      void 
 25168 ;; Registers used:
 25169 ;;		None
 25170 ;; Tracked objects:
 25171 ;;		On entry : 0/0
 25172 ;;		On exit  : 0/0
 25173 ;;		Unchanged: 0/0
 25174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25179 ;;Total ram usage:        0 bytes
 25180 ;; Hardware stack levels used:    1
 25181 ;; This function calls:
 25182 ;;		Nothing
 25183 ;; This function is called by:
 25184 ;;		i1_do_I2C_SEND_RESTART_READ
 25185 ;;		i1_do_I2C_SEND_RESTART_WRITE
 25186 ;;		i1_do_I2C_SEND_RESTART
 25187 ;; This function uses a non-reentrant model
 25188 ;;
 25189                           
 25190                           
 25191                           ;psect for function i1_i2c1_driver_restart
 25192  2145                     i1_i2c1_driver_restart:	
 25193                           
 25194                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 25195                           
 25196                           ;incstack = 0
 25197                           ; Regs used in i1_i2c1_driver_restart: []
 25198  2145  0024               	movlb	4	; select bank4
 25199  2146  1496               	bsf	22,1	;volatile
 25200  2147  0008               	return
 25201  2148                     __end_ofi1_i2c1_driver_restart:	
 25202                           
 25203                           	psect	text150
 25204  2172                     __ptext150:	
 25205 ;; *************** function i1_i2c1_driver_sendACK *****************
 25206 ;; Defined at:
 25207 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 25208 ;; Parameters:    Size  Location     Type
 25209 ;;		None
 25210 ;; Auto vars:     Size  Location     Type
 25211 ;;		None
 25212 ;; Return value:  Size  Location     Type
 25213 ;;                  1    wreg      void 
 25214 ;; Registers used:
 25215 ;;		None
 25216 ;; Tracked objects:
 25217 ;;		On entry : 0/0
 25218 ;;		On exit  : 0/0
 25219 ;;		Unchanged: 0/0
 25220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25225 ;;Total ram usage:        0 bytes
 25226 ;; Hardware stack levels used:    1
 25227 ;; This function calls:
 25228 ;;		Nothing
 25229 ;; This function is called by:
 25230 ;;		i1_do_I2C_DO_ACK
 25231 ;;		i1_do_I2C_RX
 25232 ;; This function uses a non-reentrant model
 25233 ;;
 25234                           
 25235                           
 25236                           ;psect for function i1_i2c1_driver_sendACK
 25237  2172                     i1_i2c1_driver_sendACK:	
 25238                           
 25239                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 25240                           
 25241                           ;incstack = 0
 25242                           ; Regs used in i1_i2c1_driver_sendACK: []
 25243  2172  0024               	movlb	4	; select bank4
 25244  2173  1296               	bcf	22,5	;volatile
 25245                           
 25246                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 25247  2174  1616               	bsf	22,4	;volatile
 25248  2175  0008               	return
 25249  2176                     __end_ofi1_i2c1_driver_sendACK:	
 25250                           
 25251                           	psect	text151
 25252  2142                     __ptext151:	
 25253 ;; *************** function _i2c_busCollisionISR *****************
 25254 ;; Defined at:
 25255 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 25256 ;; Parameters:    Size  Location     Type
 25257 ;;		None
 25258 ;; Auto vars:     Size  Location     Type
 25259 ;;		None
 25260 ;; Return value:  Size  Location     Type
 25261 ;;                  1    wreg      void 
 25262 ;; Registers used:
 25263 ;;		status,2, status,0, pclath, cstack
 25264 ;; Tracked objects:
 25265 ;;		On entry : 0/0
 25266 ;;		On exit  : 0/0
 25267 ;;		Unchanged: 0/0
 25268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25273 ;;Total ram usage:        0 bytes
 25274 ;; Hardware stack levels used:    1
 25275 ;; Hardware stack levels required when called:    1
 25276 ;; This function calls:
 25277 ;;		_i2c1_driver_clearBusCollision
 25278 ;; This function is called by:
 25279 ;;		_i2c_open
 25280 ;;		_INTERRUPT_InterruptManager
 25281 ;; This function uses a non-reentrant model
 25282 ;;
 25283                           
 25284                           
 25285                           ;psect for function _i2c_busCollisionISR
 25286  2142                     _i2c_busCollisionISR:	
 25287                           
 25288                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 25289                           
 25290                           ;incstack = 0
 25291                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 25292  2142  31A1  213F         	fcall	_i2c1_driver_clearBusCollision
 25293  2144  0008               	return
 25294  2145                     __end_of_i2c_busCollisionISR:	
 25295                           
 25296                           	psect	text152
 25297  213F                     __ptext152:	
 25298 ;; *************** function _i2c1_driver_clearBusCollision *****************
 25299 ;; Defined at:
 25300 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 25301 ;; Parameters:    Size  Location     Type
 25302 ;;		None
 25303 ;; Auto vars:     Size  Location     Type
 25304 ;;		None
 25305 ;; Return value:  Size  Location     Type
 25306 ;;                  1    wreg      void 
 25307 ;; Registers used:
 25308 ;;		None
 25309 ;; Tracked objects:
 25310 ;;		On entry : 0/0
 25311 ;;		On exit  : 0/0
 25312 ;;		Unchanged: 0/0
 25313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25318 ;;Total ram usage:        0 bytes
 25319 ;; Hardware stack levels used:    1
 25320 ;; This function calls:
 25321 ;;		Nothing
 25322 ;; This function is called by:
 25323 ;;		_i2c_busCollisionISR
 25324 ;; This function uses a non-reentrant model
 25325 ;;
 25326                           
 25327                           
 25328                           ;psect for function _i2c1_driver_clearBusCollision
 25329  213F                     _i2c1_driver_clearBusCollision:	
 25330                           
 25331                           ;i2c1_driver.c: 255: PIR1bits.BCL1IF = 0;
 25332                           
 25333                           ;incstack = 0
 25334                           ; Regs used in _i2c1_driver_clearBusCollision: []
 25335  213F  0020               	movlb	0	; select bank0
 25336  2140  1111               	bcf	17,2	;volatile
 25337  2141  0008               	return
 25338  2142                     __end_of_i2c1_driver_clearBusCollision:	
 25339                           
 25340                           	psect	text153
 25341  2315                     __ptext153:	
 25342 ;; *************** function _TMR2_ISR *****************
 25343 ;; Defined at:
 25344 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 25345 ;; Parameters:    Size  Location     Type
 25346 ;;		None
 25347 ;; Auto vars:     Size  Location     Type
 25348 ;;		None
 25349 ;; Return value:  Size  Location     Type
 25350 ;;                  1    wreg      void 
 25351 ;; Registers used:
 25352 ;;		wreg, status,2, status,0, pclath, cstack
 25353 ;; Tracked objects:
 25354 ;;		On entry : 0/0
 25355 ;;		On exit  : 0/0
 25356 ;;		Unchanged: 0/0
 25357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25362 ;;Total ram usage:        0 bytes
 25363 ;; Hardware stack levels used:    1
 25364 ;; Hardware stack levels required when called:    2
 25365 ;; This function calls:
 25366 ;;		Absolute function
 25367 ;;		_TMR2_DefaultInterruptHandler
 25368 ;; This function is called by:
 25369 ;;		_INTERRUPT_InterruptManager
 25370 ;; This function uses a non-reentrant model
 25371 ;;
 25372                           
 25373                           
 25374                           ;psect for function _TMR2_ISR
 25375  2315                     _TMR2_ISR:	
 25376                           
 25377                           ;tmr2.c: 121: PIR1bits.TMR2IF = 0;
 25378                           
 25379                           ;incstack = 0
 25380                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 25381  2315  0020               	movlb	0	; select bank0
 25382  2316  1091               	bcf	17,1	;volatile
 25383                           
 25384                           ;tmr2.c: 123: if(TMR2_InterruptHandler)
 25385  2317  0023               	movlb	3	; select bank3
 25386  2318  0861               	movf	_TMR2_InterruptHandler^(0+384),w
 25387  2319  0462               	iorwf	(_TMR2_InterruptHandler+1)^(0+384),w
 25388  231A  1903               	btfsc	3,2
 25389  231B  0008               	return
 25390                           
 25391                           ;tmr2.c: 124: {
 25392                           ;tmr2.c: 125: TMR2_InterruptHandler();
 25393  231C  0862               	movf	(_TMR2_InterruptHandler+1)^(0+384),w
 25394  231D  008A               	movwf	10
 25395  231E  0861               	movf	_TMR2_InterruptHandler^(0+384),w
 25396  231F  000A               	callw
 25397  2320  31A3               	pagesel	$
 25398  2321  0008               	return
 25399  2322                     __end_of_TMR2_ISR:	
 25400                           
 25401                           	psect	text154
 25402  2244                     __ptext154:	
 25403 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 25404 ;; Defined at:
 25405 ;;		line 134 in file "mcc_generated_files/tmr2.c"
 25406 ;; Parameters:    Size  Location     Type
 25407 ;;		None
 25408 ;; Auto vars:     Size  Location     Type
 25409 ;;		None
 25410 ;; Return value:  Size  Location     Type
 25411 ;;                  1    wreg      void 
 25412 ;; Registers used:
 25413 ;;		wreg, status,2, status,0, pclath, cstack
 25414 ;; Tracked objects:
 25415 ;;		On entry : 0/0
 25416 ;;		On exit  : 0/0
 25417 ;;		Unchanged: 0/0
 25418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25423 ;;Total ram usage:        0 bytes
 25424 ;; Hardware stack levels used:    1
 25425 ;; Hardware stack levels required when called:    1
 25426 ;; This function calls:
 25427 ;;		_TMR2_StopTimer
 25428 ;;		_TMR2_WriteTimer
 25429 ;; This function is called by:
 25430 ;;		_TMR2_Initialize
 25431 ;;		_TMR2_ISR
 25432 ;; This function uses a non-reentrant model
 25433 ;;
 25434                           
 25435                           
 25436                           ;psect for function _TMR2_DefaultInterruptHandler
 25437  2244                     _TMR2_DefaultInterruptHandler:	
 25438                           
 25439                           ;incstack = 0
 25440                           ; Regs used in _TMR2_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 25441                           ;tmr2.c: 138: do { LATCbits.LATC1 = 1; } while(0);
 25442  2244  0022               	movlb	2	; select bank2
 25443  2245  148E               	bsf	14,1	;volatile
 25444                           
 25445                           ;tmr2.c: 141: TMR2_StopTimer();
 25446  2246  31A1  213C  31A2   	fcall	_TMR2_StopTimer
 25447                           
 25448                           ;tmr2.c: 142: TMR2_WriteTimer(0);
 25449  2249  3000               	movlw	0
 25450  224A  31A1  21A3         	fcall	_TMR2_WriteTimer
 25451  224C  0008               	return
 25452  224D                     __end_of_TMR2_DefaultInterruptHandler:	
 25453                           
 25454                           	psect	text155
 25455  21A3                     __ptext155:	
 25456 ;; *************** function _TMR2_WriteTimer *****************
 25457 ;; Defined at:
 25458 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 25459 ;; Parameters:    Size  Location     Type
 25460 ;;  timerVal        1    wreg     unsigned char 
 25461 ;; Auto vars:     Size  Location     Type
 25462 ;;  timerVal        1    0[COMMON] unsigned char 
 25463 ;; Return value:  Size  Location     Type
 25464 ;;                  1    wreg      void 
 25465 ;; Registers used:
 25466 ;;		wreg
 25467 ;; Tracked objects:
 25468 ;;		On entry : 0/0
 25469 ;;		On exit  : 0/0
 25470 ;;		Unchanged: 0/0
 25471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25476 ;;Total ram usage:        1 bytes
 25477 ;; Hardware stack levels used:    1
 25478 ;; This function calls:
 25479 ;;		Nothing
 25480 ;; This function is called by:
 25481 ;;		_TMR2_DefaultInterruptHandler
 25482 ;; This function uses a non-reentrant model
 25483 ;;
 25484                           
 25485                           
 25486                           ;psect for function _TMR2_WriteTimer
 25487  21A3                     _TMR2_WriteTimer:	
 25488                           
 25489                           ;incstack = 0
 25490                           ; Regs used in _TMR2_WriteTimer: [wreg]
 25491                           ;TMR2_WriteTimer@timerVal stored from wreg
 25492  21A3  00F0               	movwf	TMR2_WriteTimer@timerVal
 25493                           
 25494                           ;tmr2.c: 109: TMR2 = timerVal;
 25495  21A4  0870               	movf	TMR2_WriteTimer@timerVal,w
 25496  21A5  0020               	movlb	0	; select bank0
 25497  21A6  009D               	movwf	29	;volatile
 25498  21A7  0008               	return
 25499  21A8                     __end_of_TMR2_WriteTimer:	
 25500                           
 25501                           	psect	text156
 25502  213C                     __ptext156:	
 25503 ;; *************** function _TMR2_StopTimer *****************
 25504 ;; Defined at:
 25505 ;;		line 91 in file "mcc_generated_files/tmr2.c"
 25506 ;; Parameters:    Size  Location     Type
 25507 ;;		None
 25508 ;; Auto vars:     Size  Location     Type
 25509 ;;		None
 25510 ;; Return value:  Size  Location     Type
 25511 ;;                  1    wreg      void 
 25512 ;; Registers used:
 25513 ;;		None
 25514 ;; Tracked objects:
 25515 ;;		On entry : 0/0
 25516 ;;		On exit  : 0/0
 25517 ;;		Unchanged: 0/0
 25518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25523 ;;Total ram usage:        0 bytes
 25524 ;; Hardware stack levels used:    1
 25525 ;; This function calls:
 25526 ;;		Nothing
 25527 ;; This function is called by:
 25528 ;;		_TMR2_DefaultInterruptHandler
 25529 ;; This function uses a non-reentrant model
 25530 ;;
 25531                           
 25532                           
 25533                           ;psect for function _TMR2_StopTimer
 25534  213C                     _TMR2_StopTimer:	
 25535                           
 25536                           ;tmr2.c: 94: T2CONbits.TMR2ON = 0;
 25537                           
 25538                           ;incstack = 0
 25539                           ; Regs used in _TMR2_StopTimer: []
 25540  213C  0020               	movlb	0	; select bank0
 25541  213D  111F               	bcf	31,2	;volatile
 25542  213E  0008               	return
 25543  213F                     __end_of_TMR2_StopTimer:	
 25544                           
 25545                           	psect	text157
 25546  2308                     __ptext157:	
 25547 ;; *************** function _TMR0_ISR *****************
 25548 ;; Defined at:
 25549 ;;		line 119 in file "mcc_generated_files/tmr0.c"
 25550 ;; Parameters:    Size  Location     Type
 25551 ;;		None
 25552 ;; Auto vars:     Size  Location     Type
 25553 ;;		None
 25554 ;; Return value:  Size  Location     Type
 25555 ;;                  1    wreg      void 
 25556 ;; Registers used:
 25557 ;;		wreg, status,2, status,0, pclath, cstack
 25558 ;; Tracked objects:
 25559 ;;		On entry : 0/0
 25560 ;;		On exit  : 0/0
 25561 ;;		Unchanged: 0/0
 25562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25567 ;;Total ram usage:        0 bytes
 25568 ;; Hardware stack levels used:    1
 25569 ;; Hardware stack levels required when called:    4
 25570 ;; This function calls:
 25571 ;;		Absolute function
 25572 ;;		_TMR0_DefaultInterruptHandler
 25573 ;; This function is called by:
 25574 ;;		_INTERRUPT_InterruptManager
 25575 ;; This function uses a non-reentrant model
 25576 ;;
 25577                           
 25578                           
 25579                           ;psect for function _TMR0_ISR
 25580  2308                     _TMR0_ISR:	
 25581                           
 25582                           ;tmr0.c: 122: PIR0bits.TMR0IF = 0;
 25583                           
 25584                           ;incstack = 0
 25585 ;; hardware stack exceeded
 25586                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 25587  2308  0020               	movlb	0	; select bank0
 25588  2309  1290               	bcf	16,5	;volatile
 25589                           
 25590                           ;tmr0.c: 123: if(TMR0_InterruptHandler)
 25591  230A  0023               	movlb	3	; select bank3
 25592  230B  0863               	movf	_TMR0_InterruptHandler^(0+384),w
 25593  230C  0464               	iorwf	(_TMR0_InterruptHandler+1)^(0+384),w
 25594  230D  1903               	btfsc	3,2
 25595  230E  0008               	return
 25596                           
 25597                           ;tmr0.c: 124: {
 25598                           ;tmr0.c: 125: TMR0_InterruptHandler();
 25599  230F  0864               	movf	(_TMR0_InterruptHandler+1)^(0+384),w
 25600  2310  008A               	movwf	10
 25601  2311  0863               	movf	_TMR0_InterruptHandler^(0+384),w
 25602  2312  000A               	callw
 25603  2313  31A3               	pagesel	$
 25604  2314  0008               	return
 25605  2315                     __end_of_TMR0_ISR:	
 25606                           
 25607                           	psect	text158
 25608  1881                     __ptext158:	
 25609 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 25610 ;; Defined at:
 25611 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 25612 ;; Parameters:    Size  Location     Type
 25613 ;;		None
 25614 ;; Auto vars:     Size  Location     Type
 25615 ;;		None
 25616 ;; Return value:  Size  Location     Type
 25617 ;;                  1    wreg      void 
 25618 ;; Registers used:
 25619 ;;		wreg, status,2, status,0, pclath, cstack
 25620 ;; Tracked objects:
 25621 ;;		On entry : 0/0
 25622 ;;		On exit  : 0/0
 25623 ;;		Unchanged: 0/0
 25624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25629 ;;Total ram usage:        0 bytes
 25630 ;; Hardware stack levels used:    1
 25631 ;; Hardware stack levels required when called:    3
 25632 ;; This function calls:
 25633 ;;		_TMR0_StopTimer
 25634 ;;		_TMR0_Write8bitTimer
 25635 ;;		i1_LEDsOn
 25636 ;; This function is called by:
 25637 ;;		_TMR0_Initialize
 25638 ;;		_TMR0_ISR
 25639 ;; This function uses a non-reentrant model
 25640 ;;
 25641                           
 25642                           
 25643                           ;psect for function _TMR0_DefaultInterruptHandler
 25644  1881                     _TMR0_DefaultInterruptHandler:	
 25645                           
 25646                           ;tmr0.c: 141: LEDsOn(second_top, 1);
 25647                           
 25648                           ;incstack = 0
 25649 ;; hardware stack exceeded
 25650                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 25651  1881  0022               	movlb	2	; select bank2
 25652  1882  0861               	movf	(_second_top+3)^(0+256),w
 25653  1883  0020               	movlb	0	; select bank0
 25654  1884  00AA               	movwf	i1LEDsOn@LEDpins+3
 25655  1885  0022               	movlb	2	; select bank2
 25656  1886  0860               	movf	(_second_top+2)^(0+256),w
 25657  1887  0020               	movlb	0	; select bank0
 25658  1888  00A9               	movwf	i1LEDsOn@LEDpins+2
 25659  1889  0022               	movlb	2	; select bank2
 25660  188A  085F               	movf	(_second_top+1)^(0+256),w
 25661  188B  0020               	movlb	0	; select bank0
 25662  188C  00A8               	movwf	i1LEDsOn@LEDpins+1
 25663  188D  0022               	movlb	2	; select bank2
 25664  188E  085E               	movf	_second_top^(0+256),w
 25665  188F  0020               	movlb	0	; select bank0
 25666  1890  00A7               	movwf	i1LEDsOn@LEDpins
 25667  1891  3001               	movlw	1
 25668  1892  00AB               	movwf	i1LEDsOn@topOrBottom
 25669  1893  3000               	movlw	0
 25670  1894  00AC               	movwf	i1LEDsOn@topOrBottom+1
 25671  1895  31A5  2536  3198   	fcall	i1_LEDsOn
 25672                           
 25673                           ;tmr0.c: 142: LEDsOn(second_bottom,2);
 25674  1898  0022               	movlb	2	; select bank2
 25675  1899  0855               	movf	(_second_bottom+3)^(0+256),w
 25676  189A  0020               	movlb	0	; select bank0
 25677  189B  00AA               	movwf	i1LEDsOn@LEDpins+3
 25678  189C  0022               	movlb	2	; select bank2
 25679  189D  0854               	movf	(_second_bottom+2)^(0+256),w
 25680  189E  0020               	movlb	0	; select bank0
 25681  189F  00A9               	movwf	i1LEDsOn@LEDpins+2
 25682  18A0  0022               	movlb	2	; select bank2
 25683  18A1  0853               	movf	(_second_bottom+1)^(0+256),w
 25684  18A2  0020               	movlb	0	; select bank0
 25685  18A3  00A8               	movwf	i1LEDsOn@LEDpins+1
 25686  18A4  0022               	movlb	2	; select bank2
 25687  18A5  0852               	movf	_second_bottom^(0+256),w
 25688  18A6  0020               	movlb	0	; select bank0
 25689  18A7  00A7               	movwf	i1LEDsOn@LEDpins
 25690  18A8  3002               	movlw	2
 25691  18A9  00AB               	movwf	i1LEDsOn@topOrBottom
 25692  18AA  3000               	movlw	0
 25693  18AB  00AC               	movwf	i1LEDsOn@topOrBottom+1
 25694  18AC  31A5  2536  3198   	fcall	i1_LEDsOn
 25695                           
 25696                           ;tmr0.c: 144: do { LATCbits.LATC1 = 0; } while(0);
 25697  18AF  0022               	movlb	2	; select bank2
 25698  18B0  108E               	bcf	14,1	;volatile
 25699                           
 25700                           ;tmr0.c: 145: TMR0_StopTimer();
 25701  18B1  31A1  2139  3198   	fcall	_TMR0_StopTimer
 25702                           
 25703                           ;tmr0.c: 146: TMR0_Write8bitTimer(0);
 25704  18B4  3000               	movlw	0
 25705  18B5  31A1  219E         	fcall	_TMR0_Write8bitTimer
 25706  18B7  0008               	return
 25707  18B8                     __end_of_TMR0_DefaultInterruptHandler:	
 25708                           
 25709                           	psect	text159
 25710  2536                     __ptext159:	
 25711 ;; *************** function i1_LEDsOn *****************
 25712 ;; Defined at:
 25713 ;;		line 6 in file "LEDcomm.c"
 25714 ;; Parameters:    Size  Location     Type
 25715 ;;  LEDpins         4    7[BANK0 ] unsigned long 
 25716 ;;  topOrBottom     2   11[BANK0 ] int 
 25717 ;; Auto vars:     Size  Location     Type
 25718 ;;		None
 25719 ;; Return value:  Size  Location     Type
 25720 ;;                  1    wreg      void 
 25721 ;; Registers used:
 25722 ;;		wreg, status,2, status,0, pclath, cstack
 25723 ;; Tracked objects:
 25724 ;;		On entry : 0/0
 25725 ;;		On exit  : 0/0
 25726 ;;		Unchanged: 0/0
 25727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25728 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25730 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25731 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25732 ;;Total ram usage:       10 bytes
 25733 ;; Hardware stack levels used:    1
 25734 ;; Hardware stack levels required when called:    2
 25735 ;; This function calls:
 25736 ;;		i1_send_2length_2bytes_IK
 25737 ;; This function is called by:
 25738 ;;		_TMR0_DefaultInterruptHandler
 25739 ;; This function uses a non-reentrant model
 25740 ;;
 25741                           
 25742                           
 25743                           ;psect for function i1_LEDsOn
 25744  2536                     i1_LEDsOn:	
 25745                           
 25746                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 25747                           
 25748                           ;incstack = 0
 25749 ;; hardware stack exceeded
 25750                           ; Regs used in i1_LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 25751  2536  0020               	movlb	0	; select bank0
 25752  2537  0827               	movf	i1LEDsOn@LEDpins,w
 25753  2538  00AD               	movwf	??i1_LEDsOn
 25754  2539  0828               	movf	i1LEDsOn@LEDpins+1,w
 25755  253A  00AE               	movwf	??i1_LEDsOn+1
 25756  253B  0829               	movf	i1LEDsOn@LEDpins+2,w
 25757  253C  00AF               	movwf	??i1_LEDsOn+2
 25758  253D  082A               	movf	i1LEDsOn@LEDpins+3,w
 25759  253E  00B0               	movwf	??i1_LEDsOn+3
 25760  253F  3010               	movlw	16
 25761  2540                     u523_25:	
 25762  2540  36B0               	lsrf	??i1_LEDsOn+3,f
 25763  2541  0CAF               	rrf	??i1_LEDsOn+2,f
 25764  2542  0CAE               	rrf	??i1_LEDsOn+1,f
 25765  2543  0CAD               	rrf	??i1_LEDsOn,f
 25766  2544  0B89               	decfsz	9,f
 25767  2545  2D40               	goto	u523_25
 25768  2546  082E               	movf	??i1_LEDsOn+1,w
 25769  2547  00A1               	movwf	i1send_2length_2bytes_IK@data1+1
 25770  2548  082D               	movf	??i1_LEDsOn,w
 25771  2549  00A0               	movwf	i1send_2length_2bytes_IK@data1
 25772  254A  0828               	movf	i1LEDsOn@LEDpins+1,w
 25773  254B  00A3               	movwf	i1send_2length_2bytes_IK@data2+1
 25774  254C  0827               	movf	i1LEDsOn@LEDpins,w
 25775  254D  00A2               	movwf	i1send_2length_2bytes_IK@data2
 25776  254E  01A4               	clrf	i1send_2length_2bytes_IK@latch_start
 25777  254F  0AA4               	incf	i1send_2length_2bytes_IK@latch_start,f
 25778  2550  082C               	movf	i1LEDsOn@topOrBottom+1,w
 25779  2551  00A6               	movwf	i1send_2length_2bytes_IK@topOrBottom+1
 25780  2552  082B               	movf	i1LEDsOn@topOrBottom,w
 25781  2553  00A5               	movwf	i1send_2length_2bytes_IK@topOrBottom
 25782  2554  31A3  23C2         	fcall	i1_send_2length_2bytes_IK
 25783  2556  0008               	return
 25784  2557                     __end_ofi1_LEDsOn:	
 25785                           
 25786                           	psect	text160
 25787  23C2                     __ptext160:	
 25788 ;; *************** function i1_send_2length_2bytes_IK *****************
 25789 ;; Defined at:
 25790 ;;		line 70 in file "LEDcomm.c"
 25791 ;; Parameters:    Size  Location     Type
 25792 ;;  data1           2    0[BANK0 ] unsigned int 
 25793 ;;  data2           2    2[BANK0 ] unsigned int 
 25794 ;;  latch_start     1    4[BANK0 ] unsigned char 
 25795 ;;  topOrBottom     2    5[BANK0 ] int 
 25796 ;; Auto vars:     Size  Location     Type
 25797 ;;		None
 25798 ;; Return value:  Size  Location     Type
 25799 ;;                  1    wreg      void 
 25800 ;; Registers used:
 25801 ;;		wreg, status,2, status,0, pclath, cstack
 25802 ;; Tracked objects:
 25803 ;;		On entry : 0/0
 25804 ;;		On exit  : 0/0
 25805 ;;		Unchanged: 0/0
 25806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25807 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25810 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25811 ;;Total ram usage:        8 bytes
 25812 ;; Hardware stack levels used:    1
 25813 ;; Hardware stack levels required when called:    1
 25814 ;; This function calls:
 25815 ;;		i1_send_2bytes_latchless_IK
 25816 ;;		i1_send_last_2bytes_IK
 25817 ;; This function is called by:
 25818 ;;		i1_LEDsOn
 25819 ;; This function uses a non-reentrant model
 25820 ;;
 25821                           
 25822                           
 25823                           ;psect for function i1_send_2length_2bytes_IK
 25824  23C2                     i1_send_2length_2bytes_IK:	
 25825                           
 25826                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 25827                           
 25828                           ;incstack = 0
 25829 ;; hardware stack exceeded
 25830                           ; Regs used in i1_send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 25831  23C2  0020               	movlb	0	; select bank0
 25832  23C3  0821               	movf	i1send_2length_2bytes_IK@data1+1,w
 25833  23C4  00F1               	movwf	i1send_2bytes_latchless_IK@data+1
 25834  23C5  0820               	movf	i1send_2length_2bytes_IK@data1,w
 25835  23C6  00F0               	movwf	i1send_2bytes_latchless_IK@data
 25836  23C7  31A6  269A  31A3   	fcall	i1_send_2bytes_latchless_IK
 25837                           
 25838                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 25839  23CA  0020               	movlb	0	; select bank0
 25840  23CB  0823               	movf	i1send_2length_2bytes_IK@data2+1,w
 25841  23CC  00F1               	movwf	i1send_last_2bytes_IK@data+1
 25842  23CD  0822               	movf	i1send_2length_2bytes_IK@data2,w
 25843  23CE  00F0               	movwf	i1send_last_2bytes_IK@data
 25844  23CF  0824               	movf	i1send_2length_2bytes_IK@latch_start,w
 25845  23D0  00FB               	movwf	??i1_send_2length_2bytes_IK
 25846  23D1  087B               	movf	??i1_send_2length_2bytes_IK,w
 25847  23D2  00F2               	movwf	i1send_last_2bytes_IK@latch_start
 25848  23D3  0826               	movf	i1send_2length_2bytes_IK@topOrBottom+1,w
 25849  23D4  00F4               	movwf	i1send_last_2bytes_IK@topOrBottom+1
 25850  23D5  0825               	movf	i1send_2length_2bytes_IK@topOrBottom,w
 25851  23D6  00F3               	movwf	i1send_last_2bytes_IK@topOrBottom
 25852  23D7  319A  2247         	fcall	i1_send_last_2bytes_IK
 25853  23D9  0008               	return
 25854  23DA                     __end_ofi1_send_2length_2bytes_IK:	
 25855                           
 25856                           	psect	text161
 25857  1A47                     __ptext161:	
 25858 ;; *************** function i1_send_last_2bytes_IK *****************
 25859 ;; Defined at:
 25860 ;;		line 19 in file "LEDcomm.c"
 25861 ;; Parameters:    Size  Location     Type
 25862 ;;  data            2    0[COMMON] unsigned int 
 25863 ;;  latch_start     1    2[COMMON] unsigned char 
 25864 ;;  topOrBottom     2    3[COMMON] int 
 25865 ;; Auto vars:     Size  Location     Type
 25866 ;;  send_last_2b    2    9[COMMON] int 
 25867 ;; Return value:  Size  Location     Type
 25868 ;;                  1    wreg      void 
 25869 ;; Registers used:
 25870 ;;		wreg, status,2, status,0
 25871 ;; Tracked objects:
 25872 ;;		On entry : 0/0
 25873 ;;		On exit  : 0/0
 25874 ;;		Unchanged: 0/0
 25875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25876 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25877 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25878 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25879 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25880 ;;Total ram usage:       11 bytes
 25881 ;; Hardware stack levels used:    1
 25882 ;; This function calls:
 25883 ;;		Nothing
 25884 ;; This function is called by:
 25885 ;;		i1_send_2length_2bytes_IK
 25886 ;; This function uses a non-reentrant model
 25887 ;;
 25888                           
 25889                           
 25890                           ;psect for function i1_send_last_2bytes_IK
 25891  1A47                     i1_send_last_2bytes_IK:	
 25892                           
 25893                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 25894                           
 25895                           ;incstack = 0
 25896 ;; hardware stack exceeded
 25897                           ; Regs used in i1_send_last_2bytes_IK: [wreg+status,2+status,0]
 25898  1A47  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25899  1A48  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25900  1A49  1D03               	btfss	3,2
 25901  1A4A  2A4E               	goto	i1l210
 25902  1A4B  0022               	movlb	2	; select bank2
 25903  1A4C  120D               	bcf	13,4	;volatile
 25904  1A4D  2A50               	goto	i1l5211
 25905  1A4E                     i1l210:	
 25906  1A4E  0022               	movlb	2	; select bank2
 25907  1A4F  100E               	bcf	14,0	;volatile
 25908  1A50                     i1l5211:	
 25909                           
 25910                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 25911  1A50  300F               	movlw	15
 25912  1A51  00F9               	movwf	i1send_last_2bytes_IK@j
 25913  1A52  3000               	movlw	0
 25914  1A53  00FA               	movwf	i1send_last_2bytes_IK@j+1
 25915  1A54  1BFA               	btfsc	i1send_last_2bytes_IK@j+1,7
 25916  1A55  2A87               	goto	i1l231
 25917  1A56                     i1l214:	
 25918                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 25919                           
 25920  1A56  110C               	bcf	12,2	;volatile
 25921                           
 25922                           ;LEDcomm.c: 28: if (data & 1 << j){
 25923  1A57  3001               	movlw	1
 25924  1A58  00F5               	movwf	??i1_send_last_2bytes_IK
 25925  1A59  3000               	movlw	0
 25926  1A5A  00F6               	movwf	??i1_send_last_2bytes_IK+1
 25927  1A5B  0A79               	incf	i1send_last_2bytes_IK@j,w
 25928  1A5C  2A5F               	goto	u401_24
 25929  1A5D                     u401_25:	
 25930  1A5D  35F5               	lslf	??i1_send_last_2bytes_IK,f
 25931  1A5E  0DF6               	rlf	??i1_send_last_2bytes_IK+1,f
 25932  1A5F                     u401_24:	
 25933  1A5F  0B89               	decfsz	9,f
 25934  1A60  2A5D               	goto	u401_25
 25935  1A61  0870               	movf	i1send_last_2bytes_IK@data,w
 25936  1A62  0575               	andwf	??i1_send_last_2bytes_IK,w
 25937  1A63  00F7               	movwf	??i1_send_last_2bytes_IK+2
 25938  1A64  0871               	movf	i1send_last_2bytes_IK@data+1,w
 25939  1A65  0576               	andwf	??i1_send_last_2bytes_IK+1,w
 25940  1A66  00F8               	movwf	??i1_send_last_2bytes_IK+3
 25941  1A67  0877               	movf	??i1_send_last_2bytes_IK+2,w
 25942  1A68  0478               	iorwf	??i1_send_last_2bytes_IK+3,w
 25943  1A69  1903               	btfsc	3,2
 25944  1A6A  2A6D               	goto	i1l220
 25945                           
 25946                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 25947  1A6B  150E               	bsf	14,2	;volatile
 25948                           
 25949                           ;LEDcomm.c: 30: }
 25950  1A6C  2A6E               	goto	i1l5219
 25951  1A6D                     i1l220:	
 25952                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 25953                           
 25954  1A6D  110E               	bcf	14,2	;volatile
 25955  1A6E                     i1l5219:	
 25956                           
 25957                           ;LEDcomm.c: 33: if( j == latch_start) {
 25958  1A6E  0872               	movf	i1send_last_2bytes_IK@latch_start,w
 25959  1A6F  00F5               	movwf	??i1_send_last_2bytes_IK
 25960  1A70  01F6               	clrf	??i1_send_last_2bytes_IK+1
 25961  1A71  087A               	movf	i1send_last_2bytes_IK@j+1,w
 25962  1A72  0676               	xorwf	??i1_send_last_2bytes_IK+1,w
 25963  1A73  1D03               	skipz
 25964  1A74  2A77               	goto	u403_25
 25965  1A75  0879               	movf	i1send_last_2bytes_IK@j,w
 25966  1A76  0675               	xorwf	??i1_send_last_2bytes_IK,w
 25967  1A77                     u403_25:	
 25968  1A77  1D03               	skipz
 25969  1A78  2A80               	goto	i1l229
 25970                           
 25971                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 25972  1A79  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25973  1A7A  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25974  1A7B  1D03               	btfss	3,2
 25975  1A7C  2A7F               	goto	i1l227
 25976  1A7D  160D               	bsf	13,4	;volatile
 25977  1A7E  2A80               	goto	i1l229
 25978  1A7F                     i1l227:	
 25979  1A7F  140E               	bsf	14,0	;volatile
 25980  1A80                     i1l229:	
 25981                           ;LEDcomm.c: 37: }
 25982                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 25983                           
 25984  1A80  150C               	bsf	12,2	;volatile
 25985  1A81  30FF               	movlw	255
 25986  1A82  07F9               	addwf	i1send_last_2bytes_IK@j,f
 25987  1A83  30FF               	movlw	255
 25988  1A84  3DFA               	addwfc	i1send_last_2bytes_IK@j+1,f
 25989  1A85  1FFA               	btfss	i1send_last_2bytes_IK@j+1,7
 25990  1A86  2A56               	goto	i1l214
 25991  1A87                     i1l231:	
 25992                           ;LEDcomm.c: 41: }
 25993                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 25994                           
 25995  1A87  110C               	bcf	12,2	;volatile
 25996                           
 25997                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 25998  1A88  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25999  1A89  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 26000  1A8A  1D03               	btfss	3,2
 26001  1A8B  2A8E               	goto	i1l237
 26002  1A8C  120D               	bcf	13,4	;volatile
 26003  1A8D  0008               	return
 26004  1A8E                     i1l237:	
 26005  1A8E  100E               	bcf	14,0	;volatile
 26006  1A8F  0008               	return
 26007  1A90                     __end_ofi1_send_last_2bytes_IK:	
 26008                           
 26009                           	psect	text162
 26010  269A                     __ptext162:	
 26011 ;; *************** function i1_send_2bytes_latchless_IK *****************
 26012 ;; Defined at:
 26013 ;;		line 49 in file "LEDcomm.c"
 26014 ;; Parameters:    Size  Location     Type
 26015 ;;  data            2    0[COMMON] unsigned int 
 26016 ;; Auto vars:     Size  Location     Type
 26017 ;;  send_2bytes_    2    6[COMMON] int 
 26018 ;; Return value:  Size  Location     Type
 26019 ;;                  1    wreg      void 
 26020 ;; Registers used:
 26021 ;;		wreg, status,2, status,0
 26022 ;; Tracked objects:
 26023 ;;		On entry : 0/0
 26024 ;;		On exit  : 0/0
 26025 ;;		Unchanged: 0/0
 26026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26029 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26030 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26031 ;;Total ram usage:        8 bytes
 26032 ;; Hardware stack levels used:    1
 26033 ;; This function calls:
 26034 ;;		Nothing
 26035 ;; This function is called by:
 26036 ;;		i1_send_2length_2bytes_IK
 26037 ;; This function uses a non-reentrant model
 26038 ;;
 26039                           
 26040                           
 26041                           ;psect for function i1_send_2bytes_latchless_IK
 26042  269A                     i1_send_2bytes_latchless_IK:	
 26043                           
 26044                           ;incstack = 0
 26045 ;; hardware stack exceeded
 26046                           ; Regs used in i1_send_2bytes_latchless_IK: [wreg+status,2+status,0]
 26047                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 26048  269A  0022               	movlb	2	; select bank2
 26049  269B  120D               	bcf	13,4	;volatile
 26050                           
 26051                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 26052  269C  300F               	movlw	15
 26053  269D  00F6               	movwf	i1send_2bytes_latchless_IK@j
 26054  269E  3000               	movlw	0
 26055  269F  00F7               	movwf	i1send_2bytes_latchless_IK@j+1
 26056  26A0  1BF7               	btfsc	i1send_2bytes_latchless_IK@j+1,7
 26057  26A1  2EC1               	goto	i1l256
 26058  26A2                     i1l246:	
 26059                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 26060                           
 26061  26A2  110C               	bcf	12,2	;volatile
 26062                           
 26063                           ;LEDcomm.c: 56: if (data & 1 << j){
 26064  26A3  3001               	movlw	1
 26065  26A4  00F2               	movwf	??i1_send_2bytes_latchless_IK
 26066  26A5  3000               	movlw	0
 26067  26A6  00F3               	movwf	??i1_send_2bytes_latchless_IK+1
 26068  26A7  0A76               	incf	i1send_2bytes_latchless_IK@j,w
 26069  26A8  2EAB               	goto	u408_24
 26070  26A9                     u408_25:	
 26071  26A9  35F2               	lslf	??i1_send_2bytes_latchless_IK,f
 26072  26AA  0DF3               	rlf	??i1_send_2bytes_latchless_IK+1,f
 26073  26AB                     u408_24:	
 26074  26AB  0B89               	decfsz	9,f
 26075  26AC  2EA9               	goto	u408_25
 26076  26AD  0870               	movf	i1send_2bytes_latchless_IK@data,w
 26077  26AE  0572               	andwf	??i1_send_2bytes_latchless_IK,w
 26078  26AF  00F4               	movwf	??i1_send_2bytes_latchless_IK+2
 26079  26B0  0871               	movf	i1send_2bytes_latchless_IK@data+1,w
 26080  26B1  0573               	andwf	??i1_send_2bytes_latchless_IK+1,w
 26081  26B2  00F5               	movwf	??i1_send_2bytes_latchless_IK+3
 26082  26B3  0874               	movf	??i1_send_2bytes_latchless_IK+2,w
 26083  26B4  0475               	iorwf	??i1_send_2bytes_latchless_IK+3,w
 26084  26B5  1903               	btfsc	3,2
 26085  26B6  2EB9               	goto	i1l252
 26086                           
 26087                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 26088  26B7  150E               	bsf	14,2	;volatile
 26089                           
 26090                           ;LEDcomm.c: 58: }
 26091  26B8  2EBA               	goto	i1l254
 26092  26B9                     i1l252:	
 26093                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 26094                           
 26095  26B9  110E               	bcf	14,2	;volatile
 26096  26BA                     i1l254:	
 26097                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 26098                           
 26099  26BA  150C               	bsf	12,2	;volatile
 26100  26BB  30FF               	movlw	255
 26101  26BC  07F6               	addwf	i1send_2bytes_latchless_IK@j,f
 26102  26BD  30FF               	movlw	255
 26103  26BE  3DF7               	addwfc	i1send_2bytes_latchless_IK@j+1,f
 26104  26BF  1FF7               	btfss	i1send_2bytes_latchless_IK@j+1,7
 26105  26C0  2EA2               	goto	i1l246
 26106  26C1                     i1l256:	
 26107                           ;LEDcomm.c: 64: }
 26108                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 26109                           
 26110  26C1  110C               	bcf	12,2	;volatile
 26111  26C2  0008               	return
 26112  26C3                     __end_ofi1_send_2bytes_latchless_IK:	
 26113                           
 26114                           	psect	text163
 26115  219E                     __ptext163:	
 26116 ;; *************** function _TMR0_Write8bitTimer *****************
 26117 ;; Defined at:
 26118 ;;		line 107 in file "mcc_generated_files/tmr0.c"
 26119 ;; Parameters:    Size  Location     Type
 26120 ;;  timerVal        1    wreg     unsigned char 
 26121 ;; Auto vars:     Size  Location     Type
 26122 ;;  timerVal        1    0[COMMON] unsigned char 
 26123 ;; Return value:  Size  Location     Type
 26124 ;;                  1    wreg      void 
 26125 ;; Registers used:
 26126 ;;		wreg
 26127 ;; Tracked objects:
 26128 ;;		On entry : 0/0
 26129 ;;		On exit  : 0/0
 26130 ;;		Unchanged: 0/0
 26131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26136 ;;Total ram usage:        1 bytes
 26137 ;; Hardware stack levels used:    1
 26138 ;; This function calls:
 26139 ;;		Nothing
 26140 ;; This function is called by:
 26141 ;;		_TMR0_DefaultInterruptHandler
 26142 ;; This function uses a non-reentrant model
 26143 ;;
 26144                           
 26145                           
 26146                           ;psect for function _TMR0_Write8bitTimer
 26147  219E                     _TMR0_Write8bitTimer:	
 26148                           
 26149                           ;incstack = 0
 26150                           ; Regs used in _TMR0_Write8bitTimer: [wreg]
 26151                           ;TMR0_Write8bitTimer@timerVal stored from wreg
 26152  219E  00F0               	movwf	TMR0_Write8bitTimer@timerVal
 26153                           
 26154                           ;tmr0.c: 110: TMR0L = timerVal;
 26155  219F  0870               	movf	TMR0_Write8bitTimer@timerVal,w
 26156  21A0  0020               	movlb	0	; select bank0
 26157  21A1  0095               	movwf	21	;volatile
 26158  21A2  0008               	return
 26159  21A3                     __end_of_TMR0_Write8bitTimer:	
 26160                           
 26161                           	psect	text164
 26162  2139                     __ptext164:	
 26163 ;; *************** function _TMR0_StopTimer *****************
 26164 ;; Defined at:
 26165 ;;		line 91 in file "mcc_generated_files/tmr0.c"
 26166 ;; Parameters:    Size  Location     Type
 26167 ;;		None
 26168 ;; Auto vars:     Size  Location     Type
 26169 ;;		None
 26170 ;; Return value:  Size  Location     Type
 26171 ;;                  1    wreg      void 
 26172 ;; Registers used:
 26173 ;;		None
 26174 ;; Tracked objects:
 26175 ;;		On entry : 0/0
 26176 ;;		On exit  : 0/0
 26177 ;;		Unchanged: 0/0
 26178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26183 ;;Total ram usage:        0 bytes
 26184 ;; Hardware stack levels used:    1
 26185 ;; This function calls:
 26186 ;;		Nothing
 26187 ;; This function is called by:
 26188 ;;		_TMR0_DefaultInterruptHandler
 26189 ;; This function uses a non-reentrant model
 26190 ;;
 26191                           
 26192                           
 26193                           ;psect for function _TMR0_StopTimer
 26194  2139                     _TMR0_StopTimer:	
 26195                           
 26196                           ;tmr0.c: 94: T0CON0bits.T0EN = 0;
 26197                           
 26198                           ;incstack = 0
 26199                           ; Regs used in _TMR0_StopTimer: []
 26200  2139  0020               	movlb	0	; select bank0
 26201  213A  1397               	bcf	23,7	;volatile
 26202  213B  0008               	return
 26203  213C                     __end_of_TMR0_StopTimer:	
 26204                           
 26205                           	psect	text165
 26206  247C                     __ptext165:	
 26207 ;; *************** function _EUSART_Transmit_ISR *****************
 26208 ;; Defined at:
 26209 ;;		line 161 in file "mcc_generated_files/eusart.c"
 26210 ;; Parameters:    Size  Location     Type
 26211 ;;		None
 26212 ;; Auto vars:     Size  Location     Type
 26213 ;;		None
 26214 ;; Return value:  Size  Location     Type
 26215 ;;                  1    wreg      void 
 26216 ;; Registers used:
 26217 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26218 ;; Tracked objects:
 26219 ;;		On entry : 0/0
 26220 ;;		On exit  : 0/0
 26221 ;;		Unchanged: 0/0
 26222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26226 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26227 ;;Total ram usage:        1 bytes
 26228 ;; Hardware stack levels used:    1
 26229 ;; This function calls:
 26230 ;;		Nothing
 26231 ;; This function is called by:
 26232 ;;		_INTERRUPT_InterruptManager
 26233 ;; This function uses a non-reentrant model
 26234 ;;
 26235                           
 26236                           
 26237                           ;psect for function _EUSART_Transmit_ISR
 26238  247C                     _EUSART_Transmit_ISR:	
 26239                           
 26240                           ;eusart.c: 165: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 26241                           
 26242                           ;incstack = 0
 26243                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 26244  247C  3008               	movlw	8
 26245  247D  0020               	movlb	0	; select bank0
 26246  247E  025E               	subwf	_eusartTxBufferRemaining,w	;volatile
 26247  247F  1803               	skipnc
 26248  2480  2C97               	goto	i1l436
 26249                           
 26250                           ;eusart.c: 166: {
 26251                           ;eusart.c: 167: TX1REG = eusartTxBuffer[eusartTxTail++];
 26252  2481  0859               	movf	_eusartTxTail,w
 26253  2482  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 26254  2483  0086               	movwf	6
 26255  2484  3001               	movlw	1	; select bank3/4
 26256  2485  0087               	movwf	7
 26257  2486  0801               	movf	1,w
 26258  2487  0023               	movlb	3	; select bank3
 26259  2488  009A               	movwf	26	;volatile
 26260  2489  3001               	movlw	1
 26261  248A  00F0               	movwf	??_EUSART_Transmit_ISR
 26262  248B  0870               	movf	??_EUSART_Transmit_ISR,w
 26263  248C  0020               	movlb	0	; select bank0
 26264  248D  07D9               	addwf	_eusartTxTail,f	;volatile
 26265                           
 26266                           ;eusart.c: 168: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 26267  248E  3008               	movlw	8
 26268  248F  0259               	subwf	_eusartTxTail,w	;volatile
 26269  2490  1803               	btfsc	3,0
 26270                           
 26271                           ;eusart.c: 169: {
 26272                           ;eusart.c: 170: eusartTxTail = 0;
 26273  2491  01D9               	clrf	_eusartTxTail	;volatile
 26274                           
 26275                           ;eusart.c: 171: }
 26276                           ;eusart.c: 172: eusartTxBufferRemaining++;
 26277  2492  3001               	movlw	1
 26278  2493  00F0               	movwf	??_EUSART_Transmit_ISR
 26279  2494  0870               	movf	??_EUSART_Transmit_ISR,w
 26280  2495  07DE               	addwf	_eusartTxBufferRemaining,f	;volatile
 26281                           
 26282                           ;eusart.c: 173: }
 26283  2496  0008               	return
 26284  2497                     i1l436:	
 26285                           
 26286                           ;eusart.c: 174: else
 26287                           ;eusart.c: 175: {
 26288                           ;eusart.c: 176: PIE1bits.TXIE = 0;
 26289  2497  0021               	movlb	1	; select bank1
 26290  2498  1211               	bcf	17,4	;volatile
 26291  2499  0008               	return
 26292  249A                     __end_of_EUSART_Transmit_ISR:	
 26293                           
 26294                           	psect	text166
 26295  2427                     __ptext166:	
 26296 ;; *************** function _EUSART_Receive_ISR *****************
 26297 ;; Defined at:
 26298 ;;		line 180 in file "mcc_generated_files/eusart.c"
 26299 ;; Parameters:    Size  Location     Type
 26300 ;;		None
 26301 ;; Auto vars:     Size  Location     Type
 26302 ;;		None
 26303 ;; Return value:  Size  Location     Type
 26304 ;;                  1    wreg      void 
 26305 ;; Registers used:
 26306 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26307 ;; Tracked objects:
 26308 ;;		On entry : 0/0
 26309 ;;		On exit  : 0/0
 26310 ;;		Unchanged: 0/0
 26311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26316 ;;Total ram usage:        1 bytes
 26317 ;; Hardware stack levels used:    1
 26318 ;; This function calls:
 26319 ;;		Nothing
 26320 ;; This function is called by:
 26321 ;;		_INTERRUPT_InterruptManager
 26322 ;; This function uses a non-reentrant model
 26323 ;;
 26324                           
 26325                           
 26326                           ;psect for function _EUSART_Receive_ISR
 26327  2427                     _EUSART_Receive_ISR:	
 26328                           
 26329                           ;eusart.c: 183: if(1 == RC1STAbits.OERR)
 26330                           
 26331                           ;incstack = 0
 26332                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 26333  2427  0023               	movlb	3	; select bank3
 26334  2428  1C9D               	btfss	29,1	;volatile
 26335  2429  2C2C               	goto	i1l6513
 26336                           
 26337                           ;eusart.c: 184: {
 26338                           ;eusart.c: 187: RC1STAbits.CREN = 0;
 26339  242A  121D               	bcf	29,4	;volatile
 26340                           
 26341                           ;eusart.c: 188: RC1STAbits.CREN = 1;
 26342  242B  161D               	bsf	29,4	;volatile
 26343  242C                     i1l6513:	
 26344                           
 26345                           ;eusart.c: 189: }
 26346                           ;eusart.c: 192: eusartRxBuffer[eusartRxHead++] = RC1REG;
 26347  242C  0819               	movf	25,w	;volatile
 26348  242D  00F0               	movwf	??_EUSART_Receive_ISR
 26349  242E  0020               	movlb	0	; select bank0
 26350  242F  0858               	movf	_eusartRxHead,w
 26351  2430  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 26352  2431  0086               	movwf	6
 26353  2432  3001               	movlw	1	; select bank3/4
 26354  2433  0087               	movwf	7
 26355  2434  0870               	movf	??_EUSART_Receive_ISR,w
 26356  2435  0081               	movwf	1
 26357  2436  3001               	movlw	1
 26358  2437  00F0               	movwf	??_EUSART_Receive_ISR
 26359  2438  0870               	movf	??_EUSART_Receive_ISR,w
 26360  2439  07D8               	addwf	_eusartRxHead,f	;volatile
 26361                           
 26362                           ;eusart.c: 193: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 26363  243A  3008               	movlw	8
 26364  243B  0258               	subwf	_eusartRxHead,w	;volatile
 26365  243C  1803               	btfsc	3,0
 26366                           
 26367                           ;eusart.c: 194: {
 26368                           ;eusart.c: 195: eusartRxHead = 0;
 26369  243D  01D8               	clrf	_eusartRxHead	;volatile
 26370                           
 26371                           ;eusart.c: 196: }
 26372                           ;eusart.c: 197: eusartRxCount++;
 26373  243E  3001               	movlw	1
 26374  243F  00F0               	movwf	??_EUSART_Receive_ISR
 26375  2440  0870               	movf	??_EUSART_Receive_ISR,w
 26376  2441  07D6               	addwf	_eusartRxCount,f	;volatile
 26377  2442  0008               	return
 26378  2443                     __end_of_EUSART_Receive_ISR:	
 26379  007E                     btemp	set	126	;btemp
 26380  007E                     int$flags	set	126
 26381  007E                     wtemp0	set	126


Data Sizes:
    Strings     505
    Constant    1048
    Data        48
    BSS         162
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     46      63
    BANK1            80     63      79
    BANK2            80      0      80
    BANK3            80      0      69
    BANK4            80     28      60
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           16      0       0
    BANK25            0      0       0

Pointer List with Targets:

    i2c_ISR$2760	PTR const FTN()enum E8364 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    returnStop@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S931$11$0	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_55(CODE[2]), STR_54(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_77(CODE[5]), STR_76(CODE[5]), STR_75(CODE[7]), STR_74(CODE[8]), 
		 -> STR_73(CODE[5]), STR_72(CODE[5]), STR_71(CODE[11]), STR_70(CODE[13]), 
		 -> STR_69(CODE[7]), STR_68(CODE[8]), STR_67(CODE[15]), STR_66(CODE[14]), 
		 -> STR_65(CODE[12]), STR_64(CODE[8]), STR_63(CODE[8]), STR_62(CODE[2]), 
		 -> STR_61(CODE[5]), STR_60(CODE[5]), STR_59(CODE[2]), STR_58(CODE[4]), 
		 -> STR_57(CODE[4]), STR_56(CODE[4]), 

    stricmp@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_79(CODE[23]), STR_78(CODE[3]), STR_53(CODE[17]), STR_52(CODE[17]), 
		 -> STR_51(CODE[18]), STR_50(CODE[18]), STR_49(CODE[17]), STR_48(CODE[28]), 
		 -> STR_47(CODE[9]), STR_46(CODE[9]), STR_45(CODE[25]), STR_44(CODE[11]), 
		 -> STR_43(CODE[8]), STR_42(CODE[8]), STR_41(CODE[8]), STR_40(CODE[31]), 
		 -> STR_39(CODE[11]), STR_38(CODE[8]), STR_37(CODE[8]), STR_36(CODE[8]), 
		 -> STR_35(CODE[26]), STR_34(CODE[30]), STR_33(CODE[2]), STR_32(CODE[2]), 
		 -> STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[4]), STR_28(CODE[2]), 
		 -> STR_27(CODE[4]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[4]), 
		 -> STR_11(CODE[3]), STR_10(CODE[16]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[13]), STR_5(CODE[15]), STR_4(CODE[16]), 
		 -> STR_3(CODE[2]), STR_2(CODE[4]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    execCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    parseCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    parseCmd@cmdString	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), 

    parseCmd@p	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E8364[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    S931$callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S931$callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S931$data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c1_driver_setI2cISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_i2c_ISR->i1_do_I2C_TX
    i1_do_I2C_TX->i1_i2c1_driver_TXData
    i1_do_I2C_TX->i1_i2c1_driver_isNACK
    i1_do_I2C_TX->i1_returnReset
    i1_do_I2C_TX->i1_returnStop
    i1_do_I2C_SEND_ADR_WRITE->i1_i2c1_driver_TXData
    i1_do_I2C_SEND_ADR_READ->i1_i2c1_driver_TXData
    _TMR2_DefaultInterruptHandler->_TMR2_WriteTimer
    i1_LEDsOn->i1_send_2length_2bytes_IK
    i1_send_2length_2bytes_IK->i1_send_last_2bytes_IK

Critical Paths under _main in BANK0

    _parseCmd->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _stricmp->_toupper
    _atoi->___wmul
    _main_initialize->_LEDsPwr
    _drv_init->_drv_write
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _drv_reset->_drv_write
    _timedActiveHeatOn->_LEDsOn
    _setLEDPwr->_LEDsPwr
    _LEDsPwr->_send_2length_2bytes_IK
    _setLEDBrightnessRange->_LED_setBrightnessRange
    _setHeaterToggle->_LEDsOn
    _setHeaterPreTime->___ftadd
    _setHeaterPostTime->___ftadd
    _setDrvPiezoOnTime->___ftadd
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _setDrvGain->_drv_write
    _commCheck->_LED_testComm
    _LED_test_openshort->_LEDsOn
    _LED_testComm->_LED_setBrightnessRange
    _LED_setBrightnessRange->_send_2length_2bytes_IK
    _doMove->_LEDsOn
    _drv_write_DC->_drv_write
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _printf->___llmod
    _putch->_EUSART_Write
    ___llmod->___lldiv
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _LEDsOn->_send_2length_2bytes_IK
    _send_2length_2bytes_IK->_send_last_2bytes_IK
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_DefaultInterruptHandler->i1_LEDsOn
    i1_LEDsOn->i1_send_2length_2bytes_IK

Critical Paths under _main in BANK1

    _main->_doRelMove
    _main_initialize->___fttol
    _drv_init->_drv_reset
    _execCmd->_commCheck
    _zeroPosition->_printf
    _timedActiveHeatOn->_printf
    _stop->_printf
    _startRelMove->_printf
    _startAbsMove->_printf
    _setMoveMask->_printf
    _setLEDPwr->_printf
    _setLEDBrightnessRange->_printf
    _setHeaterToggle->_printf
    _setHeaterPreTime->___fttol
    _setHeaterPostTime->___fttol
    _setDrvPiezoOnTime->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul
    _setDrvPeak->_printf
    _setDrvGain->_printf
    _setActive->_printf
    _getPosition->_printf
    _getMoveMask->_printf
    _getMotionStatus->_printf
    _getActive->_printf
    _commCheck->_LED_testComm
    _LED_test_openshort->_printf
    _LED_testComm->_LED_readConfig
    _LED_readConfig->_LED_getData
    _LED_getData->_printf
    _doRelMove->_doMove
    _doAbsMove->_doMove
    _doMove->_drv_write_DC
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _drv_read->_printf
    _drv_write->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_doAbsMove

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  377998
                                             62 BANK1      1     1      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                          _doAbsMove
                          _doRelMove
                            _execCmd
                    _main_initialize
                           _parseCmd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _parseCmd                                             6     5      1    6900
                                             37 BANK0      6     5      1
                               _atoi
                            _stricmp
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               6     4      2    1446
                                             31 BANK0      6     4      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               7     3      4     344
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _stricmp                                              6     4      2    2226
                                             19 BANK0      6     4      2
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    1920
                                             23 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1564
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _main_initialize                                      2     2      0   49369
                                             29 BANK1      2     2      0
             _LED_setBrightnessRange
                            _LEDsPwr
                _TMR0_Load8bitPeriod
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                           _drv_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drv_init                                             5     1      4   23814
                                             22 BANK1      5     1      4
                          _drv_reset
                          _drv_write
                           _i2c_open
                     _i2c_setAddress
                             _printf
 ---------------------------------------------------------------------------------
 (3) _i2c_setAddress                                       2     2      0      22
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _i2c_open                                             3     3      0     216
                                             19 BANK0      3     3      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setI2cISR                                2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setBusCollisionISR                       2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drv_reset                                            1     1      0    8739
                                             21 BANK1      1     1      0
                          _drv_write
 ---------------------------------------------------------------------------------
 (1) _execCmd                                              1     1      0  252885
                                             53 BANK1      1     1      0
                          _commCheck
                             _doMove
                          _getActive
                    _getMotionStatus
                        _getMoveMask
                        _getPosition
                             _printf
                          _setActive
                         _setDrvGain
                         _setDrvPeak
                  _setDrvPiezoOnTime
                  _setHeaterPostTime
                   _setHeaterPreTime
                    _setHeaterToggle
              _setLEDBrightnessRange
                          _setLEDPwr
                        _setMoveMask
                       _startAbsMove
                       _startRelMove
                               _stop
                  _timedActiveHeatOn
                       _zeroPosition
 ---------------------------------------------------------------------------------
 (2) _zeroPosition                                        12    10      2    6012
                                             41 BANK0      2     2      0
                                             21 BANK1     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _timedActiveHeatOn                                   13     7      6   10662
                                             21 BANK1     13     7      6
                             _LEDsOn
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stop                                                 2     0      2    5882
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startRelMove                                         2     0      2    5990
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startAbsMove                                         3     1      2    5990
                                             41 BANK0      1     1      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setMoveMask                                          8     4      4    6160
                                             41 BANK0      4     4      0
                                             21 BANK1      4     0      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setLEDPwr                                            4     0      4    9170
                                             21 BANK1      4     0      4
                            _LEDsPwr
                             _printf
 ---------------------------------------------------------------------------------
 (2) _LEDsPwr                                             14    10      4    3072
                                             36 BANK0     10     6      4
                                              0 BANK1      4     4      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (2) _setLEDBrightnessRange                                4     0      4    9574
                                             21 BANK1      4     0      4
             _LED_setBrightnessRange
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterToggle                                      8     4      4   10656
                                             21 BANK1      8     4      4
                             _LEDsOn
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPreTime                                     4     2      2   19093
                                             29 BANK1      4     2      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPostTime                                    2     0      2   19093
                                             29 BANK1      2     0      2
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TMR2_LoadPeriodRegister                              1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPiezoOnTime                                    4     2      2   19093
                                             29 BANK1      4     2      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     687
                                             15 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    4540
                                             31 BANK0     10     4      6
                                              0 BANK1      6     6      0
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4855
                                             41 BANK0      4     4      0
                                              6 BANK1      9     3      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2999
                                             25 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2404
                                             17 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _TMR0_Load8bitPeriod                                  1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPeak                                           2     0      2    5990
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setDrvGain                                           5     3      2   14775
                                             21 BANK1      5     3      2
                          _drv_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setActive                                           12     8      4    6160
                                             21 BANK1     12     8      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getPosition                                          6     4      2    6052
                                             41 BANK0      4     4      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMoveMask                                          8     6      2    5981
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMotionStatus                                      2     0      2    5882
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getActive                                            8     6      2    5981
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _commCheck                                            3     1      2   40102
                                             50 BANK1      3     1      2
                       _LED_testComm
                 _LED_test_openshort
                           _drv_read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _LED_test_openshort                                   7     3      4   13697
                                             21 BANK1      7     3      4
                             _LEDsOn
                             _printf
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _LED_testComm                                        10     8      2   12573
                                             44 BANK0      2     2      0
                                             42 BANK1      8     6      2
                     _LED_readConfig
             _LED_setBrightnessRange
 ---------------------------------------------------------------------------------
 (2) _LED_setBrightnessRange                              25    21      4    3476
                                             36 BANK0      8     4      4
                                              0 BANK1     17    17      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _LED_readConfig                                       5     1      4    8748
                                             41 BANK0      1     1      0
                                             38 BANK1      4     0      4
                        _LED_getData
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (5) _LED_getData                                         17    13      4    6222
                                             21 BANK1     17    13      4
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doRelMove                                           18    18      0   28281
                                             44 BANK1     18    18      0
                             _doMove
 ---------------------------------------------------------------------------------
 (1) _doAbsMove                                           36    36      0   34485
                                             44 BANK1      8     8      0
                                              0 BANK4     28    28      0
                             _doMove
                             _printf
 ---------------------------------------------------------------------------------
 (2) _doMove                                              13    11      2   28021
                                             31 BANK1     13    11      2
                             _LEDsOn
                    _TMR0_StartTimer
                    _TMR2_StartTimer
                     _calcHeaterPins
                       _drv_write_DC
 ---------------------------------------------------------------------------------
 (3) _drv_write_DC                                         7     3      4   23414
                                             24 BANK1      7     3      4
                            ___awdiv
                          _drv_write
                         _fifo_check
                             _printf
 ---------------------------------------------------------------------------------
 (4) _fifo_check                                           2     2      0    7984
                                             45 BANK0      1     1      0
                                             23 BANK1      1     1      0
                           _drv_read
 ---------------------------------------------------------------------------------
 (5) _drv_read                                             6     4      2    7950
                                             41 BANK0      4     4      0
                                             21 BANK1      2     0      2
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drv_write                                            5     4      1    8739
                                             41 BANK0      5     4      1
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              29    23      6    5882
                                              0 BANK1     21    15      6
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                             19 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                             31 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     395
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) _i2c_setBuffer                                        4     0      4     832
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _i2c_masterOperation                                  3     3      0    1104
                                             23 BANK0      3     3      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (5) _mssp1_IRQisEnabled                                   2     2      0       0
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _i2c_poller                                           0     0      0    1036
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (6) _mssp1_waitForEvent                                   1     1      0      42
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              1     1      0     994
                                             22 BANK0      1     1      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                       _mssp1_setIRQ
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            4     4      0     284
                                             18 BANK0      4     4      0
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            1     1      0     216
                                             17 BANK0      1     1      0
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1     216
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     556
                                             17 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _calcHeaterPins                                       4     4      0       0
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LEDsOn                                              10     4      6    4496
                                             36 BANK0     10     4      6
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _send_2length_2bytes_IK                               8     1      7    2387
                                             28 BANK0      8     1      7
           _send_2bytes_latchless_IK
                _send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _send_last_2bytes_IK                                 11     6      5     516
                                             17 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (4) _send_2bytes_latchless_IK                             8     6      2     207
                                             17 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      86
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          1     1      0    1490
                                             12 COMMON     1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
                           _TMR2_ISR
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (13) i1_i2c_ISR                                           1     1      0     690
                                              5 COMMON     1     1      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
               i1_i2c1_driver_isNACK
                   i1_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (14) i1_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX_EMPTY                                   1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                     i1_mssp1_setIRQ
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX                                         4     4      0     208
                                              1 COMMON     4     4      0
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
               i1_i2c1_driver_TXData
               i1_i2c1_driver_isNACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_READ                              0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_TXData                                1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RX                                         1     1      0     140
                                              0 COMMON     1     1      0
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
            i1_i2c1_driver_getRXData
              i1_i2c1_driver_sendACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RESET                                      0     0      0       0
             i1_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RCEN                                       0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ADDRESS_NACK                            1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_returnStop                                        1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_returnReset                                       1     0      1     140
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_STOP                                  0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART                               0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ACK                                     0     0      0       0
              i1_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (14) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0      22
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultInterruptHandler                        0     0      0      22
                     _TMR2_StopTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR2_WriteTimer                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR2_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0     778
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultInterruptHandler                        0     0      0     778
                     _TMR0_StopTimer
                _TMR0_Write8bitTimer
                           i1_LEDsOn
 ---------------------------------------------------------------------------------
 (15) i1_LEDsOn                                           10     4      6     756
                                              7 BANK0     10     4      6
           i1_send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (16) i1_send_2length_2bytes_IK                            8     1      7     586
                                             11 COMMON     1     1      0
                                              0 BANK0      7     0      7
         i1_send_2bytes_latchless_IK
              i1_send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (17) i1_send_last_2bytes_IK                              11     6      5     278
                                              0 COMMON    11     6      5
 ---------------------------------------------------------------------------------
 (17) i1_send_2bytes_latchless_IK                          8     6      2     116
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (15) _TMR0_Write8bitTimer                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _doAbsMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _doRelMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
   _execCmd
     _commCheck
       _LED_testComm
         _LED_readConfig
           _LED_getData
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _LED_setBrightnessRange
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
       _LED_test_openshort
         _LEDsOn
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _drv_read
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
     _getActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMotionStatus
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
     _setActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvGain
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPeak
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPiezoOnTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPostTime
       _TMR2_LoadPeriodRegister
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPreTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterToggle
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDBrightnessRange
       _LED_setBrightnessRange
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDPwr
       _LEDsPwr
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startAbsMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startRelMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _stop
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _timedActiveHeatOn
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _zeroPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
   _main_initialize
     _LED_setBrightnessRange
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _LEDsPwr
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _TMR0_Load8bitPeriod
     _TMR2_LoadPeriodRegister
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _drv_init
       _drv_reset
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _i2c_open
         _i2c1_driver_open
         _i2c1_driver_setBusCollisionISR
         _i2c1_driver_setI2cISR
         _mssp1_clearIRQ
       _i2c_setAddress
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _parseCmd
     _atoi
       ___wmul
       _isdigit
     _stricmp
       _toupper
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _TMR0_StopTimer
       _TMR0_Write8bitTimer
       i1_LEDsOn
         i1_send_2length_2bytes_IK
           i1_send_2bytes_latchless_IK
           i1_send_last_2bytes_IK
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
       _TMR2_StopTimer
       _TMR2_WriteTimer
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c1_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c1_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c1_driver_resetBus
     i1_do_I2C_RX *
       i1_do_I2C_DO_NACK_RESTART
         i1_i2c1_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP
         i1_i2c1_driver_sendNACK
       i1_i2c1_driver_getRXData
       i1_i2c1_driver_sendACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     i1_do_I2C_TX *
       i1_do_I2C_SEND_RESTART_READ
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_i2c1_driver_TXData
       i1_i2c1_driver_isNACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_TX_EMPTY *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_mssp1_setIRQ
       i1_returnReset *
       i1_returnStop *
     i1_i2c1_driver_isNACK *
     i1_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3F      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      45      11       86.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     1C      3C      13       75.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     16D      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     16D      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              10      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jul 06 13:51:36 2018

        i1send_last_2bytes_IK@topOrBottom 0073                              returnReset@p 0031  
        __end_of_TMR2_SetInterruptHandler 225F                                         pc 0002  
            __end_ofdrv2665@drv_fifo_sine 11E8                    setLEDBrightnessRange@r 00B5  
           _do_I2C_SEND_RESTART$intlevel0 2218                         ??_getMotionStatus 0049  
                             __CFG_CP$OFF 0000                              ___awdiv@sign 0037  
                    __size_of_do_I2C_IDLE 0009                       _do_I2C_SEND_RESTART 2214  
                            _startAbsMove 245F                      __size_of_do_I2C_RCEN 000A  
                     ___wmul@multiplicand 0033                    i1send_last_2bytes_IK@j 0079  
                    __end_ofi1_returnStop 0004                              ___ftadd@exp1 00AE  
                            ___ftadd@exp2 00AD                               i1_do_I2C_RX 18B8  
                             i1_do_I2C_TX 1BC1                               __CFG_LVP$ON 0000  
                            ___ftadd@sign 00AC                                       l210 1D5E  
                                     l202 13E1                                       l220 1D81  
                                     l214 1D67                                       l302 1789  
                                     l231 1DA1                                       l312 17E5  
                                     l306 1792                                       l227 1D96  
                                     l252 2793                                       l237 1DAB  
                                     l229 1D98                                       l254 2795  
                                     l246 2779                                       l256 279D  
                                     l424 2636                                       l509 22C5  
                                     l279 16B7                                       l754 1DDF  
                                     l770 19DA                                       _PR2 001E  
                            __CFG_CPD$OFF 0000                  i1_do_I2C_DO_NACK_RESTART 2192  
            __size_of_i2c_masterOperation 0024                      _returnStop$intlevel0 21C6  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 235F  
                   __size_of_do_I2C_RESET 000B                                       wreg 0009  
                            _startRelMove 240C                           _setHeaterToggle 16FC  
                   __end_ofi1_returnReset 0800                           ?i1_mssp1_setIRQ 0070  
                      i1_i2c1_driver_stop 2148           i2c1_driver_setBusCollisionISR@f 0031  
                                    S8763 2000                  setLEDBrightnessRange@tOB 00B7  
                       setDrvGain@setGain 00B8                              ?_EUSART_Read 0070  
                                    l1102 09ED                                      l1105 0A03  
                                    l1107 0A08                                      l1211 095B  
                                    l1208 0934                                      l1500 0F4A  
                                    l2070 1800                                      l1338 1C59  
                                    l1515 0FFF                                      l1099 09BF  
                                    l1804 0799                                      l1494 0EF2  
                                    l1497 0F13                                      l1499 0EF4  
                           i1returnStop@p 0070                                      l1780 084A  
                                    l1781 0852                                      l1773 0837  
                                    l1597 244C                                      l1864 08D6  
                                    l7103 2210                                      l6311 1F91  
                                    l6303 187B                                      l5345 1C75  
                                    l7121 2230                                      l6321 1FB6  
                                    l6313 1F9E                                      l5371 1CAC  
                                    l5363 1C9B                                      l5355 1C7D  
                                    l5339 1C6A                                      l7115 2220  
                                    l7211 1DB8                                      l6331 1FEB  
                                    l5357 1C89                                      l7133 21C6  
                                    l7109 2218                                      l7205 2729  
                                    l8013 1574                                      l6309 1F99  
                                    l5367 1CA4                                      l7143 22B0  
                                    l7127 2238                                      l7215 1DBB  
                                    l7207 1DB2                                      l5711 08C0  
                                    l6327 1FBE                                      l7137 21CC  
                                    l7153 2263                                      l7161 22E8  
                                    l7233 1E00                                      l7225 1DC1  
                                    l8033 1930                                      l8017 1586  
                                    l8009 152C                                      l5529 2446  
                                    l6337 1FFB                                      l6329 1FC2  
                                    l6281 1AB5                                      l6273 1A9E  
                                    l6601 059A                                      l7219 1DBE  
                                    l7251 19DC                                      l7315 2663  
                                    l7307 2652                                      l7331 22CD  
                                    l8051 1982                                      l5723 08E7  
                                    l6291 1AD9                                      l6267 1A99  
                                    l7261 19E2                                      l7237 19C0  
                                    l7341 1D22                                      l8053 1984  
                                    l5717 08CD                                      l5709 08B2  
                                    l8133 176E                                      l5549 233C  
                                    l5733 234C                                      l5741 27DD  
                                    l6621 05E5                                      l6613 05C7  
                                    l6605 05A9                                      l7263 2745  
                                    l7191 271A                                      l7255 19DF  
                                    l7415 0EEF                                      l7503 178B  
                                    l8215 1B6A                                      l8055 1989  
                                    l8047 197D                                      l8063 1995  
                                    l5719 08D9                                      l8127 1733  
                                    l8151 0931                                      l5751 27A5  
                                    l6537 24F8                                      l7265 2748  
                                    l7281 2752                                      l7097 2208  
                                    l7169 22BB                                      l7177 2288  
                                    l7185 2228                                      l7353 1D4D  
                                    l7441 0F59                                      l7513 17B8  
                                    l8209 1B2E                                      l8241 259B  
                                    l8233 1BB7                                      l8049 1980  
                                    l8065 19A8                                      l7601 081E  
                                    l8401 03C7                                      l6297 1850  
                                    l5753 27AD                                      l5745 27FB  
                                    l6289 1AD8                                      l6641 0630  
                                    l6633 0612                                      l6625 05F4  
                                    l6617 05D6                                      l6609 05B8  
                                    l7275 274F                                      l7195 2723  
                                    l7339 1D14                                      l7363 193F  
                                    l7451 0F70                                      l7427 0F24  
                                    l7419 0EF6                                      l8243 25A3  
                                    l8227 1B7B                                      l8171 15F1  
                                    l7611 0844                                      l7603 0823  
                                    l5691 0882                                      l8147 0915  
                                    l8411 0422                                      l8403 03D2  
                                    l6299 1858                                      l5739 27D5  
                                    l7269 274B                                      l7349 1D42  
                                    l7365 194D                                      l7373 1970  
                                    l7285 262B                                      l7461 0FA5  
                                    l7445 0F6A                                      l8245 25AB  
                                    l8421 04AE                                      l8413 0436  
                                    l8405 03E6                                      l5757 27CB  
                                    l6661 067B                                      l6653 065D  
                                    l6645 063F                                      l6637 0621  
                                    l6629 0603                                      l7199 2726  
                                    l8511 015D                                      l8503 00D9  
                                    l8263 0AF1                                      l8255 0A5B  
                                    l8191 1490                                      l8431 0509  
                                    l8423 04CB                                      l8415 0453  
                                    l8407 03FA                                      l7369 1965  
                                    l7457 0F9D                                      l7545 1A3B  
                                    l7537 1A1D                                      l8249 25B3  
                                    l8169 15D5                                      l8177 15FB  
                                    l7609 083C                                      l8433 0514  
                                    l8425 04E8                                      l8417 0470  
                                    l8409 040E                                      l6673 06AF  
                                    l6665 068A                                      l6657 066C  
                                    l6649 064E                                      l6593 057C  
                                    l7387 1D83                                      l7379 1D60  
                                    l7299 264B                                      l7467 0FAB  
                                    l8531 018C                                      l8507 014B  
                                    l7555 0BF2                                      l8259 0AA4  
                                    l7803 07BD                                      l8435 051F  
                                    l8427 04F3                                      l8419 048D  
                                    l6683 06DA                                      l6675 06B5  
                                    l7493 2602                                      l7469 0ED3  
                                    l8525 017C                                      l7565 0CAB  
                                    l7653 16C6                                      l7813 07D8  
                                    l8189 146A                                      l8197 149A  
                                    l8437 0527                                      l8429 04FE  
                                    l6669 0699                                      l6597 058B  
                                    l6589 0568                                      l7487 25F2  
                                    l7727 1C18                                      l7655 16D2  
                                    l7663 16F5                                      l7743 2583  
                                    l7823 0CD5                                      l8439 052F  
                                    l6679 06C7                                      l7489 25F8  
                                    l7729 1C4C                                      l8537 02C2  
                                    l8457 0DB8                                      l7753 0719  
                                    l7841 0D36                                      l8393 0380  
                                    l7587 235D                                      l8459 0DC7  
                                    l7659 16EE                                      l7595 080D  
                                    l7763 0732                                      l8395 0394  
                                    l8477 0E4A                                      l7669 161B  
                                    l7781 0761                                      l7757 0721  
                                    l7853 0D5C                                      l7845 0D44  
                                    l7829 0CEE                                      l8397 03A8  
                                    l8637 1F40                                      l7599 0814  
                                    l7783 076D                                      l7775 074E  
                                    l8399 03BC                                      l8663 1F85  
                                    l8647 1F67              TMR0_Load8bitPeriod@periodVal 0031  
                                    l7793 0789                                      l7785 0772  
                                    l7857 0D6A                                      l8657 1F39  
                                    l8649 1F6C                                      l7955 09D5  
                                    l7795 0795                                      l7787 0776  
                                    l8659 1F3D                                      l8765 199A  
                                    l7967 0A37                                      l7799 07AB  
                         __end_of_LEDsPwr 1434                                      STR_1 2A2C  
                                    STR_2 2A2C                                      STR_3 2863  
                     drv_init@output_gain 00B6                                      STR_4 2920  
                                    STR_5 294E                                      STR_6 2903  
                                    STR_7 2A36                                      STR_8 2A36  
                                    STR_9 2A36                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    u5115 08B3                                      u4415 1C8A  
                                    u4425 1C94                                      u5145 08CE  
                                    u4435 1C9C                                      _PMD0 0911  
                                    u5085 0889                                      _PMD1 0912  
                                    _PMD2 0913                                      _PMD3 0914  
                                    _PMD4 0915                                      _PMD5 0916  
                                    u4395 1C80                                      u7044 2784  
                                    u7045 2782                                      u8005 0D45  
                                    u8110 1545                                      u7135 0F93  
                                    u8015 0D4C                                      u7320 0C11  
                                    u7305 2561                                      u8105 152A  
                                    u4665 244D                                      u7330 0C12  
                                    u8115 1541                                      u4675 2452  
                                    u7340 0C29                                      u8300 1458  
                                    u7325 0C0D                                      u8045 0D6B  
                                    u7254 17A5                                      u7350 0C2A  
                                    u8230 15A8                                      u8310 147B  
                                    u7255 17A3                                      u8055 0D72  
                                    u8223 094F                                      u8135 1584  
                                    u7264 17C5                                      u7360 0C3F  
                                    u7265 17C3                                      u7345 0C25  
                                    u8305 1454                                      u7370 0C40  
                                    u8330 1B4A                                      u8170 1711  
                                    u8075 09C9                                      u8155 1905  
                                    u8235 15A4                                      u8315 1477  
                                    u9107 1EEC                                      u8260 15CA  
                                    u8093 0A2B                                      u8085 09F7  
                                    u7365 0C3B                                      u8405 0AEA  
                                    u7525 0859                                      u7445 0819  
                                    u9117 1F00                                      u8270 15E3  
                                    u8190 1747                      ?_do_I2C_SEND_RESTART 0070  
                                    u9207 22C9                                      u8335 1B45  
                                    u8175 170D                                      u9127 1F13  
                                    u8600 0142                                      u8520 0E94  
                                    u7640 1659                                      u8360 1B97  
                                    u6905 1942                                      u7385 0C78  
                                    u7641 1657                                      u8265 15C6  
                                    u7465 0832                                      u7545 13DA  
                                    u9137 08F6                                      u8530 0E9E  
                                    u7650 165A                                      u6835 1D17  
                                    u8515 0E7B                                      u8275 15DF  
                                    u8195 1743                                      u7555 13EF  
                                    u9147 0952                                      u8540 0E9F  
                                    u7660 1674                                      u6925 195B  
                                    u8525 0E90                                      u9157 17DB  
                                    u8365 1B92                                      u7485 083F  
                                    u7565 1417                                      u8285 1440  
                                    u9077 1F27                                      u8710 028F  
                                    u8470 0E11                                      u7670 1675  
                                    u6855 1D23                                      u6935 1966  
                                    u9167 09CC                                      u8615 015B  
                                    u7815 074F                                      u9087 1ED1  
                                    u8704 0274                                      u8640 01D9  
                                    u8480 0E1B                                      u6865 1D37  
                                    u9177 09FA                                      u8705 0272  
                                    u8465 0DF8                                      u7905 078A  
                                    u9097 1EDD                                      u8650 01DA  
                                    u8570 00F9                                      u8490 0E1C  
                                    u6875 1D43                                      u9187 0A2E  
                                    u8715 028B                                      u8643 01D5  
                                    u8635 018A                                      u8475 0E0D  
                                    u8740 02F5                                      u9197 1A1E  
                                    u8725 02C0                                      u8565 00D7  
                                    u7845 0762                                      u6974 1D72  
                                    u8750 0307                                      u8670 01FE  
                                    u8590 0141                                      u6975 1D70  
                                    u7695 1C37                                      u8735 02D3  
                                    u8575 00F5                                      u8760 0308  
                                    u8680 026B                                      u8664 01E3  
                                    u8745 02F1                                      u8665 01E1  
                                    u8770 032F                                      u8690 026C  
                                    u6995 1D8D                                      u8683 0267  
                                    u8675 01FA                                      u8595 013D  
                                    u7875 0777                                      u8780 0341  
                                    u8790 0342                                      u8775 032B  
                                    u7975 0CFE                                      u7985 0D10  
                                    _TMR2 001D                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0008                       ?i1_i2c1_driver_stop 0070  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _atoi 1F8F  
                                    _main 1F20                              ___ftpack@arg 0031  
               __size_of_do_I2C_SEND_STOP 0008                    __size_of_do_I2C_DO_ACK 0008  
                            ___ftpack@exp 0034                           _TMR0_StartTimer 2157  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      _stop 2674  
                       ??i1_do_I2C_DO_ACK 0070                             __CFG_BOREN$ON 0000  
                            ?_LED_getData 00B5                   i1_i2c1_driver_getRXData 214E  
                   ?_do_I2C_SEND_ADR_READ 0070                             __CFG_BORV$LOW 0000  
         ??_i2c1_driver_clearBusCollision 0070                                      start 0050  
                        _setHeaterPreTime 1E62                     __size_of_zeroPosition 0075  
                           _i2c_setBuffer 23AD                    LED_test_openshort@type 00B5  
                 ??_setLEDBrightnessRange 004C                             __CFG_CSWEN$ON 0000  
                           __CFG_MCLRE$ON 0000                              ___ftmul@cntr 00A4  
                _send_2bytes_latchless_IK 2770                           __end_of_i2c_ISR 2674  
                            ___ftmul@sign 00A5                        timedActiveHeatOn@t 00C0  
                ??_do_I2C_DO_NACK_RESTART 0031                             i1_do_I2C_IDLE 21AD  
                            ___fttol@exp1 00BC                             i1_do_I2C_RCEN 21BC  
                            ___fttol@lval 00B8                   __end_of_TMR0_Initialize 2398  
                            _do_I2C_RESET 22AC                            i1returnReset@p 0070  
            __size_of_TMR0_Write8bitTimer 0005            ??_TMR0_DefaultInterruptHandler 007C  
                           ?_EUSART_Write 0070            __size_of_OSCILLATOR_Initialize 000A  
           __end_of_OSCILLATOR_Initialize 2284                      ??i1_i2c1_driver_stop 0070  
                                   ?_atoi 0037                  __end_of_i2c1_driver_open 22AC  
                                   ?_main 0070                           __end_of___awdiv 1CB1  
                __end_of_i2c1_driver_stop 2166                           __end_of___ftadd 07FE  
                                   STR_10 2910                                     STR_11 2A36  
                                   STR_20 2A36                                     STR_12 2A28  
                                   STR_21 2A36                                     STR_13 2A36  
                                   STR_30 2863                                     STR_22 2A36  
                                   STR_14 2A39                                     STR_23 2A36  
                                   STR_15 2A36                                     STR_31 2A42  
                                   STR_16 2A36                                     STR_24 2A39  
                                   STR_32 2A01                                     STR_40 2828  
                                   STR_25 2A36                                     STR_17 2A36  
                                   STR_41 29E0                                     STR_33 2A40  
                           __CFG_WDTE$OFF 0000                                     STR_18 2A36  
                                   STR_42 29D8                                     STR_26 2A39  
                                   STR_50 28CB                                     STR_34 2847  
                    send_last_2bytes_IK@j 003A                                     STR_51 28CB  
                                   STR_19 2A36                                     STR_43 29E8  
                                   STR_27 2A2C                                     STR_35 2881  
                                   STR_28 2863                                     STR_44 299B  
                                   STR_60 2A03                                     STR_36 29E0  
                                   STR_52 28DD                                     STR_29 2A2C  
                                   STR_61 2A0D                                     STR_37 29D8  
                                   STR_53 28EE                                     STR_45 289B  
                                   STR_54 29EE                                     STR_62 2A3E  
                                   STR_38 29E8                                     STR_46 29AF  
                                   STR_70 296B                                     STR_55 29EE  
                                   STR_63 29B8                                     STR_47 29A6  
                                   STR_39 299B                                     STR_71 2990  
                                   STR_56 2A1C                                     STR_72 29FE  
                                   STR_64 29C0                                     STR_48 2865  
                                   STR_57 2A20                                     STR_73 2A08  
                                   STR_65 2984                                     STR_49 28FF  
                                   STR_58 2A24                                     STR_74 29D0  
                                   STR_66 295D                                     STR_59 2A22  
                                   STR_75 29F0                                     STR_67 293F  
                                   STR_76 2A17                                     STR_68 29C8  
                                   STR_77 2A12                                     STR_69 29F7  
                                   STR_78 28C8                                     STR_79 28B4  
                         __end_of___lldiv 1D56                                     ?_stop 00B5  
                         __end_of___ftmul 0D9D                           ___awdiv@divisor 0031  
                         __end_of___llmod 1979                           __end_of___fttol 08F0  
                                   _T2CON 001F                __end_of_i2c1_driver_TXData 21D4  
                          __CFG_DEBUG$OFF 0000                          __end_ofi1_LEDsOn 2557  
                                   i1l210 1A4E                                     i1l220 1A6D  
                                   i1l214 1A56                                     i1l231 1A87  
                                   i1l227 1A7F                                     i1l252 26B9  
                                   i1l237 1A8E                                     i1l229 1A80  
                                   i1l254 26BA                                     i1l246 26A2  
                                   i1l256 26C1                                     i1l360 0013  
                                   i1l363 0022                                     i1l436 2497  
                                   i1l365 002F                                     i1l374 004B  
                                   i1l367 0039                                     i1l369 0043  
                                   i1l754 1BED                                     i1l770 18D2  
                         ___awdiv@counter 0036                          __end_of_LEDpower 2A3E  
                                   _OSCEN 091D                                     _TMR0H 0016  
                                   _TMR0L 0015                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                      __end_ofsin@coeff_a 293F                        __end_ofsin@coeff_b 2984  
       __size_of_TMR0_SetInterruptHandler 0009             i1send_2length_2bytes_IK@data1 0020  
           i1send_2length_2bytes_IK@data2 0022                 ?_TMR0_SetInterruptHandler 0031  
                             i2c_open@ret 0034                          __end_of_TMR0_ISR 2315  
                        __end_of_TMR2_ISR 2322                           __end_of_execCmd 0542  
                      __size_ofi1_i2c_ISR 0020                             ___awtoft@sign 003E  
              __end_of_i2c1_driver_isNACK 232F                           __end_of_dpowers 2828  
                          _WDT_Initialize 2196                                     _errno 0162  
                       _timedActiveHeatOn 08F0                           __end_of_isdigit 233E  
            ?i1_do_I2C_SEND_RESTART_WRITE 0070                ?_do_I2C_SEND_RESTART_WRITE 0070  
                           ___ftpack@sign 0035                                     atoi@a 003C  
                                   atoi@s 003E                                     _putch 21D4  
                   ??_do_I2C_SEND_RESTART 0031                 send_2bytes_latchless_IK@j 0037  
                       ?i1_mssp1_clearIRQ 0070    __end_of_i2c1_driver_setBusCollisionISR 2271  
 __size_of_i2c1_driver_setBusCollisionISR 0009            _i2c1_driver_setBusCollisionISR 2268  
                            _zeroPosition 151C                                     pclath 000A  
                      setDrvPiezoOnTime@t 00BD                   __size_of_mssp1_clearIRQ 0003  
                    i1_i2c1_driver_TXData 21A8                        ?_timedActiveHeatOn 00B5  
      __end_ofi1_send_2bytes_latchless_IK 26C3                i1_send_2bytes_latchless_IK 269A  
                    setLEDPwr@topOrBottom 00B7                            _i2c_setAddress 223C  
                  ?_do_I2C_SEND_ADR_WRITE 0070                                     status 0003  
                      ??i1_mssp1_clearIRQ 0070                                     wtemp0 007E  
                         _TMR2_StartTimer 215A                           __end_of_stricmp 1881  
        __size_of_TMR2_LoadPeriodRegister 0005                           __end_of_strcspn 27D0  
                         __end_of_toupper 234E                         ??_main_initialize 00BD  
                          ?_i2c_setBuffer 0031                       _send_last_2bytes_IK 1D56  
                    i1_i2c1_driver_isNACK 22D8                         _setHeaterPostTime 1CB1  
                     ??_timedActiveHeatOn 00BB                             _fsmStateTable 0220  
                         __initialization 0052            __size_ofi1_do_I2C_SEND_RESTART 0004  
                              _i2c_poller 22CD             __end_ofi1_do_I2C_SEND_RESTART 2186  
                          _remainingSteps 0142                              __end_of_atoi 2000  
                              _i2c_status 0120                            ?i1_do_I2C_IDLE 0070  
                            __end_of_main 1F8F                        ?_setHeaterPostTime 00BD  
                          ?i1_do_I2C_RCEN 0070                              __end_of_stop 269A  
               LED_readConfig@topOrBottom 00C6                __end_ofi1_do_I2C_SEND_STOP 218A  
                        __end_of_i2c_open 1B27                            ??_EUSART_Write 0031  
                 __end_of_TMR2_Initialize 2371               ?_INTERRUPT_InterruptManager 0070  
                           ?_LED_testComm 00CA                   __end_of_setHeaterToggle 1779  
                          i1_do_I2C_RESET 21E6                             _do_I2C_DO_ACK 2224  
                                  ??_atoi 0039                  _TMR2_SetInterruptHandler 2256  
                                  ??_main 00DE                             ___fttol@sign1 00B7  
                     ??_setHeaterPostTime 004D                                    ??_stop 0049  
           __size_of_i2c1_driver_sendNACK 0004                           _TMR2_WriteTimer 21A3  
                    ?_send_last_2bytes_IK 0031                             ?_drv_write_DC 00B8  
                               ??_LEDsPwr 0048                    __end_of_WDT_Initialize 219A  
           __size_of_i2c1_driver_resetBus 0001                               drv_read@reg 004B  
                      setHeaterPostTime@t 00BD                 __end_of_timedActiveHeatOn 0988  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                              ?_setMoveMask 00B5  
                      setHeaterToggle@num 00B5                          _piezo_on_time_ms 00E9  
                 __end_of_TMR0_StartTimer 215A                             _drv_fifo_sine 1000  
                        ___llmod@dividend 0043                      __size_of_getMoveMask 004D  
                        ___awdiv@dividend 0033                          __end_of___awtoft 259A  
                                  _ANSELA 018C                                    ?_putch 0070  
                                  _ANSELB 018D                                    _ANSELC 018E  
                  __end_of_i2c_setAddress 2244                          __end_of___ftpack 0869  
                      __CFG_RSTOSC$HFINT1 0000                                    _T0CON0 0017  
                                  _T0CON1 0018                   ?i1_do_I2C_SEND_ADR_READ 0070  
                    drv2665@drv_fifo_sine 10F4                     ?i1_i2c1_driver_TXData 0070  
                                  _RC1REG 0199                                    _RC1STA 019D  
                                  _ODCONA 028C                                    _ODCONB 028D  
                                  _ODCONC 028E                                    i1l5211 1A50  
                                  i1l5219 1A6E                                    i1l6343 21E6  
                                  i1l6513 242C                                    i1l6353 21AD  
                                  i1l8301 25CA                 ??i1_i2c1_driver_getRXData 0070  
                                  i1l8311 1BCA                                    i1l8303 1BC1  
                                  i1l6377 21BC                                    i1l8321 1BD0  
                                  i1l8315 1BCD                                    i1l8307 1BC7  
                                  i1l8333 18B8                                    i1l8351 18D7  
                                  i1l8361 26EF                                    i1l8265 21F4  
                                  i1l8273 21ED                                    i1l8281 218A  
                                  i1l8329 1C09                                    i1l8371 26F6  
                                  i1l8291 25C4                                    i1l8347 18D4  
                                  i1l8365 26F2                                    i1l8357 18DA  
                                  i1l8359 26EC                                    i1l7903 218E  
                                  i1l8295 25C7                                    i1l8287 25BD  
                                  i1l8551 24D6                                    i1l8377 26F9  
                                  i1l7915 0002                                    i1l7909 2192  
                                  i1l7919 07FE                                    i1l8559 24E6  
                                  i1l7891 2182                                    u401_24 1A5F  
                                  u401_25 1A5D                                    i1l7885 217E  
                                  i1l7879 217A                                    i1l7897 2186  
                                  u403_25 1A77                                    _LEDsOn 2557  
                                  u408_24 26AB                                    u408_25 26A9  
           ??i1_do_I2C_SEND_RESTART_WRITE 0070                                    u523_25 2540  
                                  _OSCFRQ 091F                    ??_do_I2C_SEND_ADR_READ 0032  
                         drv_write_DC@val 00B8                                    _TX1REG 019A  
                    __size_of_getPosition 003F                                    _WDTCON 0097  
                                  _TX1STA 019E                                 ??_i2c_ISR 0036  
             __size_of_LED_test_openshort 007C                 __end_of_setHeaterPostTime 1D03  
                   ?i1_i2c1_driver_isNACK 0070                            __CFG_PWRTE$OFF 0000  
           LED_test_openshort@topOrBottom 00B7                     _i2c1_driver_getRXData 2169  
                     LED_getData@readData 00C0                   __size_of_LED_readConfig 0029  
                     _do_I2C_RX$intlevel0 19C0                     __size_ofi1_returnStop 0002  
             __end_of_do_I2C_DO_NACK_STOP 2234                         __end_ofi1_i2c_ISR 24F6  
                                  ___wmul 2443                                 ??___awdiv 0035  
   __end_of_i2c1_driver_clearBusCollision 2142    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 213F                                 ??___ftadd 0049  
                          __CFG_STVREN$ON 0000                                    _doMove 0988  
                               ??___lldiv 0039                                 ??___ftmul 0045  
                               ??___llmod 0047                                 ??___fttol 00B3  
             i1send_2bytes_latchless_IK@j 0076           __size_of_do_I2C_DO_NACK_RESTART 0008  
                       startAbsMove@steps 00B5                          __end_of_drv_init 1F20  
                        __end_of_drv_read 1A47                    __end_ofi1_do_I2C_RESET 21ED  
                        __end_of_drv_sine 13CC                   ?_send_2length_2bytes_IK 003C  
                     _EUSART_Transmit_ISR 247C                            ??_LED_testComm 004C  
                        ?_TMR0_Initialize 0070                          ___awdiv@quotient 0038  
                          ?_do_I2C_DO_ACK 0070                          __end_of_parseCmd 06E4  
                                  _printf 0ECE                                    _strchr 1800  
                                  _strtok 1A90                                    _strspn 27D0  
                               ??_execCmd 004E                     ___ftmul@f3_as_product 00A1  
                  i2c1_driver_setI2cISR@f 0031                     i2c_setAddress@address 0032  
                   ??_send_last_2bytes_IK 0036               __end_of_i2c1_driver_sendACK 219E  
                          _PMD_Initialize 21FC            __end_of_do_I2C_DO_ADDRESS_NACK 2741  
                          ??_drv_write_DC 00BC                                 ??_isdigit 0031  
                         ?_WDT_Initialize 0070               __end_of_i2c1_driver_restart 2163  
                            ?_returnReset 0031                   timedActiveHeatOn@onTime 00B5  
           _do_I2C_DO_NACK_STOP$intlevel0 2230                     _i2c1_driver_setI2cISR 2271  
             __end_of_i2c1_driver_startRX 2169                        LEDsPwr@topOrBottom 0046  
       __size_ofi1_do_I2C_DO_ADDRESS_NACK 0024            __end_ofi1_do_I2C_SEND_ADR_READ 21FC  
                 __end_of_TMR2_StartTimer 215D                   timedActiveHeatOn@topOrB 00B9  
TMR2_SetInterruptHandler@InterruptHandler 0031  TMR0_SetInterruptHandler@InterruptHandler 0031  
               ?i1_do_I2C_DO_ADDRESS_NACK 0070                                 ??_stricmp 0035  
                               ??_strcspn 003A                                 ??_toupper 0031  
                    ?_EUSART_Transmit_ISR 0070                           ?_i2c_setAddress 0070  
                       i1_do_I2C_TX_EMPTY 26EC                      __size_of_EUSART_Read 0020  
                       _SYSTEM_Initialize 2398            __size_ofi1_send_last_2bytes_IK 0049  
                 __end_of__initialization 00C1             __end_ofi1_send_last_2bytes_IK 1A90  
                         ??_i2c_setBuffer 0035            _do_I2C_SEND_ADR_READ$intlevel0 22E8  
                        _do_I2C_SEND_STOP 221C                              i1_returnStop 0002  
                              ___ftadd@f1 00A6                                ___ftadd@f2 00A9  
                         _getMotionStatus 259A                     i1_do_I2C_DO_NACK_STOP 218E  
                      __size_of_do_I2C_RX 0044                        __size_of_do_I2C_TX 0059  
                      ?i1_do_I2C_TX_EMPTY 0070                        ?_SYSTEM_Initialize 0070  
                      __size_of_doAbsMove 02B3                          _moveVector_downs 0146  
              __end_of_mssp1_IRQisEnabled 2298                       _i2c_masterOperation 25E1  
                __size_of_do_I2C_TX_EMPTY 002F                                ___awtoft@c 0039  
                               ?i1_LEDsOn 0027                           ??i1_do_I2C_IDLE 0070  
                         ??i1_do_I2C_RCEN 0070                                ___ftmul@f1 003F  
                              ___ftmul@f2 0042                __end_of_mssp1_waitForEvent 22CD  
                    __size_of_LED_getData 0087                                ___fttol@f1 00AF  
                             ?_i2c_poller 0070                            __pcstackCOMMON 0070  
              ??i1_do_I2C_DO_NACK_RESTART 0070                       _do_I2C_TX$intlevel0 1DB2  
                     ??i1_do_I2C_TX_EMPTY 0070            __end_of_send_2length_2bytes_IK 23F2  
                            __pidataBANK0 0800                              __pidataBANK1 21E0  
                            __pidataBANK2 21DA                              __pidataBANK4 2516  
                     ??_SYSTEM_Initialize 0033                                _absCommand 013E  
                               ?_TMR0_ISR 0070                                 ?_TMR2_ISR 0070  
                      __size_of_doRelMove 0131                   __end_of_TMR2_WriteTimer 21A8  
                   i1_i2c1_driver_sendACK 2172                     i1i2c1_driver_TXData@d 0070  
                         ?i1_do_I2C_RESET 0070                             __end_of_putch 21DA  
                        ?_TMR2_Initialize 0070                     i1_i2c1_driver_restart 2145  
       __size_ofi1_send_2length_2bytes_IK 0018                    __end_of_PMD_Initialize 2204  
                        ?_setHeaterToggle 00B5                 ?i1_send_2length_2bytes_IK 0020  
                      __size_of_getActive 004D                              ?i1_do_I2C_RX 0070  
                            ?i1_do_I2C_TX 0070                     i1_i2c1_driver_startRX 214B  
                        ??i1_mssp1_setIRQ 0070                      ?_i2c_masterOperation 0070  
            ??i1_do_I2C_SEND_RESTART_READ 0070                        __size_of_commCheck 00C7  
                __end_of_setHeaterPreTime 1EBD                              LED_getData@j 00C4  
              __size_of_timedActiveHeatOn 0098                           i1_do_I2C_DO_ACK 218A  
             __end_of_TMR0_Load8bitPeriod 21B7                 __end_ofi1_do_I2C_TX_EMPTY 2716  
                        ?_TMR0_StartTimer 0070                    _do_I2C_DO_NACK_RESTART 2234  
                  ??i1_i2c1_driver_TXData 0070                            _do_I2C_TX$1134 0034  
               __end_of_SYSTEM_Initialize 23AD                     ??_EUSART_Transmit_ISR 0070  
                                 ??_putch 0033                            _mssp1_clearIRQ 216F  
                              __pbssBANK0 004E                                __pbssBANK1 00DF  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                 __size_of_calcHeaterPins 0075                       _TMR0_Write8bitTimer 219E  
              ??_send_2bytes_latchless_IK 0033                      __end_of_EUSART_Write 264E  
                                 ?_LEDsOn 0044                            _moveVector_ups 004E  
                 _TMR2_LoadPeriodRegister 21B7                                 ?_i2c_open 0070  
                 drv_write_DC@duration_ms 00BA                                _activeMask 00E3  
                ??i1_i2c1_driver_sendNACK 0070                           drv2665@drv_sine 11E8  
                      __size_of_drv_reset 000A                    ??i1_i2c1_driver_isNACK 0070  
              __size_of_setHeaterPostTime 0052                        __size_of_drv_write 0024  
             __size_of_EUSART_Receive_ISR 001C                        __size_of_setLEDPwr 001E  
                  ?_i2c1_driver_getRXData 0070                  ??i1_i2c1_driver_resetBus 0070  
                            drv_read@buff 004C                                ??i1_LEDsOn 002D  
                   _do_I2C_IDLE$intlevel0 2263                            _SSP1DATPPSbits 0E21  
            __size_of_i2c_busCollisionISR 0003                                __pmaintext 1F20  
                              doAbsMove@i 00CE                             ??_do_I2C_IDLE 0031  
                      __size_of_setActive 0076                             ??_do_I2C_RCEN 0031  
        __end_of_TMR0_SetInterruptHandler 2256                   __size_of_TMR0_StopTimer 0003  
          __size_of_setLEDBrightnessRange 001E                                   ?___wmul 0031  
           __end_of_setLEDBrightnessRange 24B8                                ??_TMR0_ISR 007C  
                         __CFG_PPS1WAY$ON 0000                                _cmd_struct 01B8  
                              ??_TMR2_ISR 0071                                   ?_doMove 00BF  
                         ??_do_I2C_DO_ACK 0031                                __pintentry 0004  
                       startRelMove@steps 00B5                     setHeaterToggle@topOrB 00B7  
                    ?_TMR0_Write8bitTimer 0070                       i2c_setBuffer@buffer 0031  
                               ?___awtoft 0039                                 ?___ftpack 0031  
                          _SSP1CLKPPSbits 0E20                                   ?_printf 00A0  
                         ?_PMD_Initialize 0070                                _fifo_check 234E  
                                 ?_strchr 0031            ?_i2c1_driver_clearBusCollision 0070  
                                 ?_strtok 003F                                   ?_strspn 0038  
                   ??_i2c_masterOperation 0037                         ?_i2c1_driver_open 0070  
                       __end_of_do_I2C_RX 1A00                         __end_of_do_I2C_TX 1E07  
                       ?_i2c1_driver_stop 0070                             _eusartRxCount 0056  
                       __end_of_doAbsMove 0378                  ?i1_do_I2C_SEND_ADR_WRITE 0070  
                                 _SP1BRGH 019C                                   _SP1BRGL 019B  
                  ?_i2c1_driver_setI2cISR 0031                                   _LEDsPwr 13D0  
                      ??_i2c1_driver_open 0031                        ??_i2c1_driver_stop 0031  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                           ?_mssp1_setIRQ 0070                           _main_initialize 0B01  
                                 _NVMADRH 0892                                   _NVMADRL 0891  
                                 _NVMDATH 0894                                   _OSCTUNE 091E  
                                 _NVMDATL 0893                                   _NVMCON2 0896  
                                 _SSP1ADD 0212                                   _SSP1BUF 0211  
                  __end_of_mssp1_clearIRQ 2172                                   _SSP1MSK 0213  
                 __end_of_getMotionStatus 25BD                   __size_of_TMR2_StopTimer 0003  
                     __size_of_i2c_poller 000B                          ?_TMR2_StartTimer 0070  
                 ??_do_I2C_SEND_ADR_WRITE 0032       _do_I2C_SEND_RESTART_WRITE$intlevel0 2210  
                       __end_of_doRelMove 0ECE               ??_do_I2C_SEND_RESTART_WRITE 0031  
                    __size_of_setMoveMask 0073                    ?i1_do_I2C_DO_NACK_STOP 0070  
                      _i2c1_driver_TXData 21CE                      __end_of_LED_testComm 1680  
                              ??_i2c_open 0033                                 ?_drv_init 00B6  
                               ?_drv_read 00B5                           __size_of_LEDsOn 0021  
                      _i2c1_driver_i2cISR 0168               ?i1_send_2bytes_latchless_IK 0070  
       LED_setBrightnessRange@topOrBottom 0046                         __end_of_getActive 1B74  
                                 _i2c_ISR 264E                                 ?_parseCmd 0045  
                       __end_of_commCheck 0B01                      __end_of_drv_write_DC 1C5F  
                   _returnReset$intlevel0 21CC                     _do_I2C_RCEN$intlevel0 2288  
                      _i2c1_driver_isNACK 2322                       ?_i2c1_driver_TXData 0070  
                            drv_write@reg 004B                ??_TMR2_SetInterruptHandler 0033  
                          _LED_readConfig 26C3          _do_I2C_DO_ADDRESS_NACK$intlevel0 271A  
                      __end_of_TMR0_RANGE 2A36                        __end_of_TMR2_RANGE 2A33  
                  ?i1_i2c1_driver_sendACK 0070                                doRelMove@j 00DC  
                  __size_ofi1_returnReset 0002                                   ___awdiv 1C5F  
                                 ___ftadd 06E4                                   ___lldiv 1D03  
               __size_ofi1_mssp1_clearIRQ 0003                           __size_of___wmul 001C  
                                 ___ftmul 0CBC                                   ___llmod 1936  
                                 ___fttol 0869                     ??_TMR0_Write8bitTimer 0070  
                         __size_of_doMove 00B2                    ?i1_i2c1_driver_restart 0070  
                        ?_TMR2_WriteTimer 0070                         ??_do_I2C_TX_EMPTY 0031  
                     ?_i2c1_driver_isNACK 0070                                   _cmdRead 0164  
                  ?i1_i2c1_driver_startRX 0070                                ??___awtoft 003C  
                              ??___ftpack 0036                   __end_ofi1_do_I2C_DO_ACK 218E  
                                 __ptext1 0542                                   __ptext2 1A90  
                                 __ptext3 27D0                                   __ptext4 27A0  
                                 __ptext5 1800                                   __ptext6 184D  
                                 __ptext7 233E                                   __ptext8 1F8F  
                                 __ptext9 232F               __size_ofi1_i2c1_driver_stop 0003  
                     __end_of_do_I2C_IDLE 2268                           __size_of_printf 0132  
                     __end_of_do_I2C_RCEN 228E                         __end_of_drv_reset 22A2  
                                 _execCmd 0378                           __size_of_strchr 001A  
                         __size_of_strtok 004B                           __size_of_strspn 0030  
                       __end_of_drv_write 2629                                   _dpowers 2800  
                ??_LED_setBrightnessRange 00A0                     _OSCILLATOR_Initialize 227A  
                                 _readIdx 0052                                 _T2CONbits 001F  
                                 doMove@t 00C6                                   _isdigit 232F  
                          setActive@onOff 00B7                         __end_of_setLEDPwr 24D6  
             __end_of_do_I2C_SEND_RESTART 221C                            ??_mssp1_setIRQ 0031  
                    ??_i2c1_driver_TXData 0031                  ??_PIN_MANAGER_Initialize 0031  
                  i2c_masterOperation@ret 0039                        i1_do_I2C_SEND_STOP 2186  
                 __end_ofdrv2665@drv_sine 12DA                         __end_of_setActive 1607  
                         ?_mssp1_clearIRQ 0070                _do_I2C_SEND_STOP$intlevel0 2220  
              __size_ofi1_do_I2C_TX_EMPTY 002A                 ??_TMR2_LoadPeriodRegister 0031  
                _do_I2C_SEND_RESTART_READ 2204                __size_of_SYSTEM_Initialize 0015  
                              _setDrvGain 1979                         setActive@probeNum 00B5  
                                 clrloop0 22F1                                _setDrvPeak 2371  
                                 _stricmp 184D                                   _strcspn 27A0  
                                 _toupper 233E                      __size_of_returnReset 0006  
                    end_of_initialization 00C1                      drv_init@idle_timeout 00B8  
                    ??_i2c1_driver_isNACK 0031                                _second_top 015E  
                              getActive@i 00B7               TMR0_Write8bitTimer@timerVal 0070  
                              ??_drv_init 00BA                                ??_drv_read 0049  
                            setLEDPwr@pwr 00B5                                   init_ram 22FC  
            __end_of_i2c1_driver_sendNACK 13D0                       ?i1_do_I2C_SEND_STOP 0070  
                                 initloop 22FD           __size_ofi1_i2c1_driver_sendNACK 0004  
                              ??_parseCmd 0046                    __end_of_LED_readConfig 26EC  
                       _EUSART_Initialize 23F2              __end_of_i2c1_driver_resetBus 2139  
                         ___lldiv@divisor 0031           __size_ofi1_i2c1_driver_resetBus 0001  
                         ___lldiv@counter 003E                        ?_EUSART_Initialize 0070  
                                 printf@c 00B4                                   printf@f 00A0  
                              _motionType 0055                 _do_I2C_SEND_RESTART_WRITE 220C  
                       LEDsOn@topOrBottom 0048                     i1_do_I2C_SEND_RESTART 2182  
        __end_ofi1_do_I2C_DO_ADDRESS_NACK 25E1           __end_ofi1_do_I2C_SEND_ADR_WRITE 21F4  
                     ??_EUSART_Initialize 0031                          ??_WDT_Initialize 0031  
                               i1_i2c_ISR 24D6                      ??i1_do_I2C_SEND_STOP 0070  
                                 strspn@i 003C                                _returnStop 21C2  
                 __end_of_main_initialize 0BDE                  _TMR0_SetInterruptHandler 224D  
                             ?_fifo_check 0070                                 _PORTCbits 000E  
                __end_of_do_I2C_SEND_STOP 2224        __end_ofi1_do_I2C_SEND_RESTART_READ 217E  
              i1_do_I2C_SEND_RESTART_READ 217A                      __size_ofi1_do_I2C_RX 003F  
                    __size_ofi1_do_I2C_TX 004E                    _inter_step_interval_ms 016A  
                        ??_i2c_setAddress 0031                             ??_getMoveMask 0049  
                   __size_of_EUSART_Write 0025                             i1_returnReset 07FE  
                             returnStop@p 0031                          ?_getMotionStatus 00B5  
                           ??_getPosition 0049                       LED_test_openshort@j 00BA  
                        __CFG_FEXTOSC$OFF 0000                            _calcHeaterPins 14A7  
        __end_of_send_2bytes_latchless_IK 27A0                __end_of_LED_test_openshort 16FC  
                 TMR2_WriteTimer@timerVal 0070                                 _RXPPSbits 0E24  
               __end_of_EUSART_Initialize 240C            send_last_2bytes_IK@latch_start 0033  
             LED_setBrightnessRange@range 0044                            __end_of_LEDsOn 2578  
        __end_ofi1_send_2length_2bytes_IK 23DA                           ?_LED_readConfig 00C6  
           __size_of_do_I2C_SEND_ADR_READ 000C                          ??i1_do_I2C_RESET 0070  
                             ___ftmul@exp 00A0                              ??_i2c_poller 0037  
                          _TMR0_StopTimer 2139                               _do_I2C_IDLE 225F  
                             _do_I2C_RCEN 2284                         __size_ofi1_LEDsOn 0021  
                 LED_testComm@topOrBottom 00CA      __end_of_TMR2_DefaultInterruptHandler 224D  
   __size_of_TMR2_DefaultInterruptHandler 0009              _TMR2_DefaultInterruptHandler 2244  
             __end_of_send_last_2bytes_IK 1DAE                             ?_startAbsMove 00B5  
                          __end_of___wmul 245F                            __end_of_doMove 0A3A  
                            _EUSART_Write 2629                         __size_of_TMR0_ISR 000D  
                              ?i1_i2c_ISR 0070                         __size_of_TMR2_ISR 000D  
                      _mssp1_IRQisEnabled 228E                    i1_i2c1_driver_sendNACK 2176  
                        ?i1_do_I2C_DO_ACK 0070                    ?_OSCILLATOR_Initialize 0070  
            __size_of_do_I2C_DO_NACK_STOP 0008          TMR2_LoadPeriodRegister@periodVal 0031  
                          __end_of_printf 1000                        _mssp1_waitForEvent 22C2  
     __size_ofi1_send_2bytes_latchless_IK 0029                    i1_i2c1_driver_resetBus 2137  
                          __end_of_strchr 181A           __size_of_LED_setBrightnessRange 00DE  
                 ?_do_I2C_DO_NACK_RESTART 0070                            __end_of_strtok 1ADB  
                          __end_of_strspn 2800                         setHeaterPreTime@t 00BD  
                     start_initialization 0052                             ?_startRelMove 00B5  
                       ?_setHeaterPreTime 00BD                       _i2c_busCollisionISR 2142  
                __size_of_TMR0_Initialize 0014           __size_of_PIN_MANAGER_Initialize 0033  
                     ?_mssp1_IRQisEnabled 0070                            ?i1_returnReset 0070  
                ?i1_i2c1_driver_getRXData 0070                    __end_of_calcHeaterPins 151C  
                   __size_of_LED_testComm 0079                            _TMR2_StopTimer 213C  
                           ??_EUSART_Read 0031       __end_ofi1_do_I2C_SEND_RESTART_WRITE 2182  
             i1_do_I2C_SEND_RESTART_WRITE 217E                              _first_bottom 015A  
                      ??_setHeaterPreTime 00BF                               ?_setDrvGain 00B5  
                             ?_setDrvPeak 00B5                       ?_mssp1_waitForEvent 0070  
                           _second_bottom 0152                               putch@txData 0033  
                      __end_of_i2c_poller 22D8              __size_of_i2c1_driver_sendACK 0004  
                         i2c_open@address 0035                       __end_of_getMoveMask 1BC1  
                 i2c_setBuffer@bufferSize 0033                                  ??_LEDsOn 004A  
                 ??_i2c1_driver_getRXData 0031                     __size_of_drv_write_DC 0050  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                         ___llmod@divisor 003F                             ??_LED_getData 00B9  
                     __size_of_fifo_check 0011                           ___llmod@counter 0048  
                   __end_of_i2c_setBuffer 23C2                       __end_of_getPosition 1936  
                       __size_of_i2c_open 004C                    __end_of_TMR0_StopTimer 213C  
                     _heater_post_time_ms 00EB                     i1_send_last_2bytes_IK 1A47  
     LED_setBrightnessRange@LED_configReg 0048                      ?_i2c_busCollisionISR 0070  
                        __CFG_LPBOREN$OFF 0000                      __end_of_mssp1_setIRQ 216F  
                            _drv_peak_val 016E                      ??_mssp1_IRQisEnabled 0031  
                        i1_do_I2C_TX$1134 0073                                LEDsPwr@pwr 0044  
                        ??_PMD_Initialize 0031                     __end_ofi1_do_I2C_IDLE 21B2  
                   __end_ofi1_do_I2C_RCEN 21C2                                  ??___wmul 0035  
                  ?i1_do_I2C_SEND_RESTART 0070                      ??_mssp1_waitForEvent 0031  
                                ??_doMove 00C1                          i1_mssp1_clearIRQ 2154  
                          ??_startAbsMove 0049                             ?_do_I2C_RESET 0070  
                             __pdataBANK0 005A                               __pdataBANK1 00E9  
                             __pdataBANK2 016A                               __pdataBANK4 0220  
               _do_I2C_TX_EMPTY$intlevel0 2745             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0031                         _setDrvPiezoOnTime 1E07  
                            _LED_testComm 1607                                  ??_printf 00A6  
                 ??_i2c1_driver_setI2cISR 0033                          ?_main_initialize 0070  
                                ??_strchr 0035            i1send_2bytes_latchless_IK@data 0070  
          __end_of_do_I2C_DO_NACK_RESTART 223C                                  ??_strtok 0041  
                                ??_strspn 003A                      _i2c1_driver_sendNACK 13CC  
                       __size_of___awtoft 0022                         __size_of___ftpack 0065  
                      ?_setDrvPiezoOnTime 00BD                               __pbssBIGRAM 2790  
             __end_of_EUSART_Transmit_ISR 249A                            ??_startRelMove 0049  
                i1_do_I2C_DO_ADDRESS_NACK 25BD                    __end_of_TMR2_StopTimer 213F  
                          setDrvGain@gain 00B5                               __pbssCOMMON 007D  
                                ?_LEDsPwr 0044                                 ___latbits 0003  
                    _i2c1_driver_resetBus 2138                              _drv_write_DC 1C0F  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK4 0240                           fifo_check@reply 00B7  
       __size_ofi1_do_I2C_DO_NACK_RESTART 0004                  __size_of_TMR2_Initialize 0012  
                               _do_I2C_RX 19BC                 ?i1_do_I2C_DO_NACK_RESTART 0070  
                               _do_I2C_TX 1DAE                           ?_calcHeaterPins 0070  
                 ??i1_do_I2C_DO_NACK_STOP 0070                                 _doAbsMove 00C5  
                __size_of_setHeaterToggle 007D                              _isdigit$2156 0031  
                     ??_setDrvPiezoOnTime 00BF                             ?_zeroPosition 00B5  
                           LEDsOn@LEDpins 0044            __size_of_do_I2C_SEND_ADR_WRITE 000B  
           __size_ofi1_i2c1_driver_TXData 0005                __end_of_EUSART_Receive_ISR 2443  
           __end_of_do_I2C_SEND_ADR_WRITE 22C2                __size_of_EUSART_Initialize 001A  
               __size_of_i2c1_driver_open 000A                                sin@coeff_a 2930  
                              sin@coeff_b 2978                              doMove@t_1566 00C8  
                            doMove@t_1567 00CA                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070           _do_I2C_SEND_ADR_WRITE$intlevel0 22BB  
        __size_ofi1_do_I2C_SEND_ADR_WRITE 0007                       __end_of_EUSART_Read 2516  
            __size_of_TMR0_Load8bitPeriod 0005                                 _doRelMove 0D9D  
                         _do_I2C_TX_EMPTY 2741                         parseCmd@cmdString 0047  
                   _TMR0_InterruptHandler 01E3                                 __pnvBANK0 005E  
                               __pnvBANK3 01E1                    _LED_setBrightnessRange 0BDE  
                 ??i1_i2c1_driver_sendACK 0070                  __size_of_TMR0_StartTimer 0003  
                       __size_of_drv_init 0063                         __size_of_drv_read 0047  
                         ?_TMR0_StopTimer 0070                     ??_i2c_busCollisionISR 0070  
           __size_ofi1_i2c1_driver_isNACK 000C                    _PIN_MANAGER_Initialize 181A  
                 ??i1_i2c1_driver_restart 0070                                 _getActive 1B27  
                       __size_of_parseCmd 01A2                              setDrvPeak@pk 00B5  
                     __end_of_drv_address 2A45                      EUSART_Read@readValue 0032  
                 ??i1_i2c1_driver_startRX 0070                            ??_do_I2C_RESET 0031  
                i1_send_2length_2bytes_IK 23C2                       __end_of_LED_getData 1800  
                                ?___awdiv 0031                                 __ptext100 215D  
                               __ptext101 1C5F                                 __ptext110 2196  
                               __ptext102 14A7                                 __ptext111 235F  
                               __ptext103 215A                                 __ptext112 2256  
                               __ptext104 2157                                 __ptext121 24D6  
                               __ptext113 2384                                 __ptext105 2557  
                               __ptext130 21ED                                 __ptext122 2154  
                               __ptext114 224D                                 __ptext106 23DA  
                               __ptext131 21F4                                 __ptext123 18B8  
                               __ptext115 21FC                                 __ptext107 1D56  
                               __ptext140 22D8                                 __ptext132 2186  
                               __ptext124 1BC1                                 __ptext116 181A  
                               __ptext108 2770                                 __ptext141 21A8  
                               __ptext133 2182                                 __ptext125 25BD  
                               __ptext117 227A                                 __ptext109 2398  
                                ?___ftadd 00A6                                 __ptext150 2172  
                               __ptext142 214E                                 __ptext134 217E  
                               __ptext126 2192                                 __ptext118 23F2  
                               __ptext151 2142                                 __ptext143 2176  
                               __ptext135 217A                                 __ptext127 218E  
                               __ptext119 24F6                                 __ptext160 23C2  
                               __ptext152 213F                                 __ptext144 2137  
                               __ptext136 21AD                                 __ptext128 218A  
                               __ptext161 1A47                                 __ptext153 2315  
                               __ptext145 214B                                 __ptext137 21E6  
                               __ptext129 21BC                                 __ptext162 269A  
                               __ptext154 2244                                 __ptext146 07FE  
                               __ptext138 26EC                                 __ptext163 219E  
                               __ptext155 21A3                                 __ptext147 0002  
                               __ptext139 2151                                 __ptext164 2139  
                               __ptext156 213C                                 __ptext148 2148  
                               __ptext165 247C                                 __ptext157 2308  
                               __ptext149 2145                                 __ptext166 2427  
                               __ptext158 1881                                 __ptext159 2536  
             __end_of_i2c_masterOperation 2605                                  ?___lldiv 0031  
                                ?___ftmul 003F                                  ?___llmod 003F  
                                ?___fttol 00AF                                 _commCheck 0A3A  
               __end_of_setDrvPiezoOnTime 1E62                  ??_do_I2C_DO_ADDRESS_NACK 0031  
             _i2c1_driver_busCollisionISR 00E7                              _eusartRxHead 0058  
                     __size_of_setDrvGain 0043         __size_of_send_2bytes_latchless_IK 0030  
                            _eusartTxHead 007D                       __size_of_setDrvPeak 0013  
                            _eusartRxTail 0057                 ?_send_2bytes_latchless_IK 0031  
                            _eusartTxTail 0059                           doAbsMove@i_1582 00D2  
                         doAbsMove@i_1584 00D0                     __end_of_do_I2C_DO_ACK 222C  
                   _setLEDBrightnessRange 249A                               ??i1_i2c_ISR 0075  
            ??_INTERRUPT_InterruptManager 007C                                 __pswtext1 2000  
              ??_do_I2C_SEND_RESTART_READ 0031                     ?_i2c1_driver_sendNACK 0070  
         __end_ofi1_i2c1_driver_getRXData 2151                   _eusartTxBufferRemaining 005E  
                                ?_execCmd 0070                  ??i1_do_I2C_SEND_ADR_READ 0071  
                        ??_mssp1_clearIRQ 0031                                  _BAUD1CON 019F  
                         ??i1_returnReset 0071                                  ?_isdigit 0070  
                  LED_testComm@readResult 00CC                           ?_TMR2_StopTimer 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0008  
                               _first_top 0156                               _getMoveMask 1B74  
                 send_last_2bytes_IK@data 0031                             ??_setMoveMask 0049  
                   __end_of_drv_fifo_sine 10F4                                 _drv_reset 2298  
                       parseCmd@paramIter 0048                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                                 _drv_write 2605  
                              ?_doAbsMove 0070                         _i2c1_driver_start 215D  
                          ??_zeroPosition 00B7               send_2length_2bytes_IK@data1 003C  
             send_2length_2bytes_IK@data2 003E                                 _setLEDPwr 24B8  
          send_last_2bytes_IK@topOrBottom 0034                                  ?_stricmp 0033  
                                ?_strcspn 0038                                  ?_toupper 0070  
                             _getPosition 18F7                   __size_ofi1_mssp1_setIRQ 0003  
                          __size_of_putch 0006                         _i2c_ISR$intlevel0 2652  
                      ?_i2c1_driver_start 0070                            _eusartRxBuffer 01A0  
                           zeroPosition@i 0049                                 _setActive 1591  
                       ??_TMR0_Initialize 0033                            _eusartTxBuffer 01A8  
                          ___wmul@product 0035                                  _LATAbits 010C  
                                _LATBbits 010D                                  _LATCbits 010E  
                  ?i1_send_last_2bytes_IK 0070                                ?_doRelMove 0070  
                ??_send_2length_2bytes_IK 0043                       __size_of_returnStop 0006  
               i1send_last_2bytes_IK@data 0070                                 clear_ram0 22F0  
                                _PIE0bits 0090                                  _PIE1bits 0091  
                __size_of_TMR2_StartTimer 0003               __end_of_TMR0_Write8bitTimer 21A3  
                     ??_i2c1_driver_start 0031                                  i1_LEDsOn 2536  
     __size_of_INTERRUPT_InterruptManager 004C                                  _LEDpower 2A3C  
              ??_TMR0_SetInterruptHandler 0033                                  _PIR0bits 0010  
                                _PIR1bits 0011                                ?_getActive 00B5  
                  _currentPositions_steps 2790                        _heater_pre_time_ms 00ED  
                LED_testComm@oldConfigReg 00CE                                  _SSP1CON1 0215  
                                _SSP1CON2 0216                                  _TMR0_ISR 2308  
                                _TMR2_ISR 2315                                ?_commCheck 00D2  
                                _SSP1STAT 0214                __end_ofi1_i2c1_driver_stop 214B  
                            ??_fifo_check 004D                         ___wmul@multiplier 0031  
                       ?_do_I2C_SEND_STOP 0070               ?i1_do_I2C_SEND_RESTART_READ 0070  
                              printf@flag 00B2                                printf@prec 00AC  
          ??_TMR2_DefaultInterruptHandler 0071         __size_of_TMR2_SetInterruptHandler 0009  
                __size_of_TMR2_WriteTimer 0005                 __end_of_i2c1_driver_start 2160  
                           ??_returnReset 0032                        ??_do_I2C_SEND_STOP 0031  
               ?_TMR2_SetInterruptHandler 0031               __size_of_i2c1_driver_TXData 0006  
                              ?_drv_reset 0070                          __size_of_LEDsPwr 0064  
       __end_of_do_I2C_SEND_RESTART_WRITE 2214                                ?_drv_write 0049  
                             _EUSART_Read 24F6                   __end_of_do_I2C_TX_EMPTY 2770  
                       doAbsMove@allThere 00CC         send_2length_2bytes_IK@latch_start 0040  
     i1send_2length_2bytes_IK@latch_start 0024                                ?_setLEDPwr 00B5  
                        ??_LED_readConfig 0049                      __end_of_startAbsMove 247C  
            __size_of_do_I2C_SEND_RESTART 0008               __size_of_i2c1_driver_isNACK 000D  
                  LED_getData@topOrBottom 00B5                   _do_I2C_DO_ACK$intlevel0 2228  
                                _i2c_open 1ADB                                ?_setActive 00B5  
                     __end_of_setMoveMask 14A7                             ?i1_returnStop 0070  
                   __size_of_mssp1_setIRQ 0003                         ??_TMR2_Initialize 0033  
                             _drv_address 2A44                         ??_setHeaterToggle 00B9  
                     _do_I2C_DO_NACK_STOP 222C                               _LED_getData 1779  
                        __size_of_i2c_ISR 0026                        __end_of_fifo_check 235F  
                         i1LEDsOn@LEDpins 0027                             drv_write@data 0049  
                           drv_write_DC@i 00BD                             drv_write@buff 004C  
                    __end_of_startRelMove 2427                              ?_do_I2C_IDLE 0070  
                            ?_do_I2C_RCEN 0070                        _LED_test_openshort 1680  
                 ?i1_i2c1_driver_sendNACK 0070                   ??_OSCILLATOR_Initialize 0031  
              __size_of_setDrvPiezoOnTime 005B                    ?_setLEDBrightnessRange 00B5  
                       ??_TMR0_StartTimer 0031                       _i2c1_driver_sendACK 219A  
                        __size_of___awdiv 0052                          __size_of___ftadd 011A  
         __size_of_do_I2C_DO_ADDRESS_NACK 002B          i1send_last_2bytes_IK@latch_start 0072  
                        __size_of___lldiv 0053                          __size_of___ftmul 00E1  
                     i2c1_driver_TXData@d 0031                          __size_of___llmod 0043  
                        __size_of___fttol 0087                    ??_i2c1_driver_sendNACK 0031  
                                ___awtoft 2578                   ?i1_i2c1_driver_resetBus 0070  
                                ___ftpack 0804          ??_i2c1_driver_setBusCollisionISR 0033  
         ?_i2c1_driver_setBusCollisionISR 0031                             ??i1_do_I2C_RX 0070  
                           ??i1_do_I2C_TX 0071        _do_I2C_SEND_RESTART_READ$intlevel0 2208  
                     _i2c1_driver_restart 2160                                 parseCmd@p 004A  
                               parseCmd@s 0045               __size_ofi1_do_I2C_SEND_STOP 0004  
                           LEDsPwr@pwrAll 00A0                      ?_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_startRX 2166                       ?_LED_test_openshort 00B5  
            __end_of_do_I2C_SEND_ADR_READ 22F0                    ??_i2c1_driver_resetBus 0031  
         __size_ofi1_do_I2C_SEND_ADR_READ 0008                      _demoHeaterToggle_bot 01B0  
                        __size_of_execCmd 01CA                  ?_TMR2_LoadPeriodRegister 0070  
                    _demoHeaterToggle_top 01B4                                _T0CON0bits 0017  
                        __size_of_isdigit 000F                                  _demoLong 005A  
                            _mssp1_setIRQ 216C                               ??_do_I2C_RX 0031  
                             ??_do_I2C_TX 0032                               ??_doAbsMove 0240  
                                __ptext10 2443                                  __ptext11 0B01  
                                __ptext20 151C                                  __ptext12 1EBD  
                                __ptext21 08F0                                  __ptext13 223C  
                                __ptext30 1E62                                  __ptext22 2674  
                                __ptext14 1ADB                                  __ptext31 1CB1  
                                __ptext23 240C                                  __ptext15 2271  
                                __ptext40 2371                                  __ptext32 21B7  
                                __ptext24 245F                                  __ptext16 2268  
                                __ptext41 1979                                  __ptext33 1E07  
                                __ptext25 1434                                  __ptext17 22A2  
                                __ptext50 0BDE                                  __ptext42 1591  
                                __ptext34 0869                                  __ptext26 24B8  
                                __ptext18 2298                                  __ptext51 26C3  
                                __ptext43 18F7                                  __ptext35 0CBC  
                                __ptext27 13D0                                  __ptext19 0378  
                                __ptext60 0ECE                                  __ptext52 1779  
                                __ptext44 1B74                                  __ptext36 06E4  
                                __ptext28 249A                                  __ptext61 21D4  
                                __ptext53 0D9D                                  __ptext45 259A  
                                __ptext37 2578                                  __ptext29 16FC  
                                __ptext70 264E                                  __ptext62 2629  
                                __ptext54 00C5                                  __ptext46 1B27  
                                __ptext38 0804                                  __ptext71 216F  
                                __ptext63 1936                                  __ptext55 0988  
                                __ptext47 0A3A                                  __ptext39 21B2  
                                __ptext80 22E4                                  __ptext72 19BC  
                                __ptext64 1D03                                  __ptext56 1C0F  
                                __ptext48 1680                                  __ptext81 221C  
                                __ptext73 1DAE                                  __ptext65 23AD  
                                __ptext57 234E                                  __ptext49 1607  
                                __ptext90 21CE                                  __ptext82 2214  
                                __ptext74 2716                                  __ptext66 25E1  
                                __ptext58 1A00                                  __ptext91 2169  
                                __ptext83 220C                                  __ptext75 2234  
                                __ptext67 228E                                  __ptext59 2605  
                                __ptext92 13CC                                  __ptext84 2204  
                                __ptext76 222C                                  __ptext68 22CD  
                                __ptext93 2138                                  __ptext85 225F  
                                __ptext77 2224                                  __ptext69 22C2  
                                __ptext94 2166                                  __ptext86 22AC  
                                __ptext78 2284                                  __ptext95 21C8  
                                __ptext87 2741                                  __ptext79 22B7  
                                __ptext96 21C2                                  __ptext88 216C  
                                __ptext97 2163                                  __ptext89 2322  
                                __ptext98 2160                                  __ptext99 219A  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
                            ??_setDrvGain 00B7                              ??_setDrvPeak 0049  
                __end_ofi1_mssp1_clearIRQ 2157              send_2bytes_latchless_IK@data 0031  
                    ?_i2c1_driver_sendACK 0070                      __end_of_do_I2C_RESET 22B7  
                     i1LEDsOn@topOrBottom 002B                          __size_of_stricmp 0034  
                        __size_of_strcspn 0030                          __size_of_toupper 0010  
                          ??i1_returnStop 0071                   i1_do_I2C_SEND_ADR_WRITE 21ED  
                    ?_i2c1_driver_restart 0070                       __end_of_returnReset 21CE  
                                _drv_init 1EBD                                  _drv_read 1A00  
                                _drv_sine 12DA                          _i2c1_driver_open 22A2  
                        _i2c1_driver_stop 2163                             __size_of_atoi 0071  
                           __size_of_main 006F                      ?_i2c1_driver_startRX 0070  
                                _errorOut 0166                      ??_LED_test_openshort 00B9  
                                _readdata 01CD            __size_of_i2c1_driver_getRXData 0003  
                             ??_doRelMove 00CC                             __size_of_stop 0026  
           __end_of_i2c1_driver_getRXData 216C                                  _parseCmd 0542  
         __size_of_send_2length_2bytes_IK 0018      __end_of_TMR0_DefaultInterruptHandler 18B8  
   __size_of_TMR0_DefaultInterruptHandler 0037              _TMR0_DefaultInterruptHandler 1881  
                __size_of_getMotionStatus 0023                 __size_of_setHeaterPreTime 005B  
                 ??i1_do_I2C_SEND_RESTART 0070          __size_ofi1_i2c1_driver_getRXData 0003  
                                _moveMask 00DF                   i2c_masterOperation@read 0038  
                             ??_getActive 0049                                _RC1STAbits 019D  
    __size_ofi1_do_I2C_SEND_RESTART_WRITE 0004            __end_ofi1_i2c1_driver_sendNACK 217A  
                              _RB5PPSbits 0E9D                          setMoveMask@onOff 00B7  
                              _RB6PPSbits 0E9E                                  int$flags 007E  
              ??i1_do_I2C_DO_ADDRESS_NACK 0070                                _RB7PPSbits 0E9F  
                                atoi@sign 003B                               ??_commCheck 00D4  
        __end_ofi1_do_I2C_DO_NACK_RESTART 2196                         _LED_configReg_bot 014A  
          __end_ofi1_i2c1_driver_resetBus 2138                      __end_of_zeroPosition 1591  
                       _LED_configReg_top 014E                         ??_TMR2_StartTimer 0031  
      __end_of_INTERRUPT_InterruptManager 0050                _INTERRUPT_InterruptManager 0004  
                               printf@val 00AE                              _SSP1STATbits 0214  
                      __end_of_setDrvGain 19BC          __end_of_do_I2C_SEND_RESTART_READ 220C  
                      __end_of_setDrvPeak 2384                              ??_returnStop 0032  
                                execCmd@s 00D5                     ??_do_I2C_DO_NACK_STOP 0031  
                        ??_calcHeaterPins 0031                       _TMR0_Load8bitPeriod 21B2  
               mssp1_waitForEvent@timeout 0031            __size_of_i2c1_driver_setI2cISR 0009  
           __end_of_i2c1_driver_setI2cISR 227A                                _INTCONbits 000B  
            __size_of_send_last_2bytes_IK 0058                               _NVMCON1bits 0895  
              __size_of_i2c1_driver_start 0003                               ??_drv_reset 00B5  
                             _setMoveMask 1434                       __end_ofi1_do_I2C_RX 18F7  
                          __pstringtext10 2930                            __pstringtext11 2978  
                          __pstringtext20 28EE                            __pstringtext12 2828  
                     __end_ofi1_do_I2C_TX 1C0F                            __pstringtext21 28FF  
                          __pstringtext13 2847                            __pstringtext30 299B  
                          __pstringtext22 2910                            __pstringtext14 2865  
                          __pstringtext31 29A6                            __pstringtext23 2920  
                          __pstringtext15 2881                            __pstringtext40 29F0  
                          __pstringtext32 29AF                            __pstringtext24 293F  
                          __pstringtext16 289B                            __pstringtext41 29F7  
                          __pstringtext33 29B8                            __pstringtext25 294E  
                          __pstringtext17 28B4                            __pstringtext50 2A24  
                          __pstringtext42 29FE                            __pstringtext34 29C0  
                          __pstringtext26 295D                            __pstringtext18 28CB  
                          __pstringtext51 2A28                            __pstringtext43 2A03  
                          __pstringtext35 29C8                            __pstringtext27 296B  
                          __pstringtext19 28DD                            __pstringtext52 2A2C  
                          __pstringtext44 2A08                            __pstringtext36 29D0  
                          __pstringtext28 2984                            __pstringtext53 2A36  
                          __pstringtext45 2A0D                            __pstringtext37 29D8  
                          __pstringtext29 2990                            __pstringtext54 2A39  
                          __pstringtext46 2A12                            __pstringtext38 29E0  
                          __pstringtext55 2A3E                            __pstringtext47 2A17  
                          __pstringtext39 29E8                            __pstringtext56 2A40  
                          __pstringtext48 2A1C                            __pstringtext57 2A42  
                          __pstringtext49 2A20                            __pstringtext58 0000  
                                isdigit@c 0032                               ??_drv_write 004A  
                __size_ofi1_do_I2C_DO_ACK 0004                               ??_setLEDPwr 004E  
                   ??_i2c1_driver_sendACK 0031                          ?_do_I2C_TX_EMPTY 0070  
                          i1_mssp1_setIRQ 2151                   __size_of_WDT_Initialize 0004  
                  _do_I2C_DO_ADDRESS_NACK 2716            __size_ofi1_do_I2C_DO_NACK_STOP 0004  
                                intlevel1 0000             __end_ofi1_do_I2C_DO_NACK_STOP 2192  
                  _do_I2C_RESET$intlevel0 22B0                          ??_TMR0_StopTimer 0070  
                   ??_i2c1_driver_restart 0031                         ??_TMR2_WriteTimer 0070  
                 ?_LED_setBrightnessRange 0044                               ??_setActive 00B9  
                               strchr@chr 0033                     ??_i2c1_driver_startRX 0031  
                               strchr@ptr 0031                ??i1_send_2length_2bytes_IK 007B  
                        ___lldiv@dividend 0035                   ?_PIN_MANAGER_Initialize 0070  
                 __size_of_i2c_setAddress 0008                      ?_TMR0_Load8bitPeriod 0070  
            ??i1_send_2bytes_latchless_IK 0072                    i1_do_I2C_SEND_ADR_READ 21F4  
                       __CFG_CLKOUTEN$OFF 0000                                 stricmp@s1 0038  
                               stricmp@s2 0033                                 strcspn@s1 003E  
                               strcspn@s2 0038                        __end_of_returnStop 21C8  
                            getMoveMask@i 00B7       __size_ofi1_do_I2C_SEND_RESTART_READ 0004  
          __size_ofi1_i2c1_driver_sendACK 0004             ?_TMR0_DefaultInterruptHandler 0070  
           __end_ofi1_i2c1_driver_sendACK 2176               __size_of_mssp1_IRQisEnabled 000A  
          __size_ofi1_i2c1_driver_restart 0003                                  printf@ap 00B3  
           __end_ofi1_i2c1_driver_restart 2148                        _EUSART_Receive_ISR 2427  
             __size_of_mssp1_waitForEvent 000B            __size_ofi1_i2c1_driver_startRX 0003  
            __end_ofi1_i2c1_driver_TXData 21AD             __end_ofi1_i2c1_driver_startRX 214E  
                        ??_TMR2_StopTimer 0070           __end_of_TMR2_LoadPeriodRegister 21BC  
                           __pstringtext1 1000                             __pstringtext2 11E8  
                           __pstringtext3 12DA                             __pstringtext4 2800  
                           __pstringtext5 2A30                             __pstringtext6 2A33  
                           __pstringtext7 2A3C                             __pstringtext8 2A44  
                           __pstringtext9 10F4                   __size_ofi1_do_I2C_RESET 0007  
                  _send_2length_2bytes_IK 23DA                       ?_EUSART_Receive_ISR 0070  
            __end_ofi1_i2c1_driver_isNACK 22E4                                _TMR0_RANGE 2A33  
                        ___lldiv@quotient 003A                           _TMR0_Initialize 2384  
                                stricmp@r 0037                                _TMR2_RANGE 2A30  
                                strcspn@i 003C         send_2length_2bytes_IK@topOrBottom 0041  
     i1send_2length_2bytes_IK@topOrBottom 0025                    __size_of_i2c_setBuffer 0015  
                            ?_getMoveMask 00B5                     __size_of_startAbsMove 001D  
                                toupper@c 0032                    __end_ofi1_mssp1_setIRQ 2154  
                             _returnReset 21C8                                  strtok@s1 0044  
                                strtok@s2 003F                                  strspn@s1 003E  
                                strspn@s2 0038          _do_I2C_DO_NACK_RESTART$intlevel0 2238  
                                strtok@sp 0054                 ??i1_do_I2C_SEND_ADR_WRITE 0071  
                __size_of_main_initialize 00DD            __end_of_LED_setBrightnessRange 0CBC  
                            getPosition@a 00B5                              ?_getPosition 00B5  
                  __size_ofi1_do_I2C_IDLE 0005                    __size_ofi1_do_I2C_RCEN 0006  
                 ??i1_send_last_2bytes_IK 0075                        EUSART_Write@txData 0032  
            __size_of_EUSART_Transmit_ISR 001E            __end_of_PIN_MANAGER_Initialize 184D  
             __end_of_i2c_busCollisionISR 2145                     __size_of_startRelMove 001B  
                   ??_TMR0_Load8bitPeriod 0031                       setMoveMask@probeNum 00B5  
                    ??_EUSART_Receive_ISR 0070                     _TMR2_InterruptHandler 01E1  
                   _do_I2C_SEND_ADR_WRITE 22B7                      _do_I2C_SEND_ADR_READ 22E4  
