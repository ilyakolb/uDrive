

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 30 11:11:22 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	stringtext12,global,class=STRCODE,delta=2
    22                           	psect	stringtext13,global,class=STRCODE,delta=2
    23                           	psect	stringtext14,global,class=STRCODE,delta=2
    24                           	psect	stringtext15,global,class=STRCODE,delta=2
    25                           	psect	stringtext16,global,class=STRCODE,delta=2
    26                           	psect	stringtext17,global,class=STRCODE,delta=2
    27                           	psect	stringtext18,global,class=STRCODE,delta=2
    28                           	psect	stringtext19,global,class=STRCODE,delta=2
    29                           	psect	stringtext20,global,class=STRCODE,delta=2
    30                           	psect	stringtext21,global,class=STRCODE,delta=2
    31                           	psect	stringtext22,global,class=STRCODE,delta=2
    32                           	psect	stringtext23,global,class=STRCODE,delta=2
    33                           	psect	stringtext24,global,class=STRCODE,delta=2
    34                           	psect	stringtext25,global,class=STRCODE,delta=2
    35                           	psect	stringtext26,global,class=STRCODE,delta=2
    36                           	psect	stringtext27,global,class=STRCODE,delta=2
    37                           	psect	stringtext28,global,class=STRCODE,delta=2
    38                           	psect	stringtext29,global,class=STRCODE,delta=2
    39                           	psect	stringtext30,global,class=STRCODE,delta=2
    40                           	psect	stringtext31,global,class=STRCODE,delta=2
    41                           	psect	stringtext32,global,class=STRCODE,delta=2
    42                           	psect	stringtext33,global,class=STRCODE,delta=2
    43                           	psect	stringtext34,global,class=STRCODE,delta=2
    44                           	psect	stringtext35,global,class=STRCODE,delta=2
    45                           	psect	stringtext36,global,class=STRCODE,delta=2
    46                           	psect	stringtext37,global,class=STRCODE,delta=2
    47                           	psect	stringtext38,global,class=STRCODE,delta=2
    48                           	psect	stringtext39,global,class=STRCODE,delta=2
    49                           	psect	stringtext40,global,class=STRCODE,delta=2
    50                           	psect	stringtext41,global,class=STRCODE,delta=2
    51                           	psect	stringtext42,global,class=STRCODE,delta=2
    52                           	psect	stringtext43,global,class=STRCODE,delta=2
    53                           	psect	stringtext44,global,class=STRCODE,delta=2
    54                           	psect	stringtext45,global,class=STRCODE,delta=2
    55                           	psect	stringtext46,global,class=STRCODE,delta=2
    56                           	psect	stringtext47,global,class=STRCODE,delta=2
    57                           	psect	stringtext48,global,class=STRCODE,delta=2
    58                           	psect	stringtext49,global,class=STRCODE,delta=2
    59                           	psect	stringtext50,global,class=STRCODE,delta=2
    60                           	psect	stringtext51,global,class=STRCODE,delta=2
    61                           	psect	stringtext52,global,class=STRCODE,delta=2
    62                           	psect	stringtext53,global,class=STRCODE,delta=2
    63                           	psect	stringtext54,global,class=STRCODE,delta=2
    64                           	psect	stringtext55,global,class=STRCODE,delta=2
    65                           	psect	stringtext56,global,class=STRCODE,delta=2
    66                           	psect	stringtext57,global,class=STRCODE,delta=2
    67                           	psect	stringtext58,global,class=STRCODE,delta=2
    68                           	psect	stringtext59,global,class=STRCODE,delta=2
    69                           	psect	stringtext60,global,class=STRCODE,delta=2
    70                           	psect	stringtext61,global,class=STRCODE,delta=2
    71                           	psect	stringtext62,global,class=STRCODE,delta=2
    72                           	psect	cinit,global,class=CODE,merge=1,delta=2
    73                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    74                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    75                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    76                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    77                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    78                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    79                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    80                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    81                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    82                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    83                           	psect	inittext,global,class=CODE,delta=2
    84                           	psect	clrtext,global,class=CODE,delta=2
    85                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    86                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    87                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    88                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    89                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    90                           	psect	text1,local,class=CODE,merge=1,delta=2
    91                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
   100                           	psect	text11,local,class=CODE,merge=1,delta=2
   101                           	psect	text12,local,class=CODE,merge=1,delta=2
   102                           	psect	text13,local,class=CODE,merge=1,delta=2
   103                           	psect	text14,local,class=CODE,merge=1,delta=2
   104                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text17,local,class=CODE,merge=1,delta=2
   107                           	psect	text18,local,class=CODE,merge=1,delta=2
   108                           	psect	text19,local,class=CODE,merge=1,delta=2
   109                           	psect	swtext1,local,class=CONST,delta=2
   110                           	psect	text20,local,class=CODE,merge=1,delta=2
   111                           	psect	text21,local,class=CODE,merge=1,delta=2
   112                           	psect	text22,local,class=CODE,merge=1,delta=2
   113                           	psect	text23,local,class=CODE,merge=1,delta=2
   114                           	psect	text24,local,class=CODE,merge=1,delta=2
   115                           	psect	text25,local,class=CODE,merge=1,delta=2
   116                           	psect	text26,local,class=CODE,merge=1,delta=2
   117                           	psect	text27,local,class=CODE,merge=1,delta=2
   118                           	psect	text28,local,class=CODE,merge=1,delta=2
   119                           	psect	text29,local,class=CODE,merge=1,delta=2
   120                           	psect	text30,local,class=CODE,merge=1,delta=2
   121                           	psect	text31,local,class=CODE,merge=1,delta=2
   122                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
   123                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
   124                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
   125                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
   126                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
   127                           	psect	text37,local,class=CODE,merge=1,delta=2
   128                           	psect	text38,local,class=CODE,merge=1,delta=2
   129                           	psect	text39,local,class=CODE,merge=1,delta=2
   130                           	psect	text40,local,class=CODE,merge=1,delta=2
   131                           	psect	text41,local,class=CODE,merge=1,delta=2
   132                           	psect	text42,local,class=CODE,merge=1,delta=2
   133                           	psect	text43,local,class=CODE,merge=1,delta=2
   134                           	psect	text44,local,class=CODE,merge=1,delta=2
   135                           	psect	text45,local,class=CODE,merge=1,delta=2
   136                           	psect	text46,local,class=CODE,merge=1,delta=2
   137                           	psect	text47,local,class=CODE,merge=1,delta=2
   138                           	psect	text48,local,class=CODE,merge=1,delta=2
   139                           	psect	text49,local,class=CODE,merge=1,delta=2
   140                           	psect	text50,local,class=CODE,merge=1,delta=2
   141                           	psect	text51,local,class=CODE,merge=1,delta=2
   142                           	psect	text52,local,class=CODE,merge=1,delta=2
   143                           	psect	text53,local,class=CODE,merge=1,delta=2
   144                           	psect	text54,local,class=CODE,merge=1,delta=2
   145                           	psect	text55,local,class=CODE,merge=1,delta=2
   146                           	psect	text56,local,class=CODE,merge=1,delta=2
   147                           	psect	text57,local,class=CODE,merge=1,delta=2
   148                           	psect	text58,local,class=CODE,merge=1,delta=2
   149                           	psect	text59,local,class=CODE,merge=1,delta=2
   150                           	psect	text60,local,class=CODE,merge=1,delta=2
   151                           	psect	text61,local,class=CODE,merge=1,delta=2,group=2
   152                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
   153                           	psect	text63,local,class=CODE,merge=1,delta=2
   154                           	psect	text64,local,class=CODE,merge=1,delta=2
   155                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
   156                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
   157                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
   158                           	psect	text68,local,class=CODE,merge=1,delta=2
   159                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
   160                           	psect	text70,local,class=CODE,merge=1,delta=2
   161                           	psect	text71,local,class=CODE,merge=1,delta=2
   162                           	psect	text72,local,class=CODE,merge=1,delta=2
   163                           	psect	text73,local,class=CODE,merge=1,delta=2
   164                           	psect	text74,local,class=CODE,merge=1,delta=2
   165                           	psect	text75,local,class=CODE,merge=1,delta=2
   166                           	psect	text76,local,class=CODE,merge=1,delta=2
   167                           	psect	text77,local,class=CODE,merge=1,delta=2
   168                           	psect	text78,local,class=CODE,merge=1,delta=2
   169                           	psect	text79,local,class=CODE,merge=1,delta=2
   170                           	psect	text80,local,class=CODE,merge=1,delta=2
   171                           	psect	text81,local,class=CODE,merge=1,delta=2
   172                           	psect	text82,local,class=CODE,merge=1,delta=2
   173                           	psect	text83,local,class=CODE,merge=1,delta=2
   174                           	psect	text84,local,class=CODE,merge=1,delta=2
   175                           	psect	text85,local,class=CODE,merge=1,delta=2
   176                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   177                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   178                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   179                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   180                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   181                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   182                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   183                           	psect	text93,local,class=CODE,merge=1,delta=2
   184                           	psect	text94,local,class=CODE,merge=1,delta=2
   185                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   186                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   187                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   188                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
   189                           	psect	text99,local,class=CODE,merge=1,delta=2,group=2
   190                           	psect	text100,local,class=CODE,merge=1,delta=2
   191                           	psect	text101,local,class=CODE,merge=1,delta=2
   192                           	psect	text102,local,class=CODE,merge=1,delta=2
   193                           	psect	text103,local,class=CODE,merge=1,delta=2
   194                           	psect	text104,local,class=CODE,merge=1,delta=2
   195                           	psect	text105,local,class=CODE,merge=1,delta=2
   196                           	psect	text106,local,class=CODE,merge=1,delta=2
   197                           	psect	text107,local,class=CODE,merge=1,delta=2
   198                           	psect	text108,local,class=CODE,merge=1,delta=2
   199                           	psect	text109,local,class=CODE,merge=1,delta=2
   200                           	psect	text110,local,class=CODE,merge=1,delta=2
   201                           	psect	text111,local,class=CODE,merge=1,delta=2
   202                           	psect	text112,local,class=CODE,merge=1,delta=2
   203                           	psect	text113,local,class=CODE,merge=1,delta=2
   204                           	psect	text114,local,class=CODE,merge=1,delta=2
   205                           	psect	text115,local,class=CODE,merge=1,delta=2
   206                           	psect	text116,local,class=CODE,merge=1,delta=2
   207                           	psect	text117,local,class=CODE,merge=1,delta=2
   208                           	psect	intentry,global,class=CODE,delta=2
   209                           	psect	text119,local,class=CODE,merge=1,delta=2
   210                           	psect	text120,local,class=CODE,merge=1,inline,delta=2
   211                           	psect	text121,local,class=CODE,merge=1,delta=2
   212                           	psect	text122,local,class=CODE,merge=1,delta=2
   213                           	psect	text123,local,class=CODE,merge=1,delta=2
   214                           	psect	text124,local,class=CODE,merge=1,delta=2
   215                           	psect	text125,local,class=CODE,merge=1,delta=2
   216                           	psect	text126,local,class=CODE,merge=1,delta=2
   217                           	psect	text127,local,class=CODE,merge=1,delta=2
   218                           	psect	text128,local,class=CODE,merge=1,delta=2
   219                           	psect	text129,local,class=CODE,merge=1,delta=2
   220                           	psect	text130,local,class=CODE,merge=1,delta=2
   221                           	psect	text131,local,class=CODE,merge=1,delta=2
   222                           	psect	text132,local,class=CODE,merge=1,delta=2
   223                           	psect	text133,local,class=CODE,merge=1,delta=2
   224                           	psect	text134,local,class=CODE,merge=1,delta=2
   225                           	psect	text135,local,class=CODE,merge=1,delta=2
   226                           	psect	text136,local,class=CODE,merge=1,delta=2
   227                           	psect	text137,local,class=CODE,merge=1,inline,delta=2
   228                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   229                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   230                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   231                           	psect	text141,local,class=CODE,merge=1,inline,delta=2
   232                           	psect	text142,local,class=CODE,merge=1,inline,delta=2
   233                           	psect	text143,local,class=CODE,merge=1,inline,delta=2
   234                           	psect	text144,local,class=CODE,merge=1,delta=2
   235                           	psect	text145,local,class=CODE,merge=1,delta=2
   236                           	psect	text146,local,class=CODE,merge=1,inline,delta=2
   237                           	psect	text147,local,class=CODE,merge=1,inline,delta=2
   238                           	psect	text148,local,class=CODE,merge=1,inline,delta=2
   239                           	psect	text149,local,class=CODE,merge=1,delta=2
   240                           	psect	text150,local,class=CODE,merge=1,inline,delta=2
   241                           	psect	text151,local,class=CODE,merge=1,delta=2
   242                           	psect	text152,local,class=CODE,merge=1,delta=2
   243                           	psect	text153,local,class=CODE,merge=1,delta=2
   244                           	psect	text154,local,class=CODE,merge=1,delta=2
   245                           	psect	text155,local,class=CODE,merge=1,delta=2
   246                           	psect	text156,local,class=CODE,merge=1,delta=2
   247                           	psect	text157,local,class=CODE,merge=1,delta=2
   248                           	psect	text158,local,class=CODE,merge=1,delta=2
   249                           	psect	text159,local,class=CODE,merge=1,delta=2
   250                           	psect	text160,local,class=CODE,merge=1,delta=2
   251                           	psect	text161,local,class=CODE,merge=1,delta=2
   252                           	psect	text162,local,class=CODE,merge=1,delta=2
   253                           	psect	text163,local,class=CODE,merge=1,delta=2
   254                           	psect	text164,local,class=CODE,merge=1,delta=2
   255                           	dabs	1,0x7E,2
   256  0000                     
   257                           ; Version 1.45
   258                           ; Generated 16/11/2017 GMT
   259                           ; 
   260                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   261                           ; All rights reserved.
   262                           ; 
   263                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   264                           ; 
   265                           ; Redistribution and use in source and binary forms, with or without modification, are
   266                           ; permitted provided that the following conditions are met:
   267                           ; 
   268                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   269                           ;        conditions and the following disclaimer.
   270                           ; 
   271                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   272                           ;        of conditions and the following disclaimer in the documentation and/or other
   273                           ;        materials provided with the distribution.
   274                           ; 
   275                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   276                           ;        software without specific prior written permission.
   277                           ; 
   278                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   279                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   280                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   281                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   282                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   283                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   284                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   285                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   286                           ; 
   287                           ; 
   288                           ; Code-generator required, PIC16F18346 Definitions
   289                           ; 
   290                           ; SFR Addresses
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  0090                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0093                     	;# 
   332  0094                     	;# 
   333  0097                     	;# 
   334  009B                     	;# 
   335  009B                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  009F                     	;# 
   340  010C                     	;# 
   341  010D                     	;# 
   342  010E                     	;# 
   343  0111                     	;# 
   344  0112                     	;# 
   345  0113                     	;# 
   346  0114                     	;# 
   347  0115                     	;# 
   348  0116                     	;# 
   349  0117                     	;# 
   350  0118                     	;# 
   351  0119                     	;# 
   352  018C                     	;# 
   353  018D                     	;# 
   354  018E                     	;# 
   355  0197                     	;# 
   356  0199                     	;# 
   357  0199                     	;# 
   358  0199                     	;# 
   359  019A                     	;# 
   360  019A                     	;# 
   361  019A                     	;# 
   362  019B                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019C                     	;# 
   368  019C                     	;# 
   369  019C                     	;# 
   370  019D                     	;# 
   371  019D                     	;# 
   372  019D                     	;# 
   373  019E                     	;# 
   374  019E                     	;# 
   375  019E                     	;# 
   376  019F                     	;# 
   377  019F                     	;# 
   378  019F                     	;# 
   379  019F                     	;# 
   380  019F                     	;# 
   381  020C                     	;# 
   382  020D                     	;# 
   383  020E                     	;# 
   384  0211                     	;# 
   385  0211                     	;# 
   386  0212                     	;# 
   387  0212                     	;# 
   388  0213                     	;# 
   389  0213                     	;# 
   390  0214                     	;# 
   391  0214                     	;# 
   392  0215                     	;# 
   393  0215                     	;# 
   394  0215                     	;# 
   395  0215                     	;# 
   396  0216                     	;# 
   397  0216                     	;# 
   398  0217                     	;# 
   399  0217                     	;# 
   400  0219                     	;# 
   401  021A                     	;# 
   402  021B                     	;# 
   403  021C                     	;# 
   404  021D                     	;# 
   405  021D                     	;# 
   406  021E                     	;# 
   407  021F                     	;# 
   408  028C                     	;# 
   409  028D                     	;# 
   410  028E                     	;# 
   411  0291                     	;# 
   412  0291                     	;# 
   413  0292                     	;# 
   414  0293                     	;# 
   415  0294                     	;# 
   416  0295                     	;# 
   417  0295                     	;# 
   418  0296                     	;# 
   419  0297                     	;# 
   420  0298                     	;# 
   421  029F                     	;# 
   422  030C                     	;# 
   423  030D                     	;# 
   424  030E                     	;# 
   425  0311                     	;# 
   426  0311                     	;# 
   427  0312                     	;# 
   428  0313                     	;# 
   429  0314                     	;# 
   430  0315                     	;# 
   431  0315                     	;# 
   432  0316                     	;# 
   433  0317                     	;# 
   434  0318                     	;# 
   435  038C                     	;# 
   436  038D                     	;# 
   437  038E                     	;# 
   438  0391                     	;# 
   439  0392                     	;# 
   440  0393                     	;# 
   441  0394                     	;# 
   442  0395                     	;# 
   443  0396                     	;# 
   444  0397                     	;# 
   445  0398                     	;# 
   446  0399                     	;# 
   447  039A                     	;# 
   448  039C                     	;# 
   449  039D                     	;# 
   450  039E                     	;# 
   451  039F                     	;# 
   452  0411                     	;# 
   453  0411                     	;# 
   454  0412                     	;# 
   455  0413                     	;# 
   456  0414                     	;# 
   457  0415                     	;# 
   458  0416                     	;# 
   459  0417                     	;# 
   460  0418                     	;# 
   461  0418                     	;# 
   462  0419                     	;# 
   463  041A                     	;# 
   464  041B                     	;# 
   465  041C                     	;# 
   466  041D                     	;# 
   467  041E                     	;# 
   468  041F                     	;# 
   469  0498                     	;# 
   470  0498                     	;# 
   471  0499                     	;# 
   472  049A                     	;# 
   473  049B                     	;# 
   474  049B                     	;# 
   475  049C                     	;# 
   476  049D                     	;# 
   477  049E                     	;# 
   478  049F                     	;# 
   479  0617                     	;# 
   480  0618                     	;# 
   481  0619                     	;# 
   482  0619                     	;# 
   483  061A                     	;# 
   484  061B                     	;# 
   485  061C                     	;# 
   486  061C                     	;# 
   487  061F                     	;# 
   488  0691                     	;# 
   489  0692                     	;# 
   490  0693                     	;# 
   491  0694                     	;# 
   492  0695                     	;# 
   493  0696                     	;# 
   494  0697                     	;# 
   495  0698                     	;# 
   496  0699                     	;# 
   497  0711                     	;# 
   498  0712                     	;# 
   499  0713                     	;# 
   500  0714                     	;# 
   501  0715                     	;# 
   502  0716                     	;# 
   503  0717                     	;# 
   504  0718                     	;# 
   505  0719                     	;# 
   506  0891                     	;# 
   507  0891                     	;# 
   508  0891                     	;# 
   509  0891                     	;# 
   510  0891                     	;# 
   511  0891                     	;# 
   512  0892                     	;# 
   513  0892                     	;# 
   514  0892                     	;# 
   515  0893                     	;# 
   516  0893                     	;# 
   517  0893                     	;# 
   518  0893                     	;# 
   519  0893                     	;# 
   520  0893                     	;# 
   521  0894                     	;# 
   522  0894                     	;# 
   523  0894                     	;# 
   524  0895                     	;# 
   525  0895                     	;# 
   526  0895                     	;# 
   527  0896                     	;# 
   528  0896                     	;# 
   529  0896                     	;# 
   530  089B                     	;# 
   531  0911                     	;# 
   532  0912                     	;# 
   533  0913                     	;# 
   534  0914                     	;# 
   535  0915                     	;# 
   536  0916                     	;# 
   537  0918                     	;# 
   538  0919                     	;# 
   539  091A                     	;# 
   540  091B                     	;# 
   541  091C                     	;# 
   542  091D                     	;# 
   543  091E                     	;# 
   544  091F                     	;# 
   545  0E0F                     	;# 
   546  0E10                     	;# 
   547  0E11                     	;# 
   548  0E12                     	;# 
   549  0E13                     	;# 
   550  0E14                     	;# 
   551  0E15                     	;# 
   552  0E16                     	;# 
   553  0E17                     	;# 
   554  0E18                     	;# 
   555  0E19                     	;# 
   556  0E1A                     	;# 
   557  0E1B                     	;# 
   558  0E1C                     	;# 
   559  0E1D                     	;# 
   560  0E1E                     	;# 
   561  0E1F                     	;# 
   562  0E20                     	;# 
   563  0E21                     	;# 
   564  0E22                     	;# 
   565  0E24                     	;# 
   566  0E25                     	;# 
   567  0E28                     	;# 
   568  0E29                     	;# 
   569  0E2A                     	;# 
   570  0E2B                     	;# 
   571  0E2C                     	;# 
   572  0E2D                     	;# 
   573  0E2E                     	;# 
   574  0E2F                     	;# 
   575  0E90                     	;# 
   576  0E91                     	;# 
   577  0E92                     	;# 
   578  0E94                     	;# 
   579  0E95                     	;# 
   580  0E9C                     	;# 
   581  0E9D                     	;# 
   582  0E9E                     	;# 
   583  0E9F                     	;# 
   584  0EA0                     	;# 
   585  0EA1                     	;# 
   586  0EA2                     	;# 
   587  0EA3                     	;# 
   588  0EA4                     	;# 
   589  0EA5                     	;# 
   590  0EA6                     	;# 
   591  0EA7                     	;# 
   592  0F0F                     	;# 
   593  0F10                     	;# 
   594  0F11                     	;# 
   595  0F12                     	;# 
   596  0F13                     	;# 
   597  0F14                     	;# 
   598  0F15                     	;# 
   599  0F16                     	;# 
   600  0F17                     	;# 
   601  0F18                     	;# 
   602  0F19                     	;# 
   603  0F1A                     	;# 
   604  0F1B                     	;# 
   605  0F1C                     	;# 
   606  0F1D                     	;# 
   607  0F1E                     	;# 
   608  0F1F                     	;# 
   609  0F20                     	;# 
   610  0F21                     	;# 
   611  0F22                     	;# 
   612  0F23                     	;# 
   613  0F24                     	;# 
   614  0F25                     	;# 
   615  0F26                     	;# 
   616  0F27                     	;# 
   617  0F28                     	;# 
   618  0F29                     	;# 
   619  0F2A                     	;# 
   620  0F2B                     	;# 
   621  0F2C                     	;# 
   622  0F2D                     	;# 
   623  0F2E                     	;# 
   624  0F2F                     	;# 
   625  0F30                     	;# 
   626  0F31                     	;# 
   627  0F32                     	;# 
   628  0F33                     	;# 
   629  0F34                     	;# 
   630  0F35                     	;# 
   631  0F36                     	;# 
   632  0F37                     	;# 
   633  0FE4                     	;# 
   634  0FE5                     	;# 
   635  0FE6                     	;# 
   636  0FE7                     	;# 
   637  0FE8                     	;# 
   638  0FE9                     	;# 
   639  0FEA                     	;# 
   640  0FEB                     	;# 
   641  0FED                     	;# 
   642  0FEE                     	;# 
   643  0FEF                     	;# 
   644  0000                     	;# 
   645  0001                     	;# 
   646  0002                     	;# 
   647  0003                     	;# 
   648  0004                     	;# 
   649  0005                     	;# 
   650  0006                     	;# 
   651  0007                     	;# 
   652  0008                     	;# 
   653  0009                     	;# 
   654  000A                     	;# 
   655  000B                     	;# 
   656  000C                     	;# 
   657  000D                     	;# 
   658  000E                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0016                     	;# 
   668  0017                     	;# 
   669  0018                     	;# 
   670  0019                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  001B                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  008C                     	;# 
   679  008D                     	;# 
   680  008E                     	;# 
   681  0090                     	;# 
   682  0091                     	;# 
   683  0092                     	;# 
   684  0093                     	;# 
   685  0094                     	;# 
   686  0097                     	;# 
   687  009B                     	;# 
   688  009B                     	;# 
   689  009C                     	;# 
   690  009D                     	;# 
   691  009E                     	;# 
   692  009F                     	;# 
   693  010C                     	;# 
   694  010D                     	;# 
   695  010E                     	;# 
   696  0111                     	;# 
   697  0112                     	;# 
   698  0113                     	;# 
   699  0114                     	;# 
   700  0115                     	;# 
   701  0116                     	;# 
   702  0117                     	;# 
   703  0118                     	;# 
   704  0119                     	;# 
   705  018C                     	;# 
   706  018D                     	;# 
   707  018E                     	;# 
   708  0197                     	;# 
   709  0199                     	;# 
   710  0199                     	;# 
   711  0199                     	;# 
   712  019A                     	;# 
   713  019A                     	;# 
   714  019A                     	;# 
   715  019B                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019C                     	;# 
   721  019C                     	;# 
   722  019C                     	;# 
   723  019D                     	;# 
   724  019D                     	;# 
   725  019D                     	;# 
   726  019E                     	;# 
   727  019E                     	;# 
   728  019E                     	;# 
   729  019F                     	;# 
   730  019F                     	;# 
   731  019F                     	;# 
   732  019F                     	;# 
   733  019F                     	;# 
   734  020C                     	;# 
   735  020D                     	;# 
   736  020E                     	;# 
   737  0211                     	;# 
   738  0211                     	;# 
   739  0212                     	;# 
   740  0212                     	;# 
   741  0213                     	;# 
   742  0213                     	;# 
   743  0214                     	;# 
   744  0214                     	;# 
   745  0215                     	;# 
   746  0215                     	;# 
   747  0215                     	;# 
   748  0215                     	;# 
   749  0216                     	;# 
   750  0216                     	;# 
   751  0217                     	;# 
   752  0217                     	;# 
   753  0219                     	;# 
   754  021A                     	;# 
   755  021B                     	;# 
   756  021C                     	;# 
   757  021D                     	;# 
   758  021D                     	;# 
   759  021E                     	;# 
   760  021F                     	;# 
   761  028C                     	;# 
   762  028D                     	;# 
   763  028E                     	;# 
   764  0291                     	;# 
   765  0291                     	;# 
   766  0292                     	;# 
   767  0293                     	;# 
   768  0294                     	;# 
   769  0295                     	;# 
   770  0295                     	;# 
   771  0296                     	;# 
   772  0297                     	;# 
   773  0298                     	;# 
   774  029F                     	;# 
   775  030C                     	;# 
   776  030D                     	;# 
   777  030E                     	;# 
   778  0311                     	;# 
   779  0311                     	;# 
   780  0312                     	;# 
   781  0313                     	;# 
   782  0314                     	;# 
   783  0315                     	;# 
   784  0315                     	;# 
   785  0316                     	;# 
   786  0317                     	;# 
   787  0318                     	;# 
   788  038C                     	;# 
   789  038D                     	;# 
   790  038E                     	;# 
   791  0391                     	;# 
   792  0392                     	;# 
   793  0393                     	;# 
   794  0394                     	;# 
   795  0395                     	;# 
   796  0396                     	;# 
   797  0397                     	;# 
   798  0398                     	;# 
   799  0399                     	;# 
   800  039A                     	;# 
   801  039C                     	;# 
   802  039D                     	;# 
   803  039E                     	;# 
   804  039F                     	;# 
   805  0411                     	;# 
   806  0411                     	;# 
   807  0412                     	;# 
   808  0413                     	;# 
   809  0414                     	;# 
   810  0415                     	;# 
   811  0416                     	;# 
   812  0417                     	;# 
   813  0418                     	;# 
   814  0418                     	;# 
   815  0419                     	;# 
   816  041A                     	;# 
   817  041B                     	;# 
   818  041C                     	;# 
   819  041D                     	;# 
   820  041E                     	;# 
   821  041F                     	;# 
   822  0498                     	;# 
   823  0498                     	;# 
   824  0499                     	;# 
   825  049A                     	;# 
   826  049B                     	;# 
   827  049B                     	;# 
   828  049C                     	;# 
   829  049D                     	;# 
   830  049E                     	;# 
   831  049F                     	;# 
   832  0617                     	;# 
   833  0618                     	;# 
   834  0619                     	;# 
   835  0619                     	;# 
   836  061A                     	;# 
   837  061B                     	;# 
   838  061C                     	;# 
   839  061C                     	;# 
   840  061F                     	;# 
   841  0691                     	;# 
   842  0692                     	;# 
   843  0693                     	;# 
   844  0694                     	;# 
   845  0695                     	;# 
   846  0696                     	;# 
   847  0697                     	;# 
   848  0698                     	;# 
   849  0699                     	;# 
   850  0711                     	;# 
   851  0712                     	;# 
   852  0713                     	;# 
   853  0714                     	;# 
   854  0715                     	;# 
   855  0716                     	;# 
   856  0717                     	;# 
   857  0718                     	;# 
   858  0719                     	;# 
   859  0891                     	;# 
   860  0891                     	;# 
   861  0891                     	;# 
   862  0891                     	;# 
   863  0891                     	;# 
   864  0891                     	;# 
   865  0892                     	;# 
   866  0892                     	;# 
   867  0892                     	;# 
   868  0893                     	;# 
   869  0893                     	;# 
   870  0893                     	;# 
   871  0893                     	;# 
   872  0893                     	;# 
   873  0893                     	;# 
   874  0894                     	;# 
   875  0894                     	;# 
   876  0894                     	;# 
   877  0895                     	;# 
   878  0895                     	;# 
   879  0895                     	;# 
   880  0896                     	;# 
   881  0896                     	;# 
   882  0896                     	;# 
   883  089B                     	;# 
   884  0911                     	;# 
   885  0912                     	;# 
   886  0913                     	;# 
   887  0914                     	;# 
   888  0915                     	;# 
   889  0916                     	;# 
   890  0918                     	;# 
   891  0919                     	;# 
   892  091A                     	;# 
   893  091B                     	;# 
   894  091C                     	;# 
   895  091D                     	;# 
   896  091E                     	;# 
   897  091F                     	;# 
   898  0E0F                     	;# 
   899  0E10                     	;# 
   900  0E11                     	;# 
   901  0E12                     	;# 
   902  0E13                     	;# 
   903  0E14                     	;# 
   904  0E15                     	;# 
   905  0E16                     	;# 
   906  0E17                     	;# 
   907  0E18                     	;# 
   908  0E19                     	;# 
   909  0E1A                     	;# 
   910  0E1B                     	;# 
   911  0E1C                     	;# 
   912  0E1D                     	;# 
   913  0E1E                     	;# 
   914  0E1F                     	;# 
   915  0E20                     	;# 
   916  0E21                     	;# 
   917  0E22                     	;# 
   918  0E24                     	;# 
   919  0E25                     	;# 
   920  0E28                     	;# 
   921  0E29                     	;# 
   922  0E2A                     	;# 
   923  0E2B                     	;# 
   924  0E2C                     	;# 
   925  0E2D                     	;# 
   926  0E2E                     	;# 
   927  0E2F                     	;# 
   928  0E90                     	;# 
   929  0E91                     	;# 
   930  0E92                     	;# 
   931  0E94                     	;# 
   932  0E95                     	;# 
   933  0E9C                     	;# 
   934  0E9D                     	;# 
   935  0E9E                     	;# 
   936  0E9F                     	;# 
   937  0EA0                     	;# 
   938  0EA1                     	;# 
   939  0EA2                     	;# 
   940  0EA3                     	;# 
   941  0EA4                     	;# 
   942  0EA5                     	;# 
   943  0EA6                     	;# 
   944  0EA7                     	;# 
   945  0F0F                     	;# 
   946  0F10                     	;# 
   947  0F11                     	;# 
   948  0F12                     	;# 
   949  0F13                     	;# 
   950  0F14                     	;# 
   951  0F15                     	;# 
   952  0F16                     	;# 
   953  0F17                     	;# 
   954  0F18                     	;# 
   955  0F19                     	;# 
   956  0F1A                     	;# 
   957  0F1B                     	;# 
   958  0F1C                     	;# 
   959  0F1D                     	;# 
   960  0F1E                     	;# 
   961  0F1F                     	;# 
   962  0F20                     	;# 
   963  0F21                     	;# 
   964  0F22                     	;# 
   965  0F23                     	;# 
   966  0F24                     	;# 
   967  0F25                     	;# 
   968  0F26                     	;# 
   969  0F27                     	;# 
   970  0F28                     	;# 
   971  0F29                     	;# 
   972  0F2A                     	;# 
   973  0F2B                     	;# 
   974  0F2C                     	;# 
   975  0F2D                     	;# 
   976  0F2E                     	;# 
   977  0F2F                     	;# 
   978  0F30                     	;# 
   979  0F31                     	;# 
   980  0F32                     	;# 
   981  0F33                     	;# 
   982  0F34                     	;# 
   983  0F35                     	;# 
   984  0F36                     	;# 
   985  0F37                     	;# 
   986  0FE4                     	;# 
   987  0FE5                     	;# 
   988  0FE6                     	;# 
   989  0FE7                     	;# 
   990  0FE8                     	;# 
   991  0FE9                     	;# 
   992  0FEA                     	;# 
   993  0FEB                     	;# 
   994  0FED                     	;# 
   995  0FEE                     	;# 
   996  0FEF                     	;# 
   997  0000                     	;# 
   998  0001                     	;# 
   999  0002                     	;# 
  1000  0003                     	;# 
  1001  0004                     	;# 
  1002  0005                     	;# 
  1003  0006                     	;# 
  1004  0007                     	;# 
  1005  0008                     	;# 
  1006  0009                     	;# 
  1007  000A                     	;# 
  1008  000B                     	;# 
  1009  000C                     	;# 
  1010  000D                     	;# 
  1011  000E                     	;# 
  1012  0010                     	;# 
  1013  0011                     	;# 
  1014  0012                     	;# 
  1015  0013                     	;# 
  1016  0014                     	;# 
  1017  0015                     	;# 
  1018  0015                     	;# 
  1019  0016                     	;# 
  1020  0016                     	;# 
  1021  0017                     	;# 
  1022  0018                     	;# 
  1023  0019                     	;# 
  1024  0019                     	;# 
  1025  001A                     	;# 
  1026  001B                     	;# 
  1027  001C                     	;# 
  1028  001D                     	;# 
  1029  001E                     	;# 
  1030  001F                     	;# 
  1031  008C                     	;# 
  1032  008D                     	;# 
  1033  008E                     	;# 
  1034  0090                     	;# 
  1035  0091                     	;# 
  1036  0092                     	;# 
  1037  0093                     	;# 
  1038  0094                     	;# 
  1039  0097                     	;# 
  1040  009B                     	;# 
  1041  009B                     	;# 
  1042  009C                     	;# 
  1043  009D                     	;# 
  1044  009E                     	;# 
  1045  009F                     	;# 
  1046  010C                     	;# 
  1047  010D                     	;# 
  1048  010E                     	;# 
  1049  0111                     	;# 
  1050  0112                     	;# 
  1051  0113                     	;# 
  1052  0114                     	;# 
  1053  0115                     	;# 
  1054  0116                     	;# 
  1055  0117                     	;# 
  1056  0118                     	;# 
  1057  0119                     	;# 
  1058  018C                     	;# 
  1059  018D                     	;# 
  1060  018E                     	;# 
  1061  0197                     	;# 
  1062  0199                     	;# 
  1063  0199                     	;# 
  1064  0199                     	;# 
  1065  019A                     	;# 
  1066  019A                     	;# 
  1067  019A                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019B                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019C                     	;# 
  1074  019C                     	;# 
  1075  019C                     	;# 
  1076  019D                     	;# 
  1077  019D                     	;# 
  1078  019D                     	;# 
  1079  019E                     	;# 
  1080  019E                     	;# 
  1081  019E                     	;# 
  1082  019F                     	;# 
  1083  019F                     	;# 
  1084  019F                     	;# 
  1085  019F                     	;# 
  1086  019F                     	;# 
  1087  020C                     	;# 
  1088  020D                     	;# 
  1089  020E                     	;# 
  1090  0211                     	;# 
  1091  0211                     	;# 
  1092  0212                     	;# 
  1093  0212                     	;# 
  1094  0213                     	;# 
  1095  0213                     	;# 
  1096  0214                     	;# 
  1097  0214                     	;# 
  1098  0215                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0216                     	;# 
  1103  0216                     	;# 
  1104  0217                     	;# 
  1105  0217                     	;# 
  1106  0219                     	;# 
  1107  021A                     	;# 
  1108  021B                     	;# 
  1109  021C                     	;# 
  1110  021D                     	;# 
  1111  021D                     	;# 
  1112  021E                     	;# 
  1113  021F                     	;# 
  1114  028C                     	;# 
  1115  028D                     	;# 
  1116  028E                     	;# 
  1117  0291                     	;# 
  1118  0291                     	;# 
  1119  0292                     	;# 
  1120  0293                     	;# 
  1121  0294                     	;# 
  1122  0295                     	;# 
  1123  0295                     	;# 
  1124  0296                     	;# 
  1125  0297                     	;# 
  1126  0298                     	;# 
  1127  029F                     	;# 
  1128  030C                     	;# 
  1129  030D                     	;# 
  1130  030E                     	;# 
  1131  0311                     	;# 
  1132  0311                     	;# 
  1133  0312                     	;# 
  1134  0313                     	;# 
  1135  0314                     	;# 
  1136  0315                     	;# 
  1137  0315                     	;# 
  1138  0316                     	;# 
  1139  0317                     	;# 
  1140  0318                     	;# 
  1141  038C                     	;# 
  1142  038D                     	;# 
  1143  038E                     	;# 
  1144  0391                     	;# 
  1145  0392                     	;# 
  1146  0393                     	;# 
  1147  0394                     	;# 
  1148  0395                     	;# 
  1149  0396                     	;# 
  1150  0397                     	;# 
  1151  0398                     	;# 
  1152  0399                     	;# 
  1153  039A                     	;# 
  1154  039C                     	;# 
  1155  039D                     	;# 
  1156  039E                     	;# 
  1157  039F                     	;# 
  1158  0411                     	;# 
  1159  0411                     	;# 
  1160  0412                     	;# 
  1161  0413                     	;# 
  1162  0414                     	;# 
  1163  0415                     	;# 
  1164  0416                     	;# 
  1165  0417                     	;# 
  1166  0418                     	;# 
  1167  0418                     	;# 
  1168  0419                     	;# 
  1169  041A                     	;# 
  1170  041B                     	;# 
  1171  041C                     	;# 
  1172  041D                     	;# 
  1173  041E                     	;# 
  1174  041F                     	;# 
  1175  0498                     	;# 
  1176  0498                     	;# 
  1177  0499                     	;# 
  1178  049A                     	;# 
  1179  049B                     	;# 
  1180  049B                     	;# 
  1181  049C                     	;# 
  1182  049D                     	;# 
  1183  049E                     	;# 
  1184  049F                     	;# 
  1185  0617                     	;# 
  1186  0618                     	;# 
  1187  0619                     	;# 
  1188  0619                     	;# 
  1189  061A                     	;# 
  1190  061B                     	;# 
  1191  061C                     	;# 
  1192  061C                     	;# 
  1193  061F                     	;# 
  1194  0691                     	;# 
  1195  0692                     	;# 
  1196  0693                     	;# 
  1197  0694                     	;# 
  1198  0695                     	;# 
  1199  0696                     	;# 
  1200  0697                     	;# 
  1201  0698                     	;# 
  1202  0699                     	;# 
  1203  0711                     	;# 
  1204  0712                     	;# 
  1205  0713                     	;# 
  1206  0714                     	;# 
  1207  0715                     	;# 
  1208  0716                     	;# 
  1209  0717                     	;# 
  1210  0718                     	;# 
  1211  0719                     	;# 
  1212  0891                     	;# 
  1213  0891                     	;# 
  1214  0891                     	;# 
  1215  0891                     	;# 
  1216  0891                     	;# 
  1217  0891                     	;# 
  1218  0892                     	;# 
  1219  0892                     	;# 
  1220  0892                     	;# 
  1221  0893                     	;# 
  1222  0893                     	;# 
  1223  0893                     	;# 
  1224  0893                     	;# 
  1225  0893                     	;# 
  1226  0893                     	;# 
  1227  0894                     	;# 
  1228  0894                     	;# 
  1229  0894                     	;# 
  1230  0895                     	;# 
  1231  0895                     	;# 
  1232  0895                     	;# 
  1233  0896                     	;# 
  1234  0896                     	;# 
  1235  0896                     	;# 
  1236  089B                     	;# 
  1237  0911                     	;# 
  1238  0912                     	;# 
  1239  0913                     	;# 
  1240  0914                     	;# 
  1241  0915                     	;# 
  1242  0916                     	;# 
  1243  0918                     	;# 
  1244  0919                     	;# 
  1245  091A                     	;# 
  1246  091B                     	;# 
  1247  091C                     	;# 
  1248  091D                     	;# 
  1249  091E                     	;# 
  1250  091F                     	;# 
  1251  0E0F                     	;# 
  1252  0E10                     	;# 
  1253  0E11                     	;# 
  1254  0E12                     	;# 
  1255  0E13                     	;# 
  1256  0E14                     	;# 
  1257  0E15                     	;# 
  1258  0E16                     	;# 
  1259  0E17                     	;# 
  1260  0E18                     	;# 
  1261  0E19                     	;# 
  1262  0E1A                     	;# 
  1263  0E1B                     	;# 
  1264  0E1C                     	;# 
  1265  0E1D                     	;# 
  1266  0E1E                     	;# 
  1267  0E1F                     	;# 
  1268  0E20                     	;# 
  1269  0E21                     	;# 
  1270  0E22                     	;# 
  1271  0E24                     	;# 
  1272  0E25                     	;# 
  1273  0E28                     	;# 
  1274  0E29                     	;# 
  1275  0E2A                     	;# 
  1276  0E2B                     	;# 
  1277  0E2C                     	;# 
  1278  0E2D                     	;# 
  1279  0E2E                     	;# 
  1280  0E2F                     	;# 
  1281  0E90                     	;# 
  1282  0E91                     	;# 
  1283  0E92                     	;# 
  1284  0E94                     	;# 
  1285  0E95                     	;# 
  1286  0E9C                     	;# 
  1287  0E9D                     	;# 
  1288  0E9E                     	;# 
  1289  0E9F                     	;# 
  1290  0EA0                     	;# 
  1291  0EA1                     	;# 
  1292  0EA2                     	;# 
  1293  0EA3                     	;# 
  1294  0EA4                     	;# 
  1295  0EA5                     	;# 
  1296  0EA6                     	;# 
  1297  0EA7                     	;# 
  1298  0F0F                     	;# 
  1299  0F10                     	;# 
  1300  0F11                     	;# 
  1301  0F12                     	;# 
  1302  0F13                     	;# 
  1303  0F14                     	;# 
  1304  0F15                     	;# 
  1305  0F16                     	;# 
  1306  0F17                     	;# 
  1307  0F18                     	;# 
  1308  0F19                     	;# 
  1309  0F1A                     	;# 
  1310  0F1B                     	;# 
  1311  0F1C                     	;# 
  1312  0F1D                     	;# 
  1313  0F1E                     	;# 
  1314  0F1F                     	;# 
  1315  0F20                     	;# 
  1316  0F21                     	;# 
  1317  0F22                     	;# 
  1318  0F23                     	;# 
  1319  0F24                     	;# 
  1320  0F25                     	;# 
  1321  0F26                     	;# 
  1322  0F27                     	;# 
  1323  0F28                     	;# 
  1324  0F29                     	;# 
  1325  0F2A                     	;# 
  1326  0F2B                     	;# 
  1327  0F2C                     	;# 
  1328  0F2D                     	;# 
  1329  0F2E                     	;# 
  1330  0F2F                     	;# 
  1331  0F30                     	;# 
  1332  0F31                     	;# 
  1333  0F32                     	;# 
  1334  0F33                     	;# 
  1335  0F34                     	;# 
  1336  0F35                     	;# 
  1337  0F36                     	;# 
  1338  0F37                     	;# 
  1339  0FE4                     	;# 
  1340  0FE5                     	;# 
  1341  0FE6                     	;# 
  1342  0FE7                     	;# 
  1343  0FE8                     	;# 
  1344  0FE9                     	;# 
  1345  0FEA                     	;# 
  1346  0FEB                     	;# 
  1347  0FED                     	;# 
  1348  0FEE                     	;# 
  1349  0FEF                     	;# 
  1350  0000                     	;# 
  1351  0001                     	;# 
  1352  0002                     	;# 
  1353  0003                     	;# 
  1354  0004                     	;# 
  1355  0005                     	;# 
  1356  0006                     	;# 
  1357  0007                     	;# 
  1358  0008                     	;# 
  1359  0009                     	;# 
  1360  000A                     	;# 
  1361  000B                     	;# 
  1362  000C                     	;# 
  1363  000D                     	;# 
  1364  000E                     	;# 
  1365  0010                     	;# 
  1366  0011                     	;# 
  1367  0012                     	;# 
  1368  0013                     	;# 
  1369  0014                     	;# 
  1370  0015                     	;# 
  1371  0015                     	;# 
  1372  0016                     	;# 
  1373  0016                     	;# 
  1374  0017                     	;# 
  1375  0018                     	;# 
  1376  0019                     	;# 
  1377  0019                     	;# 
  1378  001A                     	;# 
  1379  001B                     	;# 
  1380  001C                     	;# 
  1381  001D                     	;# 
  1382  001E                     	;# 
  1383  001F                     	;# 
  1384  008C                     	;# 
  1385  008D                     	;# 
  1386  008E                     	;# 
  1387  0090                     	;# 
  1388  0091                     	;# 
  1389  0092                     	;# 
  1390  0093                     	;# 
  1391  0094                     	;# 
  1392  0097                     	;# 
  1393  009B                     	;# 
  1394  009B                     	;# 
  1395  009C                     	;# 
  1396  009D                     	;# 
  1397  009E                     	;# 
  1398  009F                     	;# 
  1399  010C                     	;# 
  1400  010D                     	;# 
  1401  010E                     	;# 
  1402  0111                     	;# 
  1403  0112                     	;# 
  1404  0113                     	;# 
  1405  0114                     	;# 
  1406  0115                     	;# 
  1407  0116                     	;# 
  1408  0117                     	;# 
  1409  0118                     	;# 
  1410  0119                     	;# 
  1411  018C                     	;# 
  1412  018D                     	;# 
  1413  018E                     	;# 
  1414  0197                     	;# 
  1415  0199                     	;# 
  1416  0199                     	;# 
  1417  0199                     	;# 
  1418  019A                     	;# 
  1419  019A                     	;# 
  1420  019A                     	;# 
  1421  019B                     	;# 
  1422  019B                     	;# 
  1423  019B                     	;# 
  1424  019B                     	;# 
  1425  019B                     	;# 
  1426  019C                     	;# 
  1427  019C                     	;# 
  1428  019C                     	;# 
  1429  019D                     	;# 
  1430  019D                     	;# 
  1431  019D                     	;# 
  1432  019E                     	;# 
  1433  019E                     	;# 
  1434  019E                     	;# 
  1435  019F                     	;# 
  1436  019F                     	;# 
  1437  019F                     	;# 
  1438  019F                     	;# 
  1439  019F                     	;# 
  1440  020C                     	;# 
  1441  020D                     	;# 
  1442  020E                     	;# 
  1443  0211                     	;# 
  1444  0211                     	;# 
  1445  0212                     	;# 
  1446  0212                     	;# 
  1447  0213                     	;# 
  1448  0213                     	;# 
  1449  0214                     	;# 
  1450  0214                     	;# 
  1451  0215                     	;# 
  1452  0215                     	;# 
  1453  0215                     	;# 
  1454  0215                     	;# 
  1455  0216                     	;# 
  1456  0216                     	;# 
  1457  0217                     	;# 
  1458  0217                     	;# 
  1459  0219                     	;# 
  1460  021A                     	;# 
  1461  021B                     	;# 
  1462  021C                     	;# 
  1463  021D                     	;# 
  1464  021D                     	;# 
  1465  021E                     	;# 
  1466  021F                     	;# 
  1467  028C                     	;# 
  1468  028D                     	;# 
  1469  028E                     	;# 
  1470  0291                     	;# 
  1471  0291                     	;# 
  1472  0292                     	;# 
  1473  0293                     	;# 
  1474  0294                     	;# 
  1475  0295                     	;# 
  1476  0295                     	;# 
  1477  0296                     	;# 
  1478  0297                     	;# 
  1479  0298                     	;# 
  1480  029F                     	;# 
  1481  030C                     	;# 
  1482  030D                     	;# 
  1483  030E                     	;# 
  1484  0311                     	;# 
  1485  0311                     	;# 
  1486  0312                     	;# 
  1487  0313                     	;# 
  1488  0314                     	;# 
  1489  0315                     	;# 
  1490  0315                     	;# 
  1491  0316                     	;# 
  1492  0317                     	;# 
  1493  0318                     	;# 
  1494  038C                     	;# 
  1495  038D                     	;# 
  1496  038E                     	;# 
  1497  0391                     	;# 
  1498  0392                     	;# 
  1499  0393                     	;# 
  1500  0394                     	;# 
  1501  0395                     	;# 
  1502  0396                     	;# 
  1503  0397                     	;# 
  1504  0398                     	;# 
  1505  0399                     	;# 
  1506  039A                     	;# 
  1507  039C                     	;# 
  1508  039D                     	;# 
  1509  039E                     	;# 
  1510  039F                     	;# 
  1511  0411                     	;# 
  1512  0411                     	;# 
  1513  0412                     	;# 
  1514  0413                     	;# 
  1515  0414                     	;# 
  1516  0415                     	;# 
  1517  0416                     	;# 
  1518  0417                     	;# 
  1519  0418                     	;# 
  1520  0418                     	;# 
  1521  0419                     	;# 
  1522  041A                     	;# 
  1523  041B                     	;# 
  1524  041C                     	;# 
  1525  041D                     	;# 
  1526  041E                     	;# 
  1527  041F                     	;# 
  1528  0498                     	;# 
  1529  0498                     	;# 
  1530  0499                     	;# 
  1531  049A                     	;# 
  1532  049B                     	;# 
  1533  049B                     	;# 
  1534  049C                     	;# 
  1535  049D                     	;# 
  1536  049E                     	;# 
  1537  049F                     	;# 
  1538  0617                     	;# 
  1539  0618                     	;# 
  1540  0619                     	;# 
  1541  0619                     	;# 
  1542  061A                     	;# 
  1543  061B                     	;# 
  1544  061C                     	;# 
  1545  061C                     	;# 
  1546  061F                     	;# 
  1547  0691                     	;# 
  1548  0692                     	;# 
  1549  0693                     	;# 
  1550  0694                     	;# 
  1551  0695                     	;# 
  1552  0696                     	;# 
  1553  0697                     	;# 
  1554  0698                     	;# 
  1555  0699                     	;# 
  1556  0711                     	;# 
  1557  0712                     	;# 
  1558  0713                     	;# 
  1559  0714                     	;# 
  1560  0715                     	;# 
  1561  0716                     	;# 
  1562  0717                     	;# 
  1563  0718                     	;# 
  1564  0719                     	;# 
  1565  0891                     	;# 
  1566  0891                     	;# 
  1567  0891                     	;# 
  1568  0891                     	;# 
  1569  0891                     	;# 
  1570  0891                     	;# 
  1571  0892                     	;# 
  1572  0892                     	;# 
  1573  0892                     	;# 
  1574  0893                     	;# 
  1575  0893                     	;# 
  1576  0893                     	;# 
  1577  0893                     	;# 
  1578  0893                     	;# 
  1579  0893                     	;# 
  1580  0894                     	;# 
  1581  0894                     	;# 
  1582  0894                     	;# 
  1583  0895                     	;# 
  1584  0895                     	;# 
  1585  0895                     	;# 
  1586  0896                     	;# 
  1587  0896                     	;# 
  1588  0896                     	;# 
  1589  089B                     	;# 
  1590  0911                     	;# 
  1591  0912                     	;# 
  1592  0913                     	;# 
  1593  0914                     	;# 
  1594  0915                     	;# 
  1595  0916                     	;# 
  1596  0918                     	;# 
  1597  0919                     	;# 
  1598  091A                     	;# 
  1599  091B                     	;# 
  1600  091C                     	;# 
  1601  091D                     	;# 
  1602  091E                     	;# 
  1603  091F                     	;# 
  1604  0E0F                     	;# 
  1605  0E10                     	;# 
  1606  0E11                     	;# 
  1607  0E12                     	;# 
  1608  0E13                     	;# 
  1609  0E14                     	;# 
  1610  0E15                     	;# 
  1611  0E16                     	;# 
  1612  0E17                     	;# 
  1613  0E18                     	;# 
  1614  0E19                     	;# 
  1615  0E1A                     	;# 
  1616  0E1B                     	;# 
  1617  0E1C                     	;# 
  1618  0E1D                     	;# 
  1619  0E1E                     	;# 
  1620  0E1F                     	;# 
  1621  0E20                     	;# 
  1622  0E21                     	;# 
  1623  0E22                     	;# 
  1624  0E24                     	;# 
  1625  0E25                     	;# 
  1626  0E28                     	;# 
  1627  0E29                     	;# 
  1628  0E2A                     	;# 
  1629  0E2B                     	;# 
  1630  0E2C                     	;# 
  1631  0E2D                     	;# 
  1632  0E2E                     	;# 
  1633  0E2F                     	;# 
  1634  0E90                     	;# 
  1635  0E91                     	;# 
  1636  0E92                     	;# 
  1637  0E94                     	;# 
  1638  0E95                     	;# 
  1639  0E9C                     	;# 
  1640  0E9D                     	;# 
  1641  0E9E                     	;# 
  1642  0E9F                     	;# 
  1643  0EA0                     	;# 
  1644  0EA1                     	;# 
  1645  0EA2                     	;# 
  1646  0EA3                     	;# 
  1647  0EA4                     	;# 
  1648  0EA5                     	;# 
  1649  0EA6                     	;# 
  1650  0EA7                     	;# 
  1651  0F0F                     	;# 
  1652  0F10                     	;# 
  1653  0F11                     	;# 
  1654  0F12                     	;# 
  1655  0F13                     	;# 
  1656  0F14                     	;# 
  1657  0F15                     	;# 
  1658  0F16                     	;# 
  1659  0F17                     	;# 
  1660  0F18                     	;# 
  1661  0F19                     	;# 
  1662  0F1A                     	;# 
  1663  0F1B                     	;# 
  1664  0F1C                     	;# 
  1665  0F1D                     	;# 
  1666  0F1E                     	;# 
  1667  0F1F                     	;# 
  1668  0F20                     	;# 
  1669  0F21                     	;# 
  1670  0F22                     	;# 
  1671  0F23                     	;# 
  1672  0F24                     	;# 
  1673  0F25                     	;# 
  1674  0F26                     	;# 
  1675  0F27                     	;# 
  1676  0F28                     	;# 
  1677  0F29                     	;# 
  1678  0F2A                     	;# 
  1679  0F2B                     	;# 
  1680  0F2C                     	;# 
  1681  0F2D                     	;# 
  1682  0F2E                     	;# 
  1683  0F2F                     	;# 
  1684  0F30                     	;# 
  1685  0F31                     	;# 
  1686  0F32                     	;# 
  1687  0F33                     	;# 
  1688  0F34                     	;# 
  1689  0F35                     	;# 
  1690  0F36                     	;# 
  1691  0F37                     	;# 
  1692  0FE4                     	;# 
  1693  0FE5                     	;# 
  1694  0FE6                     	;# 
  1695  0FE7                     	;# 
  1696  0FE8                     	;# 
  1697  0FE9                     	;# 
  1698  0FEA                     	;# 
  1699  0FEB                     	;# 
  1700  0FED                     	;# 
  1701  0FEE                     	;# 
  1702  0FEF                     	;# 
  1703  0000                     	;# 
  1704  0001                     	;# 
  1705  0002                     	;# 
  1706  0003                     	;# 
  1707  0004                     	;# 
  1708  0005                     	;# 
  1709  0006                     	;# 
  1710  0007                     	;# 
  1711  0008                     	;# 
  1712  0009                     	;# 
  1713  000A                     	;# 
  1714  000B                     	;# 
  1715  000C                     	;# 
  1716  000D                     	;# 
  1717  000E                     	;# 
  1718  0010                     	;# 
  1719  0011                     	;# 
  1720  0012                     	;# 
  1721  0013                     	;# 
  1722  0014                     	;# 
  1723  0015                     	;# 
  1724  0015                     	;# 
  1725  0016                     	;# 
  1726  0016                     	;# 
  1727  0017                     	;# 
  1728  0018                     	;# 
  1729  0019                     	;# 
  1730  0019                     	;# 
  1731  001A                     	;# 
  1732  001B                     	;# 
  1733  001C                     	;# 
  1734  001D                     	;# 
  1735  001E                     	;# 
  1736  001F                     	;# 
  1737  008C                     	;# 
  1738  008D                     	;# 
  1739  008E                     	;# 
  1740  0090                     	;# 
  1741  0091                     	;# 
  1742  0092                     	;# 
  1743  0093                     	;# 
  1744  0094                     	;# 
  1745  0097                     	;# 
  1746  009B                     	;# 
  1747  009B                     	;# 
  1748  009C                     	;# 
  1749  009D                     	;# 
  1750  009E                     	;# 
  1751  009F                     	;# 
  1752  010C                     	;# 
  1753  010D                     	;# 
  1754  010E                     	;# 
  1755  0111                     	;# 
  1756  0112                     	;# 
  1757  0113                     	;# 
  1758  0114                     	;# 
  1759  0115                     	;# 
  1760  0116                     	;# 
  1761  0117                     	;# 
  1762  0118                     	;# 
  1763  0119                     	;# 
  1764  018C                     	;# 
  1765  018D                     	;# 
  1766  018E                     	;# 
  1767  0197                     	;# 
  1768  0199                     	;# 
  1769  0199                     	;# 
  1770  0199                     	;# 
  1771  019A                     	;# 
  1772  019A                     	;# 
  1773  019A                     	;# 
  1774  019B                     	;# 
  1775  019B                     	;# 
  1776  019B                     	;# 
  1777  019B                     	;# 
  1778  019B                     	;# 
  1779  019C                     	;# 
  1780  019C                     	;# 
  1781  019C                     	;# 
  1782  019D                     	;# 
  1783  019D                     	;# 
  1784  019D                     	;# 
  1785  019E                     	;# 
  1786  019E                     	;# 
  1787  019E                     	;# 
  1788  019F                     	;# 
  1789  019F                     	;# 
  1790  019F                     	;# 
  1791  019F                     	;# 
  1792  019F                     	;# 
  1793  020C                     	;# 
  1794  020D                     	;# 
  1795  020E                     	;# 
  1796  0211                     	;# 
  1797  0211                     	;# 
  1798  0212                     	;# 
  1799  0212                     	;# 
  1800  0213                     	;# 
  1801  0213                     	;# 
  1802  0214                     	;# 
  1803  0214                     	;# 
  1804  0215                     	;# 
  1805  0215                     	;# 
  1806  0215                     	;# 
  1807  0215                     	;# 
  1808  0216                     	;# 
  1809  0216                     	;# 
  1810  0217                     	;# 
  1811  0217                     	;# 
  1812  0219                     	;# 
  1813  021A                     	;# 
  1814  021B                     	;# 
  1815  021C                     	;# 
  1816  021D                     	;# 
  1817  021D                     	;# 
  1818  021E                     	;# 
  1819  021F                     	;# 
  1820  028C                     	;# 
  1821  028D                     	;# 
  1822  028E                     	;# 
  1823  0291                     	;# 
  1824  0291                     	;# 
  1825  0292                     	;# 
  1826  0293                     	;# 
  1827  0294                     	;# 
  1828  0295                     	;# 
  1829  0295                     	;# 
  1830  0296                     	;# 
  1831  0297                     	;# 
  1832  0298                     	;# 
  1833  029F                     	;# 
  1834  030C                     	;# 
  1835  030D                     	;# 
  1836  030E                     	;# 
  1837  0311                     	;# 
  1838  0311                     	;# 
  1839  0312                     	;# 
  1840  0313                     	;# 
  1841  0314                     	;# 
  1842  0315                     	;# 
  1843  0315                     	;# 
  1844  0316                     	;# 
  1845  0317                     	;# 
  1846  0318                     	;# 
  1847  038C                     	;# 
  1848  038D                     	;# 
  1849  038E                     	;# 
  1850  0391                     	;# 
  1851  0392                     	;# 
  1852  0393                     	;# 
  1853  0394                     	;# 
  1854  0395                     	;# 
  1855  0396                     	;# 
  1856  0397                     	;# 
  1857  0398                     	;# 
  1858  0399                     	;# 
  1859  039A                     	;# 
  1860  039C                     	;# 
  1861  039D                     	;# 
  1862  039E                     	;# 
  1863  039F                     	;# 
  1864  0411                     	;# 
  1865  0411                     	;# 
  1866  0412                     	;# 
  1867  0413                     	;# 
  1868  0414                     	;# 
  1869  0415                     	;# 
  1870  0416                     	;# 
  1871  0417                     	;# 
  1872  0418                     	;# 
  1873  0418                     	;# 
  1874  0419                     	;# 
  1875  041A                     	;# 
  1876  041B                     	;# 
  1877  041C                     	;# 
  1878  041D                     	;# 
  1879  041E                     	;# 
  1880  041F                     	;# 
  1881  0498                     	;# 
  1882  0498                     	;# 
  1883  0499                     	;# 
  1884  049A                     	;# 
  1885  049B                     	;# 
  1886  049B                     	;# 
  1887  049C                     	;# 
  1888  049D                     	;# 
  1889  049E                     	;# 
  1890  049F                     	;# 
  1891  0617                     	;# 
  1892  0618                     	;# 
  1893  0619                     	;# 
  1894  0619                     	;# 
  1895  061A                     	;# 
  1896  061B                     	;# 
  1897  061C                     	;# 
  1898  061C                     	;# 
  1899  061F                     	;# 
  1900  0691                     	;# 
  1901  0692                     	;# 
  1902  0693                     	;# 
  1903  0694                     	;# 
  1904  0695                     	;# 
  1905  0696                     	;# 
  1906  0697                     	;# 
  1907  0698                     	;# 
  1908  0699                     	;# 
  1909  0711                     	;# 
  1910  0712                     	;# 
  1911  0713                     	;# 
  1912  0714                     	;# 
  1913  0715                     	;# 
  1914  0716                     	;# 
  1915  0717                     	;# 
  1916  0718                     	;# 
  1917  0719                     	;# 
  1918  0891                     	;# 
  1919  0891                     	;# 
  1920  0891                     	;# 
  1921  0891                     	;# 
  1922  0891                     	;# 
  1923  0891                     	;# 
  1924  0892                     	;# 
  1925  0892                     	;# 
  1926  0892                     	;# 
  1927  0893                     	;# 
  1928  0893                     	;# 
  1929  0893                     	;# 
  1930  0893                     	;# 
  1931  0893                     	;# 
  1932  0893                     	;# 
  1933  0894                     	;# 
  1934  0894                     	;# 
  1935  0894                     	;# 
  1936  0895                     	;# 
  1937  0895                     	;# 
  1938  0895                     	;# 
  1939  0896                     	;# 
  1940  0896                     	;# 
  1941  0896                     	;# 
  1942  089B                     	;# 
  1943  0911                     	;# 
  1944  0912                     	;# 
  1945  0913                     	;# 
  1946  0914                     	;# 
  1947  0915                     	;# 
  1948  0916                     	;# 
  1949  0918                     	;# 
  1950  0919                     	;# 
  1951  091A                     	;# 
  1952  091B                     	;# 
  1953  091C                     	;# 
  1954  091D                     	;# 
  1955  091E                     	;# 
  1956  091F                     	;# 
  1957  0E0F                     	;# 
  1958  0E10                     	;# 
  1959  0E11                     	;# 
  1960  0E12                     	;# 
  1961  0E13                     	;# 
  1962  0E14                     	;# 
  1963  0E15                     	;# 
  1964  0E16                     	;# 
  1965  0E17                     	;# 
  1966  0E18                     	;# 
  1967  0E19                     	;# 
  1968  0E1A                     	;# 
  1969  0E1B                     	;# 
  1970  0E1C                     	;# 
  1971  0E1D                     	;# 
  1972  0E1E                     	;# 
  1973  0E1F                     	;# 
  1974  0E20                     	;# 
  1975  0E21                     	;# 
  1976  0E22                     	;# 
  1977  0E24                     	;# 
  1978  0E25                     	;# 
  1979  0E28                     	;# 
  1980  0E29                     	;# 
  1981  0E2A                     	;# 
  1982  0E2B                     	;# 
  1983  0E2C                     	;# 
  1984  0E2D                     	;# 
  1985  0E2E                     	;# 
  1986  0E2F                     	;# 
  1987  0E90                     	;# 
  1988  0E91                     	;# 
  1989  0E92                     	;# 
  1990  0E94                     	;# 
  1991  0E95                     	;# 
  1992  0E9C                     	;# 
  1993  0E9D                     	;# 
  1994  0E9E                     	;# 
  1995  0E9F                     	;# 
  1996  0EA0                     	;# 
  1997  0EA1                     	;# 
  1998  0EA2                     	;# 
  1999  0EA3                     	;# 
  2000  0EA4                     	;# 
  2001  0EA5                     	;# 
  2002  0EA6                     	;# 
  2003  0EA7                     	;# 
  2004  0F0F                     	;# 
  2005  0F10                     	;# 
  2006  0F11                     	;# 
  2007  0F12                     	;# 
  2008  0F13                     	;# 
  2009  0F14                     	;# 
  2010  0F15                     	;# 
  2011  0F16                     	;# 
  2012  0F17                     	;# 
  2013  0F18                     	;# 
  2014  0F19                     	;# 
  2015  0F1A                     	;# 
  2016  0F1B                     	;# 
  2017  0F1C                     	;# 
  2018  0F1D                     	;# 
  2019  0F1E                     	;# 
  2020  0F1F                     	;# 
  2021  0F20                     	;# 
  2022  0F21                     	;# 
  2023  0F22                     	;# 
  2024  0F23                     	;# 
  2025  0F24                     	;# 
  2026  0F25                     	;# 
  2027  0F26                     	;# 
  2028  0F27                     	;# 
  2029  0F28                     	;# 
  2030  0F29                     	;# 
  2031  0F2A                     	;# 
  2032  0F2B                     	;# 
  2033  0F2C                     	;# 
  2034  0F2D                     	;# 
  2035  0F2E                     	;# 
  2036  0F2F                     	;# 
  2037  0F30                     	;# 
  2038  0F31                     	;# 
  2039  0F32                     	;# 
  2040  0F33                     	;# 
  2041  0F34                     	;# 
  2042  0F35                     	;# 
  2043  0F36                     	;# 
  2044  0F37                     	;# 
  2045  0FE4                     	;# 
  2046  0FE5                     	;# 
  2047  0FE6                     	;# 
  2048  0FE7                     	;# 
  2049  0FE8                     	;# 
  2050  0FE9                     	;# 
  2051  0FEA                     	;# 
  2052  0FEB                     	;# 
  2053  0FED                     	;# 
  2054  0FEE                     	;# 
  2055  0FEF                     	;# 
  2056  0000                     	;# 
  2057  0001                     	;# 
  2058  0002                     	;# 
  2059  0003                     	;# 
  2060  0004                     	;# 
  2061  0005                     	;# 
  2062  0006                     	;# 
  2063  0007                     	;# 
  2064  0008                     	;# 
  2065  0009                     	;# 
  2066  000A                     	;# 
  2067  000B                     	;# 
  2068  000C                     	;# 
  2069  000D                     	;# 
  2070  000E                     	;# 
  2071  0010                     	;# 
  2072  0011                     	;# 
  2073  0012                     	;# 
  2074  0013                     	;# 
  2075  0014                     	;# 
  2076  0015                     	;# 
  2077  0015                     	;# 
  2078  0016                     	;# 
  2079  0016                     	;# 
  2080  0017                     	;# 
  2081  0018                     	;# 
  2082  0019                     	;# 
  2083  0019                     	;# 
  2084  001A                     	;# 
  2085  001B                     	;# 
  2086  001C                     	;# 
  2087  001D                     	;# 
  2088  001E                     	;# 
  2089  001F                     	;# 
  2090  008C                     	;# 
  2091  008D                     	;# 
  2092  008E                     	;# 
  2093  0090                     	;# 
  2094  0091                     	;# 
  2095  0092                     	;# 
  2096  0093                     	;# 
  2097  0094                     	;# 
  2098  0097                     	;# 
  2099  009B                     	;# 
  2100  009B                     	;# 
  2101  009C                     	;# 
  2102  009D                     	;# 
  2103  009E                     	;# 
  2104  009F                     	;# 
  2105  010C                     	;# 
  2106  010D                     	;# 
  2107  010E                     	;# 
  2108  0111                     	;# 
  2109  0112                     	;# 
  2110  0113                     	;# 
  2111  0114                     	;# 
  2112  0115                     	;# 
  2113  0116                     	;# 
  2114  0117                     	;# 
  2115  0118                     	;# 
  2116  0119                     	;# 
  2117  018C                     	;# 
  2118  018D                     	;# 
  2119  018E                     	;# 
  2120  0197                     	;# 
  2121  0199                     	;# 
  2122  0199                     	;# 
  2123  0199                     	;# 
  2124  019A                     	;# 
  2125  019A                     	;# 
  2126  019A                     	;# 
  2127  019B                     	;# 
  2128  019B                     	;# 
  2129  019B                     	;# 
  2130  019B                     	;# 
  2131  019B                     	;# 
  2132  019C                     	;# 
  2133  019C                     	;# 
  2134  019C                     	;# 
  2135  019D                     	;# 
  2136  019D                     	;# 
  2137  019D                     	;# 
  2138  019E                     	;# 
  2139  019E                     	;# 
  2140  019E                     	;# 
  2141  019F                     	;# 
  2142  019F                     	;# 
  2143  019F                     	;# 
  2144  019F                     	;# 
  2145  019F                     	;# 
  2146  020C                     	;# 
  2147  020D                     	;# 
  2148  020E                     	;# 
  2149  0211                     	;# 
  2150  0211                     	;# 
  2151  0212                     	;# 
  2152  0212                     	;# 
  2153  0213                     	;# 
  2154  0213                     	;# 
  2155  0214                     	;# 
  2156  0214                     	;# 
  2157  0215                     	;# 
  2158  0215                     	;# 
  2159  0215                     	;# 
  2160  0215                     	;# 
  2161  0216                     	;# 
  2162  0216                     	;# 
  2163  0217                     	;# 
  2164  0217                     	;# 
  2165  0219                     	;# 
  2166  021A                     	;# 
  2167  021B                     	;# 
  2168  021C                     	;# 
  2169  021D                     	;# 
  2170  021D                     	;# 
  2171  021E                     	;# 
  2172  021F                     	;# 
  2173  028C                     	;# 
  2174  028D                     	;# 
  2175  028E                     	;# 
  2176  0291                     	;# 
  2177  0291                     	;# 
  2178  0292                     	;# 
  2179  0293                     	;# 
  2180  0294                     	;# 
  2181  0295                     	;# 
  2182  0295                     	;# 
  2183  0296                     	;# 
  2184  0297                     	;# 
  2185  0298                     	;# 
  2186  029F                     	;# 
  2187  030C                     	;# 
  2188  030D                     	;# 
  2189  030E                     	;# 
  2190  0311                     	;# 
  2191  0311                     	;# 
  2192  0312                     	;# 
  2193  0313                     	;# 
  2194  0314                     	;# 
  2195  0315                     	;# 
  2196  0315                     	;# 
  2197  0316                     	;# 
  2198  0317                     	;# 
  2199  0318                     	;# 
  2200  038C                     	;# 
  2201  038D                     	;# 
  2202  038E                     	;# 
  2203  0391                     	;# 
  2204  0392                     	;# 
  2205  0393                     	;# 
  2206  0394                     	;# 
  2207  0395                     	;# 
  2208  0396                     	;# 
  2209  0397                     	;# 
  2210  0398                     	;# 
  2211  0399                     	;# 
  2212  039A                     	;# 
  2213  039C                     	;# 
  2214  039D                     	;# 
  2215  039E                     	;# 
  2216  039F                     	;# 
  2217  0411                     	;# 
  2218  0411                     	;# 
  2219  0412                     	;# 
  2220  0413                     	;# 
  2221  0414                     	;# 
  2222  0415                     	;# 
  2223  0416                     	;# 
  2224  0417                     	;# 
  2225  0418                     	;# 
  2226  0418                     	;# 
  2227  0419                     	;# 
  2228  041A                     	;# 
  2229  041B                     	;# 
  2230  041C                     	;# 
  2231  041D                     	;# 
  2232  041E                     	;# 
  2233  041F                     	;# 
  2234  0498                     	;# 
  2235  0498                     	;# 
  2236  0499                     	;# 
  2237  049A                     	;# 
  2238  049B                     	;# 
  2239  049B                     	;# 
  2240  049C                     	;# 
  2241  049D                     	;# 
  2242  049E                     	;# 
  2243  049F                     	;# 
  2244  0617                     	;# 
  2245  0618                     	;# 
  2246  0619                     	;# 
  2247  0619                     	;# 
  2248  061A                     	;# 
  2249  061B                     	;# 
  2250  061C                     	;# 
  2251  061C                     	;# 
  2252  061F                     	;# 
  2253  0691                     	;# 
  2254  0692                     	;# 
  2255  0693                     	;# 
  2256  0694                     	;# 
  2257  0695                     	;# 
  2258  0696                     	;# 
  2259  0697                     	;# 
  2260  0698                     	;# 
  2261  0699                     	;# 
  2262  0711                     	;# 
  2263  0712                     	;# 
  2264  0713                     	;# 
  2265  0714                     	;# 
  2266  0715                     	;# 
  2267  0716                     	;# 
  2268  0717                     	;# 
  2269  0718                     	;# 
  2270  0719                     	;# 
  2271  0891                     	;# 
  2272  0891                     	;# 
  2273  0891                     	;# 
  2274  0891                     	;# 
  2275  0891                     	;# 
  2276  0891                     	;# 
  2277  0892                     	;# 
  2278  0892                     	;# 
  2279  0892                     	;# 
  2280  0893                     	;# 
  2281  0893                     	;# 
  2282  0893                     	;# 
  2283  0893                     	;# 
  2284  0893                     	;# 
  2285  0893                     	;# 
  2286  0894                     	;# 
  2287  0894                     	;# 
  2288  0894                     	;# 
  2289  0895                     	;# 
  2290  0895                     	;# 
  2291  0895                     	;# 
  2292  0896                     	;# 
  2293  0896                     	;# 
  2294  0896                     	;# 
  2295  089B                     	;# 
  2296  0911                     	;# 
  2297  0912                     	;# 
  2298  0913                     	;# 
  2299  0914                     	;# 
  2300  0915                     	;# 
  2301  0916                     	;# 
  2302  0918                     	;# 
  2303  0919                     	;# 
  2304  091A                     	;# 
  2305  091B                     	;# 
  2306  091C                     	;# 
  2307  091D                     	;# 
  2308  091E                     	;# 
  2309  091F                     	;# 
  2310  0E0F                     	;# 
  2311  0E10                     	;# 
  2312  0E11                     	;# 
  2313  0E12                     	;# 
  2314  0E13                     	;# 
  2315  0E14                     	;# 
  2316  0E15                     	;# 
  2317  0E16                     	;# 
  2318  0E17                     	;# 
  2319  0E18                     	;# 
  2320  0E19                     	;# 
  2321  0E1A                     	;# 
  2322  0E1B                     	;# 
  2323  0E1C                     	;# 
  2324  0E1D                     	;# 
  2325  0E1E                     	;# 
  2326  0E1F                     	;# 
  2327  0E20                     	;# 
  2328  0E21                     	;# 
  2329  0E22                     	;# 
  2330  0E24                     	;# 
  2331  0E25                     	;# 
  2332  0E28                     	;# 
  2333  0E29                     	;# 
  2334  0E2A                     	;# 
  2335  0E2B                     	;# 
  2336  0E2C                     	;# 
  2337  0E2D                     	;# 
  2338  0E2E                     	;# 
  2339  0E2F                     	;# 
  2340  0E90                     	;# 
  2341  0E91                     	;# 
  2342  0E92                     	;# 
  2343  0E94                     	;# 
  2344  0E95                     	;# 
  2345  0E9C                     	;# 
  2346  0E9D                     	;# 
  2347  0E9E                     	;# 
  2348  0E9F                     	;# 
  2349  0EA0                     	;# 
  2350  0EA1                     	;# 
  2351  0EA2                     	;# 
  2352  0EA3                     	;# 
  2353  0EA4                     	;# 
  2354  0EA5                     	;# 
  2355  0EA6                     	;# 
  2356  0EA7                     	;# 
  2357  0F0F                     	;# 
  2358  0F10                     	;# 
  2359  0F11                     	;# 
  2360  0F12                     	;# 
  2361  0F13                     	;# 
  2362  0F14                     	;# 
  2363  0F15                     	;# 
  2364  0F16                     	;# 
  2365  0F17                     	;# 
  2366  0F18                     	;# 
  2367  0F19                     	;# 
  2368  0F1A                     	;# 
  2369  0F1B                     	;# 
  2370  0F1C                     	;# 
  2371  0F1D                     	;# 
  2372  0F1E                     	;# 
  2373  0F1F                     	;# 
  2374  0F20                     	;# 
  2375  0F21                     	;# 
  2376  0F22                     	;# 
  2377  0F23                     	;# 
  2378  0F24                     	;# 
  2379  0F25                     	;# 
  2380  0F26                     	;# 
  2381  0F27                     	;# 
  2382  0F28                     	;# 
  2383  0F29                     	;# 
  2384  0F2A                     	;# 
  2385  0F2B                     	;# 
  2386  0F2C                     	;# 
  2387  0F2D                     	;# 
  2388  0F2E                     	;# 
  2389  0F2F                     	;# 
  2390  0F30                     	;# 
  2391  0F31                     	;# 
  2392  0F32                     	;# 
  2393  0F33                     	;# 
  2394  0F34                     	;# 
  2395  0F35                     	;# 
  2396  0F36                     	;# 
  2397  0F37                     	;# 
  2398  0FE4                     	;# 
  2399  0FE5                     	;# 
  2400  0FE6                     	;# 
  2401  0FE7                     	;# 
  2402  0FE8                     	;# 
  2403  0FE9                     	;# 
  2404  0FEA                     	;# 
  2405  0FEB                     	;# 
  2406  0FED                     	;# 
  2407  0FEE                     	;# 
  2408  0FEF                     	;# 
  2409  0000                     	;# 
  2410  0001                     	;# 
  2411  0002                     	;# 
  2412  0003                     	;# 
  2413  0004                     	;# 
  2414  0005                     	;# 
  2415  0006                     	;# 
  2416  0007                     	;# 
  2417  0008                     	;# 
  2418  0009                     	;# 
  2419  000A                     	;# 
  2420  000B                     	;# 
  2421  000C                     	;# 
  2422  000D                     	;# 
  2423  000E                     	;# 
  2424  0010                     	;# 
  2425  0011                     	;# 
  2426  0012                     	;# 
  2427  0013                     	;# 
  2428  0014                     	;# 
  2429  0015                     	;# 
  2430  0015                     	;# 
  2431  0016                     	;# 
  2432  0016                     	;# 
  2433  0017                     	;# 
  2434  0018                     	;# 
  2435  0019                     	;# 
  2436  0019                     	;# 
  2437  001A                     	;# 
  2438  001B                     	;# 
  2439  001C                     	;# 
  2440  001D                     	;# 
  2441  001E                     	;# 
  2442  001F                     	;# 
  2443  008C                     	;# 
  2444  008D                     	;# 
  2445  008E                     	;# 
  2446  0090                     	;# 
  2447  0091                     	;# 
  2448  0092                     	;# 
  2449  0093                     	;# 
  2450  0094                     	;# 
  2451  0097                     	;# 
  2452  009B                     	;# 
  2453  009B                     	;# 
  2454  009C                     	;# 
  2455  009D                     	;# 
  2456  009E                     	;# 
  2457  009F                     	;# 
  2458  010C                     	;# 
  2459  010D                     	;# 
  2460  010E                     	;# 
  2461  0111                     	;# 
  2462  0112                     	;# 
  2463  0113                     	;# 
  2464  0114                     	;# 
  2465  0115                     	;# 
  2466  0116                     	;# 
  2467  0117                     	;# 
  2468  0118                     	;# 
  2469  0119                     	;# 
  2470  018C                     	;# 
  2471  018D                     	;# 
  2472  018E                     	;# 
  2473  0197                     	;# 
  2474  0199                     	;# 
  2475  0199                     	;# 
  2476  0199                     	;# 
  2477  019A                     	;# 
  2478  019A                     	;# 
  2479  019A                     	;# 
  2480  019B                     	;# 
  2481  019B                     	;# 
  2482  019B                     	;# 
  2483  019B                     	;# 
  2484  019B                     	;# 
  2485  019C                     	;# 
  2486  019C                     	;# 
  2487  019C                     	;# 
  2488  019D                     	;# 
  2489  019D                     	;# 
  2490  019D                     	;# 
  2491  019E                     	;# 
  2492  019E                     	;# 
  2493  019E                     	;# 
  2494  019F                     	;# 
  2495  019F                     	;# 
  2496  019F                     	;# 
  2497  019F                     	;# 
  2498  019F                     	;# 
  2499  020C                     	;# 
  2500  020D                     	;# 
  2501  020E                     	;# 
  2502  0211                     	;# 
  2503  0211                     	;# 
  2504  0212                     	;# 
  2505  0212                     	;# 
  2506  0213                     	;# 
  2507  0213                     	;# 
  2508  0214                     	;# 
  2509  0214                     	;# 
  2510  0215                     	;# 
  2511  0215                     	;# 
  2512  0215                     	;# 
  2513  0215                     	;# 
  2514  0216                     	;# 
  2515  0216                     	;# 
  2516  0217                     	;# 
  2517  0217                     	;# 
  2518  0219                     	;# 
  2519  021A                     	;# 
  2520  021B                     	;# 
  2521  021C                     	;# 
  2522  021D                     	;# 
  2523  021D                     	;# 
  2524  021E                     	;# 
  2525  021F                     	;# 
  2526  028C                     	;# 
  2527  028D                     	;# 
  2528  028E                     	;# 
  2529  0291                     	;# 
  2530  0291                     	;# 
  2531  0292                     	;# 
  2532  0293                     	;# 
  2533  0294                     	;# 
  2534  0295                     	;# 
  2535  0295                     	;# 
  2536  0296                     	;# 
  2537  0297                     	;# 
  2538  0298                     	;# 
  2539  029F                     	;# 
  2540  030C                     	;# 
  2541  030D                     	;# 
  2542  030E                     	;# 
  2543  0311                     	;# 
  2544  0311                     	;# 
  2545  0312                     	;# 
  2546  0313                     	;# 
  2547  0314                     	;# 
  2548  0315                     	;# 
  2549  0315                     	;# 
  2550  0316                     	;# 
  2551  0317                     	;# 
  2552  0318                     	;# 
  2553  038C                     	;# 
  2554  038D                     	;# 
  2555  038E                     	;# 
  2556  0391                     	;# 
  2557  0392                     	;# 
  2558  0393                     	;# 
  2559  0394                     	;# 
  2560  0395                     	;# 
  2561  0396                     	;# 
  2562  0397                     	;# 
  2563  0398                     	;# 
  2564  0399                     	;# 
  2565  039A                     	;# 
  2566  039C                     	;# 
  2567  039D                     	;# 
  2568  039E                     	;# 
  2569  039F                     	;# 
  2570  0411                     	;# 
  2571  0411                     	;# 
  2572  0412                     	;# 
  2573  0413                     	;# 
  2574  0414                     	;# 
  2575  0415                     	;# 
  2576  0416                     	;# 
  2577  0417                     	;# 
  2578  0418                     	;# 
  2579  0418                     	;# 
  2580  0419                     	;# 
  2581  041A                     	;# 
  2582  041B                     	;# 
  2583  041C                     	;# 
  2584  041D                     	;# 
  2585  041E                     	;# 
  2586  041F                     	;# 
  2587  0498                     	;# 
  2588  0498                     	;# 
  2589  0499                     	;# 
  2590  049A                     	;# 
  2591  049B                     	;# 
  2592  049B                     	;# 
  2593  049C                     	;# 
  2594  049D                     	;# 
  2595  049E                     	;# 
  2596  049F                     	;# 
  2597  0617                     	;# 
  2598  0618                     	;# 
  2599  0619                     	;# 
  2600  0619                     	;# 
  2601  061A                     	;# 
  2602  061B                     	;# 
  2603  061C                     	;# 
  2604  061C                     	;# 
  2605  061F                     	;# 
  2606  0691                     	;# 
  2607  0692                     	;# 
  2608  0693                     	;# 
  2609  0694                     	;# 
  2610  0695                     	;# 
  2611  0696                     	;# 
  2612  0697                     	;# 
  2613  0698                     	;# 
  2614  0699                     	;# 
  2615  0711                     	;# 
  2616  0712                     	;# 
  2617  0713                     	;# 
  2618  0714                     	;# 
  2619  0715                     	;# 
  2620  0716                     	;# 
  2621  0717                     	;# 
  2622  0718                     	;# 
  2623  0719                     	;# 
  2624  0891                     	;# 
  2625  0891                     	;# 
  2626  0891                     	;# 
  2627  0891                     	;# 
  2628  0891                     	;# 
  2629  0891                     	;# 
  2630  0892                     	;# 
  2631  0892                     	;# 
  2632  0892                     	;# 
  2633  0893                     	;# 
  2634  0893                     	;# 
  2635  0893                     	;# 
  2636  0893                     	;# 
  2637  0893                     	;# 
  2638  0893                     	;# 
  2639  0894                     	;# 
  2640  0894                     	;# 
  2641  0894                     	;# 
  2642  0895                     	;# 
  2643  0895                     	;# 
  2644  0895                     	;# 
  2645  0896                     	;# 
  2646  0896                     	;# 
  2647  0896                     	;# 
  2648  089B                     	;# 
  2649  0911                     	;# 
  2650  0912                     	;# 
  2651  0913                     	;# 
  2652  0914                     	;# 
  2653  0915                     	;# 
  2654  0916                     	;# 
  2655  0918                     	;# 
  2656  0919                     	;# 
  2657  091A                     	;# 
  2658  091B                     	;# 
  2659  091C                     	;# 
  2660  091D                     	;# 
  2661  091E                     	;# 
  2662  091F                     	;# 
  2663  0E0F                     	;# 
  2664  0E10                     	;# 
  2665  0E11                     	;# 
  2666  0E12                     	;# 
  2667  0E13                     	;# 
  2668  0E14                     	;# 
  2669  0E15                     	;# 
  2670  0E16                     	;# 
  2671  0E17                     	;# 
  2672  0E18                     	;# 
  2673  0E19                     	;# 
  2674  0E1A                     	;# 
  2675  0E1B                     	;# 
  2676  0E1C                     	;# 
  2677  0E1D                     	;# 
  2678  0E1E                     	;# 
  2679  0E1F                     	;# 
  2680  0E20                     	;# 
  2681  0E21                     	;# 
  2682  0E22                     	;# 
  2683  0E24                     	;# 
  2684  0E25                     	;# 
  2685  0E28                     	;# 
  2686  0E29                     	;# 
  2687  0E2A                     	;# 
  2688  0E2B                     	;# 
  2689  0E2C                     	;# 
  2690  0E2D                     	;# 
  2691  0E2E                     	;# 
  2692  0E2F                     	;# 
  2693  0E90                     	;# 
  2694  0E91                     	;# 
  2695  0E92                     	;# 
  2696  0E94                     	;# 
  2697  0E95                     	;# 
  2698  0E9C                     	;# 
  2699  0E9D                     	;# 
  2700  0E9E                     	;# 
  2701  0E9F                     	;# 
  2702  0EA0                     	;# 
  2703  0EA1                     	;# 
  2704  0EA2                     	;# 
  2705  0EA3                     	;# 
  2706  0EA4                     	;# 
  2707  0EA5                     	;# 
  2708  0EA6                     	;# 
  2709  0EA7                     	;# 
  2710  0F0F                     	;# 
  2711  0F10                     	;# 
  2712  0F11                     	;# 
  2713  0F12                     	;# 
  2714  0F13                     	;# 
  2715  0F14                     	;# 
  2716  0F15                     	;# 
  2717  0F16                     	;# 
  2718  0F17                     	;# 
  2719  0F18                     	;# 
  2720  0F19                     	;# 
  2721  0F1A                     	;# 
  2722  0F1B                     	;# 
  2723  0F1C                     	;# 
  2724  0F1D                     	;# 
  2725  0F1E                     	;# 
  2726  0F1F                     	;# 
  2727  0F20                     	;# 
  2728  0F21                     	;# 
  2729  0F22                     	;# 
  2730  0F23                     	;# 
  2731  0F24                     	;# 
  2732  0F25                     	;# 
  2733  0F26                     	;# 
  2734  0F27                     	;# 
  2735  0F28                     	;# 
  2736  0F29                     	;# 
  2737  0F2A                     	;# 
  2738  0F2B                     	;# 
  2739  0F2C                     	;# 
  2740  0F2D                     	;# 
  2741  0F2E                     	;# 
  2742  0F2F                     	;# 
  2743  0F30                     	;# 
  2744  0F31                     	;# 
  2745  0F32                     	;# 
  2746  0F33                     	;# 
  2747  0F34                     	;# 
  2748  0F35                     	;# 
  2749  0F36                     	;# 
  2750  0F37                     	;# 
  2751  0FE4                     	;# 
  2752  0FE5                     	;# 
  2753  0FE6                     	;# 
  2754  0FE7                     	;# 
  2755  0FE8                     	;# 
  2756  0FE9                     	;# 
  2757  0FEA                     	;# 
  2758  0FEB                     	;# 
  2759  0FED                     	;# 
  2760  0FEE                     	;# 
  2761  0FEF                     	;# 
  2762  0000                     	;# 
  2763  0001                     	;# 
  2764  0002                     	;# 
  2765  0003                     	;# 
  2766  0004                     	;# 
  2767  0005                     	;# 
  2768  0006                     	;# 
  2769  0007                     	;# 
  2770  0008                     	;# 
  2771  0009                     	;# 
  2772  000A                     	;# 
  2773  000B                     	;# 
  2774  000C                     	;# 
  2775  000D                     	;# 
  2776  000E                     	;# 
  2777  0010                     	;# 
  2778  0011                     	;# 
  2779  0012                     	;# 
  2780  0013                     	;# 
  2781  0014                     	;# 
  2782  0015                     	;# 
  2783  0015                     	;# 
  2784  0016                     	;# 
  2785  0016                     	;# 
  2786  0017                     	;# 
  2787  0018                     	;# 
  2788  0019                     	;# 
  2789  0019                     	;# 
  2790  001A                     	;# 
  2791  001B                     	;# 
  2792  001C                     	;# 
  2793  001D                     	;# 
  2794  001E                     	;# 
  2795  001F                     	;# 
  2796  008C                     	;# 
  2797  008D                     	;# 
  2798  008E                     	;# 
  2799  0090                     	;# 
  2800  0091                     	;# 
  2801  0092                     	;# 
  2802  0093                     	;# 
  2803  0094                     	;# 
  2804  0097                     	;# 
  2805  009B                     	;# 
  2806  009B                     	;# 
  2807  009C                     	;# 
  2808  009D                     	;# 
  2809  009E                     	;# 
  2810  009F                     	;# 
  2811  010C                     	;# 
  2812  010D                     	;# 
  2813  010E                     	;# 
  2814  0111                     	;# 
  2815  0112                     	;# 
  2816  0113                     	;# 
  2817  0114                     	;# 
  2818  0115                     	;# 
  2819  0116                     	;# 
  2820  0117                     	;# 
  2821  0118                     	;# 
  2822  0119                     	;# 
  2823  018C                     	;# 
  2824  018D                     	;# 
  2825  018E                     	;# 
  2826  0197                     	;# 
  2827  0199                     	;# 
  2828  0199                     	;# 
  2829  0199                     	;# 
  2830  019A                     	;# 
  2831  019A                     	;# 
  2832  019A                     	;# 
  2833  019B                     	;# 
  2834  019B                     	;# 
  2835  019B                     	;# 
  2836  019B                     	;# 
  2837  019B                     	;# 
  2838  019C                     	;# 
  2839  019C                     	;# 
  2840  019C                     	;# 
  2841  019D                     	;# 
  2842  019D                     	;# 
  2843  019D                     	;# 
  2844  019E                     	;# 
  2845  019E                     	;# 
  2846  019E                     	;# 
  2847  019F                     	;# 
  2848  019F                     	;# 
  2849  019F                     	;# 
  2850  019F                     	;# 
  2851  019F                     	;# 
  2852  020C                     	;# 
  2853  020D                     	;# 
  2854  020E                     	;# 
  2855  0211                     	;# 
  2856  0211                     	;# 
  2857  0212                     	;# 
  2858  0212                     	;# 
  2859  0213                     	;# 
  2860  0213                     	;# 
  2861  0214                     	;# 
  2862  0214                     	;# 
  2863  0215                     	;# 
  2864  0215                     	;# 
  2865  0215                     	;# 
  2866  0215                     	;# 
  2867  0216                     	;# 
  2868  0216                     	;# 
  2869  0217                     	;# 
  2870  0217                     	;# 
  2871  0219                     	;# 
  2872  021A                     	;# 
  2873  021B                     	;# 
  2874  021C                     	;# 
  2875  021D                     	;# 
  2876  021D                     	;# 
  2877  021E                     	;# 
  2878  021F                     	;# 
  2879  028C                     	;# 
  2880  028D                     	;# 
  2881  028E                     	;# 
  2882  0291                     	;# 
  2883  0291                     	;# 
  2884  0292                     	;# 
  2885  0293                     	;# 
  2886  0294                     	;# 
  2887  0295                     	;# 
  2888  0295                     	;# 
  2889  0296                     	;# 
  2890  0297                     	;# 
  2891  0298                     	;# 
  2892  029F                     	;# 
  2893  030C                     	;# 
  2894  030D                     	;# 
  2895  030E                     	;# 
  2896  0311                     	;# 
  2897  0311                     	;# 
  2898  0312                     	;# 
  2899  0313                     	;# 
  2900  0314                     	;# 
  2901  0315                     	;# 
  2902  0315                     	;# 
  2903  0316                     	;# 
  2904  0317                     	;# 
  2905  0318                     	;# 
  2906  038C                     	;# 
  2907  038D                     	;# 
  2908  038E                     	;# 
  2909  0391                     	;# 
  2910  0392                     	;# 
  2911  0393                     	;# 
  2912  0394                     	;# 
  2913  0395                     	;# 
  2914  0396                     	;# 
  2915  0397                     	;# 
  2916  0398                     	;# 
  2917  0399                     	;# 
  2918  039A                     	;# 
  2919  039C                     	;# 
  2920  039D                     	;# 
  2921  039E                     	;# 
  2922  039F                     	;# 
  2923  0411                     	;# 
  2924  0411                     	;# 
  2925  0412                     	;# 
  2926  0413                     	;# 
  2927  0414                     	;# 
  2928  0415                     	;# 
  2929  0416                     	;# 
  2930  0417                     	;# 
  2931  0418                     	;# 
  2932  0418                     	;# 
  2933  0419                     	;# 
  2934  041A                     	;# 
  2935  041B                     	;# 
  2936  041C                     	;# 
  2937  041D                     	;# 
  2938  041E                     	;# 
  2939  041F                     	;# 
  2940  0498                     	;# 
  2941  0498                     	;# 
  2942  0499                     	;# 
  2943  049A                     	;# 
  2944  049B                     	;# 
  2945  049B                     	;# 
  2946  049C                     	;# 
  2947  049D                     	;# 
  2948  049E                     	;# 
  2949  049F                     	;# 
  2950  0617                     	;# 
  2951  0618                     	;# 
  2952  0619                     	;# 
  2953  0619                     	;# 
  2954  061A                     	;# 
  2955  061B                     	;# 
  2956  061C                     	;# 
  2957  061C                     	;# 
  2958  061F                     	;# 
  2959  0691                     	;# 
  2960  0692                     	;# 
  2961  0693                     	;# 
  2962  0694                     	;# 
  2963  0695                     	;# 
  2964  0696                     	;# 
  2965  0697                     	;# 
  2966  0698                     	;# 
  2967  0699                     	;# 
  2968  0711                     	;# 
  2969  0712                     	;# 
  2970  0713                     	;# 
  2971  0714                     	;# 
  2972  0715                     	;# 
  2973  0716                     	;# 
  2974  0717                     	;# 
  2975  0718                     	;# 
  2976  0719                     	;# 
  2977  0891                     	;# 
  2978  0891                     	;# 
  2979  0891                     	;# 
  2980  0891                     	;# 
  2981  0891                     	;# 
  2982  0891                     	;# 
  2983  0892                     	;# 
  2984  0892                     	;# 
  2985  0892                     	;# 
  2986  0893                     	;# 
  2987  0893                     	;# 
  2988  0893                     	;# 
  2989  0893                     	;# 
  2990  0893                     	;# 
  2991  0893                     	;# 
  2992  0894                     	;# 
  2993  0894                     	;# 
  2994  0894                     	;# 
  2995  0895                     	;# 
  2996  0895                     	;# 
  2997  0895                     	;# 
  2998  0896                     	;# 
  2999  0896                     	;# 
  3000  0896                     	;# 
  3001  089B                     	;# 
  3002  0911                     	;# 
  3003  0912                     	;# 
  3004  0913                     	;# 
  3005  0914                     	;# 
  3006  0915                     	;# 
  3007  0916                     	;# 
  3008  0918                     	;# 
  3009  0919                     	;# 
  3010  091A                     	;# 
  3011  091B                     	;# 
  3012  091C                     	;# 
  3013  091D                     	;# 
  3014  091E                     	;# 
  3015  091F                     	;# 
  3016  0E0F                     	;# 
  3017  0E10                     	;# 
  3018  0E11                     	;# 
  3019  0E12                     	;# 
  3020  0E13                     	;# 
  3021  0E14                     	;# 
  3022  0E15                     	;# 
  3023  0E16                     	;# 
  3024  0E17                     	;# 
  3025  0E18                     	;# 
  3026  0E19                     	;# 
  3027  0E1A                     	;# 
  3028  0E1B                     	;# 
  3029  0E1C                     	;# 
  3030  0E1D                     	;# 
  3031  0E1E                     	;# 
  3032  0E1F                     	;# 
  3033  0E20                     	;# 
  3034  0E21                     	;# 
  3035  0E22                     	;# 
  3036  0E24                     	;# 
  3037  0E25                     	;# 
  3038  0E28                     	;# 
  3039  0E29                     	;# 
  3040  0E2A                     	;# 
  3041  0E2B                     	;# 
  3042  0E2C                     	;# 
  3043  0E2D                     	;# 
  3044  0E2E                     	;# 
  3045  0E2F                     	;# 
  3046  0E90                     	;# 
  3047  0E91                     	;# 
  3048  0E92                     	;# 
  3049  0E94                     	;# 
  3050  0E95                     	;# 
  3051  0E9C                     	;# 
  3052  0E9D                     	;# 
  3053  0E9E                     	;# 
  3054  0E9F                     	;# 
  3055  0EA0                     	;# 
  3056  0EA1                     	;# 
  3057  0EA2                     	;# 
  3058  0EA3                     	;# 
  3059  0EA4                     	;# 
  3060  0EA5                     	;# 
  3061  0EA6                     	;# 
  3062  0EA7                     	;# 
  3063  0F0F                     	;# 
  3064  0F10                     	;# 
  3065  0F11                     	;# 
  3066  0F12                     	;# 
  3067  0F13                     	;# 
  3068  0F14                     	;# 
  3069  0F15                     	;# 
  3070  0F16                     	;# 
  3071  0F17                     	;# 
  3072  0F18                     	;# 
  3073  0F19                     	;# 
  3074  0F1A                     	;# 
  3075  0F1B                     	;# 
  3076  0F1C                     	;# 
  3077  0F1D                     	;# 
  3078  0F1E                     	;# 
  3079  0F1F                     	;# 
  3080  0F20                     	;# 
  3081  0F21                     	;# 
  3082  0F22                     	;# 
  3083  0F23                     	;# 
  3084  0F24                     	;# 
  3085  0F25                     	;# 
  3086  0F26                     	;# 
  3087  0F27                     	;# 
  3088  0F28                     	;# 
  3089  0F29                     	;# 
  3090  0F2A                     	;# 
  3091  0F2B                     	;# 
  3092  0F2C                     	;# 
  3093  0F2D                     	;# 
  3094  0F2E                     	;# 
  3095  0F2F                     	;# 
  3096  0F30                     	;# 
  3097  0F31                     	;# 
  3098  0F32                     	;# 
  3099  0F33                     	;# 
  3100  0F34                     	;# 
  3101  0F35                     	;# 
  3102  0F36                     	;# 
  3103  0F37                     	;# 
  3104  0FE4                     	;# 
  3105  0FE5                     	;# 
  3106  0FE6                     	;# 
  3107  0FE7                     	;# 
  3108  0FE8                     	;# 
  3109  0FE9                     	;# 
  3110  0FEA                     	;# 
  3111  0FEB                     	;# 
  3112  0FED                     	;# 
  3113  0FEE                     	;# 
  3114  0FEF                     	;# 
  3115  0000                     	;# 
  3116  0001                     	;# 
  3117  0002                     	;# 
  3118  0003                     	;# 
  3119  0004                     	;# 
  3120  0005                     	;# 
  3121  0006                     	;# 
  3122  0007                     	;# 
  3123  0008                     	;# 
  3124  0009                     	;# 
  3125  000A                     	;# 
  3126  000B                     	;# 
  3127  000C                     	;# 
  3128  000D                     	;# 
  3129  000E                     	;# 
  3130  0010                     	;# 
  3131  0011                     	;# 
  3132  0012                     	;# 
  3133  0013                     	;# 
  3134  0014                     	;# 
  3135  0015                     	;# 
  3136  0015                     	;# 
  3137  0016                     	;# 
  3138  0016                     	;# 
  3139  0017                     	;# 
  3140  0018                     	;# 
  3141  0019                     	;# 
  3142  0019                     	;# 
  3143  001A                     	;# 
  3144  001B                     	;# 
  3145  001C                     	;# 
  3146  001D                     	;# 
  3147  001E                     	;# 
  3148  001F                     	;# 
  3149  008C                     	;# 
  3150  008D                     	;# 
  3151  008E                     	;# 
  3152  0090                     	;# 
  3153  0091                     	;# 
  3154  0092                     	;# 
  3155  0093                     	;# 
  3156  0094                     	;# 
  3157  0097                     	;# 
  3158  009B                     	;# 
  3159  009B                     	;# 
  3160  009C                     	;# 
  3161  009D                     	;# 
  3162  009E                     	;# 
  3163  009F                     	;# 
  3164  010C                     	;# 
  3165  010D                     	;# 
  3166  010E                     	;# 
  3167  0111                     	;# 
  3168  0112                     	;# 
  3169  0113                     	;# 
  3170  0114                     	;# 
  3171  0115                     	;# 
  3172  0116                     	;# 
  3173  0117                     	;# 
  3174  0118                     	;# 
  3175  0119                     	;# 
  3176  018C                     	;# 
  3177  018D                     	;# 
  3178  018E                     	;# 
  3179  0197                     	;# 
  3180  0199                     	;# 
  3181  0199                     	;# 
  3182  0199                     	;# 
  3183  019A                     	;# 
  3184  019A                     	;# 
  3185  019A                     	;# 
  3186  019B                     	;# 
  3187  019B                     	;# 
  3188  019B                     	;# 
  3189  019B                     	;# 
  3190  019B                     	;# 
  3191  019C                     	;# 
  3192  019C                     	;# 
  3193  019C                     	;# 
  3194  019D                     	;# 
  3195  019D                     	;# 
  3196  019D                     	;# 
  3197  019E                     	;# 
  3198  019E                     	;# 
  3199  019E                     	;# 
  3200  019F                     	;# 
  3201  019F                     	;# 
  3202  019F                     	;# 
  3203  019F                     	;# 
  3204  019F                     	;# 
  3205  020C                     	;# 
  3206  020D                     	;# 
  3207  020E                     	;# 
  3208  0211                     	;# 
  3209  0211                     	;# 
  3210  0212                     	;# 
  3211  0212                     	;# 
  3212  0213                     	;# 
  3213  0213                     	;# 
  3214  0214                     	;# 
  3215  0214                     	;# 
  3216  0215                     	;# 
  3217  0215                     	;# 
  3218  0215                     	;# 
  3219  0215                     	;# 
  3220  0216                     	;# 
  3221  0216                     	;# 
  3222  0217                     	;# 
  3223  0217                     	;# 
  3224  0219                     	;# 
  3225  021A                     	;# 
  3226  021B                     	;# 
  3227  021C                     	;# 
  3228  021D                     	;# 
  3229  021D                     	;# 
  3230  021E                     	;# 
  3231  021F                     	;# 
  3232  028C                     	;# 
  3233  028D                     	;# 
  3234  028E                     	;# 
  3235  0291                     	;# 
  3236  0291                     	;# 
  3237  0292                     	;# 
  3238  0293                     	;# 
  3239  0294                     	;# 
  3240  0295                     	;# 
  3241  0295                     	;# 
  3242  0296                     	;# 
  3243  0297                     	;# 
  3244  0298                     	;# 
  3245  029F                     	;# 
  3246  030C                     	;# 
  3247  030D                     	;# 
  3248  030E                     	;# 
  3249  0311                     	;# 
  3250  0311                     	;# 
  3251  0312                     	;# 
  3252  0313                     	;# 
  3253  0314                     	;# 
  3254  0315                     	;# 
  3255  0315                     	;# 
  3256  0316                     	;# 
  3257  0317                     	;# 
  3258  0318                     	;# 
  3259  038C                     	;# 
  3260  038D                     	;# 
  3261  038E                     	;# 
  3262  0391                     	;# 
  3263  0392                     	;# 
  3264  0393                     	;# 
  3265  0394                     	;# 
  3266  0395                     	;# 
  3267  0396                     	;# 
  3268  0397                     	;# 
  3269  0398                     	;# 
  3270  0399                     	;# 
  3271  039A                     	;# 
  3272  039C                     	;# 
  3273  039D                     	;# 
  3274  039E                     	;# 
  3275  039F                     	;# 
  3276  0411                     	;# 
  3277  0411                     	;# 
  3278  0412                     	;# 
  3279  0413                     	;# 
  3280  0414                     	;# 
  3281  0415                     	;# 
  3282  0416                     	;# 
  3283  0417                     	;# 
  3284  0418                     	;# 
  3285  0418                     	;# 
  3286  0419                     	;# 
  3287  041A                     	;# 
  3288  041B                     	;# 
  3289  041C                     	;# 
  3290  041D                     	;# 
  3291  041E                     	;# 
  3292  041F                     	;# 
  3293  0498                     	;# 
  3294  0498                     	;# 
  3295  0499                     	;# 
  3296  049A                     	;# 
  3297  049B                     	;# 
  3298  049B                     	;# 
  3299  049C                     	;# 
  3300  049D                     	;# 
  3301  049E                     	;# 
  3302  049F                     	;# 
  3303  0617                     	;# 
  3304  0618                     	;# 
  3305  0619                     	;# 
  3306  0619                     	;# 
  3307  061A                     	;# 
  3308  061B                     	;# 
  3309  061C                     	;# 
  3310  061C                     	;# 
  3311  061F                     	;# 
  3312  0691                     	;# 
  3313  0692                     	;# 
  3314  0693                     	;# 
  3315  0694                     	;# 
  3316  0695                     	;# 
  3317  0696                     	;# 
  3318  0697                     	;# 
  3319  0698                     	;# 
  3320  0699                     	;# 
  3321  0711                     	;# 
  3322  0712                     	;# 
  3323  0713                     	;# 
  3324  0714                     	;# 
  3325  0715                     	;# 
  3326  0716                     	;# 
  3327  0717                     	;# 
  3328  0718                     	;# 
  3329  0719                     	;# 
  3330  0891                     	;# 
  3331  0891                     	;# 
  3332  0891                     	;# 
  3333  0891                     	;# 
  3334  0891                     	;# 
  3335  0891                     	;# 
  3336  0892                     	;# 
  3337  0892                     	;# 
  3338  0892                     	;# 
  3339  0893                     	;# 
  3340  0893                     	;# 
  3341  0893                     	;# 
  3342  0893                     	;# 
  3343  0893                     	;# 
  3344  0893                     	;# 
  3345  0894                     	;# 
  3346  0894                     	;# 
  3347  0894                     	;# 
  3348  0895                     	;# 
  3349  0895                     	;# 
  3350  0895                     	;# 
  3351  0896                     	;# 
  3352  0896                     	;# 
  3353  0896                     	;# 
  3354  089B                     	;# 
  3355  0911                     	;# 
  3356  0912                     	;# 
  3357  0913                     	;# 
  3358  0914                     	;# 
  3359  0915                     	;# 
  3360  0916                     	;# 
  3361  0918                     	;# 
  3362  0919                     	;# 
  3363  091A                     	;# 
  3364  091B                     	;# 
  3365  091C                     	;# 
  3366  091D                     	;# 
  3367  091E                     	;# 
  3368  091F                     	;# 
  3369  0E0F                     	;# 
  3370  0E10                     	;# 
  3371  0E11                     	;# 
  3372  0E12                     	;# 
  3373  0E13                     	;# 
  3374  0E14                     	;# 
  3375  0E15                     	;# 
  3376  0E16                     	;# 
  3377  0E17                     	;# 
  3378  0E18                     	;# 
  3379  0E19                     	;# 
  3380  0E1A                     	;# 
  3381  0E1B                     	;# 
  3382  0E1C                     	;# 
  3383  0E1D                     	;# 
  3384  0E1E                     	;# 
  3385  0E1F                     	;# 
  3386  0E20                     	;# 
  3387  0E21                     	;# 
  3388  0E22                     	;# 
  3389  0E24                     	;# 
  3390  0E25                     	;# 
  3391  0E28                     	;# 
  3392  0E29                     	;# 
  3393  0E2A                     	;# 
  3394  0E2B                     	;# 
  3395  0E2C                     	;# 
  3396  0E2D                     	;# 
  3397  0E2E                     	;# 
  3398  0E2F                     	;# 
  3399  0E90                     	;# 
  3400  0E91                     	;# 
  3401  0E92                     	;# 
  3402  0E94                     	;# 
  3403  0E95                     	;# 
  3404  0E9C                     	;# 
  3405  0E9D                     	;# 
  3406  0E9E                     	;# 
  3407  0E9F                     	;# 
  3408  0EA0                     	;# 
  3409  0EA1                     	;# 
  3410  0EA2                     	;# 
  3411  0EA3                     	;# 
  3412  0EA4                     	;# 
  3413  0EA5                     	;# 
  3414  0EA6                     	;# 
  3415  0EA7                     	;# 
  3416  0F0F                     	;# 
  3417  0F10                     	;# 
  3418  0F11                     	;# 
  3419  0F12                     	;# 
  3420  0F13                     	;# 
  3421  0F14                     	;# 
  3422  0F15                     	;# 
  3423  0F16                     	;# 
  3424  0F17                     	;# 
  3425  0F18                     	;# 
  3426  0F19                     	;# 
  3427  0F1A                     	;# 
  3428  0F1B                     	;# 
  3429  0F1C                     	;# 
  3430  0F1D                     	;# 
  3431  0F1E                     	;# 
  3432  0F1F                     	;# 
  3433  0F20                     	;# 
  3434  0F21                     	;# 
  3435  0F22                     	;# 
  3436  0F23                     	;# 
  3437  0F24                     	;# 
  3438  0F25                     	;# 
  3439  0F26                     	;# 
  3440  0F27                     	;# 
  3441  0F28                     	;# 
  3442  0F29                     	;# 
  3443  0F2A                     	;# 
  3444  0F2B                     	;# 
  3445  0F2C                     	;# 
  3446  0F2D                     	;# 
  3447  0F2E                     	;# 
  3448  0F2F                     	;# 
  3449  0F30                     	;# 
  3450  0F31                     	;# 
  3451  0F32                     	;# 
  3452  0F33                     	;# 
  3453  0F34                     	;# 
  3454  0F35                     	;# 
  3455  0F36                     	;# 
  3456  0F37                     	;# 
  3457  0FE4                     	;# 
  3458  0FE5                     	;# 
  3459  0FE6                     	;# 
  3460  0FE7                     	;# 
  3461  0FE8                     	;# 
  3462  0FE9                     	;# 
  3463  0FEA                     	;# 
  3464  0FEB                     	;# 
  3465  0FED                     	;# 
  3466  0FEE                     	;# 
  3467  0FEF                     	;# 
  3468  0000                     	;# 
  3469  0001                     	;# 
  3470  0002                     	;# 
  3471  0003                     	;# 
  3472  0004                     	;# 
  3473  0005                     	;# 
  3474  0006                     	;# 
  3475  0007                     	;# 
  3476  0008                     	;# 
  3477  0009                     	;# 
  3478  000A                     	;# 
  3479  000B                     	;# 
  3480  000C                     	;# 
  3481  000D                     	;# 
  3482  000E                     	;# 
  3483  0010                     	;# 
  3484  0011                     	;# 
  3485  0012                     	;# 
  3486  0013                     	;# 
  3487  0014                     	;# 
  3488  0015                     	;# 
  3489  0015                     	;# 
  3490  0016                     	;# 
  3491  0016                     	;# 
  3492  0017                     	;# 
  3493  0018                     	;# 
  3494  0019                     	;# 
  3495  0019                     	;# 
  3496  001A                     	;# 
  3497  001B                     	;# 
  3498  001C                     	;# 
  3499  001D                     	;# 
  3500  001E                     	;# 
  3501  001F                     	;# 
  3502  008C                     	;# 
  3503  008D                     	;# 
  3504  008E                     	;# 
  3505  0090                     	;# 
  3506  0091                     	;# 
  3507  0092                     	;# 
  3508  0093                     	;# 
  3509  0094                     	;# 
  3510  0097                     	;# 
  3511  009B                     	;# 
  3512  009B                     	;# 
  3513  009C                     	;# 
  3514  009D                     	;# 
  3515  009E                     	;# 
  3516  009F                     	;# 
  3517  010C                     	;# 
  3518  010D                     	;# 
  3519  010E                     	;# 
  3520  0111                     	;# 
  3521  0112                     	;# 
  3522  0113                     	;# 
  3523  0114                     	;# 
  3524  0115                     	;# 
  3525  0116                     	;# 
  3526  0117                     	;# 
  3527  0118                     	;# 
  3528  0119                     	;# 
  3529  018C                     	;# 
  3530  018D                     	;# 
  3531  018E                     	;# 
  3532  0197                     	;# 
  3533  0199                     	;# 
  3534  0199                     	;# 
  3535  0199                     	;# 
  3536  019A                     	;# 
  3537  019A                     	;# 
  3538  019A                     	;# 
  3539  019B                     	;# 
  3540  019B                     	;# 
  3541  019B                     	;# 
  3542  019B                     	;# 
  3543  019B                     	;# 
  3544  019C                     	;# 
  3545  019C                     	;# 
  3546  019C                     	;# 
  3547  019D                     	;# 
  3548  019D                     	;# 
  3549  019D                     	;# 
  3550  019E                     	;# 
  3551  019E                     	;# 
  3552  019E                     	;# 
  3553  019F                     	;# 
  3554  019F                     	;# 
  3555  019F                     	;# 
  3556  019F                     	;# 
  3557  019F                     	;# 
  3558  020C                     	;# 
  3559  020D                     	;# 
  3560  020E                     	;# 
  3561  0211                     	;# 
  3562  0211                     	;# 
  3563  0212                     	;# 
  3564  0212                     	;# 
  3565  0213                     	;# 
  3566  0213                     	;# 
  3567  0214                     	;# 
  3568  0214                     	;# 
  3569  0215                     	;# 
  3570  0215                     	;# 
  3571  0215                     	;# 
  3572  0215                     	;# 
  3573  0216                     	;# 
  3574  0216                     	;# 
  3575  0217                     	;# 
  3576  0217                     	;# 
  3577  0219                     	;# 
  3578  021A                     	;# 
  3579  021B                     	;# 
  3580  021C                     	;# 
  3581  021D                     	;# 
  3582  021D                     	;# 
  3583  021E                     	;# 
  3584  021F                     	;# 
  3585  028C                     	;# 
  3586  028D                     	;# 
  3587  028E                     	;# 
  3588  0291                     	;# 
  3589  0291                     	;# 
  3590  0292                     	;# 
  3591  0293                     	;# 
  3592  0294                     	;# 
  3593  0295                     	;# 
  3594  0295                     	;# 
  3595  0296                     	;# 
  3596  0297                     	;# 
  3597  0298                     	;# 
  3598  029F                     	;# 
  3599  030C                     	;# 
  3600  030D                     	;# 
  3601  030E                     	;# 
  3602  0311                     	;# 
  3603  0311                     	;# 
  3604  0312                     	;# 
  3605  0313                     	;# 
  3606  0314                     	;# 
  3607  0315                     	;# 
  3608  0315                     	;# 
  3609  0316                     	;# 
  3610  0317                     	;# 
  3611  0318                     	;# 
  3612  038C                     	;# 
  3613  038D                     	;# 
  3614  038E                     	;# 
  3615  0391                     	;# 
  3616  0392                     	;# 
  3617  0393                     	;# 
  3618  0394                     	;# 
  3619  0395                     	;# 
  3620  0396                     	;# 
  3621  0397                     	;# 
  3622  0398                     	;# 
  3623  0399                     	;# 
  3624  039A                     	;# 
  3625  039C                     	;# 
  3626  039D                     	;# 
  3627  039E                     	;# 
  3628  039F                     	;# 
  3629  0411                     	;# 
  3630  0411                     	;# 
  3631  0412                     	;# 
  3632  0413                     	;# 
  3633  0414                     	;# 
  3634  0415                     	;# 
  3635  0416                     	;# 
  3636  0417                     	;# 
  3637  0418                     	;# 
  3638  0418                     	;# 
  3639  0419                     	;# 
  3640  041A                     	;# 
  3641  041B                     	;# 
  3642  041C                     	;# 
  3643  041D                     	;# 
  3644  041E                     	;# 
  3645  041F                     	;# 
  3646  0498                     	;# 
  3647  0498                     	;# 
  3648  0499                     	;# 
  3649  049A                     	;# 
  3650  049B                     	;# 
  3651  049B                     	;# 
  3652  049C                     	;# 
  3653  049D                     	;# 
  3654  049E                     	;# 
  3655  049F                     	;# 
  3656  0617                     	;# 
  3657  0618                     	;# 
  3658  0619                     	;# 
  3659  0619                     	;# 
  3660  061A                     	;# 
  3661  061B                     	;# 
  3662  061C                     	;# 
  3663  061C                     	;# 
  3664  061F                     	;# 
  3665  0691                     	;# 
  3666  0692                     	;# 
  3667  0693                     	;# 
  3668  0694                     	;# 
  3669  0695                     	;# 
  3670  0696                     	;# 
  3671  0697                     	;# 
  3672  0698                     	;# 
  3673  0699                     	;# 
  3674  0711                     	;# 
  3675  0712                     	;# 
  3676  0713                     	;# 
  3677  0714                     	;# 
  3678  0715                     	;# 
  3679  0716                     	;# 
  3680  0717                     	;# 
  3681  0718                     	;# 
  3682  0719                     	;# 
  3683  0891                     	;# 
  3684  0891                     	;# 
  3685  0891                     	;# 
  3686  0891                     	;# 
  3687  0891                     	;# 
  3688  0891                     	;# 
  3689  0892                     	;# 
  3690  0892                     	;# 
  3691  0892                     	;# 
  3692  0893                     	;# 
  3693  0893                     	;# 
  3694  0893                     	;# 
  3695  0893                     	;# 
  3696  0893                     	;# 
  3697  0893                     	;# 
  3698  0894                     	;# 
  3699  0894                     	;# 
  3700  0894                     	;# 
  3701  0895                     	;# 
  3702  0895                     	;# 
  3703  0895                     	;# 
  3704  0896                     	;# 
  3705  0896                     	;# 
  3706  0896                     	;# 
  3707  089B                     	;# 
  3708  0911                     	;# 
  3709  0912                     	;# 
  3710  0913                     	;# 
  3711  0914                     	;# 
  3712  0915                     	;# 
  3713  0916                     	;# 
  3714  0918                     	;# 
  3715  0919                     	;# 
  3716  091A                     	;# 
  3717  091B                     	;# 
  3718  091C                     	;# 
  3719  091D                     	;# 
  3720  091E                     	;# 
  3721  091F                     	;# 
  3722  0E0F                     	;# 
  3723  0E10                     	;# 
  3724  0E11                     	;# 
  3725  0E12                     	;# 
  3726  0E13                     	;# 
  3727  0E14                     	;# 
  3728  0E15                     	;# 
  3729  0E16                     	;# 
  3730  0E17                     	;# 
  3731  0E18                     	;# 
  3732  0E19                     	;# 
  3733  0E1A                     	;# 
  3734  0E1B                     	;# 
  3735  0E1C                     	;# 
  3736  0E1D                     	;# 
  3737  0E1E                     	;# 
  3738  0E1F                     	;# 
  3739  0E20                     	;# 
  3740  0E21                     	;# 
  3741  0E22                     	;# 
  3742  0E24                     	;# 
  3743  0E25                     	;# 
  3744  0E28                     	;# 
  3745  0E29                     	;# 
  3746  0E2A                     	;# 
  3747  0E2B                     	;# 
  3748  0E2C                     	;# 
  3749  0E2D                     	;# 
  3750  0E2E                     	;# 
  3751  0E2F                     	;# 
  3752  0E90                     	;# 
  3753  0E91                     	;# 
  3754  0E92                     	;# 
  3755  0E94                     	;# 
  3756  0E95                     	;# 
  3757  0E9C                     	;# 
  3758  0E9D                     	;# 
  3759  0E9E                     	;# 
  3760  0E9F                     	;# 
  3761  0EA0                     	;# 
  3762  0EA1                     	;# 
  3763  0EA2                     	;# 
  3764  0EA3                     	;# 
  3765  0EA4                     	;# 
  3766  0EA5                     	;# 
  3767  0EA6                     	;# 
  3768  0EA7                     	;# 
  3769  0F0F                     	;# 
  3770  0F10                     	;# 
  3771  0F11                     	;# 
  3772  0F12                     	;# 
  3773  0F13                     	;# 
  3774  0F14                     	;# 
  3775  0F15                     	;# 
  3776  0F16                     	;# 
  3777  0F17                     	;# 
  3778  0F18                     	;# 
  3779  0F19                     	;# 
  3780  0F1A                     	;# 
  3781  0F1B                     	;# 
  3782  0F1C                     	;# 
  3783  0F1D                     	;# 
  3784  0F1E                     	;# 
  3785  0F1F                     	;# 
  3786  0F20                     	;# 
  3787  0F21                     	;# 
  3788  0F22                     	;# 
  3789  0F23                     	;# 
  3790  0F24                     	;# 
  3791  0F25                     	;# 
  3792  0F26                     	;# 
  3793  0F27                     	;# 
  3794  0F28                     	;# 
  3795  0F29                     	;# 
  3796  0F2A                     	;# 
  3797  0F2B                     	;# 
  3798  0F2C                     	;# 
  3799  0F2D                     	;# 
  3800  0F2E                     	;# 
  3801  0F2F                     	;# 
  3802  0F30                     	;# 
  3803  0F31                     	;# 
  3804  0F32                     	;# 
  3805  0F33                     	;# 
  3806  0F34                     	;# 
  3807  0F35                     	;# 
  3808  0F36                     	;# 
  3809  0F37                     	;# 
  3810  0FE4                     	;# 
  3811  0FE5                     	;# 
  3812  0FE6                     	;# 
  3813  0FE7                     	;# 
  3814  0FE8                     	;# 
  3815  0FE9                     	;# 
  3816  0FEA                     	;# 
  3817  0FEB                     	;# 
  3818  0FED                     	;# 
  3819  0FEE                     	;# 
  3820  0FEF                     	;# 
  3821  0000                     	;# 
  3822  0001                     	;# 
  3823  0002                     	;# 
  3824  0003                     	;# 
  3825  0004                     	;# 
  3826  0005                     	;# 
  3827  0006                     	;# 
  3828  0007                     	;# 
  3829  0008                     	;# 
  3830  0009                     	;# 
  3831  000A                     	;# 
  3832  000B                     	;# 
  3833  000C                     	;# 
  3834  000D                     	;# 
  3835  000E                     	;# 
  3836  0010                     	;# 
  3837  0011                     	;# 
  3838  0012                     	;# 
  3839  0013                     	;# 
  3840  0014                     	;# 
  3841  0015                     	;# 
  3842  0015                     	;# 
  3843  0016                     	;# 
  3844  0016                     	;# 
  3845  0017                     	;# 
  3846  0018                     	;# 
  3847  0019                     	;# 
  3848  0019                     	;# 
  3849  001A                     	;# 
  3850  001B                     	;# 
  3851  001C                     	;# 
  3852  001D                     	;# 
  3853  001E                     	;# 
  3854  001F                     	;# 
  3855  008C                     	;# 
  3856  008D                     	;# 
  3857  008E                     	;# 
  3858  0090                     	;# 
  3859  0091                     	;# 
  3860  0092                     	;# 
  3861  0093                     	;# 
  3862  0094                     	;# 
  3863  0097                     	;# 
  3864  009B                     	;# 
  3865  009B                     	;# 
  3866  009C                     	;# 
  3867  009D                     	;# 
  3868  009E                     	;# 
  3869  009F                     	;# 
  3870  010C                     	;# 
  3871  010D                     	;# 
  3872  010E                     	;# 
  3873  0111                     	;# 
  3874  0112                     	;# 
  3875  0113                     	;# 
  3876  0114                     	;# 
  3877  0115                     	;# 
  3878  0116                     	;# 
  3879  0117                     	;# 
  3880  0118                     	;# 
  3881  0119                     	;# 
  3882  018C                     	;# 
  3883  018D                     	;# 
  3884  018E                     	;# 
  3885  0197                     	;# 
  3886  0199                     	;# 
  3887  0199                     	;# 
  3888  0199                     	;# 
  3889  019A                     	;# 
  3890  019A                     	;# 
  3891  019A                     	;# 
  3892  019B                     	;# 
  3893  019B                     	;# 
  3894  019B                     	;# 
  3895  019B                     	;# 
  3896  019B                     	;# 
  3897  019C                     	;# 
  3898  019C                     	;# 
  3899  019C                     	;# 
  3900  019D                     	;# 
  3901  019D                     	;# 
  3902  019D                     	;# 
  3903  019E                     	;# 
  3904  019E                     	;# 
  3905  019E                     	;# 
  3906  019F                     	;# 
  3907  019F                     	;# 
  3908  019F                     	;# 
  3909  019F                     	;# 
  3910  019F                     	;# 
  3911  020C                     	;# 
  3912  020D                     	;# 
  3913  020E                     	;# 
  3914  0211                     	;# 
  3915  0211                     	;# 
  3916  0212                     	;# 
  3917  0212                     	;# 
  3918  0213                     	;# 
  3919  0213                     	;# 
  3920  0214                     	;# 
  3921  0214                     	;# 
  3922  0215                     	;# 
  3923  0215                     	;# 
  3924  0215                     	;# 
  3925  0215                     	;# 
  3926  0216                     	;# 
  3927  0216                     	;# 
  3928  0217                     	;# 
  3929  0217                     	;# 
  3930  0219                     	;# 
  3931  021A                     	;# 
  3932  021B                     	;# 
  3933  021C                     	;# 
  3934  021D                     	;# 
  3935  021D                     	;# 
  3936  021E                     	;# 
  3937  021F                     	;# 
  3938  028C                     	;# 
  3939  028D                     	;# 
  3940  028E                     	;# 
  3941  0291                     	;# 
  3942  0291                     	;# 
  3943  0292                     	;# 
  3944  0293                     	;# 
  3945  0294                     	;# 
  3946  0295                     	;# 
  3947  0295                     	;# 
  3948  0296                     	;# 
  3949  0297                     	;# 
  3950  0298                     	;# 
  3951  029F                     	;# 
  3952  030C                     	;# 
  3953  030D                     	;# 
  3954  030E                     	;# 
  3955  0311                     	;# 
  3956  0311                     	;# 
  3957  0312                     	;# 
  3958  0313                     	;# 
  3959  0314                     	;# 
  3960  0315                     	;# 
  3961  0315                     	;# 
  3962  0316                     	;# 
  3963  0317                     	;# 
  3964  0318                     	;# 
  3965  038C                     	;# 
  3966  038D                     	;# 
  3967  038E                     	;# 
  3968  0391                     	;# 
  3969  0392                     	;# 
  3970  0393                     	;# 
  3971  0394                     	;# 
  3972  0395                     	;# 
  3973  0396                     	;# 
  3974  0397                     	;# 
  3975  0398                     	;# 
  3976  0399                     	;# 
  3977  039A                     	;# 
  3978  039C                     	;# 
  3979  039D                     	;# 
  3980  039E                     	;# 
  3981  039F                     	;# 
  3982  0411                     	;# 
  3983  0411                     	;# 
  3984  0412                     	;# 
  3985  0413                     	;# 
  3986  0414                     	;# 
  3987  0415                     	;# 
  3988  0416                     	;# 
  3989  0417                     	;# 
  3990  0418                     	;# 
  3991  0418                     	;# 
  3992  0419                     	;# 
  3993  041A                     	;# 
  3994  041B                     	;# 
  3995  041C                     	;# 
  3996  041D                     	;# 
  3997  041E                     	;# 
  3998  041F                     	;# 
  3999  0498                     	;# 
  4000  0498                     	;# 
  4001  0499                     	;# 
  4002  049A                     	;# 
  4003  049B                     	;# 
  4004  049B                     	;# 
  4005  049C                     	;# 
  4006  049D                     	;# 
  4007  049E                     	;# 
  4008  049F                     	;# 
  4009  0617                     	;# 
  4010  0618                     	;# 
  4011  0619                     	;# 
  4012  0619                     	;# 
  4013  061A                     	;# 
  4014  061B                     	;# 
  4015  061C                     	;# 
  4016  061C                     	;# 
  4017  061F                     	;# 
  4018  0691                     	;# 
  4019  0692                     	;# 
  4020  0693                     	;# 
  4021  0694                     	;# 
  4022  0695                     	;# 
  4023  0696                     	;# 
  4024  0697                     	;# 
  4025  0698                     	;# 
  4026  0699                     	;# 
  4027  0711                     	;# 
  4028  0712                     	;# 
  4029  0713                     	;# 
  4030  0714                     	;# 
  4031  0715                     	;# 
  4032  0716                     	;# 
  4033  0717                     	;# 
  4034  0718                     	;# 
  4035  0719                     	;# 
  4036  0891                     	;# 
  4037  0891                     	;# 
  4038  0891                     	;# 
  4039  0891                     	;# 
  4040  0891                     	;# 
  4041  0891                     	;# 
  4042  0892                     	;# 
  4043  0892                     	;# 
  4044  0892                     	;# 
  4045  0893                     	;# 
  4046  0893                     	;# 
  4047  0893                     	;# 
  4048  0893                     	;# 
  4049  0893                     	;# 
  4050  0893                     	;# 
  4051  0894                     	;# 
  4052  0894                     	;# 
  4053  0894                     	;# 
  4054  0895                     	;# 
  4055  0895                     	;# 
  4056  0895                     	;# 
  4057  0896                     	;# 
  4058  0896                     	;# 
  4059  0896                     	;# 
  4060  089B                     	;# 
  4061  0911                     	;# 
  4062  0912                     	;# 
  4063  0913                     	;# 
  4064  0914                     	;# 
  4065  0915                     	;# 
  4066  0916                     	;# 
  4067  0918                     	;# 
  4068  0919                     	;# 
  4069  091A                     	;# 
  4070  091B                     	;# 
  4071  091C                     	;# 
  4072  091D                     	;# 
  4073  091E                     	;# 
  4074  091F                     	;# 
  4075  0E0F                     	;# 
  4076  0E10                     	;# 
  4077  0E11                     	;# 
  4078  0E12                     	;# 
  4079  0E13                     	;# 
  4080  0E14                     	;# 
  4081  0E15                     	;# 
  4082  0E16                     	;# 
  4083  0E17                     	;# 
  4084  0E18                     	;# 
  4085  0E19                     	;# 
  4086  0E1A                     	;# 
  4087  0E1B                     	;# 
  4088  0E1C                     	;# 
  4089  0E1D                     	;# 
  4090  0E1E                     	;# 
  4091  0E1F                     	;# 
  4092  0E20                     	;# 
  4093  0E21                     	;# 
  4094  0E22                     	;# 
  4095  0E24                     	;# 
  4096  0E25                     	;# 
  4097  0E28                     	;# 
  4098  0E29                     	;# 
  4099  0E2A                     	;# 
  4100  0E2B                     	;# 
  4101  0E2C                     	;# 
  4102  0E2D                     	;# 
  4103  0E2E                     	;# 
  4104  0E2F                     	;# 
  4105  0E90                     	;# 
  4106  0E91                     	;# 
  4107  0E92                     	;# 
  4108  0E94                     	;# 
  4109  0E95                     	;# 
  4110  0E9C                     	;# 
  4111  0E9D                     	;# 
  4112  0E9E                     	;# 
  4113  0E9F                     	;# 
  4114  0EA0                     	;# 
  4115  0EA1                     	;# 
  4116  0EA2                     	;# 
  4117  0EA3                     	;# 
  4118  0EA4                     	;# 
  4119  0EA5                     	;# 
  4120  0EA6                     	;# 
  4121  0EA7                     	;# 
  4122  0F0F                     	;# 
  4123  0F10                     	;# 
  4124  0F11                     	;# 
  4125  0F12                     	;# 
  4126  0F13                     	;# 
  4127  0F14                     	;# 
  4128  0F15                     	;# 
  4129  0F16                     	;# 
  4130  0F17                     	;# 
  4131  0F18                     	;# 
  4132  0F19                     	;# 
  4133  0F1A                     	;# 
  4134  0F1B                     	;# 
  4135  0F1C                     	;# 
  4136  0F1D                     	;# 
  4137  0F1E                     	;# 
  4138  0F1F                     	;# 
  4139  0F20                     	;# 
  4140  0F21                     	;# 
  4141  0F22                     	;# 
  4142  0F23                     	;# 
  4143  0F24                     	;# 
  4144  0F25                     	;# 
  4145  0F26                     	;# 
  4146  0F27                     	;# 
  4147  0F28                     	;# 
  4148  0F29                     	;# 
  4149  0F2A                     	;# 
  4150  0F2B                     	;# 
  4151  0F2C                     	;# 
  4152  0F2D                     	;# 
  4153  0F2E                     	;# 
  4154  0F2F                     	;# 
  4155  0F30                     	;# 
  4156  0F31                     	;# 
  4157  0F32                     	;# 
  4158  0F33                     	;# 
  4159  0F34                     	;# 
  4160  0F35                     	;# 
  4161  0F36                     	;# 
  4162  0F37                     	;# 
  4163  0FE4                     	;# 
  4164  0FE5                     	;# 
  4165  0FE6                     	;# 
  4166  0FE7                     	;# 
  4167  0FE8                     	;# 
  4168  0FE9                     	;# 
  4169  0FEA                     	;# 
  4170  0FEB                     	;# 
  4171  0FED                     	;# 
  4172  0FEE                     	;# 
  4173  0FEF                     	;# 
  4174  0000                     	;# 
  4175  0001                     	;# 
  4176  0002                     	;# 
  4177  0003                     	;# 
  4178  0004                     	;# 
  4179  0005                     	;# 
  4180  0006                     	;# 
  4181  0007                     	;# 
  4182  0008                     	;# 
  4183  0009                     	;# 
  4184  000A                     	;# 
  4185  000B                     	;# 
  4186  000C                     	;# 
  4187  000D                     	;# 
  4188  000E                     	;# 
  4189  0010                     	;# 
  4190  0011                     	;# 
  4191  0012                     	;# 
  4192  0013                     	;# 
  4193  0014                     	;# 
  4194  0015                     	;# 
  4195  0015                     	;# 
  4196  0016                     	;# 
  4197  0016                     	;# 
  4198  0017                     	;# 
  4199  0018                     	;# 
  4200  0019                     	;# 
  4201  0019                     	;# 
  4202  001A                     	;# 
  4203  001B                     	;# 
  4204  001C                     	;# 
  4205  001D                     	;# 
  4206  001E                     	;# 
  4207  001F                     	;# 
  4208  008C                     	;# 
  4209  008D                     	;# 
  4210  008E                     	;# 
  4211  0090                     	;# 
  4212  0091                     	;# 
  4213  0092                     	;# 
  4214  0093                     	;# 
  4215  0094                     	;# 
  4216  0097                     	;# 
  4217  009B                     	;# 
  4218  009B                     	;# 
  4219  009C                     	;# 
  4220  009D                     	;# 
  4221  009E                     	;# 
  4222  009F                     	;# 
  4223  010C                     	;# 
  4224  010D                     	;# 
  4225  010E                     	;# 
  4226  0111                     	;# 
  4227  0112                     	;# 
  4228  0113                     	;# 
  4229  0114                     	;# 
  4230  0115                     	;# 
  4231  0116                     	;# 
  4232  0117                     	;# 
  4233  0118                     	;# 
  4234  0119                     	;# 
  4235  018C                     	;# 
  4236  018D                     	;# 
  4237  018E                     	;# 
  4238  0197                     	;# 
  4239  0199                     	;# 
  4240  0199                     	;# 
  4241  0199                     	;# 
  4242  019A                     	;# 
  4243  019A                     	;# 
  4244  019A                     	;# 
  4245  019B                     	;# 
  4246  019B                     	;# 
  4247  019B                     	;# 
  4248  019B                     	;# 
  4249  019B                     	;# 
  4250  019C                     	;# 
  4251  019C                     	;# 
  4252  019C                     	;# 
  4253  019D                     	;# 
  4254  019D                     	;# 
  4255  019D                     	;# 
  4256  019E                     	;# 
  4257  019E                     	;# 
  4258  019E                     	;# 
  4259  019F                     	;# 
  4260  019F                     	;# 
  4261  019F                     	;# 
  4262  019F                     	;# 
  4263  019F                     	;# 
  4264  020C                     	;# 
  4265  020D                     	;# 
  4266  020E                     	;# 
  4267  0211                     	;# 
  4268  0211                     	;# 
  4269  0212                     	;# 
  4270  0212                     	;# 
  4271  0213                     	;# 
  4272  0213                     	;# 
  4273  0214                     	;# 
  4274  0214                     	;# 
  4275  0215                     	;# 
  4276  0215                     	;# 
  4277  0215                     	;# 
  4278  0215                     	;# 
  4279  0216                     	;# 
  4280  0216                     	;# 
  4281  0217                     	;# 
  4282  0217                     	;# 
  4283  0219                     	;# 
  4284  021A                     	;# 
  4285  021B                     	;# 
  4286  021C                     	;# 
  4287  021D                     	;# 
  4288  021D                     	;# 
  4289  021E                     	;# 
  4290  021F                     	;# 
  4291  028C                     	;# 
  4292  028D                     	;# 
  4293  028E                     	;# 
  4294  0291                     	;# 
  4295  0291                     	;# 
  4296  0292                     	;# 
  4297  0293                     	;# 
  4298  0294                     	;# 
  4299  0295                     	;# 
  4300  0295                     	;# 
  4301  0296                     	;# 
  4302  0297                     	;# 
  4303  0298                     	;# 
  4304  029F                     	;# 
  4305  030C                     	;# 
  4306  030D                     	;# 
  4307  030E                     	;# 
  4308  0311                     	;# 
  4309  0311                     	;# 
  4310  0312                     	;# 
  4311  0313                     	;# 
  4312  0314                     	;# 
  4313  0315                     	;# 
  4314  0315                     	;# 
  4315  0316                     	;# 
  4316  0317                     	;# 
  4317  0318                     	;# 
  4318  038C                     	;# 
  4319  038D                     	;# 
  4320  038E                     	;# 
  4321  0391                     	;# 
  4322  0392                     	;# 
  4323  0393                     	;# 
  4324  0394                     	;# 
  4325  0395                     	;# 
  4326  0396                     	;# 
  4327  0397                     	;# 
  4328  0398                     	;# 
  4329  0399                     	;# 
  4330  039A                     	;# 
  4331  039C                     	;# 
  4332  039D                     	;# 
  4333  039E                     	;# 
  4334  039F                     	;# 
  4335  0411                     	;# 
  4336  0411                     	;# 
  4337  0412                     	;# 
  4338  0413                     	;# 
  4339  0414                     	;# 
  4340  0415                     	;# 
  4341  0416                     	;# 
  4342  0417                     	;# 
  4343  0418                     	;# 
  4344  0418                     	;# 
  4345  0419                     	;# 
  4346  041A                     	;# 
  4347  041B                     	;# 
  4348  041C                     	;# 
  4349  041D                     	;# 
  4350  041E                     	;# 
  4351  041F                     	;# 
  4352  0498                     	;# 
  4353  0498                     	;# 
  4354  0499                     	;# 
  4355  049A                     	;# 
  4356  049B                     	;# 
  4357  049B                     	;# 
  4358  049C                     	;# 
  4359  049D                     	;# 
  4360  049E                     	;# 
  4361  049F                     	;# 
  4362  0617                     	;# 
  4363  0618                     	;# 
  4364  0619                     	;# 
  4365  0619                     	;# 
  4366  061A                     	;# 
  4367  061B                     	;# 
  4368  061C                     	;# 
  4369  061C                     	;# 
  4370  061F                     	;# 
  4371  0691                     	;# 
  4372  0692                     	;# 
  4373  0693                     	;# 
  4374  0694                     	;# 
  4375  0695                     	;# 
  4376  0696                     	;# 
  4377  0697                     	;# 
  4378  0698                     	;# 
  4379  0699                     	;# 
  4380  0711                     	;# 
  4381  0712                     	;# 
  4382  0713                     	;# 
  4383  0714                     	;# 
  4384  0715                     	;# 
  4385  0716                     	;# 
  4386  0717                     	;# 
  4387  0718                     	;# 
  4388  0719                     	;# 
  4389  0891                     	;# 
  4390  0891                     	;# 
  4391  0891                     	;# 
  4392  0891                     	;# 
  4393  0891                     	;# 
  4394  0891                     	;# 
  4395  0892                     	;# 
  4396  0892                     	;# 
  4397  0892                     	;# 
  4398  0893                     	;# 
  4399  0893                     	;# 
  4400  0893                     	;# 
  4401  0893                     	;# 
  4402  0893                     	;# 
  4403  0893                     	;# 
  4404  0894                     	;# 
  4405  0894                     	;# 
  4406  0894                     	;# 
  4407  0895                     	;# 
  4408  0895                     	;# 
  4409  0895                     	;# 
  4410  0896                     	;# 
  4411  0896                     	;# 
  4412  0896                     	;# 
  4413  089B                     	;# 
  4414  0911                     	;# 
  4415  0912                     	;# 
  4416  0913                     	;# 
  4417  0914                     	;# 
  4418  0915                     	;# 
  4419  0916                     	;# 
  4420  0918                     	;# 
  4421  0919                     	;# 
  4422  091A                     	;# 
  4423  091B                     	;# 
  4424  091C                     	;# 
  4425  091D                     	;# 
  4426  091E                     	;# 
  4427  091F                     	;# 
  4428  0E0F                     	;# 
  4429  0E10                     	;# 
  4430  0E11                     	;# 
  4431  0E12                     	;# 
  4432  0E13                     	;# 
  4433  0E14                     	;# 
  4434  0E15                     	;# 
  4435  0E16                     	;# 
  4436  0E17                     	;# 
  4437  0E18                     	;# 
  4438  0E19                     	;# 
  4439  0E1A                     	;# 
  4440  0E1B                     	;# 
  4441  0E1C                     	;# 
  4442  0E1D                     	;# 
  4443  0E1E                     	;# 
  4444  0E1F                     	;# 
  4445  0E20                     	;# 
  4446  0E21                     	;# 
  4447  0E22                     	;# 
  4448  0E24                     	;# 
  4449  0E25                     	;# 
  4450  0E28                     	;# 
  4451  0E29                     	;# 
  4452  0E2A                     	;# 
  4453  0E2B                     	;# 
  4454  0E2C                     	;# 
  4455  0E2D                     	;# 
  4456  0E2E                     	;# 
  4457  0E2F                     	;# 
  4458  0E90                     	;# 
  4459  0E91                     	;# 
  4460  0E92                     	;# 
  4461  0E94                     	;# 
  4462  0E95                     	;# 
  4463  0E9C                     	;# 
  4464  0E9D                     	;# 
  4465  0E9E                     	;# 
  4466  0E9F                     	;# 
  4467  0EA0                     	;# 
  4468  0EA1                     	;# 
  4469  0EA2                     	;# 
  4470  0EA3                     	;# 
  4471  0EA4                     	;# 
  4472  0EA5                     	;# 
  4473  0EA6                     	;# 
  4474  0EA7                     	;# 
  4475  0F0F                     	;# 
  4476  0F10                     	;# 
  4477  0F11                     	;# 
  4478  0F12                     	;# 
  4479  0F13                     	;# 
  4480  0F14                     	;# 
  4481  0F15                     	;# 
  4482  0F16                     	;# 
  4483  0F17                     	;# 
  4484  0F18                     	;# 
  4485  0F19                     	;# 
  4486  0F1A                     	;# 
  4487  0F1B                     	;# 
  4488  0F1C                     	;# 
  4489  0F1D                     	;# 
  4490  0F1E                     	;# 
  4491  0F1F                     	;# 
  4492  0F20                     	;# 
  4493  0F21                     	;# 
  4494  0F22                     	;# 
  4495  0F23                     	;# 
  4496  0F24                     	;# 
  4497  0F25                     	;# 
  4498  0F26                     	;# 
  4499  0F27                     	;# 
  4500  0F28                     	;# 
  4501  0F29                     	;# 
  4502  0F2A                     	;# 
  4503  0F2B                     	;# 
  4504  0F2C                     	;# 
  4505  0F2D                     	;# 
  4506  0F2E                     	;# 
  4507  0F2F                     	;# 
  4508  0F30                     	;# 
  4509  0F31                     	;# 
  4510  0F32                     	;# 
  4511  0F33                     	;# 
  4512  0F34                     	;# 
  4513  0F35                     	;# 
  4514  0F36                     	;# 
  4515  0F37                     	;# 
  4516  0FE4                     	;# 
  4517  0FE5                     	;# 
  4518  0FE6                     	;# 
  4519  0FE7                     	;# 
  4520  0FE8                     	;# 
  4521  0FE9                     	;# 
  4522  0FEA                     	;# 
  4523  0FEB                     	;# 
  4524  0FED                     	;# 
  4525  0FEE                     	;# 
  4526  0FEF                     	;# 
  4527                           
  4528                           	psect	idataBANK0
  4529  23A2                     __pidataBANK0:	
  4530                           
  4531                           ;initializer for _demoLong
  4532  23A2  3401               	retlw	1
  4533  23A3  3400               	retlw	0
  4534  23A4  3400               	retlw	0
  4535  23A5  3400               	retlw	0
  4536                           
  4537                           	psect	idataBANK1
  4538  23EE                     __pidataBANK1:	
  4539                           
  4540                           ;initializer for _piezo_on_time_ms
  4541  23EE  34E8               	retlw	232
  4542  23EF  3403               	retlw	3
  4543                           
  4544                           ;initializer for _heater_post_time_ms
  4545  23F0  340A               	retlw	10
  4546  23F1  3400               	retlw	0
  4547                           
  4548                           ;initializer for _heater_pre_time_ms
  4549  23F2  340A               	retlw	10
  4550  23F3  3400               	retlw	0
  4551                           
  4552                           	psect	idataBANK2
  4553  0002                     __pidataBANK2:	
  4554                           
  4555                           ;initializer for _drv_peak_val
  4556  0002  347F               	retlw	127
  4557  0003  3400               	retlw	0
  4558                           
  4559                           	psect	idataBANK4
  4560  270E                     __pidataBANK4:	
  4561                           
  4562                           ;initializer for _fsmStateTable
  4563  270E  346D               	retlw	low _do_I2C_IDLE
  4564  270F  3424               	retlw	high _do_I2C_IDLE
  4565  2710  34E9               	retlw	low _do_I2C_SEND_ADR_READ
  4566  2711  3424               	retlw	high _do_I2C_SEND_ADR_READ
  4567  2712  34BC               	retlw	low _do_I2C_SEND_ADR_WRITE
  4568  2713  3424               	retlw	high _do_I2C_SEND_ADR_WRITE
  4569  2714  344C               	retlw	low _do_I2C_TX
  4570  2715  341F               	retlw	high _do_I2C_TX
  4571  2716  34AC               	retlw	low _do_I2C_RX
  4572  2717  341B               	retlw	high _do_I2C_RX
  4573  2718  3489               	retlw	low _do_I2C_RCEN
  4574  2719  3424               	retlw	high _do_I2C_RCEN
  4575  271A  3449               	retlw	low _do_I2C_TX_EMPTY
  4576  271B  3419               	retlw	high _do_I2C_TX_EMPTY
  4577  271C  3412               	retlw	low _do_I2C_SEND_RESTART_READ
  4578  271D  3424               	retlw	high _do_I2C_SEND_RESTART_READ
  4579  271E  341A               	retlw	low _do_I2C_SEND_RESTART_WRITE
  4580  271F  3424               	retlw	high _do_I2C_SEND_RESTART_WRITE
  4581  2720  3422               	retlw	low _do_I2C_SEND_RESTART
  4582  2721  3424               	retlw	high _do_I2C_SEND_RESTART
  4583  2722  342A               	retlw	low _do_I2C_SEND_STOP
  4584  2723  3424               	retlw	high _do_I2C_SEND_STOP
  4585  2724  3432               	retlw	low _do_I2C_DO_ACK
  4586  2725  3424               	retlw	high _do_I2C_DO_ACK
  4587  2726  343A               	retlw	low _do_I2C_DO_NACK_STOP
  4588  2727  3424               	retlw	high _do_I2C_DO_NACK_STOP
  4589  2728  3442               	retlw	low _do_I2C_DO_NACK_RESTART
  4590  2729  3424               	retlw	high _do_I2C_DO_NACK_RESTART
  4591  272A  34B1               	retlw	low _do_I2C_RESET
  4592  272B  3424               	retlw	high _do_I2C_RESET
  4593  272C  34F3               	retlw	low _do_I2C_DO_ADDRESS_NACK
  4594  272D  3418               	retlw	high _do_I2C_DO_ADDRESS_NACK
  4595                           
  4596                           	psect	stringtext1
  4597  1000                     __pstringtext1:	
  4598  1000                     _drv_fifo_sine:	
  4599  1000  340B               	retlw	11
  4600  1001  3400               	retlw	0
  4601  1002  3400               	retlw	0
  4602  1003  3400               	retlw	0
  4603  1004  3410               	retlw	16
  4604  1005  3400               	retlw	0
  4605  1006  3420               	retlw	32
  4606  1007  3400               	retlw	0
  4607  1008  342E               	retlw	46
  4608  1009  3400               	retlw	0
  4609  100A  343C               	retlw	60
  4610  100B  3400               	retlw	0
  4611  100C  3448               	retlw	72
  4612  100D  3400               	retlw	0
  4613  100E  3453               	retlw	83
  4614  100F  3400               	retlw	0
  4615  1010  345B               	retlw	91
  4616  1011  3400               	retlw	0
  4617  1012  3461               	retlw	97
  4618  1013  3400               	retlw	0
  4619  1014  3465               	retlw	101
  4620  1015  3400               	retlw	0
  4621  1016  3466               	retlw	102
  4622  1017  3400               	retlw	0
  4623  1018  3465               	retlw	101
  4624  1019  3400               	retlw	0
  4625  101A  3461               	retlw	97
  4626  101B  3400               	retlw	0
  4627  101C  345B               	retlw	91
  4628  101D  3400               	retlw	0
  4629  101E  3453               	retlw	83
  4630  101F  3400               	retlw	0
  4631  1020  3448               	retlw	72
  4632  1021  3400               	retlw	0
  4633  1022  343C               	retlw	60
  4634  1023  3400               	retlw	0
  4635  1024  342E               	retlw	46
  4636  1025  3400               	retlw	0
  4637  1026  3420               	retlw	32
  4638  1027  3400               	retlw	0
  4639  1028  3410               	retlw	16
  4640  1029  3400               	retlw	0
  4641  102A  3400               	retlw	0
  4642  102B  3400               	retlw	0
  4643  102C  34F0               	retlw	240
  4644  102D  3400               	retlw	0
  4645  102E  34E0               	retlw	224
  4646  102F  3400               	retlw	0
  4647  1030  34D2               	retlw	210
  4648  1031  3400               	retlw	0
  4649  1032  34C4               	retlw	196
  4650  1033  3400               	retlw	0
  4651  1034  34B8               	retlw	184
  4652  1035  3400               	retlw	0
  4653  1036  34AD               	retlw	173
  4654  1037  3400               	retlw	0
  4655  1038  34A5               	retlw	165
  4656  1039  3400               	retlw	0
  4657  103A  349F               	retlw	159
  4658  103B  3400               	retlw	0
  4659  103C  349B               	retlw	155
  4660  103D  3400               	retlw	0
  4661  103E  349A               	retlw	154
  4662  103F  3400               	retlw	0
  4663  1040  349B               	retlw	155
  4664  1041  3400               	retlw	0
  4665  1042  349F               	retlw	159
  4666  1043  3400               	retlw	0
  4667  1044  34A5               	retlw	165
  4668  1045  3400               	retlw	0
  4669  1046  34AD               	retlw	173
  4670  1047  3400               	retlw	0
  4671  1048  34B8               	retlw	184
  4672  1049  3400               	retlw	0
  4673  104A  34C4               	retlw	196
  4674  104B  3400               	retlw	0
  4675  104C  34D2               	retlw	210
  4676  104D  3400               	retlw	0
  4677  104E  34E0               	retlw	224
  4678  104F  3400               	retlw	0
  4679  1050  34F0               	retlw	240
  4680  1051  3400               	retlw	0
  4681  1052  3400               	retlw	0
  4682  1053  3400               	retlw	0
  4683  1054  3410               	retlw	16
  4684  1055  3400               	retlw	0
  4685  1056  3420               	retlw	32
  4686  1057  3400               	retlw	0
  4687  1058  342E               	retlw	46
  4688  1059  3400               	retlw	0
  4689  105A  343C               	retlw	60
  4690  105B  3400               	retlw	0
  4691  105C  3448               	retlw	72
  4692  105D  3400               	retlw	0
  4693  105E  3453               	retlw	83
  4694  105F  3400               	retlw	0
  4695  1060  345B               	retlw	91
  4696  1061  3400               	retlw	0
  4697  1062  3461               	retlw	97
  4698  1063  3400               	retlw	0
  4699  1064  3465               	retlw	101
  4700  1065  3400               	retlw	0
  4701  1066  3466               	retlw	102
  4702  1067  3400               	retlw	0
  4703  1068  3465               	retlw	101
  4704  1069  3400               	retlw	0
  4705  106A  3461               	retlw	97
  4706  106B  3400               	retlw	0
  4707  106C  345B               	retlw	91
  4708  106D  3400               	retlw	0
  4709  106E  3453               	retlw	83
  4710  106F  3400               	retlw	0
  4711  1070  3448               	retlw	72
  4712  1071  3400               	retlw	0
  4713  1072  343C               	retlw	60
  4714  1073  3400               	retlw	0
  4715  1074  342E               	retlw	46
  4716  1075  3400               	retlw	0
  4717  1076  3420               	retlw	32
  4718  1077  3400               	retlw	0
  4719  1078  3410               	retlw	16
  4720  1079  3400               	retlw	0
  4721  107A  3400               	retlw	0
  4722  107B  3400               	retlw	0
  4723  107C  34F0               	retlw	240
  4724  107D  3400               	retlw	0
  4725  107E  34E0               	retlw	224
  4726  107F  3400               	retlw	0
  4727  1080  34D2               	retlw	210
  4728  1081  3400               	retlw	0
  4729  1082  34C4               	retlw	196
  4730  1083  3400               	retlw	0
  4731  1084  34B8               	retlw	184
  4732  1085  3400               	retlw	0
  4733  1086  34AD               	retlw	173
  4734  1087  3400               	retlw	0
  4735  1088  34A5               	retlw	165
  4736  1089  3400               	retlw	0
  4737  108A  349F               	retlw	159
  4738  108B  3400               	retlw	0
  4739  108C  349B               	retlw	155
  4740  108D  3400               	retlw	0
  4741  108E  349A               	retlw	154
  4742  108F  3400               	retlw	0
  4743  1090  349B               	retlw	155
  4744  1091  3400               	retlw	0
  4745  1092  349F               	retlw	159
  4746  1093  3400               	retlw	0
  4747  1094  34A5               	retlw	165
  4748  1095  3400               	retlw	0
  4749  1096  34AD               	retlw	173
  4750  1097  3400               	retlw	0
  4751  1098  34B8               	retlw	184
  4752  1099  3400               	retlw	0
  4753  109A  34C4               	retlw	196
  4754  109B  3400               	retlw	0
  4755  109C  34D2               	retlw	210
  4756  109D  3400               	retlw	0
  4757  109E  34E0               	retlw	224
  4758  109F  3400               	retlw	0
  4759  10A0  34F0               	retlw	240
  4760  10A1  3400               	retlw	0
  4761  10A2  3400               	retlw	0
  4762  10A3  3400               	retlw	0
  4763  10A4  3410               	retlw	16
  4764  10A5  3400               	retlw	0
  4765  10A6  3420               	retlw	32
  4766  10A7  3400               	retlw	0
  4767  10A8  342E               	retlw	46
  4768  10A9  3400               	retlw	0
  4769  10AA  343C               	retlw	60
  4770  10AB  3400               	retlw	0
  4771  10AC  3448               	retlw	72
  4772  10AD  3400               	retlw	0
  4773  10AE  3453               	retlw	83
  4774  10AF  3400               	retlw	0
  4775  10B0  345B               	retlw	91
  4776  10B1  3400               	retlw	0
  4777  10B2  3461               	retlw	97
  4778  10B3  3400               	retlw	0
  4779  10B4  3465               	retlw	101
  4780  10B5  3400               	retlw	0
  4781  10B6  3466               	retlw	102
  4782  10B7  3400               	retlw	0
  4783  10B8  3465               	retlw	101
  4784  10B9  3400               	retlw	0
  4785  10BA  3461               	retlw	97
  4786  10BB  3400               	retlw	0
  4787  10BC  345B               	retlw	91
  4788  10BD  3400               	retlw	0
  4789  10BE  3453               	retlw	83
  4790  10BF  3400               	retlw	0
  4791  10C0  3448               	retlw	72
  4792  10C1  3400               	retlw	0
  4793  10C2  343C               	retlw	60
  4794  10C3  3400               	retlw	0
  4795  10C4  342E               	retlw	46
  4796  10C5  3400               	retlw	0
  4797  10C6  3420               	retlw	32
  4798  10C7  3400               	retlw	0
  4799  10C8  3410               	retlw	16
  4800  10C9  3400               	retlw	0
  4801  10CA  3400               	retlw	0
  4802  10CB  3400               	retlw	0
  4803  10CC  34F0               	retlw	240
  4804  10CD  3400               	retlw	0
  4805  10CE  34E0               	retlw	224
  4806  10CF  3400               	retlw	0
  4807  10D0  34D2               	retlw	210
  4808  10D1  3400               	retlw	0
  4809  10D2  34C4               	retlw	196
  4810  10D3  3400               	retlw	0
  4811  10D4  34B8               	retlw	184
  4812  10D5  3400               	retlw	0
  4813  10D6  34AD               	retlw	173
  4814  10D7  3400               	retlw	0
  4815  10D8  34A5               	retlw	165
  4816  10D9  3400               	retlw	0
  4817  10DA  349F               	retlw	159
  4818  10DB  3400               	retlw	0
  4819  10DC  349B               	retlw	155
  4820  10DD  3400               	retlw	0
  4821  10DE  349A               	retlw	154
  4822  10DF  3400               	retlw	0
  4823  10E0  349B               	retlw	155
  4824  10E1  3400               	retlw	0
  4825  10E2  349F               	retlw	159
  4826  10E3  3400               	retlw	0
  4827  10E4  34A5               	retlw	165
  4828  10E5  3400               	retlw	0
  4829  10E6  34AD               	retlw	173
  4830  10E7  3400               	retlw	0
  4831  10E8  34B8               	retlw	184
  4832  10E9  3400               	retlw	0
  4833  10EA  34C4               	retlw	196
  4834  10EB  3400               	retlw	0
  4835  10EC  34D2               	retlw	210
  4836  10ED  3400               	retlw	0
  4837  10EE  34E0               	retlw	224
  4838  10EF  3400               	retlw	0
  4839  10F0  34F0               	retlw	240
  4840  10F1  3400               	retlw	0
  4841  10F2  3400               	retlw	0
  4842  10F3  3400               	retlw	0
  4843  10F4                     __end_of_drv_fifo_sine:	
  4844                           
  4845                           	psect	stringtext2
  4846  11E8                     __pstringtext2:	
  4847  11E8                     drv2665@drv_sine:	
  4848  11E8  3400               	retlw	0
  4849  11E9  3400               	retlw	0
  4850  11EA  3410               	retlw	16
  4851  11EB  3400               	retlw	0
  4852  11EC  3420               	retlw	32
  4853  11ED  3400               	retlw	0
  4854  11EE  342E               	retlw	46
  4855  11EF  3400               	retlw	0
  4856  11F0  343C               	retlw	60
  4857  11F1  3400               	retlw	0
  4858  11F2  3448               	retlw	72
  4859  11F3  3400               	retlw	0
  4860  11F4  3453               	retlw	83
  4861  11F5  3400               	retlw	0
  4862  11F6  345B               	retlw	91
  4863  11F7  3400               	retlw	0
  4864  11F8  3461               	retlw	97
  4865  11F9  3400               	retlw	0
  4866  11FA  3465               	retlw	101
  4867  11FB  3400               	retlw	0
  4868  11FC  3466               	retlw	102
  4869  11FD  3400               	retlw	0
  4870  11FE  3465               	retlw	101
  4871  11FF  3400               	retlw	0
  4872  1200  3461               	retlw	97
  4873  1201  3400               	retlw	0
  4874  1202  345B               	retlw	91
  4875  1203  3400               	retlw	0
  4876  1204  3453               	retlw	83
  4877  1205  3400               	retlw	0
  4878  1206  3448               	retlw	72
  4879  1207  3400               	retlw	0
  4880  1208  343C               	retlw	60
  4881  1209  3400               	retlw	0
  4882  120A  342E               	retlw	46
  4883  120B  3400               	retlw	0
  4884  120C  3420               	retlw	32
  4885  120D  3400               	retlw	0
  4886  120E  3410               	retlw	16
  4887  120F  3400               	retlw	0
  4888  1210  3400               	retlw	0
  4889  1211  3400               	retlw	0
  4890  1212  34F0               	retlw	240
  4891  1213  3400               	retlw	0
  4892  1214  34E0               	retlw	224
  4893  1215  3400               	retlw	0
  4894  1216  34D2               	retlw	210
  4895  1217  3400               	retlw	0
  4896  1218  34C4               	retlw	196
  4897  1219  3400               	retlw	0
  4898  121A  34B8               	retlw	184
  4899  121B  3400               	retlw	0
  4900  121C  34AD               	retlw	173
  4901  121D  3400               	retlw	0
  4902  121E  34A5               	retlw	165
  4903  121F  3400               	retlw	0
  4904  1220  349F               	retlw	159
  4905  1221  3400               	retlw	0
  4906  1222  349B               	retlw	155
  4907  1223  3400               	retlw	0
  4908  1224  349A               	retlw	154
  4909  1225  3400               	retlw	0
  4910  1226  349B               	retlw	155
  4911  1227  3400               	retlw	0
  4912  1228  349F               	retlw	159
  4913  1229  3400               	retlw	0
  4914  122A  34A5               	retlw	165
  4915  122B  3400               	retlw	0
  4916  122C  34AD               	retlw	173
  4917  122D  3400               	retlw	0
  4918  122E  34B8               	retlw	184
  4919  122F  3400               	retlw	0
  4920  1230  34C4               	retlw	196
  4921  1231  3400               	retlw	0
  4922  1232  34D2               	retlw	210
  4923  1233  3400               	retlw	0
  4924  1234  34E0               	retlw	224
  4925  1235  3400               	retlw	0
  4926  1236  34F0               	retlw	240
  4927  1237  3400               	retlw	0
  4928  1238  3400               	retlw	0
  4929  1239  3400               	retlw	0
  4930  123A  3410               	retlw	16
  4931  123B  3400               	retlw	0
  4932  123C  3420               	retlw	32
  4933  123D  3400               	retlw	0
  4934  123E  342E               	retlw	46
  4935  123F  3400               	retlw	0
  4936  1240  343C               	retlw	60
  4937  1241  3400               	retlw	0
  4938  1242  3448               	retlw	72
  4939  1243  3400               	retlw	0
  4940  1244  3453               	retlw	83
  4941  1245  3400               	retlw	0
  4942  1246  345B               	retlw	91
  4943  1247  3400               	retlw	0
  4944  1248  3461               	retlw	97
  4945  1249  3400               	retlw	0
  4946  124A  3465               	retlw	101
  4947  124B  3400               	retlw	0
  4948  124C  3466               	retlw	102
  4949  124D  3400               	retlw	0
  4950  124E  3465               	retlw	101
  4951  124F  3400               	retlw	0
  4952  1250  3461               	retlw	97
  4953  1251  3400               	retlw	0
  4954  1252  345B               	retlw	91
  4955  1253  3400               	retlw	0
  4956  1254  3453               	retlw	83
  4957  1255  3400               	retlw	0
  4958  1256  3448               	retlw	72
  4959  1257  3400               	retlw	0
  4960  1258  343C               	retlw	60
  4961  1259  3400               	retlw	0
  4962  125A  342E               	retlw	46
  4963  125B  3400               	retlw	0
  4964  125C  3420               	retlw	32
  4965  125D  3400               	retlw	0
  4966  125E  3410               	retlw	16
  4967  125F  3400               	retlw	0
  4968  1260  3400               	retlw	0
  4969  1261  3400               	retlw	0
  4970  1262  34F0               	retlw	240
  4971  1263  3400               	retlw	0
  4972  1264  34E0               	retlw	224
  4973  1265  3400               	retlw	0
  4974  1266  34D2               	retlw	210
  4975  1267  3400               	retlw	0
  4976  1268  34C4               	retlw	196
  4977  1269  3400               	retlw	0
  4978  126A  34B8               	retlw	184
  4979  126B  3400               	retlw	0
  4980  126C  34AD               	retlw	173
  4981  126D  3400               	retlw	0
  4982  126E  34A5               	retlw	165
  4983  126F  3400               	retlw	0
  4984  1270  349F               	retlw	159
  4985  1271  3400               	retlw	0
  4986  1272  349B               	retlw	155
  4987  1273  3400               	retlw	0
  4988  1274  349A               	retlw	154
  4989  1275  3400               	retlw	0
  4990  1276  349B               	retlw	155
  4991  1277  3400               	retlw	0
  4992  1278  349F               	retlw	159
  4993  1279  3400               	retlw	0
  4994  127A  34A5               	retlw	165
  4995  127B  3400               	retlw	0
  4996  127C  34AD               	retlw	173
  4997  127D  3400               	retlw	0
  4998  127E  34B8               	retlw	184
  4999  127F  3400               	retlw	0
  5000  1280  34C4               	retlw	196
  5001  1281  3400               	retlw	0
  5002  1282  34D2               	retlw	210
  5003  1283  3400               	retlw	0
  5004  1284  34E0               	retlw	224
  5005  1285  3400               	retlw	0
  5006  1286  34F0               	retlw	240
  5007  1287  3400               	retlw	0
  5008  1288  3400               	retlw	0
  5009  1289  3400               	retlw	0
  5010  128A  3410               	retlw	16
  5011  128B  3400               	retlw	0
  5012  128C  3420               	retlw	32
  5013  128D  3400               	retlw	0
  5014  128E  342E               	retlw	46
  5015  128F  3400               	retlw	0
  5016  1290  343C               	retlw	60
  5017  1291  3400               	retlw	0
  5018  1292  3448               	retlw	72
  5019  1293  3400               	retlw	0
  5020  1294  3453               	retlw	83
  5021  1295  3400               	retlw	0
  5022  1296  345B               	retlw	91
  5023  1297  3400               	retlw	0
  5024  1298  3461               	retlw	97
  5025  1299  3400               	retlw	0
  5026  129A  3465               	retlw	101
  5027  129B  3400               	retlw	0
  5028  129C  3466               	retlw	102
  5029  129D  3400               	retlw	0
  5030  129E  3465               	retlw	101
  5031  129F  3400               	retlw	0
  5032  12A0  3461               	retlw	97
  5033  12A1  3400               	retlw	0
  5034  12A2  345B               	retlw	91
  5035  12A3  3400               	retlw	0
  5036  12A4  3453               	retlw	83
  5037  12A5  3400               	retlw	0
  5038  12A6  3448               	retlw	72
  5039  12A7  3400               	retlw	0
  5040  12A8  343C               	retlw	60
  5041  12A9  3400               	retlw	0
  5042  12AA  342E               	retlw	46
  5043  12AB  3400               	retlw	0
  5044  12AC  3420               	retlw	32
  5045  12AD  3400               	retlw	0
  5046  12AE  3410               	retlw	16
  5047  12AF  3400               	retlw	0
  5048  12B0  3400               	retlw	0
  5049  12B1  3400               	retlw	0
  5050  12B2  34F0               	retlw	240
  5051  12B3  3400               	retlw	0
  5052  12B4  34E0               	retlw	224
  5053  12B5  3400               	retlw	0
  5054  12B6  34D2               	retlw	210
  5055  12B7  3400               	retlw	0
  5056  12B8  34C4               	retlw	196
  5057  12B9  3400               	retlw	0
  5058  12BA  34B8               	retlw	184
  5059  12BB  3400               	retlw	0
  5060  12BC  34AD               	retlw	173
  5061  12BD  3400               	retlw	0
  5062  12BE  34A5               	retlw	165
  5063  12BF  3400               	retlw	0
  5064  12C0  349F               	retlw	159
  5065  12C1  3400               	retlw	0
  5066  12C2  349B               	retlw	155
  5067  12C3  3400               	retlw	0
  5068  12C4  349A               	retlw	154
  5069  12C5  3400               	retlw	0
  5070  12C6  349B               	retlw	155
  5071  12C7  3400               	retlw	0
  5072  12C8  349F               	retlw	159
  5073  12C9  3400               	retlw	0
  5074  12CA  34A5               	retlw	165
  5075  12CB  3400               	retlw	0
  5076  12CC  34AD               	retlw	173
  5077  12CD  3400               	retlw	0
  5078  12CE  34B8               	retlw	184
  5079  12CF  3400               	retlw	0
  5080  12D0  34C4               	retlw	196
  5081  12D1  3400               	retlw	0
  5082  12D2  34D2               	retlw	210
  5083  12D3  3400               	retlw	0
  5084  12D4  34E0               	retlw	224
  5085  12D5  3400               	retlw	0
  5086  12D6  34F0               	retlw	240
  5087  12D7  3400               	retlw	0
  5088  12D8  3400               	retlw	0
  5089  12D9  3400               	retlw	0
  5090  12DA                     __end_ofdrv2665@drv_sine:	
  5091                           
  5092                           	psect	stringtext3
  5093  12DA                     __pstringtext3:	
  5094  12DA                     _drv_sine:	
  5095  12DA  3400               	retlw	0
  5096  12DB  3400               	retlw	0
  5097  12DC  3410               	retlw	16
  5098  12DD  3400               	retlw	0
  5099  12DE  3420               	retlw	32
  5100  12DF  3400               	retlw	0
  5101  12E0  342E               	retlw	46
  5102  12E1  3400               	retlw	0
  5103  12E2  343C               	retlw	60
  5104  12E3  3400               	retlw	0
  5105  12E4  3448               	retlw	72
  5106  12E5  3400               	retlw	0
  5107  12E6  3453               	retlw	83
  5108  12E7  3400               	retlw	0
  5109  12E8  345B               	retlw	91
  5110  12E9  3400               	retlw	0
  5111  12EA  3461               	retlw	97
  5112  12EB  3400               	retlw	0
  5113  12EC  3465               	retlw	101
  5114  12ED  3400               	retlw	0
  5115  12EE  3466               	retlw	102
  5116  12EF  3400               	retlw	0
  5117  12F0  3465               	retlw	101
  5118  12F1  3400               	retlw	0
  5119  12F2  3461               	retlw	97
  5120  12F3  3400               	retlw	0
  5121  12F4  345B               	retlw	91
  5122  12F5  3400               	retlw	0
  5123  12F6  3453               	retlw	83
  5124  12F7  3400               	retlw	0
  5125  12F8  3448               	retlw	72
  5126  12F9  3400               	retlw	0
  5127  12FA  343C               	retlw	60
  5128  12FB  3400               	retlw	0
  5129  12FC  342E               	retlw	46
  5130  12FD  3400               	retlw	0
  5131  12FE  3420               	retlw	32
  5132  12FF  3400               	retlw	0
  5133  1300  3410               	retlw	16
  5134  1301  3400               	retlw	0
  5135  1302  3400               	retlw	0
  5136  1303  3400               	retlw	0
  5137  1304  34F0               	retlw	240
  5138  1305  3400               	retlw	0
  5139  1306  34E0               	retlw	224
  5140  1307  3400               	retlw	0
  5141  1308  34D2               	retlw	210
  5142  1309  3400               	retlw	0
  5143  130A  34C4               	retlw	196
  5144  130B  3400               	retlw	0
  5145  130C  34B8               	retlw	184
  5146  130D  3400               	retlw	0
  5147  130E  34AD               	retlw	173
  5148  130F  3400               	retlw	0
  5149  1310  34A5               	retlw	165
  5150  1311  3400               	retlw	0
  5151  1312  349F               	retlw	159
  5152  1313  3400               	retlw	0
  5153  1314  349B               	retlw	155
  5154  1315  3400               	retlw	0
  5155  1316  349A               	retlw	154
  5156  1317  3400               	retlw	0
  5157  1318  349B               	retlw	155
  5158  1319  3400               	retlw	0
  5159  131A  349F               	retlw	159
  5160  131B  3400               	retlw	0
  5161  131C  34A5               	retlw	165
  5162  131D  3400               	retlw	0
  5163  131E  34AD               	retlw	173
  5164  131F  3400               	retlw	0
  5165  1320  34B8               	retlw	184
  5166  1321  3400               	retlw	0
  5167  1322  34C4               	retlw	196
  5168  1323  3400               	retlw	0
  5169  1324  34D2               	retlw	210
  5170  1325  3400               	retlw	0
  5171  1326  34E0               	retlw	224
  5172  1327  3400               	retlw	0
  5173  1328  34F0               	retlw	240
  5174  1329  3400               	retlw	0
  5175  132A  3400               	retlw	0
  5176  132B  3400               	retlw	0
  5177  132C  3410               	retlw	16
  5178  132D  3400               	retlw	0
  5179  132E  3420               	retlw	32
  5180  132F  3400               	retlw	0
  5181  1330  342E               	retlw	46
  5182  1331  3400               	retlw	0
  5183  1332  343C               	retlw	60
  5184  1333  3400               	retlw	0
  5185  1334  3448               	retlw	72
  5186  1335  3400               	retlw	0
  5187  1336  3453               	retlw	83
  5188  1337  3400               	retlw	0
  5189  1338  345B               	retlw	91
  5190  1339  3400               	retlw	0
  5191  133A  3461               	retlw	97
  5192  133B  3400               	retlw	0
  5193  133C  3465               	retlw	101
  5194  133D  3400               	retlw	0
  5195  133E  3466               	retlw	102
  5196  133F  3400               	retlw	0
  5197  1340  3465               	retlw	101
  5198  1341  3400               	retlw	0
  5199  1342  3461               	retlw	97
  5200  1343  3400               	retlw	0
  5201  1344  345B               	retlw	91
  5202  1345  3400               	retlw	0
  5203  1346  3453               	retlw	83
  5204  1347  3400               	retlw	0
  5205  1348  3448               	retlw	72
  5206  1349  3400               	retlw	0
  5207  134A  343C               	retlw	60
  5208  134B  3400               	retlw	0
  5209  134C  342E               	retlw	46
  5210  134D  3400               	retlw	0
  5211  134E  3420               	retlw	32
  5212  134F  3400               	retlw	0
  5213  1350  3410               	retlw	16
  5214  1351  3400               	retlw	0
  5215  1352  3400               	retlw	0
  5216  1353  3400               	retlw	0
  5217  1354  34F0               	retlw	240
  5218  1355  3400               	retlw	0
  5219  1356  34E0               	retlw	224
  5220  1357  3400               	retlw	0
  5221  1358  34D2               	retlw	210
  5222  1359  3400               	retlw	0
  5223  135A  34C4               	retlw	196
  5224  135B  3400               	retlw	0
  5225  135C  34B8               	retlw	184
  5226  135D  3400               	retlw	0
  5227  135E  34AD               	retlw	173
  5228  135F  3400               	retlw	0
  5229  1360  34A5               	retlw	165
  5230  1361  3400               	retlw	0
  5231  1362  349F               	retlw	159
  5232  1363  3400               	retlw	0
  5233  1364  349B               	retlw	155
  5234  1365  3400               	retlw	0
  5235  1366  349A               	retlw	154
  5236  1367  3400               	retlw	0
  5237  1368  349B               	retlw	155
  5238  1369  3400               	retlw	0
  5239  136A  349F               	retlw	159
  5240  136B  3400               	retlw	0
  5241  136C  34A5               	retlw	165
  5242  136D  3400               	retlw	0
  5243  136E  34AD               	retlw	173
  5244  136F  3400               	retlw	0
  5245  1370  34B8               	retlw	184
  5246  1371  3400               	retlw	0
  5247  1372  34C4               	retlw	196
  5248  1373  3400               	retlw	0
  5249  1374  34D2               	retlw	210
  5250  1375  3400               	retlw	0
  5251  1376  34E0               	retlw	224
  5252  1377  3400               	retlw	0
  5253  1378  34F0               	retlw	240
  5254  1379  3400               	retlw	0
  5255  137A  3400               	retlw	0
  5256  137B  3400               	retlw	0
  5257  137C  3410               	retlw	16
  5258  137D  3400               	retlw	0
  5259  137E  3420               	retlw	32
  5260  137F  3400               	retlw	0
  5261  1380  342E               	retlw	46
  5262  1381  3400               	retlw	0
  5263  1382  343C               	retlw	60
  5264  1383  3400               	retlw	0
  5265  1384  3448               	retlw	72
  5266  1385  3400               	retlw	0
  5267  1386  3453               	retlw	83
  5268  1387  3400               	retlw	0
  5269  1388  345B               	retlw	91
  5270  1389  3400               	retlw	0
  5271  138A  3461               	retlw	97
  5272  138B  3400               	retlw	0
  5273  138C  3465               	retlw	101
  5274  138D  3400               	retlw	0
  5275  138E  3466               	retlw	102
  5276  138F  3400               	retlw	0
  5277  1390  3465               	retlw	101
  5278  1391  3400               	retlw	0
  5279  1392  3461               	retlw	97
  5280  1393  3400               	retlw	0
  5281  1394  345B               	retlw	91
  5282  1395  3400               	retlw	0
  5283  1396  3453               	retlw	83
  5284  1397  3400               	retlw	0
  5285  1398  3448               	retlw	72
  5286  1399  3400               	retlw	0
  5287  139A  343C               	retlw	60
  5288  139B  3400               	retlw	0
  5289  139C  342E               	retlw	46
  5290  139D  3400               	retlw	0
  5291  139E  3420               	retlw	32
  5292  139F  3400               	retlw	0
  5293  13A0  3410               	retlw	16
  5294  13A1  3400               	retlw	0
  5295  13A2  3400               	retlw	0
  5296  13A3  3400               	retlw	0
  5297  13A4  34F0               	retlw	240
  5298  13A5  3400               	retlw	0
  5299  13A6  34E0               	retlw	224
  5300  13A7  3400               	retlw	0
  5301  13A8  34D2               	retlw	210
  5302  13A9  3400               	retlw	0
  5303  13AA  34C4               	retlw	196
  5304  13AB  3400               	retlw	0
  5305  13AC  34B8               	retlw	184
  5306  13AD  3400               	retlw	0
  5307  13AE  34AD               	retlw	173
  5308  13AF  3400               	retlw	0
  5309  13B0  34A5               	retlw	165
  5310  13B1  3400               	retlw	0
  5311  13B2  349F               	retlw	159
  5312  13B3  3400               	retlw	0
  5313  13B4  349B               	retlw	155
  5314  13B5  3400               	retlw	0
  5315  13B6  349A               	retlw	154
  5316  13B7  3400               	retlw	0
  5317  13B8  349B               	retlw	155
  5318  13B9  3400               	retlw	0
  5319  13BA  349F               	retlw	159
  5320  13BB  3400               	retlw	0
  5321  13BC  34A5               	retlw	165
  5322  13BD  3400               	retlw	0
  5323  13BE  34AD               	retlw	173
  5324  13BF  3400               	retlw	0
  5325  13C0  34B8               	retlw	184
  5326  13C1  3400               	retlw	0
  5327  13C2  34C4               	retlw	196
  5328  13C3  3400               	retlw	0
  5329  13C4  34D2               	retlw	210
  5330  13C5  3400               	retlw	0
  5331  13C6  34E0               	retlw	224
  5332  13C7  3400               	retlw	0
  5333  13C8  34F0               	retlw	240
  5334  13C9  3400               	retlw	0
  5335  13CA  3400               	retlw	0
  5336  13CB  3400               	retlw	0
  5337  13CC                     __end_of_drv_sine:	
  5338                           
  5339                           	psect	stringtext4
  5340  2000                     __pstringtext4:	
  5341  2000                     _dpowers:	
  5342  2000  3401               	retlw	1
  5343  2001  3400               	retlw	0
  5344  2002  3400               	retlw	0
  5345  2003  3400               	retlw	0
  5346  2004  340A               	retlw	10
  5347  2005  3400               	retlw	0
  5348  2006  3400               	retlw	0
  5349  2007  3400               	retlw	0
  5350  2008  3464               	retlw	100
  5351  2009  3400               	retlw	0
  5352  200A  3400               	retlw	0
  5353  200B  3400               	retlw	0
  5354  200C  34E8               	retlw	232
  5355  200D  3403               	retlw	3
  5356  200E  3400               	retlw	0
  5357  200F  3400               	retlw	0
  5358  2010  3410               	retlw	16
  5359  2011  3427               	retlw	39
  5360  2012  3400               	retlw	0
  5361  2013  3400               	retlw	0
  5362  2014  34A0               	retlw	160
  5363  2015  3486               	retlw	134
  5364  2016  3401               	retlw	1
  5365  2017  3400               	retlw	0
  5366  2018  3440               	retlw	64
  5367  2019  3442               	retlw	66
  5368  201A  340F               	retlw	15
  5369  201B  3400               	retlw	0
  5370  201C  3480               	retlw	128
  5371  201D  3496               	retlw	150
  5372  201E  3498               	retlw	152
  5373  201F  3400               	retlw	0
  5374  2020  3400               	retlw	0
  5375  2021  34E1               	retlw	225
  5376  2022  34F5               	retlw	245
  5377  2023  3405               	retlw	5
  5378  2024  3400               	retlw	0
  5379  2025  34CA               	retlw	202
  5380  2026  349A               	retlw	154
  5381  2027  343B               	retlw	59
  5382  2028                     __end_of_dpowers:	
  5383                           
  5384                           	psect	stringtext5
  5385  2A41                     __pstringtext5:	
  5386  2A41                     _TMR2_RANGE:	
  5387  2A41  3400               	retlw	0
  5388  2A42  34C8               	retlw	200
  5389  2A43  343F               	retlw	63
  5390  2A44                     __end_of_TMR2_RANGE:	
  5391                           
  5392                           	psect	stringtext6
  5393  2A44                     __pstringtext6:	
  5394  2A44                     _TMR0_RANGE:	
  5395  2A44  3400               	retlw	0
  5396  2A45  34C8               	retlw	200
  5397  2A46  343D               	retlw	61
  5398  2A47                     __end_of_TMR0_RANGE:	
  5399                           
  5400                           	psect	stringtext7
  5401  2A4D                     __pstringtext7:	
  5402  2A4D                     _LEDpower:	
  5403  2A4D  343F               	retlw	63
  5404  2A4E  3400               	retlw	0
  5405  2A4F                     __end_of_LEDpower:	
  5406                           
  5407                           	psect	stringtext8
  5408  2A55                     __pstringtext8:	
  5409  2A55                     _drv_address:	
  5410  2A55  3459               	retlw	89
  5411  2A56                     __end_of_drv_address:	
  5412                           
  5413                           	psect	stringtext9
  5414  10F4                     __pstringtext9:	
  5415  10F4                     drv2665@drv_fifo_sine:	
  5416  10F4  340B               	retlw	11
  5417  10F5  3400               	retlw	0
  5418  10F6  3400               	retlw	0
  5419  10F7  3400               	retlw	0
  5420  10F8  3410               	retlw	16
  5421  10F9  3400               	retlw	0
  5422  10FA  3420               	retlw	32
  5423  10FB  3400               	retlw	0
  5424  10FC  342E               	retlw	46
  5425  10FD  3400               	retlw	0
  5426  10FE  343C               	retlw	60
  5427  10FF  3400               	retlw	0
  5428  1100  3448               	retlw	72
  5429  1101  3400               	retlw	0
  5430  1102  3453               	retlw	83
  5431  1103  3400               	retlw	0
  5432  1104  345B               	retlw	91
  5433  1105  3400               	retlw	0
  5434  1106  3461               	retlw	97
  5435  1107  3400               	retlw	0
  5436  1108  3465               	retlw	101
  5437  1109  3400               	retlw	0
  5438  110A  3466               	retlw	102
  5439  110B  3400               	retlw	0
  5440  110C  3465               	retlw	101
  5441  110D  3400               	retlw	0
  5442  110E  3461               	retlw	97
  5443  110F  3400               	retlw	0
  5444  1110  345B               	retlw	91
  5445  1111  3400               	retlw	0
  5446  1112  3453               	retlw	83
  5447  1113  3400               	retlw	0
  5448  1114  3448               	retlw	72
  5449  1115  3400               	retlw	0
  5450  1116  343C               	retlw	60
  5451  1117  3400               	retlw	0
  5452  1118  342E               	retlw	46
  5453  1119  3400               	retlw	0
  5454  111A  3420               	retlw	32
  5455  111B  3400               	retlw	0
  5456  111C  3410               	retlw	16
  5457  111D  3400               	retlw	0
  5458  111E  3400               	retlw	0
  5459  111F  3400               	retlw	0
  5460  1120  34F0               	retlw	240
  5461  1121  3400               	retlw	0
  5462  1122  34E0               	retlw	224
  5463  1123  3400               	retlw	0
  5464  1124  34D2               	retlw	210
  5465  1125  3400               	retlw	0
  5466  1126  34C4               	retlw	196
  5467  1127  3400               	retlw	0
  5468  1128  34B8               	retlw	184
  5469  1129  3400               	retlw	0
  5470  112A  34AD               	retlw	173
  5471  112B  3400               	retlw	0
  5472  112C  34A5               	retlw	165
  5473  112D  3400               	retlw	0
  5474  112E  349F               	retlw	159
  5475  112F  3400               	retlw	0
  5476  1130  349B               	retlw	155
  5477  1131  3400               	retlw	0
  5478  1132  349A               	retlw	154
  5479  1133  3400               	retlw	0
  5480  1134  349B               	retlw	155
  5481  1135  3400               	retlw	0
  5482  1136  349F               	retlw	159
  5483  1137  3400               	retlw	0
  5484  1138  34A5               	retlw	165
  5485  1139  3400               	retlw	0
  5486  113A  34AD               	retlw	173
  5487  113B  3400               	retlw	0
  5488  113C  34B8               	retlw	184
  5489  113D  3400               	retlw	0
  5490  113E  34C4               	retlw	196
  5491  113F  3400               	retlw	0
  5492  1140  34D2               	retlw	210
  5493  1141  3400               	retlw	0
  5494  1142  34E0               	retlw	224
  5495  1143  3400               	retlw	0
  5496  1144  34F0               	retlw	240
  5497  1145  3400               	retlw	0
  5498  1146  3400               	retlw	0
  5499  1147  3400               	retlw	0
  5500  1148  3410               	retlw	16
  5501  1149  3400               	retlw	0
  5502  114A  3420               	retlw	32
  5503  114B  3400               	retlw	0
  5504  114C  342E               	retlw	46
  5505  114D  3400               	retlw	0
  5506  114E  343C               	retlw	60
  5507  114F  3400               	retlw	0
  5508  1150  3448               	retlw	72
  5509  1151  3400               	retlw	0
  5510  1152  3453               	retlw	83
  5511  1153  3400               	retlw	0
  5512  1154  345B               	retlw	91
  5513  1155  3400               	retlw	0
  5514  1156  3461               	retlw	97
  5515  1157  3400               	retlw	0
  5516  1158  3465               	retlw	101
  5517  1159  3400               	retlw	0
  5518  115A  3466               	retlw	102
  5519  115B  3400               	retlw	0
  5520  115C  3465               	retlw	101
  5521  115D  3400               	retlw	0
  5522  115E  3461               	retlw	97
  5523  115F  3400               	retlw	0
  5524  1160  345B               	retlw	91
  5525  1161  3400               	retlw	0
  5526  1162  3453               	retlw	83
  5527  1163  3400               	retlw	0
  5528  1164  3448               	retlw	72
  5529  1165  3400               	retlw	0
  5530  1166  343C               	retlw	60
  5531  1167  3400               	retlw	0
  5532  1168  342E               	retlw	46
  5533  1169  3400               	retlw	0
  5534  116A  3420               	retlw	32
  5535  116B  3400               	retlw	0
  5536  116C  3410               	retlw	16
  5537  116D  3400               	retlw	0
  5538  116E  3400               	retlw	0
  5539  116F  3400               	retlw	0
  5540  1170  34F0               	retlw	240
  5541  1171  3400               	retlw	0
  5542  1172  34E0               	retlw	224
  5543  1173  3400               	retlw	0
  5544  1174  34D2               	retlw	210
  5545  1175  3400               	retlw	0
  5546  1176  34C4               	retlw	196
  5547  1177  3400               	retlw	0
  5548  1178  34B8               	retlw	184
  5549  1179  3400               	retlw	0
  5550  117A  34AD               	retlw	173
  5551  117B  3400               	retlw	0
  5552  117C  34A5               	retlw	165
  5553  117D  3400               	retlw	0
  5554  117E  349F               	retlw	159
  5555  117F  3400               	retlw	0
  5556  1180  349B               	retlw	155
  5557  1181  3400               	retlw	0
  5558  1182  349A               	retlw	154
  5559  1183  3400               	retlw	0
  5560  1184  349B               	retlw	155
  5561  1185  3400               	retlw	0
  5562  1186  349F               	retlw	159
  5563  1187  3400               	retlw	0
  5564  1188  34A5               	retlw	165
  5565  1189  3400               	retlw	0
  5566  118A  34AD               	retlw	173
  5567  118B  3400               	retlw	0
  5568  118C  34B8               	retlw	184
  5569  118D  3400               	retlw	0
  5570  118E  34C4               	retlw	196
  5571  118F  3400               	retlw	0
  5572  1190  34D2               	retlw	210
  5573  1191  3400               	retlw	0
  5574  1192  34E0               	retlw	224
  5575  1193  3400               	retlw	0
  5576  1194  34F0               	retlw	240
  5577  1195  3400               	retlw	0
  5578  1196  3400               	retlw	0
  5579  1197  3400               	retlw	0
  5580  1198  3410               	retlw	16
  5581  1199  3400               	retlw	0
  5582  119A  3420               	retlw	32
  5583  119B  3400               	retlw	0
  5584  119C  342E               	retlw	46
  5585  119D  3400               	retlw	0
  5586  119E  343C               	retlw	60
  5587  119F  3400               	retlw	0
  5588  11A0  3448               	retlw	72
  5589  11A1  3400               	retlw	0
  5590  11A2  3453               	retlw	83
  5591  11A3  3400               	retlw	0
  5592  11A4  345B               	retlw	91
  5593  11A5  3400               	retlw	0
  5594  11A6  3461               	retlw	97
  5595  11A7  3400               	retlw	0
  5596  11A8  3465               	retlw	101
  5597  11A9  3400               	retlw	0
  5598  11AA  3466               	retlw	102
  5599  11AB  3400               	retlw	0
  5600  11AC  3465               	retlw	101
  5601  11AD  3400               	retlw	0
  5602  11AE  3461               	retlw	97
  5603  11AF  3400               	retlw	0
  5604  11B0  345B               	retlw	91
  5605  11B1  3400               	retlw	0
  5606  11B2  3453               	retlw	83
  5607  11B3  3400               	retlw	0
  5608  11B4  3448               	retlw	72
  5609  11B5  3400               	retlw	0
  5610  11B6  343C               	retlw	60
  5611  11B7  3400               	retlw	0
  5612  11B8  342E               	retlw	46
  5613  11B9  3400               	retlw	0
  5614  11BA  3420               	retlw	32
  5615  11BB  3400               	retlw	0
  5616  11BC  3410               	retlw	16
  5617  11BD  3400               	retlw	0
  5618  11BE  3400               	retlw	0
  5619  11BF  3400               	retlw	0
  5620  11C0  34F0               	retlw	240
  5621  11C1  3400               	retlw	0
  5622  11C2  34E0               	retlw	224
  5623  11C3  3400               	retlw	0
  5624  11C4  34D2               	retlw	210
  5625  11C5  3400               	retlw	0
  5626  11C6  34C4               	retlw	196
  5627  11C7  3400               	retlw	0
  5628  11C8  34B8               	retlw	184
  5629  11C9  3400               	retlw	0
  5630  11CA  34AD               	retlw	173
  5631  11CB  3400               	retlw	0
  5632  11CC  34A5               	retlw	165
  5633  11CD  3400               	retlw	0
  5634  11CE  349F               	retlw	159
  5635  11CF  3400               	retlw	0
  5636  11D0  349B               	retlw	155
  5637  11D1  3400               	retlw	0
  5638  11D2  349A               	retlw	154
  5639  11D3  3400               	retlw	0
  5640  11D4  349B               	retlw	155
  5641  11D5  3400               	retlw	0
  5642  11D6  349F               	retlw	159
  5643  11D7  3400               	retlw	0
  5644  11D8  34A5               	retlw	165
  5645  11D9  3400               	retlw	0
  5646  11DA  34AD               	retlw	173
  5647  11DB  3400               	retlw	0
  5648  11DC  34B8               	retlw	184
  5649  11DD  3400               	retlw	0
  5650  11DE  34C4               	retlw	196
  5651  11DF  3400               	retlw	0
  5652  11E0  34D2               	retlw	210
  5653  11E1  3400               	retlw	0
  5654  11E2  34E0               	retlw	224
  5655  11E3  3400               	retlw	0
  5656  11E4  34F0               	retlw	240
  5657  11E5  3400               	retlw	0
  5658  11E6  3400               	retlw	0
  5659  11E7  3400               	retlw	0
  5660  11E8                     __end_ofdrv2665@drv_fifo_sine:	
  5661                           
  5662                           	psect	stringtext10
  5663  2939                     __pstringtext10:	
  5664  2939                     sin@coeff_a:	
  5665  2939  34F4               	retlw	244
  5666  293A  344A               	retlw	74
  5667  293B  3448               	retlw	72
  5668  293C  3495               	retlw	149
  5669  293D  3495               	retlw	149
  5670  293E  34C7               	retlw	199
  5671  293F  34C1               	retlw	193
  5672  2940  34DC               	retlw	220
  5673  2941  3445               	retlw	69
  5674  2942  34DC               	retlw	220
  5675  2943  346D               	retlw	109
  5676  2944  34C3               	retlw	195
  5677  2945  34B3               	retlw	179
  5678  2946  3433               	retlw	51
  5679  2947  3440               	retlw	64
  5680  2948                     __end_ofsin@coeff_a:	
  5681                           
  5682                           	psect	stringtext11
  5683  2981                     __pstringtext11:	
  5684  2981                     sin@coeff_b:	
  5685  2981  3434               	retlw	52
  5686  2982  3401               	retlw	1
  5687  2983  3448               	retlw	72
  5688  2984  349D               	retlw	157
  5689  2985  34B0               	retlw	176
  5690  2986  3445               	retlw	69
  5691  2987  3400               	retlw	0
  5692  2988  34DA               	retlw	218
  5693  2989  3442               	retlw	66
  5694  298A  3400               	retlw	0
  5695  298B  3480               	retlw	128
  5696  298C  343F               	retlw	63
  5697  298D                     __end_ofsin@coeff_b:	
  5698                           
  5699                           	psect	nvBANK0
  5700  005E                     __pnvBANK0:	
  5701  005E                     _eusartTxBufferRemaining:	
  5702  005E                     	ds	1
  5703                           
  5704                           	psect	nvBANK2
  5705  0166                     __pnvBANK2:	
  5706  0166                     _TMR2_InterruptHandler:	
  5707  0166                     	ds	2
  5708  0168                     _TMR0_InterruptHandler:	
  5709  0168                     	ds	2
  5710  001F                     _T2CONbits	set	31
  5711  001F                     _T2CON	set	31
  5712  001D                     _TMR2	set	29
  5713  001E                     _PR2	set	30
  5714  0017                     _T0CON0bits	set	23
  5715  0017                     _T0CON0	set	23
  5716  0015                     _TMR0L	set	21
  5717  0016                     _TMR0H	set	22
  5718  0018                     _T0CON1	set	24
  5719  0011                     _PIR1bits	set	17
  5720  0010                     _PIR0bits	set	16
  5721  000E                     _PORTCbits	set	14
  5722  000B                     _INTCONbits	set	11
  5723  0091                     _PIE1bits	set	145
  5724  0090                     _PIE0bits	set	144
  5725  008E                     _TRISC	set	142
  5726  008D                     _TRISB	set	141
  5727  008C                     _TRISA	set	140
  5728  0097                     _WDTCON	set	151
  5729  010C                     _LATAbits	set	268
  5730  010E                     _LATCbits	set	270
  5731  010D                     _LATBbits	set	269
  5732  010E                     _LATC	set	270
  5733  010D                     _LATB	set	269
  5734  010C                     _LATA	set	268
  5735  0199                     _RC1REG	set	409
  5736  019D                     _RC1STAbits	set	413
  5737  019A                     _TX1REG	set	410
  5738  019C                     _SP1BRGH	set	412
  5739  019B                     _SP1BRGL	set	411
  5740  019E                     _TX1STA	set	414
  5741  019D                     _RC1STA	set	413
  5742  019F                     _BAUD1CON	set	415
  5743  018C                     _ANSELA	set	396
  5744  018D                     _ANSELB	set	397
  5745  018E                     _ANSELC	set	398
  5746  0214                     _SSP1STATbits	set	532
  5747  0213                     _SSP1MSK	set	531
  5748  0211                     _SSP1BUF	set	529
  5749  0216                     _SSP1CON2bits	set	534
  5750  0212                     _SSP1ADD	set	530
  5751  0216                     _SSP1CON2	set	534
  5752  0215                     _SSP1CON1	set	533
  5753  0214                     _SSP1STAT	set	532
  5754  0215                     _SSP1CON1bits	set	533
  5755  020E                     _WPUC	set	526
  5756  020C                     _WPUA	set	524
  5757  020D                     _WPUB	set	525
  5758  028E                     _ODCONC	set	654
  5759  028D                     _ODCONB	set	653
  5760  028C                     _ODCONA	set	652
  5761  0896                     _NVMCON2	set	2198
  5762  0893                     _NVMDATL	set	2195
  5763  0894                     _NVMDATH	set	2196
  5764  0895                     _NVMCON1bits	set	2197
  5765  0892                     _NVMADRH	set	2194
  5766  0891                     _NVMADRL	set	2193
  5767  0916                     _PMD5	set	2326
  5768  0915                     _PMD4	set	2325
  5769  0914                     _PMD3	set	2324
  5770  0913                     _PMD2	set	2323
  5771  0912                     _PMD1	set	2322
  5772  0911                     _PMD0	set	2321
  5773  091E                     _OSCTUNE	set	2334
  5774  091F                     _OSCFRQ	set	2335
  5775  091D                     _OSCEN	set	2333
  5776  091B                     _OSCCON3	set	2331
  5777  0919                     _OSCCON1	set	2329
  5778  0E24                     _RXPPSbits	set	3620
  5779  0E20                     _SSP1CLKPPSbits	set	3616
  5780  0E21                     _SSP1DATPPSbits	set	3617
  5781  0E9D                     _RB5PPSbits	set	3741
  5782  0E9E                     _RB6PPSbits	set	3742
  5783  0E9F                     _RB7PPSbits	set	3743
  5784                           
  5785                           	psect	stringtext12
  5786  2800                     __pstringtext12:	
  5787  2800                     STR_42:	
  5788  2800  340A               	retlw	10
  5789  2801  3474               	retlw	116	;'t'
  5790  2802  3465               	retlw	101	;'e'
  5791  2803  3473               	retlw	115	;'s'
  5792  2804  3474               	retlw	116	;'t'
  5793  2805  3469               	retlw	105	;'i'
  5794  2806  346E               	retlw	110	;'n'
  5795  2807  3467               	retlw	103	;'g'
  5796  2808  3420               	retlw	32	;' '
  5797  2809  3462               	retlw	98	;'b'
  5798  280A  346F               	retlw	111	;'o'
  5799  280B  3474               	retlw	116	;'t'
  5800  280C  3474               	retlw	116	;'t'
  5801  280D  346F               	retlw	111	;'o'
  5802  280E  346D               	retlw	109	;'m'
  5803  280F  3420               	retlw	32	;' '
  5804  2810  344C               	retlw	76	;'L'
  5805  2811  3445               	retlw	69	;'E'
  5806  2812  3444               	retlw	68	;'D'
  5807  2813  3420               	retlw	32	;' '
  5808  2814  3464               	retlw	100	;'d'
  5809  2815  3472               	retlw	114	;'r'
  5810  2816  3469               	retlw	105	;'i'
  5811  2817  3476               	retlw	118	;'v'
  5812  2818  3465               	retlw	101	;'e'
  5813  2819  3472               	retlw	114	;'r'
  5814  281A  342E               	retlw	46	;'.'
  5815  281B  342E               	retlw	46	;'.'
  5816  281C  342E               	retlw	46	;'.'
  5817  281D  340A               	retlw	10
  5818  281E  3400               	retlw	0
  5819                           
  5820                           	psect	stringtext13
  5821  281F                     __pstringtext13:	
  5822  281F                     STR_36:	
  5823  281F  340A               	retlw	10
  5824  2820  342D               	retlw	45	;'-'
  5825  2821  342D               	retlw	45	;'-'
  5826  2822  342D               	retlw	45	;'-'
  5827  2823  342D               	retlw	45	;'-'
  5828  2824  3473               	retlw	115	;'s'
  5829  2825  3474               	retlw	116	;'t'
  5830  2826  3461               	retlw	97	;'a'
  5831  2827  3472               	retlw	114	;'r'
  5832  2828  3474               	retlw	116	;'t'
  5833  2829  3469               	retlw	105	;'i'
  5834  282A  346E               	retlw	110	;'n'
  5835  282B  3467               	retlw	103	;'g'
  5836  282C  3420               	retlw	32	;' '
  5837  282D  3463               	retlw	99	;'c'
  5838  282E  346F               	retlw	111	;'o'
  5839  282F  346D               	retlw	109	;'m'
  5840  2830  346D               	retlw	109	;'m'
  5841  2831  3420               	retlw	32	;' '
  5842  2832  3474               	retlw	116	;'t'
  5843  2833  3465               	retlw	101	;'e'
  5844  2834  3473               	retlw	115	;'s'
  5845  2835  3474               	retlw	116	;'t'
  5846  2836  342D               	retlw	45	;'-'
  5847  2837  342D               	retlw	45	;'-'
  5848  2838  342D               	retlw	45	;'-'
  5849  2839  342D               	retlw	45	;'-'
  5850  283A  340A               	retlw	10
  5851  283B  340A               	retlw	10
  5852  283C  3400               	retlw	0
  5853                           
  5854                           	psect	stringtext14
  5855  283D                     __pstringtext14:	
  5856  283D                     STR_50:	
  5857  283D  342D               	retlw	45	;'-'
  5858  283E  342D               	retlw	45	;'-'
  5859  283F  342D               	retlw	45	;'-'
  5860  2840  342D               	retlw	45	;'-'
  5861  2841  3466               	retlw	102	;'f'
  5862  2842  3469               	retlw	105	;'i'
  5863  2843  346E               	retlw	110	;'n'
  5864  2844  3469               	retlw	105	;'i'
  5865  2845  3473               	retlw	115	;'s'
  5866  2846  3468               	retlw	104	;'h'
  5867  2847  3465               	retlw	101	;'e'
  5868  2848  3464               	retlw	100	;'d'
  5869  2849  3420               	retlw	32	;' '
  5870  284A  3463               	retlw	99	;'c'
  5871  284B  346F               	retlw	111	;'o'
  5872  284C  346D               	retlw	109	;'m'
  5873  284D  346D               	retlw	109	;'m'
  5874  284E  3420               	retlw	32	;' '
  5875  284F  3474               	retlw	116	;'t'
  5876  2850  3465               	retlw	101	;'e'
  5877  2851  3473               	retlw	115	;'s'
  5878  2852  3474               	retlw	116	;'t'
  5879  2853  342D               	retlw	45	;'-'
  5880  2854  342D               	retlw	45	;'-'
  5881  2855  342D               	retlw	45	;'-'
  5882  2856  342D               	retlw	45	;'-'
  5883  2857  340A               	retlw	10
  5884  2858  3400               	retlw	0
  5885                           
  5886                           	psect	stringtext15
  5887  2859                     __pstringtext15:	
  5888  2859                     STR_37:	
  5889  2859  3474               	retlw	116	;'t'
  5890  285A  3465               	retlw	101	;'e'
  5891  285B  3473               	retlw	115	;'s'
  5892  285C  3474               	retlw	116	;'t'
  5893  285D  3469               	retlw	105	;'i'
  5894  285E  346E               	retlw	110	;'n'
  5895  285F  3467               	retlw	103	;'g'
  5896  2860  3420               	retlw	32	;' '
  5897  2861  3474               	retlw	116	;'t'
  5898  2862  346F               	retlw	111	;'o'
  5899  2863  3470               	retlw	112	;'p'
  5900  2864  3420               	retlw	32	;' '
  5901  2865  344C               	retlw	76	;'L'
  5902  2866  3445               	retlw	69	;'E'
  5903  2867  3444               	retlw	68	;'D'
  5904  2868  3420               	retlw	32	;' '
  5905  2869  3464               	retlw	100	;'d'
  5906  286A  3472               	retlw	114	;'r'
  5907  286B  3469               	retlw	105	;'i'
  5908  286C  3476               	retlw	118	;'v'
  5909  286D  3465               	retlw	101	;'e'
  5910  286E  3472               	retlw	114	;'r'
  5911  286F  342E               	retlw	46	;'.'
  5912  2870  342E               	retlw	46	;'.'
  5913  2871  342E               	retlw	46	;'.'
  5914  2872  3400               	retlw	0
  5915                           
  5916                           	psect	stringtext16
  5917  2873                     __pstringtext16:	
  5918  2873                     STR_47:	
  5919  2873  340A               	retlw	10
  5920  2874  3474               	retlw	116	;'t'
  5921  2875  3465               	retlw	101	;'e'
  5922  2876  3473               	retlw	115	;'s'
  5923  2877  3474               	retlw	116	;'t'
  5924  2878  3469               	retlw	105	;'i'
  5925  2879  346E               	retlw	110	;'n'
  5926  287A  3467               	retlw	103	;'g'
  5927  287B  3420               	retlw	32	;' '
  5928  287C  3470               	retlw	112	;'p'
  5929  287D  3469               	retlw	105	;'i'
  5930  287E  3465               	retlw	101	;'e'
  5931  287F  347A               	retlw	122	;'z'
  5932  2880  346F               	retlw	111	;'o'
  5933  2881  3420               	retlw	32	;' '
  5934  2882  3464               	retlw	100	;'d'
  5935  2883  3472               	retlw	114	;'r'
  5936  2884  3469               	retlw	105	;'i'
  5937  2885  3476               	retlw	118	;'v'
  5938  2886  3465               	retlw	101	;'e'
  5939  2887  3472               	retlw	114	;'r'
  5940  2888  342E               	retlw	46	;'.'
  5941  2889  342E               	retlw	46	;'.'
  5942  288A  342E               	retlw	46	;'.'
  5943  288B  3400               	retlw	0
  5944                           
  5945                           	psect	stringtext17
  5946  288C                     __pstringtext17:	
  5947  288C                     STR_81:	
  5948  288C  3455               	retlw	85	;'U'
  5949  288D  344E               	retlw	78	;'N'
  5950  288E  3452               	retlw	82	;'R'
  5951  288F  3445               	retlw	69	;'E'
  5952  2890  3443               	retlw	67	;'C'
  5953  2891  344F               	retlw	79	;'O'
  5954  2892  3447               	retlw	71	;'G'
  5955  2893  344E               	retlw	78	;'N'
  5956  2894  3449               	retlw	73	;'I'
  5957  2895  345A               	retlw	90	;'Z'
  5958  2896  3445               	retlw	69	;'E'
  5959  2897  3444               	retlw	68	;'D'
  5960  2898  3420               	retlw	32	;' '
  5961  2899  3443               	retlw	67	;'C'
  5962  289A  344F               	retlw	79	;'O'
  5963  289B  344D               	retlw	77	;'M'
  5964  289C  344D               	retlw	77	;'M'
  5965  289D  3441               	retlw	65	;'A'
  5966  289E  344E               	retlw	78	;'N'
  5967  289F  3444               	retlw	68	;'D'
  5968  28A0  3421               	retlw	33	;'!'
  5969  28A1  340A               	retlw	10
  5970  28A2  3400               	retlw	0
  5971                           
  5972                           	psect	stringtext18
  5973  28A3                     __pstringtext18:	
  5974  28A3                     STR_52:	
  5975  28A3  3464               	retlw	100	;'d'
  5976  28A4  3472               	retlw	114	;'r'
  5977  28A5  3476               	retlw	118	;'v'
  5978  28A6  345F               	retlw	95	;'_'
  5979  28A7  3477               	retlw	119	;'w'
  5980  28A8  3472               	retlw	114	;'r'
  5981  28A9  3469               	retlw	105	;'i'
  5982  28AA  3474               	retlw	116	;'t'
  5983  28AB  3465               	retlw	101	;'e'
  5984  28AC  3420               	retlw	32	;' '
  5985  28AD  3465               	retlw	101	;'e'
  5986  28AE  3472               	retlw	114	;'r'
  5987  28AF  3472               	retlw	114	;'r'
  5988  28B0  346F               	retlw	111	;'o'
  5989  28B1  3472               	retlw	114	;'r'
  5990  28B2  3421               	retlw	33	;'!'
  5991  28B3  340A               	retlw	10
  5992  28B4  3400               	retlw	0
  5993                           
  5994                           	psect	stringtext19
  5995  28B5                     __pstringtext19:	
  5996  28B5                     STR_79:	
  5997  28B5  3465               	retlw	101	;'e'
  5998  28B6  3478               	retlw	120	;'x'
  5999  28B7  3465               	retlw	101	;'e'
  6000  28B8  3463               	retlw	99	;'c'
  6001  28B9  343A               	retlw	58	;':'
  6002  28BA  3420               	retlw	32	;' '
  6003  28BB  3425               	retlw	37	;'%'
  6004  28BC  3464               	retlw	100	;'d'
  6005  28BD  3420               	retlw	32	;' '
  6006  28BE  3425               	retlw	37	;'%'
  6007  28BF  3464               	retlw	100	;'d'
  6008  28C0  3420               	retlw	32	;' '
  6009  28C1  3425               	retlw	37	;'%'
  6010  28C2  3464               	retlw	100	;'d'
  6011  28C3  3420               	retlw	32	;' '
  6012  28C4  340A               	retlw	10
  6013  28C5  3400               	retlw	0
  6014                           
  6015                           	psect	stringtext20
  6016  28C6                     __pstringtext20:	
  6017  28C6                     STR_54:	
  6018  28C6  3464               	retlw	100	;'d'
  6019  28C7  3472               	retlw	114	;'r'
  6020  28C8  3476               	retlw	118	;'v'
  6021  28C9  345F               	retlw	95	;'_'
  6022  28CA  3472               	retlw	114	;'r'
  6023  28CB  3465               	retlw	101	;'e'
  6024  28CC  3461               	retlw	97	;'a'
  6025  28CD  3464               	retlw	100	;'d'
  6026  28CE  3420               	retlw	32	;' '
  6027  28CF  3465               	retlw	101	;'e'
  6028  28D0  3472               	retlw	114	;'r'
  6029  28D1  3472               	retlw	114	;'r'
  6030  28D2  346F               	retlw	111	;'o'
  6031  28D3  3472               	retlw	114	;'r'
  6032  28D4  3421               	retlw	33	;'!'
  6033  28D5  340A               	retlw	10
  6034  28D6  3400               	retlw	0
  6035                           
  6036                           	psect	stringtext21
  6037  28D7                     __pstringtext21:	
  6038  28D7                     STR_55:	
  6039  28D7  3466               	retlw	102	;'f'
  6040  28D8  3469               	retlw	105	;'i'
  6041  28D9  3466               	retlw	102	;'f'
  6042  28DA  346F               	retlw	111	;'o'
  6043  28DB  3420               	retlw	32	;' '
  6044  28DC  346E               	retlw	110	;'n'
  6045  28DD  346F               	retlw	111	;'o'
  6046  28DE  3474               	retlw	116	;'t'
  6047  28DF  3420               	retlw	32	;' '
  6048  28E0  3472               	retlw	114	;'r'
  6049  28E1  3465               	retlw	101	;'e'
  6050  28E2  3461               	retlw	97	;'a'
  6051  28E3  3464               	retlw	100	;'d'
  6052  28E4  3479               	retlw	121	;'y'
  6053  28E5  3421               	retlw	33	;'!'
  6054  28E6  340A               	retlw	10
  6055  28E7  3400               	retlw	0
  6056                           
  6057                           	psect	stringtext22
  6058  28E8                     __pstringtext22:	
  6059  28E8                     STR_51:	
  6060  28E8  3464               	retlw	100	;'d'
  6061  28E9  3472               	retlw	114	;'r'
  6062  28EA  3476               	retlw	118	;'v'
  6063  28EB  3420               	retlw	32	;' '
  6064  28EC  3469               	retlw	105	;'i'
  6065  28ED  346E               	retlw	110	;'n'
  6066  28EE  3469               	retlw	105	;'i'
  6067  28EF  3474               	retlw	116	;'t'
  6068  28F0  3469               	retlw	105	;'i'
  6069  28F1  3461               	retlw	97	;'a'
  6070  28F2  346C               	retlw	108	;'l'
  6071  28F3  3469               	retlw	105	;'i'
  6072  28F4  347A               	retlw	122	;'z'
  6073  28F5  3465               	retlw	101	;'e'
  6074  28F6  3464               	retlw	100	;'d'
  6075  28F7  340A               	retlw	10
  6076  28F8  3400               	retlw	0
  6077                           
  6078                           	psect	stringtext23
  6079  28F9                     __pstringtext23:	
  6080  28F9                     STR_5:	
  6081  28F9  346D               	retlw	109	;'m'
  6082  28FA  346F               	retlw	111	;'o'
  6083  28FB  3476               	retlw	118	;'v'
  6084  28FC  3465               	retlw	101	;'e'
  6085  28FD  344D               	retlw	77	;'M'
  6086  28FE  3461               	retlw	97	;'a'
  6087  28FF  3473               	retlw	115	;'s'
  6088  2900  346B               	retlw	107	;'k'
  6089  2901  343A               	retlw	58	;':'
  6090  2902  3420               	retlw	32	;' '
  6091  2903  3425               	retlw	37	;'%'
  6092  2904  346C               	retlw	108	;'l'
  6093  2905  3475               	retlw	117	;'u'
  6094  2906  3420               	retlw	32	;' '
  6095  2907  340A               	retlw	10
  6096  2908  3400               	retlw	0
  6097                           
  6098                           	psect	stringtext24
  6099  2909                     __pstringtext24:	
  6100  2909                     STR_13:	
  6101  2909  3472               	retlw	114	;'r'
  6102  290A  3465               	retlw	101	;'e'
  6103  290B  346C               	retlw	108	;'l'
  6104  290C  343A               	retlw	58	;':'
  6105  290D  3420               	retlw	32	;' '
  6106  290E  3461               	retlw	97	;'a'
  6107  290F  346C               	retlw	108	;'l'
  6108  2910  346C               	retlw	108	;'l'
  6109  2911  3420               	retlw	32	;' '
  6110  2912  3474               	retlw	116	;'t'
  6111  2913  3468               	retlw	104	;'h'
  6112  2914  3465               	retlw	101	;'e'
  6113  2915  3472               	retlw	114	;'r'
  6114  2916  3465               	retlw	101	;'e'
  6115  2917  340A               	retlw	10
  6116  2918  3400               	retlw	0
  6117                           
  6118                           	psect	stringtext25
  6119  2919                     __pstringtext25:	
  6120  2919                     STR_11:	
  6121  2919  3461               	retlw	97	;'a'
  6122  291A  3462               	retlw	98	;'b'
  6123  291B  3473               	retlw	115	;'s'
  6124  291C  343A               	retlw	58	;':'
  6125  291D  3420               	retlw	32	;' '
  6126  291E  3461               	retlw	97	;'a'
  6127  291F  346C               	retlw	108	;'l'
  6128  2920  346C               	retlw	108	;'l'
  6129  2921  3420               	retlw	32	;' '
  6130  2922  3474               	retlw	116	;'t'
  6131  2923  3468               	retlw	104	;'h'
  6132  2924  3465               	retlw	101	;'e'
  6133  2925  3472               	retlw	114	;'r'
  6134  2926  3465               	retlw	101	;'e'
  6135  2927  340A               	retlw	10
  6136  2928  3400               	retlw	0
  6137                           
  6138                           	psect	stringtext26
  6139  2929                     __pstringtext26:	
  6140  2929                     STR_3:	
  6141  2929  3472               	retlw	114	;'r'
  6142  292A  3465               	retlw	101	;'e'
  6143  292B  3461               	retlw	97	;'a'
  6144  292C  3464               	retlw	100	;'d'
  6145  292D  3420               	retlw	32	;' '
  6146  292E  3464               	retlw	100	;'d'
  6147  292F  3461               	retlw	97	;'a'
  6148  2930  3474               	retlw	116	;'t'
  6149  2931  3461               	retlw	97	;'a'
  6150  2932  343A               	retlw	58	;':'
  6151  2933  3420               	retlw	32	;' '
  6152  2934  3425               	retlw	37	;'%'
  6153  2935  346C               	retlw	108	;'l'
  6154  2936  3475               	retlw	117	;'u'
  6155  2937  340A               	retlw	10
  6156  2938  3400               	retlw	0
  6157                           
  6158                           	psect	stringtext27
  6159  2948                     __pstringtext27:	
  6160  2948                     STR_69:	
  6161  2948  3468               	retlw	104	;'h'
  6162  2949  3465               	retlw	101	;'e'
  6163  294A  3461               	retlw	97	;'a'
  6164  294B  3474               	retlw	116	;'t'
  6165  294C  3465               	retlw	101	;'e'
  6166  294D  3472               	retlw	114	;'r'
  6167  294E  3470               	retlw	112	;'p'
  6168  294F  346F               	retlw	111	;'o'
  6169  2950  3473               	retlw	115	;'s'
  6170  2951  3474               	retlw	116	;'t'
  6171  2952  3474               	retlw	116	;'t'
  6172  2953  3469               	retlw	105	;'i'
  6173  2954  346D               	retlw	109	;'m'
  6174  2955  3465               	retlw	101	;'e'
  6175  2956  3400               	retlw	0
  6176                           
  6177                           	psect	stringtext28
  6178  2957                     __pstringtext28:	
  6179  2957                     STR_4:	
  6180  2957  340A               	retlw	10
  6181  2958  340A               	retlw	10
  6182  2959  3473               	retlw	115	;'s'
  6183  295A  3479               	retlw	121	;'y'
  6184  295B  3473               	retlw	115	;'s'
  6185  295C  3474               	retlw	116	;'t'
  6186  295D  3465               	retlw	101	;'e'
  6187  295E  346D               	retlw	109	;'m'
  6188  295F  3420               	retlw	32	;' '
  6189  2960  3464               	retlw	100	;'d'
  6190  2961  346F               	retlw	111	;'o'
  6191  2962  346E               	retlw	110	;'n'
  6192  2963  3465               	retlw	101	;'e'
  6193  2964  340A               	retlw	10
  6194  2965  3400               	retlw	0
  6195                           
  6196                           	psect	stringtext29
  6197  2966                     __pstringtext29:	
  6198  2966                     STR_68:	
  6199  2966  3468               	retlw	104	;'h'
  6200  2967  3465               	retlw	101	;'e'
  6201  2968  3461               	retlw	97	;'a'
  6202  2969  3474               	retlw	116	;'t'
  6203  296A  3465               	retlw	101	;'e'
  6204  296B  3472               	retlw	114	;'r'
  6205  296C  3470               	retlw	112	;'p'
  6206  296D  3472               	retlw	114	;'r'
  6207  296E  3465               	retlw	101	;'e'
  6208  296F  3474               	retlw	116	;'t'
  6209  2970  3469               	retlw	105	;'i'
  6210  2971  346D               	retlw	109	;'m'
  6211  2972  3465               	retlw	101	;'e'
  6212  2973  3400               	retlw	0
  6213                           
  6214                           	psect	stringtext30
  6215  2974                     __pstringtext30:	
  6216  2974                     STR_72:	
  6217  2974  3474               	retlw	116	;'t'
  6218  2975  346F               	retlw	111	;'o'
  6219  2976  3467               	retlw	103	;'g'
  6220  2977  3467               	retlw	103	;'g'
  6221  2978  346C               	retlw	108	;'l'
  6222  2979  3465               	retlw	101	;'e'
  6223  297A  3468               	retlw	104	;'h'
  6224  297B  3465               	retlw	101	;'e'
  6225  297C  3461               	retlw	97	;'a'
  6226  297D  3474               	retlw	116	;'t'
  6227  297E  3465               	retlw	101	;'e'
  6228  297F  3472               	retlw	114	;'r'
  6229  2980  3400               	retlw	0
  6230                           
  6231                           	psect	stringtext31
  6232  298D                     __pstringtext31:	
  6233  298D                     STR_67:	
  6234  298D  3470               	retlw	112	;'p'
  6235  298E  3469               	retlw	105	;'i'
  6236  298F  3465               	retlw	101	;'e'
  6237  2990  347A               	retlw	122	;'z'
  6238  2991  346F               	retlw	111	;'o'
  6239  2992  346F               	retlw	111	;'o'
  6240  2993  346E               	retlw	110	;'n'
  6241  2994  3474               	retlw	116	;'t'
  6242  2995  3469               	retlw	105	;'i'
  6243  2996  346D               	retlw	109	;'m'
  6244  2997  3465               	retlw	101	;'e'
  6245  2998  3400               	retlw	0
  6246                           
  6247                           	psect	stringtext32
  6248  2999                     __pstringtext32:	
  6249  2999                     STR_12:	
  6250  2999  3464               	retlw	100	;'d'
  6251  299A  346F               	retlw	111	;'o'
  6252  299B  3452               	retlw	82	;'R'
  6253  299C  3465               	retlw	101	;'e'
  6254  299D  346C               	retlw	108	;'l'
  6255  299E  344D               	retlw	77	;'M'
  6256  299F  346F               	retlw	111	;'o'
  6257  29A0  3476               	retlw	118	;'v'
  6258  29A1  3465               	retlw	101	;'e'
  6259  29A2  340A               	retlw	10
  6260  29A3  3400               	retlw	0
  6261                           
  6262                           	psect	stringtext33
  6263  29A4                     __pstringtext33:	
  6264  29A4                     STR_41:	
  6265  29A4  340A               	retlw	10
  6266  29A5  340A               	retlw	10
  6267  29A6  3473               	retlw	115	;'s'
  6268  29A7  3468               	retlw	104	;'h'
  6269  29A8  346F               	retlw	111	;'o'
  6270  29A9  3472               	retlw	114	;'r'
  6271  29AA  3474               	retlw	116	;'t'
  6272  29AB  3473               	retlw	115	;'s'
  6273  29AC  343A               	retlw	58	;':'
  6274  29AD  3420               	retlw	32	;' '
  6275  29AE  3400               	retlw	0
  6276                           
  6277                           	psect	stringtext34
  6278  29AF                     __pstringtext34:	
  6279  29AF                     STR_49:	
  6280  29AF  3446               	retlw	70	;'F'
  6281  29B0  3441               	retlw	65	;'A'
  6282  29B1  3449               	retlw	73	;'I'
  6283  29B2  344C               	retlw	76	;'L'
  6284  29B3  3445               	retlw	69	;'E'
  6285  29B4  3444               	retlw	68	;'D'
  6286  29B5  340A               	retlw	10
  6287  29B6  340A               	retlw	10
  6288  29B7  3400               	retlw	0
  6289                           
  6290                           	psect	stringtext35
  6291  29B8                     __pstringtext35:	
  6292  29B8                     STR_48:	
  6293  29B8  3470               	retlw	112	;'p'
  6294  29B9  3461               	retlw	97	;'a'
  6295  29BA  3473               	retlw	115	;'s'
  6296  29BB  3473               	retlw	115	;'s'
  6297  29BC  3465               	retlw	101	;'e'
  6298  29BD  3464               	retlw	100	;'d'
  6299  29BE  340A               	retlw	10
  6300  29BF  340A               	retlw	10
  6301  29C0  3400               	retlw	0
  6302                           
  6303                           	psect	stringtext36
  6304  29C1                     __pstringtext36:	
  6305  29C1                     STR_65:	
  6306  29C1  3464               	retlw	100	;'d'
  6307  29C2  3472               	retlw	114	;'r'
  6308  29C3  3476               	retlw	118	;'v'
  6309  29C4  3450               	retlw	80	;'P'
  6310  29C5  3465               	retlw	101	;'e'
  6311  29C6  3461               	retlw	97	;'a'
  6312  29C7  346B               	retlw	107	;'k'
  6313  29C8  3400               	retlw	0
  6314                           
  6315                           	psect	stringtext37
  6316  29C9                     __pstringtext37:	
  6317  29C9                     STR_66:	
  6318  29C9  3464               	retlw	100	;'d'
  6319  29CA  3472               	retlw	114	;'r'
  6320  29CB  3476               	retlw	118	;'v'
  6321  29CC  3447               	retlw	71	;'G'
  6322  29CD  3461               	retlw	97	;'a'
  6323  29CE  3469               	retlw	105	;'i'
  6324  29CF  346E               	retlw	110	;'n'
  6325  29D0  3400               	retlw	0
  6326                           
  6327                           	psect	stringtext38
  6328  29D1                     __pstringtext38:	
  6329  29D1                     STR_70:	
  6330  29D1  346C               	retlw	108	;'l'
  6331  29D2  3465               	retlw	101	;'e'
  6332  29D3  3464               	retlw	100	;'d'
  6333  29D4  3467               	retlw	103	;'g'
  6334  29D5  3461               	retlw	97	;'a'
  6335  29D6  3469               	retlw	105	;'i'
  6336  29D7  346E               	retlw	110	;'n'
  6337  29D8  3400               	retlw	0
  6338                           
  6339                           	psect	stringtext39
  6340  29D9                     __pstringtext39:	
  6341  29D9                     STR_75:	
  6342  29D9  346D               	retlw	109	;'m'
  6343  29DA  3473               	retlw	115	;'s'
  6344  29DB  3474               	retlw	116	;'t'
  6345  29DC  3461               	retlw	97	;'a'
  6346  29DD  3474               	retlw	116	;'t'
  6347  29DE  3475               	retlw	117	;'u'
  6348  29DF  3473               	retlw	115	;'s'
  6349  29E0  3400               	retlw	0
  6350                           
  6351                           	psect	stringtext40
  6352  29E1                     __pstringtext40:	
  6353  29E1                     STR_39:	
  6354  29E1  3446               	retlw	70	;'F'
  6355  29E2  3441               	retlw	65	;'A'
  6356  29E3  3449               	retlw	73	;'I'
  6357  29E4  344C               	retlw	76	;'L'
  6358  29E5  3445               	retlw	69	;'E'
  6359  29E6  3444               	retlw	68	;'D'
  6360  29E7  340A               	retlw	10
  6361  29E8  3400               	retlw	0
  6362                           
  6363                           	psect	stringtext41
  6364  29E9                     __pstringtext41:	
  6365  29E9                     STR_38:	
  6366  29E9  3470               	retlw	112	;'p'
  6367  29EA  3461               	retlw	97	;'a'
  6368  29EB  3473               	retlw	115	;'s'
  6369  29EC  3473               	retlw	115	;'s'
  6370  29ED  3465               	retlw	101	;'e'
  6371  29EE  3464               	retlw	100	;'d'
  6372  29EF  340A               	retlw	10
  6373  29F0  3400               	retlw	0
  6374                           
  6375                           	psect	stringtext42
  6376  29F1                     __pstringtext42:	
  6377  29F1                     STR_7:	
  6378  29F1  3464               	retlw	100	;'d'
  6379  29F2  346F               	retlw	111	;'o'
  6380  29F3  344D               	retlw	77	;'M'
  6381  29F4  346F               	retlw	111	;'o'
  6382  29F5  3476               	retlw	118	;'v'
  6383  29F6  3465               	retlw	101	;'e'
  6384  29F7  340A               	retlw	10
  6385  29F8  3400               	retlw	0
  6386                           
  6387                           	psect	stringtext43
  6388  29F9                     __pstringtext43:	
  6389  29F9                     STR_40:	
  6390  29F9  346F               	retlw	111	;'o'
  6391  29FA  3470               	retlw	112	;'p'
  6392  29FB  3465               	retlw	101	;'e'
  6393  29FC  346E               	retlw	110	;'n'
  6394  29FD  3473               	retlw	115	;'s'
  6395  29FE  343A               	retlw	58	;':'
  6396  29FF  3420               	retlw	32	;' '
  6397  2A00  3400               	retlw	0
  6398                           
  6399                           	psect	stringtext44
  6400  2A01                     __pstringtext44:	
  6401  2A01                     STR_76:	
  6402  2A01  3464               	retlw	100	;'d'
  6403  2A02  346F               	retlw	111	;'o'
  6404  2A03  346D               	retlw	109	;'m'
  6405  2A04  346F               	retlw	111	;'o'
  6406  2A05  3476               	retlw	118	;'v'
  6407  2A06  3465               	retlw	101	;'e'
  6408  2A07  3400               	retlw	0
  6409                           
  6410                           	psect	stringtext45
  6411  2A08                     __pstringtext45:	
  6412  2A08                     STR_71:	
  6413  2A08  346C               	retlw	108	;'l'
  6414  2A09  3465               	retlw	101	;'e'
  6415  2A0A  3464               	retlw	100	;'d'
  6416  2A0B  3470               	retlw	112	;'p'
  6417  2A0C  3477               	retlw	119	;'w'
  6418  2A0D  3472               	retlw	114	;'r'
  6419  2A0E  3400               	retlw	0
  6420                           
  6421                           	psect	stringtext46
  6422  2A0F                     __pstringtext46:	
  6423  2A0F                     STR_73:	
  6424  2A0F  3467               	retlw	103	;'g'
  6425  2A10  3465               	retlw	101	;'e'
  6426  2A11  3474               	retlw	116	;'t'
  6427  2A12  3441               	retlw	65	;'A'
  6428  2A13  3400               	retlw	0
  6429                           
  6430                           	psect	stringtext47
  6431  2A14                     __pstringtext47:	
  6432  2A14                     STR_62:	
  6433  2A14  3473               	retlw	115	;'s'
  6434  2A15  3465               	retlw	101	;'e'
  6435  2A16  3474               	retlw	116	;'t'
  6436  2A17  3441               	retlw	65	;'A'
  6437  2A18  3400               	retlw	0
  6438                           
  6439                           	psect	stringtext48
  6440  2A19                     __pstringtext48:	
  6441  2A19                     STR_74:	
  6442  2A19  3467               	retlw	103	;'g'
  6443  2A1A  3465               	retlw	101	;'e'
  6444  2A1B  3474               	retlw	116	;'t'
  6445  2A1C  344D               	retlw	77	;'M'
  6446  2A1D  3400               	retlw	0
  6447                           
  6448                           	psect	stringtext49
  6449  2A1E                     __pstringtext49:	
  6450  2A1E                     STR_63:	
  6451  2A1E  3473               	retlw	115	;'s'
  6452  2A1F  3465               	retlw	101	;'e'
  6453  2A20  3474               	retlw	116	;'t'
  6454  2A21  344D               	retlw	77	;'M'
  6455  2A22  3400               	retlw	0
  6456                           
  6457                           	psect	stringtext50
  6458  2A23                     __pstringtext50:	
  6459  2A23                     STR_78:	
  6460  2A23  3470               	retlw	112	;'p'
  6461  2A24  3469               	retlw	105	;'i'
  6462  2A25  346E               	retlw	110	;'n'
  6463  2A26  3467               	retlw	103	;'g'
  6464  2A27  3400               	retlw	0
  6465                           
  6466                           	psect	stringtext51
  6467  2A28                     __pstringtext51:	
  6468  2A28                     STR_77:	
  6469  2A28  3463               	retlw	99	;'c'
  6470  2A29  346F               	retlw	111	;'o'
  6471  2A2A  346D               	retlw	109	;'m'
  6472  2A2B  346D               	retlw	109	;'m'
  6473  2A2C  3400               	retlw	0
  6474                           
  6475                           	psect	stringtext52
  6476  2A2D                     __pstringtext52:	
  6477  2A2D                     STR_58:	
  6478  2A2D  3472               	retlw	114	;'r'
  6479  2A2E  3465               	retlw	101	;'e'
  6480  2A2F  346C               	retlw	108	;'l'
  6481  2A30  3400               	retlw	0
  6482                           
  6483                           	psect	stringtext53
  6484  2A31                     __pstringtext53:	
  6485  2A31                     STR_59:	
  6486  2A31  3461               	retlw	97	;'a'
  6487  2A32  3462               	retlw	98	;'b'
  6488  2A33  3473               	retlw	115	;'s'
  6489  2A34  3400               	retlw	0
  6490                           
  6491                           	psect	stringtext54
  6492  2A35                     __pstringtext54:	
  6493  2A35                     STR_60:	
  6494  2A35  3470               	retlw	112	;'p'
  6495  2A36  346F               	retlw	111	;'o'
  6496  2A37  3473               	retlw	115	;'s'
  6497  2A38  3400               	retlw	0
  6498                           
  6499                           	psect	stringtext55
  6500  2A39                     __pstringtext55:	
  6501  2A39                     STR_15:	
  6502  2A39  3425               	retlw	37	;'%'
  6503  2A3A  3464               	retlw	100	;'d'
  6504  2A3B  340A               	retlw	10
  6505  2A3C  3400               	retlw	0
  6506                           
  6507                           	psect	stringtext56
  6508  2A3D                     __pstringtext56:	
  6509  2A3D                     STR_1:	
  6510  2A3D  3425               	retlw	37	;'%'
  6511  2A3E  3464               	retlw	100	;'d'
  6512  2A3F  3420               	retlw	32	;' '
  6513  2A40  3400               	retlw	0
  6514                           
  6515                           	psect	stringtext57
  6516  2A47                     __pstringtext57:	
  6517  2A47                     STR_8:	
  6518  2A47  3441               	retlw	65	;'A'
  6519  2A48  340A               	retlw	10
  6520  2A49  3400               	retlw	0
  6521                           
  6522                           	psect	stringtext58
  6523  2A4A                     __pstringtext58:	
  6524  2A4A                     STR_17:	
  6525  2A4A  3445               	retlw	69	;'E'
  6526  2A4B  340A               	retlw	10
  6527  2A4C  3400               	retlw	0
  6528                           
  6529                           	psect	stringtext59
  6530  2A4F                     __pstringtext59:	
  6531  2A4F                     STR_64:	
  6532  2A4F  347A               	retlw	122	;'z'
  6533  2A50  3400               	retlw	0
  6534                           
  6535                           	psect	stringtext60
  6536  2A51                     __pstringtext60:	
  6537  2A51                     STR_35:	
  6538  2A51  344E               	retlw	78	;'N'
  6539  2A52  3400               	retlw	0
  6540                           
  6541                           	psect	stringtext61
  6542  2A53                     __pstringtext61:	
  6543  2A53                     STR_33:	
  6544  2A53  3452               	retlw	82	;'R'
  6545  2A54  3400               	retlw	0
  6546                           
  6547                           	psect	stringtext62
  6548  0000                     __pstringtext62:	
  6549  283B                     
  6550                           ; #config settings
  6551  0000                     
  6552                           	psect	cinit
  6553  0052                     start_initialization:	
  6554  0052                     __initialization:	
  6555                           
  6556                           ; Initialize objects allocated to BANK0
  6557  0052  30A2               	movlw	low __pidataBANK0
  6558  0053  0084               	movwf	4
  6559  0054  30A3               	movlw	(high __pidataBANK0)| (0+128)
  6560  0055  0085               	movwf	5
  6561  0056  305A               	movlw	low __pdataBANK0
  6562  0057  0086               	movwf	6
  6563  0058  3000               	movlw	high __pdataBANK0
  6564  0059  0087               	movwf	7
  6565  005A  3004               	movlw	4
  6566  005B  31A3  23E8  3180   	fcall	init_ram
  6567                           
  6568                           ; Initialize objects allocated to BANK1
  6569  005E  30EE               	movlw	low __pidataBANK1
  6570  005F  0084               	movwf	4
  6571  0060  30A3               	movlw	(high __pidataBANK1)| (0+128)
  6572  0061  0085               	movwf	5
  6573  0062  30EA               	movlw	low __pdataBANK1
  6574  0063  0086               	movwf	6
  6575  0064  3000               	movlw	high __pdataBANK1
  6576  0065  0087               	movwf	7
  6577  0066  3006               	movlw	6
  6578  0067  31A3  23E8  3180   	fcall	init_ram
  6579                           
  6580                           ; Initialize objects allocated to BANK2
  6581  006A  0022               	movlb	2	; select bank2
  6582  006B  3180  2002  3180   	fcall	__pidataBANK2	;fetch initializer
  6583  006E  00EA               	movwf	__pdataBANK2& (0+127)
  6584  006F  3180  2003  3180   	fcall	__pidataBANK2+1	;fetch initializer
  6585  0072  00EB               	movwf	(__pdataBANK2+1)& (0+127)
  6586                           
  6587                           ; Initialize objects allocated to BANK4
  6588  0073  300E               	movlw	low __pidataBANK4
  6589  0074  0084               	movwf	4
  6590  0075  30A7               	movlw	(high __pidataBANK4)| (0+128)
  6591  0076  0085               	movwf	5
  6592  0077  3050               	movlw	low __pdataBANK4
  6593  0078  0086               	movwf	6
  6594  0079  3002               	movlw	high __pdataBANK4
  6595  007A  0087               	movwf	7
  6596  007B  3020               	movlw	32
  6597  007C  31A3  23E8  3180   	fcall	init_ram
  6598                           
  6599                           ; Clear objects allocated to COMMON
  6600  007F  01FD               	clrf	__pbssCOMMON& (0+127)
  6601                           
  6602                           ; Clear objects allocated to BANK0
  6603  0080  304E               	movlw	low __pbssBANK0
  6604  0081  0084               	movwf	4
  6605  0082  3000               	movlw	high __pbssBANK0
  6606  0083  0085               	movwf	5
  6607  0084  300C               	movlw	12
  6608  0085  31A3  23E2  3180   	fcall	clear_ram0
  6609                           
  6610                           ; Clear objects allocated to BANK1
  6611  0088  30D8               	movlw	low __pbssBANK1
  6612  0089  0084               	movwf	4
  6613  008A  3000               	movlw	high __pbssBANK1
  6614  008B  0085               	movwf	5
  6615  008C  3012               	movlw	18
  6616  008D  31A3  23E2  3180   	fcall	clear_ram0
  6617                           
  6618                           ; Clear objects allocated to BANK2
  6619  0090  3020               	movlw	low __pbssBANK2
  6620  0091  0084               	movwf	4
  6621  0092  3001               	movlw	high __pbssBANK2
  6622  0093  0085               	movwf	5
  6623  0094  3046               	movlw	70
  6624  0095  31A3  23E2  3180   	fcall	clear_ram0
  6625                           
  6626                           ; Clear objects allocated to BANK3
  6627  0098  30A0               	movlw	low __pbssBANK3
  6628  0099  0084               	movwf	4
  6629  009A  3001               	movlw	high __pbssBANK3
  6630  009B  0085               	movwf	5
  6631  009C  3039               	movlw	57
  6632  009D  31A3  23E2  3180   	fcall	clear_ram0
  6633                           
  6634                           ; Clear objects allocated to BANK4
  6635  00A0  3020               	movlw	low __pbssBANK4
  6636  00A1  0084               	movwf	4
  6637  00A2  3002               	movlw	high __pbssBANK4
  6638  00A3  0085               	movwf	5
  6639  00A4  3030               	movlw	48
  6640  00A5  31A3  23E2         	fcall	clear_ram0
  6641  00A7                     end_of_initialization:	
  6642                           ;End of C runtime variable initialization code
  6643                           
  6644  00A7                     __end_of__initialization:	
  6645  00A7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6646  00A8  0020               	movlb	0
  6647  00A9  3189  2989         	ljmp	_main	;jump to C main() function
  6648                           
  6649                           	psect	bssCOMMON
  6650  007D                     __pbssCOMMON:	
  6651  007D                     _eusartTxHead:	
  6652  007D                     	ds	1
  6653                           
  6654                           	psect	bssBANK0
  6655  004E                     __pbssBANK0:	
  6656  004E                     _moveMask:	
  6657  004E                     	ds	4
  6658  0052                     _readIdx:	
  6659  0052                     	ds	2
  6660  0054                     strtok@sp:	
  6661  0054                     	ds	1
  6662  0055                     _motionType:	
  6663  0055                     	ds	1
  6664  0056                     _eusartRxCount:	
  6665  0056                     	ds	1
  6666  0057                     _eusartRxTail:	
  6667  0057                     	ds	1
  6668  0058                     _eusartRxHead:	
  6669  0058                     	ds	1
  6670  0059                     _eusartTxTail:	
  6671  0059                     	ds	1
  6672                           
  6673                           	psect	dataBANK0
  6674  005A                     __pdataBANK0:	
  6675  005A                     _demoLong:	
  6676  005A                     	ds	4
  6677                           
  6678                           	psect	bssBANK1
  6679  00D8                     __pbssBANK1:	
  6680  00D8                     _activeMask:	
  6681  00D8                     	ds	4
  6682  00DC                     _moveVector_downs:	
  6683  00DC                     	ds	4
  6684  00E0                     _moveVector_ups:	
  6685  00E0                     	ds	4
  6686  00E4                     _absCommand:	
  6687  00E4                     	ds	2
  6688  00E6                     _remainingSteps:	
  6689  00E6                     	ds	2
  6690  00E8                     _i2c1_driver_busCollisionISR:	
  6691  00E8                     	ds	2
  6692                           
  6693                           	psect	dataBANK1
  6694  00EA                     __pdataBANK1:	
  6695  00EA                     _piezo_on_time_ms:	
  6696  00EA                     	ds	2
  6697  00EC                     _heater_post_time_ms:	
  6698  00EC                     	ds	2
  6699  00EE                     _heater_pre_time_ms:	
  6700  00EE                     	ds	2
  6701                           
  6702                           	psect	bssBANK2
  6703  0120                     __pbssBANK2:	
  6704  0120                     _i2c_status:	
  6705  0120                     	ds	30
  6706  013E                     _demoHeaterToggle_bot:	
  6707  013E                     	ds	4
  6708  0142                     _demoHeaterToggle_top:	
  6709  0142                     	ds	4
  6710  0146                     _LED_configReg_bot:	
  6711  0146                     	ds	4
  6712  014A                     _LED_configReg_top:	
  6713  014A                     	ds	4
  6714  014E                     _second_bottom:	
  6715  014E                     	ds	4
  6716  0152                     _first_top:	
  6717  0152                     	ds	4
  6718  0156                     _first_bottom:	
  6719  0156                     	ds	4
  6720  015A                     _second_top:	
  6721  015A                     	ds	4
  6722  015E                     _errno:	
  6723  015E                     	ds	2
  6724  0160                     _cmdRead:	
  6725  0160                     	ds	2
  6726  0162                     _errorOut:	
  6727  0162                     	ds	2
  6728  0164                     _i2c1_driver_i2cISR:	
  6729  0164                     	ds	2
  6730                           
  6731                           	psect	dataBANK2
  6732  016A                     __pdataBANK2:	
  6733  016A                     _drv_peak_val:	
  6734  016A                     	ds	2
  6735                           
  6736                           	psect	bssBANK3
  6737  01A0                     __pbssBANK3:	
  6738  01A0                     _eusartRxBuffer:	
  6739  01A0                     	ds	8
  6740  01A8                     _eusartTxBuffer:	
  6741  01A8                     	ds	8
  6742  01B0                     _cmd_struct:	
  6743  01B0                     	ds	21
  6744  01C5                     _readdata:	
  6745  01C5                     	ds	20
  6746                           
  6747                           	psect	bssBANK4
  6748  0220                     __pbssBANK4:	
  6749  0220                     _currentPositions_steps:	
  6750  0220                     	ds	48
  6751                           
  6752                           	psect	dataBANK4
  6753  0250                     __pdataBANK4:	
  6754  0250                     _fsmStateTable:	
  6755  0250                     	ds	32
  6756                           
  6757                           	psect	inittext
  6758  23E8                     init_ram:	
  6759  23E8  00FE               	movwf	126
  6760  23E9                     initloop:	
  6761  23E9  0012               	moviw fsr0++
  6762  23EA  001E               	movwi fsr1++
  6763  23EB  0BFE               	decfsz	126,f
  6764  23EC  2BE9               	goto	initloop
  6765  23ED  3400               	retlw	0
  6766                           
  6767                           	psect	clrtext
  6768  23E2                     clear_ram0:	
  6769                           ;	Called with FSR0 containing the base address, and
  6770                           ;	WREG with the size to clear
  6771                           
  6772  23E2  0064               	clrwdt	;clear the watchdog before getting into this loop
  6773  23E3                     clrloop0:	
  6774  23E3  0180               	clrf	0	;clear RAM location pointed to by FSR
  6775  23E4  3101               	addfsr 0,1
  6776  23E5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6777  23E6  2BE3               	goto	clrloop0	;have we reached the end yet?
  6778  23E7  3400               	retlw	0	;all done for this memory range, return
  6779                           
  6780                           	psect	cstackBANK5
  6781  02A0                     __pcstackBANK5:	
  6782  02A0                     ??_doAbsMove:	
  6783                           
  6784                           ; 1 bytes @ 0x0
  6785  02A0                     	ds	24
  6786                           
  6787                           	psect	cstackBANK1
  6788  00A0                     __pcstackBANK1:	
  6789  00A0                     ??_LED_setBrightnessRange:	
  6790  00A0                     ?_printf:	
  6791                           ; 1 bytes @ 0x0
  6792                           
  6793  00A0                     ___ftmul@exp:	
  6794                           ; 2 bytes @ 0x0
  6795                           
  6796  00A0                     printf@f:	
  6797                           ; 1 bytes @ 0x0
  6798                           
  6799  00A0                     LEDsPwr@pwrAll:	
  6800                           ; 2 bytes @ 0x0
  6801                           
  6802                           
  6803                           ; 4 bytes @ 0x0
  6804  00A0                     	ds	1
  6805  00A1                     ___ftmul@f3_as_product:	
  6806                           
  6807                           ; 3 bytes @ 0x1
  6808  00A1                     	ds	3
  6809  00A4                     ___ftmul@cntr:	
  6810                           
  6811                           ; 1 bytes @ 0x4
  6812  00A4                     	ds	1
  6813  00A5                     ___ftmul@sign:	
  6814                           
  6815                           ; 1 bytes @ 0x5
  6816  00A5                     	ds	1
  6817  00A6                     ?___ftadd:	
  6818  00A6                     ___ftadd@f1:	
  6819                           ; 3 bytes @ 0x6
  6820                           
  6821                           
  6822                           ; 3 bytes @ 0x6
  6823  00A6                     	ds	2
  6824  00A8                     ??_printf:	
  6825                           
  6826                           ; 1 bytes @ 0x8
  6827  00A8                     	ds	1
  6828  00A9                     ___ftadd@f2:	
  6829                           
  6830                           ; 3 bytes @ 0x9
  6831  00A9                     	ds	3
  6832  00AC                     ___ftadd@sign:	
  6833                           
  6834                           ; 1 bytes @ 0xC
  6835  00AC                     	ds	1
  6836  00AD                     ___ftadd@exp2:	
  6837                           
  6838                           ; 1 bytes @ 0xD
  6839  00AD                     	ds	1
  6840  00AE                     ___ftadd@exp1:	
  6841  00AE                     printf@prec:	
  6842                           ; 1 bytes @ 0xE
  6843                           
  6844                           
  6845                           ; 2 bytes @ 0xE
  6846  00AE                     	ds	1
  6847  00AF                     ?___fttol:	
  6848  00AF                     ___fttol@f1:	
  6849                           ; 4 bytes @ 0xF
  6850                           
  6851                           
  6852                           ; 3 bytes @ 0xF
  6853  00AF                     	ds	1
  6854  00B0                     printf@val:	
  6855                           
  6856                           ; 4 bytes @ 0x10
  6857  00B0                     	ds	3
  6858  00B3                     ??___fttol:	
  6859                           
  6860                           ; 1 bytes @ 0x13
  6861  00B3                     	ds	1
  6862  00B4                     printf@flag:	
  6863                           
  6864                           ; 1 bytes @ 0x14
  6865  00B4                     	ds	1
  6866  00B5                     printf@ap:	
  6867                           
  6868                           ; 1 bytes @ 0x15
  6869  00B5                     	ds	1
  6870  00B6                     printf@c:	
  6871                           
  6872                           ; 1 bytes @ 0x16
  6873  00B6                     	ds	1
  6874  00B7                     ??_LED_getData:	
  6875  00B7                     ??_drv_reset:	
  6876                           ; 1 bytes @ 0x17
  6877                           
  6878  00B7                     ?_LED_test_openshort:	
  6879                           ; 1 bytes @ 0x17
  6880                           
  6881  00B7                     ??_zeroPosition:	
  6882                           ; 1 bytes @ 0x17
  6883                           
  6884  00B7                     ??_setActive:	
  6885                           ; 1 bytes @ 0x17
  6886                           
  6887  00B7                     ??_setMoveMask:	
  6888                           ; 1 bytes @ 0x17
  6889                           
  6890  00B7                     ??_getActive:	
  6891                           ; 1 bytes @ 0x17
  6892                           
  6893  00B7                     ??_getMoveMask:	
  6894                           ; 1 bytes @ 0x17
  6895                           
  6896  00B7                     ?_setDrvGain:	
  6897                           ; 1 bytes @ 0x17
  6898                           
  6899  00B7                     ?_setLEDBrightnessRange:	
  6900                           ; 2 bytes @ 0x17
  6901                           
  6902  00B7                     ?_setLEDPwr:	
  6903                           ; 2 bytes @ 0x17
  6904                           
  6905  00B7                     ?_setHeaterToggle:	
  6906                           ; 2 bytes @ 0x17
  6907                           
  6908  00B7                     drv_read@reg:	
  6909                           ; 2 bytes @ 0x17
  6910                           
  6911  00B7                     ___fttol@sign1:	
  6912                           ; 1 bytes @ 0x17
  6913                           
  6914  00B7                     LED_test_openshort@type:	
  6915                           ; 1 bytes @ 0x17
  6916                           
  6917  00B7                     setDrvGain@gain:	
  6918                           ; 2 bytes @ 0x17
  6919                           
  6920  00B7                     setLEDBrightnessRange@r:	
  6921                           ; 2 bytes @ 0x17
  6922                           
  6923  00B7                     setLEDPwr@pwr:	
  6924                           ; 2 bytes @ 0x17
  6925                           
  6926  00B7                     setHeaterToggle@num:	
  6927                           ; 2 bytes @ 0x17
  6928                           
  6929                           
  6930                           ; 2 bytes @ 0x17
  6931  00B7                     	ds	1
  6932  00B8                     ?_drv_init:	
  6933  00B8                     drv_read@buff:	
  6934                           ; 1 bytes @ 0x18
  6935                           
  6936  00B8                     drv_init@output_gain:	
  6937                           ; 1 bytes @ 0x18
  6938                           
  6939  00B8                     ___fttol@lval:	
  6940                           ; 2 bytes @ 0x18
  6941                           
  6942                           
  6943                           ; 4 bytes @ 0x18
  6944  00B8                     	ds	1
  6945  00B9                     ??_setDrvGain:	
  6946  00B9                     fifo_check@reply:	
  6947                           ; 1 bytes @ 0x19
  6948                           
  6949  00B9                     LED_test_openshort@topOrBottom:	
  6950                           ; 1 bytes @ 0x19
  6951                           
  6952  00B9                     setLEDBrightnessRange@tOB:	
  6953                           ; 2 bytes @ 0x19
  6954                           
  6955  00B9                     setLEDPwr@topOrBottom:	
  6956                           ; 2 bytes @ 0x19
  6957                           
  6958  00B9                     setHeaterToggle@topOrB:	
  6959                           ; 2 bytes @ 0x19
  6960                           
  6961                           
  6962                           ; 2 bytes @ 0x19
  6963  00B9                     	ds	1
  6964  00BA                     ?_drv_write_DC:	
  6965  00BA                     setDrvGain@setGain:	
  6966                           ; 1 bytes @ 0x1A
  6967                           
  6968  00BA                     drv_init@idle_timeout:	
  6969                           ; 2 bytes @ 0x1A
  6970                           
  6971  00BA                     drv_write_DC@val:	
  6972                           ; 2 bytes @ 0x1A
  6973                           
  6974                           
  6975                           ; 2 bytes @ 0x1A
  6976  00BA                     	ds	1
  6977  00BB                     ??_LED_test_openshort:	
  6978  00BB                     ??_setHeaterToggle:	
  6979                           ; 1 bytes @ 0x1B
  6980                           
  6981                           
  6982                           ; 1 bytes @ 0x1B
  6983  00BB                     	ds	1
  6984  00BC                     ??_drv_init:	
  6985  00BC                     ___fttol@exp1:	
  6986                           ; 1 bytes @ 0x1C
  6987                           
  6988  00BC                     drv_write_DC@duration_ms:	
  6989                           ; 1 bytes @ 0x1C
  6990                           
  6991  00BC                     LED_test_openshort@readData:	
  6992                           ; 2 bytes @ 0x1C
  6993                           
  6994                           
  6995                           ; 4 bytes @ 0x1C
  6996  00BC                     	ds	1
  6997  00BD                     ??_main_initialize:	
  6998  00BD                     ?_setDrvPiezoOnTime:	
  6999                           ; 1 bytes @ 0x1D
  7000                           
  7001  00BD                     ?_setHeaterPreTime:	
  7002                           ; 2 bytes @ 0x1D
  7003                           
  7004  00BD                     ?_setHeaterPostTime:	
  7005                           ; 2 bytes @ 0x1D
  7006                           
  7007  00BD                     setDrvPiezoOnTime@t:	
  7008                           ; 2 bytes @ 0x1D
  7009                           
  7010  00BD                     setHeaterPreTime@t:	
  7011                           ; 2 bytes @ 0x1D
  7012                           
  7013  00BD                     setHeaterPostTime@t:	
  7014                           ; 2 bytes @ 0x1D
  7015                           
  7016  00BD                     LED_getData@readData:	
  7017                           ; 2 bytes @ 0x1D
  7018                           
  7019                           
  7020                           ; 4 bytes @ 0x1D
  7021  00BD                     	ds	1
  7022  00BE                     ??_drv_write_DC:	
  7023                           
  7024                           ; 1 bytes @ 0x1E
  7025  00BE                     	ds	1
  7026  00BF                     ??_setDrvPiezoOnTime:	
  7027  00BF                     ??_setHeaterPreTime:	
  7028                           ; 1 bytes @ 0x1F
  7029                           
  7030  00BF                     drv_write_DC@i:	
  7031                           ; 1 bytes @ 0x1F
  7032                           
  7033                           
  7034                           ; 2 bytes @ 0x1F
  7035  00BF                     	ds	1
  7036  00C0                     LED_test_openshort@j:	
  7037                           
  7038                           ; 2 bytes @ 0x20
  7039  00C0                     	ds	1
  7040  00C1                     ?_doMove:	
  7041  00C1                     LED_getData@j:	
  7042                           ; 2 bytes @ 0x21
  7043                           
  7044                           
  7045                           ; 2 bytes @ 0x21
  7046  00C1                     	ds	2
  7047  00C3                     ??_doMove:	
  7048  00C3                     ?_LED_readConfig:	
  7049                           ; 1 bytes @ 0x23
  7050                           
  7051  00C3                     LED_readConfig@topOrBottom:	
  7052                           ; 4 bytes @ 0x23
  7053                           
  7054                           
  7055                           ; 2 bytes @ 0x23
  7056  00C3                     	ds	1
  7057  00C4                     doMove@t:	
  7058                           
  7059                           ; 2 bytes @ 0x24
  7060  00C4                     	ds	2
  7061  00C6                     doMove@t_1560:	
  7062                           
  7063                           ; 2 bytes @ 0x26
  7064  00C6                     	ds	1
  7065  00C7                     ?_LED_testComm:	
  7066  00C7                     LED_testComm@topOrBottom:	
  7067                           ; 2 bytes @ 0x27
  7068                           
  7069                           
  7070                           ; 2 bytes @ 0x27
  7071  00C7                     	ds	1
  7072  00C8                     ??_doRelMove:	
  7073  00C8                     doAbsMove@allThere:	
  7074                           ; 1 bytes @ 0x28
  7075                           
  7076                           
  7077                           ; 2 bytes @ 0x28
  7078  00C8                     	ds	1
  7079  00C9                     ??_LED_testComm:	
  7080                           
  7081                           ; 1 bytes @ 0x29
  7082  00C9                     	ds	1
  7083  00CA                     doAbsMove@i:	
  7084                           
  7085                           ; 2 bytes @ 0x2A
  7086  00CA                     	ds	1
  7087  00CB                     LED_testComm@readResult:	
  7088                           
  7089                           ; 2 bytes @ 0x2B
  7090  00CB                     	ds	1
  7091  00CC                     doAbsMove@i_1577:	
  7092                           
  7093                           ; 2 bytes @ 0x2C
  7094  00CC                     	ds	1
  7095  00CD                     LED_testComm@oldConfigReg:	
  7096                           
  7097                           ; 4 bytes @ 0x2D
  7098  00CD                     	ds	1
  7099  00CE                     doAbsMove@i_1575:	
  7100                           
  7101                           ; 2 bytes @ 0x2E
  7102  00CE                     	ds	1
  7103  00CF                     doRelMove@j:	
  7104                           
  7105                           ; 2 bytes @ 0x2F
  7106  00CF                     	ds	2
  7107  00D1                     ?_commCheck:	
  7108                           
  7109                           ; 2 bytes @ 0x31
  7110  00D1                     	ds	2
  7111  00D3                     ??_commCheck:	
  7112                           
  7113                           ; 1 bytes @ 0x33
  7114  00D3                     	ds	1
  7115  00D4                     ??_execCmd:	
  7116                           
  7117                           ; 1 bytes @ 0x34
  7118  00D4                     	ds	2
  7119  00D6                     execCmd@s:	
  7120                           
  7121                           ; 1 bytes @ 0x36
  7122  00D6                     	ds	1
  7123  00D7                     ??_main:	
  7124                           
  7125                           ; 1 bytes @ 0x37
  7126  00D7                     	ds	1
  7127                           
  7128                           	psect	cstackCOMMON
  7129  0070                     __pcstackCOMMON:	
  7130  0070                     ?_fifo_check:	
  7131  0070                     ?_isdigit:	
  7132                           ; 1 bit 
  7133                           
  7134  0070                     ?_mssp1_IRQisEnabled:	
  7135                           ; 1 bit 
  7136                           
  7137  0070                     ?_i2c1_driver_open:	
  7138                           ; 1 bit 
  7139                           
  7140  0070                     ?_i2c1_driver_isNACK:	
  7141                           ; 1 bit 
  7142                           
  7143  0070                     ?i1_i2c1_driver_isNACK:	
  7144                           ; 1 bit 
  7145                           
  7146  0070                     ?_PMD_Initialize:	
  7147                           ; 1 bit 
  7148                           
  7149  0070                     ?_PIN_MANAGER_Initialize:	
  7150                           ; 1 bytes @ 0x0
  7151                           
  7152  0070                     ?_OSCILLATOR_Initialize:	
  7153                           ; 1 bytes @ 0x0
  7154                           
  7155  0070                     ?_WDT_Initialize:	
  7156                           ; 1 bytes @ 0x0
  7157                           
  7158  0070                     ?_TMR2_Initialize:	
  7159                           ; 1 bytes @ 0x0
  7160                           
  7161  0070                     ?_TMR0_Initialize:	
  7162                           ; 1 bytes @ 0x0
  7163                           
  7164  0070                     ?_EUSART_Initialize:	
  7165                           ; 1 bytes @ 0x0
  7166                           
  7167  0070                     ?_TMR0_ISR:	
  7168                           ; 1 bytes @ 0x0
  7169                           
  7170  0070                     ?_TMR2_ISR:	
  7171                           ; 1 bytes @ 0x0
  7172                           
  7173  0070                     ?_EUSART_Receive_ISR:	
  7174                           ; 1 bytes @ 0x0
  7175                           
  7176  0070                     ??_EUSART_Receive_ISR:	
  7177                           ; 1 bytes @ 0x0
  7178                           
  7179  0070                     ?_EUSART_Transmit_ISR:	
  7180                           ; 1 bytes @ 0x0
  7181                           
  7182  0070                     ??_EUSART_Transmit_ISR:	
  7183                           ; 1 bytes @ 0x0
  7184                           
  7185  0070                     ?_i2c_busCollisionISR:	
  7186                           ; 1 bytes @ 0x0
  7187                           
  7188  0070                     ??_i2c_busCollisionISR:	
  7189                           ; 1 bytes @ 0x0
  7190                           
  7191  0070                     ?_i2c_ISR:	
  7192                           ; 1 bytes @ 0x0
  7193                           
  7194  0070                     ?_i2c_poller:	
  7195                           ; 1 bytes @ 0x0
  7196                           
  7197  0070                     ?_TMR0_DefaultInterruptHandler:	
  7198                           ; 1 bytes @ 0x0
  7199                           
  7200  0070                     ?_TMR2_DefaultInterruptHandler:	
  7201                           ; 1 bytes @ 0x0
  7202                           
  7203  0070                     ?_main_initialize:	
  7204                           ; 1 bytes @ 0x0
  7205                           
  7206  0070                     ?_doRelMove:	
  7207                           ; 1 bytes @ 0x0
  7208                           
  7209  0070                     ?_doAbsMove:	
  7210                           ; 1 bytes @ 0x0
  7211                           
  7212  0070                     ?_calcHeaterPins:	
  7213                           ; 1 bytes @ 0x0
  7214                           
  7215  0070                     ?_drv_reset:	
  7216                           ; 1 bytes @ 0x0
  7217                           
  7218  0070                     ?_toupper:	
  7219                           ; 1 bytes @ 0x0
  7220                           
  7221  0070                     ?_SYSTEM_Initialize:	
  7222                           ; 1 bytes @ 0x0
  7223                           
  7224  0070                     ?_INTERRUPT_InterruptManager:	
  7225                           ; 1 bytes @ 0x0
  7226                           
  7227  0070                     ?_EUSART_Read:	
  7228                           ; 1 bytes @ 0x0
  7229                           
  7230  0070                     ?_EUSART_Write:	
  7231                           ; 1 bytes @ 0x0
  7232                           
  7233  0070                     ?_putch:	
  7234                           ; 1 bytes @ 0x0
  7235                           
  7236  0070                     ?_mssp1_clearIRQ:	
  7237                           ; 1 bytes @ 0x0
  7238                           
  7239  0070                     ?_mssp1_setIRQ:	
  7240                           ; 1 bytes @ 0x0
  7241                           
  7242  0070                     ?_mssp1_waitForEvent:	
  7243                           ; 1 bytes @ 0x0
  7244                           
  7245  0070                     ?_i2c1_driver_resetBus:	
  7246                           ; 1 bytes @ 0x0
  7247                           
  7248  0070                     ?_i2c1_driver_start:	
  7249                           ; 1 bytes @ 0x0
  7250                           
  7251  0070                     ?_i2c1_driver_restart:	
  7252                           ; 1 bytes @ 0x0
  7253                           
  7254  0070                     ?_i2c1_driver_stop:	
  7255                           ; 1 bytes @ 0x0
  7256                           
  7257  0070                     ?_i2c1_driver_startRX:	
  7258                           ; 1 bytes @ 0x0
  7259                           
  7260  0070                     ?_i2c1_driver_getRXData:	
  7261                           ; 1 bytes @ 0x0
  7262                           
  7263  0070                     ?_i2c1_driver_TXData:	
  7264                           ; 1 bytes @ 0x0
  7265                           
  7266  0070                     ?_i2c1_driver_sendACK:	
  7267                           ; 1 bytes @ 0x0
  7268                           
  7269  0070                     ?_i2c1_driver_sendNACK:	
  7270                           ; 1 bytes @ 0x0
  7271                           
  7272  0070                     ?_i2c1_driver_clearBusCollision:	
  7273                           ; 1 bytes @ 0x0
  7274                           
  7275  0070                     ??_i2c1_driver_clearBusCollision:	
  7276                           ; 1 bytes @ 0x0
  7277                           
  7278  0070                     ?_i2c_open:	
  7279                           ; 1 bytes @ 0x0
  7280                           
  7281  0070                     ?_i2c_setAddress:	
  7282                           ; 1 bytes @ 0x0
  7283                           
  7284  0070                     ?_i2c_masterOperation:	
  7285                           ; 1 bytes @ 0x0
  7286                           
  7287  0070                     ?_do_I2C_RESET:	
  7288                           ; 1 bytes @ 0x0
  7289                           
  7290  0070                     ?_do_I2C_IDLE:	
  7291                           ; 1 bytes @ 0x0
  7292                           
  7293  0070                     ?_do_I2C_SEND_RESTART_READ:	
  7294                           ; 1 bytes @ 0x0
  7295                           
  7296  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  7297                           ; 1 bytes @ 0x0
  7298                           
  7299  0070                     ?_do_I2C_SEND_RESTART:	
  7300                           ; 1 bytes @ 0x0
  7301                           
  7302  0070                     ?_do_I2C_SEND_STOP:	
  7303                           ; 1 bytes @ 0x0
  7304                           
  7305  0070                     ?_do_I2C_SEND_ADR_READ:	
  7306                           ; 1 bytes @ 0x0
  7307                           
  7308  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  7309                           ; 1 bytes @ 0x0
  7310                           
  7311  0070                     ?_do_I2C_RCEN:	
  7312                           ; 1 bytes @ 0x0
  7313                           
  7314  0070                     ?_do_I2C_DO_ACK:	
  7315                           ; 1 bytes @ 0x0
  7316                           
  7317  0070                     ?_do_I2C_DO_NACK_STOP:	
  7318                           ; 1 bytes @ 0x0
  7319                           
  7320  0070                     ?_do_I2C_DO_NACK_RESTART:	
  7321                           ; 1 bytes @ 0x0
  7322                           
  7323  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  7324                           ; 1 bytes @ 0x0
  7325                           
  7326  0070                     ?_do_I2C_TX:	
  7327                           ; 1 bytes @ 0x0
  7328                           
  7329  0070                     ?_do_I2C_RX:	
  7330                           ; 1 bytes @ 0x0
  7331                           
  7332  0070                     ?_do_I2C_TX_EMPTY:	
  7333                           ; 1 bytes @ 0x0
  7334                           
  7335  0070                     ?_TMR0_StartTimer:	
  7336                           ; 1 bytes @ 0x0
  7337                           
  7338  0070                     ?_TMR0_StopTimer:	
  7339                           ; 1 bytes @ 0x0
  7340                           
  7341  0070                     ??_TMR0_StopTimer:	
  7342                           ; 1 bytes @ 0x0
  7343                           
  7344  0070                     ?_TMR0_Write8bitTimer:	
  7345                           ; 1 bytes @ 0x0
  7346                           
  7347  0070                     ??_TMR0_Write8bitTimer:	
  7348                           ; 1 bytes @ 0x0
  7349                           
  7350  0070                     ?_TMR0_Load8bitPeriod:	
  7351                           ; 1 bytes @ 0x0
  7352                           
  7353  0070                     ?_TMR2_StartTimer:	
  7354                           ; 1 bytes @ 0x0
  7355                           
  7356  0070                     ?_TMR2_StopTimer:	
  7357                           ; 1 bytes @ 0x0
  7358                           
  7359  0070                     ??_TMR2_StopTimer:	
  7360                           ; 1 bytes @ 0x0
  7361                           
  7362  0070                     ?_TMR2_WriteTimer:	
  7363                           ; 1 bytes @ 0x0
  7364                           
  7365  0070                     ??_TMR2_WriteTimer:	
  7366                           ; 1 bytes @ 0x0
  7367                           
  7368  0070                     ?_TMR2_LoadPeriodRegister:	
  7369                           ; 1 bytes @ 0x0
  7370                           
  7371  0070                     ?_main:	
  7372                           ; 1 bytes @ 0x0
  7373                           
  7374  0070                     ?i1_send_last_2bytes_IK:	
  7375                           ; 1 bytes @ 0x0
  7376                           
  7377  0070                     ?i1_send_2bytes_latchless_IK:	
  7378                           ; 1 bytes @ 0x0
  7379                           
  7380  0070                     ?i1_mssp1_clearIRQ:	
  7381                           ; 1 bytes @ 0x0
  7382                           
  7383  0070                     ??i1_mssp1_clearIRQ:	
  7384                           ; 1 bytes @ 0x0
  7385                           
  7386  0070                     ?i1_mssp1_setIRQ:	
  7387                           ; 1 bytes @ 0x0
  7388                           
  7389  0070                     ??i1_mssp1_setIRQ:	
  7390                           ; 1 bytes @ 0x0
  7391                           
  7392  0070                     ?i1_i2c1_driver_resetBus:	
  7393                           ; 1 bytes @ 0x0
  7394                           
  7395  0070                     ??i1_i2c1_driver_resetBus:	
  7396                           ; 1 bytes @ 0x0
  7397                           
  7398  0070                     ?i1_i2c1_driver_restart:	
  7399                           ; 1 bytes @ 0x0
  7400                           
  7401  0070                     ??i1_i2c1_driver_restart:	
  7402                           ; 1 bytes @ 0x0
  7403                           
  7404  0070                     ?i1_i2c1_driver_stop:	
  7405                           ; 1 bytes @ 0x0
  7406                           
  7407  0070                     ??i1_i2c1_driver_stop:	
  7408                           ; 1 bytes @ 0x0
  7409                           
  7410  0070                     ??i1_i2c1_driver_isNACK:	
  7411                           ; 1 bytes @ 0x0
  7412                           
  7413  0070                     ?i1_i2c1_driver_startRX:	
  7414                           ; 1 bytes @ 0x0
  7415                           
  7416  0070                     ??i1_i2c1_driver_startRX:	
  7417                           ; 1 bytes @ 0x0
  7418                           
  7419  0070                     ?i1_i2c1_driver_getRXData:	
  7420                           ; 1 bytes @ 0x0
  7421                           
  7422  0070                     ??i1_i2c1_driver_getRXData:	
  7423                           ; 1 bytes @ 0x0
  7424                           
  7425  0070                     ?i1_i2c1_driver_TXData:	
  7426                           ; 1 bytes @ 0x0
  7427                           
  7428  0070                     ??i1_i2c1_driver_TXData:	
  7429                           ; 1 bytes @ 0x0
  7430                           
  7431  0070                     ?i1_i2c1_driver_sendACK:	
  7432                           ; 1 bytes @ 0x0
  7433                           
  7434  0070                     ??i1_i2c1_driver_sendACK:	
  7435                           ; 1 bytes @ 0x0
  7436                           
  7437  0070                     ?i1_i2c1_driver_sendNACK:	
  7438                           ; 1 bytes @ 0x0
  7439                           
  7440  0070                     ??i1_i2c1_driver_sendNACK:	
  7441                           ; 1 bytes @ 0x0
  7442                           
  7443  0070                     ?i1_do_I2C_RESET:	
  7444                           ; 1 bytes @ 0x0
  7445                           
  7446  0070                     ??i1_do_I2C_RESET:	
  7447                           ; 1 bytes @ 0x0
  7448                           
  7449  0070                     ?i1_do_I2C_IDLE:	
  7450                           ; 1 bytes @ 0x0
  7451                           
  7452  0070                     ??i1_do_I2C_IDLE:	
  7453                           ; 1 bytes @ 0x0
  7454                           
  7455  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  7456                           ; 1 bytes @ 0x0
  7457                           
  7458  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  7459                           ; 1 bytes @ 0x0
  7460                           
  7461  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  7462                           ; 1 bytes @ 0x0
  7463                           
  7464  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  7465                           ; 1 bytes @ 0x0
  7466                           
  7467  0070                     ?i1_do_I2C_SEND_RESTART:	
  7468                           ; 1 bytes @ 0x0
  7469                           
  7470  0070                     ??i1_do_I2C_SEND_RESTART:	
  7471                           ; 1 bytes @ 0x0
  7472                           
  7473  0070                     ?i1_do_I2C_SEND_STOP:	
  7474                           ; 1 bytes @ 0x0
  7475                           
  7476  0070                     ??i1_do_I2C_SEND_STOP:	
  7477                           ; 1 bytes @ 0x0
  7478                           
  7479  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  7480                           ; 1 bytes @ 0x0
  7481                           
  7482  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  7483                           ; 1 bytes @ 0x0
  7484                           
  7485  0070                     ?i1_do_I2C_RCEN:	
  7486                           ; 1 bytes @ 0x0
  7487                           
  7488  0070                     ??i1_do_I2C_RCEN:	
  7489                           ; 1 bytes @ 0x0
  7490                           
  7491  0070                     ?i1_do_I2C_DO_ACK:	
  7492                           ; 1 bytes @ 0x0
  7493                           
  7494  0070                     ??i1_do_I2C_DO_ACK:	
  7495                           ; 1 bytes @ 0x0
  7496                           
  7497  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  7498                           ; 1 bytes @ 0x0
  7499                           
  7500  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  7501                           ; 1 bytes @ 0x0
  7502                           
  7503  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  7504                           ; 1 bytes @ 0x0
  7505                           
  7506  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  7507                           ; 1 bytes @ 0x0
  7508                           
  7509  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  7510                           ; 1 bytes @ 0x0
  7511                           
  7512  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  7513                           ; 1 bytes @ 0x0
  7514                           
  7515  0070                     ?i1_do_I2C_TX:	
  7516                           ; 1 bytes @ 0x0
  7517                           
  7518  0070                     ?i1_do_I2C_RX:	
  7519                           ; 1 bytes @ 0x0
  7520                           
  7521  0070                     ??i1_do_I2C_RX:	
  7522                           ; 1 bytes @ 0x0
  7523                           
  7524  0070                     ?i1_do_I2C_TX_EMPTY:	
  7525                           ; 1 bytes @ 0x0
  7526                           
  7527  0070                     ??i1_do_I2C_TX_EMPTY:	
  7528                           ; 1 bytes @ 0x0
  7529                           
  7530  0070                     ?i1_i2c_ISR:	
  7531                           ; 1 bytes @ 0x0
  7532                           
  7533  0070                     ?i1_returnStop:	
  7534                           ; 1 bytes @ 0x0
  7535                           
  7536  0070                     ?i1_returnReset:	
  7537                           ; 1 bytes @ 0x0
  7538                           
  7539  0070                     ?_execCmd:	
  7540                           ; 1 bytes @ 0x0
  7541                           
  7542  0070                     TMR0_Write8bitTimer@timerVal:	
  7543                           ; 2 bytes @ 0x0
  7544                           
  7545  0070                     TMR2_WriteTimer@timerVal:	
  7546                           ; 1 bytes @ 0x0
  7547                           
  7548  0070                     i1i2c1_driver_TXData@d:	
  7549                           ; 1 bytes @ 0x0
  7550                           
  7551  0070                     i1returnStop@p:	
  7552                           ; 1 bytes @ 0x0
  7553                           
  7554  0070                     i1returnReset@p:	
  7555                           ; 1 bytes @ 0x0
  7556                           
  7557  0070                     i1send_last_2bytes_IK@data:	
  7558                           ; 1 bytes @ 0x0
  7559                           
  7560  0070                     i1send_2bytes_latchless_IK@data:	
  7561                           ; 2 bytes @ 0x0
  7562                           
  7563                           
  7564                           ; 2 bytes @ 0x0
  7565  0070                     	ds	1
  7566  0071                     ??_TMR2_ISR:	
  7567  0071                     ??_TMR2_DefaultInterruptHandler:	
  7568                           ; 1 bytes @ 0x1
  7569                           
  7570  0071                     ??i1_do_I2C_SEND_ADR_READ:	
  7571                           ; 1 bytes @ 0x1
  7572                           
  7573  0071                     ??i1_do_I2C_SEND_ADR_WRITE:	
  7574                           ; 1 bytes @ 0x1
  7575                           
  7576  0071                     ??i1_do_I2C_TX:	
  7577                           ; 1 bytes @ 0x1
  7578                           
  7579  0071                     ??i1_returnStop:	
  7580                           ; 1 bytes @ 0x1
  7581                           
  7582  0071                     ??i1_returnReset:	
  7583                           ; 1 bytes @ 0x1
  7584                           
  7585                           
  7586                           ; 1 bytes @ 0x1
  7587  0071                     	ds	1
  7588  0072                     ??i1_send_2bytes_latchless_IK:	
  7589  0072                     i1send_last_2bytes_IK@latch_start:	
  7590                           ; 1 bytes @ 0x2
  7591                           
  7592                           
  7593                           ; 1 bytes @ 0x2
  7594  0072                     	ds	1
  7595  0073                     i1send_last_2bytes_IK@topOrBottom:	
  7596  0073                     i1_do_I2C_TX$1132:	
  7597                           ; 2 bytes @ 0x3
  7598                           
  7599                           
  7600                           ; 2 bytes @ 0x3
  7601  0073                     	ds	2
  7602  0075                     ??i1_send_last_2bytes_IK:	
  7603  0075                     ??i1_i2c_ISR:	
  7604                           ; 1 bytes @ 0x5
  7605                           
  7606                           
  7607                           ; 1 bytes @ 0x5
  7608  0075                     	ds	1
  7609  0076                     i1send_2bytes_latchless_IK@j:	
  7610                           
  7611                           ; 2 bytes @ 0x6
  7612  0076                     	ds	3
  7613  0079                     i1send_last_2bytes_IK@j:	
  7614                           
  7615                           ; 2 bytes @ 0x9
  7616  0079                     	ds	2
  7617  007B                     ??i1_send_2length_2bytes_IK:	
  7618                           
  7619                           ; 1 bytes @ 0xB
  7620  007B                     	ds	1
  7621  007C                     ??_TMR0_ISR:	
  7622  007C                     ??_TMR0_DefaultInterruptHandler:	
  7623                           ; 1 bytes @ 0xC
  7624                           
  7625  007C                     ??_INTERRUPT_InterruptManager:	
  7626                           ; 1 bytes @ 0xC
  7627                           
  7628                           
  7629                           ; 1 bytes @ 0xC
  7630  007C                     	ds	1
  7631                           
  7632                           	psect	cstackBANK0
  7633  0020                     __pcstackBANK0:	
  7634  0020                     ?i1_send_2length_2bytes_IK:	
  7635  0020                     i1send_2length_2bytes_IK@data1:	
  7636                           ; 1 bytes @ 0x0
  7637                           
  7638                           
  7639                           ; 2 bytes @ 0x0
  7640  0020                     	ds	2
  7641  0022                     i1send_2length_2bytes_IK@data2:	
  7642                           
  7643                           ; 2 bytes @ 0x2
  7644  0022                     	ds	2
  7645  0024                     i1send_2length_2bytes_IK@latch_start:	
  7646                           
  7647                           ; 1 bytes @ 0x4
  7648  0024                     	ds	1
  7649  0025                     i1send_2length_2bytes_IK@topOrBottom:	
  7650                           
  7651                           ; 2 bytes @ 0x5
  7652  0025                     	ds	2
  7653  0027                     ?i1_LEDsOn:	
  7654  0027                     i1LEDsOn@LEDpins:	
  7655                           ; 1 bytes @ 0x7
  7656                           
  7657                           
  7658                           ; 4 bytes @ 0x7
  7659  0027                     	ds	4
  7660  002B                     i1LEDsOn@topOrBottom:	
  7661                           
  7662                           ; 2 bytes @ 0xB
  7663  002B                     	ds	2
  7664  002D                     ??i1_LEDsOn:	
  7665                           
  7666                           ; 1 bytes @ 0xD
  7667  002D                     	ds	4
  7668  0031                     ??_PMD_Initialize:	
  7669  0031                     ??_PIN_MANAGER_Initialize:	
  7670                           ; 1 bytes @ 0x11
  7671                           
  7672  0031                     ??_OSCILLATOR_Initialize:	
  7673                           ; 1 bytes @ 0x11
  7674                           
  7675  0031                     ??_WDT_Initialize:	
  7676                           ; 1 bytes @ 0x11
  7677                           
  7678  0031                     ??_EUSART_Initialize:	
  7679                           ; 1 bytes @ 0x11
  7680                           
  7681  0031                     ?_returnStop:	
  7682                           ; 1 bytes @ 0x11
  7683                           
  7684  0031                     ?_returnReset:	
  7685                           ; 1 bytes @ 0x11
  7686                           
  7687  0031                     ?_TMR0_SetInterruptHandler:	
  7688                           ; 1 bytes @ 0x11
  7689                           
  7690  0031                     ?_TMR2_SetInterruptHandler:	
  7691                           ; 1 bytes @ 0x11
  7692                           
  7693  0031                     ??_calcHeaterPins:	
  7694                           ; 1 bytes @ 0x11
  7695                           
  7696  0031                     ??_isdigit:	
  7697                           ; 1 bytes @ 0x11
  7698                           
  7699  0031                     ??_toupper:	
  7700                           ; 1 bytes @ 0x11
  7701                           
  7702  0031                     ?_send_last_2bytes_IK:	
  7703                           ; 1 bytes @ 0x11
  7704                           
  7705  0031                     ?_send_2bytes_latchless_IK:	
  7706                           ; 1 bytes @ 0x11
  7707                           
  7708  0031                     ??_EUSART_Read:	
  7709                           ; 1 bytes @ 0x11
  7710                           
  7711  0031                     ??_EUSART_Write:	
  7712                           ; 1 bytes @ 0x11
  7713                           
  7714  0031                     ??_mssp1_IRQisEnabled:	
  7715                           ; 1 bytes @ 0x11
  7716                           
  7717  0031                     ??_mssp1_clearIRQ:	
  7718                           ; 1 bytes @ 0x11
  7719                           
  7720  0031                     ??_mssp1_setIRQ:	
  7721                           ; 1 bytes @ 0x11
  7722                           
  7723  0031                     ??_mssp1_waitForEvent:	
  7724                           ; 1 bytes @ 0x11
  7725                           
  7726  0031                     ??_i2c1_driver_open:	
  7727                           ; 1 bytes @ 0x11
  7728                           
  7729  0031                     ??_i2c1_driver_resetBus:	
  7730                           ; 1 bytes @ 0x11
  7731                           
  7732  0031                     ??_i2c1_driver_start:	
  7733                           ; 1 bytes @ 0x11
  7734                           
  7735  0031                     ??_i2c1_driver_restart:	
  7736                           ; 1 bytes @ 0x11
  7737                           
  7738  0031                     ??_i2c1_driver_stop:	
  7739                           ; 1 bytes @ 0x11
  7740                           
  7741  0031                     ??_i2c1_driver_isNACK:	
  7742                           ; 1 bytes @ 0x11
  7743                           
  7744  0031                     ??_i2c1_driver_startRX:	
  7745                           ; 1 bytes @ 0x11
  7746                           
  7747  0031                     ??_i2c1_driver_getRXData:	
  7748                           ; 1 bytes @ 0x11
  7749                           
  7750  0031                     ??_i2c1_driver_TXData:	
  7751                           ; 1 bytes @ 0x11
  7752                           
  7753  0031                     ??_i2c1_driver_sendACK:	
  7754                           ; 1 bytes @ 0x11
  7755                           
  7756  0031                     ??_i2c1_driver_sendNACK:	
  7757                           ; 1 bytes @ 0x11
  7758                           
  7759  0031                     ?_i2c1_driver_setBusCollisionISR:	
  7760                           ; 1 bytes @ 0x11
  7761                           
  7762  0031                     ?_i2c1_driver_setI2cISR:	
  7763                           ; 1 bytes @ 0x11
  7764                           
  7765  0031                     ??_i2c_setAddress:	
  7766                           ; 1 bytes @ 0x11
  7767                           
  7768  0031                     ?_i2c_setBuffer:	
  7769                           ; 1 bytes @ 0x11
  7770                           
  7771  0031                     ??_do_I2C_RESET:	
  7772                           ; 1 bytes @ 0x11
  7773                           
  7774  0031                     ??_do_I2C_IDLE:	
  7775                           ; 1 bytes @ 0x11
  7776                           
  7777  0031                     ??_do_I2C_SEND_RESTART_READ:	
  7778                           ; 1 bytes @ 0x11
  7779                           
  7780  0031                     ??_do_I2C_SEND_RESTART_WRITE:	
  7781                           ; 1 bytes @ 0x11
  7782                           
  7783  0031                     ??_do_I2C_SEND_RESTART:	
  7784                           ; 1 bytes @ 0x11
  7785                           
  7786  0031                     ??_do_I2C_SEND_STOP:	
  7787                           ; 1 bytes @ 0x11
  7788                           
  7789  0031                     ??_do_I2C_RCEN:	
  7790                           ; 1 bytes @ 0x11
  7791                           
  7792  0031                     ??_do_I2C_DO_ACK:	
  7793                           ; 1 bytes @ 0x11
  7794                           
  7795  0031                     ??_do_I2C_DO_NACK_STOP:	
  7796                           ; 1 bytes @ 0x11
  7797                           
  7798  0031                     ??_do_I2C_DO_NACK_RESTART:	
  7799                           ; 1 bytes @ 0x11
  7800                           
  7801  0031                     ??_do_I2C_DO_ADDRESS_NACK:	
  7802                           ; 1 bytes @ 0x11
  7803                           
  7804  0031                     ??_do_I2C_RX:	
  7805                           ; 1 bytes @ 0x11
  7806                           
  7807  0031                     ??_do_I2C_TX_EMPTY:	
  7808                           ; 1 bytes @ 0x11
  7809                           
  7810  0031                     ??_TMR0_StartTimer:	
  7811                           ; 1 bytes @ 0x11
  7812                           
  7813  0031                     ??_TMR0_Load8bitPeriod:	
  7814                           ; 1 bytes @ 0x11
  7815                           
  7816  0031                     ??_TMR2_StartTimer:	
  7817                           ; 1 bytes @ 0x11
  7818                           
  7819  0031                     ??_TMR2_LoadPeriodRegister:	
  7820                           ; 1 bytes @ 0x11
  7821                           
  7822  0031                     ?_strchr:	
  7823                           ; 1 bytes @ 0x11
  7824                           
  7825  0031                     ?___wmul:	
  7826                           ; 2 bytes @ 0x11
  7827                           
  7828  0031                     ?___awdiv:	
  7829                           ; 2 bytes @ 0x11
  7830                           
  7831  0031                     ?___ftpack:	
  7832                           ; 2 bytes @ 0x11
  7833                           
  7834  0031                     ?___lldiv:	
  7835                           ; 3 bytes @ 0x11
  7836                           
  7837  0031                     mssp1_waitForEvent@timeout:	
  7838                           ; 4 bytes @ 0x11
  7839                           
  7840  0031                     i2c1_driver_TXData@d:	
  7841                           ; 1 bytes @ 0x11
  7842                           
  7843  0031                     returnStop@p:	
  7844                           ; 1 bytes @ 0x11
  7845                           
  7846  0031                     returnReset@p:	
  7847                           ; 1 bytes @ 0x11
  7848                           
  7849  0031                     TMR0_Load8bitPeriod@periodVal:	
  7850                           ; 1 bytes @ 0x11
  7851                           
  7852  0031                     TMR2_LoadPeriodRegister@periodVal:	
  7853                           ; 1 bytes @ 0x11
  7854                           
  7855  0031                     _isdigit$2135:	
  7856                           ; 1 bytes @ 0x11
  7857                           
  7858  0031                     send_last_2bytes_IK@data:	
  7859                           ; 1 bytes @ 0x11
  7860                           
  7861  0031                     send_2bytes_latchless_IK@data:	
  7862                           ; 2 bytes @ 0x11
  7863                           
  7864  0031                     i2c1_driver_setBusCollisionISR@f:	
  7865                           ; 2 bytes @ 0x11
  7866                           
  7867  0031                     i2c1_driver_setI2cISR@f:	
  7868                           ; 2 bytes @ 0x11
  7869                           
  7870  0031                     i2c_setBuffer@buffer:	
  7871                           ; 2 bytes @ 0x11
  7872                           
  7873  0031                     TMR0_SetInterruptHandler@InterruptHandler:	
  7874                           ; 2 bytes @ 0x11
  7875                           
  7876  0031                     TMR2_SetInterruptHandler@InterruptHandler:	
  7877                           ; 2 bytes @ 0x11
  7878                           
  7879  0031                     ___wmul@multiplier:	
  7880                           ; 2 bytes @ 0x11
  7881                           
  7882  0031                     ___awdiv@divisor:	
  7883                           ; 2 bytes @ 0x11
  7884                           
  7885  0031                     strchr@ptr:	
  7886                           ; 2 bytes @ 0x11
  7887                           
  7888  0031                     ___ftpack@arg:	
  7889                           ; 2 bytes @ 0x11
  7890                           
  7891  0031                     ___lldiv@divisor:	
  7892                           ; 3 bytes @ 0x11
  7893                           
  7894                           
  7895                           ; 4 bytes @ 0x11
  7896  0031                     	ds	1
  7897  0032                     ??_returnStop:	
  7898  0032                     ??_returnReset:	
  7899                           ; 1 bytes @ 0x12
  7900                           
  7901  0032                     ??_do_I2C_SEND_ADR_READ:	
  7902                           ; 1 bytes @ 0x12
  7903                           
  7904  0032                     ??_do_I2C_SEND_ADR_WRITE:	
  7905                           ; 1 bytes @ 0x12
  7906                           
  7907  0032                     ??_do_I2C_TX:	
  7908                           ; 1 bytes @ 0x12
  7909                           
  7910  0032                     EUSART_Read@readValue:	
  7911                           ; 1 bytes @ 0x12
  7912                           
  7913  0032                     EUSART_Write@txData:	
  7914                           ; 1 bytes @ 0x12
  7915                           
  7916  0032                     i2c_setAddress@address:	
  7917                           ; 1 bytes @ 0x12
  7918                           
  7919  0032                     isdigit@c:	
  7920                           ; 1 bytes @ 0x12
  7921                           
  7922  0032                     toupper@c:	
  7923                           ; 1 bytes @ 0x12
  7924                           
  7925                           
  7926                           ; 1 bytes @ 0x12
  7927  0032                     	ds	1
  7928  0033                     ??_TMR2_Initialize:	
  7929  0033                     ??_TMR0_Initialize:	
  7930                           ; 1 bytes @ 0x13
  7931                           
  7932  0033                     ??_TMR0_SetInterruptHandler:	
  7933                           ; 1 bytes @ 0x13
  7934                           
  7935  0033                     ??_TMR2_SetInterruptHandler:	
  7936                           ; 1 bytes @ 0x13
  7937                           
  7938  0033                     ??_SYSTEM_Initialize:	
  7939                           ; 1 bytes @ 0x13
  7940                           
  7941  0033                     ??_send_2bytes_latchless_IK:	
  7942                           ; 1 bytes @ 0x13
  7943                           
  7944  0033                     ??_putch:	
  7945                           ; 1 bytes @ 0x13
  7946                           
  7947  0033                     ??_i2c1_driver_setBusCollisionISR:	
  7948                           ; 1 bytes @ 0x13
  7949                           
  7950  0033                     ??_i2c1_driver_setI2cISR:	
  7951                           ; 1 bytes @ 0x13
  7952                           
  7953  0033                     ??_i2c_open:	
  7954                           ; 1 bytes @ 0x13
  7955                           
  7956  0033                     ?_stricmp:	
  7957                           ; 1 bytes @ 0x13
  7958                           
  7959  0033                     send_last_2bytes_IK@latch_start:	
  7960                           ; 2 bytes @ 0x13
  7961                           
  7962  0033                     putch@txData:	
  7963                           ; 1 bytes @ 0x13
  7964                           
  7965  0033                     i2c_setBuffer@bufferSize:	
  7966                           ; 1 bytes @ 0x13
  7967                           
  7968  0033                     ___wmul@multiplicand:	
  7969                           ; 2 bytes @ 0x13
  7970                           
  7971  0033                     ___awdiv@dividend:	
  7972                           ; 2 bytes @ 0x13
  7973                           
  7974  0033                     stricmp@s2:	
  7975                           ; 2 bytes @ 0x13
  7976                           
  7977  0033                     strchr@chr:	
  7978                           ; 2 bytes @ 0x13
  7979                           
  7980                           
  7981                           ; 2 bytes @ 0x13
  7982  0033                     	ds	1
  7983  0034                     i2c_open@ret:	
  7984  0034                     ___ftpack@exp:	
  7985                           ; 1 bytes @ 0x14
  7986                           
  7987  0034                     send_last_2bytes_IK@topOrBottom:	
  7988                           ; 1 bytes @ 0x14
  7989                           
  7990  0034                     _do_I2C_TX$1132:	
  7991                           ; 2 bytes @ 0x14
  7992                           
  7993                           
  7994                           ; 2 bytes @ 0x14
  7995  0034                     	ds	1
  7996  0035                     ??_stricmp:	
  7997  0035                     ??_strchr:	
  7998                           ; 1 bytes @ 0x15
  7999                           
  8000  0035                     ??_i2c_setBuffer:	
  8001                           ; 1 bytes @ 0x15
  8002                           
  8003  0035                     ??___wmul:	
  8004                           ; 1 bytes @ 0x15
  8005                           
  8006  0035                     ??___awdiv:	
  8007                           ; 1 bytes @ 0x15
  8008                           
  8009  0035                     i2c_open@address:	
  8010                           ; 1 bytes @ 0x15
  8011                           
  8012  0035                     ___ftpack@sign:	
  8013                           ; 1 bytes @ 0x15
  8014                           
  8015  0035                     ___wmul@product:	
  8016                           ; 1 bytes @ 0x15
  8017                           
  8018  0035                     ___lldiv@dividend:	
  8019                           ; 2 bytes @ 0x15
  8020                           
  8021                           
  8022                           ; 4 bytes @ 0x15
  8023  0035                     	ds	1
  8024  0036                     ??_i2c_ISR:	
  8025  0036                     ??___ftpack:	
  8026                           ; 1 bytes @ 0x16
  8027                           
  8028  0036                     ??_send_last_2bytes_IK:	
  8029                           ; 1 bytes @ 0x16
  8030                           
  8031  0036                     ___awdiv@counter:	
  8032                           ; 1 bytes @ 0x16
  8033                           
  8034                           
  8035                           ; 1 bytes @ 0x16
  8036  0036                     	ds	1
  8037  0037                     ??_i2c_poller:	
  8038  0037                     ??_i2c_masterOperation:	
  8039                           ; 1 bytes @ 0x17
  8040                           
  8041  0037                     ?_atoi:	
  8042                           ; 1 bytes @ 0x17
  8043                           
  8044  0037                     ___awdiv@sign:	
  8045                           ; 2 bytes @ 0x17
  8046                           
  8047  0037                     stricmp@r:	
  8048                           ; 1 bytes @ 0x17
  8049                           
  8050  0037                     send_2bytes_latchless_IK@j:	
  8051                           ; 1 bytes @ 0x17
  8052                           
  8053                           
  8054                           ; 2 bytes @ 0x17
  8055  0037                     	ds	1
  8056  0038                     ?_strspn:	
  8057  0038                     ?_strcspn:	
  8058                           ; 2 bytes @ 0x18
  8059                           
  8060  0038                     i2c_masterOperation@read:	
  8061                           ; 2 bytes @ 0x18
  8062                           
  8063  0038                     stricmp@s1:	
  8064                           ; 1 bytes @ 0x18
  8065                           
  8066  0038                     ___awdiv@quotient:	
  8067                           ; 1 bytes @ 0x18
  8068                           
  8069  0038                     strcspn@s2:	
  8070                           ; 2 bytes @ 0x18
  8071                           
  8072  0038                     strspn@s2:	
  8073                           ; 2 bytes @ 0x18
  8074                           
  8075                           
  8076                           ; 2 bytes @ 0x18
  8077  0038                     	ds	1
  8078  0039                     ??_atoi:	
  8079  0039                     ??___lldiv:	
  8080                           ; 1 bytes @ 0x19
  8081                           
  8082  0039                     ?___awtoft:	
  8083                           ; 1 bytes @ 0x19
  8084                           
  8085  0039                     i2c_masterOperation@ret:	
  8086                           ; 3 bytes @ 0x19
  8087                           
  8088  0039                     ___awtoft@c:	
  8089                           ; 1 bytes @ 0x19
  8090                           
  8091                           
  8092                           ; 2 bytes @ 0x19
  8093  0039                     	ds	1
  8094  003A                     ??_strspn:	
  8095  003A                     ??_strcspn:	
  8096                           ; 1 bytes @ 0x1A
  8097                           
  8098  003A                     send_last_2bytes_IK@j:	
  8099                           ; 1 bytes @ 0x1A
  8100                           
  8101  003A                     ___lldiv@quotient:	
  8102                           ; 2 bytes @ 0x1A
  8103                           
  8104                           
  8105                           ; 4 bytes @ 0x1A
  8106  003A                     	ds	1
  8107  003B                     atoi@sign:	
  8108                           
  8109                           ; 1 bytes @ 0x1B
  8110  003B                     	ds	1
  8111  003C                     ?_send_2length_2bytes_IK:	
  8112  003C                     ??___awtoft:	
  8113                           ; 1 bytes @ 0x1C
  8114                           
  8115  003C                     send_2length_2bytes_IK@data1:	
  8116                           ; 1 bytes @ 0x1C
  8117                           
  8118  003C                     atoi@a:	
  8119                           ; 2 bytes @ 0x1C
  8120                           
  8121  003C                     strcspn@i:	
  8122                           ; 2 bytes @ 0x1C
  8123                           
  8124  003C                     strspn@i:	
  8125                           ; 2 bytes @ 0x1C
  8126                           
  8127                           
  8128                           ; 2 bytes @ 0x1C
  8129  003C                     	ds	2
  8130  003E                     atoi@s:	
  8131  003E                     ___awtoft@sign:	
  8132                           ; 1 bytes @ 0x1E
  8133                           
  8134  003E                     ___lldiv@counter:	
  8135                           ; 1 bytes @ 0x1E
  8136                           
  8137  003E                     strcspn@s1:	
  8138                           ; 1 bytes @ 0x1E
  8139                           
  8140  003E                     strspn@s1:	
  8141                           ; 1 bytes @ 0x1E
  8142                           
  8143  003E                     send_2length_2bytes_IK@data2:	
  8144                           ; 1 bytes @ 0x1E
  8145                           
  8146                           
  8147                           ; 2 bytes @ 0x1E
  8148  003E                     	ds	1
  8149  003F                     ?_strtok:	
  8150  003F                     ?___ftmul:	
  8151                           ; 1 bytes @ 0x1F
  8152                           
  8153  003F                     ?___llmod:	
  8154                           ; 3 bytes @ 0x1F
  8155                           
  8156  003F                     strtok@s2:	
  8157                           ; 4 bytes @ 0x1F
  8158                           
  8159  003F                     ___ftmul@f1:	
  8160                           ; 2 bytes @ 0x1F
  8161                           
  8162  003F                     ___llmod@divisor:	
  8163                           ; 3 bytes @ 0x1F
  8164                           
  8165                           
  8166                           ; 4 bytes @ 0x1F
  8167  003F                     	ds	1
  8168  0040                     send_2length_2bytes_IK@latch_start:	
  8169                           
  8170                           ; 1 bytes @ 0x20
  8171  0040                     	ds	1
  8172  0041                     ??_strtok:	
  8173  0041                     send_2length_2bytes_IK@topOrBottom:	
  8174                           ; 1 bytes @ 0x21
  8175                           
  8176                           
  8177                           ; 2 bytes @ 0x21
  8178  0041                     	ds	1
  8179  0042                     ___ftmul@f2:	
  8180                           
  8181                           ; 3 bytes @ 0x22
  8182  0042                     	ds	1
  8183  0043                     ??_send_2length_2bytes_IK:	
  8184  0043                     ___llmod@dividend:	
  8185                           ; 1 bytes @ 0x23
  8186                           
  8187                           
  8188                           ; 4 bytes @ 0x23
  8189  0043                     	ds	1
  8190  0044                     ?_LEDsOn:	
  8191  0044                     ?_LEDsPwr:	
  8192                           ; 1 bytes @ 0x24
  8193                           
  8194  0044                     ?_LED_setBrightnessRange:	
  8195                           ; 1 bytes @ 0x24
  8196                           
  8197  0044                     strtok@s1:	
  8198                           ; 1 bytes @ 0x24
  8199                           
  8200  0044                     LEDsPwr@pwr:	
  8201                           ; 1 bytes @ 0x24
  8202                           
  8203  0044                     LED_setBrightnessRange@range:	
  8204                           ; 2 bytes @ 0x24
  8205                           
  8206  0044                     LEDsOn@LEDpins:	
  8207                           ; 2 bytes @ 0x24
  8208                           
  8209                           
  8210                           ; 4 bytes @ 0x24
  8211  0044                     	ds	1
  8212  0045                     ?_parseCmd:	
  8213  0045                     ??___ftmul:	
  8214                           ; 1 bytes @ 0x25
  8215                           
  8216  0045                     parseCmd@s:	
  8217                           ; 1 bytes @ 0x25
  8218                           
  8219                           
  8220                           ; 1 bytes @ 0x25
  8221  0045                     	ds	1
  8222  0046                     ??_parseCmd:	
  8223  0046                     LEDsPwr@topOrBottom:	
  8224                           ; 1 bytes @ 0x26
  8225                           
  8226  0046                     LED_setBrightnessRange@topOrBottom:	
  8227                           ; 2 bytes @ 0x26
  8228                           
  8229                           
  8230                           ; 2 bytes @ 0x26
  8231  0046                     	ds	1
  8232  0047                     ??___llmod:	
  8233  0047                     parseCmd@cmdString:	
  8234                           ; 1 bytes @ 0x27
  8235                           
  8236                           
  8237                           ; 1 bytes @ 0x27
  8238  0047                     	ds	1
  8239  0048                     ??_LEDsPwr:	
  8240  0048                     ___llmod@counter:	
  8241                           ; 1 bytes @ 0x28
  8242                           
  8243  0048                     LEDsOn@topOrBottom:	
  8244                           ; 1 bytes @ 0x28
  8245                           
  8246  0048                     parseCmd@paramIter:	
  8247                           ; 2 bytes @ 0x28
  8248                           
  8249  0048                     LED_setBrightnessRange@LED_configReg:	
  8250                           ; 2 bytes @ 0x28
  8251                           
  8252                           
  8253                           ; 4 bytes @ 0x28
  8254  0048                     	ds	1
  8255  0049                     ?_drv_write:	
  8256  0049                     ??___ftadd:	
  8257                           ; 1 bytes @ 0x29
  8258                           
  8259  0049                     ?_drv_read:	
  8260                           ; 1 bytes @ 0x29
  8261                           
  8262  0049                     ?_startRelMove:	
  8263                           ; 2 bytes @ 0x29
  8264                           
  8265  0049                     ?_startAbsMove:	
  8266                           ; 2 bytes @ 0x29
  8267                           
  8268  0049                     ?_zeroPosition:	
  8269                           ; 2 bytes @ 0x29
  8270                           
  8271  0049                     ?_getPosition:	
  8272                           ; 2 bytes @ 0x29
  8273                           
  8274  0049                     ?_setDrvPeak:	
  8275                           ; 2 bytes @ 0x29
  8276                           
  8277  0049                     ?_setActive:	
  8278                           ; 2 bytes @ 0x29
  8279                           
  8280  0049                     ?_setMoveMask:	
  8281                           ; 2 bytes @ 0x29
  8282                           
  8283  0049                     ?_getActive:	
  8284                           ; 2 bytes @ 0x29
  8285                           
  8286  0049                     ?_getMoveMask:	
  8287                           ; 2 bytes @ 0x29
  8288                           
  8289  0049                     ?_getMotionStatus:	
  8290                           ; 2 bytes @ 0x29
  8291                           
  8292  0049                     ?_LED_getData:	
  8293                           ; 2 bytes @ 0x29
  8294                           
  8295  0049                     drv_write@data:	
  8296                           ; 4 bytes @ 0x29
  8297                           
  8298  0049                     startRelMove@steps:	
  8299                           ; 1 bytes @ 0x29
  8300                           
  8301  0049                     startAbsMove@steps:	
  8302                           ; 2 bytes @ 0x29
  8303                           
  8304  0049                     getPosition@a:	
  8305                           ; 2 bytes @ 0x29
  8306                           
  8307  0049                     setDrvPeak@pk:	
  8308                           ; 2 bytes @ 0x29
  8309                           
  8310  0049                     setActive@probeNum:	
  8311                           ; 2 bytes @ 0x29
  8312                           
  8313  0049                     setMoveMask@probeNum:	
  8314                           ; 2 bytes @ 0x29
  8315                           
  8316                           
  8317                           ; 2 bytes @ 0x29
  8318  0049                     	ds	1
  8319  004A                     ??_drv_write:	
  8320  004A                     ??_LEDsOn:	
  8321                           ; 1 bytes @ 0x2A
  8322                           
  8323  004A                     parseCmd@p:	
  8324                           ; 1 bytes @ 0x2A
  8325                           
  8326                           
  8327                           ; 1 bytes @ 0x2A
  8328  004A                     	ds	1
  8329  004B                     ??_drv_read:	
  8330  004B                     ??_startRelMove:	
  8331                           ; 1 bytes @ 0x2B
  8332                           
  8333  004B                     ??_startAbsMove:	
  8334                           ; 1 bytes @ 0x2B
  8335                           
  8336  004B                     ??_getPosition:	
  8337                           ; 1 bytes @ 0x2B
  8338                           
  8339  004B                     ??_setDrvPeak:	
  8340                           ; 1 bytes @ 0x2B
  8341                           
  8342  004B                     ??_getMotionStatus:	
  8343                           ; 1 bytes @ 0x2B
  8344                           
  8345  004B                     drv_write@reg:	
  8346                           ; 1 bytes @ 0x2B
  8347                           
  8348  004B                     zeroPosition@i:	
  8349                           ; 1 bytes @ 0x2B
  8350                           
  8351  004B                     setActive@onOff:	
  8352                           ; 2 bytes @ 0x2B
  8353                           
  8354  004B                     setMoveMask@onOff:	
  8355                           ; 2 bytes @ 0x2B
  8356                           
  8357  004B                     getActive@i:	
  8358                           ; 2 bytes @ 0x2B
  8359                           
  8360  004B                     getMoveMask@i:	
  8361                           ; 2 bytes @ 0x2B
  8362                           
  8363                           
  8364                           ; 2 bytes @ 0x2B
  8365  004B                     	ds	1
  8366  004C                     ??_setLEDBrightnessRange:	
  8367  004C                     drv_write@buff:	
  8368                           ; 1 bytes @ 0x2C
  8369                           
  8370                           
  8371                           ; 2 bytes @ 0x2C
  8372  004C                     	ds	1
  8373  004D                     ??_fifo_check:	
  8374  004D                     ??_LED_readConfig:	
  8375                           ; 1 bytes @ 0x2D
  8376                           
  8377  004D                     ??_setHeaterPostTime:	
  8378                           ; 1 bytes @ 0x2D
  8379                           
  8380                           
  8381                           ; 1 bytes @ 0x2D
  8382  004D                     	ds	1
  8383  004E                     ??_setLEDPwr:	
  8384                           
  8385                           	psect	maintext
  8386  0989                     __pmaintext:	
  8387                           ; 1 bytes @ 0x2E
  8388 ;;
  8389 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8390 ;;
  8391 ;; *************** function _main *****************
  8392 ;; Defined at:
  8393 ;;		line 130 in file "main.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;		None
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;		None
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  1    wreg      void 
  8400 ;; Registers used:
  8401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8402 ;; Tracked objects:
  8403 ;;		On entry : B1F/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8409 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8410 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8411 ;;Total ram usage:        1 bytes
  8412 ;; Hardware stack levels required when called:   17
  8413 ;; This function calls:
  8414 ;;		_EUSART_Read
  8415 ;;		_SYSTEM_Initialize
  8416 ;;		_doAbsMove
  8417 ;;		_doRelMove
  8418 ;;		_execCmd
  8419 ;;		_main_initialize
  8420 ;;		_parseCmd
  8421 ;;		_printf
  8422 ;; This function is called by:
  8423 ;;		Startup code after reset
  8424 ;; This function uses a non-reentrant model
  8425 ;;
  8426                           
  8427                           
  8428                           ;psect for function _main
  8429  0989                     _main:	
  8430                           
  8431                           ;main.c: 133: SYSTEM_Initialize();
  8432                           
  8433                           ;incstack = 0
  8434 ;; hardware stack exceeded
  8435                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8436  0989  31A5  2598  3189   	fcall	_SYSTEM_Initialize
  8437                           
  8438                           ;main.c: 134: _delay((unsigned long)((500)*(1000000/4000.0)));
  8439  098C  30A3               	movlw	163
  8440  098D  0021               	movlb	1	; select bank1
  8441  098E  00D7               	movwf	??_main^(0+128)
  8442  098F  3055               	movlw	85
  8443  0990                     u8787:	
  8444  0990  0B89               	decfsz	9,f
  8445  0991  2990               	goto	u8787
  8446  0992  0BD7               	decfsz	??_main^(0+128),f
  8447  0993  2990               	goto	u8787
  8448                           
  8449                           ;main.c: 140: (INTCONbits.GIE = 1);
  8450  0994  178B               	bsf	11,7	;volatile
  8451                           
  8452                           ;main.c: 143: (INTCONbits.PEIE = 1);
  8453  0995  170B               	bsf	11,6	;volatile
  8454                           
  8455                           ;main.c: 144: printf("\n\nsystem done\n");
  8456  0996  3057               	movlw	low (STR_4| (0+32768))
  8457  0997  0021               	movlb	1	; select bank1
  8458  0998  00A0               	movwf	printf@f^(0+128)
  8459  0999  30A9               	movlw	high (STR_4| (0+32768))
  8460  099A  00A1               	movwf	(printf@f^(0+128)+1)
  8461  099B  3186  264A  3189   	fcall	_printf
  8462                           
  8463                           ;main.c: 150: main_initialize();
  8464  099E  318B  236A  3189   	fcall	_main_initialize
  8465                           
  8466                           ;main.c: 154: moveMask |= (1<<1);
  8467  09A1  0020               	movlb	0	; select bank0
  8468  09A2  14CE               	bsf	_moveMask,1
  8469                           
  8470                           ;main.c: 155: moveMask |= (1<<5);
  8471  09A3  16CE               	bsf	_moveMask,5
  8472                           
  8473                           ;main.c: 157: printf("moveMask: %lu \n", moveMask);
  8474  09A4  30F9               	movlw	low (STR_5| (0+32768))
  8475  09A5  0021               	movlb	1	; select bank1
  8476  09A6  00A0               	movwf	printf@f^(0+128)
  8477  09A7  30A8               	movlw	high (STR_5| (0+32768))
  8478  09A8  00A1               	movwf	(printf@f^(0+128)+1)
  8479  09A9  0020               	movlb	0	; select bank0
  8480  09AA  0851               	movf	_moveMask+3,w
  8481  09AB  0021               	movlb	1	; select bank1
  8482  09AC  00A5               	movwf	((?_printf+3)^(0+128)+2)
  8483  09AD  0020               	movlb	0	; select bank0
  8484  09AE  0850               	movf	_moveMask+2,w
  8485  09AF  0021               	movlb	1	; select bank1
  8486  09B0  00A4               	movwf	((?_printf+2)^(0+128)+2)
  8487  09B1  0020               	movlb	0	; select bank0
  8488  09B2  084F               	movf	_moveMask+1,w
  8489  09B3  0021               	movlb	1	; select bank1
  8490  09B4  00A3               	movwf	((?_printf+1)^(0+128)+2)
  8491  09B5  0020               	movlb	0	; select bank0
  8492  09B6  084E               	movf	_moveMask,w
  8493  09B7  0021               	movlb	1	; select bank1
  8494  09B8  00A2               	movwf	(?_printf^(0+128)+2)
  8495  09B9  3186  264A  3189   	fcall	_printf
  8496                           
  8497                           ;main.c: 179: }
  8498                           ;main.c: 182: switch(motionType){
  8499  09BC  29C4               	goto	l8484
  8500  09BD                     l8504:	
  8501                           ;main.c: 183: case REL_MOVE: doRelMove(); break;
  8502                           
  8503  09BD  318E  2604  3189   	fcall	_doRelMove
  8504  09C0  29C4               	goto	l8484
  8505  09C1                     l8506:	
  8506                           ;main.c: 184: case ABS_MOVE: doAbsMove(); break;
  8507                           
  8508  09C1  3180  20AB  3189   	fcall	_doAbsMove
  8509  09C4                     l8484:	
  8510                           ;main.c: 158: while (1)
  8511                           
  8512                           ;main.c: 186: }
  8513                           
  8514                           ;main.c: 185: default: break;
  8515                           
  8516                           
  8517                           ;main.c: 159: {
  8518                           ;main.c: 161: if (eusartRxCount!=0) {
  8519  09C4  0020               	movlb	0	; select bank0
  8520  09C5  0856               	movf	_eusartRxCount,w	;volatile
  8521  09C6  1903               	btfsc	3,2
  8522  09C7  29F0               	goto	l8496
  8523                           
  8524                           ;main.c: 162: readdata[readIdx] = EUSART_Read();
  8525  09C8  31A6  26EE  3189   	fcall	_EUSART_Read
  8526  09CB  0021               	movlb	1	; select bank1
  8527  09CC  00D7               	movwf	??_main^(0+128)
  8528  09CD  0020               	movlb	0	; select bank0
  8529  09CE  0852               	movf	_readIdx,w
  8530  09CF  3EC5               	addlw	(low (_readdata| (0+256)))& (0+255)
  8531  09D0  0086               	movwf	6
  8532  09D1  3001               	movlw	1	; select bank3/4
  8533  09D2  0087               	movwf	7
  8534  09D3  0021               	movlb	1	; select bank1
  8535  09D4  0857               	movf	??_main^(0+128),w
  8536  09D5  0081               	movwf	1
  8537                           
  8538                           ;main.c: 163: if(readdata[readIdx] == '\n'){
  8539  09D6  0020               	movlb	0	; select bank0
  8540  09D7  0852               	movf	_readIdx,w
  8541  09D8  3EC5               	addlw	(low (_readdata| (0+256)))& (0+255)
  8542  09D9  0086               	movwf	6
  8543  09DA  3001               	movlw	1	; select bank3/4
  8544  09DB  0087               	movwf	7
  8545  09DC  300A               	movlw	10
  8546  09DD  0601               	xorwf	1,w
  8547  09DE  1D03               	btfss	3,2
  8548  09DF  29EB               	goto	l8494
  8549                           
  8550                           ;main.c: 164: readdata[readIdx] = 0;
  8551  09E0  0852               	movf	_readIdx,w
  8552  09E1  3EC5               	addlw	(low (_readdata| (0+256)))& (0+255)
  8553  09E2  0086               	movwf	6
  8554  09E3  3001               	movlw	1	; select bank3/4
  8555  09E4  0087               	movwf	7
  8556  09E5  0181               	clrf	1
  8557                           
  8558                           ;main.c: 165: cmdRead = 1;
  8559  09E6  3001               	movlw	1
  8560  09E7  0022               	movlb	2	; select bank2
  8561  09E8  00E0               	movwf	_cmdRead^(0+256)
  8562  09E9  3000               	movlw	0
  8563  09EA  00E1               	movwf	(_cmdRead^(0+256)+1)
  8564  09EB                     l8494:	
  8565                           
  8566                           ;main.c: 166: }
  8567                           ;main.c: 167: readIdx++;
  8568  09EB  3001               	movlw	1
  8569  09EC  0020               	movlb	0	; select bank0
  8570  09ED  07D2               	addwf	_readIdx,f
  8571  09EE  3000               	movlw	0
  8572  09EF  3DD3               	addwfc	_readIdx+1,f
  8573  09F0                     l8496:	
  8574                           
  8575                           ;main.c: 168: }
  8576                           ;main.c: 171: if(cmdRead){
  8577  09F0  0022               	movlb	2	; select bank2
  8578  09F1  0860               	movf	_cmdRead^(0+256),w
  8579  09F2  0461               	iorwf	(_cmdRead+1)^(0+256),w
  8580  09F3  1903               	btfsc	3,2
  8581  09F4  2A09               	goto	l8510
  8582                           
  8583                           ;main.c: 173: parseCmd(readdata, &cmd_struct);
  8584  09F5  30B0               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8585  09F6  0021               	movlb	1	; select bank1
  8586  09F7  00D7               	movwf	??_main^(0+128)
  8587  09F8  0857               	movf	??_main^(0+128),w
  8588  09F9  0020               	movlb	0	; select bank0
  8589  09FA  00C5               	movwf	parseCmd@s
  8590  09FB  30C5               	movlw	(low (_readdata| (0+256)))& (0+255)
  8591  09FC  3184  24B7  3189   	fcall	_parseCmd
  8592                           
  8593                           ;main.c: 175: cmdRead = 0;
  8594  09FF  0022               	movlb	2	; select bank2
  8595  0A00  01E0               	clrf	_cmdRead^(0+256)
  8596  0A01  01E1               	clrf	(_cmdRead+1)^(0+256)
  8597                           
  8598                           ;main.c: 176: readIdx=0;
  8599  0A02  0020               	movlb	0	; select bank0
  8600  0A03  01D2               	clrf	_readIdx
  8601  0A04  01D3               	clrf	_readIdx+1
  8602                           
  8603                           ;main.c: 177: execCmd(&cmd_struct);
  8604  0A05  30B0               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8605  0A06  3182  22EB  3189   	fcall	_execCmd
  8606  0A09                     l8510:	
  8607  0A09  0020               	movlb	0	; select bank0
  8608  0A0A  0855               	movf	_motionType,w
  8609                           
  8610                           ; Switch size 1, requested type "space"
  8611                           ; Number of cases is 2, Range of values is 1 to 2
  8612                           ; switch strategies available:
  8613                           ; Name         Instructions Cycles
  8614                           ; simple_byte            7     4 (average)
  8615                           ; direct_byte           13     9 (fixed)
  8616                           ; jumptable            263     9 (fixed)
  8617                           ;	Chosen strategy is simple_byte
  8618  0A0B  3A01               	xorlw	1	; case 1
  8619  0A0C  1903               	skipnz
  8620  0A0D  29BD               	goto	l8504
  8621  0A0E  3A03               	xorlw	3	; case 2
  8622  0A0F  1903               	skipnz
  8623  0A10  29C1               	goto	l8506
  8624  0A11  29C4               	goto	l8484
  8625  0A12  29C4               	goto	l8484
  8626  0A13                     __end_of_main:	
  8627                           
  8628                           	psect	text1
  8629  04B7                     __ptext1:	
  8630 ;; *************** function _parseCmd *****************
  8631 ;; Defined at:
  8632 ;;		line 5 in file "cmd_parser.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;  cmdString       1    wreg     PTR unsigned char 
  8635 ;;		 -> readdata(20), 
  8636 ;;  s               1   37[BANK0 ] PTR struct CMD_STRUCT
  8637 ;;		 -> cmd_struct(21), 
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;  cmdString       1   39[BANK0 ] PTR unsigned char 
  8640 ;;		 -> readdata(20), 
  8641 ;;  p               1   42[BANK0 ] PTR unsigned char 
  8642 ;;		 -> readdata(20), NULL(0), 
  8643 ;;  paramIter       2   40[BANK0 ] int 
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  1    wreg      void 
  8646 ;; Registers used:
  8647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8653 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8654 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8656 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8657 ;;Total ram usage:        6 bytes
  8658 ;; Hardware stack levels used:    1
  8659 ;; Hardware stack levels required when called:    9
  8660 ;; This function calls:
  8661 ;;		_atoi
  8662 ;;		_stricmp
  8663 ;;		_strtok
  8664 ;; This function is called by:
  8665 ;;		_main
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           
  8670                           ;psect for function _parseCmd
  8671  04B7                     _parseCmd:	
  8672                           
  8673                           ;incstack = 0
  8674                           ; Regs used in _parseCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8675                           ;parseCmd@cmdString stored from wreg
  8676  04B7  0020               	movlb	0	; select bank0
  8677  04B8  00C7               	movwf	parseCmd@cmdString
  8678                           
  8679                           ;cmd_parser.c: 6: int paramIter = 0;
  8680  04B9  01C8               	clrf	parseCmd@paramIter
  8681  04BA  01C9               	clrf	parseCmd@paramIter+1
  8682                           
  8683                           ;cmd_parser.c: 7: for (char *p = strtok(cmdString," "); p != (0); p = strtok((0), " ")){
  8684  04BB  30FF               	movlw	low ((STR_40+6)| (0+32768))
  8685  04BC  00BF               	movwf	strtok@s2
  8686  04BD  30A9               	movlw	high ((STR_40+6)| (0+32768))
  8687  04BE  00C0               	movwf	strtok@s2+1
  8688  04BF  0847               	movf	parseCmd@cmdString,w
  8689  04C0                     L20:	
  8690  04C0  319C  24C8  3184   	fcall	_strtok
  8691  04C3  0020               	movlb	0	; select bank0
  8692  04C4  00C6               	movwf	??_parseCmd
  8693  04C5  0846               	movf	??_parseCmd,w
  8694  04C6  00CA               	movwf	parseCmd@p
  8695  04C7  084A               	movf	parseCmd@p,w
  8696  04C8  1903               	btfsc	3,2
  8697  04C9  0008               	return
  8698                           
  8699                           ;cmd_parser.c: 9: if (paramIter == 0){
  8700  04CA  0848               	movf	parseCmd@paramIter,w
  8701  04CB  0449               	iorwf	parseCmd@paramIter+1,w
  8702  04CC  1D03               	btfss	3,2
  8703  04CD  2E1B               	goto	l6546
  8704                           
  8705                           ;cmd_parser.c: 10: if(stricmp(p, "rel") == 0)
  8706  04CE  302D               	movlw	low (STR_58| (0+32768))
  8707  04CF  00B3               	movwf	stricmp@s2
  8708  04D0  30AA               	movlw	high (STR_58| (0+32768))
  8709  04D1  00B4               	movwf	stricmp@s2+1
  8710  04D2  084A               	movf	parseCmd@p,w
  8711  04D3  319A  223B  3184   	fcall	_stricmp
  8712  04D6  0020               	movlb	0	; select bank0
  8713  04D7  0833               	movf	?_stricmp,w
  8714  04D8  0434               	iorwf	?_stricmp+1,w
  8715  04D9  1D03               	btfss	3,2
  8716  04DA  2CDD               	goto	l6464
  8717                           
  8718                           ;cmd_parser.c: 11: s->c = CMD_REL;
  8719  04DB  3002               	movlw	2
  8720  04DC  2E0D               	goto	L19
  8721  04DD                     l6464:	
  8722                           
  8723                           ;cmd_parser.c: 12: else if(stricmp(p, "abs") == 0)
  8724  04DD  3031               	movlw	low (STR_59| (0+32768))
  8725  04DE  00B3               	movwf	stricmp@s2
  8726  04DF  30AA               	movlw	high (STR_59| (0+32768))
  8727  04E0  00B4               	movwf	stricmp@s2+1
  8728  04E1  084A               	movf	parseCmd@p,w
  8729  04E2  319A  223B  3184   	fcall	_stricmp
  8730  04E5  0020               	movlb	0	; select bank0
  8731  04E6  0833               	movf	?_stricmp,w
  8732  04E7  0434               	iorwf	?_stricmp+1,w
  8733  04E8  1D03               	btfss	3,2
  8734  04E9  2CF1               	goto	l6468
  8735                           
  8736                           ;cmd_parser.c: 13: s->c = CMD_ABS;
  8737  04EA  0845               	movf	parseCmd@s,w
  8738  04EB  0086               	movwf	6
  8739  04EC  3001               	movlw	1	; select bank2/3
  8740  04ED  0087               	movwf	7
  8741  04EE  0181               	clrf	1
  8742  04EF  0A81               	incf	1,f
  8743  04F0  2E40               	goto	l6554
  8744  04F1                     l6468:	
  8745                           
  8746                           ;cmd_parser.c: 14: else if(stricmp(p, "pos") == 0)
  8747  04F1  3035               	movlw	low (STR_60| (0+32768))
  8748  04F2  00B3               	movwf	stricmp@s2
  8749  04F3  30AA               	movlw	high (STR_60| (0+32768))
  8750  04F4  00B4               	movwf	stricmp@s2+1
  8751  04F5  084A               	movf	parseCmd@p,w
  8752  04F6  319A  223B  3184   	fcall	_stricmp
  8753  04F9  0020               	movlb	0	; select bank0
  8754  04FA  0833               	movf	?_stricmp,w
  8755  04FB  0434               	iorwf	?_stricmp+1,w
  8756  04FC  1D03               	btfss	3,2
  8757  04FD  2D00               	goto	l6472
  8758                           
  8759                           ;cmd_parser.c: 15: s->c = CMD_P;
  8760  04FE  3003               	movlw	3
  8761  04FF  2E0D               	goto	L19
  8762  0500                     l6472:	
  8763                           
  8764                           ;cmd_parser.c: 16: else if(stricmp(p,"s") == 0)
  8765  0500  3033               	movlw	low ((STR_59+2)| (0+32768))
  8766  0501  00B3               	movwf	stricmp@s2
  8767  0502  30AA               	movlw	high ((STR_59+2)| (0+32768))
  8768  0503  00B4               	movwf	stricmp@s2+1
  8769  0504  084A               	movf	parseCmd@p,w
  8770  0505  319A  223B  3184   	fcall	_stricmp
  8771  0508  0020               	movlb	0	; select bank0
  8772  0509  0833               	movf	?_stricmp,w
  8773  050A  0434               	iorwf	?_stricmp+1,w
  8774  050B  1D03               	btfss	3,2
  8775  050C  2D0F               	goto	l6476
  8776                           
  8777                           ;cmd_parser.c: 17: s->c = CMD_S;
  8778  050D  3004               	movlw	4
  8779  050E  2E0D               	goto	L19
  8780  050F                     l6476:	
  8781                           
  8782                           ;cmd_parser.c: 18: else if(stricmp(p,"setA") == 0)
  8783  050F  3014               	movlw	low (STR_62| (0+32768))
  8784  0510  00B3               	movwf	stricmp@s2
  8785  0511  30AA               	movlw	high (STR_62| (0+32768))
  8786  0512  00B4               	movwf	stricmp@s2+1
  8787  0513  084A               	movf	parseCmd@p,w
  8788  0514  319A  223B  3184   	fcall	_stricmp
  8789  0517  0020               	movlb	0	; select bank0
  8790  0518  0833               	movf	?_stricmp,w
  8791  0519  0434               	iorwf	?_stricmp+1,w
  8792  051A  1D03               	btfss	3,2
  8793  051B  2D1E               	goto	l6480
  8794                           
  8795                           ;cmd_parser.c: 19: s->c = CMD_SETA;
  8796  051C  3005               	movlw	5
  8797  051D  2E0D               	goto	L19
  8798  051E                     l6480:	
  8799                           
  8800                           ;cmd_parser.c: 20: else if(stricmp(p,"setM") == 0)
  8801  051E  301E               	movlw	low (STR_63| (0+32768))
  8802  051F  00B3               	movwf	stricmp@s2
  8803  0520  30AA               	movlw	high (STR_63| (0+32768))
  8804  0521  00B4               	movwf	stricmp@s2+1
  8805  0522  084A               	movf	parseCmd@p,w
  8806  0523  319A  223B  3184   	fcall	_stricmp
  8807  0526  0020               	movlb	0	; select bank0
  8808  0527  0833               	movf	?_stricmp,w
  8809  0528  0434               	iorwf	?_stricmp+1,w
  8810  0529  1D03               	btfss	3,2
  8811  052A  2D2D               	goto	l6484
  8812                           
  8813                           ;cmd_parser.c: 21: s->c = CMD_SETM;
  8814  052B  3006               	movlw	6
  8815  052C  2E0D               	goto	L19
  8816  052D                     l6484:	
  8817                           
  8818                           ;cmd_parser.c: 22: else if(stricmp(p,"z") == 0)
  8819  052D  304F               	movlw	low (STR_64| (0+32768))
  8820  052E  00B3               	movwf	stricmp@s2
  8821  052F  30AA               	movlw	high (STR_64| (0+32768))
  8822  0530  00B4               	movwf	stricmp@s2+1
  8823  0531  084A               	movf	parseCmd@p,w
  8824  0532  319A  223B  3184   	fcall	_stricmp
  8825  0535  0020               	movlb	0	; select bank0
  8826  0536  0833               	movf	?_stricmp,w
  8827  0537  0434               	iorwf	?_stricmp+1,w
  8828  0538  1D03               	btfss	3,2
  8829  0539  2D3C               	goto	l6488
  8830                           
  8831                           ;cmd_parser.c: 23: s->c = CMD_ZERO;
  8832  053A  3007               	movlw	7
  8833  053B  2E0D               	goto	L19
  8834  053C                     l6488:	
  8835                           
  8836                           ;cmd_parser.c: 24: else if(stricmp(p,"drvPeak") == 0)
  8837  053C  30C1               	movlw	low (STR_65| (0+32768))
  8838  053D  00B3               	movwf	stricmp@s2
  8839  053E  30A9               	movlw	high (STR_65| (0+32768))
  8840  053F  00B4               	movwf	stricmp@s2+1
  8841  0540  084A               	movf	parseCmd@p,w
  8842  0541  319A  223B  3184   	fcall	_stricmp
  8843  0544  0020               	movlb	0	; select bank0
  8844  0545  0833               	movf	?_stricmp,w
  8845  0546  0434               	iorwf	?_stricmp+1,w
  8846  0547  1D03               	btfss	3,2
  8847  0548  2D4B               	goto	l6492
  8848                           
  8849                           ;cmd_parser.c: 25: s->c = CMD_DRV_PEAK;
  8850  0549  3008               	movlw	8
  8851  054A  2E0D               	goto	L19
  8852  054B                     l6492:	
  8853                           
  8854                           ;cmd_parser.c: 26: else if(stricmp(p,"drvGain") == 0)
  8855  054B  30C9               	movlw	low (STR_66| (0+32768))
  8856  054C  00B3               	movwf	stricmp@s2
  8857  054D  30A9               	movlw	high (STR_66| (0+32768))
  8858  054E  00B4               	movwf	stricmp@s2+1
  8859  054F  084A               	movf	parseCmd@p,w
  8860  0550  319A  223B  3184   	fcall	_stricmp
  8861  0553  0020               	movlb	0	; select bank0
  8862  0554  0833               	movf	?_stricmp,w
  8863  0555  0434               	iorwf	?_stricmp+1,w
  8864  0556  1D03               	btfss	3,2
  8865  0557  2D5A               	goto	l6496
  8866                           
  8867                           ;cmd_parser.c: 27: s->c = CMD_DRV_GAIN;
  8868  0558  3009               	movlw	9
  8869  0559  2E0D               	goto	L19
  8870  055A                     l6496:	
  8871                           
  8872                           ;cmd_parser.c: 28: else if(stricmp(p,"piezoontime") == 0)
  8873  055A  308D               	movlw	low (STR_67| (0+32768))
  8874  055B  00B3               	movwf	stricmp@s2
  8875  055C  30A9               	movlw	high (STR_67| (0+32768))
  8876  055D  00B4               	movwf	stricmp@s2+1
  8877  055E  084A               	movf	parseCmd@p,w
  8878  055F  319A  223B  3184   	fcall	_stricmp
  8879  0562  0020               	movlb	0	; select bank0
  8880  0563  0833               	movf	?_stricmp,w
  8881  0564  0434               	iorwf	?_stricmp+1,w
  8882  0565  1D03               	btfss	3,2
  8883  0566  2D69               	goto	l6500
  8884                           
  8885                           ;cmd_parser.c: 29: s->c = CMD_DRV_PIEZOONTIME;
  8886  0567  300A               	movlw	10
  8887  0568  2E0D               	goto	L19
  8888  0569                     l6500:	
  8889                           
  8890                           ;cmd_parser.c: 30: else if(stricmp(p,"heaterpretime") == 0)
  8891  0569  3066               	movlw	low (STR_68| (0+32768))
  8892  056A  00B3               	movwf	stricmp@s2
  8893  056B  30A9               	movlw	high (STR_68| (0+32768))
  8894  056C  00B4               	movwf	stricmp@s2+1
  8895  056D  084A               	movf	parseCmd@p,w
  8896  056E  319A  223B  3184   	fcall	_stricmp
  8897  0571  0020               	movlb	0	; select bank0
  8898  0572  0833               	movf	?_stricmp,w
  8899  0573  0434               	iorwf	?_stricmp+1,w
  8900  0574  1D03               	btfss	3,2
  8901  0575  2D78               	goto	l6504
  8902                           
  8903                           ;cmd_parser.c: 31: s->c = CMD_HEATER_PRETIME;
  8904  0576  300B               	movlw	11
  8905  0577  2E0D               	goto	L19
  8906  0578                     l6504:	
  8907                           
  8908                           ;cmd_parser.c: 32: else if(stricmp(p,"heaterposttime") == 0)
  8909  0578  3048               	movlw	low (STR_69| (0+32768))
  8910  0579  00B3               	movwf	stricmp@s2
  8911  057A  30A9               	movlw	high (STR_69| (0+32768))
  8912  057B  00B4               	movwf	stricmp@s2+1
  8913  057C  084A               	movf	parseCmd@p,w
  8914  057D  319A  223B  3184   	fcall	_stricmp
  8915  0580  0020               	movlb	0	; select bank0
  8916  0581  0833               	movf	?_stricmp,w
  8917  0582  0434               	iorwf	?_stricmp+1,w
  8918  0583  1D03               	btfss	3,2
  8919  0584  2D87               	goto	l6508
  8920                           
  8921                           ;cmd_parser.c: 33: s->c = CMD_HEATER_POSTTIME;
  8922  0585  300C               	movlw	12
  8923  0586  2E0D               	goto	L19
  8924  0587                     l6508:	
  8925                           
  8926                           ;cmd_parser.c: 34: else if(stricmp(p,"ledgain") == 0)
  8927  0587  30D1               	movlw	low (STR_70| (0+32768))
  8928  0588  00B3               	movwf	stricmp@s2
  8929  0589  30A9               	movlw	high (STR_70| (0+32768))
  8930  058A  00B4               	movwf	stricmp@s2+1
  8931  058B  084A               	movf	parseCmd@p,w
  8932  058C  319A  223B  3184   	fcall	_stricmp
  8933  058F  0020               	movlb	0	; select bank0
  8934  0590  0833               	movf	?_stricmp,w
  8935  0591  0434               	iorwf	?_stricmp+1,w
  8936  0592  1D03               	btfss	3,2
  8937  0593  2D96               	goto	l6512
  8938                           
  8939                           ;cmd_parser.c: 35: s->c = CMD_HEATER_GAIN;
  8940  0594  300D               	movlw	13
  8941  0595  2E0D               	goto	L19
  8942  0596                     l6512:	
  8943                           
  8944                           ;cmd_parser.c: 36: else if(stricmp(p,"ledpwr") == 0)
  8945  0596  3008               	movlw	low (STR_71| (0+32768))
  8946  0597  00B3               	movwf	stricmp@s2
  8947  0598  30AA               	movlw	high (STR_71| (0+32768))
  8948  0599  00B4               	movwf	stricmp@s2+1
  8949  059A  084A               	movf	parseCmd@p,w
  8950  059B  319A  223B  3184   	fcall	_stricmp
  8951  059E  0020               	movlb	0	; select bank0
  8952  059F  0833               	movf	?_stricmp,w
  8953  05A0  0434               	iorwf	?_stricmp+1,w
  8954  05A1  1D03               	btfss	3,2
  8955  05A2  2DA5               	goto	l6516
  8956                           
  8957                           ;cmd_parser.c: 37: s->c = CMD_HEATER_PWR;
  8958  05A3  300E               	movlw	14
  8959  05A4  2E0D               	goto	L19
  8960  05A5                     l6516:	
  8961                           
  8962                           ;cmd_parser.c: 38: else if(stricmp(p,"toggleheater") == 0)
  8963  05A5  3074               	movlw	low (STR_72| (0+32768))
  8964  05A6  00B3               	movwf	stricmp@s2
  8965  05A7  30A9               	movlw	high (STR_72| (0+32768))
  8966  05A8  00B4               	movwf	stricmp@s2+1
  8967  05A9  084A               	movf	parseCmd@p,w
  8968  05AA  319A  223B  3184   	fcall	_stricmp
  8969  05AD  0020               	movlb	0	; select bank0
  8970  05AE  0833               	movf	?_stricmp,w
  8971  05AF  0434               	iorwf	?_stricmp+1,w
  8972  05B0  1D03               	btfss	3,2
  8973  05B1  2DB4               	goto	l6520
  8974                           
  8975                           ;cmd_parser.c: 39: s->c = CMD_HEATER_TOGGLE;
  8976  05B2  300F               	movlw	15
  8977  05B3  2E0D               	goto	L19
  8978  05B4                     l6520:	
  8979                           
  8980                           ;cmd_parser.c: 40: else if(stricmp(p,"getA") == 0)
  8981  05B4  300F               	movlw	low (STR_73| (0+32768))
  8982  05B5  00B3               	movwf	stricmp@s2
  8983  05B6  30AA               	movlw	high (STR_73| (0+32768))
  8984  05B7  00B4               	movwf	stricmp@s2+1
  8985  05B8  084A               	movf	parseCmd@p,w
  8986  05B9  319A  223B  3184   	fcall	_stricmp
  8987  05BC  0020               	movlb	0	; select bank0
  8988  05BD  0833               	movf	?_stricmp,w
  8989  05BE  0434               	iorwf	?_stricmp+1,w
  8990  05BF  1D03               	btfss	3,2
  8991  05C0  2DC3               	goto	l6524
  8992                           
  8993                           ;cmd_parser.c: 41: s->c = CMD_GET_ACTIVE;
  8994  05C1  3010               	movlw	16
  8995  05C2  2E0D               	goto	L19
  8996  05C3                     l6524:	
  8997                           
  8998                           ;cmd_parser.c: 42: else if(stricmp(p,"getM") == 0)
  8999  05C3  3019               	movlw	low (STR_74| (0+32768))
  9000  05C4  00B3               	movwf	stricmp@s2
  9001  05C5  30AA               	movlw	high (STR_74| (0+32768))
  9002  05C6  00B4               	movwf	stricmp@s2+1
  9003  05C7  084A               	movf	parseCmd@p,w
  9004  05C8  319A  223B  3184   	fcall	_stricmp
  9005  05CB  0020               	movlb	0	; select bank0
  9006  05CC  0833               	movf	?_stricmp,w
  9007  05CD  0434               	iorwf	?_stricmp+1,w
  9008  05CE  1D03               	btfss	3,2
  9009  05CF  2DD2               	goto	l6528
  9010                           
  9011                           ;cmd_parser.c: 43: s->c = CMD_GET_MOVABLE;
  9012  05D0  3011               	movlw	17
  9013  05D1  2E0D               	goto	L19
  9014  05D2                     l6528:	
  9015                           
  9016                           ;cmd_parser.c: 44: else if(stricmp(p,"mstatus") == 0)
  9017  05D2  30D9               	movlw	low (STR_75| (0+32768))
  9018  05D3  00B3               	movwf	stricmp@s2
  9019  05D4  30A9               	movlw	high (STR_75| (0+32768))
  9020  05D5  00B4               	movwf	stricmp@s2+1
  9021  05D6  084A               	movf	parseCmd@p,w
  9022  05D7  319A  223B  3184   	fcall	_stricmp
  9023  05DA  0020               	movlb	0	; select bank0
  9024  05DB  0833               	movf	?_stricmp,w
  9025  05DC  0434               	iorwf	?_stricmp+1,w
  9026  05DD  1D03               	btfss	3,2
  9027  05DE  2DE1               	goto	l6532
  9028                           
  9029                           ;cmd_parser.c: 45: s->c = CMD_MOTION_STATUS;
  9030  05DF  3012               	movlw	18
  9031  05E0  2E0D               	goto	L19
  9032  05E1                     l6532:	
  9033                           
  9034                           ;cmd_parser.c: 46: else if(stricmp(p,"domove") == 0)
  9035  05E1  3001               	movlw	low (STR_76| (0+32768))
  9036  05E2  00B3               	movwf	stricmp@s2
  9037  05E3  30AA               	movlw	high (STR_76| (0+32768))
  9038  05E4  00B4               	movwf	stricmp@s2+1
  9039  05E5  084A               	movf	parseCmd@p,w
  9040  05E6  319A  223B  3184   	fcall	_stricmp
  9041  05E9  0020               	movlb	0	; select bank0
  9042  05EA  0833               	movf	?_stricmp,w
  9043  05EB  0434               	iorwf	?_stricmp+1,w
  9044  05EC  1D03               	btfss	3,2
  9045  05ED  2DF0               	goto	l6536
  9046                           
  9047                           ;cmd_parser.c: 47: s->c = CMD_DOMOVE;
  9048  05EE  3013               	movlw	19
  9049  05EF  2E0D               	goto	L19
  9050  05F0                     l6536:	
  9051                           
  9052                           ;cmd_parser.c: 48: else if(stricmp(p,"comm") == 0)
  9053  05F0  3028               	movlw	low (STR_77| (0+32768))
  9054  05F1  00B3               	movwf	stricmp@s2
  9055  05F2  30AA               	movlw	high (STR_77| (0+32768))
  9056  05F3  00B4               	movwf	stricmp@s2+1
  9057  05F4  084A               	movf	parseCmd@p,w
  9058  05F5  319A  223B  3184   	fcall	_stricmp
  9059  05F8  0020               	movlb	0	; select bank0
  9060  05F9  0833               	movf	?_stricmp,w
  9061  05FA  0434               	iorwf	?_stricmp+1,w
  9062  05FB  1D03               	btfss	3,2
  9063  05FC  2DFF               	goto	l6540
  9064                           
  9065                           ;cmd_parser.c: 49: s->c = CMD_COMM_CHECK;
  9066  05FD  3014               	movlw	20
  9067  05FE  2E0D               	goto	L19
  9068  05FF                     l6540:	
  9069                           
  9070                           ;cmd_parser.c: 50: else if(stricmp(p,"ping") == 0)
  9071  05FF  3023               	movlw	low (STR_78| (0+32768))
  9072  0600  00B3               	movwf	stricmp@s2
  9073  0601  30AA               	movlw	high (STR_78| (0+32768))
  9074  0602  00B4               	movwf	stricmp@s2+1
  9075  0603  084A               	movf	parseCmd@p,w
  9076  0604  319A  223B  3184   	fcall	_stricmp
  9077  0607  0020               	movlb	0	; select bank0
  9078  0608  0833               	movf	?_stricmp,w
  9079  0609  0434               	iorwf	?_stricmp+1,w
  9080  060A  1D03               	btfss	3,2
  9081  060B  2E15               	goto	l6544
  9082                           
  9083                           ;cmd_parser.c: 51: s->c = CMD_PING;
  9084  060C  3015               	movlw	21
  9085  060D                     L19:	
  9086  060D  00C6               	movwf	??_parseCmd
  9087  060E  0845               	movf	parseCmd@s,w
  9088  060F  0086               	movwf	6
  9089  0610  3001               	movlw	1	; select bank2/3
  9090  0611  0087               	movwf	7
  9091  0612  0846               	movf	??_parseCmd,w
  9092  0613  0081               	movwf	1
  9093  0614  2E40               	goto	l6554
  9094  0615                     l6544:	
  9095                           
  9096                           ;cmd_parser.c: 54: else
  9097                           ;cmd_parser.c: 55: s->c = CMD_NONE;
  9098  0615  0845               	movf	parseCmd@s,w
  9099  0616  0086               	movwf	6
  9100  0617  3001               	movlw	1	; select bank2/3
  9101  0618  0087               	movwf	7
  9102  0619  0181               	clrf	1
  9103                           
  9104                           ;cmd_parser.c: 56: }
  9105  061A  2E40               	goto	l6554
  9106  061B                     l6546:	
  9107                           
  9108                           ;cmd_parser.c: 57: else if(paramIter == 1){
  9109  061B  0348               	decf	parseCmd@paramIter,w
  9110  061C  0449               	iorwf	parseCmd@paramIter+1,w
  9111  061D  1D03               	btfss	3,2
  9112  061E  2E2D               	goto	l6550
  9113                           
  9114                           ;cmd_parser.c: 58: s->p1.paramI = atoi(p);
  9115  061F  084A               	movf	parseCmd@p,w
  9116  0620  3196  26A1  3184   	fcall	_atoi
  9117  0623  0020               	movlb	0	; select bank0
  9118  0624  0A45               	incf	parseCmd@s,w
  9119  0625  0086               	movwf	6
  9120  0626  3001               	movlw	1	; select bank2/3
  9121  0627  0087               	movwf	7
  9122  0628  0837               	movf	?_atoi,w
  9123  0629  3FC0               	movwi [0]fsr1
  9124  062A  0838               	movf	?_atoi+1,w
  9125  062B  3FC1               	movwi [1]fsr1
  9126                           
  9127                           ;cmd_parser.c: 59: }
  9128  062C  2E40               	goto	l6554
  9129  062D                     l6550:	
  9130                           
  9131                           ;cmd_parser.c: 60: else if(paramIter == 2){
  9132  062D  3002               	movlw	2
  9133  062E  0648               	xorwf	parseCmd@paramIter,w
  9134  062F  0449               	iorwf	parseCmd@paramIter+1,w
  9135  0630  1D03               	btfss	3,2
  9136  0631  2E40               	goto	l6554
  9137                           
  9138                           ;cmd_parser.c: 62: s->p2.paramI = atoi(p);
  9139  0632  084A               	movf	parseCmd@p,w
  9140  0633  3196  26A1  3184   	fcall	_atoi
  9141  0636  0020               	movlb	0	; select bank0
  9142  0637  0845               	movf	parseCmd@s,w
  9143  0638  3E0B               	addlw	11
  9144  0639  0086               	movwf	6
  9145  063A  3001               	movlw	1	; select bank2/3
  9146  063B  0087               	movwf	7
  9147  063C  0837               	movf	?_atoi,w
  9148  063D  3FC0               	movwi [0]fsr1
  9149  063E  0838               	movf	?_atoi+1,w
  9150  063F  3FC1               	movwi [1]fsr1
  9151  0640                     l6554:	
  9152                           
  9153                           ;cmd_parser.c: 63: }
  9154                           ;cmd_parser.c: 65: paramIter++;
  9155  0640  3001               	movlw	1
  9156  0641  07C8               	addwf	parseCmd@paramIter,f
  9157  0642  3000               	movlw	0
  9158  0643  3DC9               	addwfc	parseCmd@paramIter+1,f
  9159  0644  30FF               	movlw	low ((STR_40+6)| (0+32768))
  9160  0645  00BF               	movwf	strtok@s2
  9161  0646  30A9               	movlw	high ((STR_40+6)| (0+32768))
  9162  0647  00C0               	movwf	strtok@s2+1
  9163  0648  3000               	movlw	0
  9164  0649  2CC0               	goto	L20
  9165  064A                     __end_of_parseCmd:	
  9166                           
  9167                           	psect	text2
  9168  1CC8                     __ptext2:	
  9169 ;; *************** function _strtok *****************
  9170 ;; Defined at:
  9171 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtok.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  s1              1    wreg     PTR unsigned char 
  9174 ;;		 -> readdata(20), NULL(0), 
  9175 ;;  s2              2   31[BANK0 ] PTR const unsigned char 
  9176 ;;		 -> STR_57(2), STR_56(2), 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;  s1              1   36[BANK0 ] PTR unsigned char 
  9179 ;;		 -> readdata(20), NULL(0), 
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  1    wreg      PTR unsigned char 
  9182 ;; Registers used:
  9183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9189 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9191 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9192 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9193 ;;Total ram usage:        6 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; Hardware stack levels required when called:    8
  9196 ;; This function calls:
  9197 ;;		_strcspn
  9198 ;;		_strspn
  9199 ;; This function is called by:
  9200 ;;		_parseCmd
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           
  9205                           ;psect for function _strtok
  9206  1CC8                     _strtok:	
  9207                           
  9208                           ;incstack = 0
  9209                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9210                           ;strtok@s1 stored from wreg
  9211  1CC8  0020               	movlb	0	; select bank0
  9212  1CC9  00C4               	movwf	strtok@s1
  9213  1CCA  0844               	movf	strtok@s1,w
  9214  1CCB  1D03               	btfss	3,2
  9215  1CCC  2CD1               	goto	l6144
  9216  1CCD  0854               	movf	strtok@sp,w
  9217  1CCE  00C1               	movwf	??_strtok
  9218  1CCF  0841               	movf	??_strtok,w
  9219  1CD0  00C4               	movwf	strtok@s1
  9220  1CD1                     l6144:	
  9221  1CD1  0844               	movf	strtok@s1,w
  9222  1CD2  1D03               	btfss	3,2
  9223  1CD3  2CD6               	goto	l6150
  9224  1CD4  3000               	movlw	0
  9225  1CD5  0008               	return
  9226  1CD6                     l6150:	
  9227  1CD6  0840               	movf	strtok@s2+1,w
  9228  1CD7  00B9               	movwf	strspn@s2+1
  9229  1CD8  083F               	movf	strtok@s2,w
  9230  1CD9  00B8               	movwf	strspn@s2
  9231  1CDA  0844               	movf	strtok@s1,w
  9232  1CDB  3199  21D8  319C   	fcall	_strspn
  9233  1CDE  0020               	movlb	0	; select bank0
  9234  1CDF  0838               	movf	?_strspn,w
  9235  1CE0  00C1               	movwf	??_strtok
  9236  1CE1  0841               	movf	??_strtok,w
  9237  1CE2  07C4               	addwf	strtok@s1,f
  9238  1CE3  0844               	movf	strtok@s1,w
  9239  1CE4  0086               	movwf	6
  9240  1CE5  3001               	movlw	1	; select bank2/3
  9241  1CE6  0087               	movwf	7
  9242  1CE7  0801               	movf	1,w
  9243  1CE8  1D03               	btfss	3,2
  9244  1CE9  2CED               	goto	l6158
  9245  1CEA  01D4               	clrf	strtok@sp
  9246  1CEB  3000               	movlw	0
  9247  1CEC  0008               	return
  9248  1CED                     l6158:	
  9249  1CED  0840               	movf	strtok@s2+1,w
  9250  1CEE  00B9               	movwf	strcspn@s2+1
  9251  1CEF  083F               	movf	strtok@s2,w
  9252  1CF0  00B8               	movwf	strcspn@s2
  9253  1CF1  0844               	movf	strtok@s1,w
  9254  1CF2  3199  21A8  319C   	fcall	_strcspn
  9255  1CF5  0020               	movlb	0	; select bank0
  9256  1CF6  0838               	movf	?_strcspn,w
  9257  1CF7  00C1               	movwf	??_strtok
  9258  1CF8  0839               	movf	?_strcspn+1,w
  9259  1CF9  00C2               	movwf	??_strtok+1
  9260  1CFA  0844               	movf	strtok@s1,w
  9261  1CFB  0741               	addwf	??_strtok,w
  9262  1CFC  00C3               	movwf	??_strtok+2
  9263  1CFD  0843               	movf	??_strtok+2,w
  9264  1CFE  00D4               	movwf	strtok@sp
  9265  1CFF  0854               	movf	strtok@sp,w
  9266  1D00  0086               	movwf	6
  9267  1D01  3001               	movlw	1	; select bank2/3
  9268  1D02  0087               	movwf	7
  9269  1D03  0801               	movf	1,w
  9270  1D04  1903               	btfsc	3,2
  9271  1D05  2D10               	goto	l6166
  9272  1D06  0854               	movf	strtok@sp,w
  9273  1D07  0086               	movwf	6
  9274  1D08  3001               	movlw	1	; select bank2/3
  9275  1D09  0087               	movwf	7
  9276  1D0A  0181               	clrf	1
  9277  1D0B  3001               	movlw	1
  9278  1D0C  00C1               	movwf	??_strtok
  9279  1D0D  0841               	movf	??_strtok,w
  9280  1D0E  07D4               	addwf	strtok@sp,f
  9281  1D0F  2D11               	goto	l6168
  9282  1D10                     l6166:	
  9283  1D10  01D4               	clrf	strtok@sp
  9284  1D11                     l6168:	
  9285  1D11  0844               	movf	strtok@s1,w
  9286  1D12  0008               	return
  9287  1D13                     __end_of_strtok:	
  9288                           
  9289                           	psect	text3
  9290  19D8                     __ptext3:	
  9291 ;; *************** function _strspn *****************
  9292 ;; Defined at:
  9293 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strspn.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;  s1              1    wreg     PTR const unsigned char 
  9296 ;;		 -> readdata(20), NULL(0), 
  9297 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9298 ;;		 -> STR_57(2), STR_56(2), 
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9301 ;;		 -> readdata(20), NULL(0), 
  9302 ;;  i               2   28[BANK0 ] unsigned int 
  9303 ;; Return value:  Size  Location     Type
  9304 ;;                  2   24[BANK0 ] unsigned int 
  9305 ;; Registers used:
  9306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9307 ;; Tracked objects:
  9308 ;;		On entry : 0/0
  9309 ;;		On exit  : 0/0
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9312 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9313 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9314 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9315 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9316 ;;Total ram usage:        7 bytes
  9317 ;; Hardware stack levels used:    1
  9318 ;; Hardware stack levels required when called:    7
  9319 ;; This function calls:
  9320 ;;		_strchr
  9321 ;; This function is called by:
  9322 ;;		_strtok
  9323 ;; This function uses a non-reentrant model
  9324 ;;
  9325                           
  9326                           
  9327                           ;psect for function _strspn
  9328  19D8                     _strspn:	
  9329                           
  9330                           ;incstack = 0
  9331                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9332                           ;strspn@s1 stored from wreg
  9333  19D8  0020               	movlb	0	; select bank0
  9334  19D9  00BE               	movwf	strspn@s1
  9335  19DA  01BC               	clrf	strspn@i
  9336  19DB  01BD               	clrf	strspn@i+1
  9337  19DC  29E5               	goto	l5654
  9338  19DD                     l5652:	
  9339  19DD  3001               	movlw	1
  9340  19DE  00BA               	movwf	??_strspn
  9341  19DF  083A               	movf	??_strspn,w
  9342  19E0  07BE               	addwf	strspn@s1,f
  9343  19E1  3001               	movlw	1
  9344  19E2  07BC               	addwf	strspn@i,f
  9345  19E3  3000               	movlw	0
  9346  19E4  3DBD               	addwfc	strspn@i+1,f
  9347  19E5                     l5654:	
  9348  19E5  083E               	movf	strspn@s1,w
  9349  19E6  0086               	movwf	6
  9350  19E7  3001               	movlw	1	; select bank2/3
  9351  19E8  0087               	movwf	7
  9352  19E9  0801               	movf	1,w
  9353  19EA  1903               	btfsc	3,2
  9354  19EB  2A03               	goto	l5658
  9355  19EC  0839               	movf	strspn@s2+1,w
  9356  19ED  00B2               	movwf	strchr@ptr+1
  9357  19EE  0838               	movf	strspn@s2,w
  9358  19EF  00B1               	movwf	strchr@ptr
  9359  19F0  083E               	movf	strspn@s1,w
  9360  19F1  0086               	movwf	6
  9361  19F2  3001               	movlw	1	; select bank2/3
  9362  19F3  0087               	movwf	7
  9363  19F4  0801               	movf	1,w
  9364  19F5  00BA               	movwf	??_strspn
  9365  19F6  01BB               	clrf	??_strspn+1
  9366  19F7  083A               	movf	??_strspn,w
  9367  19F8  00B3               	movwf	strchr@chr
  9368  19F9  083B               	movf	??_strspn+1,w
  9369  19FA  00B4               	movwf	strchr@chr+1
  9370  19FB  31A6  2622  3199   	fcall	_strchr
  9371  19FE  0020               	movlb	0	; select bank0
  9372  19FF  0831               	movf	?_strchr,w
  9373  1A00  0432               	iorwf	?_strchr+1,w
  9374  1A01  1D03               	btfss	3,2
  9375  1A02  29DD               	goto	l5652
  9376  1A03                     l5658:	
  9377  1A03  083D               	movf	strspn@i+1,w
  9378  1A04  00B9               	movwf	?_strspn+1
  9379  1A05  083C               	movf	strspn@i,w
  9380  1A06  00B8               	movwf	?_strspn
  9381  1A07  0008               	return
  9382  1A08                     __end_of_strspn:	
  9383                           
  9384                           	psect	text4
  9385  19A8                     __ptext4:	
  9386 ;; *************** function _strcspn *****************
  9387 ;; Defined at:
  9388 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcspn.c"
  9389 ;; Parameters:    Size  Location     Type
  9390 ;;  s1              1    wreg     PTR const unsigned char 
  9391 ;;		 -> readdata(20), NULL(0), 
  9392 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9393 ;;		 -> STR_57(2), STR_56(2), 
  9394 ;; Auto vars:     Size  Location     Type
  9395 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9396 ;;		 -> readdata(20), NULL(0), 
  9397 ;;  i               2   28[BANK0 ] unsigned int 
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  2   24[BANK0 ] unsigned int 
  9400 ;; Registers used:
  9401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9407 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9408 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9409 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9410 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9411 ;;Total ram usage:        7 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; Hardware stack levels required when called:    7
  9414 ;; This function calls:
  9415 ;;		_strchr
  9416 ;; This function is called by:
  9417 ;;		_strtok
  9418 ;; This function uses a non-reentrant model
  9419 ;;
  9420                           
  9421                           
  9422                           ;psect for function _strcspn
  9423  19A8                     _strcspn:	
  9424                           
  9425                           ;incstack = 0
  9426                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9427                           ;strcspn@s1 stored from wreg
  9428  19A8  0020               	movlb	0	; select bank0
  9429  19A9  00BE               	movwf	strcspn@s1
  9430  19AA  01BC               	clrf	strcspn@i
  9431  19AB  01BD               	clrf	strcspn@i+1
  9432  19AC  29B5               	goto	l5666
  9433  19AD                     l5664:	
  9434  19AD  3001               	movlw	1
  9435  19AE  00BA               	movwf	??_strcspn
  9436  19AF  083A               	movf	??_strcspn,w
  9437  19B0  07BE               	addwf	strcspn@s1,f
  9438  19B1  3001               	movlw	1
  9439  19B2  07BC               	addwf	strcspn@i,f
  9440  19B3  3000               	movlw	0
  9441  19B4  3DBD               	addwfc	strcspn@i+1,f
  9442  19B5                     l5666:	
  9443  19B5  083E               	movf	strcspn@s1,w
  9444  19B6  0086               	movwf	6
  9445  19B7  3001               	movlw	1	; select bank2/3
  9446  19B8  0087               	movwf	7
  9447  19B9  0801               	movf	1,w
  9448  19BA  1903               	btfsc	3,2
  9449  19BB  29D3               	goto	l5670
  9450  19BC  0839               	movf	strcspn@s2+1,w
  9451  19BD  00B2               	movwf	strchr@ptr+1
  9452  19BE  0838               	movf	strcspn@s2,w
  9453  19BF  00B1               	movwf	strchr@ptr
  9454  19C0  083E               	movf	strcspn@s1,w
  9455  19C1  0086               	movwf	6
  9456  19C2  3001               	movlw	1	; select bank2/3
  9457  19C3  0087               	movwf	7
  9458  19C4  0801               	movf	1,w
  9459  19C5  00BA               	movwf	??_strcspn
  9460  19C6  01BB               	clrf	??_strcspn+1
  9461  19C7  083A               	movf	??_strcspn,w
  9462  19C8  00B3               	movwf	strchr@chr
  9463  19C9  083B               	movf	??_strcspn+1,w
  9464  19CA  00B4               	movwf	strchr@chr+1
  9465  19CB  31A6  2622  3199   	fcall	_strchr
  9466  19CE  0020               	movlb	0	; select bank0
  9467  19CF  0831               	movf	?_strchr,w
  9468  19D0  0432               	iorwf	?_strchr+1,w
  9469  19D1  1903               	btfsc	3,2
  9470  19D2  29AD               	goto	l5664
  9471  19D3                     l5670:	
  9472  19D3  083D               	movf	strcspn@i+1,w
  9473  19D4  00B9               	movwf	?_strcspn+1
  9474  19D5  083C               	movf	strcspn@i,w
  9475  19D6  00B8               	movwf	?_strcspn
  9476  19D7  0008               	return
  9477  19D8                     __end_of_strcspn:	
  9478                           
  9479                           	psect	text5
  9480  2622                     __ptext5:	
  9481 ;; *************** function _strchr *****************
  9482 ;; Defined at:
  9483 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;  ptr             2   17[BANK0 ] PTR const unsigned char 
  9486 ;;		 -> STR_57(2), STR_56(2), 
  9487 ;;  chr             2   19[BANK0 ] int 
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;		None
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  2   17[BANK0 ] PTR unsigned char 
  9492 ;; Registers used:
  9493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9499 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9501 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9502 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9503 ;;Total ram usage:        7 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; Hardware stack levels required when called:    6
  9506 ;; This function calls:
  9507 ;;		Nothing
  9508 ;; This function is called by:
  9509 ;;		_strcspn
  9510 ;;		_strspn
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           
  9515                           ;psect for function _strchr
  9516  2622                     _strchr:	
  9517  2622                     l2031:	
  9518                           ;incstack = 0
  9519                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  9520                           
  9521  2622  0020               	movlb	0	; select bank0
  9522  2623  0831               	movf	strchr@ptr,w
  9523  2624  0084               	movwf	4
  9524  2625  0832               	movf	strchr@ptr+1,w
  9525  2626  0085               	movwf	5
  9526  2627  0800               	movf	0,w	;code access
  9527  2628  0633               	xorwf	strchr@chr,w
  9528  2629  1903               	btfsc	3,2
  9529  262A  0008               	return
  9530  262B  0832               	movf	strchr@ptr+1,w
  9531  262C  00B6               	movwf	??_strchr+1
  9532  262D  0831               	movf	strchr@ptr,w
  9533  262E  00B5               	movwf	??_strchr
  9534  262F  0AB1               	incf	strchr@ptr,f
  9535  2630  1903               	skipnz
  9536  2631  0AB2               	incf	strchr@ptr+1,f
  9537  2632  0835               	movf	??_strchr,w
  9538  2633  0084               	movwf	4
  9539  2634  0836               	movf	??_strchr+1,w
  9540  2635  0085               	movwf	5
  9541  2636  0012               	moviw fsr0++
  9542  2637  1D03               	btfss	3,2
  9543  2638  2E22               	goto	l2031
  9544  2639  01B1               	clrf	?_strchr
  9545  263A  01B2               	clrf	?_strchr+1
  9546  263B  0008               	return
  9547  263C                     __end_of_strchr:	
  9548                           
  9549                           	psect	text6
  9550  1A3B                     __ptext6:	
  9551 ;; *************** function _stricmp *****************
  9552 ;; Defined at:
  9553 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\stricmp.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;  s1              1    wreg     PTR const unsigned char 
  9556 ;;		 -> readdata(20), NULL(0), 
  9557 ;;  s2              2   19[BANK0 ] PTR const unsigned char 
  9558 ;;		 -> STR_78(5), STR_77(5), STR_76(7), STR_75(8), 
  9559 ;;		 -> STR_74(5), STR_73(5), STR_72(13), STR_71(7), 
  9560 ;;		 -> STR_70(8), STR_69(15), STR_68(14), STR_67(12), 
  9561 ;;		 -> STR_66(8), STR_65(8), STR_64(2), STR_63(5), 
  9562 ;;		 -> STR_62(5), STR_61(2), STR_60(4), STR_59(4), 
  9563 ;;		 -> STR_58(4), 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;  s1              1   24[BANK0 ] PTR const unsigned char 
  9566 ;;		 -> readdata(20), NULL(0), 
  9567 ;;  r               1   23[BANK0 ] char 
  9568 ;; Return value:  Size  Location     Type
  9569 ;;                  2   19[BANK0 ] int 
  9570 ;; Registers used:
  9571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9572 ;; Tracked objects:
  9573 ;;		On entry : 0/0
  9574 ;;		On exit  : 0/0
  9575 ;;		Unchanged: 0/0
  9576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9577 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9578 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9579 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9580 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9581 ;;Total ram usage:        6 bytes
  9582 ;; Hardware stack levels used:    1
  9583 ;; Hardware stack levels required when called:    7
  9584 ;; This function calls:
  9585 ;;		_toupper
  9586 ;; This function is called by:
  9587 ;;		_parseCmd
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           
  9592                           ;psect for function _stricmp
  9593  1A3B                     _stricmp:	
  9594                           
  9595                           ;incstack = 0
  9596                           ; Regs used in _stricmp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9597                           ;stricmp@s1 stored from wreg
  9598  1A3B  0020               	movlb	0	; select bank0
  9599  1A3C  00B8               	movwf	stricmp@s1
  9600  1A3D  2A46               	goto	l6176
  9601  1A3E                     l6174:	
  9602  1A3E  3001               	movlw	1
  9603  1A3F  00B5               	movwf	??_stricmp
  9604  1A40  0835               	movf	??_stricmp,w
  9605  1A41  07B8               	addwf	stricmp@s1,f
  9606  1A42  3001               	movlw	1
  9607  1A43  07B3               	addwf	stricmp@s2,f
  9608  1A44  3000               	movlw	0
  9609  1A45  3DB4               	addwfc	stricmp@s2+1,f
  9610  1A46                     l6176:	
  9611  1A46  0833               	movf	stricmp@s2,w
  9612  1A47  0084               	movwf	4
  9613  1A48  0834               	movf	stricmp@s2+1,w
  9614  1A49  0085               	movwf	5
  9615  1A4A  0800               	movf	0,w	;code access
  9616  1A4B  31A5  253B  319A   	fcall	_toupper
  9617  1A4E  3AFF               	xorlw	255
  9618  1A4F  3E01               	addlw	1
  9619  1A50  0020               	movlb	0	; select bank0
  9620  1A51  00B5               	movwf	??_stricmp
  9621  1A52  0838               	movf	stricmp@s1,w
  9622  1A53  0086               	movwf	6
  9623  1A54  3001               	movlw	1	; select bank2/3
  9624  1A55  0087               	movwf	7
  9625  1A56  0801               	movf	1,w
  9626  1A57  31A5  253B  319A   	fcall	_toupper
  9627  1A5A  0020               	movlb	0	; select bank0
  9628  1A5B  0735               	addwf	??_stricmp,w
  9629  1A5C  00B6               	movwf	??_stricmp+1
  9630  1A5D  0836               	movf	??_stricmp+1,w
  9631  1A5E  00B7               	movwf	stricmp@r
  9632  1A5F  0837               	movf	stricmp@r,w
  9633  1A60  1D03               	btfss	3,2
  9634  1A61  2A69               	goto	l6180
  9635  1A62  0838               	movf	stricmp@s1,w
  9636  1A63  0086               	movwf	6
  9637  1A64  3001               	movlw	1	; select bank2/3
  9638  1A65  0087               	movwf	7
  9639  1A66  0801               	movf	1,w
  9640  1A67  1D03               	btfss	3,2
  9641  1A68  2A3E               	goto	l6174
  9642  1A69                     l6180:	
  9643  1A69  0837               	movf	stricmp@r,w
  9644  1A6A  00B3               	movwf	?_stricmp
  9645  1A6B  01B4               	clrf	?_stricmp+1
  9646  1A6C  1BB3               	btfsc	?_stricmp,7
  9647  1A6D  03B4               	decf	?_stricmp+1,f
  9648  1A6E  0008               	return
  9649  1A6F                     __end_of_stricmp:	
  9650                           
  9651                           	psect	text7
  9652  253B                     __ptext7:	
  9653 ;; *************** function _toupper *****************
  9654 ;; Defined at:
  9655 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
  9656 ;; Parameters:    Size  Location     Type
  9657 ;;  c               1    wreg     unsigned char 
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;  c               1   18[BANK0 ] unsigned char 
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  1    wreg      unsigned char 
  9662 ;; Registers used:
  9663 ;;		wreg, status,2, status,0
  9664 ;; Tracked objects:
  9665 ;;		On entry : 0/0
  9666 ;;		On exit  : 0/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9671 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9672 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9673 ;;Total ram usage:        2 bytes
  9674 ;; Hardware stack levels used:    1
  9675 ;; Hardware stack levels required when called:    6
  9676 ;; This function calls:
  9677 ;;		Nothing
  9678 ;; This function is called by:
  9679 ;;		_stricmp
  9680 ;; This function uses a non-reentrant model
  9681 ;;
  9682                           
  9683                           
  9684                           ;psect for function _toupper
  9685  253B                     _toupper:	
  9686                           
  9687                           ;incstack = 0
  9688                           ; Regs used in _toupper: [wreg+status,2+status,0]
  9689                           ;toupper@c stored from wreg
  9690  253B  0020               	movlb	0	; select bank0
  9691  253C  00B2               	movwf	toupper@c
  9692  253D  307B               	movlw	123
  9693  253E  0232               	subwf	toupper@c,w
  9694  253F  1803               	skipnc
  9695  2540  2D49               	goto	l5646
  9696  2541  3061               	movlw	97
  9697  2542  0232               	subwf	toupper@c,w
  9698  2543  1C03               	skipc
  9699  2544  2D49               	goto	l5646
  9700  2545  30DF               	movlw	223
  9701  2546  00B1               	movwf	??_toupper
  9702  2547  0831               	movf	??_toupper,w
  9703  2548  05B2               	andwf	toupper@c,f
  9704  2549                     l5646:	
  9705  2549  0832               	movf	toupper@c,w
  9706  254A  0008               	return
  9707  254B                     __end_of_toupper:	
  9708                           
  9709                           	psect	text8
  9710  16A1                     __ptext8:	
  9711 ;; *************** function _atoi *****************
  9712 ;; Defined at:
  9713 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;  s               1    wreg     PTR const unsigned char 
  9716 ;;		 -> readdata(20), NULL(0), 
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;  s               1   30[BANK0 ] PTR const unsigned char 
  9719 ;;		 -> readdata(20), NULL(0), 
  9720 ;;  a               2   28[BANK0 ] int 
  9721 ;;  sign            1   27[BANK0 ] unsigned char 
  9722 ;; Return value:  Size  Location     Type
  9723 ;;                  2   23[BANK0 ] int 
  9724 ;; Registers used:
  9725 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9726 ;; Tracked objects:
  9727 ;;		On entry : 0/0
  9728 ;;		On exit  : 0/0
  9729 ;;		Unchanged: 0/0
  9730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9732 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9733 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9734 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9735 ;;Total ram usage:        8 bytes
  9736 ;; Hardware stack levels used:    1
  9737 ;; Hardware stack levels required when called:    7
  9738 ;; This function calls:
  9739 ;;		___wmul
  9740 ;;		_isdigit
  9741 ;; This function is called by:
  9742 ;;		_parseCmd
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           
  9747                           ;psect for function _atoi
  9748  16A1                     _atoi:	
  9749                           
  9750                           ;incstack = 0
  9751                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9752                           ;atoi@s stored from wreg
  9753  16A1  0020               	movlb	0	; select bank0
  9754  16A2  00BE               	movwf	atoi@s
  9755  16A3                     l6188:	
  9756  16A3  083E               	movf	atoi@s,w
  9757  16A4  0086               	movwf	6
  9758  16A5  3001               	movlw	1	; select bank2/3
  9759  16A6  0087               	movwf	7
  9760  16A7  3020               	movlw	32
  9761  16A8  0601               	xorwf	1,w
  9762  16A9  1D03               	btfss	3,2
  9763  16AA  2EB0               	goto	l6190
  9764  16AB                     l6186:	
  9765  16AB  3001               	movlw	1
  9766  16AC  00B9               	movwf	??_atoi
  9767  16AD  0839               	movf	??_atoi,w
  9768  16AE  07BE               	addwf	atoi@s,f
  9769  16AF  2EA3               	goto	l6188
  9770  16B0                     l6190:	
  9771  16B0  083E               	movf	atoi@s,w
  9772  16B1  0086               	movwf	6
  9773  16B2  3001               	movlw	1	; select bank2/3
  9774  16B3  0087               	movwf	7
  9775  16B4  3009               	movlw	9
  9776  16B5  0601               	xorwf	1,w
  9777  16B6  1903               	btfsc	3,2
  9778  16B7  2EAB               	goto	l6186
  9779  16B8  01BC               	clrf	atoi@a
  9780  16B9  01BD               	clrf	atoi@a+1
  9781  16BA  01BB               	clrf	atoi@sign
  9782  16BB  083E               	movf	atoi@s,w
  9783  16BC  0086               	movwf	6
  9784  16BD  3001               	movlw	1	; select bank2/3
  9785  16BE  0087               	movwf	7
  9786  16BF  302D               	movlw	45
  9787  16C0  0601               	xorwf	1,w
  9788  16C1  1D03               	btfss	3,2
  9789  16C2  2EC8               	goto	l6198
  9790  16C3  3001               	movlw	1
  9791  16C4  00B9               	movwf	??_atoi
  9792  16C5  0839               	movf	??_atoi,w
  9793  16C6  07BB               	addwf	atoi@sign,f
  9794  16C7  2ED0               	goto	l6204
  9795  16C8                     l6198:	
  9796  16C8  083E               	movf	atoi@s,w
  9797  16C9  0086               	movwf	6
  9798  16CA  3001               	movlw	1	; select bank2/3
  9799  16CB  0087               	movwf	7
  9800  16CC  302B               	movlw	43
  9801  16CD  0601               	xorwf	1,w
  9802  16CE  1D03               	btfss	3,2
  9803  16CF  2ED4               	goto	l6206
  9804  16D0                     l6204:	
  9805  16D0  3001               	movlw	1
  9806  16D1  00B9               	movwf	??_atoi
  9807  16D2  0839               	movf	??_atoi,w
  9808  16D3  07BE               	addwf	atoi@s,f
  9809  16D4                     l6206:	
  9810  16D4  083E               	movf	atoi@s,w
  9811  16D5  0086               	movwf	6
  9812  16D6  3001               	movlw	1	; select bank2/3
  9813  16D7  0087               	movwf	7
  9814  16D8  0801               	movf	1,w
  9815  16D9  31A5  251C  3196   	fcall	_isdigit
  9816  16DC  1C03               	btfss	3,0
  9817  16DD  2EFD               	goto	l6208
  9818  16DE  0020               	movlb	0	; select bank0
  9819  16DF  083D               	movf	atoi@a+1,w
  9820  16E0  00B2               	movwf	___wmul@multiplier+1
  9821  16E1  083C               	movf	atoi@a,w
  9822  16E2  00B1               	movwf	___wmul@multiplier
  9823  16E3  300A               	movlw	10
  9824  16E4  00B3               	movwf	___wmul@multiplicand
  9825  16E5  3000               	movlw	0
  9826  16E6  00B4               	movwf	___wmul@multiplicand+1
  9827  16E7  31A6  2658  3196   	fcall	___wmul
  9828  16EA  0020               	movlb	0	; select bank0
  9829  16EB  083E               	movf	atoi@s,w
  9830  16EC  0086               	movwf	6
  9831  16ED  3001               	movlw	1	; select bank2/3
  9832  16EE  0087               	movwf	7
  9833  16EF  0801               	movf	1,w
  9834  16F0  0731               	addwf	?___wmul,w
  9835  16F1  00B9               	movwf	??_atoi
  9836  16F2  0832               	movf	?___wmul+1,w
  9837  16F3  1803               	skipnc
  9838  16F4  0A32               	incf	?___wmul+1,w
  9839  16F5  00BA               	movwf	??_atoi+1
  9840  16F6  0839               	movf	??_atoi,w
  9841  16F7  3ED0               	addlw	208
  9842  16F8  00BC               	movwf	atoi@a
  9843  16F9  30FF               	movlw	255
  9844  16FA  3D3A               	addwfc	??_atoi+1,w
  9845  16FB  00BD               	movwf	atoi@a+1
  9846  16FC  2ED0               	goto	l6204
  9847  16FD                     l6208:	
  9848  16FD  0020               	movlb	0	; select bank0
  9849  16FE  083B               	movf	atoi@sign,w
  9850  16FF  1903               	btfsc	3,2
  9851  1700  2F0D               	goto	l6214
  9852  1701  093C               	comf	atoi@a,w
  9853  1702  00B9               	movwf	??_atoi
  9854  1703  093D               	comf	atoi@a+1,w
  9855  1704  00BA               	movwf	??_atoi+1
  9856  1705  0AB9               	incf	??_atoi,f
  9857  1706  1903               	skipnz
  9858  1707  0ABA               	incf	??_atoi+1,f
  9859  1708  0839               	movf	??_atoi,w
  9860  1709  00B7               	movwf	?_atoi
  9861  170A  083A               	movf	??_atoi+1,w
  9862  170B  00B8               	movwf	?_atoi+1
  9863  170C  0008               	return
  9864  170D                     l6214:	
  9865  170D  083D               	movf	atoi@a+1,w
  9866  170E  00B8               	movwf	?_atoi+1
  9867  170F  083C               	movf	atoi@a,w
  9868  1710  00B7               	movwf	?_atoi
  9869  1711  0008               	return
  9870  1712                     __end_of_atoi:	
  9871                           
  9872                           	psect	text9
  9873  251C                     __ptext9:	
  9874 ;; *************** function _isdigit *****************
  9875 ;; Defined at:
  9876 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  c               1    wreg     unsigned char 
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;  c               1   18[BANK0 ] unsigned char 
  9881 ;; Return value:  Size  Location     Type
  9882 ;;		None               void
  9883 ;; Registers used:
  9884 ;;		wreg, status,2, status,0
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9891 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9893 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9894 ;;Total ram usage:        2 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; Hardware stack levels required when called:    6
  9897 ;; This function calls:
  9898 ;;		Nothing
  9899 ;; This function is called by:
  9900 ;;		_atoi
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904                           
  9905                           ;psect for function _isdigit
  9906  251C                     _isdigit:	
  9907                           
  9908                           ;incstack = 0
  9909                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9910                           ;isdigit@c stored from wreg
  9911  251C  0020               	movlb	0	; select bank0
  9912  251D  00B2               	movwf	isdigit@c
  9913  251E  01B1               	clrf	_isdigit$2135
  9914  251F  303A               	movlw	58
  9915  2520  0232               	subwf	isdigit@c,w
  9916  2521  1803               	skipnc
  9917  2522  2D29               	goto	l5462
  9918  2523  3030               	movlw	48
  9919  2524  0232               	subwf	isdigit@c,w
  9920  2525  1C03               	skipc
  9921  2526  2D29               	goto	l5462
  9922  2527  01B1               	clrf	_isdigit$2135
  9923  2528  0AB1               	incf	_isdigit$2135,f
  9924  2529                     l5462:	
  9925  2529  0C31               	rrf	_isdigit$2135,w
  9926  252A  0008               	return
  9927  252B                     __end_of_isdigit:	
  9928                           
  9929                           	psect	text10
  9930  2658                     __ptext10:	
  9931 ;; *************** function ___wmul *****************
  9932 ;; Defined at:
  9933 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;  multiplier      2   17[BANK0 ] unsigned int 
  9936 ;;  multiplicand    2   19[BANK0 ] unsigned int 
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;  product         2   21[BANK0 ] unsigned int 
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  2   17[BANK0 ] unsigned int 
  9941 ;; Registers used:
  9942 ;;		wreg, status,2, status,0
  9943 ;; Tracked objects:
  9944 ;;		On entry : 0/0
  9945 ;;		On exit  : 0/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9948 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9949 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9951 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9952 ;;Total ram usage:        6 bytes
  9953 ;; Hardware stack levels used:    1
  9954 ;; Hardware stack levels required when called:    6
  9955 ;; This function calls:
  9956 ;;		Nothing
  9957 ;; This function is called by:
  9958 ;;		_atoi
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           
  9963                           ;psect for function ___wmul
  9964  2658                     ___wmul:	
  9965                           
  9966                           ;incstack = 0
  9967                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9968  2658  0020               	movlb	0	; select bank0
  9969  2659  01B5               	clrf	___wmul@product
  9970  265A  01B6               	clrf	___wmul@product+1
  9971  265B                     l5442:	
  9972  265B  1C31               	btfss	___wmul@multiplier,0
  9973  265C  2E61               	goto	l1558
  9974  265D  0833               	movf	___wmul@multiplicand,w
  9975  265E  07B5               	addwf	___wmul@product,f
  9976  265F  0834               	movf	___wmul@multiplicand+1,w
  9977  2660  3DB6               	addwfc	___wmul@product+1,f
  9978  2661                     l1558:	
  9979  2661  3001               	movlw	1
  9980  2662                     u4515:	
  9981  2662  35B3               	lslf	___wmul@multiplicand,f
  9982  2663  0DB4               	rlf	___wmul@multiplicand+1,f
  9983  2664  0B89               	decfsz	9,f
  9984  2665  2E62               	goto	u4515
  9985  2666  3001               	movlw	1
  9986  2667                     u4525:	
  9987  2667  36B2               	lsrf	___wmul@multiplier+1,f
  9988  2668  0CB1               	rrf	___wmul@multiplier,f
  9989  2669  0B89               	decfsz	9,f
  9990  266A  2E67               	goto	u4525
  9991  266B  0831               	movf	___wmul@multiplier,w
  9992  266C  0432               	iorwf	___wmul@multiplier+1,w
  9993  266D  1D03               	btfss	3,2
  9994  266E  2E5B               	goto	l5442
  9995  266F  0836               	movf	___wmul@product+1,w
  9996  2670  00B2               	movwf	?___wmul+1
  9997  2671  0835               	movf	___wmul@product,w
  9998  2672  00B1               	movwf	?___wmul
  9999  2673  0008               	return
 10000  2674                     __end_of___wmul:	
 10001                           
 10002                           	psect	text11
 10003  0B6A                     __ptext11:	
 10004 ;; *************** function _main_initialize *****************
 10005 ;; Defined at:
 10006 ;;		line 191 in file "main.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;		None
 10009 ;; Auto vars:     Size  Location     Type
 10010 ;;		None
 10011 ;; Return value:  Size  Location     Type
 10012 ;;                  1    wreg      void 
 10013 ;; Registers used:
 10014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10022 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10023 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10024 ;;Total ram usage:        2 bytes
 10025 ;; Hardware stack levels used:    1
 10026 ;; Hardware stack levels required when called:   15
 10027 ;; This function calls:
 10028 ;;		_LED_setBrightnessRange
 10029 ;;		_LEDsPwr
 10030 ;;		_TMR0_Load8bitPeriod
 10031 ;;		_TMR2_LoadPeriodRegister
 10032 ;;		___awtoft
 10033 ;;		___ftadd
 10034 ;;		___ftmul
 10035 ;;		___fttol
 10036 ;;		_drv_init
 10037 ;;		_printf
 10038 ;; This function is called by:
 10039 ;;		_main
 10040 ;; This function uses a non-reentrant model
 10041 ;;
 10042                           
 10043                           
 10044                           ;psect for function _main_initialize
 10045  0B6A                     _main_initialize:	
 10046                           
 10047                           ;main.c: 193: LEDsPwr(LEDpower, 1);
 10048                           
 10049                           ;incstack = 0
 10050                           ; Regs used in _main_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10051  0B6A  304D               	movlw	low (_LEDpower| (0+32768))
 10052  0B6B  0084               	movwf	4
 10053  0B6C  30AA               	movlw	high (_LEDpower| (0+32768))
 10054  0B6D  0085               	movwf	5
 10055  0B6E  3F00               	moviw [0]fsr0
 10056  0B6F  0020               	movlb	0	; select bank0
 10057  0B70  00C4               	movwf	LEDsPwr@pwr
 10058  0B71  3F01               	moviw [1]fsr0
 10059  0B72  00C5               	movwf	LEDsPwr@pwr+1
 10060  0B73  3001               	movlw	1
 10061  0B74  00C6               	movwf	LEDsPwr@topOrBottom
 10062  0B75  3000               	movlw	0
 10063  0B76  00C7               	movwf	LEDsPwr@topOrBottom+1
 10064  0B77  3195  256F  318B   	fcall	_LEDsPwr
 10065                           
 10066                           ;main.c: 194: LEDsPwr(LEDpower, 2);
 10067  0B7A  304D               	movlw	low (_LEDpower| (0+32768))
 10068  0B7B  0084               	movwf	4
 10069  0B7C  30AA               	movlw	high (_LEDpower| (0+32768))
 10070  0B7D  0085               	movwf	5
 10071  0B7E  3F00               	moviw [0]fsr0
 10072  0B7F  0020               	movlb	0	; select bank0
 10073  0B80  00C4               	movwf	LEDsPwr@pwr
 10074  0B81  3F01               	moviw [1]fsr0
 10075  0B82  00C5               	movwf	LEDsPwr@pwr+1
 10076  0B83  3002               	movlw	2
 10077  0B84  00C6               	movwf	LEDsPwr@topOrBottom
 10078  0B85  3000               	movlw	0
 10079  0B86  00C7               	movwf	LEDsPwr@topOrBottom+1
 10080  0B87  3195  256F  318B   	fcall	_LEDsPwr
 10081                           
 10082                           ;main.c: 196: LED_setBrightnessRange(1, 1);
 10083  0B8A  3001               	movlw	1
 10084  0B8B  0020               	movlb	0	; select bank0
 10085  0B8C  00C4               	movwf	LED_setBrightnessRange@range
 10086  0B8D  3000               	movlw	0
 10087  0B8E  00C5               	movwf	LED_setBrightnessRange@range+1
 10088  0B8F  3001               	movlw	1
 10089  0B90  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10090  0B91  3000               	movlw	0
 10091  0B92  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10092  0B93  318C  2445  318B   	fcall	_LED_setBrightnessRange
 10093                           
 10094                           ;main.c: 197: LED_setBrightnessRange(1, 2);
 10095  0B96  3001               	movlw	1
 10096  0B97  0020               	movlb	0	; select bank0
 10097  0B98  00C4               	movwf	LED_setBrightnessRange@range
 10098  0B99  3000               	movlw	0
 10099  0B9A  00C5               	movwf	LED_setBrightnessRange@range+1
 10100  0B9B  3002               	movlw	2
 10101  0B9C  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10102  0B9D  3000               	movlw	0
 10103  0B9E  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10104  0B9F  318C  2445  318B   	fcall	_LED_setBrightnessRange
 10105                           
 10106                           ;main.c: 200: TMR2_LoadPeriodRegister((heater_post_time_ms*TMR2_RANGE)-1);
 10107  0BA2  0021               	movlb	1	; select bank1
 10108  0BA3  086D               	movf	(_heater_post_time_ms+1)^(0+128),w
 10109  0BA4  0020               	movlb	0	; select bank0
 10110  0BA5  00BA               	movwf	___awtoft@c+1
 10111  0BA6  0021               	movlb	1	; select bank1
 10112  0BA7  086C               	movf	_heater_post_time_ms^(0+128),w
 10113  0BA8  0020               	movlb	0	; select bank0
 10114  0BA9  00B9               	movwf	___awtoft@c
 10115  0BAA  31A7  274F  318B   	fcall	___awtoft
 10116  0BAD  0020               	movlb	0	; select bank0
 10117  0BAE  0839               	movf	?___awtoft,w
 10118  0BAF  00C2               	movwf	___ftmul@f2
 10119  0BB0  083A               	movf	?___awtoft+1,w
 10120  0BB1  00C3               	movwf	___ftmul@f2+1
 10121  0BB2  083B               	movf	?___awtoft+2,w
 10122  0BB3  00C4               	movwf	___ftmul@f2+2
 10123  0BB4  3041               	movlw	low (_TMR2_RANGE| (0+32768))
 10124  0BB5  0084               	movwf	4
 10125  0BB6  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
 10126  0BB7  0085               	movwf	5
 10127  0BB8  3F00               	moviw [0]fsr0
 10128  0BB9  00BF               	movwf	___ftmul@f1
 10129  0BBA  3F01               	moviw [1]fsr0
 10130  0BBB  00C0               	movwf	___ftmul@f1+1
 10131  0BBC  3F02               	moviw [2]fsr0
 10132  0BBD  00C1               	movwf	___ftmul@f1+2
 10133  0BBE  318D  2523  318B   	fcall	___ftmul
 10134  0BC1  0020               	movlb	0	; select bank0
 10135  0BC2  083F               	movf	?___ftmul,w
 10136  0BC3  0021               	movlb	1	; select bank1
 10137  0BC4  00A9               	movwf	___ftadd@f2^(0+128)
 10138  0BC5  0020               	movlb	0	; select bank0
 10139  0BC6  0840               	movf	?___ftmul+1,w
 10140  0BC7  0021               	movlb	1	; select bank1
 10141  0BC8  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 10142  0BC9  0020               	movlb	0	; select bank0
 10143  0BCA  0841               	movf	?___ftmul+2,w
 10144  0BCB  0021               	movlb	1	; select bank1
 10145  0BCC  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 10146  0BCD  3000               	movlw	0
 10147  0BCE  00A6               	movwf	___ftadd@f1^(0+128)
 10148  0BCF  3080               	movlw	128
 10149  0BD0  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 10150  0BD1  30BF               	movlw	191
 10151  0BD2  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 10152  0BD3  318E  26E6  318B   	fcall	___ftadd
 10153  0BD6  0021               	movlb	1	; select bank1
 10154  0BD7  0826               	movf	?___ftadd^(0+128),w
 10155  0BD8  00AF               	movwf	___fttol@f1^(0+128)
 10156  0BD9  0827               	movf	(?___ftadd+1)^(0+128),w
 10157  0BDA  00B0               	movwf	(___fttol@f1+1)^(0+128)
 10158  0BDB  0828               	movf	(?___ftadd+2)^(0+128),w
 10159  0BDC  00B1               	movwf	(___fttol@f1+2)^(0+128)
 10160  0BDD  3188  2079  318B   	fcall	___fttol
 10161  0BE0  0021               	movlb	1	; select bank1
 10162  0BE1  082F               	movf	?___fttol^(0+128),w
 10163  0BE2  31A3  23BF  318B   	fcall	_TMR2_LoadPeriodRegister
 10164                           
 10165                           ;main.c: 201: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 10166  0BE5  0021               	movlb	1	; select bank1
 10167  0BE6  096E               	comf	_heater_pre_time_ms^(0+128),w
 10168  0BE7  00BD               	movwf	??_main_initialize^(0+128)
 10169  0BE8  096F               	comf	(_heater_pre_time_ms+1)^(0+128),w
 10170  0BE9  00BE               	movwf	(??_main_initialize^(0+128)+1)
 10171  0BEA  0ABD               	incf	??_main_initialize^(0+128),f
 10172  0BEB  1903               	skipnz
 10173  0BEC  0ABE               	incf	(??_main_initialize^(0+128)+1),f
 10174  0BED  086A               	movf	_piezo_on_time_ms^(0+128),w
 10175  0BEE  073D               	addwf	??_main_initialize^(0+128),w
 10176  0BEF  0020               	movlb	0	; select bank0
 10177  0BF0  00B9               	movwf	___awtoft@c
 10178  0BF1  0021               	movlb	1	; select bank1
 10179  0BF2  086B               	movf	(_piezo_on_time_ms+1)^(0+128),w
 10180  0BF3  3D3E               	addwfc	(??_main_initialize+1)^(0+128),w
 10181  0BF4  0020               	movlb	0	; select bank0
 10182  0BF5  00BA               	movwf	___awtoft@c+1
 10183  0BF6  31A7  274F  318B   	fcall	___awtoft
 10184  0BF9  0020               	movlb	0	; select bank0
 10185  0BFA  0839               	movf	?___awtoft,w
 10186  0BFB  00C2               	movwf	___ftmul@f2
 10187  0BFC  083A               	movf	?___awtoft+1,w
 10188  0BFD  00C3               	movwf	___ftmul@f2+1
 10189  0BFE  083B               	movf	?___awtoft+2,w
 10190  0BFF  00C4               	movwf	___ftmul@f2+2
 10191  0C00  3044               	movlw	low (_TMR0_RANGE| (0+32768))
 10192  0C01  0084               	movwf	4
 10193  0C02  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 10194  0C03  0085               	movwf	5
 10195  0C04  3F00               	moviw [0]fsr0
 10196  0C05  00BF               	movwf	___ftmul@f1
 10197  0C06  3F01               	moviw [1]fsr0
 10198  0C07  00C0               	movwf	___ftmul@f1+1
 10199  0C08  3F02               	moviw [2]fsr0
 10200  0C09  00C1               	movwf	___ftmul@f1+2
 10201  0C0A  318D  2523  318B   	fcall	___ftmul
 10202  0C0D  0020               	movlb	0	; select bank0
 10203  0C0E  083F               	movf	?___ftmul,w
 10204  0C0F  0021               	movlb	1	; select bank1
 10205  0C10  00A9               	movwf	___ftadd@f2^(0+128)
 10206  0C11  0020               	movlb	0	; select bank0
 10207  0C12  0840               	movf	?___ftmul+1,w
 10208  0C13  0021               	movlb	1	; select bank1
 10209  0C14  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 10210  0C15  0020               	movlb	0	; select bank0
 10211  0C16  0841               	movf	?___ftmul+2,w
 10212  0C17  0021               	movlb	1	; select bank1
 10213  0C18  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 10214  0C19  3000               	movlw	0
 10215  0C1A  00A6               	movwf	___ftadd@f1^(0+128)
 10216  0C1B  3080               	movlw	128
 10217  0C1C  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 10218  0C1D  30BF               	movlw	191
 10219  0C1E  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 10220  0C1F  318E  26E6  318B   	fcall	___ftadd
 10221  0C22  0021               	movlb	1	; select bank1
 10222  0C23  0826               	movf	?___ftadd^(0+128),w
 10223  0C24  00AF               	movwf	___fttol@f1^(0+128)
 10224  0C25  0827               	movf	(?___ftadd+1)^(0+128),w
 10225  0C26  00B0               	movwf	(___fttol@f1+1)^(0+128)
 10226  0C27  0828               	movf	(?___ftadd+2)^(0+128),w
 10227  0C28  00B1               	movwf	(___fttol@f1+2)^(0+128)
 10228  0C29  3188  2079  318B   	fcall	___fttol
 10229  0C2C  0021               	movlb	1	; select bank1
 10230  0C2D  082F               	movf	?___fttol^(0+128),w
 10231  0C2E  31A3  23BA  318B   	fcall	_TMR0_Load8bitPeriod
 10232                           
 10233                           ;main.c: 204: drv_init(0x03, 0x0c);
 10234  0C31  3003               	movlw	3
 10235  0C32  0021               	movlb	1	; select bank1
 10236  0C33  00B8               	movwf	drv_init@output_gain^(0+128)
 10237  0C34  3000               	movlw	0
 10238  0C35  00B9               	movwf	(drv_init@output_gain^(0+128)+1)
 10239  0C36  300C               	movlw	12
 10240  0C37  00BA               	movwf	drv_init@idle_timeout^(0+128)
 10241  0C38  3000               	movlw	0
 10242  0C39  00BB               	movwf	(drv_init@idle_timeout^(0+128)+1)
 10243  0C3A  3195  250C  318B   	fcall	_drv_init
 10244                           
 10245                           ;main.c: 205: printf("initialized\n");
 10246  0C3D  30EC               	movlw	low ((STR_51+4)| (0+32768))
 10247  0C3E  0021               	movlb	1	; select bank1
 10248  0C3F  00A0               	movwf	printf@f^(0+128)
 10249  0C40  30A8               	movlw	high ((STR_51+4)| (0+32768))
 10250  0C41  00A1               	movwf	(printf@f^(0+128)+1)
 10251  0C42  3186  264A         	fcall	_printf
 10252  0C44  0008               	return
 10253  0C45                     __end_of_main_initialize:	
 10254                           
 10255                           	psect	text12
 10256  150C                     __ptext12:	
 10257 ;; *************** function _drv_init *****************
 10258 ;; Defined at:
 10259 ;;		line 3 in file "drv2665.c"
 10260 ;; Parameters:    Size  Location     Type
 10261 ;;  output_gain     2   24[BANK1 ] int 
 10262 ;;  idle_timeout    2   26[BANK1 ] int 
 10263 ;; Auto vars:     Size  Location     Type
 10264 ;;		None
 10265 ;; Return value:  Size  Location     Type
 10266 ;;                  1    wreg      void 
 10267 ;; Registers used:
 10268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10269 ;; Tracked objects:
 10270 ;;		On entry : 0/0
 10271 ;;		On exit  : 0/0
 10272 ;;		Unchanged: 0/0
 10273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10274 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10276 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10277 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10278 ;;Total ram usage:        5 bytes
 10279 ;; Hardware stack levels used:    1
 10280 ;; Hardware stack levels required when called:   14
 10281 ;; This function calls:
 10282 ;;		_drv_reset
 10283 ;;		_drv_write
 10284 ;;		_i2c_open
 10285 ;;		_i2c_setAddress
 10286 ;;		_printf
 10287 ;; This function is called by:
 10288 ;;		_main_initialize
 10289 ;; This function uses a non-reentrant model
 10290 ;;
 10291                           
 10292                           
 10293                           ;psect for function _drv_init
 10294  150C                     _drv_init:	
 10295                           
 10296                           ;drv2665.c: 5: i2c_setAddress(drv_address);
 10297                           
 10298                           ;incstack = 0
 10299                           ; Regs used in _drv_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10300  150C  3055               	movlw	low (_drv_address| (0+32768))
 10301  150D  0084               	movwf	4
 10302  150E  30AA               	movlw	high (_drv_address| (0+32768))
 10303  150F  0085               	movwf	5
 10304  1510  0800               	movf	0,w	;code access
 10305  1511  31A4  244A  3195   	fcall	_i2c_setAddress
 10306                           
 10307                           ;drv2665.c: 6: i2c_open(drv_address);
 10308  1514  3055               	movlw	low (_drv_address| (0+32768))
 10309  1515  0084               	movwf	4
 10310  1516  30AA               	movlw	high (_drv_address| (0+32768))
 10311  1517  0085               	movwf	5
 10312  1518  0800               	movf	0,w	;code access
 10313  1519  319D  2513  3195   	fcall	_i2c_open
 10314                           
 10315                           ;drv2665.c: 7: _delay((unsigned long)((10)*(1000000/4000.0)));
 10316  151C  3004               	movlw	4
 10317  151D  0021               	movlb	1	; select bank1
 10318  151E  00BC               	movwf	??_drv_init^(0+128)
 10319  151F  303D               	movlw	61
 10320  1520                     u8797:	
 10321  1520  0B89               	decfsz	9,f
 10322  1521  2D20               	goto	u8797
 10323  1522  0BBC               	decfsz	??_drv_init^(0+128),f
 10324  1523  2D20               	goto	u8797
 10325  1524  3200               	nop2
 10326                           
 10327                           ;drv2665.c: 9: drv_reset();
 10328  1525  31A4  249D  3195   	fcall	_drv_reset
 10329                           
 10330                           ;drv2665.c: 10: _delay((unsigned long)((10)*(1000000/4000.0)));
 10331  1528  3004               	movlw	4
 10332  1529  0021               	movlb	1	; select bank1
 10333  152A  00BC               	movwf	??_drv_init^(0+128)
 10334  152B  303D               	movlw	61
 10335  152C                     u8807:	
 10336  152C  0B89               	decfsz	9,f
 10337  152D  2D2C               	goto	u8807
 10338  152E  0BBC               	decfsz	??_drv_init^(0+128),f
 10339  152F  2D2C               	goto	u8807
 10340  1530  3200               	nop2
 10341                           
 10342                           ;drv2665.c: 11: drv_write(0x02, 0);
 10343  1531  0020               	movlb	0	; select bank0
 10344  1532  01C9               	clrf	drv_write@data
 10345  1533  3002               	movlw	2
 10346  1534  31A7  27DC  3195   	fcall	_drv_write
 10347                           
 10348                           ;drv2665.c: 12: _delay((unsigned long)((10)*(1000000/4000.0)));
 10349  1537  3004               	movlw	4
 10350  1538  0021               	movlb	1	; select bank1
 10351  1539  00BC               	movwf	??_drv_init^(0+128)
 10352  153A  303D               	movlw	61
 10353  153B                     u8817:	
 10354  153B  0B89               	decfsz	9,f
 10355  153C  2D3B               	goto	u8817
 10356  153D  0BBC               	decfsz	??_drv_init^(0+128),f
 10357  153E  2D3B               	goto	u8817
 10358  153F  3200               	nop2
 10359                           
 10360                           ;drv2665.c: 13: drv_write(0x01, 0x38 | output_gain);
 10361  1540  0021               	movlb	1	; select bank1
 10362  1541  0838               	movf	drv_init@output_gain^(0+128),w
 10363  1542  3838               	iorlw	56
 10364  1543  00BC               	movwf	??_drv_init^(0+128)
 10365  1544  083C               	movf	??_drv_init^(0+128),w
 10366  1545  0020               	movlb	0	; select bank0
 10367  1546  00C9               	movwf	drv_write@data
 10368  1547  3001               	movlw	1
 10369  1548  31A7  27DC  3195   	fcall	_drv_write
 10370                           
 10371                           ;drv2665.c: 15: _delay((unsigned long)((10)*(1000000/4000.0)));
 10372  154B  3004               	movlw	4
 10373  154C  0021               	movlb	1	; select bank1
 10374  154D  00BC               	movwf	??_drv_init^(0+128)
 10375  154E  303D               	movlw	61
 10376  154F                     u8827:	
 10377  154F  0B89               	decfsz	9,f
 10378  1550  2D4F               	goto	u8827
 10379  1551  0BBC               	decfsz	??_drv_init^(0+128),f
 10380  1552  2D4F               	goto	u8827
 10381  1553  3200               	nop2
 10382                           
 10383                           ;drv2665.c: 16: drv_write(0x02, idle_timeout);
 10384  1554  0021               	movlb	1	; select bank1
 10385  1555  083A               	movf	drv_init@idle_timeout^(0+128),w
 10386  1556  00BC               	movwf	??_drv_init^(0+128)
 10387  1557  083C               	movf	??_drv_init^(0+128),w
 10388  1558  0020               	movlb	0	; select bank0
 10389  1559  00C9               	movwf	drv_write@data
 10390  155A  3002               	movlw	2
 10391  155B  31A7  27DC  3195   	fcall	_drv_write
 10392                           
 10393                           ;drv2665.c: 18: _delay((unsigned long)((10)*(1000000/4000.0)));
 10394  155E  3004               	movlw	4
 10395  155F  0021               	movlb	1	; select bank1
 10396  1560  00BC               	movwf	??_drv_init^(0+128)
 10397  1561  303D               	movlw	61
 10398  1562                     u8837:	
 10399  1562  0B89               	decfsz	9,f
 10400  1563  2D62               	goto	u8837
 10401  1564  0BBC               	decfsz	??_drv_init^(0+128),f
 10402  1565  2D62               	goto	u8837
 10403  1566  3200               	nop2
 10404                           
 10405                           ;drv2665.c: 20: printf("drv initialized\n");
 10406  1567  30E8               	movlw	low (STR_51| (0+32768))
 10407  1568  0021               	movlb	1	; select bank1
 10408  1569  00A0               	movwf	printf@f^(0+128)
 10409  156A  30A8               	movlw	high (STR_51| (0+32768))
 10410  156B  00A1               	movwf	(printf@f^(0+128)+1)
 10411  156C  3186  264A         	fcall	_printf
 10412  156E  0008               	return
 10413  156F                     __end_of_drv_init:	
 10414                           
 10415                           	psect	text13
 10416  244A                     __ptext13:	
 10417 ;; *************** function _i2c_setAddress *****************
 10418 ;; Defined at:
 10419 ;;		line 156 in file "mcc_generated_files/drivers/i2c_master.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;  address         1    wreg     unsigned char 
 10422 ;; Auto vars:     Size  Location     Type
 10423 ;;  address         1   18[BANK0 ] unsigned char 
 10424 ;; Return value:  Size  Location     Type
 10425 ;;                  1    wreg      void 
 10426 ;; Registers used:
 10427 ;;		wreg
 10428 ;; Tracked objects:
 10429 ;;		On entry : 0/0
 10430 ;;		On exit  : 0/0
 10431 ;;		Unchanged: 0/0
 10432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10434 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10435 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10436 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10437 ;;Total ram usage:        2 bytes
 10438 ;; Hardware stack levels used:    1
 10439 ;; Hardware stack levels required when called:    6
 10440 ;; This function calls:
 10441 ;;		Nothing
 10442 ;; This function is called by:
 10443 ;;		_drv_init
 10444 ;; This function uses a non-reentrant model
 10445 ;;
 10446                           
 10447                           
 10448                           ;psect for function _i2c_setAddress
 10449  244A                     _i2c_setAddress:	
 10450                           
 10451                           ;incstack = 0
 10452                           ; Regs used in _i2c_setAddress: [wreg]
 10453                           ;i2c_setAddress@address stored from wreg
 10454  244A  0020               	movlb	0	; select bank0
 10455  244B  00B2               	movwf	i2c_setAddress@address
 10456                           
 10457                           ;i2c_master.c: 158: i2c_status.address = address;
 10458  244C  0832               	movf	i2c_setAddress@address,w
 10459  244D  00B1               	movwf	??_i2c_setAddress
 10460  244E  0831               	movf	??_i2c_setAddress,w
 10461  244F  0022               	movlb	2	; select bank2
 10462  2450  00A1               	movwf	(_i2c_status^(0+256)+1)
 10463  2451  0008               	return
 10464  2452                     __end_of_i2c_setAddress:	
 10465                           
 10466                           	psect	text14
 10467  1D13                     __ptext14:	
 10468 ;; *************** function _i2c_open *****************
 10469 ;; Defined at:
 10470 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;  address         1    wreg     unsigned char 
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;  address         1   21[BANK0 ] unsigned char 
 10475 ;;  ret             1   20[BANK0 ] enum E8193
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  1    wreg      enum E8193
 10478 ;; Registers used:
 10479 ;;		wreg, status,2, status,0, pclath, cstack
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10486 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10487 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10488 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10489 ;;Total ram usage:        3 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; Hardware stack levels required when called:    7
 10492 ;; This function calls:
 10493 ;;		_i2c1_driver_open
 10494 ;;		_i2c1_driver_setBusCollisionISR
 10495 ;;		_i2c1_driver_setI2cISR
 10496 ;;		_mssp1_clearIRQ
 10497 ;; This function is called by:
 10498 ;;		_drv_init
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           
 10503                           ;psect for function _i2c_open
 10504  1D13                     _i2c_open:	
 10505                           
 10506                           ;incstack = 0
 10507                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
 10508                           ;i2c_open@address stored from wreg
 10509  1D13  0020               	movlb	0	; select bank0
 10510  1D14  00B5               	movwf	i2c_open@address
 10511                           
 10512                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
 10513  1D15  01B4               	clrf	i2c_open@ret
 10514  1D16  0AB4               	incf	i2c_open@ret,f
 10515                           
 10516                           ;i2c_master.c: 120: if(!i2c_status.inUse)
 10517  1D17  0022               	movlb	2	; select bank2
 10518  1D18  18A0               	btfsc	_i2c_status^(0+256),1
 10519  1D19  0008               	return
 10520                           
 10521                           ;i2c_master.c: 121: {
 10522                           ;i2c_master.c: 122: i2c_status.address = address;
 10523  1D1A  0020               	movlb	0	; select bank0
 10524  1D1B  0835               	movf	i2c_open@address,w
 10525  1D1C  00B3               	movwf	??_i2c_open
 10526  1D1D  0833               	movf	??_i2c_open,w
 10527  1D1E  0022               	movlb	2	; select bank2
 10528  1D1F  00A1               	movwf	(_i2c_status^(0+256)+1)
 10529                           
 10530                           ;i2c_master.c: 123: i2c_status.busy = 0;
 10531  1D20  1020               	bcf	_i2c_status^(0+256),0
 10532                           
 10533                           ;i2c_master.c: 124: i2c_status.inUse = 1;
 10534  1D21  14A0               	bsf	_i2c_status^(0+256),1
 10535                           
 10536                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
 10537  1D22  11A0               	bcf	_i2c_status^(0+256),3
 10538                           
 10539                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
 10540  1D23  300E               	movlw	14
 10541  1D24  0020               	movlb	0	; select bank0
 10542  1D25  00B3               	movwf	??_i2c_open
 10543  1D26  0833               	movf	??_i2c_open,w
 10544  1D27  0022               	movlb	2	; select bank2
 10545  1D28  00AA               	movwf	(_i2c_status^(0+256)+10)
 10546                           
 10547                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
 10548  1D29  30F4               	movlw	244
 10549  1D2A  00A8               	movwf	(_i2c_status^(0+256)+8)
 10550  1D2B  3001               	movlw	1
 10551  1D2C  00A9               	movwf	(_i2c_status^(0+256)+9)
 10552                           
 10553                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
 10554  1D2D  1520               	bsf	_i2c_status^(0+256),2
 10555                           
 10556                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
 10557  1D2E  30CA               	movlw	low _returnStop
 10558  1D2F  00AC               	movwf	(low ((_i2c_status| (0+256)+12)))^0
 10559  1D30  3023               	movlw	high _returnStop
 10560  1D31  00AD               	movwf	((low ((_i2c_status| (0+256)+12)))^0+1)
 10561                           
 10562                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
 10563  1D32  01B8               	clrf	(low ((_i2c_status| (0+256)+24)))^0
 10564                           
 10565                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
 10566  1D33  30CA               	movlw	low _returnStop
 10567  1D34  00AE               	movwf	(low ((_i2c_status| (0+256)+14)))^0
 10568  1D35  3023               	movlw	high _returnStop
 10569  1D36  00AF               	movwf	((low ((_i2c_status| (0+256)+14)))^0+1)
 10570                           
 10571                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
 10572  1D37  01B9               	clrf	(low ((_i2c_status| (0+256)+25)))^0
 10573                           
 10574                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
 10575  1D38  30CA               	movlw	low _returnStop
 10576  1D39  00B0               	movwf	(low ((_i2c_status| (0+256)+16)))^0
 10577  1D3A  3023               	movlw	high _returnStop
 10578  1D3B  00B1               	movwf	((low ((_i2c_status| (0+256)+16)))^0+1)
 10579                           
 10580                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
 10581  1D3C  01BA               	clrf	(low ((_i2c_status| (0+256)+26)))^0
 10582                           
 10583                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
 10584  1D3D  30CA               	movlw	low _returnStop
 10585  1D3E  00B2               	movwf	(low ((_i2c_status| (0+256)+18)))^0
 10586  1D3F  3023               	movlw	high _returnStop
 10587  1D40  00B3               	movwf	((low ((_i2c_status| (0+256)+18)))^0+1)
 10588                           
 10589                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
 10590  1D41  01BB               	clrf	(low ((_i2c_status| (0+256)+27)))^0
 10591                           
 10592                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
 10593  1D42  30D0               	movlw	low _returnReset
 10594  1D43  00B4               	movwf	(low ((_i2c_status| (0+256)+20)))^0
 10595  1D44  3023               	movlw	high _returnReset
 10596  1D45  00B5               	movwf	((low ((_i2c_status| (0+256)+20)))^0+1)
 10597                           
 10598                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
 10599  1D46  01BC               	clrf	(low ((_i2c_status| (0+256)+28)))^0
 10600                           
 10601                           ;i2c_master.c: 142: i2c1_driver_open();
 10602  1D47  31A4  24A7  319D   	fcall	_i2c1_driver_open
 10603                           
 10604                           ;i2c_master.c: 143: mssp1_clearIRQ();
 10605  1D4A  31A3  236F  319D   	fcall	_mssp1_clearIRQ
 10606                           
 10607                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
 10608  1D4D  3042               	movlw	low _i2c_busCollisionISR
 10609  1D4E  0020               	movlb	0	; select bank0
 10610  1D4F  00B1               	movwf	i2c1_driver_setBusCollisionISR@f
 10611  1D50  3023               	movlw	high _i2c_busCollisionISR
 10612  1D51  00B2               	movwf	i2c1_driver_setBusCollisionISR@f+1
 10613  1D52  31A4  2476  319D   	fcall	_i2c1_driver_setBusCollisionISR
 10614                           
 10615                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
 10616  1D55  3050               	movlw	low _i2c_ISR
 10617  1D56  0020               	movlb	0	; select bank0
 10618  1D57  00B1               	movwf	i2c1_driver_setI2cISR@f
 10619  1D58  3018               	movlw	high _i2c_ISR
 10620  1D59  00B2               	movwf	i2c1_driver_setI2cISR@f+1
 10621  1D5A  3187  27F7         	fcall	_i2c1_driver_setI2cISR
 10622                           
 10623                           ;i2c_master.c: 151: ret = I2C_NOERR;
 10624  1D5C  0020               	movlb	0	; select bank0
 10625  1D5D  01B4               	clrf	i2c_open@ret
 10626  1D5E  0008               	return
 10627  1D5F                     __end_of_i2c_open:	
 10628                           ;i2c_master.c: 152: }
 10629                           ;i2c_master.c: 153: return ret;
 10630                           ;	Return value of _i2c_open is never used
 10631                           
 10632                           
 10633                           	psect	text15
 10634  07F7                     __ptext15:	
 10635 ;; *************** function _i2c1_driver_setI2cISR *****************
 10636 ;; Defined at:
 10637 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
 10638 ;; Parameters:    Size  Location     Type
 10639 ;;  f               2   17[BANK0 ] PTR void 
 10640 ;;		 -> i2c_ISR(1), 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;		None
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  1    wreg      void 
 10645 ;; Registers used:
 10646 ;;		wreg
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10652 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10655 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10656 ;;Total ram usage:        2 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:    6
 10659 ;; This function calls:
 10660 ;;		Nothing
 10661 ;; This function is called by:
 10662 ;;		_i2c_open
 10663 ;; This function uses a non-reentrant model
 10664 ;;
 10665                           
 10666                           
 10667                           ;psect for function _i2c1_driver_setI2cISR
 10668  07F7                     _i2c1_driver_setI2cISR:	
 10669                           
 10670                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
 10671                           
 10672                           ;incstack = 0
 10673                           ; Regs used in _i2c1_driver_setI2cISR: [wreg]
 10674  07F7  0020               	movlb	0	; select bank0
 10675  07F8  0832               	movf	i2c1_driver_setI2cISR@f+1,w
 10676  07F9  0022               	movlb	2	; select bank2
 10677  07FA  00E5               	movwf	(_i2c1_driver_i2cISR+1)^(0+256)
 10678  07FB  0020               	movlb	0	; select bank0
 10679  07FC  0831               	movf	i2c1_driver_setI2cISR@f,w
 10680  07FD  0022               	movlb	2	; select bank2
 10681  07FE  00E4               	movwf	_i2c1_driver_i2cISR^(0+256)
 10682  07FF  0008               	return
 10683  0800                     __end_of_i2c1_driver_setI2cISR:	
 10684                           
 10685                           	psect	text16
 10686  2476                     __ptext16:	
 10687 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
 10688 ;; Defined at:
 10689 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;  f               2   17[BANK0 ] PTR void 
 10692 ;;		 -> i2c_busCollisionISR(1), 
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;		None
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  1    wreg      void 
 10697 ;; Registers used:
 10698 ;;		wreg
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10707 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10708 ;;Total ram usage:        2 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; Hardware stack levels required when called:    6
 10711 ;; This function calls:
 10712 ;;		Nothing
 10713 ;; This function is called by:
 10714 ;;		_i2c_open
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718                           
 10719                           ;psect for function _i2c1_driver_setBusCollisionISR
 10720  2476                     _i2c1_driver_setBusCollisionISR:	
 10721                           
 10722                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
 10723                           
 10724                           ;incstack = 0
 10725                           ; Regs used in _i2c1_driver_setBusCollisionISR: [wreg]
 10726  2476  0020               	movlb	0	; select bank0
 10727  2477  0832               	movf	i2c1_driver_setBusCollisionISR@f+1,w
 10728  2478  0021               	movlb	1	; select bank1
 10729  2479  00E9               	movwf	(_i2c1_driver_busCollisionISR+1)^(0+128)
 10730  247A  0020               	movlb	0	; select bank0
 10731  247B  0831               	movf	i2c1_driver_setBusCollisionISR@f,w
 10732  247C  0021               	movlb	1	; select bank1
 10733  247D  00E8               	movwf	_i2c1_driver_busCollisionISR^(0+128)
 10734  247E  0008               	return
 10735  247F                     __end_of_i2c1_driver_setBusCollisionISR:	
 10736                           
 10737                           	psect	text17
 10738  24A7                     __ptext17:	
 10739 ;; *************** function _i2c1_driver_open *****************
 10740 ;; Defined at:
 10741 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;		None
 10744 ;; Auto vars:     Size  Location     Type
 10745 ;;		None
 10746 ;; Return value:  Size  Location     Type
 10747 ;;		None               void
 10748 ;; Registers used:
 10749 ;;		wreg, status,2
 10750 ;; Tracked objects:
 10751 ;;		On entry : 0/0
 10752 ;;		On exit  : 0/0
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10759 ;;Total ram usage:        0 bytes
 10760 ;; Hardware stack levels used:    1
 10761 ;; Hardware stack levels required when called:    6
 10762 ;; This function calls:
 10763 ;;		Nothing
 10764 ;; This function is called by:
 10765 ;;		_i2c_open
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           
 10769                           
 10770                           ;psect for function _i2c1_driver_open
 10771  24A7                     _i2c1_driver_open:	
 10772                           
 10773                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 10774                           
 10775                           ;incstack = 0
 10776                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 10777  24A7  0024               	movlb	4	; select bank4
 10778  24A8  1A95               	btfsc	21,5	;volatile
 10779  24A9  0008               	return
 10780                           
 10781                           ;i2c1_driver.c: 86: {
 10782                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
 10783  24AA  0194               	clrf	20	;volatile
 10784                           
 10785                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 10786  24AB  3028               	movlw	40
 10787  24AC  0095               	movwf	21	;volatile
 10788                           
 10789                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 10790  24AD  0196               	clrf	22	;volatile
 10791                           
 10792                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 10793  24AE  3003               	movlw	3
 10794  24AF  0092               	movwf	18	;volatile
 10795                           
 10796                           ;i2c1_driver.c: 93: else
 10797                           ;i2c1_driver.c: 94: return 0;
 10798                           ;	Return value of _i2c1_driver_open is never used
 10799                           
 10800                           ;i2c1_driver.c: 92: }
 10801                           
 10802                           ;i2c1_driver.c: 91: return 1;
 10803                           ;	Return value of _i2c1_driver_open is never used
 10804  24B0  0008               	return
 10805  24B1                     __end_of_i2c1_driver_open:	
 10806                           
 10807                           	psect	text18
 10808  249D                     __ptext18:	
 10809 ;; *************** function _drv_reset *****************
 10810 ;; Defined at:
 10811 ;;		line 23 in file "drv2665.c"
 10812 ;; Parameters:    Size  Location     Type
 10813 ;;		None
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;		None
 10816 ;; Return value:  Size  Location     Type
 10817 ;;                  1    wreg      void 
 10818 ;; Registers used:
 10819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10820 ;; Tracked objects:
 10821 ;;		On entry : 0/0
 10822 ;;		On exit  : 0/0
 10823 ;;		Unchanged: 0/0
 10824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10827 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10828 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10829 ;;Total ram usage:        1 bytes
 10830 ;; Hardware stack levels used:    1
 10831 ;; Hardware stack levels required when called:   13
 10832 ;; This function calls:
 10833 ;;		_drv_write
 10834 ;; This function is called by:
 10835 ;;		_drv_init
 10836 ;; This function uses a non-reentrant model
 10837 ;;
 10838                           
 10839                           
 10840                           ;psect for function _drv_reset
 10841  249D                     _drv_reset:	
 10842                           
 10843                           ;drv2665.c: 24: drv_write(0x02, 0x80);
 10844                           
 10845                           ;incstack = 0
 10846                           ; Regs used in _drv_reset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10847  249D  3080               	movlw	128
 10848  249E  0021               	movlb	1	; select bank1
 10849  249F  00B7               	movwf	??_drv_reset^(0+128)
 10850  24A0  0837               	movf	??_drv_reset^(0+128),w
 10851  24A1  0020               	movlb	0	; select bank0
 10852  24A2  00C9               	movwf	drv_write@data
 10853  24A3  3002               	movlw	2
 10854  24A4  31A7  27DC         	fcall	_drv_write
 10855  24A6  0008               	return
 10856  24A7                     __end_of_drv_reset:	
 10857                           
 10858                           	psect	text19
 10859  02EB                     __ptext19:	
 10860 ;; *************** function _execCmd *****************
 10861 ;; Defined at:
 10862 ;;		line 70 in file "cmd_parser.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;  s               1    wreg     PTR struct CMD_STRUCT
 10865 ;;		 -> cmd_struct(21), 
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;  s               1   54[BANK1 ] PTR struct CMD_STRUCT
 10868 ;;		 -> cmd_struct(21), 
 10869 ;; Return value:  Size  Location     Type
 10870 ;;                  2  958[None  ] int 
 10871 ;; Registers used:
 10872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10879 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10880 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10881 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10882 ;;Total ram usage:        3 bytes
 10883 ;; Hardware stack levels used:    1
 10884 ;; Hardware stack levels required when called:   16
 10885 ;; This function calls:
 10886 ;;		_commCheck
 10887 ;;		_doMove
 10888 ;;		_getActive
 10889 ;;		_getMotionStatus
 10890 ;;		_getMoveMask
 10891 ;;		_getPosition
 10892 ;;		_printf
 10893 ;;		_setActive
 10894 ;;		_setDrvGain
 10895 ;;		_setDrvPeak
 10896 ;;		_setDrvPiezoOnTime
 10897 ;;		_setHeaterPostTime
 10898 ;;		_setHeaterPreTime
 10899 ;;		_setHeaterToggle
 10900 ;;		_setLEDBrightnessRange
 10901 ;;		_setLEDPwr
 10902 ;;		_setMoveMask
 10903 ;;		_startAbsMove
 10904 ;;		_startRelMove
 10905 ;;		_zeroPosition
 10906 ;; This function is called by:
 10907 ;;		_main
 10908 ;; This function uses a non-reentrant model
 10909 ;;
 10910                           
 10911                           
 10912                           ;psect for function _execCmd
 10913  02EB                     _execCmd:	
 10914                           
 10915                           ;incstack = 0
 10916 ;; hardware stack exceeded
 10917                           ; Regs used in _execCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10918                           ;execCmd@s stored from wreg
 10919  02EB  0021               	movlb	1	; select bank1
 10920  02EC  00D6               	movwf	execCmd@s^(0+128)
 10921                           
 10922                           ;cmd_parser.c: 71: errorOut = 1;
 10923  02ED  3001               	movlw	1
 10924  02EE  0022               	movlb	2	; select bank2
 10925  02EF  00E2               	movwf	_errorOut^(0+256)
 10926  02F0  3000               	movlw	0
 10927  02F1  00E3               	movwf	(_errorOut^(0+256)+1)
 10928                           
 10929                           ;cmd_parser.c: 73: printf("exec: %d %d %d \n", s->c, s->p1.paramI, s->p2.paramI);
 10930  02F2  30B5               	movlw	low (STR_79| (0+32768))
 10931  02F3  0021               	movlb	1	; select bank1
 10932  02F4  00A0               	movwf	printf@f^(0+128)
 10933  02F5  30A8               	movlw	high (STR_79| (0+32768))
 10934  02F6  00A1               	movwf	(printf@f^(0+128)+1)
 10935  02F7  0856               	movf	execCmd@s^(0+128),w
 10936  02F8  0086               	movwf	6
 10937  02F9  3001               	movlw	1	; select bank2/3
 10938  02FA  0087               	movwf	7
 10939  02FB  0801               	movf	1,w
 10940  02FC  00D4               	movwf	??_execCmd^(0+128)
 10941  02FD  01D5               	clrf	(??_execCmd^(0+128)+1)
 10942  02FE  0854               	movf	??_execCmd^(0+128),w
 10943  02FF  00A2               	movwf	(?_printf^(0+128)+2)
 10944  0300  0855               	movf	(??_execCmd+1)^(0+128),w
 10945  0301  00A3               	movwf	((?_printf+1)^(0+128)+2)
 10946  0302  0A56               	incf	execCmd@s^(0+128),w
 10947  0303  0086               	movwf	6
 10948  0304  3001               	movlw	1	; select bank2/3
 10949  0305  0087               	movwf	7
 10950  0306  3F40               	moviw [0]fsr1
 10951  0307  00A4               	movwf	(?_printf^(0+128)+4)
 10952  0308  3F41               	moviw [1]fsr1
 10953  0309  00A5               	movwf	((?_printf+1)^(0+128)+4)
 10954  030A  0856               	movf	execCmd@s^(0+128),w
 10955  030B  3E0B               	addlw	11
 10956  030C  0086               	movwf	6
 10957  030D  3001               	movlw	1	; select bank2/3
 10958  030E  0087               	movwf	7
 10959  030F  3F40               	moviw [0]fsr1
 10960  0310  00A6               	movwf	(?_printf^(0+128)+6)
 10961  0311  3F41               	moviw [1]fsr1
 10962  0312  00A7               	movwf	((?_printf+1)^(0+128)+6)
 10963  0313  3186  264A  3182   	fcall	_printf
 10964                           
 10965                           ;cmd_parser.c: 74: switch(s->c){
 10966  0316  2CA4               	goto	l8276
 10967  0317                     l8234:	
 10968                           ;cmd_parser.c: 75: case CMD_REL: errorOut = startRelMove(s->p1.paramI); break;
 10969                           
 10970  0317  0021               	movlb	1	; select bank1
 10971  0318  0A56               	incf	execCmd@s^(0+128),w
 10972  0319  0086               	movwf	6
 10973  031A  3001               	movlw	1	; select bank2/3
 10974  031B  0087               	movwf	7
 10975  031C  3F40               	moviw [0]fsr1
 10976  031D  0020               	movlb	0	; select bank0
 10977  031E  00C9               	movwf	startRelMove@steps
 10978  031F  3F41               	moviw [1]fsr1
 10979  0320  00CA               	movwf	startRelMove@steps+1
 10980  0321  31A5  2584         	fcall	_startRelMove
 10981  0323  0020               	movlb	0	; select bank0
 10982  0324  084A               	movf	?_startRelMove+1,w
 10983  0325  0022               	movlb	2	; select bank2
 10984  0326  00E3               	movwf	(_errorOut+1)^(0+256)
 10985  0327  0020               	movlb	0	; select bank0
 10986  0328  0849               	movf	?_startRelMove,w
 10987  0329  0022               	movlb	2	; select bank2
 10988  032A  00E2               	movwf	_errorOut^(0+256)
 10989  032B  0008               	return
 10990  032C                     l8236:	
 10991                           ;cmd_parser.c: 76: case CMD_ABS: errorOut = startAbsMove(s->p1.paramI); break;
 10992                           
 10993  032C  0021               	movlb	1	; select bank1
 10994  032D  0A56               	incf	execCmd@s^(0+128),w
 10995  032E  0086               	movwf	6
 10996  032F  3001               	movlw	1	; select bank2/3
 10997  0330  0087               	movwf	7
 10998  0331  3F40               	moviw [0]fsr1
 10999  0332  0020               	movlb	0	; select bank0
 11000  0333  00C9               	movwf	startAbsMove@steps
 11001  0334  3F41               	moviw [1]fsr1
 11002  0335  00CA               	movwf	startAbsMove@steps+1
 11003  0336  31A5  25C2         	fcall	_startAbsMove
 11004  0338  0020               	movlb	0	; select bank0
 11005  0339  084A               	movf	?_startAbsMove+1,w
 11006  033A  0022               	movlb	2	; select bank2
 11007  033B  00E3               	movwf	(_errorOut+1)^(0+256)
 11008  033C  0020               	movlb	0	; select bank0
 11009  033D  0849               	movf	?_startAbsMove,w
 11010  033E  0022               	movlb	2	; select bank2
 11011  033F  00E2               	movwf	_errorOut^(0+256)
 11012  0340  0008               	return
 11013  0341                     l8238:	
 11014                           ;cmd_parser.c: 77: case CMD_P: errorOut = getPosition(s->p1.paramI); break;
 11015                           
 11016  0341  0021               	movlb	1	; select bank1
 11017  0342  0A56               	incf	execCmd@s^(0+128),w
 11018  0343  0086               	movwf	6
 11019  0344  3001               	movlw	1	; select bank2/3
 11020  0345  0087               	movwf	7
 11021  0346  3F40               	moviw [0]fsr1
 11022  0347  0020               	movlb	0	; select bank0
 11023  0348  00C9               	movwf	getPosition@a
 11024  0349  3F41               	moviw [1]fsr1
 11025  034A  00CA               	movwf	getPosition@a+1
 11026  034B  3198  20C9         	fcall	_getPosition
 11027  034D  0020               	movlb	0	; select bank0
 11028  034E  084A               	movf	?_getPosition+1,w
 11029  034F  0022               	movlb	2	; select bank2
 11030  0350  00E3               	movwf	(_errorOut+1)^(0+256)
 11031  0351  0020               	movlb	0	; select bank0
 11032  0352  0849               	movf	?_getPosition,w
 11033  0353  0022               	movlb	2	; select bank2
 11034  0354  00E2               	movwf	_errorOut^(0+256)
 11035  0355  0008               	return
 11036  0356                     l8240:	
 11037                           ;cmd_parser.c: 78: case CMD_ZERO: errorOut = zeroPosition(); break;
 11038                           
 11039  0356  3194  24AA         	fcall	_zeroPosition
 11040  0358  0020               	movlb	0	; select bank0
 11041  0359  084A               	movf	?_zeroPosition+1,w
 11042  035A  0022               	movlb	2	; select bank2
 11043  035B  00E3               	movwf	(_errorOut+1)^(0+256)
 11044  035C  0020               	movlb	0	; select bank0
 11045  035D  0849               	movf	?_zeroPosition,w
 11046  035E  0022               	movlb	2	; select bank2
 11047  035F  00E2               	movwf	_errorOut^(0+256)
 11048  0360  0008               	return
 11049  0361                     l8242:	
 11050                           ;cmd_parser.c: 81: case CMD_DRV_PEAK: errorOut = setDrvPeak(s->p1.paramI); break;
 11051                           
 11052  0361  0021               	movlb	1	; select bank1
 11053  0362  0A56               	incf	execCmd@s^(0+128),w
 11054  0363  0086               	movwf	6
 11055  0364  3001               	movlw	1	; select bank2/3
 11056  0365  0087               	movwf	7
 11057  0366  3F40               	moviw [0]fsr1
 11058  0367  0020               	movlb	0	; select bank0
 11059  0368  00C9               	movwf	setDrvPeak@pk
 11060  0369  3F41               	moviw [1]fsr1
 11061  036A  00CA               	movwf	setDrvPeak@pk+1
 11062  036B  31A5  255D         	fcall	_setDrvPeak
 11063  036D  0020               	movlb	0	; select bank0
 11064  036E  084A               	movf	?_setDrvPeak+1,w
 11065  036F  0022               	movlb	2	; select bank2
 11066  0370  00E3               	movwf	(_errorOut+1)^(0+256)
 11067  0371  0020               	movlb	0	; select bank0
 11068  0372  0849               	movf	?_setDrvPeak,w
 11069  0373  0022               	movlb	2	; select bank2
 11070  0374  00E2               	movwf	_errorOut^(0+256)
 11071  0375  0008               	return
 11072  0376                     l8244:	
 11073                           ;cmd_parser.c: 82: case CMD_DRV_GAIN: errorOut = setDrvGain(s->p1.paramI); break;
 11074                           
 11075  0376  0021               	movlb	1	; select bank1
 11076  0377  0A56               	incf	execCmd@s^(0+128),w
 11077  0378  0086               	movwf	6
 11078  0379  3001               	movlw	1	; select bank2/3
 11079  037A  0087               	movwf	7
 11080  037B  3F40               	moviw [0]fsr1
 11081  037C  00B7               	movwf	setDrvGain@gain^(0+128)
 11082  037D  3F41               	moviw [1]fsr1
 11083  037E  00B8               	movwf	(setDrvGain@gain+1)^(0+128)
 11084  037F  319B  2369         	fcall	_setDrvGain
 11085  0381  0021               	movlb	1	; select bank1
 11086  0382  0838               	movf	(?_setDrvGain+1)^(0+128),w
 11087  0383  0022               	movlb	2	; select bank2
 11088  0384  00E3               	movwf	(_errorOut+1)^(0+256)
 11089  0385  0021               	movlb	1	; select bank1
 11090  0386  0837               	movf	?_setDrvGain^(0+128),w
 11091  0387  0022               	movlb	2	; select bank2
 11092  0388  00E2               	movwf	_errorOut^(0+256)
 11093  0389  0008               	return
 11094  038A                     l8246:	
 11095                           ;cmd_parser.c: 83: case CMD_DRV_PIEZOONTIME: errorOut = setDrvPiezoOnTime(s->p1.paramI);
      +                           break;
 11096                           
 11097  038A  0021               	movlb	1	; select bank1
 11098  038B  0A56               	incf	execCmd@s^(0+128),w
 11099  038C  0086               	movwf	6
 11100  038D  3001               	movlw	1	; select bank2/3
 11101  038E  0087               	movwf	7
 11102  038F  3F40               	moviw [0]fsr1
 11103  0390  00BD               	movwf	setDrvPiezoOnTime@t^(0+128)
 11104  0391  3F41               	moviw [1]fsr1
 11105  0392  00BE               	movwf	(setDrvPiezoOnTime@t+1)^(0+128)
 11106  0393  319F  27A5         	fcall	_setDrvPiezoOnTime
 11107  0395  0021               	movlb	1	; select bank1
 11108  0396  083E               	movf	(?_setDrvPiezoOnTime+1)^(0+128),w
 11109  0397  0022               	movlb	2	; select bank2
 11110  0398  00E3               	movwf	(_errorOut+1)^(0+256)
 11111  0399  0021               	movlb	1	; select bank1
 11112  039A  083D               	movf	?_setDrvPiezoOnTime^(0+128),w
 11113  039B  0022               	movlb	2	; select bank2
 11114  039C  00E2               	movwf	_errorOut^(0+256)
 11115  039D  0008               	return
 11116  039E                     l8248:	
 11117                           ;cmd_parser.c: 86: case CMD_HEATER_PRETIME: errorOut = setHeaterPreTime(s->p1.paramI); b
      +                          reak;
 11118                           
 11119  039E  0021               	movlb	1	; select bank1
 11120  039F  0A56               	incf	execCmd@s^(0+128),w
 11121  03A0  0086               	movwf	6
 11122  03A1  3001               	movlw	1	; select bank2/3
 11123  03A2  0087               	movwf	7
 11124  03A3  3F40               	moviw [0]fsr1
 11125  03A4  00BD               	movwf	setHeaterPreTime@t^(0+128)
 11126  03A5  3F41               	moviw [1]fsr1
 11127  03A6  00BE               	movwf	(setHeaterPreTime@t+1)^(0+128)
 11128  03A7  3193  23ED         	fcall	_setHeaterPreTime
 11129  03A9  0021               	movlb	1	; select bank1
 11130  03AA  083E               	movf	(?_setHeaterPreTime+1)^(0+128),w
 11131  03AB  0022               	movlb	2	; select bank2
 11132  03AC  00E3               	movwf	(_errorOut+1)^(0+256)
 11133  03AD  0021               	movlb	1	; select bank1
 11134  03AE  083D               	movf	?_setHeaterPreTime^(0+128),w
 11135  03AF  0022               	movlb	2	; select bank2
 11136  03B0  00E2               	movwf	_errorOut^(0+256)
 11137  03B1  0008               	return
 11138  03B2                     l8250:	
 11139                           ;cmd_parser.c: 87: case CMD_HEATER_POSTTIME: errorOut = setHeaterPostTime(s->p1.paramI);
      +                           break;
 11140                           
 11141  03B2  0021               	movlb	1	; select bank1
 11142  03B3  0A56               	incf	execCmd@s^(0+128),w
 11143  03B4  0086               	movwf	6
 11144  03B5  3001               	movlw	1	; select bank2/3
 11145  03B6  0087               	movwf	7
 11146  03B7  3F40               	moviw [0]fsr1
 11147  03B8  00BD               	movwf	setHeaterPostTime@t^(0+128)
 11148  03B9  3F41               	moviw [1]fsr1
 11149  03BA  00BE               	movwf	(setHeaterPostTime@t+1)^(0+128)
 11150  03BB  319E  264F         	fcall	_setHeaterPostTime
 11151  03BD  0021               	movlb	1	; select bank1
 11152  03BE  083E               	movf	(?_setHeaterPostTime+1)^(0+128),w
 11153  03BF  0022               	movlb	2	; select bank2
 11154  03C0  00E3               	movwf	(_errorOut+1)^(0+256)
 11155  03C1  0021               	movlb	1	; select bank1
 11156  03C2  083D               	movf	?_setHeaterPostTime^(0+128),w
 11157  03C3  0022               	movlb	2	; select bank2
 11158  03C4  00E2               	movwf	_errorOut^(0+256)
 11159  03C5  0008               	return
 11160  03C6                     l8252:	
 11161                           ;cmd_parser.c: 88: case CMD_HEATER_GAIN: errorOut = setLEDBrightnessRange(s->p1.paramI, 
      +                          s->p2.paramI); break;
 11162                           
 11163  03C6  0021               	movlb	1	; select bank1
 11164  03C7  0A56               	incf	execCmd@s^(0+128),w
 11165  03C8  0086               	movwf	6
 11166  03C9  3001               	movlw	1	; select bank2/3
 11167  03CA  0087               	movwf	7
 11168  03CB  3F40               	moviw [0]fsr1
 11169  03CC  00B7               	movwf	setLEDBrightnessRange@r^(0+128)
 11170  03CD  3F41               	moviw [1]fsr1
 11171  03CE  00B8               	movwf	(setLEDBrightnessRange@r+1)^(0+128)
 11172  03CF  0856               	movf	execCmd@s^(0+128),w
 11173  03D0  3E0B               	addlw	11
 11174  03D1  0086               	movwf	6
 11175  03D2  3001               	movlw	1	; select bank2/3
 11176  03D3  0087               	movwf	7
 11177  03D4  3F40               	moviw [0]fsr1
 11178  03D5  00B9               	movwf	setLEDBrightnessRange@tOB^(0+128)
 11179  03D6  3F41               	moviw [1]fsr1
 11180  03D7  00BA               	movwf	(setLEDBrightnessRange@tOB+1)^(0+128)
 11181  03D8  31A6  2692         	fcall	_setLEDBrightnessRange
 11182  03DA  0021               	movlb	1	; select bank1
 11183  03DB  0838               	movf	(?_setLEDBrightnessRange+1)^(0+128),w
 11184  03DC  0022               	movlb	2	; select bank2
 11185  03DD  00E3               	movwf	(_errorOut+1)^(0+256)
 11186  03DE  0021               	movlb	1	; select bank1
 11187  03DF  0837               	movf	?_setLEDBrightnessRange^(0+128),w
 11188  03E0  0022               	movlb	2	; select bank2
 11189  03E1  00E2               	movwf	_errorOut^(0+256)
 11190  03E2  0008               	return
 11191  03E3                     l8254:	
 11192                           ;cmd_parser.c: 89: case CMD_HEATER_PWR: errorOut = setLEDPwr(s->p1.paramI, s->p2.paramI)
      +                          ; break;
 11193                           
 11194  03E3  0021               	movlb	1	; select bank1
 11195  03E4  0A56               	incf	execCmd@s^(0+128),w
 11196  03E5  0086               	movwf	6
 11197  03E6  3001               	movlw	1	; select bank2/3
 11198  03E7  0087               	movwf	7
 11199  03E8  3F40               	moviw [0]fsr1
 11200  03E9  00B7               	movwf	setLEDPwr@pwr^(0+128)
 11201  03EA  3F41               	moviw [1]fsr1
 11202  03EB  00B8               	movwf	(setLEDPwr@pwr+1)^(0+128)
 11203  03EC  0856               	movf	execCmd@s^(0+128),w
 11204  03ED  3E0B               	addlw	11
 11205  03EE  0086               	movwf	6
 11206  03EF  3001               	movlw	1	; select bank2/3
 11207  03F0  0087               	movwf	7
 11208  03F1  3F40               	moviw [0]fsr1
 11209  03F2  00B9               	movwf	setLEDPwr@topOrBottom^(0+128)
 11210  03F3  3F41               	moviw [1]fsr1
 11211  03F4  00BA               	movwf	(setLEDPwr@topOrBottom+1)^(0+128)
 11212  03F5  31A6  26B0         	fcall	_setLEDPwr
 11213  03F7  0021               	movlb	1	; select bank1
 11214  03F8  0838               	movf	(?_setLEDPwr+1)^(0+128),w
 11215  03F9  0022               	movlb	2	; select bank2
 11216  03FA  00E3               	movwf	(_errorOut+1)^(0+256)
 11217  03FB  0021               	movlb	1	; select bank1
 11218  03FC  0837               	movf	?_setLEDPwr^(0+128),w
 11219  03FD  0022               	movlb	2	; select bank2
 11220  03FE  00E2               	movwf	_errorOut^(0+256)
 11221  03FF  0008               	return
 11222  0400                     l8256:	
 11223                           ;cmd_parser.c: 90: case CMD_HEATER_TOGGLE: errorOut = setHeaterToggle(s->p1.paramI, s->p
      +                          2.paramI); break;
 11224                           
 11225  0400  0021               	movlb	1	; select bank1
 11226  0401  0A56               	incf	execCmd@s^(0+128),w
 11227  0402  0086               	movwf	6
 11228  0403  3001               	movlw	1	; select bank2/3
 11229  0404  0087               	movwf	7
 11230  0405  3F40               	moviw [0]fsr1
 11231  0406  00B7               	movwf	setHeaterToggle@num^(0+128)
 11232  0407  3F41               	moviw [1]fsr1
 11233  0408  00B8               	movwf	(setHeaterToggle@num+1)^(0+128)
 11234  0409  0856               	movf	execCmd@s^(0+128),w
 11235  040A  3E0B               	addlw	11
 11236  040B  0086               	movwf	6
 11237  040C  3001               	movlw	1	; select bank2/3
 11238  040D  0087               	movwf	7
 11239  040E  3F40               	moviw [0]fsr1
 11240  040F  00B9               	movwf	setHeaterToggle@topOrB^(0+128)
 11241  0410  3F41               	moviw [1]fsr1
 11242  0411  00BA               	movwf	(setHeaterToggle@topOrB+1)^(0+128)
 11243  0412  3187  277C         	fcall	_setHeaterToggle
 11244  0414  0021               	movlb	1	; select bank1
 11245  0415  0838               	movf	(?_setHeaterToggle+1)^(0+128),w
 11246  0416  0022               	movlb	2	; select bank2
 11247  0417  00E3               	movwf	(_errorOut+1)^(0+256)
 11248  0418  0021               	movlb	1	; select bank1
 11249  0419  0837               	movf	?_setHeaterToggle^(0+128),w
 11250  041A  0022               	movlb	2	; select bank2
 11251  041B  00E2               	movwf	_errorOut^(0+256)
 11252  041C  0008               	return
 11253  041D                     l8258:	
 11254                           ;cmd_parser.c: 92: case CMD_SETA: errorOut = setActive(s->p1.paramI, s->p2.paramI); brea
      +                          k;
 11255                           
 11256  041D  0021               	movlb	1	; select bank1
 11257  041E  0A56               	incf	execCmd@s^(0+128),w
 11258  041F  0086               	movwf	6
 11259  0420  3001               	movlw	1	; select bank2/3
 11260  0421  0087               	movwf	7
 11261  0422  3F40               	moviw [0]fsr1
 11262  0423  0020               	movlb	0	; select bank0
 11263  0424  00C9               	movwf	setActive@probeNum
 11264  0425  3F41               	moviw [1]fsr1
 11265  0426  00CA               	movwf	setActive@probeNum+1
 11266  0427  0021               	movlb	1	; select bank1
 11267  0428  0856               	movf	execCmd@s^(0+128),w
 11268  0429  3E0B               	addlw	11
 11269  042A  0086               	movwf	6
 11270  042B  3001               	movlw	1	; select bank2/3
 11271  042C  0087               	movwf	7
 11272  042D  3F40               	moviw [0]fsr1
 11273  042E  0020               	movlb	0	; select bank0
 11274  042F  00CB               	movwf	setActive@onOff
 11275  0430  3F41               	moviw [1]fsr1
 11276  0431  00CC               	movwf	setActive@onOff+1
 11277  0432  318A  2213         	fcall	_setActive
 11278  0434  0020               	movlb	0	; select bank0
 11279  0435  084A               	movf	?_setActive+1,w
 11280  0436  0022               	movlb	2	; select bank2
 11281  0437  00E3               	movwf	(_errorOut+1)^(0+256)
 11282  0438  0020               	movlb	0	; select bank0
 11283  0439  0849               	movf	?_setActive,w
 11284  043A  0022               	movlb	2	; select bank2
 11285  043B  00E2               	movwf	_errorOut^(0+256)
 11286  043C  0008               	return
 11287  043D                     l8260:	
 11288                           ;cmd_parser.c: 93: case CMD_SETM: errorOut = setMoveMask(s->p1.paramI, s->p2.paramI); br
      +                          eak;
 11289                           
 11290  043D  0021               	movlb	1	; select bank1
 11291  043E  0A56               	incf	execCmd@s^(0+128),w
 11292  043F  0086               	movwf	6
 11293  0440  3001               	movlw	1	; select bank2/3
 11294  0441  0087               	movwf	7
 11295  0442  3F40               	moviw [0]fsr1
 11296  0443  0020               	movlb	0	; select bank0
 11297  0444  00C9               	movwf	setMoveMask@probeNum
 11298  0445  3F41               	moviw [1]fsr1
 11299  0446  00CA               	movwf	setMoveMask@probeNum+1
 11300  0447  0021               	movlb	1	; select bank1
 11301  0448  0856               	movf	execCmd@s^(0+128),w
 11302  0449  3E0B               	addlw	11
 11303  044A  0086               	movwf	6
 11304  044B  3001               	movlw	1	; select bank2/3
 11305  044C  0087               	movwf	7
 11306  044D  3F40               	moviw [0]fsr1
 11307  044E  0020               	movlb	0	; select bank0
 11308  044F  00CB               	movwf	setMoveMask@onOff
 11309  0450  3F41               	moviw [1]fsr1
 11310  0451  00CC               	movwf	setMoveMask@onOff+1
 11311  0452  3188  2001         	fcall	_setMoveMask
 11312  0454  0020               	movlb	0	; select bank0
 11313  0455  084A               	movf	?_setMoveMask+1,w
 11314  0456  0022               	movlb	2	; select bank2
 11315  0457  00E3               	movwf	(_errorOut+1)^(0+256)
 11316  0458  0020               	movlb	0	; select bank0
 11317  0459  0849               	movf	?_setMoveMask,w
 11318  045A  0022               	movlb	2	; select bank2
 11319  045B  00E2               	movwf	_errorOut^(0+256)
 11320  045C  0008               	return
 11321  045D                     l8262:	
 11322                           ;cmd_parser.c: 94: case CMD_GET_ACTIVE: errorOut = getActive(); break;
 11323                           
 11324  045D  319A  22E5         	fcall	_getActive
 11325  045F  0020               	movlb	0	; select bank0
 11326  0460  084A               	movf	?_getActive+1,w
 11327  0461  0022               	movlb	2	; select bank2
 11328  0462  00E3               	movwf	(_errorOut+1)^(0+256)
 11329  0463  0020               	movlb	0	; select bank0
 11330  0464  0849               	movf	?_getActive,w
 11331  0465  0022               	movlb	2	; select bank2
 11332  0466  00E2               	movwf	_errorOut^(0+256)
 11333  0467  0008               	return
 11334  0468                     l8264:	
 11335                           ;cmd_parser.c: 95: case CMD_GET_MOVABLE: errorOut = getMoveMask(); break;
 11336                           
 11337  0468  319C  247F         	fcall	_getMoveMask
 11338  046A  0020               	movlb	0	; select bank0
 11339  046B  084A               	movf	?_getMoveMask+1,w
 11340  046C  0022               	movlb	2	; select bank2
 11341  046D  00E3               	movwf	(_errorOut+1)^(0+256)
 11342  046E  0020               	movlb	0	; select bank0
 11343  046F  0849               	movf	?_getMoveMask,w
 11344  0470  0022               	movlb	2	; select bank2
 11345  0471  00E2               	movwf	_errorOut^(0+256)
 11346  0472  0008               	return
 11347  0473                     l8266:	
 11348                           ;cmd_parser.c: 96: case CMD_MOTION_STATUS: errorOut = getMotionStatus(); break;
 11349                           
 11350  0473  31A7  2771         	fcall	_getMotionStatus
 11351  0475  0020               	movlb	0	; select bank0
 11352  0476  084A               	movf	?_getMotionStatus+1,w
 11353  0477  0022               	movlb	2	; select bank2
 11354  0478  00E3               	movwf	(_errorOut+1)^(0+256)
 11355  0479  0020               	movlb	0	; select bank0
 11356  047A  0849               	movf	?_getMotionStatus,w
 11357  047B  0022               	movlb	2	; select bank2
 11358  047C  00E2               	movwf	_errorOut^(0+256)
 11359  047D  0008               	return
 11360  047E                     l8268:	
 11361                           ;cmd_parser.c: 97: case CMD_DOMOVE: errorOut = doMove(); break;
 11362                           
 11363  047E  3189  2100         	fcall	_doMove
 11364  0480  0021               	movlb	1	; select bank1
 11365  0481  0842               	movf	(?_doMove+1)^(0+128),w
 11366  0482  0022               	movlb	2	; select bank2
 11367  0483  00E3               	movwf	(_errorOut+1)^(0+256)
 11368  0484  0021               	movlb	1	; select bank1
 11369  0485  0841               	movf	?_doMove^(0+128),w
 11370  0486  0022               	movlb	2	; select bank2
 11371  0487  00E2               	movwf	_errorOut^(0+256)
 11372  0488  0008               	return
 11373  0489                     l8270:	
 11374                           ;cmd_parser.c: 98: case CMD_COMM_CHECK: errorOut = commCheck(); break;
 11375                           
 11376  0489  318A  22A1         	fcall	_commCheck
 11377  048B  0021               	movlb	1	; select bank1
 11378  048C  0852               	movf	(?_commCheck+1)^(0+128),w
 11379  048D  0022               	movlb	2	; select bank2
 11380  048E  00E3               	movwf	(_errorOut+1)^(0+256)
 11381  048F  0021               	movlb	1	; select bank1
 11382  0490  0851               	movf	?_commCheck^(0+128),w
 11383  0491  0022               	movlb	2	; select bank2
 11384  0492  00E2               	movwf	_errorOut^(0+256)
 11385  0493  0008               	return
 11386  0494                     l8272:	
 11387                           ;cmd_parser.c: 99: case CMD_PING: printf("!\n"); break;
 11388                           
 11389  0494  30A0               	movlw	low ((STR_81+20)| (0+32768))
 11390  0495  0021               	movlb	1	; select bank1
 11391  0496  00A0               	movwf	printf@f^(0+128)
 11392  0497  30A8               	movlw	high ((STR_81+20)| (0+32768))
 11393  0498  00A1               	movwf	(printf@f^(0+128)+1)
 11394  0499  3186  264A         	fcall	_printf
 11395  049B  0008               	return
 11396  049C                     l8274:	
 11397                           ;cmd_parser.c: 100: default: printf("UNRECOGNIZED COMMAND!\n");
 11398                           
 11399  049C  308C               	movlw	low (STR_81| (0+32768))
 11400  049D  0021               	movlb	1	; select bank1
 11401  049E  00A0               	movwf	printf@f^(0+128)
 11402  049F  30A8               	movlw	high (STR_81| (0+32768))
 11403  04A0  00A1               	movwf	(printf@f^(0+128)+1)
 11404  04A1  3186  264A         	fcall	_printf
 11405                           
 11406                           ;cmd_parser.c: 107: }
 11407  04A3  0008               	return
 11408  04A4                     l8276:	
 11409  04A4  0021               	movlb	1	; select bank1
 11410  04A5  0856               	movf	execCmd@s^(0+128),w
 11411  04A6  0086               	movwf	6
 11412  04A7  3001               	movlw	1	; select bank2/3
 11413  04A8  0087               	movwf	7
 11414  04A9  0801               	movf	1,w
 11415                           
 11416                           ; Switch size 1, requested type "space"
 11417                           ; Number of cases is 20, Range of values is 1 to 21
 11418                           ; switch strategies available:
 11419                           ; Name         Instructions Cycles
 11420                           ; direct_byte           51     9 (fixed)
 11421                           ; simple_byte           61    31 (average)
 11422                           ; jumptable            263     9 (fixed)
 11423                           ;	Chosen strategy is direct_byte
 11424  04AA  3EFF               	addlw	-1
 11425  04AB  1C03               	skipc
 11426  04AC  2C9C               	goto	l8274
 11427  04AD  0084               	movwf	4
 11428  04AE  3015               	movlw	21
 11429  04AF  0204               	subwf	4,w
 11430  04B0  1803               	skipnc
 11431  04B1  2C9C               	goto	l8274
 11432  04B2  3198               	movlp	high S8620
 11433  04B3  3504               	lslf	4,w
 11434  04B4  3E00               	addlw	low S8620
 11435  04B5  0082               	movwf	2
 11436                           
 11437                           ;cmd_parser.c: 109: return errorOut;
 11438                           ;	Return value of _execCmd is never used
 11439  04B6  0008               	return
 11440  04B7                     __end_of_execCmd:	
 11441                           
 11442                           	psect	swtext1
 11443  1800                     __pswtext1:	
 11444  1800                     S8620:	
 11445  1800  3183  2B2C         	ljmp	l8236
 11446  1802  3183  2B17         	ljmp	l8234
 11447  1804  3183  2B41         	ljmp	l8238
 11448  1806  3184  2C9C         	ljmp	l8274
 11449  1808  3184  2C1D         	ljmp	l8258
 11450  180A  3184  2C3D         	ljmp	l8260
 11451  180C  3183  2B56         	ljmp	l8240
 11452  180E  3183  2B61         	ljmp	l8242
 11453  1810  3183  2B76         	ljmp	l8244
 11454  1812  3183  2B8A         	ljmp	l8246
 11455  1814  3183  2B9E         	ljmp	l8248
 11456  1816  3183  2BB2         	ljmp	l8250
 11457  1818  3183  2BC6         	ljmp	l8252
 11458  181A  3183  2BE3         	ljmp	l8254
 11459  181C  3184  2C00         	ljmp	l8256
 11460  181E  3184  2C5D         	ljmp	l8262
 11461  1820  3184  2C68         	ljmp	l8264
 11462  1822  3184  2C73         	ljmp	l8266
 11463  1824  3184  2C7E         	ljmp	l8268
 11464  1826  3184  2C89         	ljmp	l8270
 11465  1828  3184  2C94         	ljmp	l8272
 11466                           
 11467                           	psect	text20
 11468  14AA                     __ptext20:	
 11469 ;; *************** function _zeroPosition *****************
 11470 ;; Defined at:
 11471 ;;		line 378 in file "main.c"
 11472 ;; Parameters:    Size  Location     Type
 11473 ;;		None
 11474 ;; Auto vars:     Size  Location     Type
 11475 ;;  i               2   43[BANK0 ] int 
 11476 ;; Return value:  Size  Location     Type
 11477 ;;                  2   41[BANK0 ] int 
 11478 ;; Registers used:
 11479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11480 ;; Tracked objects:
 11481 ;;		On entry : 0/0
 11482 ;;		On exit  : 0/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11485 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11486 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11487 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11488 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11489 ;;Total ram usage:       14 bytes
 11490 ;; Hardware stack levels used:    1
 11491 ;; Hardware stack levels required when called:    9
 11492 ;; This function calls:
 11493 ;;		_printf
 11494 ;; This function is called by:
 11495 ;;		_execCmd
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           
 11500                           ;psect for function _zeroPosition
 11501  14AA                     _zeroPosition:	
 11502                           
 11503                           ;main.c: 379: for(int i = 0; i<24; i++){
 11504                           
 11505                           ;incstack = 0
 11506                           ; Regs used in _zeroPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11507  14AA  0020               	movlb	0	; select bank0
 11508  14AB  01CB               	clrf	zeroPosition@i
 11509  14AC  01CC               	clrf	zeroPosition@i+1
 11510  14AD  084C               	movf	zeroPosition@i+1,w
 11511  14AE  3A80               	xorlw	128
 11512  14AF  0021               	movlb	1	; select bank1
 11513  14B0  00B7               	movwf	??_zeroPosition^(0+128)
 11514  14B1  3080               	movlw	128
 11515  14B2  0237               	subwf	??_zeroPosition^(0+128),w
 11516  14B3  1D03               	skipz
 11517  14B4  2CB8               	goto	u7845
 11518  14B5  3018               	movlw	24
 11519  14B6  0020               	movlb	0	; select bank0
 11520  14B7  024B               	subwf	zeroPosition@i,w
 11521  14B8                     u7845:	
 11522  14B8  1803               	btfsc	3,0
 11523  14B9  2D01               	goto	l7882
 11524  14BA                     l7874:	
 11525                           
 11526                           ;main.c: 380: if((activeMask & (1 << i)) > 0)
 11527  14BA  0021               	movlb	1	; select bank1
 11528  14BB  0858               	movf	_activeMask^(0+128),w
 11529  14BC  00B7               	movwf	??_zeroPosition^(0+128)
 11530  14BD  0859               	movf	(_activeMask+1)^(0+128),w
 11531  14BE  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 11532  14BF  085A               	movf	(_activeMask+2)^(0+128),w
 11533  14C0  00B9               	movwf	(??_zeroPosition^(0+128)+2)
 11534  14C1  085B               	movf	(_activeMask+3)^(0+128),w
 11535  14C2  00BA               	movwf	(??_zeroPosition^(0+128)+3)
 11536  14C3  3001               	movlw	1
 11537  14C4  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 11538  14C5  3000               	movlw	0
 11539  14C6  00BC               	movwf	((??_zeroPosition+4)^(0+128)+1)
 11540  14C7  0020               	movlb	0	; select bank0
 11541  14C8  0A4B               	incf	zeroPosition@i,w
 11542  14C9  0021               	movlb	1	; select bank1
 11543  14CA  2CCD               	goto	u7854
 11544  14CB                     u7855:	
 11545  14CB  35BB               	lslf	(??_zeroPosition+4)^(0+128),f
 11546  14CC  0DBC               	rlf	((??_zeroPosition+4)^(0+128)+1),f
 11547  14CD                     u7854:	
 11548  14CD  0B89               	decfsz	9,f
 11549  14CE  2CCB               	goto	u7855
 11550  14CF  083B               	movf	(??_zeroPosition+4)^(0+128),w
 11551  14D0  00BD               	movwf	(??_zeroPosition+6)^(0+128)
 11552  14D1  083C               	movf	(??_zeroPosition+5)^(0+128),w
 11553  14D2  00BE               	movwf	((??_zeroPosition+6)^(0+128)+1)
 11554  14D3  3000               	movlw	0
 11555  14D4  1BBE               	btfsc	((??_zeroPosition+6)^(0+128)+1),7
 11556  14D5  30FF               	movlw	255
 11557  14D6  00BF               	movwf	((??_zeroPosition+6)^(0+128)+2)
 11558  14D7  00C0               	movwf	((??_zeroPosition+6)^(0+128)+3)
 11559  14D8  083D               	movf	(??_zeroPosition+6)^(0+128),w
 11560  14D9  05B7               	andwf	??_zeroPosition^(0+128),f
 11561  14DA  083E               	movf	(??_zeroPosition+7)^(0+128),w
 11562  14DB  05B8               	andwf	(??_zeroPosition^(0+128)+1),f
 11563  14DC  083F               	movf	(??_zeroPosition+8)^(0+128),w
 11564  14DD  05B9               	andwf	(??_zeroPosition^(0+128)+2),f
 11565  14DE  0840               	movf	(??_zeroPosition+9)^(0+128),w
 11566  14DF  05BA               	andwf	(??_zeroPosition^(0+128)+3),f
 11567  14E0  083A               	movf	(??_zeroPosition+3)^(0+128),w
 11568  14E1  0439               	iorwf	(??_zeroPosition+2)^(0+128),w
 11569  14E2  0438               	iorwf	(??_zeroPosition+1)^(0+128),w
 11570  14E3  0437               	iorwf	??_zeroPosition^(0+128),w
 11571  14E4  1903               	skipnz
 11572  14E5  2CEF               	goto	l7878
 11573                           
 11574                           ;main.c: 381: currentPositions_steps[i]=0;
 11575  14E6  0020               	movlb	0	; select bank0
 11576  14E7  354B               	lslf	zeroPosition@i,w
 11577  14E8  3E20               	addlw	(low (_currentPositions_steps| (0+512)))& (0+255)
 11578  14E9  0086               	movwf	6
 11579  14EA  3002               	movlw	2	; select bank4/5
 11580  14EB  0087               	movwf	7
 11581  14EC  3000               	movlw	0
 11582  14ED  3FC0               	movwi [0]fsr1
 11583  14EE  3FC1               	movwi [1]fsr1
 11584  14EF                     l7878:	
 11585  14EF  3001               	movlw	1
 11586  14F0  0020               	movlb	0	; select bank0
 11587  14F1  07CB               	addwf	zeroPosition@i,f
 11588  14F2  3000               	movlw	0
 11589  14F3  3DCC               	addwfc	zeroPosition@i+1,f
 11590  14F4  084C               	movf	zeroPosition@i+1,w
 11591  14F5  3A80               	xorlw	128
 11592  14F6  0021               	movlb	1	; select bank1
 11593  14F7  00B7               	movwf	??_zeroPosition^(0+128)
 11594  14F8  3080               	movlw	128
 11595  14F9  0237               	subwf	??_zeroPosition^(0+128),w
 11596  14FA  1D03               	skipz
 11597  14FB  2CFF               	goto	u7875
 11598  14FC  3018               	movlw	24
 11599  14FD  0020               	movlb	0	; select bank0
 11600  14FE  024B               	subwf	zeroPosition@i,w
 11601  14FF                     u7875:	
 11602  14FF  1C03               	skipc
 11603  1500  2CBA               	goto	l7874
 11604  1501                     l7882:	
 11605                           
 11606                           ;main.c: 382: }
 11607                           ;main.c: 383: printf("A\n");
 11608  1501  3047               	movlw	low (STR_8| (0+32768))
 11609  1502  0021               	movlb	1	; select bank1
 11610  1503  00A0               	movwf	printf@f^(0+128)
 11611  1504  30AA               	movlw	high (STR_8| (0+32768))
 11612  1505  00A1               	movwf	(printf@f^(0+128)+1)
 11613  1506  3186  264A         	fcall	_printf
 11614                           
 11615                           ;main.c: 384: return 0;
 11616  1508  0020               	movlb	0	; select bank0
 11617  1509  01C9               	clrf	?_zeroPosition
 11618  150A  01CA               	clrf	?_zeroPosition+1
 11619  150B  0008               	return
 11620  150C                     __end_of_zeroPosition:	
 11621                           
 11622                           	psect	text21
 11623  2584                     __ptext21:	
 11624 ;; *************** function _startRelMove *****************
 11625 ;; Defined at:
 11626 ;;		line 285 in file "main.c"
 11627 ;; Parameters:    Size  Location     Type
 11628 ;;  steps           2   41[BANK0 ] int 
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;		None
 11631 ;; Return value:  Size  Location     Type
 11632 ;;                  2   41[BANK0 ] int 
 11633 ;; Registers used:
 11634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11635 ;; Tracked objects:
 11636 ;;		On entry : 0/0
 11637 ;;		On exit  : 0/0
 11638 ;;		Unchanged: 0/0
 11639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11643 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11644 ;;Total ram usage:        2 bytes
 11645 ;; Hardware stack levels used:    1
 11646 ;; Hardware stack levels required when called:    9
 11647 ;; This function calls:
 11648 ;;		_printf
 11649 ;; This function is called by:
 11650 ;;		_execCmd
 11651 ;; This function uses a non-reentrant model
 11652 ;;
 11653                           
 11654                           
 11655                           ;psect for function _startRelMove
 11656  2584                     _startRelMove:	
 11657                           
 11658                           ;main.c: 286: motionType = REL_MOVE;
 11659                           
 11660                           ;incstack = 0
 11661                           ; Regs used in _startRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11662  2584  0020               	movlb	0	; select bank0
 11663  2585  01D5               	clrf	_motionType
 11664  2586  0AD5               	incf	_motionType,f
 11665                           
 11666                           ;main.c: 287: remainingSteps = steps;
 11667  2587  084A               	movf	startRelMove@steps+1,w
 11668  2588  0021               	movlb	1	; select bank1
 11669  2589  00E7               	movwf	(_remainingSteps+1)^(0+128)
 11670  258A  0020               	movlb	0	; select bank0
 11671  258B  0849               	movf	startRelMove@steps,w
 11672  258C  0021               	movlb	1	; select bank1
 11673  258D  00E6               	movwf	_remainingSteps^(0+128)
 11674                           
 11675                           ;main.c: 288: printf("A\n");
 11676  258E  3047               	movlw	low (STR_8| (0+32768))
 11677  258F  00A0               	movwf	printf@f^(0+128)
 11678  2590  30AA               	movlw	high (STR_8| (0+32768))
 11679  2591  00A1               	movwf	(printf@f^(0+128)+1)
 11680  2592  3186  264A         	fcall	_printf
 11681                           
 11682                           ;main.c: 289: return 0;
 11683  2594  0020               	movlb	0	; select bank0
 11684  2595  01C9               	clrf	?_startRelMove
 11685  2596  01CA               	clrf	?_startRelMove+1
 11686  2597  0008               	return
 11687  2598                     __end_of_startRelMove:	
 11688                           
 11689                           	psect	text22
 11690  25C2                     __ptext22:	
 11691 ;; *************** function _startAbsMove *****************
 11692 ;; Defined at:
 11693 ;;		line 291 in file "main.c"
 11694 ;; Parameters:    Size  Location     Type
 11695 ;;  steps           2   41[BANK0 ] int 
 11696 ;; Auto vars:     Size  Location     Type
 11697 ;;		None
 11698 ;; Return value:  Size  Location     Type
 11699 ;;                  2   41[BANK0 ] int 
 11700 ;; Registers used:
 11701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11702 ;; Tracked objects:
 11703 ;;		On entry : 0/0
 11704 ;;		On exit  : 0/0
 11705 ;;		Unchanged: 0/0
 11706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11707 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11709 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11710 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11711 ;;Total ram usage:        3 bytes
 11712 ;; Hardware stack levels used:    1
 11713 ;; Hardware stack levels required when called:    9
 11714 ;; This function calls:
 11715 ;;		_printf
 11716 ;; This function is called by:
 11717 ;;		_execCmd
 11718 ;; This function uses a non-reentrant model
 11719 ;;
 11720                           
 11721                           
 11722                           ;psect for function _startAbsMove
 11723  25C2                     _startAbsMove:	
 11724                           
 11725                           ;main.c: 292: motionType = ABS_MOVE;
 11726                           
 11727                           ;incstack = 0
 11728                           ; Regs used in _startAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11729  25C2  3002               	movlw	2
 11730  25C3  0020               	movlb	0	; select bank0
 11731  25C4  00CB               	movwf	??_startAbsMove
 11732  25C5  084B               	movf	??_startAbsMove,w
 11733  25C6  00D5               	movwf	_motionType
 11734                           
 11735                           ;main.c: 293: absCommand = steps;
 11736  25C7  084A               	movf	startAbsMove@steps+1,w
 11737  25C8  0021               	movlb	1	; select bank1
 11738  25C9  00E5               	movwf	(_absCommand+1)^(0+128)
 11739  25CA  0020               	movlb	0	; select bank0
 11740  25CB  0849               	movf	startAbsMove@steps,w
 11741  25CC  0021               	movlb	1	; select bank1
 11742  25CD  00E4               	movwf	_absCommand^(0+128)
 11743                           
 11744                           ;main.c: 294: printf("A\n");
 11745  25CE  3047               	movlw	low (STR_8| (0+32768))
 11746  25CF  00A0               	movwf	printf@f^(0+128)
 11747  25D0  30AA               	movlw	high (STR_8| (0+32768))
 11748  25D1  00A1               	movwf	(printf@f^(0+128)+1)
 11749  25D2  3186  264A         	fcall	_printf
 11750                           
 11751                           ;main.c: 295: return 0;
 11752  25D4  0020               	movlb	0	; select bank0
 11753  25D5  01C9               	clrf	?_startAbsMove
 11754  25D6  01CA               	clrf	?_startAbsMove+1
 11755  25D7  0008               	return
 11756  25D8                     __end_of_startAbsMove:	
 11757                           
 11758                           	psect	text23
 11759  0801                     __ptext23:	
 11760 ;; *************** function _setMoveMask *****************
 11761 ;; Defined at:
 11762 ;;		line 499 in file "main.c"
 11763 ;; Parameters:    Size  Location     Type
 11764 ;;  probeNum        2   41[BANK0 ] int 
 11765 ;;  onOff           2   43[BANK0 ] int 
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;		None
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  2   41[BANK0 ] int 
 11770 ;; Registers used:
 11771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11777 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11779 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11780 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11781 ;;Total ram usage:       10 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:    9
 11784 ;; This function calls:
 11785 ;;		_printf
 11786 ;; This function is called by:
 11787 ;;		_execCmd
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           
 11792                           ;psect for function _setMoveMask
 11793  0801                     _setMoveMask:	
 11794                           
 11795                           ;main.c: 503: if (probeNum < 24){
 11796                           
 11797                           ;incstack = 0
 11798                           ; Regs used in _setMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11799  0801  0020               	movlb	0	; select bank0
 11800  0802  084A               	movf	setMoveMask@probeNum+1,w
 11801  0803  3A80               	xorlw	128
 11802  0804  0021               	movlb	1	; select bank1
 11803  0805  00B7               	movwf	??_setMoveMask^(0+128)
 11804  0806  3080               	movlw	128
 11805  0807  0237               	subwf	??_setMoveMask^(0+128),w
 11806  0808  1D03               	skipz
 11807  0809  280D               	goto	u7995
 11808  080A  3018               	movlw	24
 11809  080B  0020               	movlb	0	; select bank0
 11810  080C  0249               	subwf	setMoveMask@probeNum,w
 11811  080D                     u7995:	
 11812  080D  1803               	skipnc
 11813  080E  286C               	goto	l8038
 11814                           
 11815                           ;main.c: 504: if (onOff)
 11816  080F  0020               	movlb	0	; select bank0
 11817  0810  084B               	movf	setMoveMask@onOff,w
 11818  0811  044C               	iorwf	setMoveMask@onOff+1,w
 11819  0812  1903               	btfsc	3,2
 11820  0813  283A               	goto	l8030
 11821                           
 11822                           ;main.c: 505: moveMask |= (1<<probeNum);
 11823  0814  3001               	movlw	1
 11824  0815  0021               	movlb	1	; select bank1
 11825  0816  00B7               	movwf	??_setMoveMask^(0+128)
 11826  0817  3000               	movlw	0
 11827  0818  00B8               	movwf	(??_setMoveMask^(0+128)+1)
 11828  0819  0020               	movlb	0	; select bank0
 11829  081A  0A49               	incf	setMoveMask@probeNum,w
 11830  081B  0021               	movlb	1	; select bank1
 11831  081C  281F               	goto	u8014
 11832  081D                     u8015:	
 11833  081D  35B7               	lslf	??_setMoveMask^(0+128),f
 11834  081E  0DB8               	rlf	(??_setMoveMask^(0+128)+1),f
 11835  081F                     u8014:	
 11836  081F  0B89               	decfsz	9,f
 11837  0820  281D               	goto	u8015
 11838  0821  0837               	movf	??_setMoveMask^(0+128),w
 11839  0822  00B9               	movwf	(??_setMoveMask+2)^(0+128)
 11840  0823  0838               	movf	(??_setMoveMask+1)^(0+128),w
 11841  0824  00BA               	movwf	((??_setMoveMask+2)^(0+128)+1)
 11842  0825  3000               	movlw	0
 11843  0826  1BBA               	btfsc	((??_setMoveMask+2)^(0+128)+1),7
 11844  0827  30FF               	movlw	255
 11845  0828  00BB               	movwf	((??_setMoveMask+2)^(0+128)+2)
 11846  0829  00BC               	movwf	((??_setMoveMask+2)^(0+128)+3)
 11847  082A  0839               	movf	(??_setMoveMask+2)^(0+128),w
 11848  082B  0020               	movlb	0	; select bank0
 11849  082C  04CE               	iorwf	_moveMask,f
 11850  082D  0021               	movlb	1	; select bank1
 11851  082E  083A               	movf	(??_setMoveMask+3)^(0+128),w
 11852  082F  0020               	movlb	0	; select bank0
 11853  0830  04CF               	iorwf	_moveMask+1,f
 11854  0831  0021               	movlb	1	; select bank1
 11855  0832  083B               	movf	(??_setMoveMask+4)^(0+128),w
 11856  0833  0020               	movlb	0	; select bank0
 11857  0834  04D0               	iorwf	_moveMask+2,f
 11858  0835  0021               	movlb	1	; select bank1
 11859  0836  083C               	movf	(??_setMoveMask+5)^(0+128),w
 11860  0837  0020               	movlb	0	; select bank0
 11861  0838  04D1               	iorwf	_moveMask+3,f
 11862  0839  2861               	goto	l8032
 11863  083A                     l8030:	
 11864                           
 11865                           ;main.c: 506: else
 11866                           ;main.c: 507: moveMask &= ~(1 << probeNum);
 11867  083A  3001               	movlw	1
 11868  083B  0021               	movlb	1	; select bank1
 11869  083C  00B7               	movwf	??_setMoveMask^(0+128)
 11870  083D  3000               	movlw	0
 11871  083E  00B8               	movwf	(??_setMoveMask^(0+128)+1)
 11872  083F  0020               	movlb	0	; select bank0
 11873  0840  0A49               	incf	setMoveMask@probeNum,w
 11874  0841  0021               	movlb	1	; select bank1
 11875  0842  2845               	goto	u8024
 11876  0843                     u8025:	
 11877  0843  35B7               	lslf	??_setMoveMask^(0+128),f
 11878  0844  0DB8               	rlf	(??_setMoveMask^(0+128)+1),f
 11879  0845                     u8024:	
 11880  0845  0B89               	decfsz	9,f
 11881  0846  2843               	goto	u8025
 11882  0847  09B7               	comf	??_setMoveMask^(0+128),f
 11883  0848  09B8               	comf	(??_setMoveMask^(0+128)+1),f
 11884  0849  0837               	movf	??_setMoveMask^(0+128),w
 11885  084A  00B9               	movwf	(??_setMoveMask+2)^(0+128)
 11886  084B  0838               	movf	(??_setMoveMask+1)^(0+128),w
 11887  084C  00BA               	movwf	((??_setMoveMask+2)^(0+128)+1)
 11888  084D  3000               	movlw	0
 11889  084E  1BBA               	btfsc	((??_setMoveMask+2)^(0+128)+1),7
 11890  084F  30FF               	movlw	255
 11891  0850  00BB               	movwf	((??_setMoveMask+2)^(0+128)+2)
 11892  0851  00BC               	movwf	((??_setMoveMask+2)^(0+128)+3)
 11893  0852  0839               	movf	(??_setMoveMask+2)^(0+128),w
 11894  0853  0020               	movlb	0	; select bank0
 11895  0854  05CE               	andwf	_moveMask,f
 11896  0855  0021               	movlb	1	; select bank1
 11897  0856  083A               	movf	(??_setMoveMask+3)^(0+128),w
 11898  0857  0020               	movlb	0	; select bank0
 11899  0858  05CF               	andwf	_moveMask+1,f
 11900  0859  0021               	movlb	1	; select bank1
 11901  085A  083B               	movf	(??_setMoveMask+4)^(0+128),w
 11902  085B  0020               	movlb	0	; select bank0
 11903  085C  05D0               	andwf	_moveMask+2,f
 11904  085D  0021               	movlb	1	; select bank1
 11905  085E  083C               	movf	(??_setMoveMask+5)^(0+128),w
 11906  085F  0020               	movlb	0	; select bank0
 11907  0860  05D1               	andwf	_moveMask+3,f
 11908  0861                     l8032:	
 11909                           
 11910                           ;main.c: 508: printf("A\n");
 11911  0861  3047               	movlw	low (STR_8| (0+32768))
 11912  0862  0021               	movlb	1	; select bank1
 11913  0863  00A0               	movwf	printf@f^(0+128)
 11914  0864  30AA               	movlw	high (STR_8| (0+32768))
 11915  0865  00A1               	movwf	(printf@f^(0+128)+1)
 11916  0866  3186  264A         	fcall	_printf
 11917                           
 11918                           ;main.c: 509: return 0;
 11919  0868  0020               	movlb	0	; select bank0
 11920  0869  01C9               	clrf	?_setMoveMask
 11921  086A  01CA               	clrf	?_setMoveMask+1
 11922  086B  0008               	return
 11923  086C                     l8038:	
 11924                           
 11925                           ;main.c: 510: }
 11926                           ;main.c: 511: printf("E\n");
 11927  086C  304A               	movlw	low (STR_17| (0+32768))
 11928  086D  0021               	movlb	1	; select bank1
 11929  086E  00A0               	movwf	printf@f^(0+128)
 11930  086F  30AA               	movlw	high (STR_17| (0+32768))
 11931  0870  00A1               	movwf	(printf@f^(0+128)+1)
 11932  0871  3186  264A         	fcall	_printf
 11933                           
 11934                           ;main.c: 512: return 1;
 11935  0873  3001               	movlw	1
 11936  0874  0020               	movlb	0	; select bank0
 11937  0875  00C9               	movwf	?_setMoveMask
 11938  0876  3000               	movlw	0
 11939  0877  00CA               	movwf	?_setMoveMask+1
 11940  0878  0008               	return
 11941  0879                     __end_of_setMoveMask:	
 11942                           
 11943                           	psect	text24
 11944  26B0                     __ptext24:	
 11945 ;; *************** function _setLEDPwr *****************
 11946 ;; Defined at:
 11947 ;;		line 455 in file "main.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;  pwr             2   23[BANK1 ] int 
 11950 ;;  topOrBottom     2   25[BANK1 ] int 
 11951 ;; Auto vars:     Size  Location     Type
 11952 ;;		None
 11953 ;; Return value:  Size  Location     Type
 11954 ;;                  2   23[BANK1 ] int 
 11955 ;; Registers used:
 11956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11957 ;; Tracked objects:
 11958 ;;		On entry : 0/0
 11959 ;;		On exit  : 0/0
 11960 ;;		Unchanged: 0/0
 11961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11962 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11965 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11966 ;;Total ram usage:        4 bytes
 11967 ;; Hardware stack levels used:    1
 11968 ;; Hardware stack levels required when called:    9
 11969 ;; This function calls:
 11970 ;;		_LEDsPwr
 11971 ;;		_printf
 11972 ;; This function is called by:
 11973 ;;		_execCmd
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977                           
 11978                           ;psect for function _setLEDPwr
 11979  26B0                     _setLEDPwr:	
 11980                           
 11981                           ;main.c: 456: LEDsPwr(pwr, topOrBottom);
 11982                           
 11983                           ;incstack = 0
 11984                           ; Regs used in _setLEDPwr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11985  26B0  0021               	movlb	1	; select bank1
 11986  26B1  0838               	movf	(setLEDPwr@pwr+1)^(0+128),w
 11987  26B2  0020               	movlb	0	; select bank0
 11988  26B3  00C5               	movwf	LEDsPwr@pwr+1
 11989  26B4  0021               	movlb	1	; select bank1
 11990  26B5  0837               	movf	setLEDPwr@pwr^(0+128),w
 11991  26B6  0020               	movlb	0	; select bank0
 11992  26B7  00C4               	movwf	LEDsPwr@pwr
 11993  26B8  0021               	movlb	1	; select bank1
 11994  26B9  083A               	movf	(setLEDPwr@topOrBottom+1)^(0+128),w
 11995  26BA  0020               	movlb	0	; select bank0
 11996  26BB  00C7               	movwf	LEDsPwr@topOrBottom+1
 11997  26BC  0021               	movlb	1	; select bank1
 11998  26BD  0839               	movf	setLEDPwr@topOrBottom^(0+128),w
 11999  26BE  0020               	movlb	0	; select bank0
 12000  26BF  00C6               	movwf	LEDsPwr@topOrBottom
 12001  26C0  3195  256F  31A6   	fcall	_LEDsPwr
 12002                           
 12003                           ;main.c: 457: printf("A\n");
 12004  26C3  3047               	movlw	low (STR_8| (0+32768))
 12005  26C4  0021               	movlb	1	; select bank1
 12006  26C5  00A0               	movwf	printf@f^(0+128)
 12007  26C6  30AA               	movlw	high (STR_8| (0+32768))
 12008  26C7  00A1               	movwf	(printf@f^(0+128)+1)
 12009  26C8  3186  264A         	fcall	_printf
 12010                           
 12011                           ;main.c: 458: return 0;
 12012  26CA  0021               	movlb	1	; select bank1
 12013  26CB  01B7               	clrf	?_setLEDPwr^(0+128)
 12014  26CC  01B8               	clrf	(?_setLEDPwr+1)^(0+128)
 12015  26CD  0008               	return
 12016  26CE                     __end_of_setLEDPwr:	
 12017                           
 12018                           	psect	text25
 12019  156F                     __ptext25:	
 12020 ;; *************** function _LEDsPwr *****************
 12021 ;; Defined at:
 12022 ;;		line 12 in file "LEDcomm.c"
 12023 ;; Parameters:    Size  Location     Type
 12024 ;;  pwr             2   36[BANK0 ] int 
 12025 ;;  topOrBottom     2   38[BANK0 ] int 
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;  pwrAll          4    0[BANK1 ] unsigned long 
 12028 ;; Return value:  Size  Location     Type
 12029 ;;                  1    wreg      void 
 12030 ;; Registers used:
 12031 ;;		wreg, status,2, status,0, pclath, cstack
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12037 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12038 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12039 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12040 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12041 ;;Total ram usage:       14 bytes
 12042 ;; Hardware stack levels used:    1
 12043 ;; Hardware stack levels required when called:    8
 12044 ;; This function calls:
 12045 ;;		_send_2length_2bytes_IK
 12046 ;; This function is called by:
 12047 ;;		_main_initialize
 12048 ;;		_setLEDPwr
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           
 12053                           ;psect for function _LEDsPwr
 12054  156F                     _LEDsPwr:	
 12055                           
 12056                           ;LEDcomm.c: 13: pwr = (pwr>63) ? 63 : pwr;
 12057                           
 12058                           ;incstack = 0
 12059                           ; Regs used in _LEDsPwr: [wreg+status,2+status,0+pclath+cstack]
 12060  156F  0020               	movlb	0	; select bank0
 12061  1570  0845               	movf	LEDsPwr@pwr+1,w
 12062  1571  3A80               	xorlw	128
 12063  1572  00C8               	movwf	??_LEDsPwr
 12064  1573  3080               	movlw	128
 12065  1574  0248               	subwf	??_LEDsPwr,w
 12066  1575  1D03               	skipz
 12067  1576  2D79               	goto	u7315
 12068  1577  3040               	movlw	64
 12069  1578  0244               	subwf	LEDsPwr@pwr,w
 12070  1579                     u7315:	
 12071  1579  1C03               	btfss	3,0
 12072  157A  2D80               	goto	l202
 12073  157B  303F               	movlw	63
 12074  157C  0020               	movlb	0	; select bank0
 12075  157D  00C4               	movwf	LEDsPwr@pwr
 12076  157E  3000               	movlw	0
 12077  157F  00C5               	movwf	LEDsPwr@pwr+1
 12078  1580                     l202:	
 12079                           
 12080                           ;LEDcomm.c: 14: unsigned long pwrAll = pwr | (pwr<<6) | (pwr<<12);
 12081  1580  0020               	movlb	0	; select bank0
 12082  1581  0845               	movf	LEDsPwr@pwr+1,w
 12083  1582  00C9               	movwf	??_LEDsPwr+1
 12084  1583  0844               	movf	LEDsPwr@pwr,w
 12085  1584  00C8               	movwf	??_LEDsPwr
 12086  1585  0E48               	swapf	??_LEDsPwr,w
 12087  1586  39F0               	andlw	240
 12088  1587  00C9               	movwf	??_LEDsPwr+1
 12089  1588  01C8               	clrf	??_LEDsPwr
 12090  1589  0845               	movf	LEDsPwr@pwr+1,w
 12091  158A  00CB               	movwf	??_LEDsPwr+3
 12092  158B  0844               	movf	LEDsPwr@pwr,w
 12093  158C  00CA               	movwf	??_LEDsPwr+2
 12094  158D  3006               	movlw	6
 12095  158E                     u7325:	
 12096  158E  35CA               	lslf	??_LEDsPwr+2,f
 12097  158F  0DCB               	rlf	??_LEDsPwr+3,f
 12098  1590  0B89               	decfsz	9,f
 12099  1591  2D8E               	goto	u7325
 12100  1592  0848               	movf	??_LEDsPwr,w
 12101  1593  044A               	iorwf	??_LEDsPwr+2,w
 12102  1594  00CC               	movwf	??_LEDsPwr+4
 12103  1595  0849               	movf	??_LEDsPwr+1,w
 12104  1596  044B               	iorwf	??_LEDsPwr+3,w
 12105  1597  00CD               	movwf	??_LEDsPwr+5
 12106  1598  0844               	movf	LEDsPwr@pwr,w
 12107  1599  044C               	iorwf	??_LEDsPwr+4,w
 12108  159A  0021               	movlb	1	; select bank1
 12109  159B  00A0               	movwf	LEDsPwr@pwrAll^(0+128)
 12110  159C  0020               	movlb	0	; select bank0
 12111  159D  0845               	movf	LEDsPwr@pwr+1,w
 12112  159E  044D               	iorwf	??_LEDsPwr+5,w
 12113  159F  0021               	movlb	1	; select bank1
 12114  15A0  00A1               	movwf	(LEDsPwr@pwrAll+1)^(0+128)
 12115  15A1  01A2               	clrf	(LEDsPwr@pwrAll^(0+128)+2)
 12116  15A2  1BA1               	btfsc	(LEDsPwr@pwrAll^(0+128)+1),7
 12117  15A3  03A2               	decf	(LEDsPwr@pwrAll+2)^(0+128),f
 12118  15A4  0822               	movf	(LEDsPwr@pwrAll^(0+128)+2),w
 12119  15A5  00A3               	movwf	(LEDsPwr@pwrAll+3)^(0+128)
 12120                           
 12121                           ;LEDcomm.c: 15: send_2length_2bytes_IK((unsigned int)((pwrAll>>16) & 0xFFFF),(unsigned i
      +                          nt)pwrAll, 7, topOrBottom);
 12122  15A6  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12123  15A7  0020               	movlb	0	; select bank0
 12124  15A8  00C8               	movwf	??_LEDsPwr
 12125  15A9  0021               	movlb	1	; select bank1
 12126  15AA  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12127  15AB  0020               	movlb	0	; select bank0
 12128  15AC  00C9               	movwf	??_LEDsPwr+1
 12129  15AD  0021               	movlb	1	; select bank1
 12130  15AE  0822               	movf	(LEDsPwr@pwrAll+2)^(0+128),w
 12131  15AF  0020               	movlb	0	; select bank0
 12132  15B0  00CA               	movwf	??_LEDsPwr+2
 12133  15B1  0021               	movlb	1	; select bank1
 12134  15B2  0823               	movf	(LEDsPwr@pwrAll+3)^(0+128),w
 12135  15B3  0020               	movlb	0	; select bank0
 12136  15B4  00CB               	movwf	??_LEDsPwr+3
 12137  15B5  3010               	movlw	16
 12138  15B6                     u7335:	
 12139  15B6  36CB               	lsrf	??_LEDsPwr+3,f
 12140  15B7  0CCA               	rrf	??_LEDsPwr+2,f
 12141  15B8  0CC9               	rrf	??_LEDsPwr+1,f
 12142  15B9  0CC8               	rrf	??_LEDsPwr,f
 12143  15BA  0B89               	decfsz	9,f
 12144  15BB  2DB6               	goto	u7335
 12145  15BC  0849               	movf	??_LEDsPwr+1,w
 12146  15BD  00BD               	movwf	send_2length_2bytes_IK@data1+1
 12147  15BE  0848               	movf	??_LEDsPwr,w
 12148  15BF  00BC               	movwf	send_2length_2bytes_IK@data1
 12149  15C0  0021               	movlb	1	; select bank1
 12150  15C1  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12151  15C2  0020               	movlb	0	; select bank0
 12152  15C3  00BF               	movwf	send_2length_2bytes_IK@data2+1
 12153  15C4  0021               	movlb	1	; select bank1
 12154  15C5  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12155  15C6  0020               	movlb	0	; select bank0
 12156  15C7  00BE               	movwf	send_2length_2bytes_IK@data2
 12157  15C8  3007               	movlw	7
 12158  15C9  00CC               	movwf	??_LEDsPwr+4
 12159  15CA  084C               	movf	??_LEDsPwr+4,w
 12160  15CB  00C0               	movwf	send_2length_2bytes_IK@latch_start
 12161  15CC  0847               	movf	LEDsPwr@topOrBottom+1,w
 12162  15CD  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 12163  15CE  0846               	movf	LEDsPwr@topOrBottom,w
 12164  15CF  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 12165  15D0  31A5  25F0         	fcall	_send_2length_2bytes_IK
 12166  15D2  0008               	return
 12167  15D3                     __end_of_LEDsPwr:	
 12168                           
 12169                           	psect	text26
 12170  2692                     __ptext26:	
 12171 ;; *************** function _setLEDBrightnessRange *****************
 12172 ;; Defined at:
 12173 ;;		line 447 in file "main.c"
 12174 ;; Parameters:    Size  Location     Type
 12175 ;;  r               2   23[BANK1 ] int 
 12176 ;;  tOB             2   25[BANK1 ] int 
 12177 ;; Auto vars:     Size  Location     Type
 12178 ;;		None
 12179 ;; Return value:  Size  Location     Type
 12180 ;;                  2   23[BANK1 ] int 
 12181 ;; Registers used:
 12182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12183 ;; Tracked objects:
 12184 ;;		On entry : 0/0
 12185 ;;		On exit  : 0/0
 12186 ;;		Unchanged: 0/0
 12187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12188 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12191 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12192 ;;Total ram usage:        4 bytes
 12193 ;; Hardware stack levels used:    1
 12194 ;; Hardware stack levels required when called:    9
 12195 ;; This function calls:
 12196 ;;		_LED_setBrightnessRange
 12197 ;;		_printf
 12198 ;; This function is called by:
 12199 ;;		_execCmd
 12200 ;; This function uses a non-reentrant model
 12201 ;;
 12202                           
 12203                           
 12204                           ;psect for function _setLEDBrightnessRange
 12205  2692                     _setLEDBrightnessRange:	
 12206                           
 12207                           ;main.c: 448: LED_setBrightnessRange(r, tOB);
 12208                           
 12209                           ;incstack = 0
 12210                           ; Regs used in _setLEDBrightnessRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12211  2692  0021               	movlb	1	; select bank1
 12212  2693  0838               	movf	(setLEDBrightnessRange@r+1)^(0+128),w
 12213  2694  0020               	movlb	0	; select bank0
 12214  2695  00C5               	movwf	LED_setBrightnessRange@range+1
 12215  2696  0021               	movlb	1	; select bank1
 12216  2697  0837               	movf	setLEDBrightnessRange@r^(0+128),w
 12217  2698  0020               	movlb	0	; select bank0
 12218  2699  00C4               	movwf	LED_setBrightnessRange@range
 12219  269A  0021               	movlb	1	; select bank1
 12220  269B  083A               	movf	(setLEDBrightnessRange@tOB+1)^(0+128),w
 12221  269C  0020               	movlb	0	; select bank0
 12222  269D  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 12223  269E  0021               	movlb	1	; select bank1
 12224  269F  0839               	movf	setLEDBrightnessRange@tOB^(0+128),w
 12225  26A0  0020               	movlb	0	; select bank0
 12226  26A1  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 12227  26A2  318C  2445  31A6   	fcall	_LED_setBrightnessRange
 12228                           
 12229                           ;main.c: 449: printf("A\n");
 12230  26A5  3047               	movlw	low (STR_8| (0+32768))
 12231  26A6  0021               	movlb	1	; select bank1
 12232  26A7  00A0               	movwf	printf@f^(0+128)
 12233  26A8  30AA               	movlw	high (STR_8| (0+32768))
 12234  26A9  00A1               	movwf	(printf@f^(0+128)+1)
 12235  26AA  3186  264A         	fcall	_printf
 12236                           
 12237                           ;main.c: 450: return 0;
 12238  26AC  0021               	movlb	1	; select bank1
 12239  26AD  01B7               	clrf	?_setLEDBrightnessRange^(0+128)
 12240  26AE  01B8               	clrf	(?_setLEDBrightnessRange+1)^(0+128)
 12241  26AF  0008               	return
 12242  26B0                     __end_of_setLEDBrightnessRange:	
 12243                           
 12244                           	psect	text27
 12245  077C                     __ptext27:	
 12246 ;; *************** function _setHeaterToggle *****************
 12247 ;; Defined at:
 12248 ;;		line 464 in file "main.c"
 12249 ;; Parameters:    Size  Location     Type
 12250 ;;  num             2   23[BANK1 ] int 
 12251 ;;  topOrB          2   25[BANK1 ] int 
 12252 ;; Auto vars:     Size  Location     Type
 12253 ;;		None
 12254 ;; Return value:  Size  Location     Type
 12255 ;;                  2   23[BANK1 ] int 
 12256 ;; Registers used:
 12257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12258 ;; Tracked objects:
 12259 ;;		On entry : 0/0
 12260 ;;		On exit  : 0/0
 12261 ;;		Unchanged: 0/0
 12262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12263 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12265 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12266 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12267 ;;Total ram usage:        8 bytes
 12268 ;; Hardware stack levels used:    1
 12269 ;; Hardware stack levels required when called:    9
 12270 ;; This function calls:
 12271 ;;		_LEDsOn
 12272 ;;		_printf
 12273 ;; This function is called by:
 12274 ;;		_execCmd
 12275 ;; This function uses a non-reentrant model
 12276 ;;
 12277                           
 12278                           
 12279                           ;psect for function _setHeaterToggle
 12280  077C                     _setHeaterToggle:	
 12281                           
 12282                           ;main.c: 466: if(topOrB == 1){
 12283                           
 12284                           ;incstack = 0
 12285                           ; Regs used in _setHeaterToggle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12286  077C  0021               	movlb	1	; select bank1
 12287  077D  0339               	decf	setHeaterToggle@topOrB^(0+128),w
 12288  077E  043A               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12289  077F  1D03               	btfss	3,2
 12290  0780  2FB1               	goto	l7992
 12291                           
 12292                           ;main.c: 467: demoHeaterToggle_top ^= 1UL << num;
 12293  0781  3001               	movlw	1
 12294  0782  00BB               	movwf	??_setHeaterToggle^(0+128)
 12295  0783  3000               	movlw	0
 12296  0784  00BC               	movwf	(??_setHeaterToggle^(0+128)+1)
 12297  0785  3000               	movlw	0
 12298  0786  00BD               	movwf	(??_setHeaterToggle^(0+128)+2)
 12299  0787  3000               	movlw	0
 12300  0788  00BE               	movwf	(??_setHeaterToggle^(0+128)+3)
 12301  0789  0A37               	incf	setHeaterToggle@num^(0+128),w
 12302  078A  2F8F               	goto	u7910
 12303  078B                     u7915:	
 12304  078B  35BB               	lslf	??_setHeaterToggle^(0+128),f
 12305  078C  0DBC               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12306  078D  0DBD               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12307  078E  0DBE               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12308  078F                     u7910:	
 12309  078F  0B89               	decfsz	9,f
 12310  0790  2F8B               	goto	u7915
 12311  0791  083B               	movf	??_setHeaterToggle^(0+128),w
 12312  0792  0022               	movlb	2	; select bank2
 12313  0793  06C2               	xorwf	_demoHeaterToggle_top^(0+256),f
 12314  0794  0021               	movlb	1	; select bank1
 12315  0795  083C               	movf	(??_setHeaterToggle+1)^(0+128),w
 12316  0796  0022               	movlb	2	; select bank2
 12317  0797  06C3               	xorwf	(_demoHeaterToggle_top+1)^(0+256),f
 12318  0798  0021               	movlb	1	; select bank1
 12319  0799  083D               	movf	(??_setHeaterToggle+2)^(0+128),w
 12320  079A  0022               	movlb	2	; select bank2
 12321  079B  06C4               	xorwf	(_demoHeaterToggle_top+2)^(0+256),f
 12322  079C  0021               	movlb	1	; select bank1
 12323  079D  083E               	movf	(??_setHeaterToggle+3)^(0+128),w
 12324  079E  0022               	movlb	2	; select bank2
 12325  079F  06C5               	xorwf	(_demoHeaterToggle_top+3)^(0+256),f
 12326                           
 12327                           ;main.c: 468: LEDsOn(demoHeaterToggle_top, 1);
 12328  07A0  0845               	movf	(_demoHeaterToggle_top+3)^(0+256),w
 12329  07A1  0020               	movlb	0	; select bank0
 12330  07A2  00C7               	movwf	LEDsOn@LEDpins+3
 12331  07A3  0022               	movlb	2	; select bank2
 12332  07A4  0844               	movf	(_demoHeaterToggle_top+2)^(0+256),w
 12333  07A5  0020               	movlb	0	; select bank0
 12334  07A6  00C6               	movwf	LEDsOn@LEDpins+2
 12335  07A7  0022               	movlb	2	; select bank2
 12336  07A8  0843               	movf	(_demoHeaterToggle_top+1)^(0+256),w
 12337  07A9  0020               	movlb	0	; select bank0
 12338  07AA  00C5               	movwf	LEDsOn@LEDpins+1
 12339  07AB  0022               	movlb	2	; select bank2
 12340  07AC  0842               	movf	_demoHeaterToggle_top^(0+256),w
 12341  07AD  0020               	movlb	0	; select bank0
 12342  07AE  00C4               	movwf	LEDsOn@LEDpins
 12343  07AF  3001               	movlw	1
 12344  07B0  2FE6               	goto	L21
 12345  07B1                     l7992:	
 12346                           ;main.c: 469: }
 12347                           
 12348                           
 12349                           ;main.c: 470: else if (topOrB == 2){
 12350  07B1  3002               	movlw	2
 12351  07B2  0021               	movlb	1	; select bank1
 12352  07B3  0639               	xorwf	setHeaterToggle@topOrB^(0+128),w
 12353  07B4  043A               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12354  07B5  1D03               	btfss	3,2
 12355  07B6  2FEC               	goto	l7998
 12356                           
 12357                           ;main.c: 471: demoHeaterToggle_bot ^= 1UL << num;
 12358  07B7  3001               	movlw	1
 12359  07B8  00BB               	movwf	??_setHeaterToggle^(0+128)
 12360  07B9  3000               	movlw	0
 12361  07BA  00BC               	movwf	(??_setHeaterToggle^(0+128)+1)
 12362  07BB  3000               	movlw	0
 12363  07BC  00BD               	movwf	(??_setHeaterToggle^(0+128)+2)
 12364  07BD  3000               	movlw	0
 12365  07BE  00BE               	movwf	(??_setHeaterToggle^(0+128)+3)
 12366  07BF  0A37               	incf	setHeaterToggle@num^(0+128),w
 12367  07C0  2FC5               	goto	u7930
 12368  07C1                     u7935:	
 12369  07C1  35BB               	lslf	??_setHeaterToggle^(0+128),f
 12370  07C2  0DBC               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12371  07C3  0DBD               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12372  07C4  0DBE               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12373  07C5                     u7930:	
 12374  07C5  0B89               	decfsz	9,f
 12375  07C6  2FC1               	goto	u7935
 12376  07C7  083B               	movf	??_setHeaterToggle^(0+128),w
 12377  07C8  0022               	movlb	2	; select bank2
 12378  07C9  06BE               	xorwf	_demoHeaterToggle_bot^(0+256),f
 12379  07CA  0021               	movlb	1	; select bank1
 12380  07CB  083C               	movf	(??_setHeaterToggle+1)^(0+128),w
 12381  07CC  0022               	movlb	2	; select bank2
 12382  07CD  06BF               	xorwf	(_demoHeaterToggle_bot+1)^(0+256),f
 12383  07CE  0021               	movlb	1	; select bank1
 12384  07CF  083D               	movf	(??_setHeaterToggle+2)^(0+128),w
 12385  07D0  0022               	movlb	2	; select bank2
 12386  07D1  06C0               	xorwf	(_demoHeaterToggle_bot+2)^(0+256),f
 12387  07D2  0021               	movlb	1	; select bank1
 12388  07D3  083E               	movf	(??_setHeaterToggle+3)^(0+128),w
 12389  07D4  0022               	movlb	2	; select bank2
 12390  07D5  06C1               	xorwf	(_demoHeaterToggle_bot+3)^(0+256),f
 12391                           
 12392                           ;main.c: 472: LEDsOn(demoHeaterToggle_bot, 2);
 12393  07D6  0841               	movf	(_demoHeaterToggle_bot+3)^(0+256),w
 12394  07D7  0020               	movlb	0	; select bank0
 12395  07D8  00C7               	movwf	LEDsOn@LEDpins+3
 12396  07D9  0022               	movlb	2	; select bank2
 12397  07DA  0840               	movf	(_demoHeaterToggle_bot+2)^(0+256),w
 12398  07DB  0020               	movlb	0	; select bank0
 12399  07DC  00C6               	movwf	LEDsOn@LEDpins+2
 12400  07DD  0022               	movlb	2	; select bank2
 12401  07DE  083F               	movf	(_demoHeaterToggle_bot+1)^(0+256),w
 12402  07DF  0020               	movlb	0	; select bank0
 12403  07E0  00C5               	movwf	LEDsOn@LEDpins+1
 12404  07E1  0022               	movlb	2	; select bank2
 12405  07E2  083E               	movf	_demoHeaterToggle_bot^(0+256),w
 12406  07E3  0020               	movlb	0	; select bank0
 12407  07E4  00C4               	movwf	LEDsOn@LEDpins
 12408  07E5  3002               	movlw	2
 12409  07E6                     L21:	
 12410  07E6  00C8               	movwf	LEDsOn@topOrBottom
 12411  07E7  3000               	movlw	0
 12412  07E8  00C9               	movwf	LEDsOn@topOrBottom+1
 12413  07E9  3193  23CC  3187   	fcall	_LEDsOn
 12414  07EC                     l7998:	
 12415                           
 12416                           ;main.c: 473: }
 12417                           ;main.c: 475: printf("A\n");
 12418  07EC  3047               	movlw	low (STR_8| (0+32768))
 12419  07ED  0021               	movlb	1	; select bank1
 12420  07EE  00A0               	movwf	printf@f^(0+128)
 12421  07EF  30AA               	movlw	high (STR_8| (0+32768))
 12422  07F0  00A1               	movwf	(printf@f^(0+128)+1)
 12423  07F1  3186  264A         	fcall	_printf
 12424                           
 12425                           ;main.c: 476: return 0;
 12426  07F3  0021               	movlb	1	; select bank1
 12427  07F4  01B7               	clrf	?_setHeaterToggle^(0+128)
 12428  07F5  01B8               	clrf	(?_setHeaterToggle+1)^(0+128)
 12429  07F6  0008               	return
 12430  07F7                     __end_of_setHeaterToggle:	
 12431                           
 12432                           	psect	text28
 12433  13ED                     __ptext28:	
 12434 ;; *************** function _setHeaterPreTime *****************
 12435 ;; Defined at:
 12436 ;;		line 431 in file "main.c"
 12437 ;; Parameters:    Size  Location     Type
 12438 ;;  t               2   29[BANK1 ] int 
 12439 ;; Auto vars:     Size  Location     Type
 12440 ;;		None
 12441 ;; Return value:  Size  Location     Type
 12442 ;;                  2   29[BANK1 ] int 
 12443 ;; Registers used:
 12444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12445 ;; Tracked objects:
 12446 ;;		On entry : 0/0
 12447 ;;		On exit  : 0/0
 12448 ;;		Unchanged: 0/0
 12449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12450 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12452 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12453 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12454 ;;Total ram usage:        4 bytes
 12455 ;; Hardware stack levels used:    1
 12456 ;; Hardware stack levels required when called:    9
 12457 ;; This function calls:
 12458 ;;		_TMR0_Load8bitPeriod
 12459 ;;		___awtoft
 12460 ;;		___ftadd
 12461 ;;		___ftmul
 12462 ;;		___fttol
 12463 ;;		_printf
 12464 ;; This function is called by:
 12465 ;;		_execCmd
 12466 ;; This function uses a non-reentrant model
 12467 ;;
 12468                           
 12469                           
 12470                           ;psect for function _setHeaterPreTime
 12471  13ED                     _setHeaterPreTime:	
 12472                           
 12473                           ;main.c: 432: heater_pre_time_ms = t;
 12474                           
 12475                           ;incstack = 0
 12476                           ; Regs used in _setHeaterPreTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12477  13ED  0021               	movlb	1	; select bank1
 12478  13EE  083E               	movf	(setHeaterPreTime@t+1)^(0+128),w
 12479  13EF  00EF               	movwf	(_heater_pre_time_ms+1)^(0+128)
 12480  13F0  083D               	movf	setHeaterPreTime@t^(0+128),w
 12481  13F1  00EE               	movwf	_heater_pre_time_ms^(0+128)
 12482                           
 12483                           ;main.c: 433: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 12484  13F2  096E               	comf	_heater_pre_time_ms^(0+128),w
 12485  13F3  00BF               	movwf	??_setHeaterPreTime^(0+128)
 12486  13F4  096F               	comf	(_heater_pre_time_ms+1)^(0+128),w
 12487  13F5  00C0               	movwf	(??_setHeaterPreTime^(0+128)+1)
 12488  13F6  0ABF               	incf	??_setHeaterPreTime^(0+128),f
 12489  13F7  1903               	skipnz
 12490  13F8  0AC0               	incf	(??_setHeaterPreTime^(0+128)+1),f
 12491  13F9  086A               	movf	_piezo_on_time_ms^(0+128),w
 12492  13FA  073F               	addwf	??_setHeaterPreTime^(0+128),w
 12493  13FB  0020               	movlb	0	; select bank0
 12494  13FC  00B9               	movwf	___awtoft@c
 12495  13FD  0021               	movlb	1	; select bank1
 12496  13FE  086B               	movf	(_piezo_on_time_ms+1)^(0+128),w
 12497  13FF  3D40               	addwfc	(??_setHeaterPreTime+1)^(0+128),w
 12498  1400  0020               	movlb	0	; select bank0
 12499  1401  00BA               	movwf	___awtoft@c+1
 12500  1402  31A7  274F  3193   	fcall	___awtoft
 12501  1405  0020               	movlb	0	; select bank0
 12502  1406  0839               	movf	?___awtoft,w
 12503  1407  00C2               	movwf	___ftmul@f2
 12504  1408  083A               	movf	?___awtoft+1,w
 12505  1409  00C3               	movwf	___ftmul@f2+1
 12506  140A  083B               	movf	?___awtoft+2,w
 12507  140B  00C4               	movwf	___ftmul@f2+2
 12508  140C  3044               	movlw	low (_TMR0_RANGE| (0+32768))
 12509  140D  0084               	movwf	4
 12510  140E  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 12511  140F  0085               	movwf	5
 12512  1410  3F00               	moviw [0]fsr0
 12513  1411  00BF               	movwf	___ftmul@f1
 12514  1412  3F01               	moviw [1]fsr0
 12515  1413  00C0               	movwf	___ftmul@f1+1
 12516  1414  3F02               	moviw [2]fsr0
 12517  1415  00C1               	movwf	___ftmul@f1+2
 12518  1416  318D  2523  3193   	fcall	___ftmul
 12519  1419  0020               	movlb	0	; select bank0
 12520  141A  083F               	movf	?___ftmul,w
 12521  141B  0021               	movlb	1	; select bank1
 12522  141C  00A9               	movwf	___ftadd@f2^(0+128)
 12523  141D  0020               	movlb	0	; select bank0
 12524  141E  0840               	movf	?___ftmul+1,w
 12525  141F  0021               	movlb	1	; select bank1
 12526  1420  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 12527  1421  0020               	movlb	0	; select bank0
 12528  1422  0841               	movf	?___ftmul+2,w
 12529  1423  0021               	movlb	1	; select bank1
 12530  1424  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 12531  1425  3000               	movlw	0
 12532  1426  00A6               	movwf	___ftadd@f1^(0+128)
 12533  1427  3080               	movlw	128
 12534  1428  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 12535  1429  30BF               	movlw	191
 12536  142A  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 12537  142B  318E  26E6  3193   	fcall	___ftadd
 12538  142E  0021               	movlb	1	; select bank1
 12539  142F  0826               	movf	?___ftadd^(0+128),w
 12540  1430  00AF               	movwf	___fttol@f1^(0+128)
 12541  1431  0827               	movf	(?___ftadd+1)^(0+128),w
 12542  1432  00B0               	movwf	(___fttol@f1+1)^(0+128)
 12543  1433  0828               	movf	(?___ftadd+2)^(0+128),w
 12544  1434  00B1               	movwf	(___fttol@f1+2)^(0+128)
 12545  1435  3188  2079  3193   	fcall	___fttol
 12546  1438  0021               	movlb	1	; select bank1
 12547  1439  082F               	movf	?___fttol^(0+128),w
 12548  143A  31A3  23BA  3193   	fcall	_TMR0_Load8bitPeriod
 12549                           
 12550                           ;main.c: 434: printf("A\n");
 12551  143D  3047               	movlw	low (STR_8| (0+32768))
 12552  143E  0021               	movlb	1	; select bank1
 12553  143F  00A0               	movwf	printf@f^(0+128)
 12554  1440  30AA               	movlw	high (STR_8| (0+32768))
 12555  1441  00A1               	movwf	(printf@f^(0+128)+1)
 12556  1442  3186  264A         	fcall	_printf
 12557                           
 12558                           ;main.c: 435: return 0;
 12559  1444  0021               	movlb	1	; select bank1
 12560  1445  01BD               	clrf	?_setHeaterPreTime^(0+128)
 12561  1446  01BE               	clrf	(?_setHeaterPreTime+1)^(0+128)
 12562  1447  0008               	return
 12563  1448                     __end_of_setHeaterPreTime:	
 12564                           
 12565                           	psect	text29
 12566  1E4F                     __ptext29:	
 12567 ;; *************** function _setHeaterPostTime *****************
 12568 ;; Defined at:
 12569 ;;		line 437 in file "main.c"
 12570 ;; Parameters:    Size  Location     Type
 12571 ;;  t               2   29[BANK1 ] int 
 12572 ;; Auto vars:     Size  Location     Type
 12573 ;;		None
 12574 ;; Return value:  Size  Location     Type
 12575 ;;                  2   29[BANK1 ] int 
 12576 ;; Registers used:
 12577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12578 ;; Tracked objects:
 12579 ;;		On entry : 0/0
 12580 ;;		On exit  : 0/0
 12581 ;;		Unchanged: 0/0
 12582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12583 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12586 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12587 ;;Total ram usage:        2 bytes
 12588 ;; Hardware stack levels used:    1
 12589 ;; Hardware stack levels required when called:    9
 12590 ;; This function calls:
 12591 ;;		_TMR2_LoadPeriodRegister
 12592 ;;		___awtoft
 12593 ;;		___ftadd
 12594 ;;		___ftmul
 12595 ;;		___fttol
 12596 ;;		_printf
 12597 ;; This function is called by:
 12598 ;;		_execCmd
 12599 ;; This function uses a non-reentrant model
 12600 ;;
 12601                           
 12602                           
 12603                           ;psect for function _setHeaterPostTime
 12604  1E4F                     _setHeaterPostTime:	
 12605                           
 12606                           ;main.c: 438: heater_post_time_ms = t;
 12607                           
 12608                           ;incstack = 0
 12609                           ; Regs used in _setHeaterPostTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12610  1E4F  0021               	movlb	1	; select bank1
 12611  1E50  083E               	movf	(setHeaterPostTime@t+1)^(0+128),w
 12612  1E51  00ED               	movwf	(_heater_post_time_ms+1)^(0+128)
 12613  1E52  083D               	movf	setHeaterPostTime@t^(0+128),w
 12614  1E53  00EC               	movwf	_heater_post_time_ms^(0+128)
 12615                           
 12616                           ;main.c: 439: TMR2_LoadPeriodRegister((heater_post_time_ms*TMR2_RANGE)-1);
 12617  1E54  086D               	movf	(_heater_post_time_ms+1)^(0+128),w
 12618  1E55  0020               	movlb	0	; select bank0
 12619  1E56  00BA               	movwf	___awtoft@c+1
 12620  1E57  0021               	movlb	1	; select bank1
 12621  1E58  086C               	movf	_heater_post_time_ms^(0+128),w
 12622  1E59  0020               	movlb	0	; select bank0
 12623  1E5A  00B9               	movwf	___awtoft@c
 12624  1E5B  31A7  274F  319E   	fcall	___awtoft
 12625  1E5E  0020               	movlb	0	; select bank0
 12626  1E5F  0839               	movf	?___awtoft,w
 12627  1E60  00C2               	movwf	___ftmul@f2
 12628  1E61  083A               	movf	?___awtoft+1,w
 12629  1E62  00C3               	movwf	___ftmul@f2+1
 12630  1E63  083B               	movf	?___awtoft+2,w
 12631  1E64  00C4               	movwf	___ftmul@f2+2
 12632  1E65  3041               	movlw	low (_TMR2_RANGE| (0+32768))
 12633  1E66  0084               	movwf	4
 12634  1E67  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
 12635  1E68  0085               	movwf	5
 12636  1E69  3F00               	moviw [0]fsr0
 12637  1E6A  00BF               	movwf	___ftmul@f1
 12638  1E6B  3F01               	moviw [1]fsr0
 12639  1E6C  00C0               	movwf	___ftmul@f1+1
 12640  1E6D  3F02               	moviw [2]fsr0
 12641  1E6E  00C1               	movwf	___ftmul@f1+2
 12642  1E6F  318D  2523  319E   	fcall	___ftmul
 12643  1E72  0020               	movlb	0	; select bank0
 12644  1E73  083F               	movf	?___ftmul,w
 12645  1E74  0021               	movlb	1	; select bank1
 12646  1E75  00A9               	movwf	___ftadd@f2^(0+128)
 12647  1E76  0020               	movlb	0	; select bank0
 12648  1E77  0840               	movf	?___ftmul+1,w
 12649  1E78  0021               	movlb	1	; select bank1
 12650  1E79  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 12651  1E7A  0020               	movlb	0	; select bank0
 12652  1E7B  0841               	movf	?___ftmul+2,w
 12653  1E7C  0021               	movlb	1	; select bank1
 12654  1E7D  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 12655  1E7E  3000               	movlw	0
 12656  1E7F  00A6               	movwf	___ftadd@f1^(0+128)
 12657  1E80  3080               	movlw	128
 12658  1E81  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 12659  1E82  30BF               	movlw	191
 12660  1E83  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 12661  1E84  318E  26E6  319E   	fcall	___ftadd
 12662  1E87  0021               	movlb	1	; select bank1
 12663  1E88  0826               	movf	?___ftadd^(0+128),w
 12664  1E89  00AF               	movwf	___fttol@f1^(0+128)
 12665  1E8A  0827               	movf	(?___ftadd+1)^(0+128),w
 12666  1E8B  00B0               	movwf	(___fttol@f1+1)^(0+128)
 12667  1E8C  0828               	movf	(?___ftadd+2)^(0+128),w
 12668  1E8D  00B1               	movwf	(___fttol@f1+2)^(0+128)
 12669  1E8E  3188  2079  319E   	fcall	___fttol
 12670  1E91  0021               	movlb	1	; select bank1
 12671  1E92  082F               	movf	?___fttol^(0+128),w
 12672  1E93  31A3  23BF  319E   	fcall	_TMR2_LoadPeriodRegister
 12673                           
 12674                           ;main.c: 440: printf("A\n");
 12675  1E96  3047               	movlw	low (STR_8| (0+32768))
 12676  1E97  0021               	movlb	1	; select bank1
 12677  1E98  00A0               	movwf	printf@f^(0+128)
 12678  1E99  30AA               	movlw	high (STR_8| (0+32768))
 12679  1E9A  00A1               	movwf	(printf@f^(0+128)+1)
 12680  1E9B  3186  264A         	fcall	_printf
 12681                           
 12682                           ;main.c: 441: return 0;
 12683  1E9D  0021               	movlb	1	; select bank1
 12684  1E9E  01BD               	clrf	?_setHeaterPostTime^(0+128)
 12685  1E9F  01BE               	clrf	(?_setHeaterPostTime+1)^(0+128)
 12686  1EA0  0008               	return
 12687  1EA1                     __end_of_setHeaterPostTime:	
 12688                           
 12689                           	psect	text30
 12690  23BF                     __ptext30:	
 12691 ;; *************** function _TMR2_LoadPeriodRegister *****************
 12692 ;; Defined at:
 12693 ;;		line 112 in file "mcc_generated_files/tmr2.c"
 12694 ;; Parameters:    Size  Location     Type
 12695 ;;  periodVal       1    wreg     unsigned char 
 12696 ;; Auto vars:     Size  Location     Type
 12697 ;;  periodVal       1   17[BANK0 ] unsigned char 
 12698 ;; Return value:  Size  Location     Type
 12699 ;;                  1    wreg      void 
 12700 ;; Registers used:
 12701 ;;		wreg
 12702 ;; Tracked objects:
 12703 ;;		On entry : 0/0
 12704 ;;		On exit  : 0/0
 12705 ;;		Unchanged: 0/0
 12706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12710 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12711 ;;Total ram usage:        1 bytes
 12712 ;; Hardware stack levels used:    1
 12713 ;; Hardware stack levels required when called:    6
 12714 ;; This function calls:
 12715 ;;		Nothing
 12716 ;; This function is called by:
 12717 ;;		_main_initialize
 12718 ;;		_setHeaterPostTime
 12719 ;; This function uses a non-reentrant model
 12720 ;;
 12721                           
 12722                           
 12723                           ;psect for function _TMR2_LoadPeriodRegister
 12724  23BF                     _TMR2_LoadPeriodRegister:	
 12725                           
 12726                           ;incstack = 0
 12727                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
 12728                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
 12729  23BF  0020               	movlb	0	; select bank0
 12730  23C0  00B1               	movwf	TMR2_LoadPeriodRegister@periodVal
 12731                           
 12732                           ;tmr2.c: 114: PR2 = periodVal;
 12733  23C1  0831               	movf	TMR2_LoadPeriodRegister@periodVal,w
 12734  23C2  009E               	movwf	30	;volatile
 12735  23C3  0008               	return
 12736  23C4                     __end_of_TMR2_LoadPeriodRegister:	
 12737                           
 12738                           	psect	text31
 12739  1FA5                     __ptext31:	
 12740 ;; *************** function _setDrvPiezoOnTime *****************
 12741 ;; Defined at:
 12742 ;;		line 420 in file "main.c"
 12743 ;; Parameters:    Size  Location     Type
 12744 ;;  t               2   29[BANK1 ] int 
 12745 ;; Auto vars:     Size  Location     Type
 12746 ;;		None
 12747 ;; Return value:  Size  Location     Type
 12748 ;;                  2   29[BANK1 ] int 
 12749 ;; Registers used:
 12750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12751 ;; Tracked objects:
 12752 ;;		On entry : 0/0
 12753 ;;		On exit  : 0/0
 12754 ;;		Unchanged: 0/0
 12755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12756 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12758 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12759 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12760 ;;Total ram usage:        4 bytes
 12761 ;; Hardware stack levels used:    1
 12762 ;; Hardware stack levels required when called:    9
 12763 ;; This function calls:
 12764 ;;		_TMR0_Load8bitPeriod
 12765 ;;		___awtoft
 12766 ;;		___ftadd
 12767 ;;		___ftmul
 12768 ;;		___fttol
 12769 ;;		_printf
 12770 ;; This function is called by:
 12771 ;;		_execCmd
 12772 ;; This function uses a non-reentrant model
 12773 ;;
 12774                           
 12775                           
 12776                           ;psect for function _setDrvPiezoOnTime
 12777  1FA5                     _setDrvPiezoOnTime:	
 12778                           
 12779                           ;main.c: 421: piezo_on_time_ms = t;
 12780                           
 12781                           ;incstack = 0
 12782                           ; Regs used in _setDrvPiezoOnTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12783  1FA5  0021               	movlb	1	; select bank1
 12784  1FA6  083E               	movf	(setDrvPiezoOnTime@t+1)^(0+128),w
 12785  1FA7  00EB               	movwf	(_piezo_on_time_ms+1)^(0+128)
 12786  1FA8  083D               	movf	setDrvPiezoOnTime@t^(0+128),w
 12787  1FA9  00EA               	movwf	_piezo_on_time_ms^(0+128)
 12788                           
 12789                           ;main.c: 422: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 12790  1FAA  096E               	comf	_heater_pre_time_ms^(0+128),w
 12791  1FAB  00BF               	movwf	??_setDrvPiezoOnTime^(0+128)
 12792  1FAC  096F               	comf	(_heater_pre_time_ms+1)^(0+128),w
 12793  1FAD  00C0               	movwf	(??_setDrvPiezoOnTime^(0+128)+1)
 12794  1FAE  0ABF               	incf	??_setDrvPiezoOnTime^(0+128),f
 12795  1FAF  1903               	skipnz
 12796  1FB0  0AC0               	incf	(??_setDrvPiezoOnTime^(0+128)+1),f
 12797  1FB1  086A               	movf	_piezo_on_time_ms^(0+128),w
 12798  1FB2  073F               	addwf	??_setDrvPiezoOnTime^(0+128),w
 12799  1FB3  0020               	movlb	0	; select bank0
 12800  1FB4  00B9               	movwf	___awtoft@c
 12801  1FB5  0021               	movlb	1	; select bank1
 12802  1FB6  086B               	movf	(_piezo_on_time_ms+1)^(0+128),w
 12803  1FB7  3D40               	addwfc	(??_setDrvPiezoOnTime+1)^(0+128),w
 12804  1FB8  0020               	movlb	0	; select bank0
 12805  1FB9  00BA               	movwf	___awtoft@c+1
 12806  1FBA  31A7  274F  319F   	fcall	___awtoft
 12807  1FBD  0020               	movlb	0	; select bank0
 12808  1FBE  0839               	movf	?___awtoft,w
 12809  1FBF  00C2               	movwf	___ftmul@f2
 12810  1FC0  083A               	movf	?___awtoft+1,w
 12811  1FC1  00C3               	movwf	___ftmul@f2+1
 12812  1FC2  083B               	movf	?___awtoft+2,w
 12813  1FC3  00C4               	movwf	___ftmul@f2+2
 12814  1FC4  3044               	movlw	low (_TMR0_RANGE| (0+32768))
 12815  1FC5  0084               	movwf	4
 12816  1FC6  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 12817  1FC7  0085               	movwf	5
 12818  1FC8  3F00               	moviw [0]fsr0
 12819  1FC9  00BF               	movwf	___ftmul@f1
 12820  1FCA  3F01               	moviw [1]fsr0
 12821  1FCB  00C0               	movwf	___ftmul@f1+1
 12822  1FCC  3F02               	moviw [2]fsr0
 12823  1FCD  00C1               	movwf	___ftmul@f1+2
 12824  1FCE  318D  2523  319F   	fcall	___ftmul
 12825  1FD1  0020               	movlb	0	; select bank0
 12826  1FD2  083F               	movf	?___ftmul,w
 12827  1FD3  0021               	movlb	1	; select bank1
 12828  1FD4  00A9               	movwf	___ftadd@f2^(0+128)
 12829  1FD5  0020               	movlb	0	; select bank0
 12830  1FD6  0840               	movf	?___ftmul+1,w
 12831  1FD7  0021               	movlb	1	; select bank1
 12832  1FD8  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 12833  1FD9  0020               	movlb	0	; select bank0
 12834  1FDA  0841               	movf	?___ftmul+2,w
 12835  1FDB  0021               	movlb	1	; select bank1
 12836  1FDC  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 12837  1FDD  3000               	movlw	0
 12838  1FDE  00A6               	movwf	___ftadd@f1^(0+128)
 12839  1FDF  3080               	movlw	128
 12840  1FE0  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 12841  1FE1  30BF               	movlw	191
 12842  1FE2  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 12843  1FE3  318E  26E6  319F   	fcall	___ftadd
 12844  1FE6  0021               	movlb	1	; select bank1
 12845  1FE7  0826               	movf	?___ftadd^(0+128),w
 12846  1FE8  00AF               	movwf	___fttol@f1^(0+128)
 12847  1FE9  0827               	movf	(?___ftadd+1)^(0+128),w
 12848  1FEA  00B0               	movwf	(___fttol@f1+1)^(0+128)
 12849  1FEB  0828               	movf	(?___ftadd+2)^(0+128),w
 12850  1FEC  00B1               	movwf	(___fttol@f1+2)^(0+128)
 12851  1FED  3188  2079  319F   	fcall	___fttol
 12852  1FF0  0021               	movlb	1	; select bank1
 12853  1FF1  082F               	movf	?___fttol^(0+128),w
 12854  1FF2  31A3  23BA  319F   	fcall	_TMR0_Load8bitPeriod
 12855                           
 12856                           ;main.c: 423: printf("A\n");
 12857  1FF5  3047               	movlw	low (STR_8| (0+32768))
 12858  1FF6  0021               	movlb	1	; select bank1
 12859  1FF7  00A0               	movwf	printf@f^(0+128)
 12860  1FF8  30AA               	movlw	high (STR_8| (0+32768))
 12861  1FF9  00A1               	movwf	(printf@f^(0+128)+1)
 12862  1FFA  3186  264A         	fcall	_printf
 12863                           
 12864                           ;main.c: 424: return 0;
 12865  1FFC  0021               	movlb	1	; select bank1
 12866  1FFD  01BD               	clrf	?_setDrvPiezoOnTime^(0+128)
 12867  1FFE  01BE               	clrf	(?_setDrvPiezoOnTime+1)^(0+128)
 12868  1FFF  0008               	return
 12869  2000                     __end_of_setDrvPiezoOnTime:	
 12870                           
 12871                           	psect	text32
 12872  0879                     __ptext32:	
 12873 ;; *************** function ___fttol *****************
 12874 ;; Defined at:
 12875 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 12876 ;; Parameters:    Size  Location     Type
 12877 ;;  f1              3   15[BANK1 ] float 
 12878 ;; Auto vars:     Size  Location     Type
 12879 ;;  lval            4   24[BANK1 ] unsigned long 
 12880 ;;  exp1            1   28[BANK1 ] unsigned char 
 12881 ;;  sign1           1   23[BANK1 ] unsigned char 
 12882 ;; Return value:  Size  Location     Type
 12883 ;;                  4   15[BANK1 ] long 
 12884 ;; Registers used:
 12885 ;;		wreg, status,2, status,0
 12886 ;; Tracked objects:
 12887 ;;		On entry : 0/0
 12888 ;;		On exit  : 0/0
 12889 ;;		Unchanged: 0/0
 12890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12891 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12892 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12893 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12894 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12895 ;;Total ram usage:       14 bytes
 12896 ;; Hardware stack levels used:    1
 12897 ;; Hardware stack levels required when called:    6
 12898 ;; This function calls:
 12899 ;;		Nothing
 12900 ;; This function is called by:
 12901 ;;		_main_initialize
 12902 ;;		_setDrvPiezoOnTime
 12903 ;;		_setHeaterPreTime
 12904 ;;		_setHeaterPostTime
 12905 ;;		_drv_outputSine
 12906 ;; This function uses a non-reentrant model
 12907 ;;
 12908                           
 12909                           
 12910                           ;psect for function ___fttol
 12911  0879                     ___fttol:	
 12912                           
 12913                           ;incstack = 0
 12914                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 12915  0879  0021               	movlb	1	; select bank1
 12916  087A  082F               	movf	___fttol@f1^(0+128),w
 12917  087B  00B3               	movwf	??___fttol^(0+128)
 12918  087C  0830               	movf	(___fttol@f1+1)^(0+128),w
 12919  087D  00B4               	movwf	(??___fttol^(0+128)+1)
 12920  087E  0831               	movf	(___fttol@f1+2)^(0+128),w
 12921  087F  00B5               	movwf	(??___fttol^(0+128)+2)
 12922  0880  1003               	clrc
 12923  0881  0D34               	rlf	(??___fttol^(0+128)+1),w
 12924  0882  0D35               	rlf	(??___fttol^(0+128)+2),w
 12925  0883  00B6               	movwf	(??___fttol+3)^(0+128)
 12926  0884  0836               	movf	(??___fttol+3)^(0+128),w
 12927  0885  00BC               	movwf	___fttol@exp1^(0+128)
 12928  0886  083C               	movf	___fttol@exp1^(0+128),w
 12929  0887  1D03               	btfss	3,2
 12930  0888  2892               	goto	l5604
 12931  0889  3000               	movlw	0
 12932  088A  00B2               	movwf	(?___fttol+3)^(0+128)
 12933  088B  3000               	movlw	0
 12934  088C  00B1               	movwf	(?___fttol+2)^(0+128)
 12935  088D  3000               	movlw	0
 12936  088E  00B0               	movwf	(?___fttol+1)^(0+128)
 12937  088F  3000               	movlw	0
 12938  0890  00AF               	movwf	?___fttol^(0+128)
 12939  0891  0008               	return
 12940  0892                     l5604:	
 12941  0892  082F               	movf	___fttol@f1^(0+128),w
 12942  0893  00B3               	movwf	??___fttol^(0+128)
 12943  0894  0830               	movf	(___fttol@f1+1)^(0+128),w
 12944  0895  00B4               	movwf	(??___fttol^(0+128)+1)
 12945  0896  0831               	movf	(___fttol@f1+2)^(0+128),w
 12946  0897  00B5               	movwf	(??___fttol^(0+128)+2)
 12947  0898  3017               	movlw	23
 12948  0899                     u4935:	
 12949  0899  36B5               	lsrf	(??___fttol^(0+128)+2),f
 12950  089A  0CB4               	rrf	(??___fttol^(0+128)+1),f
 12951  089B  0CB3               	rrf	??___fttol^(0+128),f
 12952  089C  0B89               	decfsz	9,f
 12953  089D  2899               	goto	u4935
 12954  089E  0833               	movf	??___fttol^(0+128),w
 12955  089F  00B6               	movwf	(??___fttol+3)^(0+128)
 12956  08A0  0836               	movf	(??___fttol+3)^(0+128),w
 12957  08A1  00B7               	movwf	___fttol@sign1^(0+128)
 12958  08A2  17B0               	bsf	(___fttol@f1^(0+128)+1),7
 12959  08A3  30FF               	movlw	255
 12960  08A4  05AF               	andwf	___fttol@f1^(0+128),f
 12961  08A5  30FF               	movlw	255
 12962  08A6  05B0               	andwf	(___fttol@f1+1)^(0+128),f
 12963  08A7  3000               	movlw	0
 12964  08A8  05B1               	andwf	(___fttol@f1+2)^(0+128),f
 12965  08A9  082F               	movf	___fttol@f1^(0+128),w
 12966  08AA  00B8               	movwf	___fttol@lval^(0+128)
 12967  08AB  0830               	movf	(___fttol@f1+1)^(0+128),w
 12968  08AC  00B9               	movwf	(___fttol@lval^(0+128)+1)
 12969  08AD  0831               	movf	(___fttol@f1+2)^(0+128),w
 12970  08AE  00BA               	movwf	(___fttol@lval^(0+128)+2)
 12971  08AF  01BB               	clrf	(___fttol@lval^(0+128)+3)
 12972  08B0  308E               	movlw	142
 12973  08B1  02BC               	subwf	___fttol@exp1^(0+128),f
 12974  08B2  1FBC               	btfss	___fttol@exp1^(0+128),7
 12975  08B3  28D0               	goto	l5624
 12976  08B4  083C               	movf	___fttol@exp1^(0+128),w
 12977  08B5  3A80               	xorlw	128
 12978  08B6  3E8F               	addlw	143
 12979  08B7  1803               	skipnc
 12980  08B8  28C2               	goto	l5622
 12981  08B9  3000               	movlw	0
 12982  08BA  00B2               	movwf	(?___fttol+3)^(0+128)
 12983  08BB  3000               	movlw	0
 12984  08BC  00B1               	movwf	(?___fttol+2)^(0+128)
 12985  08BD  3000               	movlw	0
 12986  08BE  00B0               	movwf	(?___fttol+1)^(0+128)
 12987  08BF  3000               	movlw	0
 12988  08C0  00AF               	movwf	?___fttol^(0+128)
 12989  08C1  0008               	return
 12990  08C2                     l5622:	
 12991  08C2  3001               	movlw	1
 12992  08C3                     u4965:	
 12993  08C3  36BB               	lsrf	(___fttol@lval+3)^(0+128),f
 12994  08C4  0CBA               	rrf	(___fttol@lval+2)^(0+128),f
 12995  08C5  0CB9               	rrf	(___fttol@lval+1)^(0+128),f
 12996  08C6  0CB8               	rrf	___fttol@lval^(0+128),f
 12997  08C7  0B89               	decfsz	9,f
 12998  08C8  28C3               	goto	u4965
 12999  08C9  3001               	movlw	1
 13000  08CA  00B3               	movwf	??___fttol^(0+128)
 13001  08CB  0833               	movf	??___fttol^(0+128),w
 13002  08CC  07BC               	addwf	___fttol@exp1^(0+128),f
 13003  08CD  1903               	btfsc	3,2
 13004  08CE  28E9               	goto	l5632
 13005  08CF  28C2               	goto	l5622
 13006  08D0                     l5624:	
 13007  08D0  3018               	movlw	24
 13008  08D1  023C               	subwf	___fttol@exp1^(0+128),w
 13009  08D2  1C03               	skipc
 13010  08D3  28E6               	goto	l1825
 13011  08D4  3000               	movlw	0
 13012  08D5  00B2               	movwf	(?___fttol+3)^(0+128)
 13013  08D6  3000               	movlw	0
 13014  08D7  00B1               	movwf	(?___fttol+2)^(0+128)
 13015  08D8  3000               	movlw	0
 13016  08D9  00B0               	movwf	(?___fttol+1)^(0+128)
 13017  08DA  3000               	movlw	0
 13018  08DB  00AF               	movwf	?___fttol^(0+128)
 13019  08DC  0008               	return
 13020  08DD                     l5630:	
 13021  08DD  3001               	movlw	1
 13022  08DE                     u4995:	
 13023  08DE  35B8               	lslf	___fttol@lval^(0+128),f
 13024  08DF  0DB9               	rlf	(___fttol@lval+1)^(0+128),f
 13025  08E0  0DBA               	rlf	(___fttol@lval+2)^(0+128),f
 13026  08E1  0DBB               	rlf	(___fttol@lval+3)^(0+128),f
 13027  08E2  0B89               	decfsz	9,f
 13028  08E3  28DE               	goto	u4995
 13029  08E4  3001               	movlw	1
 13030  08E5  02BC               	subwf	___fttol@exp1^(0+128),f
 13031  08E6                     l1825:	
 13032  08E6  083C               	movf	___fttol@exp1^(0+128),w
 13033  08E7  1D03               	btfss	3,2
 13034  08E8  28DD               	goto	l5630
 13035  08E9                     l5632:	
 13036  08E9  0837               	movf	___fttol@sign1^(0+128),w
 13037  08EA  1903               	btfsc	3,2
 13038  08EB  28F7               	goto	l5636
 13039  08EC  09B8               	comf	___fttol@lval^(0+128),f
 13040  08ED  09B9               	comf	(___fttol@lval+1)^(0+128),f
 13041  08EE  09BA               	comf	(___fttol@lval+2)^(0+128),f
 13042  08EF  09BB               	comf	(___fttol@lval+3)^(0+128),f
 13043  08F0  0AB8               	incf	___fttol@lval^(0+128),f
 13044  08F1  1903               	skipnz
 13045  08F2  0AB9               	incf	(___fttol@lval+1)^(0+128),f
 13046  08F3  1903               	skipnz
 13047  08F4  0ABA               	incf	(___fttol@lval+2)^(0+128),f
 13048  08F5  1903               	skipnz
 13049  08F6  0ABB               	incf	(___fttol@lval+3)^(0+128),f
 13050  08F7                     l5636:	
 13051  08F7  083B               	movf	(___fttol@lval+3)^(0+128),w
 13052  08F8  00B2               	movwf	(?___fttol+3)^(0+128)
 13053  08F9  083A               	movf	(___fttol@lval+2)^(0+128),w
 13054  08FA  00B1               	movwf	(?___fttol+2)^(0+128)
 13055  08FB  0839               	movf	(___fttol@lval+1)^(0+128),w
 13056  08FC  00B0               	movwf	(?___fttol+1)^(0+128)
 13057  08FD  0838               	movf	___fttol@lval^(0+128),w
 13058  08FE  00AF               	movwf	?___fttol^(0+128)
 13059  08FF  0008               	return
 13060  0900                     __end_of___fttol:	
 13061                           
 13062                           	psect	text33
 13063  0D23                     __ptext33:	
 13064 ;; *************** function ___ftmul *****************
 13065 ;; Defined at:
 13066 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 13067 ;; Parameters:    Size  Location     Type
 13068 ;;  f1              3   31[BANK0 ] float 
 13069 ;;  f2              3   34[BANK0 ] float 
 13070 ;; Auto vars:     Size  Location     Type
 13071 ;;  f3_as_produc    3    1[BANK1 ] unsigned um
 13072 ;;  sign            1    5[BANK1 ] unsigned char 
 13073 ;;  cntr            1    4[BANK1 ] unsigned char 
 13074 ;;  exp             1    0[BANK1 ] unsigned char 
 13075 ;; Return value:  Size  Location     Type
 13076 ;;                  3   31[BANK0 ] float 
 13077 ;; Registers used:
 13078 ;;		wreg, status,2, status,0, pclath, cstack
 13079 ;; Tracked objects:
 13080 ;;		On entry : 0/0
 13081 ;;		On exit  : 0/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13084 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13085 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13086 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13087 ;;      Totals:         0      10       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13088 ;;Total ram usage:       16 bytes
 13089 ;; Hardware stack levels used:    1
 13090 ;; Hardware stack levels required when called:    7
 13091 ;; This function calls:
 13092 ;;		___ftpack
 13093 ;; This function is called by:
 13094 ;;		_main_initialize
 13095 ;;		_setDrvPiezoOnTime
 13096 ;;		_setHeaterPreTime
 13097 ;;		_setHeaterPostTime
 13098 ;;		_drv_outputSine
 13099 ;; This function uses a non-reentrant model
 13100 ;;
 13101                           
 13102                           
 13103                           ;psect for function ___ftmul
 13104  0D23                     ___ftmul:	
 13105                           
 13106                           ;incstack = 0
 13107                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 13108  0D23  0020               	movlb	0	; select bank0
 13109  0D24  083F               	movf	___ftmul@f1,w
 13110  0D25  00C5               	movwf	??___ftmul
 13111  0D26  0840               	movf	___ftmul@f1+1,w
 13112  0D27  00C6               	movwf	??___ftmul+1
 13113  0D28  0841               	movf	___ftmul@f1+2,w
 13114  0D29  00C7               	movwf	??___ftmul+2
 13115  0D2A  1003               	clrc
 13116  0D2B  0D46               	rlf	??___ftmul+1,w
 13117  0D2C  0D47               	rlf	??___ftmul+2,w
 13118  0D2D  00C8               	movwf	??___ftmul+3
 13119  0D2E  0848               	movf	??___ftmul+3,w
 13120  0D2F  0021               	movlb	1	; select bank1
 13121  0D30  00A0               	movwf	___ftmul@exp^(0+128)
 13122  0D31  0820               	movf	___ftmul@exp^(0+128),w
 13123  0D32  1D03               	btfss	3,2
 13124  0D33  2D3C               	goto	l7700
 13125  0D34  3000               	movlw	0
 13126  0D35  0020               	movlb	0	; select bank0
 13127  0D36  00BF               	movwf	?___ftmul
 13128  0D37  3000               	movlw	0
 13129  0D38  00C0               	movwf	?___ftmul+1
 13130  0D39  3000               	movlw	0
 13131  0D3A  00C1               	movwf	?___ftmul+2
 13132  0D3B  0008               	return
 13133  0D3C                     l7700:	
 13134  0D3C  0020               	movlb	0	; select bank0
 13135  0D3D  0842               	movf	___ftmul@f2,w
 13136  0D3E  00C5               	movwf	??___ftmul
 13137  0D3F  0843               	movf	___ftmul@f2+1,w
 13138  0D40  00C6               	movwf	??___ftmul+1
 13139  0D41  0844               	movf	___ftmul@f2+2,w
 13140  0D42  00C7               	movwf	??___ftmul+2
 13141  0D43  1003               	clrc
 13142  0D44  0D46               	rlf	??___ftmul+1,w
 13143  0D45  0D47               	rlf	??___ftmul+2,w
 13144  0D46  00C8               	movwf	??___ftmul+3
 13145  0D47  0848               	movf	??___ftmul+3,w
 13146  0D48  0021               	movlb	1	; select bank1
 13147  0D49  00A5               	movwf	___ftmul@sign^(0+128)
 13148  0D4A  0825               	movf	___ftmul@sign^(0+128),w
 13149  0D4B  1D03               	btfss	3,2
 13150  0D4C  2D55               	goto	l7706
 13151  0D4D  3000               	movlw	0
 13152  0D4E  0020               	movlb	0	; select bank0
 13153  0D4F  00BF               	movwf	?___ftmul
 13154  0D50  3000               	movlw	0
 13155  0D51  00C0               	movwf	?___ftmul+1
 13156  0D52  3000               	movlw	0
 13157  0D53  00C1               	movwf	?___ftmul+2
 13158  0D54  0008               	return
 13159  0D55                     l7706:	
 13160  0D55  0021               	movlb	1	; select bank1
 13161  0D56  0825               	movf	___ftmul@sign^(0+128),w
 13162  0D57  3E7B               	addlw	123
 13163  0D58  0020               	movlb	0	; select bank0
 13164  0D59  00C5               	movwf	??___ftmul
 13165  0D5A  0845               	movf	??___ftmul,w
 13166  0D5B  0021               	movlb	1	; select bank1
 13167  0D5C  07A0               	addwf	___ftmul@exp^(0+128),f
 13168  0D5D  0020               	movlb	0	; select bank0
 13169  0D5E  083F               	movf	___ftmul@f1,w
 13170  0D5F  00C5               	movwf	??___ftmul
 13171  0D60  0840               	movf	___ftmul@f1+1,w
 13172  0D61  00C6               	movwf	??___ftmul+1
 13173  0D62  0841               	movf	___ftmul@f1+2,w
 13174  0D63  00C7               	movwf	??___ftmul+2
 13175  0D64  3010               	movlw	16
 13176  0D65                     u7725:	
 13177  0D65  36C7               	lsrf	??___ftmul+2,f
 13178  0D66  0CC6               	rrf	??___ftmul+1,f
 13179  0D67  0CC5               	rrf	??___ftmul,f
 13180  0D68  0B89               	decfsz	9,f
 13181  0D69  2D65               	goto	u7725
 13182  0D6A  0845               	movf	??___ftmul,w
 13183  0D6B  00C8               	movwf	??___ftmul+3
 13184  0D6C  0848               	movf	??___ftmul+3,w
 13185  0D6D  0021               	movlb	1	; select bank1
 13186  0D6E  00A5               	movwf	___ftmul@sign^(0+128)
 13187  0D6F  0020               	movlb	0	; select bank0
 13188  0D70  0842               	movf	___ftmul@f2,w
 13189  0D71  00C5               	movwf	??___ftmul
 13190  0D72  0843               	movf	___ftmul@f2+1,w
 13191  0D73  00C6               	movwf	??___ftmul+1
 13192  0D74  0844               	movf	___ftmul@f2+2,w
 13193  0D75  00C7               	movwf	??___ftmul+2
 13194  0D76  3010               	movlw	16
 13195  0D77                     u7735:	
 13196  0D77  36C7               	lsrf	??___ftmul+2,f
 13197  0D78  0CC6               	rrf	??___ftmul+1,f
 13198  0D79  0CC5               	rrf	??___ftmul,f
 13199  0D7A  0B89               	decfsz	9,f
 13200  0D7B  2D77               	goto	u7735
 13201  0D7C  0845               	movf	??___ftmul,w
 13202  0D7D  00C8               	movwf	??___ftmul+3
 13203  0D7E  0848               	movf	??___ftmul+3,w
 13204  0D7F  0021               	movlb	1	; select bank1
 13205  0D80  06A5               	xorwf	___ftmul@sign^(0+128),f
 13206  0D81  3080               	movlw	128
 13207  0D82  0020               	movlb	0	; select bank0
 13208  0D83  00C5               	movwf	??___ftmul
 13209  0D84  0845               	movf	??___ftmul,w
 13210  0D85  0021               	movlb	1	; select bank1
 13211  0D86  05A5               	andwf	___ftmul@sign^(0+128),f
 13212  0D87  0020               	movlb	0	; select bank0
 13213  0D88  17C0               	bsf	___ftmul@f1+1,7
 13214  0D89  17C3               	bsf	___ftmul@f2+1,7
 13215  0D8A  30FF               	movlw	255
 13216  0D8B  05C2               	andwf	___ftmul@f2,f
 13217  0D8C  30FF               	movlw	255
 13218  0D8D  05C3               	andwf	___ftmul@f2+1,f
 13219  0D8E  3000               	movlw	0
 13220  0D8F  05C4               	andwf	___ftmul@f2+2,f
 13221  0D90  3000               	movlw	0
 13222  0D91  0021               	movlb	1	; select bank1
 13223  0D92  00A1               	movwf	___ftmul@f3_as_product^(0+128)
 13224  0D93  3000               	movlw	0
 13225  0D94  00A2               	movwf	(___ftmul@f3_as_product+1)^(0+128)
 13226  0D95  3000               	movlw	0
 13227  0D96  00A3               	movwf	(___ftmul@f3_as_product+2)^(0+128)
 13228  0D97  3007               	movlw	7
 13229  0D98  0020               	movlb	0	; select bank0
 13230  0D99  00C5               	movwf	??___ftmul
 13231  0D9A  0845               	movf	??___ftmul,w
 13232  0D9B  0021               	movlb	1	; select bank1
 13233  0D9C  00A4               	movwf	___ftmul@cntr^(0+128)
 13234  0D9D                     l7718:	
 13235  0D9D  0020               	movlb	0	; select bank0
 13236  0D9E  1C3F               	btfss	___ftmul@f1,0
 13237  0D9F  2DAB               	goto	l7722
 13238  0DA0  0842               	movf	___ftmul@f2,w
 13239  0DA1  0021               	movlb	1	; select bank1
 13240  0DA2  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 13241  0DA3  0020               	movlb	0	; select bank0
 13242  0DA4  0843               	movf	___ftmul@f2+1,w
 13243  0DA5  0021               	movlb	1	; select bank1
 13244  0DA6  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13245  0DA7  0020               	movlb	0	; select bank0
 13246  0DA8  0844               	movf	___ftmul@f2+2,w
 13247  0DA9  0021               	movlb	1	; select bank1
 13248  0DAA  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13249  0DAB                     l7722:	
 13250  0DAB  3001               	movlw	1
 13251  0DAC                     u7755:	
 13252  0DAC  0020               	movlb	0	; select bank0
 13253  0DAD  36C1               	lsrf	___ftmul@f1+2,f
 13254  0DAE  0CC0               	rrf	___ftmul@f1+1,f
 13255  0DAF  0CBF               	rrf	___ftmul@f1,f
 13256  0DB0  0B89               	decfsz	9,f
 13257  0DB1  2DAC               	goto	u7755
 13258  0DB2  3001               	movlw	1
 13259  0DB3                     u7765:	
 13260  0DB3  35C2               	lslf	___ftmul@f2,f
 13261  0DB4  0DC3               	rlf	___ftmul@f2+1,f
 13262  0DB5  0DC4               	rlf	___ftmul@f2+2,f
 13263  0DB6  0B89               	decfsz	9,f
 13264  0DB7  2DB3               	goto	u7765
 13265  0DB8  3001               	movlw	1
 13266  0DB9  0021               	movlb	1	; select bank1
 13267  0DBA  02A4               	subwf	___ftmul@cntr^(0+128),f
 13268  0DBB  1D03               	btfss	3,2
 13269  0DBC  2D9D               	goto	l7718
 13270  0DBD  3009               	movlw	9
 13271  0DBE  0020               	movlb	0	; select bank0
 13272  0DBF  00C5               	movwf	??___ftmul
 13273  0DC0  0845               	movf	??___ftmul,w
 13274  0DC1  0021               	movlb	1	; select bank1
 13275  0DC2  00A4               	movwf	___ftmul@cntr^(0+128)
 13276  0DC3                     l7730:	
 13277  0DC3  0020               	movlb	0	; select bank0
 13278  0DC4  1C3F               	btfss	___ftmul@f1,0
 13279  0DC5  2DD1               	goto	l7734
 13280  0DC6  0842               	movf	___ftmul@f2,w
 13281  0DC7  0021               	movlb	1	; select bank1
 13282  0DC8  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 13283  0DC9  0020               	movlb	0	; select bank0
 13284  0DCA  0843               	movf	___ftmul@f2+1,w
 13285  0DCB  0021               	movlb	1	; select bank1
 13286  0DCC  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13287  0DCD  0020               	movlb	0	; select bank0
 13288  0DCE  0844               	movf	___ftmul@f2+2,w
 13289  0DCF  0021               	movlb	1	; select bank1
 13290  0DD0  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13291  0DD1                     l7734:	
 13292  0DD1  3001               	movlw	1
 13293  0DD2                     u7795:	
 13294  0DD2  0020               	movlb	0	; select bank0
 13295  0DD3  36C1               	lsrf	___ftmul@f1+2,f
 13296  0DD4  0CC0               	rrf	___ftmul@f1+1,f
 13297  0DD5  0CBF               	rrf	___ftmul@f1,f
 13298  0DD6  0B89               	decfsz	9,f
 13299  0DD7  2DD2               	goto	u7795
 13300  0DD8  3001               	movlw	1
 13301  0DD9                     u7805:	
 13302  0DD9  0021               	movlb	1	; select bank1
 13303  0DDA  36A3               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
 13304  0DDB  0CA2               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
 13305  0DDC  0CA1               	rrf	___ftmul@f3_as_product^(0+128),f
 13306  0DDD  0B89               	decfsz	9,f
 13307  0DDE  2DD9               	goto	u7805
 13308  0DDF  3001               	movlw	1
 13309  0DE0  02A4               	subwf	___ftmul@cntr^(0+128),f
 13310  0DE1  1D03               	btfss	3,2
 13311  0DE2  2DC3               	goto	l7730
 13312  0DE3  0821               	movf	___ftmul@f3_as_product^(0+128),w
 13313  0DE4  0020               	movlb	0	; select bank0
 13314  0DE5  00B1               	movwf	___ftpack@arg
 13315  0DE6  0021               	movlb	1	; select bank1
 13316  0DE7  0822               	movf	(___ftmul@f3_as_product+1)^(0+128),w
 13317  0DE8  0020               	movlb	0	; select bank0
 13318  0DE9  00B2               	movwf	___ftpack@arg+1
 13319  0DEA  0021               	movlb	1	; select bank1
 13320  0DEB  0823               	movf	(___ftmul@f3_as_product+2)^(0+128),w
 13321  0DEC  0020               	movlb	0	; select bank0
 13322  0DED  00B3               	movwf	___ftpack@arg+2
 13323  0DEE  0021               	movlb	1	; select bank1
 13324  0DEF  0820               	movf	___ftmul@exp^(0+128),w
 13325  0DF0  0020               	movlb	0	; select bank0
 13326  0DF1  00C5               	movwf	??___ftmul
 13327  0DF2  0845               	movf	??___ftmul,w
 13328  0DF3  00B4               	movwf	___ftpack@exp
 13329  0DF4  0021               	movlb	1	; select bank1
 13330  0DF5  0825               	movf	___ftmul@sign^(0+128),w
 13331  0DF6  0020               	movlb	0	; select bank0
 13332  0DF7  00C6               	movwf	??___ftmul+1
 13333  0DF8  0846               	movf	??___ftmul+1,w
 13334  0DF9  00B5               	movwf	___ftpack@sign
 13335  0DFA  3195  25D3         	fcall	___ftpack
 13336  0DFC  0020               	movlb	0	; select bank0
 13337  0DFD  0831               	movf	?___ftpack,w
 13338  0DFE  00BF               	movwf	?___ftmul
 13339  0DFF  0832               	movf	?___ftpack+1,w
 13340  0E00  00C0               	movwf	?___ftmul+1
 13341  0E01  0833               	movf	?___ftpack+2,w
 13342  0E02  00C1               	movwf	?___ftmul+2
 13343  0E03  0008               	return
 13344  0E04                     __end_of___ftmul:	
 13345                           
 13346                           	psect	text34
 13347  0EE6                     __ptext34:	
 13348 ;; *************** function ___ftadd *****************
 13349 ;; Defined at:
 13350 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 13351 ;; Parameters:    Size  Location     Type
 13352 ;;  f1              3    6[BANK1 ] float 
 13353 ;;  f2              3    9[BANK1 ] float 
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;  exp1            1   14[BANK1 ] unsigned char 
 13356 ;;  exp2            1   13[BANK1 ] unsigned char 
 13357 ;;  sign            1   12[BANK1 ] unsigned char 
 13358 ;; Return value:  Size  Location     Type
 13359 ;;                  3    6[BANK1 ] float 
 13360 ;; Registers used:
 13361 ;;		wreg, status,2, status,0, pclath, cstack
 13362 ;; Tracked objects:
 13363 ;;		On entry : 0/0
 13364 ;;		On exit  : 0/0
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13367 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13368 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13369 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13370 ;;      Totals:         0       4       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13371 ;;Total ram usage:       13 bytes
 13372 ;; Hardware stack levels used:    1
 13373 ;; Hardware stack levels required when called:    7
 13374 ;; This function calls:
 13375 ;;		___ftpack
 13376 ;; This function is called by:
 13377 ;;		_main_initialize
 13378 ;;		_setDrvPiezoOnTime
 13379 ;;		_setHeaterPreTime
 13380 ;;		_setHeaterPostTime
 13381 ;; This function uses a non-reentrant model
 13382 ;;
 13383                           
 13384                           
 13385                           ;psect for function ___ftadd
 13386  0EE6                     ___ftadd:	
 13387                           
 13388                           ;incstack = 0
 13389                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 13390  0EE6  0021               	movlb	1	; select bank1
 13391  0EE7  0826               	movf	___ftadd@f1^(0+128),w
 13392  0EE8  0020               	movlb	0	; select bank0
 13393  0EE9  00C9               	movwf	??___ftadd
 13394  0EEA  0021               	movlb	1	; select bank1
 13395  0EEB  0827               	movf	(___ftadd@f1+1)^(0+128),w
 13396  0EEC  0020               	movlb	0	; select bank0
 13397  0EED  00CA               	movwf	??___ftadd+1
 13398  0EEE  0021               	movlb	1	; select bank1
 13399  0EEF  0828               	movf	(___ftadd@f1+2)^(0+128),w
 13400  0EF0  0020               	movlb	0	; select bank0
 13401  0EF1  00CB               	movwf	??___ftadd+2
 13402  0EF2  1003               	clrc
 13403  0EF3  0D4A               	rlf	??___ftadd+1,w
 13404  0EF4  0D4B               	rlf	??___ftadd+2,w
 13405  0EF5  00CC               	movwf	??___ftadd+3
 13406  0EF6  084C               	movf	??___ftadd+3,w
 13407  0EF7  0021               	movlb	1	; select bank1
 13408  0EF8  00AE               	movwf	___ftadd@exp1^(0+128)
 13409  0EF9  0829               	movf	___ftadd@f2^(0+128),w
 13410  0EFA  0020               	movlb	0	; select bank0
 13411  0EFB  00C9               	movwf	??___ftadd
 13412  0EFC  0021               	movlb	1	; select bank1
 13413  0EFD  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13414  0EFE  0020               	movlb	0	; select bank0
 13415  0EFF  00CA               	movwf	??___ftadd+1
 13416  0F00  0021               	movlb	1	; select bank1
 13417  0F01  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13418  0F02  0020               	movlb	0	; select bank0
 13419  0F03  00CB               	movwf	??___ftadd+2
 13420  0F04  1003               	clrc
 13421  0F05  0D4A               	rlf	??___ftadd+1,w
 13422  0F06  0D4B               	rlf	??___ftadd+2,w
 13423  0F07  00CC               	movwf	??___ftadd+3
 13424  0F08  084C               	movf	??___ftadd+3,w
 13425  0F09  0021               	movlb	1	; select bank1
 13426  0F0A  00AD               	movwf	___ftadd@exp2^(0+128)
 13427  0F0B  082E               	movf	___ftadd@exp1^(0+128),w
 13428  0F0C  1903               	btfsc	3,2
 13429  0F0D  2F1B               	goto	l7630
 13430  0F0E  082D               	movf	___ftadd@exp2^(0+128),w
 13431  0F0F  022E               	subwf	___ftadd@exp1^(0+128),w
 13432  0F10  1803               	skipnc
 13433  0F11  2F23               	goto	l7634
 13434  0F12  032E               	decf	___ftadd@exp1^(0+128),w
 13435  0F13  3AFF               	xorlw	255
 13436  0F14  072D               	addwf	___ftadd@exp2^(0+128),w
 13437  0F15  0020               	movlb	0	; select bank0
 13438  0F16  00C9               	movwf	??___ftadd
 13439  0F17  3019               	movlw	25
 13440  0F18  0249               	subwf	??___ftadd,w
 13441  0F19  1C03               	skipc
 13442  0F1A  2F23               	goto	l7634
 13443  0F1B                     l7630:	
 13444  0F1B  0021               	movlb	1	; select bank1
 13445  0F1C  0829               	movf	___ftadd@f2^(0+128),w
 13446  0F1D  00A6               	movwf	?___ftadd^(0+128)
 13447  0F1E  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13448  0F1F  00A7               	movwf	(?___ftadd+1)^(0+128)
 13449  0F20  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13450  0F21  00A8               	movwf	(?___ftadd+2)^(0+128)
 13451  0F22  0008               	return
 13452  0F23                     l7634:	
 13453  0F23  0021               	movlb	1	; select bank1
 13454  0F24  082D               	movf	___ftadd@exp2^(0+128),w
 13455  0F25  1903               	btfsc	3,2
 13456  0F26  0008               	return
 13457  0F27  082E               	movf	___ftadd@exp1^(0+128),w
 13458  0F28  022D               	subwf	___ftadd@exp2^(0+128),w
 13459  0F29  1803               	skipnc
 13460  0F2A  2F34               	goto	l7640
 13461  0F2B  032D               	decf	___ftadd@exp2^(0+128),w
 13462  0F2C  3AFF               	xorlw	255
 13463  0F2D  072E               	addwf	___ftadd@exp1^(0+128),w
 13464  0F2E  0020               	movlb	0	; select bank0
 13465  0F2F  00C9               	movwf	??___ftadd
 13466  0F30  3019               	movlw	25
 13467  0F31  0249               	subwf	??___ftadd,w
 13468  0F32  1803               	btfsc	3,0
 13469  0F33  0008               	return
 13470  0F34                     l7640:	
 13471  0F34  3006               	movlw	6
 13472  0F35  0020               	movlb	0	; select bank0
 13473  0F36  00C9               	movwf	??___ftadd
 13474  0F37  0849               	movf	??___ftadd,w
 13475  0F38  0021               	movlb	1	; select bank1
 13476  0F39  00AC               	movwf	___ftadd@sign^(0+128)
 13477  0F3A  1BA8               	btfsc	(___ftadd@f1+2)^(0+128),7
 13478  0F3B  17AC               	bsf	___ftadd@sign^(0+128),7
 13479  0F3C  1BAB               	btfsc	(___ftadd@f2+2)^(0+128),7
 13480  0F3D  172C               	bsf	___ftadd@sign^(0+128),6
 13481  0F3E  17A7               	bsf	(___ftadd@f1^(0+128)+1),7
 13482  0F3F  30FF               	movlw	255
 13483  0F40  05A6               	andwf	___ftadd@f1^(0+128),f
 13484  0F41  30FF               	movlw	255
 13485  0F42  05A7               	andwf	(___ftadd@f1+1)^(0+128),f
 13486  0F43  3000               	movlw	0
 13487  0F44  05A8               	andwf	(___ftadd@f1+2)^(0+128),f
 13488  0F45  17AA               	bsf	(___ftadd@f2^(0+128)+1),7
 13489  0F46  30FF               	movlw	255
 13490  0F47  05A9               	andwf	___ftadd@f2^(0+128),f
 13491  0F48  30FF               	movlw	255
 13492  0F49  05AA               	andwf	(___ftadd@f2+1)^(0+128),f
 13493  0F4A  3000               	movlw	0
 13494  0F4B  05AB               	andwf	(___ftadd@f2+2)^(0+128),f
 13495  0F4C  082D               	movf	___ftadd@exp2^(0+128),w
 13496  0F4D  022E               	subwf	___ftadd@exp1^(0+128),w
 13497  0F4E  1803               	skipnc
 13498  0F4F  2F74               	goto	l7662
 13499  0F50                     l7652:	
 13500  0F50  3001               	movlw	1
 13501  0F51                     u7565:	
 13502  0F51  35A9               	lslf	___ftadd@f2^(0+128),f
 13503  0F52  0DAA               	rlf	(___ftadd@f2+1)^(0+128),f
 13504  0F53  0DAB               	rlf	(___ftadd@f2+2)^(0+128),f
 13505  0F54  0B89               	decfsz	9,f
 13506  0F55  2F51               	goto	u7565
 13507  0F56  3001               	movlw	1
 13508  0F57  02AD               	subwf	___ftadd@exp2^(0+128),f
 13509  0F58  082D               	movf	___ftadd@exp2^(0+128),w
 13510  0F59  062E               	xorwf	___ftadd@exp1^(0+128),w
 13511  0F5A  1903               	skipnz
 13512  0F5B  2F6F               	goto	l7660
 13513  0F5C  3001               	movlw	1
 13514  0F5D  02AC               	subwf	___ftadd@sign^(0+128),f
 13515  0F5E  082C               	movf	___ftadd@sign^(0+128),w
 13516  0F5F  3907               	andlw	7
 13517  0F60  1903               	btfsc	3,2
 13518  0F61  2F6F               	goto	l7660
 13519  0F62  2F50               	goto	l7652
 13520  0F63                     l7658:	
 13521  0F63  3001               	movlw	1
 13522  0F64                     u7595:	
 13523  0F64  36A8               	lsrf	(___ftadd@f1+2)^(0+128),f
 13524  0F65  0CA7               	rrf	(___ftadd@f1+1)^(0+128),f
 13525  0F66  0CA6               	rrf	___ftadd@f1^(0+128),f
 13526  0F67  0B89               	decfsz	9,f
 13527  0F68  2F64               	goto	u7595
 13528  0F69  3001               	movlw	1
 13529  0F6A  0020               	movlb	0	; select bank0
 13530  0F6B  00C9               	movwf	??___ftadd
 13531  0F6C  0849               	movf	??___ftadd,w
 13532  0F6D  0021               	movlb	1	; select bank1
 13533  0F6E  07AE               	addwf	___ftadd@exp1^(0+128),f
 13534  0F6F                     l7660:	
 13535  0F6F  082E               	movf	___ftadd@exp1^(0+128),w
 13536  0F70  062D               	xorwf	___ftadd@exp2^(0+128),w
 13537  0F71  1903               	btfsc	3,2
 13538  0F72  2F9B               	goto	l1765
 13539  0F73  2F63               	goto	l7658
 13540  0F74                     l7662:	
 13541  0F74  082E               	movf	___ftadd@exp1^(0+128),w
 13542  0F75  022D               	subwf	___ftadd@exp2^(0+128),w
 13543  0F76  1803               	skipnc
 13544  0F77  2F9B               	goto	l1765
 13545  0F78                     l7664:	
 13546  0F78  3001               	movlw	1
 13547  0F79                     u7625:	
 13548  0F79  35A6               	lslf	___ftadd@f1^(0+128),f
 13549  0F7A  0DA7               	rlf	(___ftadd@f1+1)^(0+128),f
 13550  0F7B  0DA8               	rlf	(___ftadd@f1+2)^(0+128),f
 13551  0F7C  0B89               	decfsz	9,f
 13552  0F7D  2F79               	goto	u7625
 13553  0F7E  3001               	movlw	1
 13554  0F7F  02AE               	subwf	___ftadd@exp1^(0+128),f
 13555  0F80  082D               	movf	___ftadd@exp2^(0+128),w
 13556  0F81  062E               	xorwf	___ftadd@exp1^(0+128),w
 13557  0F82  1903               	skipnz
 13558  0F83  2F97               	goto	l7672
 13559  0F84  3001               	movlw	1
 13560  0F85  02AC               	subwf	___ftadd@sign^(0+128),f
 13561  0F86  082C               	movf	___ftadd@sign^(0+128),w
 13562  0F87  3907               	andlw	7
 13563  0F88  1903               	btfsc	3,2
 13564  0F89  2F97               	goto	l7672
 13565  0F8A  2F78               	goto	l7664
 13566  0F8B                     l7670:	
 13567  0F8B  3001               	movlw	1
 13568  0F8C                     u7655:	
 13569  0F8C  36AB               	lsrf	(___ftadd@f2+2)^(0+128),f
 13570  0F8D  0CAA               	rrf	(___ftadd@f2+1)^(0+128),f
 13571  0F8E  0CA9               	rrf	___ftadd@f2^(0+128),f
 13572  0F8F  0B89               	decfsz	9,f
 13573  0F90  2F8C               	goto	u7655
 13574  0F91  3001               	movlw	1
 13575  0F92  0020               	movlb	0	; select bank0
 13576  0F93  00C9               	movwf	??___ftadd
 13577  0F94  0849               	movf	??___ftadd,w
 13578  0F95  0021               	movlb	1	; select bank1
 13579  0F96  07AD               	addwf	___ftadd@exp2^(0+128),f
 13580  0F97                     l7672:	
 13581  0F97  082E               	movf	___ftadd@exp1^(0+128),w
 13582  0F98  062D               	xorwf	___ftadd@exp2^(0+128),w
 13583  0F99  1D03               	skipz
 13584  0F9A  2F8B               	goto	l7670
 13585  0F9B                     l1765:	
 13586  0F9B  1FAC               	btfss	___ftadd@sign^(0+128),7
 13587  0F9C  2FAD               	goto	l7676
 13588  0F9D  30FF               	movlw	255
 13589  0F9E  06A6               	xorwf	___ftadd@f1^(0+128),f
 13590  0F9F  30FF               	movlw	255
 13591  0FA0  06A7               	xorwf	(___ftadd@f1+1)^(0+128),f
 13592  0FA1  30FF               	movlw	255
 13593  0FA2  06A8               	xorwf	(___ftadd@f1+2)^(0+128),f
 13594  0FA3  3001               	movlw	1
 13595  0FA4  07A6               	addwf	___ftadd@f1^(0+128),f
 13596  0FA5  3000               	movlw	0
 13597  0FA6  1803               	skipnc
 13598  0FA7  3001               	movlw	1
 13599  0FA8  07A7               	addwf	(___ftadd@f1+1)^(0+128),f
 13600  0FA9  3000               	movlw	0
 13601  0FAA  1803               	skipnc
 13602  0FAB  3001               	movlw	1
 13603  0FAC  07A8               	addwf	(___ftadd@f1+2)^(0+128),f
 13604  0FAD                     l7676:	
 13605  0FAD  1F2C               	btfss	___ftadd@sign^(0+128),6
 13606  0FAE  2FBF               	goto	l7680
 13607  0FAF  30FF               	movlw	255
 13608  0FB0  06A9               	xorwf	___ftadd@f2^(0+128),f
 13609  0FB1  30FF               	movlw	255
 13610  0FB2  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 13611  0FB3  30FF               	movlw	255
 13612  0FB4  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 13613  0FB5  3001               	movlw	1
 13614  0FB6  07A9               	addwf	___ftadd@f2^(0+128),f
 13615  0FB7  3000               	movlw	0
 13616  0FB8  1803               	skipnc
 13617  0FB9  3001               	movlw	1
 13618  0FBA  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 13619  0FBB  3000               	movlw	0
 13620  0FBC  1803               	skipnc
 13621  0FBD  3001               	movlw	1
 13622  0FBE  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 13623  0FBF                     l7680:	
 13624  0FBF  01AC               	clrf	___ftadd@sign^(0+128)
 13625  0FC0  0826               	movf	___ftadd@f1^(0+128),w
 13626  0FC1  07A9               	addwf	___ftadd@f2^(0+128),f
 13627  0FC2  0827               	movf	(___ftadd@f1+1)^(0+128),w
 13628  0FC3  3DAA               	addwfc	(___ftadd@f2+1)^(0+128),f
 13629  0FC4  0828               	movf	(___ftadd@f1+2)^(0+128),w
 13630  0FC5  3DAB               	addwfc	(___ftadd@f2+2)^(0+128),f
 13631  0FC6  1FAB               	btfss	(___ftadd@f2+2)^(0+128),7
 13632  0FC7  2FDA               	goto	l7690
 13633  0FC8  30FF               	movlw	255
 13634  0FC9  06A9               	xorwf	___ftadd@f2^(0+128),f
 13635  0FCA  30FF               	movlw	255
 13636  0FCB  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 13637  0FCC  30FF               	movlw	255
 13638  0FCD  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 13639  0FCE  3001               	movlw	1
 13640  0FCF  07A9               	addwf	___ftadd@f2^(0+128),f
 13641  0FD0  3000               	movlw	0
 13642  0FD1  1803               	skipnc
 13643  0FD2  3001               	movlw	1
 13644  0FD3  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 13645  0FD4  3000               	movlw	0
 13646  0FD5  1803               	skipnc
 13647  0FD6  3001               	movlw	1
 13648  0FD7  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 13649  0FD8  01AC               	clrf	___ftadd@sign^(0+128)
 13650  0FD9  0AAC               	incf	___ftadd@sign^(0+128),f
 13651  0FDA                     l7690:	
 13652  0FDA  0829               	movf	___ftadd@f2^(0+128),w
 13653  0FDB  0020               	movlb	0	; select bank0
 13654  0FDC  00B1               	movwf	___ftpack@arg
 13655  0FDD  0021               	movlb	1	; select bank1
 13656  0FDE  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13657  0FDF  0020               	movlb	0	; select bank0
 13658  0FE0  00B2               	movwf	___ftpack@arg+1
 13659  0FE1  0021               	movlb	1	; select bank1
 13660  0FE2  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13661  0FE3  0020               	movlb	0	; select bank0
 13662  0FE4  00B3               	movwf	___ftpack@arg+2
 13663  0FE5  0021               	movlb	1	; select bank1
 13664  0FE6  082E               	movf	___ftadd@exp1^(0+128),w
 13665  0FE7  0020               	movlb	0	; select bank0
 13666  0FE8  00C9               	movwf	??___ftadd
 13667  0FE9  0849               	movf	??___ftadd,w
 13668  0FEA  00B4               	movwf	___ftpack@exp
 13669  0FEB  0021               	movlb	1	; select bank1
 13670  0FEC  082C               	movf	___ftadd@sign^(0+128),w
 13671  0FED  0020               	movlb	0	; select bank0
 13672  0FEE  00CA               	movwf	??___ftadd+1
 13673  0FEF  084A               	movf	??___ftadd+1,w
 13674  0FF0  00B5               	movwf	___ftpack@sign
 13675  0FF1  3195  25D3         	fcall	___ftpack
 13676  0FF3  0020               	movlb	0	; select bank0
 13677  0FF4  0831               	movf	?___ftpack,w
 13678  0FF5  0021               	movlb	1	; select bank1
 13679  0FF6  00A6               	movwf	?___ftadd^(0+128)
 13680  0FF7  0020               	movlb	0	; select bank0
 13681  0FF8  0832               	movf	?___ftpack+1,w
 13682  0FF9  0021               	movlb	1	; select bank1
 13683  0FFA  00A7               	movwf	(?___ftadd+1)^(0+128)
 13684  0FFB  0020               	movlb	0	; select bank0
 13685  0FFC  0833               	movf	?___ftpack+2,w
 13686  0FFD  0021               	movlb	1	; select bank1
 13687  0FFE  00A8               	movwf	(?___ftadd+2)^(0+128)
 13688  0FFF  0008               	return
 13689  1000                     __end_of___ftadd:	
 13690                           
 13691                           	psect	text35
 13692  274F                     __ptext35:	
 13693 ;; *************** function ___awtoft *****************
 13694 ;; Defined at:
 13695 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 13696 ;; Parameters:    Size  Location     Type
 13697 ;;  c               2   25[BANK0 ] int 
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;  sign            1   30[BANK0 ] unsigned char 
 13700 ;; Return value:  Size  Location     Type
 13701 ;;                  3   25[BANK0 ] float 
 13702 ;; Registers used:
 13703 ;;		wreg, status,2, status,0, pclath, cstack
 13704 ;; Tracked objects:
 13705 ;;		On entry : 0/0
 13706 ;;		On exit  : 0/0
 13707 ;;		Unchanged: 0/0
 13708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13709 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13711 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13712 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13713 ;;Total ram usage:        6 bytes
 13714 ;; Hardware stack levels used:    1
 13715 ;; Hardware stack levels required when called:    7
 13716 ;; This function calls:
 13717 ;;		___ftpack
 13718 ;; This function is called by:
 13719 ;;		_main_initialize
 13720 ;;		_setDrvPiezoOnTime
 13721 ;;		_setHeaterPreTime
 13722 ;;		_setHeaterPostTime
 13723 ;;		_drv_outputSine
 13724 ;; This function uses a non-reentrant model
 13725 ;;
 13726                           
 13727                           
 13728                           ;psect for function ___awtoft
 13729  274F                     ___awtoft:	
 13730                           
 13731                           ;incstack = 0
 13732                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 13733  274F  0020               	movlb	0	; select bank0
 13734  2750  01BE               	clrf	___awtoft@sign
 13735  2751  1FBA               	btfss	___awtoft@c+1,7
 13736  2752  2F5A               	goto	l7620
 13737  2753  09B9               	comf	___awtoft@c,f
 13738  2754  09BA               	comf	___awtoft@c+1,f
 13739  2755  0AB9               	incf	___awtoft@c,f
 13740  2756  1903               	skipnz
 13741  2757  0ABA               	incf	___awtoft@c+1,f
 13742  2758  01BE               	clrf	___awtoft@sign
 13743  2759  0ABE               	incf	___awtoft@sign,f
 13744  275A                     l7620:	
 13745  275A  0839               	movf	___awtoft@c,w
 13746  275B  00B1               	movwf	___ftpack@arg
 13747  275C  083A               	movf	___awtoft@c+1,w
 13748  275D  00B2               	movwf	___ftpack@arg+1
 13749  275E  01B3               	clrf	___ftpack@arg+2
 13750  275F  308E               	movlw	142
 13751  2760  00BC               	movwf	??___awtoft
 13752  2761  083C               	movf	??___awtoft,w
 13753  2762  00B4               	movwf	___ftpack@exp
 13754  2763  083E               	movf	___awtoft@sign,w
 13755  2764  00BD               	movwf	??___awtoft+1
 13756  2765  083D               	movf	??___awtoft+1,w
 13757  2766  00B5               	movwf	___ftpack@sign
 13758  2767  3195  25D3         	fcall	___ftpack
 13759  2769  0020               	movlb	0	; select bank0
 13760  276A  0831               	movf	?___ftpack,w
 13761  276B  00B9               	movwf	?___awtoft
 13762  276C  0832               	movf	?___ftpack+1,w
 13763  276D  00BA               	movwf	?___awtoft+1
 13764  276E  0833               	movf	?___ftpack+2,w
 13765  276F  00BB               	movwf	?___awtoft+2
 13766  2770  0008               	return
 13767  2771                     __end_of___awtoft:	
 13768                           
 13769                           	psect	text36
 13770  15D3                     __ptext36:	
 13771 ;; *************** function ___ftpack *****************
 13772 ;; Defined at:
 13773 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;  arg             3   17[BANK0 ] unsigned um
 13776 ;;  exp             1   20[BANK0 ] unsigned char 
 13777 ;;  sign            1   21[BANK0 ] unsigned char 
 13778 ;; Auto vars:     Size  Location     Type
 13779 ;;		None
 13780 ;; Return value:  Size  Location     Type
 13781 ;;                  3   17[BANK0 ] float 
 13782 ;; Registers used:
 13783 ;;		wreg, status,2, status,0
 13784 ;; Tracked objects:
 13785 ;;		On entry : 0/0
 13786 ;;		On exit  : 0/0
 13787 ;;		Unchanged: 0/0
 13788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13789 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13791 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13792 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13793 ;;Total ram usage:        8 bytes
 13794 ;; Hardware stack levels used:    1
 13795 ;; Hardware stack levels required when called:    6
 13796 ;; This function calls:
 13797 ;;		Nothing
 13798 ;; This function is called by:
 13799 ;;		___awtoft
 13800 ;;		___ftadd
 13801 ;;		___ftmul
 13802 ;; This function uses a non-reentrant model
 13803 ;;
 13804                           
 13805                           
 13806                           ;psect for function ___ftpack
 13807  15D3                     ___ftpack:	
 13808                           
 13809                           ;incstack = 0
 13810                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 13811  15D3  0020               	movlb	0	; select bank0
 13812  15D4  0834               	movf	___ftpack@exp,w
 13813  15D5  1903               	btfsc	3,2
 13814  15D6  2DDC               	goto	l7478
 13815  15D7  0833               	movf	___ftpack@arg+2,w
 13816  15D8  0432               	iorwf	___ftpack@arg+1,w
 13817  15D9  0431               	iorwf	___ftpack@arg,w
 13818  15DA  1D03               	skipz
 13819  15DB  2DED               	goto	l7484
 13820  15DC                     l7478:	
 13821  15DC  3000               	movlw	0
 13822  15DD  00B1               	movwf	?___ftpack
 13823  15DE  3000               	movlw	0
 13824  15DF  00B2               	movwf	?___ftpack+1
 13825  15E0  3000               	movlw	0
 13826  15E1  00B3               	movwf	?___ftpack+2
 13827  15E2  0008               	return
 13828  15E3                     l7482:	
 13829  15E3  3001               	movlw	1
 13830  15E4  00B6               	movwf	??___ftpack
 13831  15E5  0836               	movf	??___ftpack,w
 13832  15E6  07B4               	addwf	___ftpack@exp,f
 13833  15E7  3001               	movlw	1
 13834  15E8                     u7215:	
 13835  15E8  36B3               	lsrf	___ftpack@arg+2,f
 13836  15E9  0CB2               	rrf	___ftpack@arg+1,f
 13837  15EA  0CB1               	rrf	___ftpack@arg,f
 13838  15EB  0B89               	decfsz	9,f
 13839  15EC  2DE8               	goto	u7215
 13840  15ED                     l7484:	
 13841  15ED  30FE               	movlw	254
 13842  15EE  0533               	andwf	___ftpack@arg+2,w
 13843  15EF  1903               	btfsc	3,2
 13844  15F0  2E06               	goto	l1734
 13845  15F1  2DE3               	goto	l7482
 13846  15F2                     l7486:	
 13847  15F2  3001               	movlw	1
 13848  15F3  00B6               	movwf	??___ftpack
 13849  15F4  0836               	movf	??___ftpack,w
 13850  15F5  07B4               	addwf	___ftpack@exp,f
 13851  15F6  3001               	movlw	1
 13852  15F7  07B1               	addwf	___ftpack@arg,f
 13853  15F8  3000               	movlw	0
 13854  15F9  1803               	skipnc
 13855  15FA  3001               	movlw	1
 13856  15FB  07B2               	addwf	___ftpack@arg+1,f
 13857  15FC  3000               	movlw	0
 13858  15FD  1803               	skipnc
 13859  15FE  3001               	movlw	1
 13860  15FF  07B3               	addwf	___ftpack@arg+2,f
 13861  1600  3001               	movlw	1
 13862  1601                     u7235:	
 13863  1601  36B3               	lsrf	___ftpack@arg+2,f
 13864  1602  0CB2               	rrf	___ftpack@arg+1,f
 13865  1603  0CB1               	rrf	___ftpack@arg,f
 13866  1604  0B89               	decfsz	9,f
 13867  1605  2E01               	goto	u7235
 13868  1606                     l1734:	
 13869  1606  30FF               	movlw	255
 13870  1607  0533               	andwf	___ftpack@arg+2,w
 13871  1608  1903               	btfsc	3,2
 13872  1609  2E13               	goto	l7494
 13873  160A  2DF2               	goto	l7486
 13874  160B                     l7492:	
 13875  160B  3001               	movlw	1
 13876  160C  02B4               	subwf	___ftpack@exp,f
 13877  160D  3001               	movlw	1
 13878  160E                     u7255:	
 13879  160E  35B1               	lslf	___ftpack@arg,f
 13880  160F  0DB2               	rlf	___ftpack@arg+1,f
 13881  1610  0DB3               	rlf	___ftpack@arg+2,f
 13882  1611  0B89               	decfsz	9,f
 13883  1612  2E0E               	goto	u7255
 13884  1613                     l7494:	
 13885  1613  1BB2               	btfsc	___ftpack@arg+1,7
 13886  1614  2E19               	goto	l1741
 13887  1615  3002               	movlw	2
 13888  1616  0234               	subwf	___ftpack@exp,w
 13889  1617  1803               	skipnc
 13890  1618  2E0B               	goto	l7492
 13891  1619                     l1741:	
 13892  1619  1834               	btfsc	___ftpack@exp,0
 13893  161A  2E21               	goto	l1742
 13894  161B  30FF               	movlw	255
 13895  161C  05B1               	andwf	___ftpack@arg,f
 13896  161D  307F               	movlw	127
 13897  161E  05B2               	andwf	___ftpack@arg+1,f
 13898  161F  30FF               	movlw	255
 13899  1620  05B3               	andwf	___ftpack@arg+2,f
 13900  1621                     l1742:	
 13901  1621  1003               	clrc
 13902  1622  0CB4               	rrf	___ftpack@exp,f
 13903  1623  0834               	movf	___ftpack@exp,w
 13904  1624  00B6               	movwf	??___ftpack
 13905  1625  01B7               	clrf	??___ftpack+1
 13906  1626  01B8               	clrf	??___ftpack+2
 13907  1627  3010               	movlw	16
 13908  1628                     u7295:	
 13909  1628  35B6               	lslf	??___ftpack,f
 13910  1629  0DB7               	rlf	??___ftpack+1,f
 13911  162A  0DB8               	rlf	??___ftpack+2,f
 13912  162B  0B89               	decfsz	9,f
 13913  162C  2E28               	goto	u7295
 13914  162D  0836               	movf	??___ftpack,w
 13915  162E  04B1               	iorwf	___ftpack@arg,f
 13916  162F  0837               	movf	??___ftpack+1,w
 13917  1630  04B2               	iorwf	___ftpack@arg+1,f
 13918  1631  0838               	movf	??___ftpack+2,w
 13919  1632  04B3               	iorwf	___ftpack@arg+2,f
 13920  1633  0835               	movf	___ftpack@sign,w
 13921  1634  1903               	btfsc	3,2
 13922  1635  0008               	return
 13923  1636  17B3               	bsf	___ftpack@arg+2,7
 13924  1637  0008               	return
 13925  1638                     __end_of___ftpack:	
 13926                           
 13927                           	psect	text37
 13928  23BA                     __ptext37:	
 13929 ;; *************** function _TMR0_Load8bitPeriod *****************
 13930 ;; Defined at:
 13931 ;;		line 113 in file "mcc_generated_files/tmr0.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;  periodVal       1    wreg     unsigned char 
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;  periodVal       1   17[BANK0 ] unsigned char 
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  1    wreg      void 
 13938 ;; Registers used:
 13939 ;;		wreg
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/0
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13948 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13949 ;;Total ram usage:        1 bytes
 13950 ;; Hardware stack levels used:    1
 13951 ;; Hardware stack levels required when called:    6
 13952 ;; This function calls:
 13953 ;;		Nothing
 13954 ;; This function is called by:
 13955 ;;		_main_initialize
 13956 ;;		_setDrvPiezoOnTime
 13957 ;;		_setHeaterPreTime
 13958 ;; This function uses a non-reentrant model
 13959 ;;
 13960                           
 13961                           
 13962                           ;psect for function _TMR0_Load8bitPeriod
 13963  23BA                     _TMR0_Load8bitPeriod:	
 13964                           
 13965                           ;incstack = 0
 13966                           ; Regs used in _TMR0_Load8bitPeriod: [wreg]
 13967                           ;TMR0_Load8bitPeriod@periodVal stored from wreg
 13968  23BA  0020               	movlb	0	; select bank0
 13969  23BB  00B1               	movwf	TMR0_Load8bitPeriod@periodVal
 13970                           
 13971                           ;tmr0.c: 116: TMR0H = periodVal;
 13972  23BC  0831               	movf	TMR0_Load8bitPeriod@periodVal,w
 13973  23BD  0096               	movwf	22	;volatile
 13974  23BE  0008               	return
 13975  23BF                     __end_of_TMR0_Load8bitPeriod:	
 13976                           
 13977                           	psect	text38
 13978  255D                     __ptext38:	
 13979 ;; *************** function _setDrvPeak *****************
 13980 ;; Defined at:
 13981 ;;		line 399 in file "main.c"
 13982 ;; Parameters:    Size  Location     Type
 13983 ;;  pk              2   41[BANK0 ] int 
 13984 ;; Auto vars:     Size  Location     Type
 13985 ;;		None
 13986 ;; Return value:  Size  Location     Type
 13987 ;;                  2   41[BANK0 ] int 
 13988 ;; Registers used:
 13989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13990 ;; Tracked objects:
 13991 ;;		On entry : 0/0
 13992 ;;		On exit  : 0/0
 13993 ;;		Unchanged: 0/0
 13994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13995 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13998 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13999 ;;Total ram usage:        2 bytes
 14000 ;; Hardware stack levels used:    1
 14001 ;; Hardware stack levels required when called:    9
 14002 ;; This function calls:
 14003 ;;		_printf
 14004 ;; This function is called by:
 14005 ;;		_execCmd
 14006 ;; This function uses a non-reentrant model
 14007 ;;
 14008                           
 14009                           
 14010                           ;psect for function _setDrvPeak
 14011  255D                     _setDrvPeak:	
 14012                           
 14013                           ;main.c: 400: drv_peak_val = pk;
 14014                           
 14015                           ;incstack = 0
 14016                           ; Regs used in _setDrvPeak: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14017  255D  0020               	movlb	0	; select bank0
 14018  255E  084A               	movf	setDrvPeak@pk+1,w
 14019  255F  0022               	movlb	2	; select bank2
 14020  2560  00EB               	movwf	(_drv_peak_val+1)^(0+256)
 14021  2561  0020               	movlb	0	; select bank0
 14022  2562  0849               	movf	setDrvPeak@pk,w
 14023  2563  0022               	movlb	2	; select bank2
 14024  2564  00EA               	movwf	_drv_peak_val^(0+256)
 14025                           
 14026                           ;main.c: 401: printf("A\n");
 14027  2565  3047               	movlw	low (STR_8| (0+32768))
 14028  2566  0021               	movlb	1	; select bank1
 14029  2567  00A0               	movwf	printf@f^(0+128)
 14030  2568  30AA               	movlw	high (STR_8| (0+32768))
 14031  2569  00A1               	movwf	(printf@f^(0+128)+1)
 14032  256A  3186  264A         	fcall	_printf
 14033                           
 14034                           ;main.c: 402: return 0;
 14035  256C  0020               	movlb	0	; select bank0
 14036  256D  01C9               	clrf	?_setDrvPeak
 14037  256E  01CA               	clrf	?_setDrvPeak+1
 14038  256F  0008               	return
 14039  2570                     __end_of_setDrvPeak:	
 14040                           
 14041                           	psect	text39
 14042  1B69                     __ptext39:	
 14043 ;; *************** function _setDrvGain *****************
 14044 ;; Defined at:
 14045 ;;		line 406 in file "main.c"
 14046 ;; Parameters:    Size  Location     Type
 14047 ;;  gain            2   23[BANK1 ] int 
 14048 ;; Auto vars:     Size  Location     Type
 14049 ;;  setGain         2   26[BANK1 ] int 
 14050 ;; Return value:  Size  Location     Type
 14051 ;;                  2   23[BANK1 ] int 
 14052 ;; Registers used:
 14053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14054 ;; Tracked objects:
 14055 ;;		On entry : 0/0
 14056 ;;		On exit  : 0/0
 14057 ;;		Unchanged: 0/0
 14058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14059 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14060 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14061 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14062 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14063 ;;Total ram usage:        5 bytes
 14064 ;; Hardware stack levels used:    1
 14065 ;; Hardware stack levels required when called:   13
 14066 ;; This function calls:
 14067 ;;		_drv_write
 14068 ;;		_printf
 14069 ;; This function is called by:
 14070 ;;		_execCmd
 14071 ;; This function uses a non-reentrant model
 14072 ;;
 14073                           
 14074                           
 14075                           ;psect for function _setDrvGain
 14076  1B69                     _setDrvGain:	
 14077                           
 14078                           ;main.c: 407: int setGain = 0;
 14079                           
 14080                           ;incstack = 0
 14081                           ; Regs used in _setDrvGain: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14082  1B69  0021               	movlb	1	; select bank1
 14083  1B6A  01BA               	clrf	setDrvGain@setGain^(0+128)
 14084  1B6B  01BB               	clrf	(setDrvGain@setGain+1)^(0+128)
 14085                           
 14086                           ;main.c: 408: switch (gain){
 14087  1B6C  2B85               	goto	l7928
 14088  1B6D                     l7912:	
 14089                           ;main.c: 409: case 0: setGain = 0x00; break;
 14090                           
 14091  1B6D  01BA               	clrf	setDrvGain@setGain^(0+128)
 14092  1B6E  01BB               	clrf	(setDrvGain@setGain+1)^(0+128)
 14093  1B6F  2B98               	goto	l7930
 14094  1B70                     l7914:	
 14095                           ;main.c: 410: case 1: setGain = 0x01; break;
 14096                           
 14097  1B70  3001               	movlw	1
 14098  1B71  2B75               	goto	L23
 14099  1B72                     l7916:	
 14100                           ;main.c: 411: case 2: setGain = 0x02; break;
 14101                           
 14102  1B72  3002               	movlw	2
 14103  1B73  2B75               	goto	L23
 14104  1B74                     l7918:	
 14105                           ;main.c: 412: case 3: setGain = 0x03; break;
 14106                           
 14107  1B74  3003               	movlw	3
 14108  1B75                     L23:	
 14109  1B75  00BA               	movwf	setDrvGain@setGain^(0+128)
 14110  1B76  3000               	movlw	0
 14111  1B77  00BB               	movwf	(setDrvGain@setGain^(0+128)+1)
 14112  1B78  2B98               	goto	l7930
 14113  1B79                     l7920:	
 14114                           ;main.c: 413: default: printf("E\n"); return 1;
 14115                           
 14116  1B79  304A               	movlw	low (STR_17| (0+32768))
 14117  1B7A  00A0               	movwf	printf@f^(0+128)
 14118  1B7B  30AA               	movlw	high (STR_17| (0+32768))
 14119  1B7C  00A1               	movwf	(printf@f^(0+128)+1)
 14120  1B7D  3186  264A         	fcall	_printf
 14121  1B7F  3001               	movlw	1
 14122  1B80  0021               	movlb	1	; select bank1
 14123  1B81  00B7               	movwf	?_setDrvGain^(0+128)
 14124  1B82  3000               	movlw	0
 14125  1B83  00B8               	movwf	(?_setDrvGain^(0+128)+1)
 14126  1B84  0008               	return
 14127  1B85                     l7928:	
 14128                           ;main.c: 414: }
 14129                           
 14130                           
 14131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14132                           ; Switch size 1, requested type "space"
 14133                           ; Number of cases is 1, Range of values is 0 to 0
 14134                           ; switch strategies available:
 14135                           ; Name         Instructions Cycles
 14136                           ; simple_byte            4     3 (average)
 14137                           ; direct_byte            8     6 (fixed)
 14138                           ; jumptable            260     6 (fixed)
 14139                           ;	Chosen strategy is simple_byte
 14140  1B85  0838               	movf	(setDrvGain@gain+1)^(0+128),w
 14141  1B86  3A00               	xorlw	0	; case 0
 14142  1B87  1903               	skipnz
 14143  1B88  2B8A               	goto	l8622
 14144  1B89  2B79               	goto	l7920
 14145  1B8A                     l8622:	
 14146                           
 14147                           ; Switch size 1, requested type "space"
 14148                           ; Number of cases is 4, Range of values is 0 to 3
 14149                           ; switch strategies available:
 14150                           ; Name         Instructions Cycles
 14151                           ; simple_byte           13     7 (average)
 14152                           ; direct_byte           14     6 (fixed)
 14153                           ; jumptable            260     6 (fixed)
 14154                           ;	Chosen strategy is simple_byte
 14155  1B8A  0837               	movf	setDrvGain@gain^(0+128),w
 14156  1B8B  3A00               	xorlw	0	; case 0
 14157  1B8C  1903               	skipnz
 14158  1B8D  2B6D               	goto	l7912
 14159  1B8E  3A01               	xorlw	1	; case 1
 14160  1B8F  1903               	skipnz
 14161  1B90  2B70               	goto	l7914
 14162  1B91  3A03               	xorlw	3	; case 2
 14163  1B92  1903               	skipnz
 14164  1B93  2B72               	goto	l7916
 14165  1B94  3A01               	xorlw	1	; case 3
 14166  1B95  1903               	skipnz
 14167  1B96  2B74               	goto	l7918
 14168  1B97  2B79               	goto	l7920
 14169  1B98                     l7930:	
 14170                           
 14171                           ;main.c: 415: drv_write(0x01, setGain);
 14172  1B98  083A               	movf	setDrvGain@setGain^(0+128),w
 14173  1B99  00B9               	movwf	??_setDrvGain^(0+128)
 14174  1B9A  0839               	movf	??_setDrvGain^(0+128),w
 14175  1B9B  0020               	movlb	0	; select bank0
 14176  1B9C  00C9               	movwf	drv_write@data
 14177  1B9D  3001               	movlw	1
 14178  1B9E  31A7  27DC  319B   	fcall	_drv_write
 14179                           
 14180                           ;main.c: 416: printf("A\n");
 14181  1BA1  3047               	movlw	low (STR_8| (0+32768))
 14182  1BA2  0021               	movlb	1	; select bank1
 14183  1BA3  00A0               	movwf	printf@f^(0+128)
 14184  1BA4  30AA               	movlw	high (STR_8| (0+32768))
 14185  1BA5  00A1               	movwf	(printf@f^(0+128)+1)
 14186  1BA6  3186  264A         	fcall	_printf
 14187                           
 14188                           ;main.c: 417: return 0;
 14189  1BA8  0021               	movlb	1	; select bank1
 14190  1BA9  01B7               	clrf	?_setDrvGain^(0+128)
 14191  1BAA  01B8               	clrf	(?_setDrvGain+1)^(0+128)
 14192  1BAB  0008               	return
 14193  1BAC                     __end_of_setDrvGain:	
 14194                           
 14195                           	psect	text40
 14196  0A13                     __ptext40:	
 14197 ;; *************** function _setActive *****************
 14198 ;; Defined at:
 14199 ;;		line 484 in file "main.c"
 14200 ;; Parameters:    Size  Location     Type
 14201 ;;  probeNum        2   41[BANK0 ] int 
 14202 ;;  onOff           2   43[BANK0 ] int 
 14203 ;; Auto vars:     Size  Location     Type
 14204 ;;		None
 14205 ;; Return value:  Size  Location     Type
 14206 ;;                  2   41[BANK0 ] int 
 14207 ;; Registers used:
 14208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14209 ;; Tracked objects:
 14210 ;;		On entry : 0/0
 14211 ;;		On exit  : 0/0
 14212 ;;		Unchanged: 0/0
 14213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14214 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14216 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14217 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14218 ;;Total ram usage:       14 bytes
 14219 ;; Hardware stack levels used:    1
 14220 ;; Hardware stack levels required when called:    9
 14221 ;; This function calls:
 14222 ;;		_printf
 14223 ;; This function is called by:
 14224 ;;		_execCmd
 14225 ;; This function uses a non-reentrant model
 14226 ;;
 14227                           
 14228                           
 14229                           ;psect for function _setActive
 14230  0A13                     _setActive:	
 14231                           
 14232                           ;main.c: 487: if(moveMask & 1 << probeNum){
 14233                           
 14234                           ;incstack = 0
 14235                           ; Regs used in _setActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14236  0A13  0020               	movlb	0	; select bank0
 14237  0A14  084E               	movf	_moveMask,w
 14238  0A15  0021               	movlb	1	; select bank1
 14239  0A16  00B7               	movwf	??_setActive^(0+128)
 14240  0A17  0020               	movlb	0	; select bank0
 14241  0A18  084F               	movf	_moveMask+1,w
 14242  0A19  0021               	movlb	1	; select bank1
 14243  0A1A  00B8               	movwf	(??_setActive^(0+128)+1)
 14244  0A1B  0020               	movlb	0	; select bank0
 14245  0A1C  0850               	movf	_moveMask+2,w
 14246  0A1D  0021               	movlb	1	; select bank1
 14247  0A1E  00B9               	movwf	(??_setActive^(0+128)+2)
 14248  0A1F  0020               	movlb	0	; select bank0
 14249  0A20  0851               	movf	_moveMask+3,w
 14250  0A21  0021               	movlb	1	; select bank1
 14251  0A22  00BA               	movwf	(??_setActive^(0+128)+3)
 14252  0A23  3001               	movlw	1
 14253  0A24  00BB               	movwf	(??_setActive+4)^(0+128)
 14254  0A25  3000               	movlw	0
 14255  0A26  00BC               	movwf	((??_setActive+4)^(0+128)+1)
 14256  0A27  0020               	movlb	0	; select bank0
 14257  0A28  0A49               	incf	setActive@probeNum,w
 14258  0A29  0021               	movlb	1	; select bank1
 14259  0A2A  2A2D               	goto	u7944
 14260  0A2B                     u7945:	
 14261  0A2B  35BB               	lslf	(??_setActive+4)^(0+128),f
 14262  0A2C  0DBC               	rlf	((??_setActive+4)^(0+128)+1),f
 14263  0A2D                     u7944:	
 14264  0A2D  0B89               	decfsz	9,f
 14265  0A2E  2A2B               	goto	u7945
 14266  0A2F  083B               	movf	(??_setActive+4)^(0+128),w
 14267  0A30  00BD               	movwf	(??_setActive+6)^(0+128)
 14268  0A31  083C               	movf	(??_setActive+5)^(0+128),w
 14269  0A32  00BE               	movwf	((??_setActive+6)^(0+128)+1)
 14270  0A33  3000               	movlw	0
 14271  0A34  1BBE               	btfsc	((??_setActive+6)^(0+128)+1),7
 14272  0A35  30FF               	movlw	255
 14273  0A36  00BF               	movwf	((??_setActive+6)^(0+128)+2)
 14274  0A37  00C0               	movwf	((??_setActive+6)^(0+128)+3)
 14275  0A38  083D               	movf	(??_setActive+6)^(0+128),w
 14276  0A39  05B7               	andwf	??_setActive^(0+128),f
 14277  0A3A  083E               	movf	(??_setActive+7)^(0+128),w
 14278  0A3B  05B8               	andwf	(??_setActive^(0+128)+1),f
 14279  0A3C  083F               	movf	(??_setActive+8)^(0+128),w
 14280  0A3D  05B9               	andwf	(??_setActive^(0+128)+2),f
 14281  0A3E  0840               	movf	(??_setActive+9)^(0+128),w
 14282  0A3F  05BA               	andwf	(??_setActive^(0+128)+3),f
 14283  0A40  083A               	movf	(??_setActive+3)^(0+128),w
 14284  0A41  0439               	iorwf	(??_setActive+2)^(0+128),w
 14285  0A42  0438               	iorwf	(??_setActive+1)^(0+128),w
 14286  0A43  0437               	iorwf	??_setActive^(0+128),w
 14287  0A44  1903               	skipnz
 14288  0A45  2A94               	goto	l8018
 14289                           
 14290                           ;main.c: 488: if (onOff)
 14291  0A46  0020               	movlb	0	; select bank0
 14292  0A47  084B               	movf	setActive@onOff,w
 14293  0A48  044C               	iorwf	setActive@onOff+1,w
 14294  0A49  1903               	btfsc	3,2
 14295  0A4A  2A6A               	goto	l8010
 14296                           
 14297                           ;main.c: 489: activeMask |= 1 << probeNum;
 14298  0A4B  3001               	movlw	1
 14299  0A4C  0021               	movlb	1	; select bank1
 14300  0A4D  00B7               	movwf	??_setActive^(0+128)
 14301  0A4E  3000               	movlw	0
 14302  0A4F  00B8               	movwf	(??_setActive^(0+128)+1)
 14303  0A50  0020               	movlb	0	; select bank0
 14304  0A51  0A49               	incf	setActive@probeNum,w
 14305  0A52  0021               	movlb	1	; select bank1
 14306  0A53  2A56               	goto	u7974
 14307  0A54                     u7975:	
 14308  0A54  35B7               	lslf	??_setActive^(0+128),f
 14309  0A55  0DB8               	rlf	(??_setActive^(0+128)+1),f
 14310  0A56                     u7974:	
 14311  0A56  0B89               	decfsz	9,f
 14312  0A57  2A54               	goto	u7975
 14313  0A58  0837               	movf	??_setActive^(0+128),w
 14314  0A59  00B9               	movwf	(??_setActive+2)^(0+128)
 14315  0A5A  0838               	movf	(??_setActive+1)^(0+128),w
 14316  0A5B  00BA               	movwf	((??_setActive+2)^(0+128)+1)
 14317  0A5C  3000               	movlw	0
 14318  0A5D  1BBA               	btfsc	((??_setActive+2)^(0+128)+1),7
 14319  0A5E  30FF               	movlw	255
 14320  0A5F  00BB               	movwf	((??_setActive+2)^(0+128)+2)
 14321  0A60  00BC               	movwf	((??_setActive+2)^(0+128)+3)
 14322  0A61  0839               	movf	(??_setActive+2)^(0+128),w
 14323  0A62  04D8               	iorwf	_activeMask^(0+128),f
 14324  0A63  083A               	movf	(??_setActive+3)^(0+128),w
 14325  0A64  04D9               	iorwf	(_activeMask+1)^(0+128),f
 14326  0A65  083B               	movf	(??_setActive+4)^(0+128),w
 14327  0A66  04DA               	iorwf	(_activeMask+2)^(0+128),f
 14328  0A67  083C               	movf	(??_setActive+5)^(0+128),w
 14329  0A68  04DB               	iorwf	(_activeMask+3)^(0+128),f
 14330  0A69  2A8A               	goto	l8012
 14331  0A6A                     l8010:	
 14332                           
 14333                           ;main.c: 490: else
 14334                           ;main.c: 491: activeMask &= ~(1 << probeNum);
 14335  0A6A  3001               	movlw	1
 14336  0A6B  0021               	movlb	1	; select bank1
 14337  0A6C  00B7               	movwf	??_setActive^(0+128)
 14338  0A6D  3000               	movlw	0
 14339  0A6E  00B8               	movwf	(??_setActive^(0+128)+1)
 14340  0A6F  0020               	movlb	0	; select bank0
 14341  0A70  0A49               	incf	setActive@probeNum,w
 14342  0A71  0021               	movlb	1	; select bank1
 14343  0A72  2A75               	goto	u7984
 14344  0A73                     u7985:	
 14345  0A73  35B7               	lslf	??_setActive^(0+128),f
 14346  0A74  0DB8               	rlf	(??_setActive^(0+128)+1),f
 14347  0A75                     u7984:	
 14348  0A75  0B89               	decfsz	9,f
 14349  0A76  2A73               	goto	u7985
 14350  0A77  09B7               	comf	??_setActive^(0+128),f
 14351  0A78  09B8               	comf	(??_setActive^(0+128)+1),f
 14352  0A79  0837               	movf	??_setActive^(0+128),w
 14353  0A7A  00B9               	movwf	(??_setActive+2)^(0+128)
 14354  0A7B  0838               	movf	(??_setActive+1)^(0+128),w
 14355  0A7C  00BA               	movwf	((??_setActive+2)^(0+128)+1)
 14356  0A7D  3000               	movlw	0
 14357  0A7E  1BBA               	btfsc	((??_setActive+2)^(0+128)+1),7
 14358  0A7F  30FF               	movlw	255
 14359  0A80  00BB               	movwf	((??_setActive+2)^(0+128)+2)
 14360  0A81  00BC               	movwf	((??_setActive+2)^(0+128)+3)
 14361  0A82  0839               	movf	(??_setActive+2)^(0+128),w
 14362  0A83  05D8               	andwf	_activeMask^(0+128),f
 14363  0A84  083A               	movf	(??_setActive+3)^(0+128),w
 14364  0A85  05D9               	andwf	(_activeMask+1)^(0+128),f
 14365  0A86  083B               	movf	(??_setActive+4)^(0+128),w
 14366  0A87  05DA               	andwf	(_activeMask+2)^(0+128),f
 14367  0A88  083C               	movf	(??_setActive+5)^(0+128),w
 14368  0A89  05DB               	andwf	(_activeMask+3)^(0+128),f
 14369  0A8A                     l8012:	
 14370                           
 14371                           ;main.c: 492: printf("A\n");
 14372  0A8A  3047               	movlw	low (STR_8| (0+32768))
 14373  0A8B  00A0               	movwf	printf@f^(0+128)
 14374  0A8C  30AA               	movlw	high (STR_8| (0+32768))
 14375  0A8D  00A1               	movwf	(printf@f^(0+128)+1)
 14376  0A8E  3186  264A         	fcall	_printf
 14377                           
 14378                           ;main.c: 493: return 0;
 14379  0A90  0020               	movlb	0	; select bank0
 14380  0A91  01C9               	clrf	?_setActive
 14381  0A92  01CA               	clrf	?_setActive+1
 14382  0A93  0008               	return
 14383  0A94                     l8018:	
 14384                           
 14385                           ;main.c: 494: }
 14386                           ;main.c: 495: printf("E\n");
 14387  0A94  304A               	movlw	low (STR_17| (0+32768))
 14388  0A95  0021               	movlb	1	; select bank1
 14389  0A96  00A0               	movwf	printf@f^(0+128)
 14390  0A97  30AA               	movlw	high (STR_17| (0+32768))
 14391  0A98  00A1               	movwf	(printf@f^(0+128)+1)
 14392  0A99  3186  264A         	fcall	_printf
 14393                           
 14394                           ;main.c: 496: return 1;
 14395  0A9B  3001               	movlw	1
 14396  0A9C  0020               	movlb	0	; select bank0
 14397  0A9D  00C9               	movwf	?_setActive
 14398  0A9E  3000               	movlw	0
 14399  0A9F  00CA               	movwf	?_setActive+1
 14400  0AA0  0008               	return
 14401  0AA1                     __end_of_setActive:	
 14402                           
 14403                           	psect	text41
 14404  18C9                     __ptext41:	
 14405 ;; *************** function _getPosition *****************
 14406 ;; Defined at:
 14407 ;;		line 388 in file "main.c"
 14408 ;; Parameters:    Size  Location     Type
 14409 ;;  a               2   41[BANK0 ] int 
 14410 ;; Auto vars:     Size  Location     Type
 14411 ;;		None
 14412 ;; Return value:  Size  Location     Type
 14413 ;;                  2   41[BANK0 ] int 
 14414 ;; Registers used:
 14415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14416 ;; Tracked objects:
 14417 ;;		On entry : 0/0
 14418 ;;		On exit  : 0/0
 14419 ;;		Unchanged: 0/0
 14420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14421 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14423 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14424 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14425 ;;Total ram usage:        3 bytes
 14426 ;; Hardware stack levels used:    1
 14427 ;; Hardware stack levels required when called:    9
 14428 ;; This function calls:
 14429 ;;		_printf
 14430 ;; This function is called by:
 14431 ;;		_execCmd
 14432 ;; This function uses a non-reentrant model
 14433 ;;
 14434                           
 14435                           
 14436                           ;psect for function _getPosition
 14437  18C9                     _getPosition:	
 14438                           
 14439                           ;main.c: 390: if (a>=0 && a < 24){
 14440                           
 14441                           ;incstack = 0
 14442                           ; Regs used in _getPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14443  18C9  0020               	movlb	0	; select bank0
 14444  18CA  1BCA               	btfsc	getPosition@a+1,7
 14445  18CB  28ED               	goto	l7898
 14446  18CC  084A               	movf	getPosition@a+1,w
 14447  18CD  3A80               	xorlw	128
 14448  18CE  00CB               	movwf	??_getPosition
 14449  18CF  3080               	movlw	128
 14450  18D0  024B               	subwf	??_getPosition,w
 14451  18D1  1D03               	skipz
 14452  18D2  28D5               	goto	u7895
 14453  18D3  3018               	movlw	24
 14454  18D4  0249               	subwf	getPosition@a,w
 14455  18D5                     u7895:	
 14456  18D5  1803               	skipnc
 14457  18D6  28ED               	goto	l7898
 14458                           
 14459                           ;main.c: 391: printf("%d\n", currentPositions_steps[a]);
 14460  18D7  3039               	movlw	low (STR_15| (0+32768))
 14461  18D8  0021               	movlb	1	; select bank1
 14462  18D9  00A0               	movwf	printf@f^(0+128)
 14463  18DA  30AA               	movlw	high (STR_15| (0+32768))
 14464  18DB  00A1               	movwf	(printf@f^(0+128)+1)
 14465  18DC  0020               	movlb	0	; select bank0
 14466  18DD  3549               	lslf	getPosition@a,w
 14467  18DE  3E20               	addlw	(low (_currentPositions_steps| (0+512)))& (0+255)
 14468  18DF  0086               	movwf	6
 14469  18E0  3002               	movlw	2	; select bank4/5
 14470  18E1  0087               	movwf	7
 14471  18E2  3F40               	moviw [0]fsr1
 14472  18E3  0021               	movlb	1	; select bank1
 14473  18E4  00A2               	movwf	(?_printf^(0+128)+2)
 14474  18E5  3F41               	moviw [1]fsr1
 14475  18E6  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14476  18E7  3186  264A         	fcall	_printf
 14477                           
 14478                           ;main.c: 392: return 0;
 14479  18E9  0020               	movlb	0	; select bank0
 14480  18EA  01C9               	clrf	?_getPosition
 14481  18EB  01CA               	clrf	?_getPosition+1
 14482  18EC  0008               	return
 14483  18ED                     l7898:	
 14484                           
 14485                           ;main.c: 393: }
 14486                           ;main.c: 395: return 1;
 14487  18ED  3001               	movlw	1
 14488  18EE  0020               	movlb	0	; select bank0
 14489  18EF  00C9               	movwf	?_getPosition
 14490  18F0  3000               	movlw	0
 14491  18F1  00CA               	movwf	?_getPosition+1
 14492  18F2  0008               	return
 14493  18F3                     __end_of_getPosition:	
 14494                           
 14495                           	psect	text42
 14496  1C7F                     __ptext42:	
 14497 ;; *************** function _getMoveMask *****************
 14498 ;; Defined at:
 14499 ;;		line 524 in file "main.c"
 14500 ;; Parameters:    Size  Location     Type
 14501 ;;		None
 14502 ;; Auto vars:     Size  Location     Type
 14503 ;;  i               2   43[BANK0 ] int 
 14504 ;; Return value:  Size  Location     Type
 14505 ;;                  2   41[BANK0 ] int 
 14506 ;; Registers used:
 14507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14508 ;; Tracked objects:
 14509 ;;		On entry : 0/0
 14510 ;;		On exit  : 0/0
 14511 ;;		Unchanged: 0/0
 14512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14514 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14515 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14516 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14517 ;;Total ram usage:        8 bytes
 14518 ;; Hardware stack levels used:    1
 14519 ;; Hardware stack levels required when called:    9
 14520 ;; This function calls:
 14521 ;;		_printf
 14522 ;; This function is called by:
 14523 ;;		_execCmd
 14524 ;; This function uses a non-reentrant model
 14525 ;;
 14526                           
 14527                           
 14528                           ;psect for function _getMoveMask
 14529  1C7F                     _getMoveMask:	
 14530                           
 14531                           ;main.c: 525: for(int i=24-1; i>=0; i--){
 14532                           
 14533                           ;incstack = 0
 14534                           ; Regs used in _getMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14535  1C7F  3017               	movlw	23
 14536  1C80  0020               	movlb	0	; select bank0
 14537  1C81  00CB               	movwf	getMoveMask@i
 14538  1C82  3000               	movlw	0
 14539  1C83  00CC               	movwf	getMoveMask@i+1
 14540  1C84  1BCC               	btfsc	getMoveMask@i+1,7
 14541  1C85  2CBD               	goto	l8074
 14542  1C86                     l8068:	
 14543                           
 14544                           ;main.c: 526: printf("%d ", (moveMask >> i) & 1 );
 14545  1C86  303D               	movlw	low (STR_1| (0+32768))
 14546  1C87  0021               	movlb	1	; select bank1
 14547  1C88  00A0               	movwf	printf@f^(0+128)
 14548  1C89  30AA               	movlw	high (STR_1| (0+32768))
 14549  1C8A  00A1               	movwf	(printf@f^(0+128)+1)
 14550  1C8B  0020               	movlb	0	; select bank0
 14551  1C8C  084E               	movf	_moveMask,w
 14552  1C8D  0021               	movlb	1	; select bank1
 14553  1C8E  00B7               	movwf	??_getMoveMask^(0+128)
 14554  1C8F  0020               	movlb	0	; select bank0
 14555  1C90  084F               	movf	_moveMask+1,w
 14556  1C91  0021               	movlb	1	; select bank1
 14557  1C92  00B8               	movwf	(??_getMoveMask^(0+128)+1)
 14558  1C93  0020               	movlb	0	; select bank0
 14559  1C94  0850               	movf	_moveMask+2,w
 14560  1C95  0021               	movlb	1	; select bank1
 14561  1C96  00B9               	movwf	(??_getMoveMask^(0+128)+2)
 14562  1C97  0020               	movlb	0	; select bank0
 14563  1C98  0851               	movf	_moveMask+3,w
 14564  1C99  0021               	movlb	1	; select bank1
 14565  1C9A  00BA               	movwf	(??_getMoveMask^(0+128)+3)
 14566  1C9B  0020               	movlb	0	; select bank0
 14567  1C9C  0A4B               	incf	getMoveMask@i,w
 14568  1C9D  0021               	movlb	1	; select bank1
 14569  1C9E  2CA4               	goto	u8070
 14570  1C9F                     u8075:	
 14571  1C9F  1003               	clrc
 14572  1CA0  0CBA               	rrf	(??_getMoveMask^(0+128)+3),f
 14573  1CA1  0CB9               	rrf	(??_getMoveMask^(0+128)+2),f
 14574  1CA2  0CB8               	rrf	(??_getMoveMask^(0+128)+1),f
 14575  1CA3  0CB7               	rrf	??_getMoveMask^(0+128),f
 14576  1CA4                     u8070:	
 14577  1CA4  3EFF               	addlw	-1
 14578  1CA5  1D03               	skipz
 14579  1CA6  2C9F               	goto	u8075
 14580  1CA7  3001               	movlw	1
 14581  1CA8  0537               	andwf	??_getMoveMask^(0+128),w
 14582  1CA9  00A2               	movwf	(?_printf^(0+128)+2)
 14583  1CAA  3000               	movlw	0
 14584  1CAB  0538               	andwf	(??_getMoveMask+1)^(0+128),w
 14585  1CAC  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14586  1CAD  3000               	movlw	0
 14587  1CAE  0539               	andwf	(??_getMoveMask+2)^(0+128),w
 14588  1CAF  00A4               	movwf	((?_printf+2)^(0+128)+2)
 14589  1CB0  3000               	movlw	0
 14590  1CB1  053A               	andwf	(??_getMoveMask+3)^(0+128),w
 14591  1CB2  00A5               	movwf	((?_printf+3)^(0+128)+2)
 14592  1CB3  3186  264A  319C   	fcall	_printf
 14593  1CB6  30FF               	movlw	255
 14594  1CB7  0020               	movlb	0	; select bank0
 14595  1CB8  07CB               	addwf	getMoveMask@i,f
 14596  1CB9  30FF               	movlw	255
 14597  1CBA  3DCC               	addwfc	getMoveMask@i+1,f
 14598  1CBB  1FCC               	btfss	getMoveMask@i+1,7
 14599  1CBC  2C86               	goto	l8068
 14600  1CBD                     l8074:	
 14601                           
 14602                           ;main.c: 527: }
 14603                           ;main.c: 528: printf("\n");
 14604  1CBD  303B               	movlw	low ((STR_36+28)| (0+32768))
 14605  1CBE  0021               	movlb	1	; select bank1
 14606  1CBF  00A0               	movwf	printf@f^(0+128)
 14607  1CC0  30A8               	movlw	high ((STR_36+28)| (0+32768))
 14608  1CC1  00A1               	movwf	(printf@f^(0+128)+1)
 14609  1CC2  3186  264A         	fcall	_printf
 14610                           
 14611                           ;main.c: 529: return 0;
 14612  1CC4  0020               	movlb	0	; select bank0
 14613  1CC5  01C9               	clrf	?_getMoveMask
 14614  1CC6  01CA               	clrf	?_getMoveMask+1
 14615  1CC7  0008               	return
 14616  1CC8                     __end_of_getMoveMask:	
 14617                           
 14618                           	psect	text43
 14619  2771                     __ptext43:	
 14620 ;; *************** function _getMotionStatus *****************
 14621 ;; Defined at:
 14622 ;;		line 531 in file "main.c"
 14623 ;; Parameters:    Size  Location     Type
 14624 ;;		None
 14625 ;; Auto vars:     Size  Location     Type
 14626 ;;		None
 14627 ;; Return value:  Size  Location     Type
 14628 ;;                  2   41[BANK0 ] int 
 14629 ;; Registers used:
 14630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14631 ;; Tracked objects:
 14632 ;;		On entry : 0/0
 14633 ;;		On exit  : 0/0
 14634 ;;		Unchanged: 0/0
 14635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14636 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14639 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14640 ;;Total ram usage:        2 bytes
 14641 ;; Hardware stack levels used:    1
 14642 ;; Hardware stack levels required when called:    9
 14643 ;; This function calls:
 14644 ;;		_printf
 14645 ;; This function is called by:
 14646 ;;		_execCmd
 14647 ;; This function uses a non-reentrant model
 14648 ;;
 14649                           
 14650                           
 14651                           ;psect for function _getMotionStatus
 14652  2771                     _getMotionStatus:	
 14653                           
 14654                           ;main.c: 532: switch(motionType){
 14655                           
 14656                           ;incstack = 0
 14657                           ; Regs used in _getMotionStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14658  2771  2F8A               	goto	l8090
 14659  2772                     l8082:	
 14660                           ;main.c: 533: case REL_MOVE: printf("R"); break;
 14661                           
 14662  2772  3053               	movlw	low (STR_33| (0+32768))
 14663  2773  0021               	movlb	1	; select bank1
 14664  2774  00A0               	movwf	printf@f^(0+128)
 14665  2775  30AA               	movlw	high (STR_33| (0+32768))
 14666  2776  00A1               	movwf	(printf@f^(0+128)+1)
 14667  2777  3186  264A         	fcall	_printf
 14668  2779  0008               	return
 14669  277A                     l8084:	
 14670                           ;main.c: 534: case ABS_MOVE: printf("A"); break;
 14671                           
 14672  277A  3012               	movlw	low ((STR_73+3)| (0+32768))
 14673  277B  0021               	movlb	1	; select bank1
 14674  277C  00A0               	movwf	printf@f^(0+128)
 14675  277D  30AA               	movlw	high ((STR_73+3)| (0+32768))
 14676  277E  00A1               	movwf	(printf@f^(0+128)+1)
 14677  277F  3186  264A         	fcall	_printf
 14678  2781  0008               	return
 14679  2782                     l8086:	
 14680                           ;main.c: 535: default: printf("N"); break;
 14681                           
 14682  2782  3051               	movlw	low (STR_35| (0+32768))
 14683  2783  0021               	movlb	1	; select bank1
 14684  2784  00A0               	movwf	printf@f^(0+128)
 14685  2785  30AA               	movlw	high (STR_35| (0+32768))
 14686  2786  00A1               	movwf	(printf@f^(0+128)+1)
 14687  2787  3186  264A         	fcall	_printf
 14688                           
 14689                           ;main.c: 536: }
 14690  2789  0008               	return
 14691  278A                     l8090:	
 14692  278A  0020               	movlb	0	; select bank0
 14693  278B  0855               	movf	_motionType,w
 14694                           
 14695                           ; Switch size 1, requested type "space"
 14696                           ; Number of cases is 2, Range of values is 1 to 2
 14697                           ; switch strategies available:
 14698                           ; Name         Instructions Cycles
 14699                           ; simple_byte            7     4 (average)
 14700                           ; direct_byte           13     9 (fixed)
 14701                           ; jumptable            263     9 (fixed)
 14702                           ;	Chosen strategy is simple_byte
 14703  278C  3A01               	xorlw	1	; case 1
 14704  278D  1903               	skipnz
 14705  278E  2F72               	goto	l8082
 14706  278F  3A03               	xorlw	3	; case 2
 14707  2790  1903               	skipnz
 14708  2791  2F7A               	goto	l8084
 14709  2792  2F82               	goto	l8086
 14710  2793  0008               	return
 14711  2794                     __end_of_getMotionStatus:	
 14712                           
 14713                           	psect	text44
 14714  1AE5                     __ptext44:	
 14715 ;; *************** function _getActive *****************
 14716 ;; Defined at:
 14717 ;;		line 516 in file "main.c"
 14718 ;; Parameters:    Size  Location     Type
 14719 ;;		None
 14720 ;; Auto vars:     Size  Location     Type
 14721 ;;  i               2   43[BANK0 ] int 
 14722 ;; Return value:  Size  Location     Type
 14723 ;;                  2   41[BANK0 ] int 
 14724 ;; Registers used:
 14725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14726 ;; Tracked objects:
 14727 ;;		On entry : 0/0
 14728 ;;		On exit  : 0/0
 14729 ;;		Unchanged: 0/0
 14730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14732 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14733 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14734 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14735 ;;Total ram usage:        8 bytes
 14736 ;; Hardware stack levels used:    1
 14737 ;; Hardware stack levels required when called:    9
 14738 ;; This function calls:
 14739 ;;		_printf
 14740 ;; This function is called by:
 14741 ;;		_execCmd
 14742 ;; This function uses a non-reentrant model
 14743 ;;
 14744                           
 14745                           
 14746                           ;psect for function _getActive
 14747  1AE5                     _getActive:	
 14748                           
 14749                           ;main.c: 517: for(int i=24-1; i>=0; i--){
 14750                           
 14751                           ;incstack = 0
 14752                           ; Regs used in _getActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14753  1AE5  3017               	movlw	23
 14754  1AE6  0020               	movlb	0	; select bank0
 14755  1AE7  00CB               	movwf	getActive@i
 14756  1AE8  3000               	movlw	0
 14757  1AE9  00CC               	movwf	getActive@i+1
 14758  1AEA  1BCC               	btfsc	getActive@i+1,7
 14759  1AEB  2B1B               	goto	l8056
 14760  1AEC                     l8050:	
 14761                           
 14762                           ;main.c: 518: printf("%d ", (activeMask >> i) & 1 );
 14763  1AEC  303D               	movlw	low (STR_1| (0+32768))
 14764  1AED  0021               	movlb	1	; select bank1
 14765  1AEE  00A0               	movwf	printf@f^(0+128)
 14766  1AEF  30AA               	movlw	high (STR_1| (0+32768))
 14767  1AF0  00A1               	movwf	(printf@f^(0+128)+1)
 14768  1AF1  0858               	movf	_activeMask^(0+128),w
 14769  1AF2  00B7               	movwf	??_getActive^(0+128)
 14770  1AF3  0859               	movf	(_activeMask+1)^(0+128),w
 14771  1AF4  00B8               	movwf	(??_getActive^(0+128)+1)
 14772  1AF5  085A               	movf	(_activeMask+2)^(0+128),w
 14773  1AF6  00B9               	movwf	(??_getActive^(0+128)+2)
 14774  1AF7  085B               	movf	(_activeMask+3)^(0+128),w
 14775  1AF8  00BA               	movwf	(??_getActive^(0+128)+3)
 14776  1AF9  0020               	movlb	0	; select bank0
 14777  1AFA  0A4B               	incf	getActive@i,w
 14778  1AFB  0021               	movlb	1	; select bank1
 14779  1AFC  2B02               	goto	u8040
 14780  1AFD                     u8045:	
 14781  1AFD  1003               	clrc
 14782  1AFE  0CBA               	rrf	(??_getActive^(0+128)+3),f
 14783  1AFF  0CB9               	rrf	(??_getActive^(0+128)+2),f
 14784  1B00  0CB8               	rrf	(??_getActive^(0+128)+1),f
 14785  1B01  0CB7               	rrf	??_getActive^(0+128),f
 14786  1B02                     u8040:	
 14787  1B02  3EFF               	addlw	-1
 14788  1B03  1D03               	skipz
 14789  1B04  2AFD               	goto	u8045
 14790  1B05  3001               	movlw	1
 14791  1B06  0537               	andwf	??_getActive^(0+128),w
 14792  1B07  00A2               	movwf	(?_printf^(0+128)+2)
 14793  1B08  3000               	movlw	0
 14794  1B09  0538               	andwf	(??_getActive+1)^(0+128),w
 14795  1B0A  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14796  1B0B  3000               	movlw	0
 14797  1B0C  0539               	andwf	(??_getActive+2)^(0+128),w
 14798  1B0D  00A4               	movwf	((?_printf+2)^(0+128)+2)
 14799  1B0E  3000               	movlw	0
 14800  1B0F  053A               	andwf	(??_getActive+3)^(0+128),w
 14801  1B10  00A5               	movwf	((?_printf+3)^(0+128)+2)
 14802  1B11  3186  264A  319A   	fcall	_printf
 14803  1B14  30FF               	movlw	255
 14804  1B15  0020               	movlb	0	; select bank0
 14805  1B16  07CB               	addwf	getActive@i,f
 14806  1B17  30FF               	movlw	255
 14807  1B18  3DCC               	addwfc	getActive@i+1,f
 14808  1B19  1FCC               	btfss	getActive@i+1,7
 14809  1B1A  2AEC               	goto	l8050
 14810  1B1B                     l8056:	
 14811                           
 14812                           ;main.c: 519: }
 14813                           ;main.c: 520: printf("\n");
 14814  1B1B  303B               	movlw	low ((STR_36+28)| (0+32768))
 14815  1B1C  0021               	movlb	1	; select bank1
 14816  1B1D  00A0               	movwf	printf@f^(0+128)
 14817  1B1E  30A8               	movlw	high ((STR_36+28)| (0+32768))
 14818  1B1F  00A1               	movwf	(printf@f^(0+128)+1)
 14819  1B20  3186  264A         	fcall	_printf
 14820                           
 14821                           ;main.c: 521: return 0;
 14822  1B22  0020               	movlb	0	; select bank0
 14823  1B23  01C9               	clrf	?_getActive
 14824  1B24  01CA               	clrf	?_getActive+1
 14825  1B25  0008               	return
 14826  1B26                     __end_of_getActive:	
 14827                           
 14828                           	psect	text45
 14829  0AA1                     __ptext45:	
 14830 ;; *************** function _commCheck *****************
 14831 ;; Defined at:
 14832 ;;		line 539 in file "main.c"
 14833 ;; Parameters:    Size  Location     Type
 14834 ;;		None
 14835 ;; Auto vars:     Size  Location     Type
 14836 ;;		None
 14837 ;; Return value:  Size  Location     Type
 14838 ;;                  2   49[BANK1 ] int 
 14839 ;; Registers used:
 14840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14841 ;; Tracked objects:
 14842 ;;		On entry : 0/0
 14843 ;;		On exit  : 0/0
 14844 ;;		Unchanged: 0/0
 14845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14846 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14848 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14849 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14850 ;;Total ram usage:        3 bytes
 14851 ;; Hardware stack levels used:    1
 14852 ;; Hardware stack levels required when called:   13
 14853 ;; This function calls:
 14854 ;;		_LED_testComm
 14855 ;;		_LED_test_openshort
 14856 ;;		_drv_read
 14857 ;;		_printf
 14858 ;; This function is called by:
 14859 ;;		_execCmd
 14860 ;; This function uses a non-reentrant model
 14861 ;;
 14862                           
 14863                           
 14864                           ;psect for function _commCheck
 14865  0AA1                     _commCheck:	
 14866                           
 14867                           ;main.c: 540: printf("\n----starting comm test----\n\n");
 14868                           
 14869                           ;incstack = 0
 14870                           ; Regs used in _commCheck: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14871  0AA1  301F               	movlw	low (STR_36| (0+32768))
 14872  0AA2  0021               	movlb	1	; select bank1
 14873  0AA3  00A0               	movwf	printf@f^(0+128)
 14874  0AA4  30A8               	movlw	high (STR_36| (0+32768))
 14875  0AA5  00A1               	movwf	(printf@f^(0+128)+1)
 14876  0AA6  3186  264A  318A   	fcall	_printf
 14877                           
 14878                           ;main.c: 542: printf("testing top LED driver...");
 14879  0AA9  3059               	movlw	low (STR_37| (0+32768))
 14880  0AAA  0021               	movlb	1	; select bank1
 14881  0AAB  00A0               	movwf	printf@f^(0+128)
 14882  0AAC  30A8               	movlw	high (STR_37| (0+32768))
 14883  0AAD  00A1               	movwf	(printf@f^(0+128)+1)
 14884  0AAE  3186  264A  318A   	fcall	_printf
 14885                           
 14886                           ;main.c: 543: if (!LED_testComm(1))
 14887  0AB1  3001               	movlw	1
 14888  0AB2  0021               	movlb	1	; select bank1
 14889  0AB3  00C7               	movwf	LED_testComm@topOrBottom^(0+128)
 14890  0AB4  3000               	movlw	0
 14891  0AB5  00C8               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 14892  0AB6  3197  2789  318A   	fcall	_LED_testComm
 14893  0AB9  0021               	movlb	1	; select bank1
 14894  0ABA  0847               	movf	?_LED_testComm^(0+128),w
 14895  0ABB  0448               	iorwf	(?_LED_testComm+1)^(0+128),w
 14896  0ABC  1D03               	btfss	3,2
 14897  0ABD  2AC2               	goto	l8096
 14898                           
 14899                           ;main.c: 544: printf("passed\n");
 14900  0ABE  30E9               	movlw	low (STR_38| (0+32768))
 14901  0ABF  00A0               	movwf	printf@f^(0+128)
 14902  0AC0  30A9               	movlw	high (STR_38| (0+32768))
 14903  0AC1  2AC6               	goto	L24
 14904  0AC2                     l8096:	
 14905                           
 14906                           ;main.c: 545: else
 14907                           ;main.c: 546: printf("FAILED\n");
 14908  0AC2  30E1               	movlw	low (STR_39| (0+32768))
 14909  0AC3  0021               	movlb	1	; select bank1
 14910  0AC4  00A0               	movwf	printf@f^(0+128)
 14911  0AC5  30A9               	movlw	high (STR_39| (0+32768))
 14912  0AC6                     L24:	
 14913  0AC6  00A1               	movwf	(printf@f^(0+128)+1)
 14914  0AC7  3186  264A  318A   	fcall	_printf
 14915                           
 14916                           ;main.c: 548: printf("opens: ");
 14917  0ACA  30F9               	movlw	low (STR_40| (0+32768))
 14918  0ACB  0021               	movlb	1	; select bank1
 14919  0ACC  00A0               	movwf	printf@f^(0+128)
 14920  0ACD  30A9               	movlw	high (STR_40| (0+32768))
 14921  0ACE  00A1               	movwf	(printf@f^(0+128)+1)
 14922  0ACF  3186  264A  318A   	fcall	_printf
 14923                           
 14924                           ;main.c: 549: LED_test_openshort(10, 1);
 14925  0AD2  300A               	movlw	10
 14926  0AD3  0021               	movlb	1	; select bank1
 14927  0AD4  00B7               	movwf	LED_test_openshort@type^(0+128)
 14928  0AD5  3000               	movlw	0
 14929  0AD6  00B8               	movwf	(LED_test_openshort@type^(0+128)+1)
 14930  0AD7  3001               	movlw	1
 14931  0AD8  00B9               	movwf	LED_test_openshort@topOrBottom^(0+128)
 14932  0AD9  3000               	movlw	0
 14933  0ADA  00BA               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 14934  0ADB  3196  2638  318A   	fcall	_LED_test_openshort
 14935                           
 14936                           ;main.c: 550: printf("\n\nshorts: ");
 14937  0ADE  30A4               	movlw	low (STR_41| (0+32768))
 14938  0ADF  0021               	movlb	1	; select bank1
 14939  0AE0  00A0               	movwf	printf@f^(0+128)
 14940  0AE1  30A9               	movlw	high (STR_41| (0+32768))
 14941  0AE2  00A1               	movwf	(printf@f^(0+128)+1)
 14942  0AE3  3186  264A  318A   	fcall	_printf
 14943                           
 14944                           ;main.c: 551: LED_test_openshort(11, 1);
 14945  0AE6  300B               	movlw	11
 14946  0AE7  0021               	movlb	1	; select bank1
 14947  0AE8  00B7               	movwf	LED_test_openshort@type^(0+128)
 14948  0AE9  3000               	movlw	0
 14949  0AEA  00B8               	movwf	(LED_test_openshort@type^(0+128)+1)
 14950  0AEB  3001               	movlw	1
 14951  0AEC  00B9               	movwf	LED_test_openshort@topOrBottom^(0+128)
 14952  0AED  3000               	movlw	0
 14953  0AEE  00BA               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 14954  0AEF  3196  2638  318A   	fcall	_LED_test_openshort
 14955                           
 14956                           ;main.c: 553: printf("\ntesting bottom LED driver...\n");
 14957  0AF2  3000               	movlw	low (STR_42| (0+32768))
 14958  0AF3  0021               	movlb	1	; select bank1
 14959  0AF4  00A0               	movwf	printf@f^(0+128)
 14960  0AF5  30A8               	movlw	high (STR_42| (0+32768))
 14961  0AF6  00A1               	movwf	(printf@f^(0+128)+1)
 14962  0AF7  3186  264A  318A   	fcall	_printf
 14963                           
 14964                           ;main.c: 554: if (!LED_testComm(2))
 14965  0AFA  3002               	movlw	2
 14966  0AFB  0021               	movlb	1	; select bank1
 14967  0AFC  00C7               	movwf	LED_testComm@topOrBottom^(0+128)
 14968  0AFD  3000               	movlw	0
 14969  0AFE  00C8               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 14970  0AFF  3197  2789  318A   	fcall	_LED_testComm
 14971  0B02  0021               	movlb	1	; select bank1
 14972  0B03  0847               	movf	?_LED_testComm^(0+128),w
 14973  0B04  0448               	iorwf	(?_LED_testComm+1)^(0+128),w
 14974  0B05  1D03               	btfss	3,2
 14975  0B06  2B0B               	goto	l8100
 14976                           
 14977                           ;main.c: 555: printf("passed\n");
 14978  0B07  30E9               	movlw	low (STR_38| (0+32768))
 14979  0B08  00A0               	movwf	printf@f^(0+128)
 14980  0B09  30A9               	movlw	high (STR_38| (0+32768))
 14981  0B0A  2B0F               	goto	L25
 14982  0B0B                     l8100:	
 14983                           
 14984                           ;main.c: 556: else
 14985                           ;main.c: 557: printf("FAILED\n");
 14986  0B0B  30E1               	movlw	low (STR_39| (0+32768))
 14987  0B0C  0021               	movlb	1	; select bank1
 14988  0B0D  00A0               	movwf	printf@f^(0+128)
 14989  0B0E  30A9               	movlw	high (STR_39| (0+32768))
 14990  0B0F                     L25:	
 14991  0B0F  00A1               	movwf	(printf@f^(0+128)+1)
 14992  0B10  3186  264A  318A   	fcall	_printf
 14993                           
 14994                           ;main.c: 559: printf("opens: ");
 14995  0B13  30F9               	movlw	low (STR_40| (0+32768))
 14996  0B14  0021               	movlb	1	; select bank1
 14997  0B15  00A0               	movwf	printf@f^(0+128)
 14998  0B16  30A9               	movlw	high (STR_40| (0+32768))
 14999  0B17  00A1               	movwf	(printf@f^(0+128)+1)
 15000  0B18  3186  264A  318A   	fcall	_printf
 15001                           
 15002                           ;main.c: 560: LED_test_openshort(10, 2);
 15003  0B1B  300A               	movlw	10
 15004  0B1C  0021               	movlb	1	; select bank1
 15005  0B1D  00B7               	movwf	LED_test_openshort@type^(0+128)
 15006  0B1E  3000               	movlw	0
 15007  0B1F  00B8               	movwf	(LED_test_openshort@type^(0+128)+1)
 15008  0B20  3002               	movlw	2
 15009  0B21  00B9               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15010  0B22  3000               	movlw	0
 15011  0B23  00BA               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15012  0B24  3196  2638  318A   	fcall	_LED_test_openshort
 15013                           
 15014                           ;main.c: 561: printf("\n\nshorts: ");
 15015  0B27  30A4               	movlw	low (STR_41| (0+32768))
 15016  0B28  0021               	movlb	1	; select bank1
 15017  0B29  00A0               	movwf	printf@f^(0+128)
 15018  0B2A  30A9               	movlw	high (STR_41| (0+32768))
 15019  0B2B  00A1               	movwf	(printf@f^(0+128)+1)
 15020  0B2C  3186  264A  318A   	fcall	_printf
 15021                           
 15022                           ;main.c: 562: LED_test_openshort(11, 2);
 15023  0B2F  300B               	movlw	11
 15024  0B30  0021               	movlb	1	; select bank1
 15025  0B31  00B7               	movwf	LED_test_openshort@type^(0+128)
 15026  0B32  3000               	movlw	0
 15027  0B33  00B8               	movwf	(LED_test_openshort@type^(0+128)+1)
 15028  0B34  3002               	movlw	2
 15029  0B35  00B9               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15030  0B36  3000               	movlw	0
 15031  0B37  00BA               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15032  0B38  3196  2638  318A   	fcall	_LED_test_openshort
 15033                           
 15034                           ;main.c: 564: printf("\ntesting piezo driver...");
 15035  0B3B  3073               	movlw	low (STR_47| (0+32768))
 15036  0B3C  0021               	movlb	1	; select bank1
 15037  0B3D  00A0               	movwf	printf@f^(0+128)
 15038  0B3E  30A8               	movlw	high (STR_47| (0+32768))
 15039  0B3F  00A1               	movwf	(printf@f^(0+128)+1)
 15040  0B40  3186  264A  318A   	fcall	_printf
 15041                           
 15042                           ;main.c: 565: if(drv_read(0x01) > 0)
 15043  0B43  3001               	movlw	1
 15044  0B44  319B  23F0  318A   	fcall	_drv_read
 15045  0B47  0020               	movlb	0	; select bank0
 15046  0B48  084A               	movf	?_drv_read+1,w
 15047  0B49  3A80               	xorlw	128
 15048  0B4A  0021               	movlb	1	; select bank1
 15049  0B4B  00D3               	movwf	??_commCheck^(0+128)
 15050  0B4C  3080               	movlw	128
 15051  0B4D  0253               	subwf	??_commCheck^(0+128),w
 15052  0B4E  1D03               	skipz
 15053  0B4F  2B53               	goto	u8115
 15054  0B50  3001               	movlw	1
 15055  0B51  0020               	movlb	0	; select bank0
 15056  0B52  0249               	subwf	?_drv_read,w
 15057  0B53                     u8115:	
 15058  0B53  1C03               	skipc
 15059  0B54  2B5A               	goto	l8104
 15060                           
 15061                           ;main.c: 566: printf("passed\n\n");
 15062  0B55  30B8               	movlw	low (STR_48| (0+32768))
 15063  0B56  0021               	movlb	1	; select bank1
 15064  0B57  00A0               	movwf	printf@f^(0+128)
 15065  0B58  30A9               	movlw	high (STR_48| (0+32768))
 15066  0B59  2B5E               	goto	L26
 15067  0B5A                     l8104:	
 15068                           
 15069                           ;main.c: 567: else
 15070                           ;main.c: 568: printf("FAILED\n\n");
 15071  0B5A  30AF               	movlw	low (STR_49| (0+32768))
 15072  0B5B  0021               	movlb	1	; select bank1
 15073  0B5C  00A0               	movwf	printf@f^(0+128)
 15074  0B5D  30A9               	movlw	high (STR_49| (0+32768))
 15075  0B5E                     L26:	
 15076  0B5E  00A1               	movwf	(printf@f^(0+128)+1)
 15077  0B5F  3186  264A  318A   	fcall	_printf
 15078                           
 15079                           ;main.c: 569: printf("----finished comm test----\n");
 15080  0B62  303D               	movlw	low (STR_50| (0+32768))
 15081  0B63  0021               	movlb	1	; select bank1
 15082  0B64  00A0               	movwf	printf@f^(0+128)
 15083  0B65  30A8               	movlw	high (STR_50| (0+32768))
 15084  0B66  00A1               	movwf	(printf@f^(0+128)+1)
 15085  0B67  3186  264A         	fcall	_printf
 15086  0B69  0008               	return
 15087  0B6A                     __end_of_commCheck:	
 15088                           
 15089                           	psect	text46
 15090  1638                     __ptext46:	
 15091 ;; *************** function _LED_test_openshort *****************
 15092 ;; Defined at:
 15093 ;;		line 95 in file "LEDcomm.c"
 15094 ;; Parameters:    Size  Location     Type
 15095 ;;  type            2   23[BANK1 ] int 
 15096 ;;  topOrBottom     2   25[BANK1 ] int 
 15097 ;; Auto vars:     Size  Location     Type
 15098 ;;  j               2   32[BANK1 ] int 
 15099 ;;  readData        4   28[BANK1 ] unsigned long 
 15100 ;; Return value:  Size  Location     Type
 15101 ;;                  1    wreg      void 
 15102 ;; Registers used:
 15103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15104 ;; Tracked objects:
 15105 ;;		On entry : 0/0
 15106 ;;		On exit  : 0/0
 15107 ;;		Unchanged: 0/0
 15108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15109 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15110 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15111 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15112 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15113 ;;Total ram usage:       11 bytes
 15114 ;; Hardware stack levels used:    1
 15115 ;; Hardware stack levels required when called:    9
 15116 ;; This function calls:
 15117 ;;		_LEDsOn
 15118 ;;		_printf
 15119 ;;		_send_2length_2bytes_IK
 15120 ;; This function is called by:
 15121 ;;		_commCheck
 15122 ;; This function uses a non-reentrant model
 15123 ;;
 15124                           
 15125                           
 15126                           ;psect for function _LED_test_openshort
 15127  1638                     _LED_test_openshort:	
 15128                           
 15129                           ;incstack = 0
 15130                           ; Regs used in _LED_test_openshort: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15131                           ;LEDcomm.c: 97: do { LATCbits.LATC1 = 1; } while(0);
 15132  1638  0022               	movlb	2	; select bank2
 15133  1639  148E               	bsf	14,1	;volatile
 15134                           
 15135                           ;LEDcomm.c: 98: LEDsOn(0xFFFFFFFF, topOrBottom);
 15136  163A  30FF               	movlw	255
 15137  163B  0020               	movlb	0	; select bank0
 15138  163C  00C7               	movwf	LEDsOn@LEDpins+3
 15139  163D  30FF               	movlw	255
 15140  163E  00C6               	movwf	LEDsOn@LEDpins+2
 15141  163F  30FF               	movlw	255
 15142  1640  00C5               	movwf	LEDsOn@LEDpins+1
 15143  1641  30FF               	movlw	255
 15144  1642  00C4               	movwf	LEDsOn@LEDpins
 15145  1643  0021               	movlb	1	; select bank1
 15146  1644  083A               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15147  1645  0020               	movlb	0	; select bank0
 15148  1646  00C9               	movwf	LEDsOn@topOrBottom+1
 15149  1647  0021               	movlb	1	; select bank1
 15150  1648  0839               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15151  1649  0020               	movlb	0	; select bank0
 15152  164A  00C8               	movwf	LEDsOn@topOrBottom
 15153  164B  3193  23CC  3196   	fcall	_LEDsOn
 15154                           
 15155                           ;LEDcomm.c: 99: send_2length_2bytes_IK(0,0,type,topOrBottom);
 15156  164E  3000               	movlw	0
 15157  164F  0020               	movlb	0	; select bank0
 15158  1650  00BC               	movwf	send_2length_2bytes_IK@data1
 15159  1651  00BD               	movwf	send_2length_2bytes_IK@data1+1
 15160  1652  3000               	movlw	0
 15161  1653  00BE               	movwf	send_2length_2bytes_IK@data2
 15162  1654  00BF               	movwf	send_2length_2bytes_IK@data2+1
 15163  1655  0021               	movlb	1	; select bank1
 15164  1656  0837               	movf	LED_test_openshort@type^(0+128),w
 15165  1657  00BB               	movwf	??_LED_test_openshort^(0+128)
 15166  1658  083B               	movf	??_LED_test_openshort^(0+128),w
 15167  1659  0020               	movlb	0	; select bank0
 15168  165A  00C0               	movwf	send_2length_2bytes_IK@latch_start
 15169  165B  0021               	movlb	1	; select bank1
 15170  165C  083A               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15171  165D  0020               	movlb	0	; select bank0
 15172  165E  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 15173  165F  0021               	movlb	1	; select bank1
 15174  1660  0839               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15175  1661  0020               	movlb	0	; select bank0
 15176  1662  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 15177  1663  31A5  25F0  3196   	fcall	_send_2length_2bytes_IK
 15178                           
 15179                           ;LEDcomm.c: 101: do { LATCbits.LATC1 = 0; } while(0);
 15180  1666  0022               	movlb	2	; select bank2
 15181  1667  108E               	bcf	14,1	;volatile
 15182                           
 15183                           ;LEDcomm.c: 103: unsigned long readData = 0;
 15184  1668  3000               	movlw	0
 15185  1669  0021               	movlb	1	; select bank1
 15186  166A  00BF               	movwf	(LED_test_openshort@readData+3)^(0+128)
 15187  166B  3000               	movlw	0
 15188  166C  00BE               	movwf	(LED_test_openshort@readData+2)^(0+128)
 15189  166D  3000               	movlw	0
 15190  166E  00BD               	movwf	(LED_test_openshort@readData+1)^(0+128)
 15191  166F  3000               	movlw	0
 15192  1670  00BC               	movwf	LED_test_openshort@readData^(0+128)
 15193                           
 15194                           ;LEDcomm.c: 105: for(int j = 23; j>=0; j--){
 15195  1671  3017               	movlw	23
 15196  1672  00C0               	movwf	LED_test_openshort@j^(0+128)
 15197  1673  3000               	movlw	0
 15198  1674  00C1               	movwf	(LED_test_openshort@j^(0+128)+1)
 15199  1675  1BC1               	btfsc	(LED_test_openshort@j+1)^(0+128),7
 15200  1676  2E9A               	goto	l7540
 15201  1677                     l279:	
 15202                           ;LEDcomm.c: 106: do { LATAbits.LATA2 = 1; } while(0);
 15203                           
 15204  1677  0022               	movlb	2	; select bank2
 15205  1678  150C               	bsf	12,2	;volatile
 15206                           
 15207                           ;LEDcomm.c: 107: _delay((unsigned long)((10)*(1000000/4000000.0)));
 15208  1679  3200               	nop2	;2 cycle nop
 15209                           
 15210                           ;LEDcomm.c: 108: do { LATAbits.LATA2 = 0; } while(0);
 15211  167A  0022               	movlb	2	; select bank2
 15212  167B  110C               	bcf	12,2	;volatile
 15213                           
 15214                           ;LEDcomm.c: 110: if (PORTCbits.RC6) printf("%d ", j);
 15215  167C  0020               	movlb	0	; select bank0
 15216  167D  1F0E               	btfss	14,6	;volatile
 15217  167E  2E8B               	goto	l7534
 15218  167F  303D               	movlw	low (STR_1| (0+32768))
 15219  1680  0021               	movlb	1	; select bank1
 15220  1681  00A0               	movwf	printf@f^(0+128)
 15221  1682  30AA               	movlw	high (STR_1| (0+32768))
 15222  1683  00A1               	movwf	(printf@f^(0+128)+1)
 15223  1684  0841               	movf	(LED_test_openshort@j+1)^(0+128),w
 15224  1685  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15225  1686  0840               	movf	LED_test_openshort@j^(0+128),w
 15226  1687  00A2               	movwf	(?_printf^(0+128)+2)
 15227  1688  3186  264A  3196   	fcall	_printf
 15228  168B                     l7534:	
 15229                           
 15230                           ;LEDcomm.c: 116: if (j == 23) do { LATCbits.LATC1 = 1; } while(0);
 15231  168B  3017               	movlw	23
 15232  168C  0021               	movlb	1	; select bank1
 15233  168D  0640               	xorwf	LED_test_openshort@j^(0+128),w
 15234  168E  0441               	iorwf	(LED_test_openshort@j+1)^(0+128),w
 15235  168F  1D03               	btfss	3,2
 15236  1690  2E93               	goto	l7536
 15237  1691  0022               	movlb	2	; select bank2
 15238  1692  148E               	bsf	14,1	;volatile
 15239  1693                     l7536:	
 15240  1693  30FF               	movlw	255
 15241  1694  0021               	movlb	1	; select bank1
 15242  1695  07C0               	addwf	LED_test_openshort@j^(0+128),f
 15243  1696  30FF               	movlw	255
 15244  1697  3DC1               	addwfc	(LED_test_openshort@j+1)^(0+128),f
 15245  1698  1FC1               	btfss	(LED_test_openshort@j+1)^(0+128),7
 15246  1699  2E77               	goto	l279
 15247  169A                     l7540:	
 15248                           
 15249                           ;LEDcomm.c: 117: }
 15250                           ;LEDcomm.c: 118: printf("\n");
 15251  169A  303B               	movlw	low ((STR_36+28)| (0+32768))
 15252  169B  00A0               	movwf	printf@f^(0+128)
 15253  169C  30A8               	movlw	high ((STR_36+28)| (0+32768))
 15254  169D  00A1               	movwf	(printf@f^(0+128)+1)
 15255  169E  3186  264A         	fcall	_printf
 15256  16A0  0008               	return
 15257  16A1                     __end_of_LED_test_openshort:	
 15258                           
 15259                           	psect	text47
 15260  1789                     __ptext47:	
 15261 ;; *************** function _LED_testComm *****************
 15262 ;; Defined at:
 15263 ;;		line 151 in file "LEDcomm.c"
 15264 ;; Parameters:    Size  Location     Type
 15265 ;;  topOrBottom     2   39[BANK1 ] int 
 15266 ;; Auto vars:     Size  Location     Type
 15267 ;;  oldConfigReg    4   45[BANK1 ] long 
 15268 ;;  readResult      2   43[BANK1 ] int 
 15269 ;; Return value:  Size  Location     Type
 15270 ;;                  2   39[BANK1 ] int 
 15271 ;; Registers used:
 15272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15273 ;; Tracked objects:
 15274 ;;		On entry : 0/0
 15275 ;;		On exit  : 0/0
 15276 ;;		Unchanged: 0/0
 15277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15278 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15279 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15280 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15281 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15282 ;;Total ram usage:       10 bytes
 15283 ;; Hardware stack levels used:    1
 15284 ;; Hardware stack levels required when called:   11
 15285 ;; This function calls:
 15286 ;;		_LED_readConfig
 15287 ;;		_LED_setBrightnessRange
 15288 ;; This function is called by:
 15289 ;;		_commCheck
 15290 ;; This function uses a non-reentrant model
 15291 ;;
 15292                           
 15293                           
 15294                           ;psect for function _LED_testComm
 15295  1789                     _LED_testComm:	
 15296                           
 15297                           ;LEDcomm.c: 153: long oldConfigReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 15298                           
 15299                           ;incstack = 0
 15300                           ; Regs used in _LED_testComm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15301  1789  0021               	movlb	1	; select bank1
 15302  178A  0347               	decf	LED_testComm@topOrBottom^(0+128),w
 15303  178B  0448               	iorwf	(LED_testComm@topOrBottom+1)^(0+128),w
 15304  178C  1903               	btfsc	3,2
 15305  178D  2F9D               	goto	l7546
 15306  178E  0022               	movlb	2	; select bank2
 15307  178F  0849               	movf	(_LED_configReg_bot+3)^(0+256),w
 15308  1790  0021               	movlb	1	; select bank1
 15309  1791  00D0               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 15310  1792  0022               	movlb	2	; select bank2
 15311  1793  0848               	movf	(_LED_configReg_bot+2)^(0+256),w
 15312  1794  0021               	movlb	1	; select bank1
 15313  1795  00CF               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 15314  1796  0022               	movlb	2	; select bank2
 15315  1797  0847               	movf	(_LED_configReg_bot+1)^(0+256),w
 15316  1798  0021               	movlb	1	; select bank1
 15317  1799  00CE               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 15318  179A  0022               	movlb	2	; select bank2
 15319  179B  0846               	movf	_LED_configReg_bot^(0+256),w
 15320  179C  2FAB               	goto	L27
 15321  179D                     l7546:	
 15322  179D  0022               	movlb	2	; select bank2
 15323  179E  084D               	movf	(_LED_configReg_top+3)^(0+256),w
 15324  179F  0021               	movlb	1	; select bank1
 15325  17A0  00D0               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 15326  17A1  0022               	movlb	2	; select bank2
 15327  17A2  084C               	movf	(_LED_configReg_top+2)^(0+256),w
 15328  17A3  0021               	movlb	1	; select bank1
 15329  17A4  00CF               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 15330  17A5  0022               	movlb	2	; select bank2
 15331  17A6  084B               	movf	(_LED_configReg_top+1)^(0+256),w
 15332  17A7  0021               	movlb	1	; select bank1
 15333  17A8  00CE               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 15334  17A9  0022               	movlb	2	; select bank2
 15335  17AA  084A               	movf	_LED_configReg_top^(0+256),w
 15336  17AB                     L27:	
 15337  17AB  0021               	movlb	1	; select bank1
 15338  17AC  00CD               	movwf	LED_testComm@oldConfigReg^(0+128)
 15339                           
 15340                           ;LEDcomm.c: 154: LED_setBrightnessRange(1, topOrBottom);
 15341  17AD  3001               	movlw	1
 15342  17AE  0020               	movlb	0	; select bank0
 15343  17AF  00C4               	movwf	LED_setBrightnessRange@range
 15344  17B0  3000               	movlw	0
 15345  17B1  00C5               	movwf	LED_setBrightnessRange@range+1
 15346  17B2  0021               	movlb	1	; select bank1
 15347  17B3  0848               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15348  17B4  0020               	movlb	0	; select bank0
 15349  17B5  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 15350  17B6  0021               	movlb	1	; select bank1
 15351  17B7  0847               	movf	LED_testComm@topOrBottom^(0+128),w
 15352  17B8  0020               	movlb	0	; select bank0
 15353  17B9  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 15354  17BA  318C  2445  3197   	fcall	_LED_setBrightnessRange
 15355                           
 15356                           ;LEDcomm.c: 155: int readResult = LED_readConfig(topOrBottom);
 15357  17BD  0021               	movlb	1	; select bank1
 15358  17BE  0848               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15359  17BF  00C4               	movwf	(LED_readConfig@topOrBottom+1)^(0+128)
 15360  17C0  0847               	movf	LED_testComm@topOrBottom^(0+128),w
 15361  17C1  00C3               	movwf	LED_readConfig@topOrBottom^(0+128)
 15362  17C2  3199  211E  3197   	fcall	_LED_readConfig
 15363  17C5  0021               	movlb	1	; select bank1
 15364  17C6  0844               	movf	(?_LED_readConfig+1)^(0+128),w
 15365  17C7  00CC               	movwf	(LED_testComm@readResult+1)^(0+128)
 15366  17C8  0843               	movf	?_LED_readConfig^(0+128),w
 15367  17C9  00CB               	movwf	LED_testComm@readResult^(0+128)
 15368                           
 15369                           ;LEDcomm.c: 157: LED_setBrightnessRange(oldConfigReg > 0, topOrBottom);
 15370  17CA  1BD0               	btfsc	(LED_testComm@oldConfigReg+3)^(0+128),7
 15371  17CB  2FDB               	goto	u7390
 15372  17CC  0850               	movf	(LED_testComm@oldConfigReg+3)^(0+128),w
 15373  17CD  1D03               	btfss	3,2
 15374  17CE  2FD9               	goto	u7391
 15375  17CF  084F               	movf	(LED_testComm@oldConfigReg+2)^(0+128),w
 15376  17D0  1D03               	btfss	3,2
 15377  17D1  2FD9               	goto	u7391
 15378  17D2  084E               	movf	(LED_testComm@oldConfigReg+1)^(0+128),w
 15379  17D3  1D03               	btfss	3,2
 15380  17D4  2FD9               	goto	u7391
 15381  17D5  3001               	movlw	1
 15382  17D6  024D               	subwf	LED_testComm@oldConfigReg^(0+128),w
 15383  17D7  1C03               	btfss	3,0
 15384  17D8  2FDB               	goto	u7390
 15385  17D9                     u7391:	
 15386  17D9  3001               	movlw	1
 15387  17DA  2FDC               	goto	u7400
 15388  17DB                     u7390:	
 15389  17DB  3000               	movlw	0
 15390  17DC                     u7400:	
 15391  17DC  00C9               	movwf	??_LED_testComm^(0+128)
 15392  17DD  01CA               	clrf	(??_LED_testComm^(0+128)+1)
 15393  17DE  0849               	movf	??_LED_testComm^(0+128),w
 15394  17DF  0020               	movlb	0	; select bank0
 15395  17E0  00C4               	movwf	LED_setBrightnessRange@range
 15396  17E1  0021               	movlb	1	; select bank1
 15397  17E2  084A               	movf	(??_LED_testComm+1)^(0+128),w
 15398  17E3  0020               	movlb	0	; select bank0
 15399  17E4  00C5               	movwf	LED_setBrightnessRange@range+1
 15400  17E5  0021               	movlb	1	; select bank1
 15401  17E6  0848               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15402  17E7  0020               	movlb	0	; select bank0
 15403  17E8  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 15404  17E9  0021               	movlb	1	; select bank1
 15405  17EA  0847               	movf	LED_testComm@topOrBottom^(0+128),w
 15406  17EB  0020               	movlb	0	; select bank0
 15407  17EC  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 15408  17ED  318C  2445  3197   	fcall	_LED_setBrightnessRange
 15409                           
 15410                           ;LEDcomm.c: 159: return (readResult != 7);
 15411  17F0  3007               	movlw	7
 15412  17F1  0021               	movlb	1	; select bank1
 15413  17F2  064B               	xorwf	LED_testComm@readResult^(0+128),w
 15414  17F3  044C               	iorwf	(LED_testComm@readResult+1)^(0+128),w
 15415  17F4  1903               	btfsc	3,2
 15416  17F5  2FF8               	goto	u7410
 15417  17F6  3001               	movlw	1
 15418  17F7  2FF9               	goto	u7420
 15419  17F8                     u7410:	
 15420  17F8  3000               	movlw	0
 15421  17F9                     u7420:	
 15422  17F9  00C9               	movwf	??_LED_testComm^(0+128)
 15423  17FA  01CA               	clrf	(??_LED_testComm^(0+128)+1)
 15424  17FB  0849               	movf	??_LED_testComm^(0+128),w
 15425  17FC  00C7               	movwf	?_LED_testComm^(0+128)
 15426  17FD  084A               	movf	(??_LED_testComm+1)^(0+128),w
 15427  17FE  00C8               	movwf	(?_LED_testComm+1)^(0+128)
 15428  17FF  0008               	return
 15429  1800                     __end_of_LED_testComm:	
 15430                           
 15431                           	psect	text48
 15432  0C45                     __ptext48:	
 15433 ;; *************** function _LED_setBrightnessRange *****************
 15434 ;; Defined at:
 15435 ;;		line 77 in file "LEDcomm.c"
 15436 ;; Parameters:    Size  Location     Type
 15437 ;;  range           2   36[BANK0 ] int 
 15438 ;;  topOrBottom     2   38[BANK0 ] int 
 15439 ;; Auto vars:     Size  Location     Type
 15440 ;;  LED_configRe    4   40[BANK0 ] long 
 15441 ;; Return value:  Size  Location     Type
 15442 ;;                  1    wreg      void 
 15443 ;; Registers used:
 15444 ;;		wreg, status,2, status,0, pclath, cstack
 15445 ;; Tracked objects:
 15446 ;;		On entry : 0/0
 15447 ;;		On exit  : 0/0
 15448 ;;		Unchanged: 0/0
 15449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15450 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15451 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15452 ;;      Temps:          0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15453 ;;      Totals:         0       8      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15454 ;;Total ram usage:       25 bytes
 15455 ;; Hardware stack levels used:    1
 15456 ;; Hardware stack levels required when called:    8
 15457 ;; This function calls:
 15458 ;;		_send_2length_2bytes_IK
 15459 ;; This function is called by:
 15460 ;;		_LED_testComm
 15461 ;;		_main_initialize
 15462 ;;		_setLEDBrightnessRange
 15463 ;; This function uses a non-reentrant model
 15464 ;;
 15465                           
 15466                           
 15467                           ;psect for function _LED_setBrightnessRange
 15468  0C45                     _LED_setBrightnessRange:	
 15469                           
 15470                           ;LEDcomm.c: 79: long LED_configReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 15471                           
 15472                           ;incstack = 0
 15473                           ; Regs used in _LED_setBrightnessRange: [wreg+status,2+status,0+pclath+cstack]
 15474  0C45  0020               	movlb	0	; select bank0
 15475  0C46  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 15476  0C47  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 15477  0C48  1903               	btfsc	3,2
 15478  0C49  2C59               	goto	l7438
 15479  0C4A  0022               	movlb	2	; select bank2
 15480  0C4B  0849               	movf	(_LED_configReg_bot+3)^(0+256),w
 15481  0C4C  0020               	movlb	0	; select bank0
 15482  0C4D  00CB               	movwf	LED_setBrightnessRange@LED_configReg+3
 15483  0C4E  0022               	movlb	2	; select bank2
 15484  0C4F  0848               	movf	(_LED_configReg_bot+2)^(0+256),w
 15485  0C50  0020               	movlb	0	; select bank0
 15486  0C51  00CA               	movwf	LED_setBrightnessRange@LED_configReg+2
 15487  0C52  0022               	movlb	2	; select bank2
 15488  0C53  0847               	movf	(_LED_configReg_bot+1)^(0+256),w
 15489  0C54  0020               	movlb	0	; select bank0
 15490  0C55  00C9               	movwf	LED_setBrightnessRange@LED_configReg+1
 15491  0C56  0022               	movlb	2	; select bank2
 15492  0C57  0846               	movf	_LED_configReg_bot^(0+256),w
 15493  0C58  2C67               	goto	L28
 15494  0C59                     l7438:	
 15495  0C59  0022               	movlb	2	; select bank2
 15496  0C5A  084D               	movf	(_LED_configReg_top+3)^(0+256),w
 15497  0C5B  0020               	movlb	0	; select bank0
 15498  0C5C  00CB               	movwf	LED_setBrightnessRange@LED_configReg+3
 15499  0C5D  0022               	movlb	2	; select bank2
 15500  0C5E  084C               	movf	(_LED_configReg_top+2)^(0+256),w
 15501  0C5F  0020               	movlb	0	; select bank0
 15502  0C60  00CA               	movwf	LED_setBrightnessRange@LED_configReg+2
 15503  0C61  0022               	movlb	2	; select bank2
 15504  0C62  084B               	movf	(_LED_configReg_top+1)^(0+256),w
 15505  0C63  0020               	movlb	0	; select bank0
 15506  0C64  00C9               	movwf	LED_setBrightnessRange@LED_configReg+1
 15507  0C65  0022               	movlb	2	; select bank2
 15508  0C66  084A               	movf	_LED_configReg_top^(0+256),w
 15509  0C67                     L28:	
 15510  0C67  0020               	movlb	0	; select bank0
 15511  0C68  00C8               	movwf	LED_setBrightnessRange@LED_configReg
 15512                           
 15513                           ;LEDcomm.c: 80: LED_configReg |= ((range>0) | (range>0)<<1 | (range>0) << 2);
 15514  0C69  0845               	movf	LED_setBrightnessRange@range+1,w
 15515  0C6A  3A80               	xorlw	128
 15516  0C6B  0021               	movlb	1	; select bank1
 15517  0C6C  00A0               	movwf	??_LED_setBrightnessRange^(0+128)
 15518  0C6D  3080               	movlw	128
 15519  0C6E  0220               	subwf	??_LED_setBrightnessRange^(0+128),w
 15520  0C6F  1D03               	skipz
 15521  0C70  2C74               	goto	u7095
 15522  0C71  3001               	movlw	1
 15523  0C72  0020               	movlb	0	; select bank0
 15524  0C73  0244               	subwf	LED_setBrightnessRange@range,w
 15525  0C74                     u7095:	
 15526  0C74  1C03               	btfss	3,0
 15527  0C75  2C78               	goto	u7090
 15528  0C76  3001               	movlw	1
 15529  0C77  2C79               	goto	u7100
 15530  0C78                     u7090:	
 15531  0C78  3000               	movlw	0
 15532  0C79                     u7100:	
 15533  0C79  0021               	movlb	1	; select bank1
 15534  0C7A  00A1               	movwf	(??_LED_setBrightnessRange+1)^(0+128)
 15535  0C7B  01A2               	clrf	((??_LED_setBrightnessRange+1)^(0+128)+1)
 15536  0C7C  35A1               	lslf	(??_LED_setBrightnessRange+1)^(0+128),f
 15537  0C7D  0DA2               	rlf	((??_LED_setBrightnessRange+1)^(0+128)+1),f
 15538  0C7E  35A1               	lslf	(??_LED_setBrightnessRange+1)^(0+128),f
 15539  0C7F  0DA2               	rlf	((??_LED_setBrightnessRange+1)^(0+128)+1),f
 15540  0C80  0020               	movlb	0	; select bank0
 15541  0C81  0845               	movf	LED_setBrightnessRange@range+1,w
 15542  0C82  3A80               	xorlw	128
 15543  0C83  0021               	movlb	1	; select bank1
 15544  0C84  00A3               	movwf	(??_LED_setBrightnessRange+3)^(0+128)
 15545  0C85  3080               	movlw	128
 15546  0C86  0223               	subwf	(??_LED_setBrightnessRange+3)^(0+128),w
 15547  0C87  1D03               	skipz
 15548  0C88  2C8C               	goto	u7115
 15549  0C89  3001               	movlw	1
 15550  0C8A  0020               	movlb	0	; select bank0
 15551  0C8B  0244               	subwf	LED_setBrightnessRange@range,w
 15552  0C8C                     u7115:	
 15553  0C8C  1C03               	btfss	3,0
 15554  0C8D  2C90               	goto	u7110
 15555  0C8E  3001               	movlw	1
 15556  0C8F  2C91               	goto	u7120
 15557  0C90                     u7110:	
 15558  0C90  3000               	movlw	0
 15559  0C91                     u7120:	
 15560  0C91  0021               	movlb	1	; select bank1
 15561  0C92  00A4               	movwf	(??_LED_setBrightnessRange+4)^(0+128)
 15562  0C93  01A5               	clrf	((??_LED_setBrightnessRange+4)^(0+128)+1)
 15563  0C94  35A4               	lslf	(??_LED_setBrightnessRange+4)^(0+128),f
 15564  0C95  0DA5               	rlf	((??_LED_setBrightnessRange+4)^(0+128)+1),f
 15565  0C96  0020               	movlb	0	; select bank0
 15566  0C97  0845               	movf	LED_setBrightnessRange@range+1,w
 15567  0C98  3A80               	xorlw	128
 15568  0C99  0021               	movlb	1	; select bank1
 15569  0C9A  00A6               	movwf	(??_LED_setBrightnessRange+6)^(0+128)
 15570  0C9B  3080               	movlw	128
 15571  0C9C  0226               	subwf	(??_LED_setBrightnessRange+6)^(0+128),w
 15572  0C9D  1D03               	skipz
 15573  0C9E  2CA2               	goto	u7135
 15574  0C9F  3001               	movlw	1
 15575  0CA0  0020               	movlb	0	; select bank0
 15576  0CA1  0244               	subwf	LED_setBrightnessRange@range,w
 15577  0CA2                     u7135:	
 15578  0CA2  1C03               	btfss	3,0
 15579  0CA3  2CA6               	goto	u7130
 15580  0CA4  3001               	movlw	1
 15581  0CA5  2CA7               	goto	u7140
 15582  0CA6                     u7130:	
 15583  0CA6  3000               	movlw	0
 15584  0CA7                     u7140:	
 15585  0CA7  0021               	movlb	1	; select bank1
 15586  0CA8  00A7               	movwf	(??_LED_setBrightnessRange+7)^(0+128)
 15587  0CA9  01A8               	clrf	((??_LED_setBrightnessRange+7)^(0+128)+1)
 15588  0CAA  0824               	movf	(??_LED_setBrightnessRange+4)^(0+128),w
 15589  0CAB  0427               	iorwf	(??_LED_setBrightnessRange+7)^(0+128),w
 15590  0CAC  00A9               	movwf	(??_LED_setBrightnessRange+9)^(0+128)
 15591  0CAD  0825               	movf	(??_LED_setBrightnessRange+5)^(0+128),w
 15592  0CAE  0428               	iorwf	(??_LED_setBrightnessRange+8)^(0+128),w
 15593  0CAF  00AA               	movwf	(??_LED_setBrightnessRange+10)^(0+128)
 15594  0CB0  0821               	movf	(??_LED_setBrightnessRange+1)^(0+128),w
 15595  0CB1  0429               	iorwf	(??_LED_setBrightnessRange+9)^(0+128),w
 15596  0CB2  00AB               	movwf	(??_LED_setBrightnessRange+11)^(0+128)
 15597  0CB3  0822               	movf	(??_LED_setBrightnessRange+2)^(0+128),w
 15598  0CB4  042A               	iorwf	(??_LED_setBrightnessRange+10)^(0+128),w
 15599  0CB5  00AC               	movwf	(??_LED_setBrightnessRange+12)^(0+128)
 15600  0CB6  082B               	movf	(??_LED_setBrightnessRange+11)^(0+128),w
 15601  0CB7  00AD               	movwf	(??_LED_setBrightnessRange+13)^(0+128)
 15602  0CB8  082C               	movf	(??_LED_setBrightnessRange+12)^(0+128),w
 15603  0CB9  00AE               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+1)
 15604  0CBA  3000               	movlw	0
 15605  0CBB  1BAE               	btfsc	((??_LED_setBrightnessRange+13)^(0+128)+1),7
 15606  0CBC  30FF               	movlw	255
 15607  0CBD  00AF               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+2)
 15608  0CBE  00B0               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+3)
 15609  0CBF  082D               	movf	(??_LED_setBrightnessRange+13)^(0+128),w
 15610  0CC0  0020               	movlb	0	; select bank0
 15611  0CC1  04C8               	iorwf	LED_setBrightnessRange@LED_configReg,f
 15612  0CC2  0021               	movlb	1	; select bank1
 15613  0CC3  082E               	movf	(??_LED_setBrightnessRange+14)^(0+128),w
 15614  0CC4  0020               	movlb	0	; select bank0
 15615  0CC5  04C9               	iorwf	LED_setBrightnessRange@LED_configReg+1,f
 15616  0CC6  0021               	movlb	1	; select bank1
 15617  0CC7  082F               	movf	(??_LED_setBrightnessRange+15)^(0+128),w
 15618  0CC8  0020               	movlb	0	; select bank0
 15619  0CC9  04CA               	iorwf	LED_setBrightnessRange@LED_configReg+2,f
 15620  0CCA  0021               	movlb	1	; select bank1
 15621  0CCB  0830               	movf	(??_LED_setBrightnessRange+16)^(0+128),w
 15622  0CCC  0020               	movlb	0	; select bank0
 15623  0CCD  04CB               	iorwf	LED_setBrightnessRange@LED_configReg+3,f
 15624                           
 15625                           ;LEDcomm.c: 81: send_2length_2bytes_IK((unsigned int)((LED_configReg>>16) & 0xFFFF),(uns
      +                          igned int)LED_configReg, 3, topOrBottom);
 15626  0CCE  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15627  0CCF  0021               	movlb	1	; select bank1
 15628  0CD0  00A0               	movwf	??_LED_setBrightnessRange^(0+128)
 15629  0CD1  0020               	movlb	0	; select bank0
 15630  0CD2  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15631  0CD3  0021               	movlb	1	; select bank1
 15632  0CD4  00A1               	movwf	(??_LED_setBrightnessRange^(0+128)+1)
 15633  0CD5  0020               	movlb	0	; select bank0
 15634  0CD6  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 15635  0CD7  0021               	movlb	1	; select bank1
 15636  0CD8  00A2               	movwf	(??_LED_setBrightnessRange^(0+128)+2)
 15637  0CD9  0020               	movlb	0	; select bank0
 15638  0CDA  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 15639  0CDB  0021               	movlb	1	; select bank1
 15640  0CDC  00A3               	movwf	(??_LED_setBrightnessRange^(0+128)+3)
 15641  0CDD  3010               	movlw	16
 15642  0CDE  00A4               	movwf	(??_LED_setBrightnessRange+4)^(0+128)
 15643  0CDF                     u7155:	
 15644  0CDF  37A3               	asrf	(??_LED_setBrightnessRange^(0+128)+3),f
 15645  0CE0  0CA2               	rrf	(??_LED_setBrightnessRange^(0+128)+2),f
 15646  0CE1  0CA1               	rrf	(??_LED_setBrightnessRange^(0+128)+1),f
 15647  0CE2  0CA0               	rrf	??_LED_setBrightnessRange^(0+128),f
 15648  0CE3  0BA4               	decfsz	(??_LED_setBrightnessRange+4)^(0+128),f
 15649  0CE4  2CDF               	goto	u7155
 15650  0CE5  0821               	movf	(??_LED_setBrightnessRange+1)^(0+128),w
 15651  0CE6  0020               	movlb	0	; select bank0
 15652  0CE7  00BD               	movwf	send_2length_2bytes_IK@data1+1
 15653  0CE8  0021               	movlb	1	; select bank1
 15654  0CE9  0820               	movf	??_LED_setBrightnessRange^(0+128),w
 15655  0CEA  0020               	movlb	0	; select bank0
 15656  0CEB  00BC               	movwf	send_2length_2bytes_IK@data1
 15657  0CEC  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15658  0CED  00BF               	movwf	send_2length_2bytes_IK@data2+1
 15659  0CEE  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15660  0CEF  00BE               	movwf	send_2length_2bytes_IK@data2
 15661  0CF0  3003               	movlw	3
 15662  0CF1  0021               	movlb	1	; select bank1
 15663  0CF2  00A5               	movwf	(??_LED_setBrightnessRange+5)^(0+128)
 15664  0CF3  0825               	movf	(??_LED_setBrightnessRange+5)^(0+128),w
 15665  0CF4  0020               	movlb	0	; select bank0
 15666  0CF5  00C0               	movwf	send_2length_2bytes_IK@latch_start
 15667  0CF6  0847               	movf	LED_setBrightnessRange@topOrBottom+1,w
 15668  0CF7  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 15669  0CF8  0846               	movf	LED_setBrightnessRange@topOrBottom,w
 15670  0CF9  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 15671  0CFA  31A5  25F0  318C   	fcall	_send_2length_2bytes_IK
 15672                           
 15673                           ;LEDcomm.c: 84: if (topOrBottom == 1)
 15674  0CFD  0020               	movlb	0	; select bank0
 15675  0CFE  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 15676  0CFF  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 15677  0D00  1D03               	btfss	3,2
 15678  0D01  2D12               	goto	l7448
 15679                           
 15680                           ;LEDcomm.c: 85: LED_configReg_top = LED_configReg;
 15681  0D02  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 15682  0D03  0022               	movlb	2	; select bank2
 15683  0D04  00CD               	movwf	(_LED_configReg_top+3)^(0+256)
 15684  0D05  0020               	movlb	0	; select bank0
 15685  0D06  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 15686  0D07  0022               	movlb	2	; select bank2
 15687  0D08  00CC               	movwf	(_LED_configReg_top+2)^(0+256)
 15688  0D09  0020               	movlb	0	; select bank0
 15689  0D0A  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15690  0D0B  0022               	movlb	2	; select bank2
 15691  0D0C  00CB               	movwf	(_LED_configReg_top+1)^(0+256)
 15692  0D0D  0020               	movlb	0	; select bank0
 15693  0D0E  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15694  0D0F  0022               	movlb	2	; select bank2
 15695  0D10  00CA               	movwf	_LED_configReg_top^(0+256)
 15696  0D11  0008               	return
 15697  0D12                     l7448:	
 15698                           
 15699                           ;LEDcomm.c: 86: else
 15700                           ;LEDcomm.c: 87: LED_configReg_bot = LED_configReg;
 15701  0D12  0020               	movlb	0	; select bank0
 15702  0D13  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 15703  0D14  0022               	movlb	2	; select bank2
 15704  0D15  00C9               	movwf	(_LED_configReg_bot+3)^(0+256)
 15705  0D16  0020               	movlb	0	; select bank0
 15706  0D17  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 15707  0D18  0022               	movlb	2	; select bank2
 15708  0D19  00C8               	movwf	(_LED_configReg_bot+2)^(0+256)
 15709  0D1A  0020               	movlb	0	; select bank0
 15710  0D1B  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15711  0D1C  0022               	movlb	2	; select bank2
 15712  0D1D  00C7               	movwf	(_LED_configReg_bot+1)^(0+256)
 15713  0D1E  0020               	movlb	0	; select bank0
 15714  0D1F  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15715  0D20  0022               	movlb	2	; select bank2
 15716  0D21  00C6               	movwf	_LED_configReg_bot^(0+256)
 15717  0D22  0008               	return
 15718  0D23                     __end_of_LED_setBrightnessRange:	
 15719                           
 15720                           	psect	text49
 15721  191E                     __ptext49:	
 15722 ;; *************** function _LED_readConfig *****************
 15723 ;; Defined at:
 15724 ;;		line 123 in file "LEDcomm.c"
 15725 ;; Parameters:    Size  Location     Type
 15726 ;;  topOrBottom     2   35[BANK1 ] int 
 15727 ;; Auto vars:     Size  Location     Type
 15728 ;;		None
 15729 ;; Return value:  Size  Location     Type
 15730 ;;                  4   35[BANK1 ] long 
 15731 ;; Registers used:
 15732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15733 ;; Tracked objects:
 15734 ;;		On entry : 0/0
 15735 ;;		On exit  : 0/0
 15736 ;;		Unchanged: 0/0
 15737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15738 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15741 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15742 ;;Total ram usage:        5 bytes
 15743 ;; Hardware stack levels used:    1
 15744 ;; Hardware stack levels required when called:   10
 15745 ;; This function calls:
 15746 ;;		_LED_getData
 15747 ;;		_send_2length_2bytes_IK
 15748 ;; This function is called by:
 15749 ;;		_LED_testComm
 15750 ;; This function uses a non-reentrant model
 15751 ;;
 15752                           
 15753                           
 15754                           ;psect for function _LED_readConfig
 15755  191E                     _LED_readConfig:	
 15756                           
 15757                           ;incstack = 0
 15758                           ; Regs used in _LED_readConfig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15759                           ;LEDcomm.c: 124: do { LATCbits.LATC1 = 1; } while(0);
 15760  191E  0022               	movlb	2	; select bank2
 15761  191F  148E               	bsf	14,1	;volatile
 15762                           
 15763                           ;LEDcomm.c: 125: send_2length_2bytes_IK(0,0,5,topOrBottom);
 15764  1920  3000               	movlw	0
 15765  1921  0020               	movlb	0	; select bank0
 15766  1922  00BC               	movwf	send_2length_2bytes_IK@data1
 15767  1923  00BD               	movwf	send_2length_2bytes_IK@data1+1
 15768  1924  3000               	movlw	0
 15769  1925  00BE               	movwf	send_2length_2bytes_IK@data2
 15770  1926  00BF               	movwf	send_2length_2bytes_IK@data2+1
 15771  1927  3005               	movlw	5
 15772  1928  00CD               	movwf	??_LED_readConfig
 15773  1929  084D               	movf	??_LED_readConfig,w
 15774  192A  00C0               	movwf	send_2length_2bytes_IK@latch_start
 15775  192B  0021               	movlb	1	; select bank1
 15776  192C  0844               	movf	(LED_readConfig@topOrBottom+1)^(0+128),w
 15777  192D  0020               	movlb	0	; select bank0
 15778  192E  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 15779  192F  0021               	movlb	1	; select bank1
 15780  1930  0843               	movf	LED_readConfig@topOrBottom^(0+128),w
 15781  1931  0020               	movlb	0	; select bank0
 15782  1932  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 15783  1933  31A5  25F0  3199   	fcall	_send_2length_2bytes_IK
 15784                           
 15785                           ;LEDcomm.c: 126: return LED_getData();
 15786  1936  3194  2448         	fcall	_LED_getData
 15787  1938  0020               	movlb	0	; select bank0
 15788  1939  084C               	movf	?_LED_getData+3,w
 15789  193A  0021               	movlb	1	; select bank1
 15790  193B  00C6               	movwf	(?_LED_readConfig+3)^(0+128)
 15791  193C  0020               	movlb	0	; select bank0
 15792  193D  084B               	movf	?_LED_getData+2,w
 15793  193E  0021               	movlb	1	; select bank1
 15794  193F  00C5               	movwf	(?_LED_readConfig+2)^(0+128)
 15795  1940  0020               	movlb	0	; select bank0
 15796  1941  084A               	movf	?_LED_getData+1,w
 15797  1942  0021               	movlb	1	; select bank1
 15798  1943  00C4               	movwf	(?_LED_readConfig+1)^(0+128)
 15799  1944  0020               	movlb	0	; select bank0
 15800  1945  0849               	movf	?_LED_getData,w
 15801  1946  0021               	movlb	1	; select bank1
 15802  1947  00C3               	movwf	?_LED_readConfig^(0+128)
 15803  1948  0008               	return
 15804  1949                     __end_of_LED_readConfig:	
 15805                           
 15806                           	psect	text50
 15807  1448                     __ptext50:	
 15808 ;; *************** function _LED_getData *****************
 15809 ;; Defined at:
 15810 ;;		line 129 in file "LEDcomm.c"
 15811 ;; Parameters:    Size  Location     Type
 15812 ;;		None
 15813 ;; Auto vars:     Size  Location     Type
 15814 ;;  j               2   33[BANK1 ] int 
 15815 ;;  readData        4   29[BANK1 ] long 
 15816 ;; Return value:  Size  Location     Type
 15817 ;;                  4   41[BANK0 ] long 
 15818 ;; Registers used:
 15819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15820 ;; Tracked objects:
 15821 ;;		On entry : 0/0
 15822 ;;		On exit  : 0/0
 15823 ;;		Unchanged: 0/0
 15824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15825 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15826 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15827 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15828 ;;      Totals:         0       4      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15829 ;;Total ram usage:       16 bytes
 15830 ;; Hardware stack levels used:    1
 15831 ;; Hardware stack levels required when called:    9
 15832 ;; This function calls:
 15833 ;;		_printf
 15834 ;; This function is called by:
 15835 ;;		_LED_readConfig
 15836 ;; This function uses a non-reentrant model
 15837 ;;
 15838                           
 15839                           
 15840                           ;psect for function _LED_getData
 15841  1448                     _LED_getData:	
 15842                           
 15843                           ;LEDcomm.c: 131: long readData = 0;
 15844                           
 15845                           ;incstack = 0
 15846                           ; Regs used in _LED_getData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15847  1448  3000               	movlw	0
 15848  1449  0021               	movlb	1	; select bank1
 15849  144A  00C0               	movwf	(LED_getData@readData+3)^(0+128)
 15850  144B  3000               	movlw	0
 15851  144C  00BF               	movwf	(LED_getData@readData+2)^(0+128)
 15852  144D  3000               	movlw	0
 15853  144E  00BE               	movwf	(LED_getData@readData+1)^(0+128)
 15854  144F  3000               	movlw	0
 15855  1450  00BD               	movwf	LED_getData@readData^(0+128)
 15856                           
 15857                           ;LEDcomm.c: 132: do { LATBbits.LATB4 = 0; } while(0);
 15858  1451  0022               	movlb	2	; select bank2
 15859  1452  120D               	bcf	13,4	;volatile
 15860                           
 15861                           ;LEDcomm.c: 134: for(int j = 23; j>=0; j--){
 15862  1453  3017               	movlw	23
 15863  1454  0021               	movlb	1	; select bank1
 15864  1455  00C1               	movwf	LED_getData@j^(0+128)
 15865  1456  3000               	movlw	0
 15866  1457  00C2               	movwf	(LED_getData@j^(0+128)+1)
 15867  1458  1BC2               	btfsc	(LED_getData@j+1)^(0+128),7
 15868  1459  2C88               	goto	l303
 15869  145A                     l299:	
 15870                           ;LEDcomm.c: 135: do { LATAbits.LATA2 = 1; } while(0);
 15871                           
 15872  145A  0022               	movlb	2	; select bank2
 15873  145B  150C               	bsf	12,2	;volatile
 15874                           
 15875                           ;LEDcomm.c: 136: readData |= (PORTCbits.RC6 << j);
 15876  145C  0020               	movlb	0	; select bank0
 15877  145D  0E0E               	swapf	14,w	;volatile
 15878  145E  0C89               	rrf	9,f
 15879  145F  0C89               	rrf	9,f
 15880  1460  3901               	andlw	1
 15881  1461  0021               	movlb	1	; select bank1
 15882  1462  00B7               	movwf	??_LED_getData^(0+128)
 15883  1463  01B8               	clrf	(??_LED_getData^(0+128)+1)
 15884  1464  0A41               	incf	LED_getData@j^(0+128),w
 15885  1465  2C68               	goto	u7034
 15886  1466                     u7035:	
 15887  1466  35B7               	lslf	??_LED_getData^(0+128),f
 15888  1467  0DB8               	rlf	(??_LED_getData^(0+128)+1),f
 15889  1468                     u7034:	
 15890  1468  0B89               	decfsz	9,f
 15891  1469  2C66               	goto	u7035
 15892  146A  0837               	movf	??_LED_getData^(0+128),w
 15893  146B  00B9               	movwf	(??_LED_getData+2)^(0+128)
 15894  146C  0838               	movf	(??_LED_getData+1)^(0+128),w
 15895  146D  00BA               	movwf	((??_LED_getData+2)^(0+128)+1)
 15896  146E  3000               	movlw	0
 15897  146F  1BBA               	btfsc	((??_LED_getData+2)^(0+128)+1),7
 15898  1470  30FF               	movlw	255
 15899  1471  00BB               	movwf	((??_LED_getData+2)^(0+128)+2)
 15900  1472  00BC               	movwf	((??_LED_getData+2)^(0+128)+3)
 15901  1473  0839               	movf	(??_LED_getData+2)^(0+128),w
 15902  1474  04BD               	iorwf	LED_getData@readData^(0+128),f
 15903  1475  083A               	movf	(??_LED_getData+3)^(0+128),w
 15904  1476  04BE               	iorwf	(LED_getData@readData+1)^(0+128),f
 15905  1477  083B               	movf	(??_LED_getData+4)^(0+128),w
 15906  1478  04BF               	iorwf	(LED_getData@readData+2)^(0+128),f
 15907  1479  083C               	movf	(??_LED_getData+5)^(0+128),w
 15908  147A  04C0               	iorwf	(LED_getData@readData+3)^(0+128),f
 15909                           
 15910                           ;LEDcomm.c: 138: do { LATAbits.LATA2 = 0; } while(0);
 15911  147B  0022               	movlb	2	; select bank2
 15912  147C  110C               	bcf	12,2	;volatile
 15913                           
 15914                           ;LEDcomm.c: 139: _delay((unsigned long)((100)*(1000000/4000000.0)));
 15915  147D  3008               	movlw	8
 15916  147E                     u8847:	
 15917  147E  0B89               	decfsz	9,f
 15918  147F  2C7E               	goto	u8847
 15919  1480  0000               	nop
 15920  1481  30FF               	movlw	255
 15921  1482  0021               	movlb	1	; select bank1
 15922  1483  07C1               	addwf	LED_getData@j^(0+128),f
 15923  1484  30FF               	movlw	255
 15924  1485  3DC2               	addwfc	(LED_getData@j+1)^(0+128),f
 15925  1486  1FC2               	btfss	(LED_getData@j+1)^(0+128),7
 15926  1487  2C5A               	goto	l299
 15927  1488                     l303:	
 15928                           ;LEDcomm.c: 141: }
 15929                           ;LEDcomm.c: 143: do { LATAbits.LATA2 = 0; } while(0);
 15930                           
 15931  1488  0022               	movlb	2	; select bank2
 15932  1489  110C               	bcf	12,2	;volatile
 15933                           
 15934                           ;LEDcomm.c: 144: printf("read data: %lu\n", readData);
 15935  148A  3029               	movlw	low (STR_3| (0+32768))
 15936  148B  0021               	movlb	1	; select bank1
 15937  148C  00A0               	movwf	printf@f^(0+128)
 15938  148D  30A9               	movlw	high (STR_3| (0+32768))
 15939  148E  00A1               	movwf	(printf@f^(0+128)+1)
 15940  148F  0840               	movf	(LED_getData@readData+3)^(0+128),w
 15941  1490  00A5               	movwf	((?_printf+3)^(0+128)+2)
 15942  1491  083F               	movf	(LED_getData@readData+2)^(0+128),w
 15943  1492  00A4               	movwf	((?_printf+2)^(0+128)+2)
 15944  1493  083E               	movf	(LED_getData@readData+1)^(0+128),w
 15945  1494  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15946  1495  083D               	movf	LED_getData@readData^(0+128),w
 15947  1496  00A2               	movwf	(?_printf^(0+128)+2)
 15948  1497  3186  264A         	fcall	_printf
 15949                           
 15950                           ;LEDcomm.c: 145: return readData;
 15951  1499  0021               	movlb	1	; select bank1
 15952  149A  0840               	movf	(LED_getData@readData+3)^(0+128),w
 15953  149B  0020               	movlb	0	; select bank0
 15954  149C  00CC               	movwf	?_LED_getData+3
 15955  149D  0021               	movlb	1	; select bank1
 15956  149E  083F               	movf	(LED_getData@readData+2)^(0+128),w
 15957  149F  0020               	movlb	0	; select bank0
 15958  14A0  00CB               	movwf	?_LED_getData+2
 15959  14A1  0021               	movlb	1	; select bank1
 15960  14A2  083E               	movf	(LED_getData@readData+1)^(0+128),w
 15961  14A3  0020               	movlb	0	; select bank0
 15962  14A4  00CA               	movwf	?_LED_getData+1
 15963  14A5  0021               	movlb	1	; select bank1
 15964  14A6  083D               	movf	LED_getData@readData^(0+128),w
 15965  14A7  0020               	movlb	0	; select bank0
 15966  14A8  00C9               	movwf	?_LED_getData
 15967  14A9  0008               	return
 15968  14AA                     __end_of_LED_getData:	
 15969                           
 15970                           	psect	text51
 15971  0E04                     __ptext51:	
 15972 ;; *************** function _doRelMove *****************
 15973 ;; Defined at:
 15974 ;;		line 341 in file "main.c"
 15975 ;; Parameters:    Size  Location     Type
 15976 ;;		None
 15977 ;; Auto vars:     Size  Location     Type
 15978 ;;  j               2   47[BANK1 ] int 
 15979 ;; Return value:  Size  Location     Type
 15980 ;;                  1    wreg      void 
 15981 ;; Registers used:
 15982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15983 ;; Tracked objects:
 15984 ;;		On entry : 0/0
 15985 ;;		On exit  : 0/0
 15986 ;;		Unchanged: 0/0
 15987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15989 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15990 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15991 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15992 ;;Total ram usage:        9 bytes
 15993 ;; Hardware stack levels used:    1
 15994 ;; Hardware stack levels required when called:   16
 15995 ;; This function calls:
 15996 ;;		_doMove
 15997 ;;		_printf
 15998 ;; This function is called by:
 15999 ;;		_main
 16000 ;; This function uses a non-reentrant model
 16001 ;;
 16002                           
 16003                           
 16004                           ;psect for function _doRelMove
 16005  0E04                     _doRelMove:	
 16006                           
 16007                           ;main.c: 342: printf("doRelMove\n");
 16008                           
 16009                           ;incstack = 0
 16010 ;; hardware stack exceeded
 16011                           ; Regs used in _doRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16012  0E04  3099               	movlw	low (STR_12| (0+32768))
 16013  0E05  0021               	movlb	1	; select bank1
 16014  0E06  00A0               	movwf	printf@f^(0+128)
 16015  0E07  30A9               	movlw	high (STR_12| (0+32768))
 16016  0E08  00A1               	movwf	(printf@f^(0+128)+1)
 16017  0E09  3186  264A  318E   	fcall	_printf
 16018                           
 16019                           ;main.c: 343: if(remainingSteps == 0){
 16020  0E0C  0021               	movlb	1	; select bank1
 16021  0E0D  0866               	movf	_remainingSteps^(0+128),w
 16022  0E0E  0467               	iorwf	(_remainingSteps+1)^(0+128),w
 16023  0E0F  1D03               	btfss	3,2
 16024  0E10  2E2B               	goto	l8298
 16025                           
 16026                           ;main.c: 344: printf("rel: all there\n");
 16027  0E11  3009               	movlw	low (STR_13| (0+32768))
 16028  0E12  00A0               	movwf	printf@f^(0+128)
 16029  0E13  30A9               	movlw	high (STR_13| (0+32768))
 16030  0E14  00A1               	movwf	(printf@f^(0+128)+1)
 16031  0E15  3186  264A         	fcall	_printf
 16032                           
 16033                           ;main.c: 345: motionType = NONE;
 16034  0E17  0020               	movlb	0	; select bank0
 16035  0E18  01D5               	clrf	_motionType
 16036                           
 16037                           ;main.c: 346: moveVector_ups = 0;
 16038  0E19  3000               	movlw	0
 16039  0E1A  0021               	movlb	1	; select bank1
 16040  0E1B  00E3               	movwf	(_moveVector_ups+3)^(0+128)
 16041  0E1C  3000               	movlw	0
 16042  0E1D  00E2               	movwf	(_moveVector_ups+2)^(0+128)
 16043  0E1E  3000               	movlw	0
 16044  0E1F  00E1               	movwf	(_moveVector_ups+1)^(0+128)
 16045  0E20  3000               	movlw	0
 16046  0E21  00E0               	movwf	_moveVector_ups^(0+128)
 16047                           
 16048                           ;main.c: 347: moveVector_downs = 0;
 16049  0E22  3000               	movlw	0
 16050  0E23  00DF               	movwf	(_moveVector_downs+3)^(0+128)
 16051  0E24  3000               	movlw	0
 16052  0E25  00DE               	movwf	(_moveVector_downs+2)^(0+128)
 16053  0E26  3000               	movlw	0
 16054  0E27  00DD               	movwf	(_moveVector_downs+1)^(0+128)
 16055  0E28  3000               	movlw	0
 16056  0E29  00DC               	movwf	_moveVector_downs^(0+128)
 16057                           
 16058                           ;main.c: 349: }
 16059                           
 16060                           ;main.c: 348: return;
 16061  0E2A  0008               	return
 16062  0E2B                     l8298:	
 16063                           
 16064                           ;main.c: 350: else{
 16065                           ;main.c: 351: int j;
 16066                           ;main.c: 352: if (remainingSteps > 0){
 16067  0E2B  0867               	movf	(_remainingSteps+1)^(0+128),w
 16068  0E2C  3A80               	xorlw	128
 16069  0E2D  00C8               	movwf	??_doRelMove^(0+128)
 16070  0E2E  3080               	movlw	128
 16071  0E2F  0248               	subwf	??_doRelMove^(0+128),w
 16072  0E30  1D03               	skipz
 16073  0E31  2E34               	goto	u8165
 16074  0E32  3001               	movlw	1
 16075  0E33  0266               	subwf	_remainingSteps^(0+128),w
 16076  0E34                     u8165:	
 16077  0E34  1C03               	skipc
 16078  0E35  2E8E               	goto	l8318
 16079                           
 16080                           ;main.c: 353: moveVector_ups = 0;
 16081  0E36  3000               	movlw	0
 16082  0E37  0021               	movlb	1	; select bank1
 16083  0E38  00E3               	movwf	(_moveVector_ups+3)^(0+128)
 16084  0E39  3000               	movlw	0
 16085  0E3A  00E2               	movwf	(_moveVector_ups+2)^(0+128)
 16086  0E3B  3000               	movlw	0
 16087  0E3C  00E1               	movwf	(_moveVector_ups+1)^(0+128)
 16088  0E3D  3000               	movlw	0
 16089  0E3E  00E0               	movwf	_moveVector_ups^(0+128)
 16090                           
 16091                           ;main.c: 354: moveVector_downs = activeMask;
 16092  0E3F  085B               	movf	(_activeMask+3)^(0+128),w
 16093  0E40  00DF               	movwf	(_moveVector_downs+3)^(0+128)
 16094  0E41  085A               	movf	(_activeMask+2)^(0+128),w
 16095  0E42  00DE               	movwf	(_moveVector_downs+2)^(0+128)
 16096  0E43  0859               	movf	(_activeMask+1)^(0+128),w
 16097  0E44  00DD               	movwf	(_moveVector_downs+1)^(0+128)
 16098  0E45  0858               	movf	_activeMask^(0+128),w
 16099  0E46  00DC               	movwf	_moveVector_downs^(0+128)
 16100                           
 16101                           ;main.c: 356: doMove();
 16102  0E47  3189  2100  318E   	fcall	_doMove
 16103                           
 16104                           ;main.c: 357: remainingSteps--;
 16105  0E4A  30FF               	movlw	255
 16106  0E4B  0021               	movlb	1	; select bank1
 16107  0E4C  07E6               	addwf	_remainingSteps^(0+128),f
 16108  0E4D  30FF               	movlw	255
 16109  0E4E  3DE7               	addwfc	(_remainingSteps+1)^(0+128),f
 16110                           
 16111                           ;main.c: 360: for(j = 0; j<24; j++)
 16112  0E4F  01CF               	clrf	doRelMove@j^(0+128)
 16113  0E50  01D0               	clrf	(doRelMove@j+1)^(0+128)
 16114  0E51                     L29:	
 16115  0E51  0850               	movf	(doRelMove@j+1)^(0+128),w
 16116  0E52  3A80               	xorlw	128
 16117  0E53  00C8               	movwf	??_doRelMove^(0+128)
 16118  0E54  3080               	movlw	128
 16119  0E55  0248               	subwf	??_doRelMove^(0+128),w
 16120  0E56  1D03               	skipz
 16121  0E57  2E5A               	goto	u8175
 16122  0E58  3018               	movlw	24
 16123  0E59  024F               	subwf	doRelMove@j^(0+128),w
 16124  0E5A                     u8175:	
 16125  0E5A  1803               	btfsc	3,0
 16126  0E5B  0008               	return
 16127                           
 16128                           ;main.c: 361: currentPositions_steps[j] += (activeMask & (1<<j) > 0);
 16129  0E5C  3001               	movlw	1
 16130  0E5D  0021               	movlb	1	; select bank1
 16131  0E5E  00C8               	movwf	??_doRelMove^(0+128)
 16132  0E5F  3000               	movlw	0
 16133  0E60  00C9               	movwf	(??_doRelMove^(0+128)+1)
 16134  0E61  0A4F               	incf	doRelMove@j^(0+128),w
 16135  0E62  2E65               	goto	u8184
 16136  0E63                     u8185:	
 16137  0E63  35C8               	lslf	??_doRelMove^(0+128),f
 16138  0E64  0DC9               	rlf	(??_doRelMove^(0+128)+1),f
 16139  0E65                     u8184:	
 16140  0E65  0B89               	decfsz	9,f
 16141  0E66  2E63               	goto	u8185
 16142  0E67  0849               	movf	(??_doRelMove+1)^(0+128),w
 16143  0E68  3A80               	xorlw	128
 16144  0E69  00CA               	movwf	(??_doRelMove+2)^(0+128)
 16145  0E6A  3080               	movlw	128
 16146  0E6B  024A               	subwf	(??_doRelMove+2)^(0+128),w
 16147  0E6C  1D03               	skipz
 16148  0E6D  2E70               	goto	u8195
 16149  0E6E  3001               	movlw	1
 16150  0E6F  0248               	subwf	??_doRelMove^(0+128),w
 16151  0E70                     u8195:	
 16152  0E70  1C03               	btfss	3,0
 16153  0E71  2E74               	goto	u8190
 16154  0E72  3001               	movlw	1
 16155  0E73  2E75               	goto	u8200
 16156  0E74                     u8190:	
 16157  0E74  3000               	movlw	0
 16158  0E75                     u8200:	
 16159  0E75  0021               	movlb	1	; select bank1
 16160  0E76  00CB               	movwf	(??_doRelMove+3)^(0+128)
 16161  0E77  01CC               	clrf	((??_doRelMove+3)^(0+128)+1)
 16162  0E78  0858               	movf	_activeMask^(0+128),w
 16163  0E79  054B               	andwf	(??_doRelMove+3)^(0+128),w
 16164  0E7A  00CD               	movwf	(??_doRelMove+5)^(0+128)
 16165  0E7B  0859               	movf	(_activeMask+1)^(0+128),w
 16166  0E7C  054C               	andwf	(??_doRelMove+4)^(0+128),w
 16167  0E7D  00CE               	movwf	(??_doRelMove+6)^(0+128)
 16168  0E7E  354F               	lslf	doRelMove@j^(0+128),w
 16169  0E7F  3E20               	addlw	(low (_currentPositions_steps| (0+512)))& (0+255)
 16170  0E80  0086               	movwf	6
 16171  0E81  3002               	movlw	2	; select bank4/5
 16172  0E82  0087               	movwf	7
 16173  0E83  084D               	movf	(??_doRelMove+5)^(0+128),w
 16174  0E84  0781               	addwf	1,f
 16175  0E85  3141               	addfsr 1,1
 16176  0E86  084E               	movf	(??_doRelMove+6)^(0+128),w
 16177  0E87  3D81               	addwfc	1,f
 16178  0E88  317F               	addfsr 1,-1
 16179  0E89  3001               	movlw	1
 16180  0E8A  07CF               	addwf	doRelMove@j^(0+128),f
 16181  0E8B  3000               	movlw	0
 16182  0E8C  3DD0               	addwfc	(doRelMove@j+1)^(0+128),f
 16183  0E8D  2E51               	goto	L29
 16184  0E8E                     l8318:	
 16185                           ;main.c: 363: }
 16186                           
 16187                           
 16188                           ;main.c: 364: else{
 16189                           ;main.c: 365: moveVector_ups = activeMask;
 16190  0E8E  0021               	movlb	1	; select bank1
 16191  0E8F  085B               	movf	(_activeMask+3)^(0+128),w
 16192  0E90  00E3               	movwf	(_moveVector_ups+3)^(0+128)
 16193  0E91  085A               	movf	(_activeMask+2)^(0+128),w
 16194  0E92  00E2               	movwf	(_moveVector_ups+2)^(0+128)
 16195  0E93  0859               	movf	(_activeMask+1)^(0+128),w
 16196  0E94  00E1               	movwf	(_moveVector_ups+1)^(0+128)
 16197  0E95  0858               	movf	_activeMask^(0+128),w
 16198  0E96  00E0               	movwf	_moveVector_ups^(0+128)
 16199                           
 16200                           ;main.c: 366: moveVector_downs = 0;
 16201  0E97  3000               	movlw	0
 16202  0E98  00DF               	movwf	(_moveVector_downs+3)^(0+128)
 16203  0E99  3000               	movlw	0
 16204  0E9A  00DE               	movwf	(_moveVector_downs+2)^(0+128)
 16205  0E9B  3000               	movlw	0
 16206  0E9C  00DD               	movwf	(_moveVector_downs+1)^(0+128)
 16207  0E9D  3000               	movlw	0
 16208  0E9E  00DC               	movwf	_moveVector_downs^(0+128)
 16209                           
 16210                           ;main.c: 368: doMove();
 16211  0E9F  3189  2100  318E   	fcall	_doMove
 16212                           
 16213                           ;main.c: 369: remainingSteps++;
 16214  0EA2  3001               	movlw	1
 16215  0EA3  0021               	movlb	1	; select bank1
 16216  0EA4  07E6               	addwf	_remainingSteps^(0+128),f
 16217  0EA5  3000               	movlw	0
 16218  0EA6  3DE7               	addwfc	(_remainingSteps+1)^(0+128),f
 16219                           
 16220                           ;main.c: 370: for(j = 0; j<24; j++)
 16221  0EA7  01CF               	clrf	doRelMove@j^(0+128)
 16222  0EA8  01D0               	clrf	(doRelMove@j+1)^(0+128)
 16223  0EA9                     L30:	
 16224  0EA9  0850               	movf	(doRelMove@j+1)^(0+128),w
 16225  0EAA  3A80               	xorlw	128
 16226  0EAB  00C8               	movwf	??_doRelMove^(0+128)
 16227  0EAC  3080               	movlw	128
 16228  0EAD  0248               	subwf	??_doRelMove^(0+128),w
 16229  0EAE  1D03               	skipz
 16230  0EAF  2EB2               	goto	u8225
 16231  0EB0  3018               	movlw	24
 16232  0EB1  024F               	subwf	doRelMove@j^(0+128),w
 16233  0EB2                     u8225:	
 16234  0EB2  1803               	btfsc	3,0
 16235  0EB3  0008               	return
 16236                           
 16237                           ;main.c: 371: currentPositions_steps[j] -= (activeMask & (1<<j) > 0);
 16238  0EB4  3001               	movlw	1
 16239  0EB5  0021               	movlb	1	; select bank1
 16240  0EB6  00C8               	movwf	??_doRelMove^(0+128)
 16241  0EB7  3000               	movlw	0
 16242  0EB8  00C9               	movwf	(??_doRelMove^(0+128)+1)
 16243  0EB9  0A4F               	incf	doRelMove@j^(0+128),w
 16244  0EBA  2EBD               	goto	u8234
 16245  0EBB                     u8235:	
 16246  0EBB  35C8               	lslf	??_doRelMove^(0+128),f
 16247  0EBC  0DC9               	rlf	(??_doRelMove^(0+128)+1),f
 16248  0EBD                     u8234:	
 16249  0EBD  0B89               	decfsz	9,f
 16250  0EBE  2EBB               	goto	u8235
 16251  0EBF  0849               	movf	(??_doRelMove+1)^(0+128),w
 16252  0EC0  3A80               	xorlw	128
 16253  0EC1  00CA               	movwf	(??_doRelMove+2)^(0+128)
 16254  0EC2  3080               	movlw	128
 16255  0EC3  024A               	subwf	(??_doRelMove+2)^(0+128),w
 16256  0EC4  1D03               	skipz
 16257  0EC5  2EC8               	goto	u8245
 16258  0EC6  3001               	movlw	1
 16259  0EC7  0248               	subwf	??_doRelMove^(0+128),w
 16260  0EC8                     u8245:	
 16261  0EC8  1C03               	btfss	3,0
 16262  0EC9  2ECC               	goto	u8240
 16263  0ECA  3001               	movlw	1
 16264  0ECB  2ECD               	goto	u8250
 16265  0ECC                     u8240:	
 16266  0ECC  3000               	movlw	0
 16267  0ECD                     u8250:	
 16268  0ECD  0021               	movlb	1	; select bank1
 16269  0ECE  00CB               	movwf	(??_doRelMove+3)^(0+128)
 16270  0ECF  01CC               	clrf	((??_doRelMove+3)^(0+128)+1)
 16271  0ED0  0858               	movf	_activeMask^(0+128),w
 16272  0ED1  054B               	andwf	(??_doRelMove+3)^(0+128),w
 16273  0ED2  00CD               	movwf	(??_doRelMove+5)^(0+128)
 16274  0ED3  0859               	movf	(_activeMask+1)^(0+128),w
 16275  0ED4  054C               	andwf	(??_doRelMove+4)^(0+128),w
 16276  0ED5  00CE               	movwf	(??_doRelMove+6)^(0+128)
 16277  0ED6  354F               	lslf	doRelMove@j^(0+128),w
 16278  0ED7  3E20               	addlw	(low (_currentPositions_steps| (0+512)))& (0+255)
 16279  0ED8  0086               	movwf	6
 16280  0ED9  3002               	movlw	2	; select bank4/5
 16281  0EDA  0087               	movwf	7
 16282  0EDB  084D               	movf	(??_doRelMove+5)^(0+128),w
 16283  0EDC  0281               	subwf	1,f
 16284  0EDD  3141               	addfsr 1,1
 16285  0EDE  084E               	movf	(??_doRelMove+6)^(0+128),w
 16286  0EDF  3B81               	subwfb	1,f
 16287  0EE0  317F               	addfsr 1,-1
 16288  0EE1  3001               	movlw	1
 16289  0EE2  07CF               	addwf	doRelMove@j^(0+128),f
 16290  0EE3  3000               	movlw	0
 16291  0EE4  3DD0               	addwfc	(doRelMove@j+1)^(0+128),f
 16292  0EE5  2EA9               	goto	L30
 16293  0EE6                     __end_of_doRelMove:	
 16294                           
 16295                           	psect	text52
 16296  00AB                     __ptext52:	
 16297 ;; *************** function _doAbsMove *****************
 16298 ;; Defined at:
 16299 ;;		line 309 in file "main.c"
 16300 ;; Parameters:    Size  Location     Type
 16301 ;;		None
 16302 ;; Auto vars:     Size  Location     Type
 16303 ;;  i               2   44[BANK1 ] int 
 16304 ;;  i               2   46[BANK1 ] int 
 16305 ;;  i               2   42[BANK1 ] int 
 16306 ;;  allThere        2   40[BANK1 ] int 
 16307 ;; Return value:  Size  Location     Type
 16308 ;;                  1    wreg      void 
 16309 ;; Registers used:
 16310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16311 ;; Tracked objects:
 16312 ;;		On entry : 0/0
 16313 ;;		On exit  : 0/0
 16314 ;;		Unchanged: 0/0
 16315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16317 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16318 ;;      Temps:          0       0       0       0       0       0      24       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16319 ;;      Totals:         0       0       8       0       0       0      24       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16320 ;;Total ram usage:       32 bytes
 16321 ;; Hardware stack levels used:    1
 16322 ;; Hardware stack levels required when called:   16
 16323 ;; This function calls:
 16324 ;;		_doMove
 16325 ;;		_printf
 16326 ;; This function is called by:
 16327 ;;		_main
 16328 ;; This function uses a non-reentrant model
 16329 ;;
 16330                           
 16331                           
 16332                           ;psect for function _doAbsMove
 16333  00AB                     _doAbsMove:	
 16334                           
 16335                           ;main.c: 312: int allThere=1;
 16336                           
 16337                           ;incstack = 0
 16338 ;; hardware stack exceeded
 16339                           ; Regs used in _doAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16340  00AB  3001               	movlw	1
 16341  00AC  0021               	movlb	1	; select bank1
 16342  00AD  00C8               	movwf	doAbsMove@allThere^(0+128)
 16343  00AE  3000               	movlw	0
 16344  00AF  00C9               	movwf	(doAbsMove@allThere^(0+128)+1)
 16345                           
 16346                           ;main.c: 313: for(int i=0;i<24;i++){
 16347  00B0  01CA               	clrf	doAbsMove@i^(0+128)
 16348  00B1  01CB               	clrf	(doAbsMove@i+1)^(0+128)
 16349  00B2  084B               	movf	(doAbsMove@i+1)^(0+128),w
 16350  00B3  3A80               	xorlw	128
 16351  00B4  0025               	movlb	5	; select bank5
 16352  00B5  00A0               	movwf	??_doAbsMove^(0+640)
 16353  00B6  3080               	movlw	128
 16354  00B7  0220               	subwf	??_doAbsMove^(0+640),w
 16355  00B8  1D03               	skipz
 16356  00B9  28BD               	goto	u8275
 16357  00BA  3018               	movlw	24
 16358  00BB  0021               	movlb	1	; select bank1
 16359  00BC  024A               	subwf	doAbsMove@i^(0+128),w
 16360  00BD                     u8275:	
 16361  00BD  1803               	btfsc	3,0
 16362  00BE  2927               	goto	l8352
 16363  00BF                     l8344:	
 16364                           
 16365                           ;main.c: 314: if((activeMask & (1 << i)) > 0)
 16366  00BF  0021               	movlb	1	; select bank1
 16367  00C0  0858               	movf	_activeMask^(0+128),w
 16368  00C1  0025               	movlb	5	; select bank5
 16369  00C2  00A0               	movwf	??_doAbsMove^(0+640)
 16370  00C3  0021               	movlb	1	; select bank1
 16371  00C4  0859               	movf	(_activeMask+1)^(0+128),w
 16372  00C5  0025               	movlb	5	; select bank5
 16373  00C6  00A1               	movwf	(??_doAbsMove^(0+640)+1)
 16374  00C7  0021               	movlb	1	; select bank1
 16375  00C8  085A               	movf	(_activeMask+2)^(0+128),w
 16376  00C9  0025               	movlb	5	; select bank5
 16377  00CA  00A2               	movwf	(??_doAbsMove^(0+640)+2)
 16378  00CB  0021               	movlb	1	; select bank1
 16379  00CC  085B               	movf	(_activeMask+3)^(0+128),w
 16380  00CD  0025               	movlb	5	; select bank5
 16381  00CE  00A3               	movwf	(??_doAbsMove^(0+640)+3)
 16382  00CF  3001               	movlw	1
 16383  00D0  00A4               	movwf	(??_doAbsMove+4)^(0+640)
 16384  00D1  3000               	movlw	0
 16385  00D2  00A5               	movwf	((??_doAbsMove+4)^(0+640)+1)
 16386  00D3  0021               	movlb	1	; select bank1
 16387  00D4  0A4A               	incf	doAbsMove@i^(0+128),w
 16388  00D5  0025               	movlb	5	; select bank5
 16389  00D6  28D9               	goto	u8284
 16390  00D7                     u8285:	
 16391  00D7  35A4               	lslf	(??_doAbsMove+4)^(0+640),f
 16392  00D8  0DA5               	rlf	((??_doAbsMove+4)^(0+640)+1),f
 16393  00D9                     u8284:	
 16394  00D9  0B89               	decfsz	9,f
 16395  00DA  28D7               	goto	u8285
 16396  00DB  0824               	movf	(??_doAbsMove+4)^(0+640),w
 16397  00DC  00A6               	movwf	(??_doAbsMove+6)^(0+640)
 16398  00DD  0825               	movf	(??_doAbsMove+5)^(0+640),w
 16399  00DE  00A7               	movwf	((??_doAbsMove+6)^(0+640)+1)
 16400  00DF  3000               	movlw	0
 16401  00E0  1BA7               	btfsc	((??_doAbsMove+6)^(0+640)+1),7
 16402  00E1  30FF               	movlw	255
 16403  00E2  00A8               	movwf	((??_doAbsMove+6)^(0+640)+2)
 16404  00E3  00A9               	movwf	((??_doAbsMove+6)^(0+640)+3)
 16405  00E4  0826               	movf	(??_doAbsMove+6)^(0+640),w
 16406  00E5  05A0               	andwf	??_doAbsMove^(0+640),f
 16407  00E6  0827               	movf	(??_doAbsMove+7)^(0+640),w
 16408  00E7  05A1               	andwf	(??_doAbsMove^(0+640)+1),f
 16409  00E8  0828               	movf	(??_doAbsMove+8)^(0+640),w
 16410  00E9  05A2               	andwf	(??_doAbsMove^(0+640)+2),f
 16411  00EA  0829               	movf	(??_doAbsMove+9)^(0+640),w
 16412  00EB  05A3               	andwf	(??_doAbsMove^(0+640)+3),f
 16413  00EC  0823               	movf	(??_doAbsMove+3)^(0+640),w
 16414  00ED  0422               	iorwf	(??_doAbsMove+2)^(0+640),w
 16415  00EE  0421               	iorwf	(??_doAbsMove+1)^(0+640),w
 16416  00EF  0420               	iorwf	??_doAbsMove^(0+640),w
 16417  00F0  1903               	skipnz
 16418  00F1  2915               	goto	l8348
 16419                           
 16420                           ;main.c: 315: allThere &= (currentPositions_steps[i] == absCommand);
 16421  00F2  0021               	movlb	1	; select bank1
 16422  00F3  354A               	lslf	doAbsMove@i^(0+128),w
 16423  00F4  3E20               	addlw	(low (_currentPositions_steps| (0+512)))& (0+255)
 16424  00F5  0086               	movwf	6
 16425  00F6  3002               	movlw	2	; select bank4/5
 16426  00F7  0087               	movwf	7
 16427  00F8  3F40               	moviw [0]fsr1
 16428  00F9  0025               	movlb	5	; select bank5
 16429  00FA  00A0               	movwf	??_doAbsMove^(0+640)
 16430  00FB  3F41               	moviw [1]fsr1
 16431  00FC  00A1               	movwf	(??_doAbsMove^(0+640)+1)
 16432  00FD  0021               	movlb	1	; select bank1
 16433  00FE  0865               	movf	(_absCommand+1)^(0+128),w
 16434  00FF  0025               	movlb	5	; select bank5
 16435  0100  0621               	xorwf	(??_doAbsMove+1)^(0+640),w
 16436  0101  1D03               	skipz
 16437  0102  2907               	goto	u8305
 16438  0103  0021               	movlb	1	; select bank1
 16439  0104  0864               	movf	_absCommand^(0+128),w
 16440  0105  0025               	movlb	5	; select bank5
 16441  0106  0620               	xorwf	??_doAbsMove^(0+640),w
 16442  0107                     u8305:	
 16443  0107  1D03               	btfss	3,2
 16444  0108  290B               	goto	u8300
 16445  0109  3001               	movlw	1
 16446  010A  290C               	goto	u8310
 16447  010B                     u8300:	
 16448  010B  3000               	movlw	0
 16449  010C                     u8310:	
 16450  010C  00A2               	movwf	(??_doAbsMove+2)^(0+640)
 16451  010D  01A3               	clrf	((??_doAbsMove+2)^(0+640)+1)
 16452  010E  0822               	movf	(??_doAbsMove+2)^(0+640),w
 16453  010F  0021               	movlb	1	; select bank1
 16454  0110  05C8               	andwf	doAbsMove@allThere^(0+128),f
 16455  0111  0025               	movlb	5	; select bank5
 16456  0112  0823               	movf	(??_doAbsMove+3)^(0+640),w
 16457  0113  0021               	movlb	1	; select bank1
 16458  0114  05C9               	andwf	(doAbsMove@allThere+1)^(0+128),f
 16459  0115                     l8348:	
 16460  0115  3001               	movlw	1
 16461  0116  0021               	movlb	1	; select bank1
 16462  0117  07CA               	addwf	doAbsMove@i^(0+128),f
 16463  0118  3000               	movlw	0
 16464  0119  3DCB               	addwfc	(doAbsMove@i+1)^(0+128),f
 16465  011A  084B               	movf	(doAbsMove@i+1)^(0+128),w
 16466  011B  3A80               	xorlw	128
 16467  011C  0025               	movlb	5	; select bank5
 16468  011D  00A0               	movwf	??_doAbsMove^(0+640)
 16469  011E  3080               	movlw	128
 16470  011F  0220               	subwf	??_doAbsMove^(0+640),w
 16471  0120  1D03               	skipz
 16472  0121  2925               	goto	u8325
 16473  0122  3018               	movlw	24
 16474  0123  0021               	movlb	1	; select bank1
 16475  0124  024A               	subwf	doAbsMove@i^(0+128),w
 16476  0125                     u8325:	
 16477  0125  1C03               	skipc
 16478  0126  28BF               	goto	l8344
 16479  0127                     l8352:	
 16480                           
 16481                           ;main.c: 316: }
 16482                           ;main.c: 318: if(allThere){
 16483  0127  0021               	movlb	1	; select bank1
 16484  0128  0848               	movf	doAbsMove@allThere^(0+128),w
 16485  0129  0449               	iorwf	(doAbsMove@allThere+1)^(0+128),w
 16486  012A  1903               	btfsc	3,2
 16487  012B  2946               	goto	l8366
 16488                           
 16489                           ;main.c: 319: printf("abs: all there\n");
 16490  012C  3019               	movlw	low (STR_11| (0+32768))
 16491  012D  00A0               	movwf	printf@f^(0+128)
 16492  012E  30A9               	movlw	high (STR_11| (0+32768))
 16493  012F  00A1               	movwf	(printf@f^(0+128)+1)
 16494  0130  3186  264A         	fcall	_printf
 16495                           
 16496                           ;main.c: 320: motionType = NONE;
 16497  0132  0020               	movlb	0	; select bank0
 16498  0133  01D5               	clrf	_motionType
 16499                           
 16500                           ;main.c: 321: moveVector_ups = 0;
 16501  0134  3000               	movlw	0
 16502  0135  0021               	movlb	1	; select bank1
 16503  0136  00E3               	movwf	(_moveVector_ups+3)^(0+128)
 16504  0137  3000               	movlw	0
 16505  0138  00E2               	movwf	(_moveVector_ups+2)^(0+128)
 16506  0139  3000               	movlw	0
 16507  013A  00E1               	movwf	(_moveVector_ups+1)^(0+128)
 16508  013B  3000               	movlw	0
 16509  013C  00E0               	movwf	_moveVector_ups^(0+128)
 16510                           
 16511                           ;main.c: 322: moveVector_downs = 0;
 16512  013D  3000               	movlw	0
 16513  013E  00DF               	movwf	(_moveVector_downs+3)^(0+128)
 16514  013F  3000               	movlw	0
 16515  0140  00DE               	movwf	(_moveVector_downs+2)^(0+128)
 16516  0141  3000               	movlw	0
 16517  0142  00DD               	movwf	(_moveVector_downs+1)^(0+128)
 16518  0143  3000               	movlw	0
 16519  0144  00DC               	movwf	_moveVector_downs^(0+128)
 16520                           
 16521                           ;main.c: 324: }
 16522                           
 16523                           ;main.c: 323: return;
 16524  0145  0008               	return
 16525  0146                     l8366:	
 16526                           
 16527                           ;main.c: 325: else{
 16528                           ;main.c: 326: for(int i=0;i<24;i++){
 16529  0146  01CE               	clrf	doAbsMove@i_1575^(0+128)
 16530  0147  01CF               	clrf	(doAbsMove@i_1575+1)^(0+128)
 16531  0148  084F               	movf	(doAbsMove@i_1575+1)^(0+128),w
 16532  0149  3A80               	xorlw	128
 16533  014A  0025               	movlb	5	; select bank5
 16534  014B  00A0               	movwf	??_doAbsMove^(0+640)
 16535  014C  3080               	movlw	128
 16536  014D  0220               	subwf	??_doAbsMove^(0+640),w
 16537  014E  1D03               	skipz
 16538  014F  2953               	goto	u8345
 16539  0150  3018               	movlw	24
 16540  0151  0021               	movlb	1	; select bank1
 16541  0152  024E               	subwf	doAbsMove@i_1575^(0+128),w
 16542  0153                     u8345:	
 16543  0153  1803               	btfsc	3,0
 16544  0154  2A3A               	goto	l8378
 16545  0155                     l8372:	
 16546                           
 16547                           ;main.c: 328: moveVector_ups |= (activeMask & (1 << i)) & ((currentPositions_steps[i] > 
      +                          absCommand)<<i);
 16548  0155  0021               	movlb	1	; select bank1
 16549  0156  0858               	movf	_activeMask^(0+128),w
 16550  0157  0025               	movlb	5	; select bank5
 16551  0158  00A0               	movwf	??_doAbsMove^(0+640)
 16552  0159  0021               	movlb	1	; select bank1
 16553  015A  0859               	movf	(_activeMask+1)^(0+128),w
 16554  015B  0025               	movlb	5	; select bank5
 16555  015C  00A1               	movwf	(??_doAbsMove^(0+640)+1)
 16556  015D  0021               	movlb	1	; select bank1
 16557  015E  085A               	movf	(_activeMask+2)^(0+128),w
 16558  015F  0025               	movlb	5	; select bank5
 16559  0160  00A2               	movwf	(??_doAbsMove^(0+640)+2)
 16560  0161  0021               	movlb	1	; select bank1
 16561  0162  085B               	movf	(_activeMask+3)^(0+128),w
 16562  0163  0025               	movlb	5	; select bank5
 16563  0164  00A3               	movwf	(??_doAbsMove^(0+640)+3)
 16564  0165  0021               	movlb	1	; select bank1
 16565  0166  354E               	lslf	doAbsMove@i_1575^(0+128),w
 16566  0167  3E20               	addlw	(low (_currentPositions_steps| (0+512)))& (0+255)
 16567  0168  0086               	movwf	6
 16568  0169  3002               	movlw	2	; select bank4/5
 16569  016A  0087               	movwf	7
 16570  016B  3F40               	moviw [0]fsr1
 16571  016C  0025               	movlb	5	; select bank5
 16572  016D  00A4               	movwf	(??_doAbsMove+4)^(0+640)
 16573  016E  3F41               	moviw [1]fsr1
 16574  016F  00A5               	movwf	((??_doAbsMove+4)^(0+640)+1)
 16575  0170  0021               	movlb	1	; select bank1
 16576  0171  0865               	movf	(_absCommand+1)^(0+128),w
 16577  0172  3A80               	xorlw	128
 16578  0173  0025               	movlb	5	; select bank5
 16579  0174  00A6               	movwf	(??_doAbsMove+6)^(0+640)
 16580  0175  0825               	movf	(??_doAbsMove+5)^(0+640),w
 16581  0176  3A80               	xorlw	128
 16582  0177  0226               	subwf	(??_doAbsMove+6)^(0+640),w
 16583  0178  1D03               	skipz
 16584  0179  297D               	goto	u8355
 16585  017A  0824               	movf	(??_doAbsMove+4)^(0+640),w
 16586  017B  0021               	movlb	1	; select bank1
 16587  017C  0264               	subwf	_absCommand^(0+128),w
 16588  017D                     u8355:	
 16589  017D  1803               	btfsc	3,0
 16590  017E  2981               	goto	u8350
 16591  017F  3001               	movlw	1
 16592  0180  2982               	goto	u8360
 16593  0181                     u8350:	
 16594  0181  3000               	movlw	0
 16595  0182                     u8360:	
 16596  0182  0025               	movlb	5	; select bank5
 16597  0183  00A7               	movwf	(??_doAbsMove+7)^(0+640)
 16598  0184  01A8               	clrf	((??_doAbsMove+7)^(0+640)+1)
 16599  0185  0021               	movlb	1	; select bank1
 16600  0186  0A4E               	incf	doAbsMove@i_1575^(0+128),w
 16601  0187  0025               	movlb	5	; select bank5
 16602  0188  298B               	goto	u8374
 16603  0189                     u8375:	
 16604  0189  35A7               	lslf	(??_doAbsMove+7)^(0+640),f
 16605  018A  0DA8               	rlf	((??_doAbsMove+7)^(0+640)+1),f
 16606  018B                     u8374:	
 16607  018B  0B89               	decfsz	9,f
 16608  018C  2989               	goto	u8375
 16609  018D  3001               	movlw	1
 16610  018E  00A9               	movwf	(??_doAbsMove+9)^(0+640)
 16611  018F  3000               	movlw	0
 16612  0190  00AA               	movwf	((??_doAbsMove+9)^(0+640)+1)
 16613  0191  0021               	movlb	1	; select bank1
 16614  0192  0A4E               	incf	doAbsMove@i_1575^(0+128),w
 16615  0193  0025               	movlb	5	; select bank5
 16616  0194  2997               	goto	u8384
 16617  0195                     u8385:	
 16618  0195  35A9               	lslf	(??_doAbsMove+9)^(0+640),f
 16619  0196  0DAA               	rlf	((??_doAbsMove+9)^(0+640)+1),f
 16620  0197                     u8384:	
 16621  0197  0B89               	decfsz	9,f
 16622  0198  2995               	goto	u8385
 16623  0199  0827               	movf	(??_doAbsMove+7)^(0+640),w
 16624  019A  0529               	andwf	(??_doAbsMove+9)^(0+640),w
 16625  019B  00AB               	movwf	(??_doAbsMove+11)^(0+640)
 16626  019C  0828               	movf	(??_doAbsMove+8)^(0+640),w
 16627  019D  052A               	andwf	(??_doAbsMove+10)^(0+640),w
 16628  019E  00AC               	movwf	(??_doAbsMove+12)^(0+640)
 16629  019F  082B               	movf	(??_doAbsMove+11)^(0+640),w
 16630  01A0  00AD               	movwf	(??_doAbsMove+13)^(0+640)
 16631  01A1  082C               	movf	(??_doAbsMove+12)^(0+640),w
 16632  01A2  00AE               	movwf	((??_doAbsMove+13)^(0+640)+1)
 16633  01A3  3000               	movlw	0
 16634  01A4  1BAE               	btfsc	((??_doAbsMove+13)^(0+640)+1),7
 16635  01A5  30FF               	movlw	255
 16636  01A6  00AF               	movwf	((??_doAbsMove+13)^(0+640)+2)
 16637  01A7  00B0               	movwf	((??_doAbsMove+13)^(0+640)+3)
 16638  01A8  082D               	movf	(??_doAbsMove+13)^(0+640),w
 16639  01A9  05A0               	andwf	??_doAbsMove^(0+640),f
 16640  01AA  082E               	movf	(??_doAbsMove+14)^(0+640),w
 16641  01AB  05A1               	andwf	(??_doAbsMove^(0+640)+1),f
 16642  01AC  082F               	movf	(??_doAbsMove+15)^(0+640),w
 16643  01AD  05A2               	andwf	(??_doAbsMove^(0+640)+2),f
 16644  01AE  0830               	movf	(??_doAbsMove+16)^(0+640),w
 16645  01AF  05A3               	andwf	(??_doAbsMove^(0+640)+3),f
 16646  01B0  0820               	movf	??_doAbsMove^(0+640),w
 16647  01B1  0021               	movlb	1	; select bank1
 16648  01B2  04E0               	iorwf	_moveVector_ups^(0+128),f
 16649  01B3  0025               	movlb	5	; select bank5
 16650  01B4  0821               	movf	(??_doAbsMove+1)^(0+640),w
 16651  01B5  0021               	movlb	1	; select bank1
 16652  01B6  04E1               	iorwf	(_moveVector_ups+1)^(0+128),f
 16653  01B7  0025               	movlb	5	; select bank5
 16654  01B8  0822               	movf	(??_doAbsMove+2)^(0+640),w
 16655  01B9  0021               	movlb	1	; select bank1
 16656  01BA  04E2               	iorwf	(_moveVector_ups+2)^(0+128),f
 16657  01BB  0025               	movlb	5	; select bank5
 16658  01BC  0823               	movf	(??_doAbsMove+3)^(0+640),w
 16659  01BD  0021               	movlb	1	; select bank1
 16660  01BE  04E3               	iorwf	(_moveVector_ups+3)^(0+128),f
 16661                           
 16662                           ;main.c: 329: moveVector_downs |= (activeMask & (1 << i)) & ((currentPositions_steps[i] 
      +                          < absCommand)<<i);
 16663  01BF  0858               	movf	_activeMask^(0+128),w
 16664  01C0  0025               	movlb	5	; select bank5
 16665  01C1  00A0               	movwf	??_doAbsMove^(0+640)
 16666  01C2  0021               	movlb	1	; select bank1
 16667  01C3  0859               	movf	(_activeMask+1)^(0+128),w
 16668  01C4  0025               	movlb	5	; select bank5
 16669  01C5  00A1               	movwf	(??_doAbsMove^(0+640)+1)
 16670  01C6  0021               	movlb	1	; select bank1
 16671  01C7  085A               	movf	(_activeMask+2)^(0+128),w
 16672  01C8  0025               	movlb	5	; select bank5
 16673  01C9  00A2               	movwf	(??_doAbsMove^(0+640)+2)
 16674  01CA  0021               	movlb	1	; select bank1
 16675  01CB  085B               	movf	(_activeMask+3)^(0+128),w
 16676  01CC  0025               	movlb	5	; select bank5
 16677  01CD  00A3               	movwf	(??_doAbsMove^(0+640)+3)
 16678  01CE  0021               	movlb	1	; select bank1
 16679  01CF  354E               	lslf	doAbsMove@i_1575^(0+128),w
 16680  01D0  3E20               	addlw	(low (_currentPositions_steps| (0+512)))& (0+255)
 16681  01D1  0086               	movwf	6
 16682  01D2  3002               	movlw	2	; select bank4/5
 16683  01D3  0087               	movwf	7
 16684  01D4  3F40               	moviw [0]fsr1
 16685  01D5  0025               	movlb	5	; select bank5
 16686  01D6  00A4               	movwf	(??_doAbsMove+4)^(0+640)
 16687  01D7  3F41               	moviw [1]fsr1
 16688  01D8  00A5               	movwf	((??_doAbsMove+4)^(0+640)+1)
 16689  01D9  0825               	movf	(??_doAbsMove+5)^(0+640),w
 16690  01DA  3A80               	xorlw	128
 16691  01DB  00A6               	movwf	(??_doAbsMove+6)^(0+640)
 16692  01DC  0021               	movlb	1	; select bank1
 16693  01DD  0865               	movf	(_absCommand+1)^(0+128),w
 16694  01DE  3A80               	xorlw	128
 16695  01DF  0025               	movlb	5	; select bank5
 16696  01E0  0226               	subwf	(??_doAbsMove+6)^(0+640),w
 16697  01E1  1D03               	skipz
 16698  01E2  29E7               	goto	u8395
 16699  01E3  0021               	movlb	1	; select bank1
 16700  01E4  0864               	movf	_absCommand^(0+128),w
 16701  01E5  0025               	movlb	5	; select bank5
 16702  01E6  0224               	subwf	(??_doAbsMove+4)^(0+640),w
 16703  01E7                     u8395:	
 16704  01E7  1803               	btfsc	3,0
 16705  01E8  29EB               	goto	u8390
 16706  01E9  3001               	movlw	1
 16707  01EA  29EC               	goto	u8400
 16708  01EB                     u8390:	
 16709  01EB  3000               	movlw	0
 16710  01EC                     u8400:	
 16711  01EC  0025               	movlb	5	; select bank5
 16712  01ED  00A7               	movwf	(??_doAbsMove+7)^(0+640)
 16713  01EE  01A8               	clrf	((??_doAbsMove+7)^(0+640)+1)
 16714  01EF  0021               	movlb	1	; select bank1
 16715  01F0  0A4E               	incf	doAbsMove@i_1575^(0+128),w
 16716  01F1  0025               	movlb	5	; select bank5
 16717  01F2  29F5               	goto	u8414
 16718  01F3                     u8415:	
 16719  01F3  35A7               	lslf	(??_doAbsMove+7)^(0+640),f
 16720  01F4  0DA8               	rlf	((??_doAbsMove+7)^(0+640)+1),f
 16721  01F5                     u8414:	
 16722  01F5  0B89               	decfsz	9,f
 16723  01F6  29F3               	goto	u8415
 16724  01F7  3001               	movlw	1
 16725  01F8  00A9               	movwf	(??_doAbsMove+9)^(0+640)
 16726  01F9  3000               	movlw	0
 16727  01FA  00AA               	movwf	((??_doAbsMove+9)^(0+640)+1)
 16728  01FB  0021               	movlb	1	; select bank1
 16729  01FC  0A4E               	incf	doAbsMove@i_1575^(0+128),w
 16730  01FD  0025               	movlb	5	; select bank5
 16731  01FE  2A01               	goto	u8424
 16732  01FF                     u8425:	
 16733  01FF  35A9               	lslf	(??_doAbsMove+9)^(0+640),f
 16734  0200  0DAA               	rlf	((??_doAbsMove+9)^(0+640)+1),f
 16735  0201                     u8424:	
 16736  0201  0B89               	decfsz	9,f
 16737  0202  29FF               	goto	u8425
 16738  0203  0827               	movf	(??_doAbsMove+7)^(0+640),w
 16739  0204  0529               	andwf	(??_doAbsMove+9)^(0+640),w
 16740  0205  00AB               	movwf	(??_doAbsMove+11)^(0+640)
 16741  0206  0828               	movf	(??_doAbsMove+8)^(0+640),w
 16742  0207  052A               	andwf	(??_doAbsMove+10)^(0+640),w
 16743  0208  00AC               	movwf	(??_doAbsMove+12)^(0+640)
 16744  0209  082B               	movf	(??_doAbsMove+11)^(0+640),w
 16745  020A  00AD               	movwf	(??_doAbsMove+13)^(0+640)
 16746  020B  082C               	movf	(??_doAbsMove+12)^(0+640),w
 16747  020C  00AE               	movwf	((??_doAbsMove+13)^(0+640)+1)
 16748  020D  3000               	movlw	0
 16749  020E  1BAE               	btfsc	((??_doAbsMove+13)^(0+640)+1),7
 16750  020F  30FF               	movlw	255
 16751  0210  00AF               	movwf	((??_doAbsMove+13)^(0+640)+2)
 16752  0211  00B0               	movwf	((??_doAbsMove+13)^(0+640)+3)
 16753  0212  082D               	movf	(??_doAbsMove+13)^(0+640),w
 16754  0213  05A0               	andwf	??_doAbsMove^(0+640),f
 16755  0214  082E               	movf	(??_doAbsMove+14)^(0+640),w
 16756  0215  05A1               	andwf	(??_doAbsMove^(0+640)+1),f
 16757  0216  082F               	movf	(??_doAbsMove+15)^(0+640),w
 16758  0217  05A2               	andwf	(??_doAbsMove^(0+640)+2),f
 16759  0218  0830               	movf	(??_doAbsMove+16)^(0+640),w
 16760  0219  05A3               	andwf	(??_doAbsMove^(0+640)+3),f
 16761  021A  0820               	movf	??_doAbsMove^(0+640),w
 16762  021B  0021               	movlb	1	; select bank1
 16763  021C  04DC               	iorwf	_moveVector_downs^(0+128),f
 16764  021D  0025               	movlb	5	; select bank5
 16765  021E  0821               	movf	(??_doAbsMove+1)^(0+640),w
 16766  021F  0021               	movlb	1	; select bank1
 16767  0220  04DD               	iorwf	(_moveVector_downs+1)^(0+128),f
 16768  0221  0025               	movlb	5	; select bank5
 16769  0222  0822               	movf	(??_doAbsMove+2)^(0+640),w
 16770  0223  0021               	movlb	1	; select bank1
 16771  0224  04DE               	iorwf	(_moveVector_downs+2)^(0+128),f
 16772  0225  0025               	movlb	5	; select bank5
 16773  0226  0823               	movf	(??_doAbsMove+3)^(0+640),w
 16774  0227  0021               	movlb	1	; select bank1
 16775  0228  04DF               	iorwf	(_moveVector_downs+3)^(0+128),f
 16776  0229  3001               	movlw	1
 16777  022A  07CE               	addwf	doAbsMove@i_1575^(0+128),f
 16778  022B  3000               	movlw	0
 16779  022C  3DCF               	addwfc	(doAbsMove@i_1575+1)^(0+128),f
 16780  022D  084F               	movf	(doAbsMove@i_1575+1)^(0+128),w
 16781  022E  3A80               	xorlw	128
 16782  022F  0025               	movlb	5	; select bank5
 16783  0230  00A0               	movwf	??_doAbsMove^(0+640)
 16784  0231  3080               	movlw	128
 16785  0232  0220               	subwf	??_doAbsMove^(0+640),w
 16786  0233  1D03               	skipz
 16787  0234  2A38               	goto	u8435
 16788  0235  3018               	movlw	24
 16789  0236  0021               	movlb	1	; select bank1
 16790  0237  024E               	subwf	doAbsMove@i_1575^(0+128),w
 16791  0238                     u8435:	
 16792  0238  1C03               	skipc
 16793  0239  2955               	goto	l8372
 16794  023A                     l8378:	
 16795                           
 16796                           ;main.c: 331: }
 16797                           ;main.c: 332: doMove();
 16798  023A  3189  2100  3180   	fcall	_doMove
 16799                           
 16800                           ;main.c: 334: for(int i=0;i<24;i++)
 16801  023D  0021               	movlb	1	; select bank1
 16802  023E  01CC               	clrf	doAbsMove@i_1577^(0+128)
 16803  023F  01CD               	clrf	(doAbsMove@i_1577+1)^(0+128)
 16804  0240                     L31:	
 16805  0240  084D               	movf	(doAbsMove@i_1577+1)^(0+128),w
 16806  0241  3A80               	xorlw	128
 16807  0242  0025               	movlb	5	; select bank5
 16808  0243  00A0               	movwf	??_doAbsMove^(0+640)
 16809  0244  3080               	movlw	128
 16810  0245  0220               	subwf	??_doAbsMove^(0+640),w
 16811  0246  1D03               	skipz
 16812  0247  2A4B               	goto	u8445
 16813  0248  3018               	movlw	24
 16814  0249  0021               	movlb	1	; select bank1
 16815  024A  024C               	subwf	doAbsMove@i_1577^(0+128),w
 16816  024B                     u8445:	
 16817  024B  1803               	btfsc	3,0
 16818  024C  0008               	return
 16819                           
 16820                           ;main.c: 335: currentPositions_steps[i] += ((moveVector_downs & (1 << i)) > 0) - ((moveV
      +                          ector_ups & (1 << i)) > 0);
 16821  024D  0021               	movlb	1	; select bank1
 16822  024E  0860               	movf	_moveVector_ups^(0+128),w
 16823  024F  0025               	movlb	5	; select bank5
 16824  0250  00A0               	movwf	??_doAbsMove^(0+640)
 16825  0251  0021               	movlb	1	; select bank1
 16826  0252  0861               	movf	(_moveVector_ups+1)^(0+128),w
 16827  0253  0025               	movlb	5	; select bank5
 16828  0254  00A1               	movwf	(??_doAbsMove^(0+640)+1)
 16829  0255  0021               	movlb	1	; select bank1
 16830  0256  0862               	movf	(_moveVector_ups+2)^(0+128),w
 16831  0257  0025               	movlb	5	; select bank5
 16832  0258  00A2               	movwf	(??_doAbsMove^(0+640)+2)
 16833  0259  0021               	movlb	1	; select bank1
 16834  025A  0863               	movf	(_moveVector_ups+3)^(0+128),w
 16835  025B  0025               	movlb	5	; select bank5
 16836  025C  00A3               	movwf	(??_doAbsMove^(0+640)+3)
 16837  025D  3001               	movlw	1
 16838  025E  00A4               	movwf	(??_doAbsMove+4)^(0+640)
 16839  025F  3000               	movlw	0
 16840  0260  00A5               	movwf	((??_doAbsMove+4)^(0+640)+1)
 16841  0261  0021               	movlb	1	; select bank1
 16842  0262  0A4C               	incf	doAbsMove@i_1577^(0+128),w
 16843  0263  0025               	movlb	5	; select bank5
 16844  0264  2A67               	goto	u8454
 16845  0265                     u8455:	
 16846  0265  35A4               	lslf	(??_doAbsMove+4)^(0+640),f
 16847  0266  0DA5               	rlf	((??_doAbsMove+4)^(0+640)+1),f
 16848  0267                     u8454:	
 16849  0267  0B89               	decfsz	9,f
 16850  0268  2A65               	goto	u8455
 16851  0269  0824               	movf	(??_doAbsMove+4)^(0+640),w
 16852  026A  00A6               	movwf	(??_doAbsMove+6)^(0+640)
 16853  026B  0825               	movf	(??_doAbsMove+5)^(0+640),w
 16854  026C  00A7               	movwf	((??_doAbsMove+6)^(0+640)+1)
 16855  026D  3000               	movlw	0
 16856  026E  1BA7               	btfsc	((??_doAbsMove+6)^(0+640)+1),7
 16857  026F  30FF               	movlw	255
 16858  0270  00A8               	movwf	((??_doAbsMove+6)^(0+640)+2)
 16859  0271  00A9               	movwf	((??_doAbsMove+6)^(0+640)+3)
 16860  0272  0826               	movf	(??_doAbsMove+6)^(0+640),w
 16861  0273  05A0               	andwf	??_doAbsMove^(0+640),f
 16862  0274  0827               	movf	(??_doAbsMove+7)^(0+640),w
 16863  0275  05A1               	andwf	(??_doAbsMove^(0+640)+1),f
 16864  0276  0828               	movf	(??_doAbsMove+8)^(0+640),w
 16865  0277  05A2               	andwf	(??_doAbsMove^(0+640)+2),f
 16866  0278  0829               	movf	(??_doAbsMove+9)^(0+640),w
 16867  0279  05A3               	andwf	(??_doAbsMove^(0+640)+3),f
 16868  027A  1BA3               	btfsc	(??_doAbsMove^(0+640)+3),7
 16869  027B  2A8B               	goto	u8460
 16870  027C  0823               	movf	(??_doAbsMove^(0+640)+3),w
 16871  027D  1D03               	btfss	3,2
 16872  027E  2A89               	goto	u8461
 16873  027F  0822               	movf	(??_doAbsMove^(0+640)+2),w
 16874  0280  1D03               	btfss	3,2
 16875  0281  2A89               	goto	u8461
 16876  0282  0821               	movf	(??_doAbsMove^(0+640)+1),w
 16877  0283  1D03               	btfss	3,2
 16878  0284  2A89               	goto	u8461
 16879  0285  3001               	movlw	1
 16880  0286  0220               	subwf	??_doAbsMove^(0+640),w
 16881  0287  1C03               	btfss	3,0
 16882  0288  2A8B               	goto	u8460
 16883  0289                     u8461:	
 16884  0289  3001               	movlw	1
 16885  028A  2A8C               	goto	u8470
 16886  028B                     u8460:	
 16887  028B  3000               	movlw	0
 16888  028C                     u8470:	
 16889  028C  00AA               	movwf	(??_doAbsMove+10)^(0+640)
 16890  028D  01AB               	clrf	((??_doAbsMove+10)^(0+640)+1)
 16891  028E  09AA               	comf	(??_doAbsMove+10)^(0+640),f
 16892  028F  09AB               	comf	((??_doAbsMove+10)^(0+640)+1),f
 16893  0290  0AAA               	incf	(??_doAbsMove+10)^(0+640),f
 16894  0291  1903               	skipnz
 16895  0292  0AAB               	incf	((??_doAbsMove+10)^(0+640)+1),f
 16896  0293  0021               	movlb	1	; select bank1
 16897  0294  085C               	movf	_moveVector_downs^(0+128),w
 16898  0295  0025               	movlb	5	; select bank5
 16899  0296  00AC               	movwf	(??_doAbsMove+12)^(0+640)
 16900  0297  0021               	movlb	1	; select bank1
 16901  0298  085D               	movf	(_moveVector_downs+1)^(0+128),w
 16902  0299  0025               	movlb	5	; select bank5
 16903  029A  00AD               	movwf	((??_doAbsMove+12)^(0+640)+1)
 16904  029B  0021               	movlb	1	; select bank1
 16905  029C  085E               	movf	(_moveVector_downs+2)^(0+128),w
 16906  029D  0025               	movlb	5	; select bank5
 16907  029E  00AE               	movwf	((??_doAbsMove+12)^(0+640)+2)
 16908  029F  0021               	movlb	1	; select bank1
 16909  02A0  085F               	movf	(_moveVector_downs+3)^(0+128),w
 16910  02A1  0025               	movlb	5	; select bank5
 16911  02A2  00AF               	movwf	((??_doAbsMove+12)^(0+640)+3)
 16912  02A3  3001               	movlw	1
 16913  02A4  00B0               	movwf	(??_doAbsMove+16)^(0+640)
 16914  02A5  3000               	movlw	0
 16915  02A6  00B1               	movwf	((??_doAbsMove+16)^(0+640)+1)
 16916  02A7  0021               	movlb	1	; select bank1
 16917  02A8  0A4C               	incf	doAbsMove@i_1577^(0+128),w
 16918  02A9  0025               	movlb	5	; select bank5
 16919  02AA  2AAD               	goto	u8484
 16920  02AB                     u8485:	
 16921  02AB  35B0               	lslf	(??_doAbsMove+16)^(0+640),f
 16922  02AC  0DB1               	rlf	((??_doAbsMove+16)^(0+640)+1),f
 16923  02AD                     u8484:	
 16924  02AD  0B89               	decfsz	9,f
 16925  02AE  2AAB               	goto	u8485
 16926  02AF  0830               	movf	(??_doAbsMove+16)^(0+640),w
 16927  02B0  00B2               	movwf	(??_doAbsMove+18)^(0+640)
 16928  02B1  0831               	movf	(??_doAbsMove+17)^(0+640),w
 16929  02B2  00B3               	movwf	((??_doAbsMove+18)^(0+640)+1)
 16930  02B3  3000               	movlw	0
 16931  02B4  1BB3               	btfsc	((??_doAbsMove+18)^(0+640)+1),7
 16932  02B5  30FF               	movlw	255
 16933  02B6  00B4               	movwf	((??_doAbsMove+18)^(0+640)+2)
 16934  02B7  00B5               	movwf	((??_doAbsMove+18)^(0+640)+3)
 16935  02B8  0832               	movf	(??_doAbsMove+18)^(0+640),w
 16936  02B9  05AC               	andwf	(??_doAbsMove+12)^(0+640),f
 16937  02BA  0833               	movf	(??_doAbsMove+19)^(0+640),w
 16938  02BB  05AD               	andwf	((??_doAbsMove+12)^(0+640)+1),f
 16939  02BC  0834               	movf	(??_doAbsMove+20)^(0+640),w
 16940  02BD  05AE               	andwf	((??_doAbsMove+12)^(0+640)+2),f
 16941  02BE  0835               	movf	(??_doAbsMove+21)^(0+640),w
 16942  02BF  05AF               	andwf	((??_doAbsMove+12)^(0+640)+3),f
 16943  02C0  1BAF               	btfsc	((??_doAbsMove+12)^(0+640)+3),7
 16944  02C1  2AD1               	goto	u8490
 16945  02C2  082F               	movf	((??_doAbsMove+12)^(0+640)+3),w
 16946  02C3  1D03               	btfss	3,2
 16947  02C4  2ACF               	goto	u8491
 16948  02C5  082E               	movf	((??_doAbsMove+12)^(0+640)+2),w
 16949  02C6  1D03               	btfss	3,2
 16950  02C7  2ACF               	goto	u8491
 16951  02C8  082D               	movf	((??_doAbsMove+12)^(0+640)+1),w
 16952  02C9  1D03               	btfss	3,2
 16953  02CA  2ACF               	goto	u8491
 16954  02CB  3001               	movlw	1
 16955  02CC  022C               	subwf	(??_doAbsMove+12)^(0+640),w
 16956  02CD  1C03               	btfss	3,0
 16957  02CE  2AD1               	goto	u8490
 16958  02CF                     u8491:	
 16959  02CF  3001               	movlw	1
 16960  02D0  2AD2               	goto	u8500
 16961  02D1                     u8490:	
 16962  02D1  3000               	movlw	0
 16963  02D2                     u8500:	
 16964  02D2  072A               	addwf	(??_doAbsMove+10)^(0+640),w
 16965  02D3  00B6               	movwf	(??_doAbsMove+22)^(0+640)
 16966  02D4  082B               	movf	(??_doAbsMove+11)^(0+640),w
 16967  02D5  1803               	skipnc
 16968  02D6  0A2B               	incf	(??_doAbsMove+11)^(0+640),w
 16969  02D7  00B7               	movwf	((??_doAbsMove+22)^(0+640)+1)
 16970  02D8  0021               	movlb	1	; select bank1
 16971  02D9  354C               	lslf	doAbsMove@i_1577^(0+128),w
 16972  02DA  3E20               	addlw	(low (_currentPositions_steps| (0+512)))& (0+255)
 16973  02DB  0086               	movwf	6
 16974  02DC  3002               	movlw	2	; select bank4/5
 16975  02DD  0087               	movwf	7
 16976  02DE  0025               	movlb	5	; select bank5
 16977  02DF  0836               	movf	(??_doAbsMove+22)^(0+640),w
 16978  02E0  0781               	addwf	1,f
 16979  02E1  3141               	addfsr 1,1
 16980  02E2  0837               	movf	(??_doAbsMove+23)^(0+640),w
 16981  02E3  3D81               	addwfc	1,f
 16982  02E4  317F               	addfsr 1,-1
 16983  02E5  3001               	movlw	1
 16984  02E6  0021               	movlb	1	; select bank1
 16985  02E7  07CC               	addwf	doAbsMove@i_1577^(0+128),f
 16986  02E8  3000               	movlw	0
 16987  02E9  3DCD               	addwfc	(doAbsMove@i_1577+1)^(0+128),f
 16988  02EA  2A40               	goto	L31
 16989  02EB                     __end_of_doAbsMove:	
 16990                           
 16991                           	psect	text53
 16992  0900                     __ptext53:	
 16993 ;; *************** function _doMove *****************
 16994 ;; Defined at:
 16995 ;;		line 239 in file "main.c"
 16996 ;; Parameters:    Size  Location     Type
 16997 ;;		None
 16998 ;; Auto vars:     Size  Location     Type
 16999 ;;  t               2   38[BANK1 ] int 
 17000 ;;  t               2   36[BANK1 ] int 
 17001 ;; Return value:  Size  Location     Type
 17002 ;;                  2   33[BANK1 ] int 
 17003 ;; Registers used:
 17004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17005 ;; Tracked objects:
 17006 ;;		On entry : 0/0
 17007 ;;		On exit  : 0/0
 17008 ;;		Unchanged: 0/0
 17009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17010 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17011 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17012 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17013 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17014 ;;Total ram usage:        7 bytes
 17015 ;; Hardware stack levels used:    1
 17016 ;; Hardware stack levels required when called:   15
 17017 ;; This function calls:
 17018 ;;		_LEDsOn
 17019 ;;		_TMR0_StartTimer
 17020 ;;		_TMR2_StartTimer
 17021 ;;		_calcHeaterPins
 17022 ;;		_drv_write_DC
 17023 ;;		_printf
 17024 ;; This function is called by:
 17025 ;;		_doAbsMove
 17026 ;;		_doRelMove
 17027 ;;		_execCmd
 17028 ;; This function uses a non-reentrant model
 17029 ;;
 17030                           
 17031                           
 17032                           ;psect for function _doMove
 17033  0900                     _doMove:	
 17034                           
 17035                           ;main.c: 240: printf("doMove\n");
 17036                           
 17037                           ;incstack = 0
 17038 ;; hardware stack exceeded
 17039                           ; Regs used in _doMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17040  0900  30F1               	movlw	low (STR_7| (0+32768))
 17041  0901  0021               	movlb	1	; select bank1
 17042  0902  00A0               	movwf	printf@f^(0+128)
 17043  0903  30A9               	movlw	high (STR_7| (0+32768))
 17044  0904  00A1               	movwf	(printf@f^(0+128)+1)
 17045  0905  3186  264A  3189   	fcall	_printf
 17046                           
 17047                           ;main.c: 242: calcHeaterPins();
 17048  0908  3197  2712  3189   	fcall	_calcHeaterPins
 17049                           
 17050                           ;main.c: 243: do { LATCbits.LATC1 = 1; } while(0);
 17051  090B  0022               	movlb	2	; select bank2
 17052  090C  148E               	bsf	14,1	;volatile
 17053                           
 17054                           ;main.c: 244: LEDsOn(first_top, 1);
 17055  090D  0855               	movf	(_first_top+3)^(0+256),w
 17056  090E  0020               	movlb	0	; select bank0
 17057  090F  00C7               	movwf	LEDsOn@LEDpins+3
 17058  0910  0022               	movlb	2	; select bank2
 17059  0911  0854               	movf	(_first_top+2)^(0+256),w
 17060  0912  0020               	movlb	0	; select bank0
 17061  0913  00C6               	movwf	LEDsOn@LEDpins+2
 17062  0914  0022               	movlb	2	; select bank2
 17063  0915  0853               	movf	(_first_top+1)^(0+256),w
 17064  0916  0020               	movlb	0	; select bank0
 17065  0917  00C5               	movwf	LEDsOn@LEDpins+1
 17066  0918  0022               	movlb	2	; select bank2
 17067  0919  0852               	movf	_first_top^(0+256),w
 17068  091A  0020               	movlb	0	; select bank0
 17069  091B  00C4               	movwf	LEDsOn@LEDpins
 17070  091C  3001               	movlw	1
 17071  091D  00C8               	movwf	LEDsOn@topOrBottom
 17072  091E  3000               	movlw	0
 17073  091F  00C9               	movwf	LEDsOn@topOrBottom+1
 17074  0920  3193  23CC  3189   	fcall	_LEDsOn
 17075                           
 17076                           ;main.c: 245: LEDsOn(first_bottom,2);
 17077  0923  0022               	movlb	2	; select bank2
 17078  0924  0859               	movf	(_first_bottom+3)^(0+256),w
 17079  0925  0020               	movlb	0	; select bank0
 17080  0926  00C7               	movwf	LEDsOn@LEDpins+3
 17081  0927  0022               	movlb	2	; select bank2
 17082  0928  0858               	movf	(_first_bottom+2)^(0+256),w
 17083  0929  0020               	movlb	0	; select bank0
 17084  092A  00C6               	movwf	LEDsOn@LEDpins+2
 17085  092B  0022               	movlb	2	; select bank2
 17086  092C  0857               	movf	(_first_bottom+1)^(0+256),w
 17087  092D  0020               	movlb	0	; select bank0
 17088  092E  00C5               	movwf	LEDsOn@LEDpins+1
 17089  092F  0022               	movlb	2	; select bank2
 17090  0930  0856               	movf	_first_bottom^(0+256),w
 17091  0931  0020               	movlb	0	; select bank0
 17092  0932  00C4               	movwf	LEDsOn@LEDpins
 17093  0933  3002               	movlw	2
 17094  0934  00C8               	movwf	LEDsOn@topOrBottom
 17095  0935  3000               	movlw	0
 17096  0936  00C9               	movwf	LEDsOn@topOrBottom+1
 17097  0937  3193  23CC  3189   	fcall	_LEDsOn
 17098                           
 17099                           ;main.c: 246: do { LATCbits.LATC1 = 0; } while(0);
 17100  093A  0022               	movlb	2	; select bank2
 17101  093B  108E               	bcf	14,1	;volatile
 17102                           
 17103                           ;main.c: 247: for(int t=0; t<heater_pre_time_ms; t++) _delay((unsigned long)((1)*(100000
      +                          0/4000.0)));
 17104  093C  0021               	movlb	1	; select bank1
 17105  093D  01C4               	clrf	doMove@t^(0+128)
 17106  093E  01C5               	clrf	(doMove@t+1)^(0+128)
 17107  093F                     l1086:	
 17108  093F  0845               	movf	(doMove@t+1)^(0+128),w
 17109  0940  3A80               	xorlw	128
 17110  0941  00C3               	movwf	??_doMove^(0+128)
 17111  0942  086F               	movf	(_heater_pre_time_ms+1)^(0+128),w
 17112  0943  3A80               	xorlw	128
 17113  0944  0243               	subwf	??_doMove^(0+128),w
 17114  0945  1D03               	skipz
 17115  0946  2949               	goto	u7825
 17116  0947  086E               	movf	_heater_pre_time_ms^(0+128),w
 17117  0948  0244               	subwf	doMove@t^(0+128),w
 17118  0949                     u7825:	
 17119  0949  1803               	btfsc	3,0
 17120  094A  2955               	goto	l7838
 17121  094B  3053               	movlw	83
 17122  094C                     u8857:	
 17123  094C  0B89               	decfsz	9,f
 17124  094D  294C               	goto	u8857
 17125  094E  0000               	nop
 17126  094F  3001               	movlw	1
 17127  0950  0021               	movlb	1	; select bank1
 17128  0951  07C4               	addwf	doMove@t^(0+128),f
 17129  0952  3000               	movlw	0
 17130  0953  3DC5               	addwfc	(doMove@t+1)^(0+128),f
 17131  0954  293F               	goto	l1086
 17132  0955                     l7838:	
 17133                           
 17134                           ;main.c: 248: TMR2_StartTimer();
 17135  0955  31A3  235A  3189   	fcall	_TMR2_StartTimer
 17136                           
 17137                           ;main.c: 249: TMR0_StartTimer();
 17138  0958  31A3  2357  3189   	fcall	_TMR0_StartTimer
 17139                           
 17140                           ;main.c: 251: drv_write_DC(drv_peak_val, piezo_on_time_ms);
 17141  095B  0022               	movlb	2	; select bank2
 17142  095C  086B               	movf	(_drv_peak_val+1)^(0+256),w
 17143  095D  0021               	movlb	1	; select bank1
 17144  095E  00BB               	movwf	(drv_write_DC@val+1)^(0+128)
 17145  095F  0022               	movlb	2	; select bank2
 17146  0960  086A               	movf	_drv_peak_val^(0+256),w
 17147  0961  0021               	movlb	1	; select bank1
 17148  0962  00BA               	movwf	drv_write_DC@val^(0+128)
 17149  0963  086B               	movf	(_piezo_on_time_ms+1)^(0+128),w
 17150  0964  00BD               	movwf	(drv_write_DC@duration_ms+1)^(0+128)
 17151  0965  086A               	movf	_piezo_on_time_ms^(0+128),w
 17152  0966  00BC               	movwf	drv_write_DC@duration_ms^(0+128)
 17153  0967  319D  25AD  3189   	fcall	_drv_write_DC
 17154                           
 17155                           ;main.c: 253: for(int t=0; t<heater_post_time_ms; t++) _delay((unsigned long)((1)*(10000
      +                          00/4000.0)));
 17156  096A  0021               	movlb	1	; select bank1
 17157  096B  01C6               	clrf	doMove@t_1560^(0+128)
 17158  096C  01C7               	clrf	(doMove@t_1560+1)^(0+128)
 17159  096D                     l1089:	
 17160  096D  0847               	movf	(doMove@t_1560+1)^(0+128),w
 17161  096E  3A80               	xorlw	128
 17162  096F  00C3               	movwf	??_doMove^(0+128)
 17163  0970  086D               	movf	(_heater_post_time_ms+1)^(0+128),w
 17164  0971  3A80               	xorlw	128
 17165  0972  0243               	subwf	??_doMove^(0+128),w
 17166  0973  1D03               	skipz
 17167  0974  2977               	goto	u7835
 17168  0975  086C               	movf	_heater_post_time_ms^(0+128),w
 17169  0976  0246               	subwf	doMove@t_1560^(0+128),w
 17170  0977                     u7835:	
 17171  0977  1803               	btfsc	3,0
 17172  0978  2983               	goto	l1092
 17173  0979  3053               	movlw	83
 17174  097A                     u8867:	
 17175  097A  0B89               	decfsz	9,f
 17176  097B  297A               	goto	u8867
 17177  097C  0000               	nop
 17178  097D  3001               	movlw	1
 17179  097E  0021               	movlb	1	; select bank1
 17180  097F  07C6               	addwf	doMove@t_1560^(0+128),f
 17181  0980  3000               	movlw	0
 17182  0981  3DC7               	addwfc	(doMove@t_1560+1)^(0+128),f
 17183  0982  296D               	goto	l1089
 17184  0983                     l1092:	
 17185                           ;main.c: 255: do { LATCbits.LATC1 = 1; } while(0);
 17186                           
 17187  0983  0022               	movlb	2	; select bank2
 17188  0984  148E               	bsf	14,1	;volatile
 17189                           
 17190                           ;main.c: 257: return 0;
 17191  0985  0021               	movlb	1	; select bank1
 17192  0986  01C1               	clrf	?_doMove^(0+128)
 17193  0987  01C2               	clrf	(?_doMove+1)^(0+128)
 17194  0988  0008               	return
 17195  0989                     __end_of_doMove:	
 17196                           
 17197                           	psect	text54
 17198  1DAD                     __ptext54:	
 17199 ;; *************** function _drv_write_DC *****************
 17200 ;; Defined at:
 17201 ;;		line 106 in file "drv2665.c"
 17202 ;; Parameters:    Size  Location     Type
 17203 ;;  val             2   26[BANK1 ] int 
 17204 ;;  duration_ms     2   28[BANK1 ] int 
 17205 ;; Auto vars:     Size  Location     Type
 17206 ;;  i               2   31[BANK1 ] int 
 17207 ;; Return value:  Size  Location     Type
 17208 ;;                  1    wreg      void 
 17209 ;; Registers used:
 17210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17211 ;; Tracked objects:
 17212 ;;		On entry : 0/0
 17213 ;;		On exit  : 0/0
 17214 ;;		Unchanged: 0/0
 17215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17216 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17217 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17218 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17219 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17220 ;;Total ram usage:        7 bytes
 17221 ;; Hardware stack levels used:    1
 17222 ;; Hardware stack levels required when called:   14
 17223 ;; This function calls:
 17224 ;;		___awdiv
 17225 ;;		_drv_write
 17226 ;;		_fifo_check
 17227 ;;		_printf
 17228 ;; This function is called by:
 17229 ;;		_doMove
 17230 ;; This function uses a non-reentrant model
 17231 ;;
 17232                           
 17233                           
 17234                           ;psect for function _drv_write_DC
 17235  1DAD                     _drv_write_DC:	
 17236                           
 17237                           ;drv2665.c: 108: drv_write(0x0b, 0x00);
 17238                           
 17239                           ;incstack = 0
 17240 ;; hardware stack exceeded
 17241                           ; Regs used in _drv_write_DC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17242  1DAD  0020               	movlb	0	; select bank0
 17243  1DAE  01C9               	clrf	drv_write@data
 17244  1DAF  300B               	movlw	11
 17245  1DB0  31A7  27DC  319D   	fcall	_drv_write
 17246                           
 17247                           ;drv2665.c: 109: for(int i=0;i<duration_ms/5; i++){
 17248  1DB3  0021               	movlb	1	; select bank1
 17249  1DB4  01BF               	clrf	drv_write_DC@i^(0+128)
 17250  1DB5  01C0               	clrf	(drv_write_DC@i+1)^(0+128)
 17251  1DB6                     l7604:	
 17252  1DB6  3005               	movlw	5
 17253  1DB7  0020               	movlb	0	; select bank0
 17254  1DB8  00B1               	movwf	___awdiv@divisor
 17255  1DB9  3000               	movlw	0
 17256  1DBA  00B2               	movwf	___awdiv@divisor+1
 17257  1DBB  0021               	movlb	1	; select bank1
 17258  1DBC  083D               	movf	(drv_write_DC@duration_ms+1)^(0+128),w
 17259  1DBD  0020               	movlb	0	; select bank0
 17260  1DBE  00B4               	movwf	___awdiv@dividend+1
 17261  1DBF  0021               	movlb	1	; select bank1
 17262  1DC0  083C               	movf	drv_write_DC@duration_ms^(0+128),w
 17263  1DC1  0020               	movlb	0	; select bank0
 17264  1DC2  00B3               	movwf	___awdiv@dividend
 17265  1DC3  319D  25FD  319D   	fcall	___awdiv
 17266  1DC6  0021               	movlb	1	; select bank1
 17267  1DC7  0840               	movf	(drv_write_DC@i+1)^(0+128),w
 17268  1DC8  3A80               	xorlw	128
 17269  1DC9  00BE               	movwf	??_drv_write_DC^(0+128)
 17270  1DCA  0020               	movlb	0	; select bank0
 17271  1DCB  0832               	movf	?___awdiv+1,w
 17272  1DCC  3A80               	xorlw	128
 17273  1DCD  0021               	movlb	1	; select bank1
 17274  1DCE  023E               	subwf	??_drv_write_DC^(0+128),w
 17275  1DCF  1D03               	skipz
 17276  1DD0  2DD5               	goto	u7445
 17277  1DD1  0020               	movlb	0	; select bank0
 17278  1DD2  0831               	movf	?___awdiv,w
 17279  1DD3  0021               	movlb	1	; select bank1
 17280  1DD4  023F               	subwf	drv_write_DC@i^(0+128),w
 17281  1DD5                     u7445:	
 17282  1DD5  1803               	btfsc	3,0
 17283  1DD6  2DEA               	goto	l7606
 17284                           
 17285                           ;drv2665.c: 110: drv_write(0x0b, val);
 17286  1DD7  0021               	movlb	1	; select bank1
 17287  1DD8  083A               	movf	drv_write_DC@val^(0+128),w
 17288  1DD9  00BE               	movwf	??_drv_write_DC^(0+128)
 17289  1DDA  083E               	movf	??_drv_write_DC^(0+128),w
 17290  1DDB  0020               	movlb	0	; select bank0
 17291  1DDC  00C9               	movwf	drv_write@data
 17292  1DDD  300B               	movlw	11
 17293  1DDE  31A7  27DC  319D   	fcall	_drv_write
 17294                           
 17295                           ;drv2665.c: 111: _delay((unsigned long)((20)*(1000000/4000000.0)));
 17296  1DE1  3200               	nop2	;2 cycle nop
 17297  1DE2  3200               	nop2	;2 cycle nop
 17298  1DE3  0000               	nop
 17299  1DE4  3001               	movlw	1
 17300  1DE5  0021               	movlb	1	; select bank1
 17301  1DE6  07BF               	addwf	drv_write_DC@i^(0+128),f
 17302  1DE7  3000               	movlw	0
 17303  1DE8  3DC0               	addwfc	(drv_write_DC@i+1)^(0+128),f
 17304  1DE9  2DB6               	goto	l7604
 17305  1DEA                     l7606:	
 17306                           
 17307                           ;drv2665.c: 113: }
 17308                           ;drv2665.c: 116: if(!fifo_check()) printf("fifo not ready!\n");
 17309  1DEA  31A5  252B  319D   	fcall	_fifo_check
 17310  1DED  1803               	btfsc	3,0
 17311  1DEE  2DF7               	goto	l1307
 17312  1DEF  30D7               	movlw	low (STR_55| (0+32768))
 17313  1DF0  0021               	movlb	1	; select bank1
 17314  1DF1  00A0               	movwf	printf@f^(0+128)
 17315  1DF2  30A8               	movlw	high (STR_55| (0+32768))
 17316  1DF3  00A1               	movwf	(printf@f^(0+128)+1)
 17317  1DF4  3186  264A  319D   	fcall	_printf
 17318  1DF7                     l1307:	
 17319                           
 17320                           ;drv2665.c: 118: drv_write(0x0b, 0x00);
 17321  1DF7  0020               	movlb	0	; select bank0
 17322  1DF8  01C9               	clrf	drv_write@data
 17323  1DF9  300B               	movlw	11
 17324  1DFA  31A7  27DC         	fcall	_drv_write
 17325  1DFC  0008               	return
 17326  1DFD                     __end_of_drv_write_DC:	
 17327                           
 17328                           	psect	text55
 17329  252B                     __ptext55:	
 17330 ;; *************** function _fifo_check *****************
 17331 ;; Defined at:
 17332 ;;		line 124 in file "drv2665.c"
 17333 ;; Parameters:    Size  Location     Type
 17334 ;;		None
 17335 ;; Auto vars:     Size  Location     Type
 17336 ;;  reply           1   25[BANK1 ] unsigned char 
 17337 ;; Return value:  Size  Location     Type
 17338 ;;		None               void
 17339 ;; Registers used:
 17340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17341 ;; Tracked objects:
 17342 ;;		On entry : 0/0
 17343 ;;		On exit  : 0/0
 17344 ;;		Unchanged: 0/0
 17345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17347 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17348 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17349 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17350 ;;Total ram usage:        2 bytes
 17351 ;; Hardware stack levels used:    1
 17352 ;; Hardware stack levels required when called:   13
 17353 ;; This function calls:
 17354 ;;		_drv_read
 17355 ;; This function is called by:
 17356 ;;		_drv_write_DC
 17357 ;; This function uses a non-reentrant model
 17358 ;;
 17359                           
 17360                           
 17361                           ;psect for function _fifo_check
 17362  252B                     _fifo_check:	
 17363                           
 17364                           ;drv2665.c: 126: uint8_t reply;
 17365                           ;drv2665.c: 127: reply = drv_read(0x00);
 17366                           
 17367                           ;incstack = 0
 17368 ;; hardware stack exceeded
 17369                           ; Regs used in _fifo_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17370  252B  3000               	movlw	0
 17371  252C  319B  23F0  31A5   	fcall	_drv_read
 17372  252F  0020               	movlb	0	; select bank0
 17373  2530  0849               	movf	?_drv_read,w
 17374  2531  00CD               	movwf	??_fifo_check
 17375  2532  084D               	movf	??_fifo_check,w
 17376  2533  0021               	movlb	1	; select bank1
 17377  2534  00B9               	movwf	fifo_check@reply^(0+128)
 17378                           
 17379                           ;drv2665.c: 129: return !(reply & 0x01);
 17380  2535  1C39               	btfss	fifo_check@reply^(0+128),0
 17381  2536  2D39               	goto	l7470
 17382  2537  1003               	clrc
 17383  2538  0008               	return
 17384  2539                     l7470:	
 17385  2539  1403               	setc
 17386  253A  0008               	return
 17387  253B                     __end_of_fifo_check:	
 17388                           
 17389                           	psect	text56
 17390  1BF0                     __ptext56:	
 17391 ;; *************** function _drv_read *****************
 17392 ;; Defined at:
 17393 ;;		line 84 in file "drv2665.c"
 17394 ;; Parameters:    Size  Location     Type
 17395 ;;  reg             1    wreg     unsigned char 
 17396 ;; Auto vars:     Size  Location     Type
 17397 ;;  reg             1   23[BANK1 ] unsigned char 
 17398 ;;  buff            1   24[BANK1 ] unsigned char 
 17399 ;; Return value:  Size  Location     Type
 17400 ;;                  2   41[BANK0 ] int 
 17401 ;; Registers used:
 17402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17403 ;; Tracked objects:
 17404 ;;		On entry : 0/0
 17405 ;;		On exit  : 0/0
 17406 ;;		Unchanged: 0/0
 17407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17408 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17409 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17410 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17411 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17412 ;;Total ram usage:        6 bytes
 17413 ;; Hardware stack levels used:    1
 17414 ;; Hardware stack levels required when called:   12
 17415 ;; This function calls:
 17416 ;;		_i2c_masterOperation
 17417 ;;		_i2c_setBuffer
 17418 ;;		_printf
 17419 ;; This function is called by:
 17420 ;;		_commCheck
 17421 ;;		_fifo_check
 17422 ;; This function uses a non-reentrant model
 17423 ;;
 17424                           
 17425                           
 17426                           ;psect for function _drv_read
 17427  1BF0                     _drv_read:	
 17428                           
 17429                           ;incstack = 0
 17430 ;; hardware stack exceeded
 17431                           ; Regs used in _drv_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17432                           ;drv_read@reg stored from wreg
 17433  1BF0  0021               	movlb	1	; select bank1
 17434  1BF1  00B7               	movwf	drv_read@reg^(0+128)
 17435                           
 17436                           ;drv2665.c: 86: char buff=0;
 17437  1BF2  01B8               	clrf	drv_read@buff^(0+128)
 17438                           
 17439                           ;drv2665.c: 89: i2c_setBuffer(&reg, 1);
 17440  1BF3  30B7               	movlw	low drv_read@reg
 17441  1BF4  0020               	movlb	0	; select bank0
 17442  1BF5  00B1               	movwf	i2c_setBuffer@buffer
 17443  1BF6  3000               	movlw	high drv_read@reg
 17444  1BF7  00B2               	movwf	i2c_setBuffer@buffer+1
 17445  1BF8  3001               	movlw	1
 17446  1BF9  00B3               	movwf	i2c_setBuffer@bufferSize
 17447  1BFA  3000               	movlw	0
 17448  1BFB  00B4               	movwf	i2c_setBuffer@bufferSize+1
 17449  1BFC  31A5  25AD  319B   	fcall	_i2c_setBuffer
 17450                           
 17451                           ;drv2665.c: 90: if(i2c_masterOperation(0) != I2C_NOERR)
 17452  1BFF  3000               	movlw	0
 17453  1C00  31A7  27B8  319B   	fcall	_i2c_masterOperation
 17454  1C03  3A00               	xorlw	0
 17455  1C04  1903               	skipnz
 17456  1C05  2C0E               	goto	l7420
 17457                           
 17458                           ;drv2665.c: 91: printf("drv_write error!\n");
 17459  1C06  30A3               	movlw	low (STR_52| (0+32768))
 17460  1C07  0021               	movlb	1	; select bank1
 17461  1C08  00A0               	movwf	printf@f^(0+128)
 17462  1C09  30A8               	movlw	high (STR_52| (0+32768))
 17463  1C0A  00A1               	movwf	(printf@f^(0+128)+1)
 17464  1C0B  3186  264A  319B   	fcall	_printf
 17465  1C0E                     l7420:	
 17466                           
 17467                           ;drv2665.c: 94: _delay((unsigned long)((100)*(1000000/4000000.0)));
 17468  1C0E  3008               	movlw	8
 17469  1C0F                     u8877:	
 17470  1C0F  0B89               	decfsz	9,f
 17471  1C10  2C0F               	goto	u8877
 17472  1C11  0000               	nop
 17473                           
 17474                           ;drv2665.c: 97: i2c_setBuffer(&buff, 1);
 17475  1C12  30B8               	movlw	low drv_read@buff
 17476  1C13  0020               	movlb	0	; select bank0
 17477  1C14  00B1               	movwf	i2c_setBuffer@buffer
 17478  1C15  3000               	movlw	high drv_read@buff
 17479  1C16  00B2               	movwf	i2c_setBuffer@buffer+1
 17480  1C17  3001               	movlw	1
 17481  1C18  00B3               	movwf	i2c_setBuffer@bufferSize
 17482  1C19  3000               	movlw	0
 17483  1C1A  00B4               	movwf	i2c_setBuffer@bufferSize+1
 17484  1C1B  31A5  25AD  319B   	fcall	_i2c_setBuffer
 17485                           
 17486                           ;drv2665.c: 99: if(i2c_masterOperation(1) != I2C_NOERR)
 17487  1C1E  3001               	movlw	1
 17488  1C1F  31A7  27B8  319B   	fcall	_i2c_masterOperation
 17489  1C22  3A00               	xorlw	0
 17490  1C23  1903               	skipnz
 17491  1C24  2C2C               	goto	l7428
 17492                           
 17493                           ;drv2665.c: 100: printf("drv_read error!\n");
 17494  1C25  30C6               	movlw	low (STR_54| (0+32768))
 17495  1C26  0021               	movlb	1	; select bank1
 17496  1C27  00A0               	movwf	printf@f^(0+128)
 17497  1C28  30A8               	movlw	high (STR_54| (0+32768))
 17498  1C29  00A1               	movwf	(printf@f^(0+128)+1)
 17499  1C2A  3186  264A         	fcall	_printf
 17500  1C2C                     l7428:	
 17501                           
 17502                           ;drv2665.c: 102: return buff;
 17503  1C2C  0021               	movlb	1	; select bank1
 17504  1C2D  0838               	movf	drv_read@buff^(0+128),w
 17505  1C2E  0020               	movlb	0	; select bank0
 17506  1C2F  00CB               	movwf	??_drv_read
 17507  1C30  01CC               	clrf	??_drv_read+1
 17508  1C31  084B               	movf	??_drv_read,w
 17509  1C32  00C9               	movwf	?_drv_read
 17510  1C33  084C               	movf	??_drv_read+1,w
 17511  1C34  00CA               	movwf	?_drv_read+1
 17512  1C35  0008               	return
 17513  1C36                     __end_of_drv_read:	
 17514                           
 17515                           	psect	text57
 17516  27DC                     __ptext57:	
 17517 ;; *************** function _drv_write *****************
 17518 ;; Defined at:
 17519 ;;		line 57 in file "drv2665.c"
 17520 ;; Parameters:    Size  Location     Type
 17521 ;;  reg             1    wreg     unsigned char 
 17522 ;;  data            1   41[BANK0 ] unsigned char 
 17523 ;; Auto vars:     Size  Location     Type
 17524 ;;  reg             1   43[BANK0 ] unsigned char 
 17525 ;;  buff            2   44[BANK0 ] unsigned char [2]
 17526 ;; Return value:  Size  Location     Type
 17527 ;;                  1    wreg      void 
 17528 ;; Registers used:
 17529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17530 ;; Tracked objects:
 17531 ;;		On entry : 0/0
 17532 ;;		On exit  : 0/0
 17533 ;;		Unchanged: 0/0
 17534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17535 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17536 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17537 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17538 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17539 ;;Total ram usage:        5 bytes
 17540 ;; Hardware stack levels used:    1
 17541 ;; Hardware stack levels required when called:   12
 17542 ;; This function calls:
 17543 ;;		_i2c_masterOperation
 17544 ;;		_i2c_setBuffer
 17545 ;;		_printf
 17546 ;; This function is called by:
 17547 ;;		_setDrvGain
 17548 ;;		_drv_init
 17549 ;;		_drv_reset
 17550 ;;		_drv_write_DC
 17551 ;;		_drv_outputSine
 17552 ;;		_drv_outputWave
 17553 ;; This function uses a non-reentrant model
 17554 ;;
 17555                           
 17556                           
 17557                           ;psect for function _drv_write
 17558  27DC                     _drv_write:	
 17559                           
 17560                           ;incstack = 0
 17561                           ; Regs used in _drv_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17562                           ;drv_write@reg stored from wreg
 17563  27DC  0020               	movlb	0	; select bank0
 17564  27DD  00CB               	movwf	drv_write@reg
 17565                           
 17566                           ;drv2665.c: 62: uint8_t buff[2];
 17567                           ;drv2665.c: 64: buff[0] = reg;
 17568  27DE  084B               	movf	drv_write@reg,w
 17569  27DF  00CA               	movwf	??_drv_write
 17570  27E0  084A               	movf	??_drv_write,w
 17571  27E1  00CC               	movwf	drv_write@buff
 17572                           
 17573                           ;drv2665.c: 65: buff[1] = data;
 17574  27E2  0849               	movf	drv_write@data,w
 17575  27E3  00CA               	movwf	??_drv_write
 17576  27E4  084A               	movf	??_drv_write,w
 17577  27E5  00CD               	movwf	drv_write@buff+1
 17578                           
 17579                           ;drv2665.c: 68: i2c_setBuffer(buff, 2);
 17580  27E6  304C               	movlw	low drv_write@buff
 17581  27E7  00B1               	movwf	i2c_setBuffer@buffer
 17582  27E8  3000               	movlw	high drv_write@buff
 17583  27E9  00B2               	movwf	i2c_setBuffer@buffer+1
 17584  27EA  3002               	movlw	2
 17585  27EB  00B3               	movwf	i2c_setBuffer@bufferSize
 17586  27EC  3000               	movlw	0
 17587  27ED  00B4               	movwf	i2c_setBuffer@bufferSize+1
 17588  27EE  31A5  25AD  31A7   	fcall	_i2c_setBuffer
 17589                           
 17590                           ;drv2665.c: 69: if(i2c_masterOperation(0) != I2C_NOERR)
 17591  27F1  3000               	movlw	0
 17592  27F2  31A7  27B8  31A7   	fcall	_i2c_masterOperation
 17593  27F5  3A00               	xorlw	0
 17594  27F6  1903               	skipnz
 17595  27F7  0008               	return
 17596                           
 17597                           ;drv2665.c: 70: printf("drv_write error!\n");
 17598  27F8  30A3               	movlw	low (STR_52| (0+32768))
 17599  27F9  0021               	movlb	1	; select bank1
 17600  27FA  00A0               	movwf	printf@f^(0+128)
 17601  27FB  30A8               	movlw	high (STR_52| (0+32768))
 17602  27FC  00A1               	movwf	(printf@f^(0+128)+1)
 17603  27FD  3186  264A         	fcall	_printf
 17604  27FF  0008               	return
 17605  2800                     __end_of_drv_write:	
 17606                           
 17607                           	psect	text58
 17608  064A                     __ptext58:	
 17609 ;; *************** function _printf *****************
 17610 ;; Defined at:
 17611 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 17612 ;; Parameters:    Size  Location     Type
 17613 ;;  f               2    0[BANK1 ] PTR const unsigned char 
 17614 ;;		 -> STR_81(23), STR_80(3), STR_79(17), STR_55(17), 
 17615 ;;		 -> STR_54(17), STR_53(18), STR_52(18), STR_51(17), 
 17616 ;;		 -> STR_50(28), STR_49(9), STR_48(9), STR_47(25), 
 17617 ;;		 -> STR_46(11), STR_45(8), STR_44(8), STR_43(8), 
 17618 ;;		 -> STR_42(31), STR_41(11), STR_40(8), STR_39(8), 
 17619 ;;		 -> STR_38(8), STR_37(26), STR_36(30), STR_35(2), 
 17620 ;;		 -> STR_34(2), STR_33(2), STR_32(2), STR_31(4), 
 17621 ;;		 -> STR_30(2), STR_29(4), STR_28(3), STR_27(3), 
 17622 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 17623 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(3), 
 17624 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(4), 
 17625 ;;		 -> STR_14(3), STR_13(16), STR_12(11), STR_11(16), 
 17626 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(8), 
 17627 ;;		 -> STR_6(13), STR_5(16), STR_4(15), STR_3(16), 
 17628 ;;		 -> STR_2(2), STR_1(4), 
 17629 ;; Auto vars:     Size  Location     Type
 17630 ;;  val             4   16[BANK1 ] unsigned long 
 17631 ;;  tmpval          4    0        struct .
 17632 ;;  prec            2   14[BANK1 ] int 
 17633 ;;  cp              2    0        PTR const unsigned char 
 17634 ;;  len             2    0        unsigned int 
 17635 ;;  c               1   22[BANK1 ] char 
 17636 ;;  ap              1   21[BANK1 ] PTR void [1]
 17637 ;;		 -> ?_printf(2), 
 17638 ;;  flag            1   20[BANK1 ] unsigned char 
 17639 ;; Return value:  Size  Location     Type
 17640 ;;                  2    0[BANK1 ] int 
 17641 ;; Registers used:
 17642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17643 ;; Tracked objects:
 17644 ;;		On entry : 0/0
 17645 ;;		On exit  : 0/0
 17646 ;;		Unchanged: 0/0
 17647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17648 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17649 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17650 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17651 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17652 ;;Total ram usage:       23 bytes
 17653 ;; Hardware stack levels used:    1
 17654 ;; Hardware stack levels required when called:    8
 17655 ;; This function calls:
 17656 ;;		___lldiv
 17657 ;;		___llmod
 17658 ;;		_putch
 17659 ;; This function is called by:
 17660 ;;		_LED_test_openshort
 17661 ;;		_LED_getData
 17662 ;;		_main
 17663 ;;		_main_initialize
 17664 ;;		_doMove
 17665 ;;		_startRelMove
 17666 ;;		_startAbsMove
 17667 ;;		_doAbsMove
 17668 ;;		_doRelMove
 17669 ;;		_zeroPosition
 17670 ;;		_getPosition
 17671 ;;		_setDrvPeak
 17672 ;;		_setDrvGain
 17673 ;;		_setDrvPiezoOnTime
 17674 ;;		_setHeaterPreTime
 17675 ;;		_setHeaterPostTime
 17676 ;;		_setLEDBrightnessRange
 17677 ;;		_setLEDPwr
 17678 ;;		_setHeaterToggle
 17679 ;;		_setActive
 17680 ;;		_setMoveMask
 17681 ;;		_getActive
 17682 ;;		_getMoveMask
 17683 ;;		_getMotionStatus
 17684 ;;		_commCheck
 17685 ;;		_drv_init
 17686 ;;		_drv_write
 17687 ;;		_drv_read
 17688 ;;		_drv_write_DC
 17689 ;;		_execCmd
 17690 ;;		_stop
 17691 ;; This function uses a non-reentrant model
 17692 ;;
 17693                           
 17694                           
 17695                           ;psect for function _printf
 17696  064A                     _printf:	
 17697                           
 17698                           ;doprnt.c: 466: va_list ap;
 17699                           ;doprnt.c: 499: signed char c;
 17700                           ;doprnt.c: 504: int prec;
 17701                           ;doprnt.c: 508: unsigned char flag;
 17702                           ;doprnt.c: 523: union {
 17703                           ;doprnt.c: 524: unsigned long vd;
 17704                           ;doprnt.c: 525: double integ;
 17705                           ;doprnt.c: 526: } tmpval;
 17706                           ;doprnt.c: 528: unsigned long val;
 17707                           ;doprnt.c: 529: unsigned len;
 17708                           ;doprnt.c: 530: const char * cp;
 17709                           ;doprnt.c: 533: *ap = __va_start();
 17710                           
 17711                           ;incstack = 0
 17712                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17713  064A  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 17714  064B  0021               	movlb	1	; select bank1
 17715  064C  00A8               	movwf	??_printf^(0+128)
 17716  064D  0828               	movf	??_printf^(0+128),w
 17717  064E  00B5               	movwf	printf@ap^(0+128)
 17718  064F                     l7358:	
 17719                           ;doprnt.c: 536: while(c = *f++) {
 17720                           
 17721  064F  0021               	movlb	1	; select bank1
 17722  0650  0821               	movf	(printf@f+1)^(0+128),w
 17723  0651  00A9               	movwf	(??_printf^(0+128)+1)
 17724  0652  0820               	movf	printf@f^(0+128),w
 17725  0653  00A8               	movwf	??_printf^(0+128)
 17726  0654  0AA0               	incf	printf@f^(0+128),f
 17727  0655  1903               	skipnz
 17728  0656  0AA1               	incf	(printf@f+1)^(0+128),f
 17729  0657  0828               	movf	??_printf^(0+128),w
 17730  0658  0084               	movwf	4
 17731  0659  0829               	movf	(??_printf+1)^(0+128),w
 17732  065A  0085               	movwf	5
 17733  065B  0800               	movf	0,w	;code access
 17734  065C  00AA               	movwf	(??_printf+2)^(0+128)
 17735  065D  082A               	movf	(??_printf+2)^(0+128),w
 17736  065E  00B6               	movwf	printf@c^(0+128)
 17737  065F  0836               	movf	printf@c^(0+128),w
 17738  0660  1903               	btfsc	3,2
 17739  0661  0008               	return
 17740                           
 17741                           ;doprnt.c: 538: if(c != '%')
 17742  0662  3025               	movlw	37
 17743  0663  0636               	xorwf	printf@c^(0+128),w
 17744  0664  1903               	btfsc	3,2
 17745  0665  2E6B               	goto	l7304
 17746                           
 17747                           ;doprnt.c: 540: {
 17748                           ;doprnt.c: 541: (putch(c) );
 17749  0666  0836               	movf	printf@c^(0+128),w
 17750  0667  31A3  23DC  3186   	fcall	_putch
 17751                           
 17752                           ;doprnt.c: 542: continue;
 17753  066A  2E4F               	goto	l7358
 17754  066B                     l7304:	
 17755                           
 17756                           ;doprnt.c: 543: }
 17757                           ;doprnt.c: 548: flag = 0;
 17758  066B  0021               	movlb	1	; select bank1
 17759  066C  01B4               	clrf	printf@flag^(0+128)
 17760                           
 17761                           ;doprnt.c: 635: switch(c = *f++) {
 17762                           
 17763                           ;doprnt.c: 633: loop:
 17764  066D  2E72               	goto	l7308
 17765  066E                     l1455:	
 17766                           ;doprnt.c: 641: case 'l':
 17767                           
 17768                           ;doprnt.c: 638: goto alldone;
 17769                           
 17770                           ;doprnt.c: 637: case 0:
 17771                           
 17772                           
 17773                           ;doprnt.c: 643: flag |= 0x10;
 17774  066E  1634               	bsf	printf@flag^(0+128),4
 17775                           
 17776                           ;doprnt.c: 644: goto loop;
 17777  066F  2E72               	goto	l7308
 17778  0670                     l1460:	
 17779                           ;doprnt.c: 817: case 'u':
 17780                           
 17781                           ;doprnt.c: 813: continue;
 17782                           
 17783                           ;doprnt.c: 802: default:
 17784                           
 17785                           ;doprnt.c: 698: case 'i':
 17786                           ;doprnt.c: 699: break;
 17787                           
 17788                           ;doprnt.c: 697: case 'd':
 17789                           
 17790                           
 17791                           ;doprnt.c: 818: flag |= 0x40;
 17792  0670  1734               	bsf	printf@flag^(0+128),6
 17793                           
 17794                           ;doprnt.c: 822: }
 17795                           
 17796                           ;doprnt.c: 819: break;
 17797  0671  2E8F               	goto	l1458
 17798  0672                     l7308:	
 17799  0672  0821               	movf	(printf@f+1)^(0+128),w
 17800  0673  00A9               	movwf	(??_printf^(0+128)+1)
 17801  0674  0820               	movf	printf@f^(0+128),w
 17802  0675  00A8               	movwf	??_printf^(0+128)
 17803  0676  0AA0               	incf	printf@f^(0+128),f
 17804  0677  1903               	skipnz
 17805  0678  0AA1               	incf	(printf@f+1)^(0+128),f
 17806  0679  0828               	movf	??_printf^(0+128),w
 17807  067A  0084               	movwf	4
 17808  067B  0829               	movf	(??_printf+1)^(0+128),w
 17809  067C  0085               	movwf	5
 17810  067D  0800               	movf	0,w	;code access
 17811  067E  00B6               	movwf	printf@c^(0+128)
 17812                           
 17813                           ; Switch size 1, requested type "space"
 17814                           ; Number of cases is 5, Range of values is 0 to 117
 17815                           ; switch strategies available:
 17816                           ; Name         Instructions Cycles
 17817                           ; simple_byte           16     9 (average)
 17818                           ; direct_byte          242     6 (fixed)
 17819                           ; jumptable            260     6 (fixed)
 17820                           ;	Chosen strategy is simple_byte
 17821  067F  3A00               	xorlw	0	; case 0
 17822  0680  1903               	skipnz
 17823  0681  2F7B               	goto	l1476
 17824  0682  3A64               	xorlw	100	; case 100
 17825  0683  1903               	skipnz
 17826  0684  2E8F               	goto	l1458
 17827  0685  3A0D               	xorlw	13	; case 105
 17828  0686  1903               	skipnz
 17829  0687  2E8F               	goto	l1458
 17830  0688  3A05               	xorlw	5	; case 108
 17831  0689  1903               	skipnz
 17832  068A  2E6E               	goto	l1455
 17833  068B  3A19               	xorlw	25	; case 117
 17834  068C  1903               	skipnz
 17835  068D  2E70               	goto	l1460
 17836  068E  2E4F               	goto	l7358
 17837  068F                     l1458:	
 17838                           
 17839                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 17840  068F  1B34               	btfsc	printf@flag^(0+128),6
 17841  0690  2EC6               	goto	l1461
 17842                           
 17843                           ;doprnt.c: 1253: {
 17844                           ;doprnt.c: 1255: if(flag & 0x10)
 17845  0691  1E34               	btfss	printf@flag^(0+128),4
 17846  0692  2EA0               	goto	l7316
 17847                           
 17848                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 17849  0693  0835               	movf	printf@ap^(0+128),w
 17850  0694  0086               	movwf	6
 17851  0695  0187               	clrf	7
 17852  0696  3F40               	moviw [0]fsr1
 17853  0697  00B0               	movwf	printf@val^(0+128)
 17854  0698  3F41               	moviw [1]fsr1
 17855  0699  00B1               	movwf	(printf@val+1)^(0+128)
 17856  069A  3F42               	moviw [2]fsr1
 17857  069B  00B2               	movwf	(printf@val+2)^(0+128)
 17858  069C  3F43               	moviw [3]fsr1
 17859  069D  00B3               	movwf	(printf@val+3)^(0+128)
 17860  069E  3004               	movlw	4
 17861  069F  2EB1               	goto	L32
 17862  06A0                     l7316:	
 17863                           
 17864                           ;doprnt.c: 1257: else
 17865                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 17866  06A0  0835               	movf	printf@ap^(0+128),w
 17867  06A1  0086               	movwf	6
 17868  06A2  0187               	clrf	7
 17869  06A3  3F40               	moviw [0]fsr1
 17870  06A4  00A8               	movwf	??_printf^(0+128)
 17871  06A5  3F41               	moviw [1]fsr1
 17872  06A6  00A9               	movwf	(??_printf^(0+128)+1)
 17873  06A7  0828               	movf	??_printf^(0+128),w
 17874  06A8  00B0               	movwf	printf@val^(0+128)
 17875  06A9  0829               	movf	(??_printf+1)^(0+128),w
 17876  06AA  00B1               	movwf	(printf@val+1)^(0+128)
 17877  06AB  0D89               	rlf	9,f
 17878  06AC  3B89               	subwfb	9,f
 17879  06AD  0989               	comf	9,f
 17880  06AE  00B2               	movwf	(printf@val+2)^(0+128)
 17881  06AF  00B3               	movwf	(printf@val+3)^(0+128)
 17882  06B0  3002               	movlw	2
 17883  06B1                     L32:	
 17884  06B1  00A8               	movwf	??_printf^(0+128)
 17885  06B2  0828               	movf	??_printf^(0+128),w
 17886  06B3  07B5               	addwf	printf@ap^(0+128),f
 17887                           
 17888                           ;doprnt.c: 1261: if((long)val < 0) {
 17889  06B4  1FB3               	btfss	(printf@val+3)^(0+128),7
 17890  06B5  2EE6               	goto	l7334
 17891                           
 17892                           ;doprnt.c: 1262: flag |= 0x03;
 17893  06B6  3003               	movlw	3
 17894  06B7  00A8               	movwf	??_printf^(0+128)
 17895  06B8  0828               	movf	??_printf^(0+128),w
 17896  06B9  04B4               	iorwf	printf@flag^(0+128),f
 17897                           
 17898                           ;doprnt.c: 1263: val = -val;
 17899  06BA  09B0               	comf	printf@val^(0+128),f
 17900  06BB  09B1               	comf	(printf@val+1)^(0+128),f
 17901  06BC  09B2               	comf	(printf@val+2)^(0+128),f
 17902  06BD  09B3               	comf	(printf@val+3)^(0+128),f
 17903  06BE  0AB0               	incf	printf@val^(0+128),f
 17904  06BF  1903               	skipnz
 17905  06C0  0AB1               	incf	(printf@val+1)^(0+128),f
 17906  06C1  1903               	skipnz
 17907  06C2  0AB2               	incf	(printf@val+2)^(0+128),f
 17908  06C3  1903               	skipnz
 17909  06C4  0AB3               	incf	(printf@val+3)^(0+128),f
 17910                           
 17911                           ;doprnt.c: 1264: }
 17912                           ;doprnt.c: 1266: }
 17913  06C5  2EE6               	goto	l7334
 17914  06C6                     l1461:	
 17915                           
 17916                           ;doprnt.c: 1268: else
 17917                           ;doprnt.c: 1273: {
 17918                           ;doprnt.c: 1281: if(flag & 0x10)
 17919  06C6  1E34               	btfss	printf@flag^(0+128),4
 17920  06C7  2ED5               	goto	l7330
 17921                           
 17922                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 17923  06C8  0835               	movf	printf@ap^(0+128),w
 17924  06C9  0086               	movwf	6
 17925  06CA  0187               	clrf	7
 17926  06CB  3F40               	moviw [0]fsr1
 17927  06CC  00B0               	movwf	printf@val^(0+128)
 17928  06CD  3F41               	moviw [1]fsr1
 17929  06CE  00B1               	movwf	(printf@val+1)^(0+128)
 17930  06CF  3F42               	moviw [2]fsr1
 17931  06D0  00B2               	movwf	(printf@val+2)^(0+128)
 17932  06D1  3F43               	moviw [3]fsr1
 17933  06D2  00B3               	movwf	(printf@val+3)^(0+128)
 17934  06D3  3004               	movlw	4
 17935  06D4  2EE3               	goto	L33
 17936  06D5                     l7330:	
 17937                           
 17938                           ;doprnt.c: 1283: else
 17939                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 17940  06D5  0835               	movf	printf@ap^(0+128),w
 17941  06D6  0086               	movwf	6
 17942  06D7  0187               	clrf	7
 17943  06D8  3F40               	moviw [0]fsr1
 17944  06D9  00A8               	movwf	??_printf^(0+128)
 17945  06DA  3F41               	moviw [1]fsr1
 17946  06DB  00A9               	movwf	(??_printf^(0+128)+1)
 17947  06DC  0828               	movf	??_printf^(0+128),w
 17948  06DD  00B0               	movwf	printf@val^(0+128)
 17949  06DE  0829               	movf	(??_printf+1)^(0+128),w
 17950  06DF  00B1               	movwf	(printf@val^(0+128)+1)
 17951  06E0  01B2               	clrf	(printf@val^(0+128)+2)
 17952  06E1  01B3               	clrf	(printf@val^(0+128)+3)
 17953  06E2  3002               	movlw	2
 17954  06E3                     L33:	
 17955  06E3  00A8               	movwf	??_printf^(0+128)
 17956  06E4  0828               	movf	??_printf^(0+128),w
 17957  06E5  07B5               	addwf	printf@ap^(0+128),f
 17958  06E6                     l7334:	
 17959                           
 17960                           ;doprnt.c: 1287: }
 17961                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 17962  06E6  01B6               	clrf	printf@c^(0+128)
 17963  06E7  0AB6               	incf	printf@c^(0+128),f
 17964  06E8  300A               	movlw	10
 17965  06E9  0636               	xorwf	printf@c^(0+128),w
 17966  06EA  1903               	btfsc	3,2
 17967  06EB  2F19               	goto	l7346
 17968  06EC                     l7340:	
 17969                           
 17970                           ;doprnt.c: 1306: if(val < dpowers[c])
 17971  06EC  0836               	movf	printf@c^(0+128),w
 17972  06ED  00A8               	movwf	??_printf^(0+128)
 17973  06EE  01A9               	clrf	(??_printf^(0+128)+1)
 17974  06EF  35A8               	lslf	??_printf^(0+128),f
 17975  06F0  0DA9               	rlf	(??_printf^(0+128)+1),f
 17976  06F1  35A8               	lslf	??_printf^(0+128),f
 17977  06F2  0DA9               	rlf	(??_printf^(0+128)+1),f
 17978  06F3  3000               	movlw	low (_dpowers| (0+32768))
 17979  06F4  0728               	addwf	??_printf^(0+128),w
 17980  06F5  0084               	movwf	4
 17981  06F6  30A0               	movlw	high (_dpowers| (0+32768))
 17982  06F7  3D29               	addwfc	(??_printf+1)^(0+128),w
 17983  06F8  0085               	movwf	5
 17984  06F9  3F00               	moviw [0]fsr0
 17985  06FA  00AA               	movwf	(??_printf+2)^(0+128)
 17986  06FB  3F01               	moviw [1]fsr0
 17987  06FC  00AB               	movwf	((??_printf+2)^(0+128)+1)
 17988  06FD  3F02               	moviw [2]fsr0
 17989  06FE  00AC               	movwf	((??_printf+2)^(0+128)+2)
 17990  06FF  3F03               	moviw [3]fsr0
 17991  0700  00AD               	movwf	((??_printf+2)^(0+128)+3)
 17992  0701  082D               	movf	(??_printf+5)^(0+128),w
 17993  0702  0233               	subwf	(printf@val+3)^(0+128),w
 17994  0703  1D03               	skipz
 17995  0704  2F0F               	goto	u6935
 17996  0705  082C               	movf	(??_printf+4)^(0+128),w
 17997  0706  0232               	subwf	(printf@val+2)^(0+128),w
 17998  0707  1D03               	skipz
 17999  0708  2F0F               	goto	u6935
 18000  0709  082B               	movf	(??_printf+3)^(0+128),w
 18001  070A  0231               	subwf	(printf@val+1)^(0+128),w
 18002  070B  1D03               	skipz
 18003  070C  2F0F               	goto	u6935
 18004  070D  082A               	movf	(??_printf+2)^(0+128),w
 18005  070E  0230               	subwf	printf@val^(0+128),w
 18006  070F                     u6935:	
 18007  070F  1C03               	btfss	3,0
 18008  0710  2F19               	goto	l7346
 18009                           
 18010                           ;doprnt.c: 1307: break;
 18011  0711  3001               	movlw	1
 18012  0712  00A8               	movwf	??_printf^(0+128)
 18013  0713  0828               	movf	??_printf^(0+128),w
 18014  0714  07B6               	addwf	printf@c^(0+128),f
 18015  0715  300A               	movlw	10
 18016  0716  0636               	xorwf	printf@c^(0+128),w
 18017  0717  1D03               	btfss	3,2
 18018  0718  2EEC               	goto	l7340
 18019  0719                     l7346:	
 18020                           
 18021                           ;doprnt.c: 1422: {
 18022                           ;doprnt.c: 1438: if(flag & 0x03)
 18023  0719  0834               	movf	printf@flag^(0+128),w
 18024  071A  3903               	andlw	3
 18025  071B  1903               	btfsc	3,2
 18026  071C  2F21               	goto	l7350
 18027                           
 18028                           ;doprnt.c: 1439: (putch('-') );
 18029  071D  302D               	movlw	45
 18030  071E  31A3  23DC  3186   	fcall	_putch
 18031  0721                     l7350:	
 18032                           
 18033                           ;doprnt.c: 1469: }
 18034                           ;doprnt.c: 1472: prec = c;
 18035  0721  0021               	movlb	1	; select bank1
 18036  0722  0836               	movf	printf@c^(0+128),w
 18037  0723  00AE               	movwf	printf@prec^(0+128)
 18038  0724  01AF               	clrf	(printf@prec+1)^(0+128)
 18039  0725  1BAE               	btfsc	printf@prec^(0+128),7
 18040  0726  03AF               	decf	(printf@prec+1)^(0+128),f
 18041  0727                     l7356:	
 18042                           ;doprnt.c: 1474: while(prec--) {
 18043                           
 18044  0727  30FF               	movlw	255
 18045  0728  0021               	movlb	1	; select bank1
 18046  0729  07AE               	addwf	printf@prec^(0+128),f
 18047  072A  30FF               	movlw	255
 18048  072B  3DAF               	addwfc	(printf@prec+1)^(0+128),f
 18049  072C  0A2E               	incf	printf@prec^(0+128),w
 18050  072D  1903               	btfsc	3,2
 18051  072E  0A2F               	incf	(printf@prec+1)^(0+128),w
 18052  072F  1903               	btfsc	3,2
 18053  0730  2E4F               	goto	l7358
 18054                           
 18055                           ;doprnt.c: 1478: {
 18056                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 18057  0731  3000               	movlw	0
 18058  0732  0020               	movlb	0	; select bank0
 18059  0733  00C2               	movwf	___llmod@divisor+3
 18060  0734  3000               	movlw	0
 18061  0735  00C1               	movwf	___llmod@divisor+2
 18062  0736  3000               	movlw	0
 18063  0737  00C0               	movwf	___llmod@divisor+1
 18064  0738  300A               	movlw	10
 18065  0739  00BF               	movwf	___llmod@divisor
 18066  073A  0021               	movlb	1	; select bank1
 18067  073B  082F               	movf	(printf@prec+1)^(0+128),w
 18068  073C  0085               	movwf	5
 18069  073D  082E               	movf	printf@prec^(0+128),w
 18070  073E  0084               	movwf	4
 18071  073F  3584               	lslf	4,f
 18072  0740  0D85               	rlf	5,f
 18073  0741  3584               	lslf	4,f
 18074  0742  0D85               	rlf	5,f
 18075  0743  3000               	movlw	low (_dpowers| (0+32768))
 18076  0744  0784               	addwf	4,f
 18077  0745  30A0               	movlw	high (_dpowers| (0+32768))
 18078  0746  3D85               	addwfc	5,f
 18079  0747  3F00               	moviw [0]fsr0
 18080  0748  0020               	movlb	0	; select bank0
 18081  0749  00B1               	movwf	___lldiv@divisor
 18082  074A  3F01               	moviw [1]fsr0
 18083  074B  00B2               	movwf	___lldiv@divisor+1
 18084  074C  3F02               	moviw [2]fsr0
 18085  074D  00B3               	movwf	___lldiv@divisor+2
 18086  074E  3F03               	moviw [3]fsr0
 18087  074F  00B4               	movwf	___lldiv@divisor+3
 18088  0750  0021               	movlb	1	; select bank1
 18089  0751  0833               	movf	(printf@val+3)^(0+128),w
 18090  0752  0020               	movlb	0	; select bank0
 18091  0753  00B8               	movwf	___lldiv@dividend+3
 18092  0754  0021               	movlb	1	; select bank1
 18093  0755  0832               	movf	(printf@val+2)^(0+128),w
 18094  0756  0020               	movlb	0	; select bank0
 18095  0757  00B7               	movwf	___lldiv@dividend+2
 18096  0758  0021               	movlb	1	; select bank1
 18097  0759  0831               	movf	(printf@val+1)^(0+128),w
 18098  075A  0020               	movlb	0	; select bank0
 18099  075B  00B6               	movwf	___lldiv@dividend+1
 18100  075C  0021               	movlb	1	; select bank1
 18101  075D  0830               	movf	printf@val^(0+128),w
 18102  075E  0020               	movlb	0	; select bank0
 18103  075F  00B5               	movwf	___lldiv@dividend
 18104  0760  319E  26A1  3186   	fcall	___lldiv
 18105  0763  0020               	movlb	0	; select bank0
 18106  0764  0834               	movf	?___lldiv+3,w
 18107  0765  00C6               	movwf	___llmod@dividend+3
 18108  0766  0833               	movf	?___lldiv+2,w
 18109  0767  00C5               	movwf	___llmod@dividend+2
 18110  0768  0832               	movf	?___lldiv+1,w
 18111  0769  00C4               	movwf	___llmod@dividend+1
 18112  076A  0831               	movf	?___lldiv,w
 18113  076B  00C3               	movwf	___llmod@dividend
 18114  076C  319B  2326  3186   	fcall	___llmod
 18115  076F  0020               	movlb	0	; select bank0
 18116  0770  083F               	movf	?___llmod,w
 18117  0771  3E30               	addlw	48
 18118  0772  0021               	movlb	1	; select bank1
 18119  0773  00A8               	movwf	??_printf^(0+128)
 18120  0774  0828               	movf	??_printf^(0+128),w
 18121  0775  00B6               	movwf	printf@c^(0+128)
 18122                           
 18123                           ;doprnt.c: 1523: }
 18124                           ;doprnt.c: 1524: (putch(c) );
 18125  0776  0836               	movf	printf@c^(0+128),w
 18126  0777  31A3  23DC  3186   	fcall	_putch
 18127  077A  2F27               	goto	l7356
 18128  077B                     l1476:	
 18129                           ;doprnt.c: 1540: return 0;
 18130                           ;	Return value of _printf is never used
 18131                           
 18132                           ;doprnt.c: 1525: }
 18133                           ;doprnt.c: 1533: }
 18134                           ;doprnt.c: 1535: alldone:
 18135                           
 18136  077B  0008               	return
 18137  077C                     __end_of_printf:	
 18138                           
 18139                           	psect	text59
 18140  23DC                     __ptext59:	
 18141 ;; *************** function _putch *****************
 18142 ;; Defined at:
 18143 ;;		line 156 in file "mcc_generated_files/eusart.c"
 18144 ;; Parameters:    Size  Location     Type
 18145 ;;  txData          1    wreg     unsigned char 
 18146 ;; Auto vars:     Size  Location     Type
 18147 ;;  txData          1   19[BANK0 ] unsigned char 
 18148 ;; Return value:  Size  Location     Type
 18149 ;;                  1    wreg      void 
 18150 ;; Registers used:
 18151 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18152 ;; Tracked objects:
 18153 ;;		On entry : 0/0
 18154 ;;		On exit  : 0/0
 18155 ;;		Unchanged: 0/0
 18156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18160 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18161 ;;Total ram usage:        1 bytes
 18162 ;; Hardware stack levels used:    1
 18163 ;; Hardware stack levels required when called:    7
 18164 ;; This function calls:
 18165 ;;		_EUSART_Write
 18166 ;; This function is called by:
 18167 ;;		_printf
 18168 ;; This function uses a non-reentrant model
 18169 ;;
 18170                           
 18171                           
 18172                           ;psect for function _putch
 18173  23DC                     _putch:	
 18174                           
 18175                           ;incstack = 0
 18176                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18177                           ;putch@txData stored from wreg
 18178  23DC  0020               	movlb	0	; select bank0
 18179  23DD  00B3               	movwf	putch@txData
 18180                           
 18181                           ;eusart.c: 158: EUSART_Write(txData);
 18182  23DE  0833               	movf	putch@txData,w
 18183  23DF  3198  202B         	fcall	_EUSART_Write
 18184  23E1  0008               	return
 18185  23E2                     __end_of_putch:	
 18186                           
 18187                           	psect	text60
 18188  182B                     __ptext60:	
 18189 ;; *************** function _EUSART_Write *****************
 18190 ;; Defined at:
 18191 ;;		line 128 in file "mcc_generated_files/eusart.c"
 18192 ;; Parameters:    Size  Location     Type
 18193 ;;  txData          1    wreg     unsigned char 
 18194 ;; Auto vars:     Size  Location     Type
 18195 ;;  txData          1   18[BANK0 ] unsigned char 
 18196 ;; Return value:  Size  Location     Type
 18197 ;;                  1    wreg      void 
 18198 ;; Registers used:
 18199 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18200 ;; Tracked objects:
 18201 ;;		On entry : 0/0
 18202 ;;		On exit  : 0/0
 18203 ;;		Unchanged: 0/0
 18204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18207 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18208 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18209 ;;Total ram usage:        2 bytes
 18210 ;; Hardware stack levels used:    1
 18211 ;; Hardware stack levels required when called:    6
 18212 ;; This function calls:
 18213 ;;		Nothing
 18214 ;; This function is called by:
 18215 ;;		_putch
 18216 ;; This function uses a non-reentrant model
 18217 ;;
 18218                           
 18219                           
 18220                           ;psect for function _EUSART_Write
 18221  182B                     _EUSART_Write:	
 18222                           
 18223                           ;incstack = 0
 18224                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 18225                           ;EUSART_Write@txData stored from wreg
 18226  182B  0020               	movlb	0	; select bank0
 18227  182C  00B2               	movwf	EUSART_Write@txData
 18228  182D                     l7174:	
 18229                           ;eusart.c: 131: {
 18230                           
 18231                           ;eusart.c: 130: while(0 == eusartTxBufferRemaining)
 18232                           
 18233  182D  085E               	movf	_eusartTxBufferRemaining,w	;volatile
 18234  182E  1903               	btfsc	3,2
 18235  182F  282D               	goto	l7174
 18236                           
 18237                           ;eusart.c: 132: }
 18238                           ;eusart.c: 134: if(0 == PIE1bits.TXIE)
 18239  1830  0021               	movlb	1	; select bank1
 18240  1831  1A11               	btfsc	17,4	;volatile
 18241  1832  2838               	goto	l415
 18242                           
 18243                           ;eusart.c: 135: {
 18244                           ;eusart.c: 136: TX1REG = txData;
 18245  1833  0020               	movlb	0	; select bank0
 18246  1834  0832               	movf	EUSART_Write@txData,w
 18247  1835  0023               	movlb	3	; select bank3
 18248  1836  009A               	movwf	26	;volatile
 18249                           
 18250                           ;eusart.c: 137: }
 18251  1837  284D               	goto	l7188
 18252  1838                     l415:	
 18253                           
 18254                           ;eusart.c: 138: else
 18255                           ;eusart.c: 139: {
 18256                           ;eusart.c: 140: PIE1bits.TXIE = 0;
 18257  1838  1211               	bcf	17,4	;volatile
 18258                           
 18259                           ;eusart.c: 141: eusartTxBuffer[eusartTxHead++] = txData;
 18260  1839  0020               	movlb	0	; select bank0
 18261  183A  0832               	movf	EUSART_Write@txData,w
 18262  183B  00B1               	movwf	??_EUSART_Write
 18263  183C  087D               	movf	_eusartTxHead,w
 18264  183D  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 18265  183E  0086               	movwf	6
 18266  183F  3001               	movlw	1	; select bank3/4
 18267  1840  0087               	movwf	7
 18268  1841  0831               	movf	??_EUSART_Write,w
 18269  1842  0081               	movwf	1
 18270  1843  3001               	movlw	1
 18271  1844  00B1               	movwf	??_EUSART_Write
 18272  1845  0831               	movf	??_EUSART_Write,w
 18273  1846  07FD               	addwf	_eusartTxHead,f	;volatile
 18274                           
 18275                           ;eusart.c: 142: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 18276  1847  3008               	movlw	8
 18277  1848  027D               	subwf	_eusartTxHead,w	;volatile
 18278  1849  1803               	btfsc	3,0
 18279                           
 18280                           ;eusart.c: 143: {
 18281                           ;eusart.c: 144: eusartTxHead = 0;
 18282  184A  01FD               	clrf	_eusartTxHead	;volatile
 18283                           
 18284                           ;eusart.c: 145: }
 18285                           ;eusart.c: 146: eusartTxBufferRemaining--;
 18286  184B  3001               	movlw	1
 18287  184C  02DE               	subwf	_eusartTxBufferRemaining,f	;volatile
 18288  184D                     l7188:	
 18289                           
 18290                           ;eusart.c: 147: }
 18291                           ;eusart.c: 148: PIE1bits.TXIE = 1;
 18292  184D  0021               	movlb	1	; select bank1
 18293  184E  1611               	bsf	17,4	;volatile
 18294  184F  0008               	return
 18295  1850                     __end_of_EUSART_Write:	
 18296                           
 18297                           	psect	text61
 18298  1B26                     __ptext61:	
 18299 ;; *************** function ___llmod *****************
 18300 ;; Defined at:
 18301 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 18302 ;; Parameters:    Size  Location     Type
 18303 ;;  divisor         4   31[BANK0 ] unsigned long 
 18304 ;;  dividend        4   35[BANK0 ] unsigned long 
 18305 ;; Auto vars:     Size  Location     Type
 18306 ;;  counter         1   40[BANK0 ] unsigned char 
 18307 ;; Return value:  Size  Location     Type
 18308 ;;                  4   31[BANK0 ] unsigned long 
 18309 ;; Registers used:
 18310 ;;		wreg, status,2, status,0
 18311 ;; Tracked objects:
 18312 ;;		On entry : 0/0
 18313 ;;		On exit  : 0/0
 18314 ;;		Unchanged: 0/0
 18315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18316 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18317 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18318 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18319 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18320 ;;Total ram usage:       10 bytes
 18321 ;; Hardware stack levels used:    1
 18322 ;; Hardware stack levels required when called:    6
 18323 ;; This function calls:
 18324 ;;		Nothing
 18325 ;; This function is called by:
 18326 ;;		_printf
 18327 ;; This function uses a non-reentrant model
 18328 ;;
 18329                           
 18330                           
 18331                           ;psect for function ___llmod
 18332  1B26                     ___llmod:	
 18333                           
 18334                           ;incstack = 0
 18335                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 18336  1B26  0020               	movlb	0	; select bank0
 18337  1B27  0842               	movf	___llmod@divisor+3,w
 18338  1B28  0441               	iorwf	___llmod@divisor+2,w
 18339  1B29  0440               	iorwf	___llmod@divisor+1,w
 18340  1B2A  043F               	iorwf	___llmod@divisor,w
 18341  1B2B  1903               	skipnz
 18342  1B2C  2B60               	goto	l7262
 18343  1B2D  01C8               	clrf	___llmod@counter
 18344  1B2E  0AC8               	incf	___llmod@counter,f
 18345  1B2F                     l7252:	
 18346  1B2F  1BC2               	btfsc	___llmod@divisor+3,7
 18347  1B30  2B3D               	goto	l7254
 18348  1B31  3001               	movlw	1
 18349  1B32                     u6705:	
 18350  1B32  35BF               	lslf	___llmod@divisor,f
 18351  1B33  0DC0               	rlf	___llmod@divisor+1,f
 18352  1B34  0DC1               	rlf	___llmod@divisor+2,f
 18353  1B35  0DC2               	rlf	___llmod@divisor+3,f
 18354  1B36  0B89               	decfsz	9,f
 18355  1B37  2B32               	goto	u6705
 18356  1B38  3001               	movlw	1
 18357  1B39  00C7               	movwf	??___llmod
 18358  1B3A  0847               	movf	??___llmod,w
 18359  1B3B  07C8               	addwf	___llmod@counter,f
 18360  1B3C  2B2F               	goto	l7252
 18361  1B3D                     l7254:	
 18362  1B3D  0842               	movf	___llmod@divisor+3,w
 18363  1B3E  0246               	subwf	___llmod@dividend+3,w
 18364  1B3F  1D03               	skipz
 18365  1B40  2B4B               	goto	u6725
 18366  1B41  0841               	movf	___llmod@divisor+2,w
 18367  1B42  0245               	subwf	___llmod@dividend+2,w
 18368  1B43  1D03               	skipz
 18369  1B44  2B4B               	goto	u6725
 18370  1B45  0840               	movf	___llmod@divisor+1,w
 18371  1B46  0244               	subwf	___llmod@dividend+1,w
 18372  1B47  1D03               	skipz
 18373  1B48  2B4B               	goto	u6725
 18374  1B49  083F               	movf	___llmod@divisor,w
 18375  1B4A  0243               	subwf	___llmod@dividend,w
 18376  1B4B                     u6725:	
 18377  1B4B  1C03               	skipc
 18378  1B4C  2B55               	goto	l7258
 18379  1B4D  083F               	movf	___llmod@divisor,w
 18380  1B4E  02C3               	subwf	___llmod@dividend,f
 18381  1B4F  0840               	movf	___llmod@divisor+1,w
 18382  1B50  3BC4               	subwfb	___llmod@dividend+1,f
 18383  1B51  0841               	movf	___llmod@divisor+2,w
 18384  1B52  3BC5               	subwfb	___llmod@dividend+2,f
 18385  1B53  0842               	movf	___llmod@divisor+3,w
 18386  1B54  3BC6               	subwfb	___llmod@dividend+3,f
 18387  1B55                     l7258:	
 18388  1B55  3001               	movlw	1
 18389  1B56                     u6735:	
 18390  1B56  36C2               	lsrf	___llmod@divisor+3,f
 18391  1B57  0CC1               	rrf	___llmod@divisor+2,f
 18392  1B58  0CC0               	rrf	___llmod@divisor+1,f
 18393  1B59  0CBF               	rrf	___llmod@divisor,f
 18394  1B5A  0B89               	decfsz	9,f
 18395  1B5B  2B56               	goto	u6735
 18396  1B5C  3001               	movlw	1
 18397  1B5D  02C8               	subwf	___llmod@counter,f
 18398  1B5E  1D03               	btfss	3,2
 18399  1B5F  2B3D               	goto	l7254
 18400  1B60                     l7262:	
 18401  1B60  0846               	movf	___llmod@dividend+3,w
 18402  1B61  00C2               	movwf	?___llmod+3
 18403  1B62  0845               	movf	___llmod@dividend+2,w
 18404  1B63  00C1               	movwf	?___llmod+2
 18405  1B64  0844               	movf	___llmod@dividend+1,w
 18406  1B65  00C0               	movwf	?___llmod+1
 18407  1B66  0843               	movf	___llmod@dividend,w
 18408  1B67  00BF               	movwf	?___llmod
 18409  1B68  0008               	return
 18410  1B69                     __end_of___llmod:	
 18411                           
 18412                           	psect	text62
 18413  1EA1                     __ptext62:	
 18414 ;; *************** function ___lldiv *****************
 18415 ;; Defined at:
 18416 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 18417 ;; Parameters:    Size  Location     Type
 18418 ;;  divisor         4   17[BANK0 ] unsigned long 
 18419 ;;  dividend        4   21[BANK0 ] unsigned long 
 18420 ;; Auto vars:     Size  Location     Type
 18421 ;;  quotient        4   26[BANK0 ] unsigned long 
 18422 ;;  counter         1   30[BANK0 ] unsigned char 
 18423 ;; Return value:  Size  Location     Type
 18424 ;;                  4   17[BANK0 ] unsigned long 
 18425 ;; Registers used:
 18426 ;;		wreg, status,2, status,0
 18427 ;; Tracked objects:
 18428 ;;		On entry : 0/0
 18429 ;;		On exit  : 0/0
 18430 ;;		Unchanged: 0/0
 18431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18432 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18433 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18434 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18435 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18436 ;;Total ram usage:       14 bytes
 18437 ;; Hardware stack levels used:    1
 18438 ;; Hardware stack levels required when called:    6
 18439 ;; This function calls:
 18440 ;;		Nothing
 18441 ;; This function is called by:
 18442 ;;		_printf
 18443 ;; This function uses a non-reentrant model
 18444 ;;
 18445                           
 18446                           
 18447                           ;psect for function ___lldiv
 18448  1EA1                     ___lldiv:	
 18449                           
 18450                           ;incstack = 0
 18451                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 18452  1EA1  3000               	movlw	0
 18453  1EA2  0020               	movlb	0	; select bank0
 18454  1EA3  00BD               	movwf	___lldiv@quotient+3
 18455  1EA4  3000               	movlw	0
 18456  1EA5  00BC               	movwf	___lldiv@quotient+2
 18457  1EA6  3000               	movlw	0
 18458  1EA7  00BB               	movwf	___lldiv@quotient+1
 18459  1EA8  3000               	movlw	0
 18460  1EA9  00BA               	movwf	___lldiv@quotient
 18461  1EAA  0834               	movf	___lldiv@divisor+3,w
 18462  1EAB  0433               	iorwf	___lldiv@divisor+2,w
 18463  1EAC  0432               	iorwf	___lldiv@divisor+1,w
 18464  1EAD  0431               	iorwf	___lldiv@divisor,w
 18465  1EAE  1903               	skipnz
 18466  1EAF  2EEB               	goto	l7242
 18467  1EB0  01BE               	clrf	___lldiv@counter
 18468  1EB1  0ABE               	incf	___lldiv@counter,f
 18469  1EB2                     l7228:	
 18470  1EB2  1BB4               	btfsc	___lldiv@divisor+3,7
 18471  1EB3  2EC0               	goto	l7230
 18472  1EB4  3001               	movlw	1
 18473  1EB5                     u6635:	
 18474  1EB5  35B1               	lslf	___lldiv@divisor,f
 18475  1EB6  0DB2               	rlf	___lldiv@divisor+1,f
 18476  1EB7  0DB3               	rlf	___lldiv@divisor+2,f
 18477  1EB8  0DB4               	rlf	___lldiv@divisor+3,f
 18478  1EB9  0B89               	decfsz	9,f
 18479  1EBA  2EB5               	goto	u6635
 18480  1EBB  3001               	movlw	1
 18481  1EBC  00B9               	movwf	??___lldiv
 18482  1EBD  0839               	movf	??___lldiv,w
 18483  1EBE  07BE               	addwf	___lldiv@counter,f
 18484  1EBF  2EB2               	goto	l7228
 18485  1EC0                     l7230:	
 18486  1EC0  3001               	movlw	1
 18487  1EC1                     u6655:	
 18488  1EC1  35BA               	lslf	___lldiv@quotient,f
 18489  1EC2  0DBB               	rlf	___lldiv@quotient+1,f
 18490  1EC3  0DBC               	rlf	___lldiv@quotient+2,f
 18491  1EC4  0DBD               	rlf	___lldiv@quotient+3,f
 18492  1EC5  0B89               	decfsz	9,f
 18493  1EC6  2EC1               	goto	u6655
 18494  1EC7  0834               	movf	___lldiv@divisor+3,w
 18495  1EC8  0238               	subwf	___lldiv@dividend+3,w
 18496  1EC9  1D03               	skipz
 18497  1ECA  2ED5               	goto	u6665
 18498  1ECB  0833               	movf	___lldiv@divisor+2,w
 18499  1ECC  0237               	subwf	___lldiv@dividend+2,w
 18500  1ECD  1D03               	skipz
 18501  1ECE  2ED5               	goto	u6665
 18502  1ECF  0832               	movf	___lldiv@divisor+1,w
 18503  1ED0  0236               	subwf	___lldiv@dividend+1,w
 18504  1ED1  1D03               	skipz
 18505  1ED2  2ED5               	goto	u6665
 18506  1ED3  0831               	movf	___lldiv@divisor,w
 18507  1ED4  0235               	subwf	___lldiv@dividend,w
 18508  1ED5                     u6665:	
 18509  1ED5  1C03               	skipc
 18510  1ED6  2EE0               	goto	l7238
 18511  1ED7  0831               	movf	___lldiv@divisor,w
 18512  1ED8  02B5               	subwf	___lldiv@dividend,f
 18513  1ED9  0832               	movf	___lldiv@divisor+1,w
 18514  1EDA  3BB6               	subwfb	___lldiv@dividend+1,f
 18515  1EDB  0833               	movf	___lldiv@divisor+2,w
 18516  1EDC  3BB7               	subwfb	___lldiv@dividend+2,f
 18517  1EDD  0834               	movf	___lldiv@divisor+3,w
 18518  1EDE  3BB8               	subwfb	___lldiv@dividend+3,f
 18519  1EDF  143A               	bsf	___lldiv@quotient,0
 18520  1EE0                     l7238:	
 18521  1EE0  3001               	movlw	1
 18522  1EE1                     u6675:	
 18523  1EE1  36B4               	lsrf	___lldiv@divisor+3,f
 18524  1EE2  0CB3               	rrf	___lldiv@divisor+2,f
 18525  1EE3  0CB2               	rrf	___lldiv@divisor+1,f
 18526  1EE4  0CB1               	rrf	___lldiv@divisor,f
 18527  1EE5  0B89               	decfsz	9,f
 18528  1EE6  2EE1               	goto	u6675
 18529  1EE7  3001               	movlw	1
 18530  1EE8  02BE               	subwf	___lldiv@counter,f
 18531  1EE9  1D03               	btfss	3,2
 18532  1EEA  2EC0               	goto	l7230
 18533  1EEB                     l7242:	
 18534  1EEB  083D               	movf	___lldiv@quotient+3,w
 18535  1EEC  00B4               	movwf	?___lldiv+3
 18536  1EED  083C               	movf	___lldiv@quotient+2,w
 18537  1EEE  00B3               	movwf	?___lldiv+2
 18538  1EEF  083B               	movf	___lldiv@quotient+1,w
 18539  1EF0  00B2               	movwf	?___lldiv+1
 18540  1EF1  083A               	movf	___lldiv@quotient,w
 18541  1EF2  00B1               	movwf	?___lldiv
 18542  1EF3  0008               	return
 18543  1EF4                     __end_of___lldiv:	
 18544                           
 18545                           	psect	text63
 18546  25AD                     __ptext63:	
 18547 ;; *************** function _i2c_setBuffer *****************
 18548 ;; Defined at:
 18549 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 18550 ;; Parameters:    Size  Location     Type
 18551 ;;  buffer          2   17[BANK0 ] PTR void 
 18552 ;;		 -> drv_read@reg(1), drv_read@buff(1), drv2665@drv_fifo_sine(244), drv_write@buff(2), 
 18553 ;;  bufferSize      2   19[BANK0 ] unsigned int 
 18554 ;; Auto vars:     Size  Location     Type
 18555 ;;		None
 18556 ;; Return value:  Size  Location     Type
 18557 ;;                  1    wreg      void 
 18558 ;; Registers used:
 18559 ;;		wreg
 18560 ;; Tracked objects:
 18561 ;;		On entry : 0/0
 18562 ;;		On exit  : 0/0
 18563 ;;		Unchanged: 0/0
 18564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18565 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18568 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18569 ;;Total ram usage:        4 bytes
 18570 ;; Hardware stack levels used:    1
 18571 ;; Hardware stack levels required when called:    6
 18572 ;; This function calls:
 18573 ;;		Nothing
 18574 ;; This function is called by:
 18575 ;;		_drv_write
 18576 ;;		_drv_read
 18577 ;;		_drv_write_wvfrm
 18578 ;; This function uses a non-reentrant model
 18579 ;;
 18580                           
 18581                           
 18582                           ;psect for function _i2c_setBuffer
 18583  25AD                     _i2c_setBuffer:	
 18584                           
 18585                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 18586                           
 18587                           ;incstack = 0
 18588                           ; Regs used in _i2c_setBuffer: [wreg]
 18589  25AD  0022               	movlb	2	; select bank2
 18590  25AE  1D20               	btfss	_i2c_status^(0+256),2
 18591  25AF  0008               	return
 18592                           
 18593                           ;i2c_master.c: 187: {
 18594                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 18595  25B0  0020               	movlb	0	; select bank0
 18596  25B1  0832               	movf	i2c_setBuffer@buffer+1,w
 18597  25B2  0022               	movlb	2	; select bank2
 18598  25B3  00A3               	movwf	((low ((_i2c_status| (0+256)+2))+1))^0
 18599  25B4  0020               	movlb	0	; select bank0
 18600  25B5  0831               	movf	i2c_setBuffer@buffer,w
 18601  25B6  0022               	movlb	2	; select bank2
 18602  25B7  00A2               	movwf	(low ((_i2c_status| (0+256)+2)))^0
 18603                           
 18604                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 18605  25B8  0020               	movlb	0	; select bank0
 18606  25B9  0834               	movf	i2c_setBuffer@bufferSize+1,w
 18607  25BA  0022               	movlb	2	; select bank2
 18608  25BB  00A5               	movwf	((_i2c_status+1)^(0+256)+4)
 18609  25BC  0020               	movlb	0	; select bank0
 18610  25BD  0833               	movf	i2c_setBuffer@bufferSize,w
 18611  25BE  0022               	movlb	2	; select bank2
 18612  25BF  00A4               	movwf	(_i2c_status^(0+256)+4)
 18613                           
 18614                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 18615  25C0  1120               	bcf	_i2c_status^(0+256),2
 18616  25C1  0008               	return
 18617  25C2                     __end_of_i2c_setBuffer:	
 18618                           
 18619                           	psect	text64
 18620  27B8                     __ptext64:	
 18621 ;; *************** function _i2c_masterOperation *****************
 18622 ;; Defined at:
 18623 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 18624 ;; Parameters:    Size  Location     Type
 18625 ;;  read            1    wreg     unsigned char 
 18626 ;; Auto vars:     Size  Location     Type
 18627 ;;  read            1   24[BANK0 ] unsigned char 
 18628 ;;  ret             1   25[BANK0 ] enum E8193
 18629 ;; Return value:  Size  Location     Type
 18630 ;;                  1    wreg      enum E8193
 18631 ;; Registers used:
 18632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18633 ;; Tracked objects:
 18634 ;;		On entry : 0/0
 18635 ;;		On exit  : 0/0
 18636 ;;		Unchanged: 0/0
 18637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18639 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18641 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18642 ;;Total ram usage:        3 bytes
 18643 ;; Hardware stack levels used:    1
 18644 ;; Hardware stack levels required when called:   11
 18645 ;; This function calls:
 18646 ;;		_i2c1_driver_start
 18647 ;;		_i2c_poller
 18648 ;;		_mssp1_IRQisEnabled
 18649 ;; This function is called by:
 18650 ;;		_drv_write
 18651 ;;		_drv_read
 18652 ;;		_i2c_masterRead
 18653 ;;		_i2c_masterWrite
 18654 ;;		_drv_write_wvfrm
 18655 ;; This function uses a non-reentrant model
 18656 ;;
 18657                           
 18658                           
 18659                           ;psect for function _i2c_masterOperation
 18660  27B8                     _i2c_masterOperation:	
 18661                           
 18662                           ;incstack = 0
 18663                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18664                           ;i2c_masterOperation@read stored from wreg
 18665  27B8  0020               	movlb	0	; select bank0
 18666  27B9  00B8               	movwf	i2c_masterOperation@read
 18667                           
 18668                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 18669  27BA  01B9               	clrf	i2c_masterOperation@ret
 18670  27BB  0AB9               	incf	i2c_masterOperation@ret,f
 18671                           
 18672                           ;i2c_master.c: 196: if(!i2c_status.busy)
 18673  27BC  0022               	movlb	2	; select bank2
 18674  27BD  1820               	btfsc	_i2c_status^(0+256),0
 18675  27BE  2FD9               	goto	l7382
 18676                           
 18677                           ;i2c_master.c: 197: {
 18678                           ;i2c_master.c: 198: i2c_status.busy = 1;
 18679  27BF  1420               	bsf	_i2c_status^(0+256),0
 18680                           
 18681                           ;i2c_master.c: 199: ret = I2C_NOERR;
 18682  27C0  0020               	movlb	0	; select bank0
 18683  27C1  01B9               	clrf	i2c_masterOperation@ret
 18684                           
 18685                           ;i2c_master.c: 201: if(read)
 18686  27C2  0838               	movf	i2c_masterOperation@read,w
 18687  27C3  1903               	btfsc	3,2
 18688  27C4  2FC9               	goto	l7376
 18689                           
 18690                           ;i2c_master.c: 202: {
 18691                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 18692  27C5  0022               	movlb	2	; select bank2
 18693  27C6  01AA               	clrf	(_i2c_status^(0+256)+10)
 18694  27C7  0AAA               	incf	(_i2c_status^(0+256)+10),f
 18695                           
 18696                           ;i2c_master.c: 204: }
 18697  27C8  2FCF               	goto	l7378
 18698  27C9                     l7376:	
 18699                           
 18700                           ;i2c_master.c: 205: else
 18701                           ;i2c_master.c: 206: {
 18702                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 18703  27C9  3002               	movlw	2
 18704  27CA  0020               	movlb	0	; select bank0
 18705  27CB  00B7               	movwf	??_i2c_masterOperation
 18706  27CC  0837               	movf	??_i2c_masterOperation,w
 18707  27CD  0022               	movlb	2	; select bank2
 18708  27CE  00AA               	movwf	(_i2c_status^(0+256)+10)
 18709  27CF                     l7378:	
 18710                           
 18711                           ;i2c_master.c: 208: }
 18712                           ;i2c_master.c: 209: i2c1_driver_start();
 18713  27CF  31A3  235D  31A7   	fcall	_i2c1_driver_start
 18714                           
 18715                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 18716  27D2  31A4  2493  31A7   	fcall	_mssp1_IRQisEnabled
 18717  27D5  1803               	btfsc	3,0
 18718  27D6  2FD9               	goto	l7382
 18719                           
 18720                           ;i2c_master.c: 212: i2c_poller();
 18721  27D7  31A4  24D2         	fcall	_i2c_poller
 18722  27D9                     l7382:	
 18723                           
 18724                           ;i2c_master.c: 213: }
 18725                           ;i2c_master.c: 214: return ret;
 18726  27D9  0020               	movlb	0	; select bank0
 18727  27DA  0839               	movf	i2c_masterOperation@ret,w
 18728  27DB  0008               	return
 18729  27DC                     __end_of_i2c_masterOperation:	
 18730                           
 18731                           	psect	text65
 18732  2493                     __ptext65:	
 18733 ;; *************** function _mssp1_IRQisEnabled *****************
 18734 ;; Defined at:
 18735 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
 18736 ;; Parameters:    Size  Location     Type
 18737 ;;		None
 18738 ;; Auto vars:     Size  Location     Type
 18739 ;;		None
 18740 ;; Return value:  Size  Location     Type
 18741 ;;		None               void
 18742 ;; Registers used:
 18743 ;;		wreg, status,2, status,0
 18744 ;; Tracked objects:
 18745 ;;		On entry : 0/0
 18746 ;;		On exit  : 0/0
 18747 ;;		Unchanged: 0/0
 18748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18752 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18753 ;;Total ram usage:        2 bytes
 18754 ;; Hardware stack levels used:    1
 18755 ;; Hardware stack levels required when called:    6
 18756 ;; This function calls:
 18757 ;;		Nothing
 18758 ;; This function is called by:
 18759 ;;		_i2c_masterOperation
 18760 ;; This function uses a non-reentrant model
 18761 ;;
 18762                           
 18763                           
 18764                           ;psect for function _mssp1_IRQisEnabled
 18765  2493                     _mssp1_IRQisEnabled:	
 18766                           
 18767                           ;i2c1_driver.c: 45: return PIE1bits.SSP1IE;
 18768                           
 18769                           ;incstack = 0
 18770                           ; Regs used in _mssp1_IRQisEnabled: [wreg+status,2+status,0]
 18771  2493  0021               	movlb	1	; select bank1
 18772  2494  0C11               	rrf	17,w	;volatile
 18773  2495  0020               	movlb	0	; select bank0
 18774  2496  00B1               	movwf	??_mssp1_IRQisEnabled
 18775  2497  0CB1               	rrf	??_mssp1_IRQisEnabled,f
 18776  2498  0C31               	rrf	??_mssp1_IRQisEnabled,w
 18777  2499  3901               	andlw	1
 18778  249A  00B2               	movwf	??_mssp1_IRQisEnabled+1
 18779  249B  0C32               	rrf	??_mssp1_IRQisEnabled+1,w
 18780  249C  0008               	return
 18781  249D                     __end_of_mssp1_IRQisEnabled:	
 18782                           
 18783                           	psect	text66
 18784  24D2                     __ptext66:	
 18785 ;; *************** function _i2c_poller *****************
 18786 ;; Defined at:
 18787 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 18788 ;; Parameters:    Size  Location     Type
 18789 ;;		None
 18790 ;; Auto vars:     Size  Location     Type
 18791 ;;		None
 18792 ;; Return value:  Size  Location     Type
 18793 ;;                  1    wreg      void 
 18794 ;; Registers used:
 18795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18796 ;; Tracked objects:
 18797 ;;		On entry : 0/0
 18798 ;;		On exit  : 0/0
 18799 ;;		Unchanged: 0/0
 18800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18805 ;;Total ram usage:        0 bytes
 18806 ;; Hardware stack levels used:    1
 18807 ;; Hardware stack levels required when called:   10
 18808 ;; This function calls:
 18809 ;;		_i2c_ISR
 18810 ;;		_mssp1_waitForEvent
 18811 ;; This function is called by:
 18812 ;;		_i2c_masterOperation
 18813 ;; This function uses a non-reentrant model
 18814 ;;
 18815                           
 18816                           
 18817                           ;psect for function _i2c_poller
 18818  24D2                     _i2c_poller:	
 18819  24D2                     l7220:	
 18820                           ;i2c_master.c: 232: while(i2c_status.busy)
 18821                           
 18822                           ;incstack = 0
 18823                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18824                           
 18825  24D2  0022               	movlb	2	; select bank2
 18826  24D3  1C20               	btfss	_i2c_status^(0+256),0
 18827  24D4  0008               	return
 18828                           
 18829                           ;i2c_master.c: 233: {
 18830                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 18831  24D5  3000               	movlw	0
 18832  24D6  31A4  24C7  31A4   	fcall	_mssp1_waitForEvent
 18833                           
 18834                           ;i2c_master.c: 235: i2c_ISR();
 18835  24D9  3198  2050  31A4   	fcall	_i2c_ISR
 18836  24DC  2CD2               	goto	l7220
 18837  24DD                     __end_of_i2c_poller:	
 18838                           
 18839                           	psect	text67
 18840  24C7                     __ptext67:	
 18841 ;; *************** function _mssp1_waitForEvent *****************
 18842 ;; Defined at:
 18843 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
 18844 ;; Parameters:    Size  Location     Type
 18845 ;;  timeout         1    wreg     PTR unsigned int 
 18846 ;;		 -> NULL(0), 
 18847 ;; Auto vars:     Size  Location     Type
 18848 ;;  timeout         1   17[BANK0 ] PTR unsigned int 
 18849 ;;		 -> NULL(0), 
 18850 ;; Return value:  Size  Location     Type
 18851 ;;                  1    wreg      void 
 18852 ;; Registers used:
 18853 ;;		wreg
 18854 ;; Tracked objects:
 18855 ;;		On entry : 0/0
 18856 ;;		On exit  : 0/0
 18857 ;;		Unchanged: 0/0
 18858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18862 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18863 ;;Total ram usage:        1 bytes
 18864 ;; Hardware stack levels used:    1
 18865 ;; Hardware stack levels required when called:    6
 18866 ;; This function calls:
 18867 ;;		Nothing
 18868 ;; This function is called by:
 18869 ;;		_i2c_poller
 18870 ;; This function uses a non-reentrant model
 18871 ;;
 18872                           
 18873                           
 18874                           ;psect for function _mssp1_waitForEvent
 18875  24C7                     _mssp1_waitForEvent:	
 18876                           
 18877                           ;i2c1_driver.c: 73: if(PIR1bits.SSP1IF == 0)
 18878                           
 18879                           ;incstack = 0
 18880                           ; Regs used in _mssp1_waitForEvent: [wreg]
 18881  24C7  0020               	movlb	0	; select bank0
 18882  24C8  1991               	btfsc	17,3	;volatile
 18883  24C9  0008               	return
 18884  24CA                     l500:	
 18885                           ;i2c1_driver.c: 74: {
 18886                           ;i2c1_driver.c: 75: while(1)
 18887                           
 18888                           
 18889                           ;i2c1_driver.c: 76: {
 18890                           ;i2c1_driver.c: 77: if(PIR1bits.SSP1IF) break;
 18891  24CA  0020               	movlb	0	; select bank0
 18892  24CB  1991               	btfsc	17,3	;volatile
 18893  24CC  0008               	return
 18894                           
 18895                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(1000000/4000000.0)));
 18896  24CD  3008               	movlw	8
 18897  24CE                     u8887:	
 18898  24CE  0B89               	decfsz	9,f
 18899  24CF  2CCE               	goto	u8887
 18900  24D0  0000               	nop
 18901  24D1  2CCA               	goto	l500
 18902  24D2                     __end_of_mssp1_waitForEvent:	
 18903                           
 18904                           	psect	text68
 18905  1850                     __ptext68:	
 18906 ;; *************** function _i2c_ISR *****************
 18907 ;; Defined at:
 18908 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 18909 ;; Parameters:    Size  Location     Type
 18910 ;;		None
 18911 ;; Auto vars:     Size  Location     Type
 18912 ;;		None
 18913 ;; Return value:  Size  Location     Type
 18914 ;;                  1    wreg      void 
 18915 ;; Registers used:
 18916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18917 ;; Tracked objects:
 18918 ;;		On entry : 0/0
 18919 ;;		On exit  : 0/0
 18920 ;;		Unchanged: 0/0
 18921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18924 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18925 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18926 ;;Total ram usage:        1 bytes
 18927 ;; Hardware stack levels used:    1
 18928 ;; Hardware stack levels required when called:    9
 18929 ;; This function calls:
 18930 ;;		_do_I2C_DO_ACK
 18931 ;;		_do_I2C_DO_ADDRESS_NACK
 18932 ;;		_do_I2C_DO_NACK_RESTART
 18933 ;;		_do_I2C_DO_NACK_STOP
 18934 ;;		_do_I2C_IDLE
 18935 ;;		_do_I2C_RCEN
 18936 ;;		_do_I2C_RESET
 18937 ;;		_do_I2C_RX
 18938 ;;		_do_I2C_SEND_ADR_READ
 18939 ;;		_do_I2C_SEND_ADR_WRITE
 18940 ;;		_do_I2C_SEND_RESTART
 18941 ;;		_do_I2C_SEND_RESTART_READ
 18942 ;;		_do_I2C_SEND_RESTART_WRITE
 18943 ;;		_do_I2C_SEND_STOP
 18944 ;;		_do_I2C_TX
 18945 ;;		_do_I2C_TX_EMPTY
 18946 ;;		_i2c1_driver_isNACK
 18947 ;;		_mssp1_clearIRQ
 18948 ;; This function is called by:
 18949 ;;		_i2c_open
 18950 ;;		_i2c_poller
 18951 ;;		_INTERRUPT_InterruptManager
 18952 ;; This function uses a non-reentrant model
 18953 ;;
 18954                           
 18955                           
 18956                           ;psect for function _i2c_ISR
 18957  1850                     _i2c_ISR:	
 18958                           
 18959                           ;Skip over the trampoline to the duplicate function for level 1
 18960  1850  1C7E               	btfss	126,0
 18961  1851  2854               	goto	l7196
 18962  1852  31A6  2ECE         	ljmp	i1l8392
 18963  1854                     _i2c_ISR$intlevel0:	
 18964  1854                     l7196:	
 18965                           ;incstack = 0
 18966                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18967                           
 18968                           
 18969                           ;i2c_master.c: 421: mssp1_clearIRQ();
 18970  1854  31A3  236F  3198   	fcall	_mssp1_clearIRQ
 18971                           
 18972                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 18973  1857  0022               	movlb	2	; select bank2
 18974  1858  1DA0               	btfss	_i2c_status^(0+256),3
 18975  1859  2865               	goto	l7204
 18976  185A  31A5  250F  3198   	fcall	_i2c1_driver_isNACK
 18977  185D  1C03               	btfss	3,0
 18978  185E  2865               	goto	l7204
 18979                           
 18980                           ;i2c_master.c: 428: {
 18981                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 18982  185F  300F               	movlw	15
 18983  1860  0020               	movlb	0	; select bank0
 18984  1861  00B6               	movwf	??_i2c_ISR
 18985  1862  0836               	movf	??_i2c_ISR,w
 18986  1863  0022               	movlb	2	; select bank2
 18987  1864  00AA               	movwf	(_i2c_status^(0+256)+10)
 18988  1865                     l7204:	
 18989                           
 18990                           ;i2c_master.c: 430: }
 18991                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 18992  1865  0022               	movlb	2	; select bank2
 18993  1866  352A               	lslf	(_i2c_status^(0+256)+10),w
 18994  1867  3E50               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 18995  1868  0086               	movwf	6
 18996  1869  3002               	movlw	2	; select bank4/5
 18997  186A  0087               	movwf	7
 18998  186B  3F41               	moviw [1]fsr1
 18999  186C  008A               	movwf	10
 19000  186D  3F40               	moviw [0]fsr1
 19001  186E  000A               	callw
 19002  186F  3198               	pagesel	$
 19003  1870  0020               	movlb	0	; select bank0
 19004  1871  00B6               	movwf	??_i2c_ISR
 19005  1872  0836               	movf	??_i2c_ISR,w
 19006  1873  0022               	movlb	2	; select bank2
 19007  1874  00AA               	movwf	(_i2c_status^(0+256)+10)
 19008  1875  0008               	return
 19009  1876                     __end_of_i2c_ISR:	
 19010                           
 19011                           	psect	text69
 19012  236F                     __ptext69:	
 19013 ;; *************** function _mssp1_clearIRQ *****************
 19014 ;; Defined at:
 19015 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 19016 ;; Parameters:    Size  Location     Type
 19017 ;;		None
 19018 ;; Auto vars:     Size  Location     Type
 19019 ;;		None
 19020 ;; Return value:  Size  Location     Type
 19021 ;;                  1    wreg      void 
 19022 ;; Registers used:
 19023 ;;		None
 19024 ;; Tracked objects:
 19025 ;;		On entry : 0/0
 19026 ;;		On exit  : 0/0
 19027 ;;		Unchanged: 0/0
 19028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19033 ;;Total ram usage:        0 bytes
 19034 ;; Hardware stack levels used:    1
 19035 ;; Hardware stack levels required when called:    6
 19036 ;; This function calls:
 19037 ;;		Nothing
 19038 ;; This function is called by:
 19039 ;;		_i2c_open
 19040 ;;		_i2c_ISR
 19041 ;;		_i2c_close
 19042 ;; This function uses a non-reentrant model
 19043 ;;
 19044                           
 19045                           
 19046                           ;psect for function _mssp1_clearIRQ
 19047  236F                     _mssp1_clearIRQ:	
 19048                           
 19049                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 19050                           
 19051                           ;incstack = 0
 19052                           ; Regs used in _mssp1_clearIRQ: []
 19053  236F  0020               	movlb	0	; select bank0
 19054  2370  1191               	bcf	17,3	;volatile
 19055  2371  0008               	return
 19056  2372                     __end_of_mssp1_clearIRQ:	
 19057                           
 19058                           	psect	text70
 19059  1BAC                     __ptext70:	
 19060 ;; *************** function _do_I2C_RX *****************
 19061 ;; Defined at:
 19062 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 19063 ;; Parameters:    Size  Location     Type
 19064 ;;		None
 19065 ;; Auto vars:     Size  Location     Type
 19066 ;;		None
 19067 ;; Return value:  Size  Location     Type
 19068 ;;                  1    wreg      enum E8364
 19069 ;; Registers used:
 19070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19071 ;; Tracked objects:
 19072 ;;		On entry : 0/0
 19073 ;;		On exit  : 0/0
 19074 ;;		Unchanged: 0/0
 19075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19078 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19079 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19080 ;;Total ram usage:        1 bytes
 19081 ;; Hardware stack levels used:    1
 19082 ;; Hardware stack levels required when called:    8
 19083 ;; This function calls:
 19084 ;;		_do_I2C_DO_NACK_RESTART
 19085 ;;		_do_I2C_DO_NACK_STOP
 19086 ;;		_i2c1_driver_getRXData
 19087 ;;		_i2c1_driver_sendACK
 19088 ;;		_returnReset
 19089 ;;		_returnStop
 19090 ;; This function is called by:
 19091 ;;		_i2c_ISR
 19092 ;;		i1_i2c_ISR
 19093 ;; This function uses a non-reentrant model
 19094 ;;
 19095                           
 19096                           
 19097                           ;psect for function _do_I2C_RX
 19098  1BAC                     _do_I2C_RX:	
 19099                           
 19100                           ;Skip over the trampoline to the duplicate function for level 1
 19101  1BAC  1C7E               	btfss	126,0
 19102  1BAD  2BB0               	goto	l7126
 19103  1BAE  319A  2AA6         	ljmp	i1l8174
 19104  1BB0                     _do_I2C_RX$intlevel0:	
 19105  1BB0                     l7126:	
 19106                           ;incstack = 0
 19107                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19108                           
 19109                           
 19110                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 19111  1BB0  0022               	movlb	2	; select bank2
 19112  1BB1  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 19113  1BB2  0086               	movwf	6
 19114  1BB3  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 19115  1BB4  0087               	movwf	7
 19116  1BB5  31A3  2369  319B   	fcall	_i2c1_driver_getRXData
 19117  1BB8  0081               	movwf	1
 19118  1BB9  3001               	movlw	1
 19119  1BBA  0022               	movlb	2	; select bank2
 19120  1BBB  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 19121  1BBC  3000               	movlw	0
 19122  1BBD  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 19123                           
 19124                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 19125  1BBE  3001               	movlw	1
 19126  1BBF  02A4               	subwf	(_i2c_status^(0+256)+4),f
 19127  1BC0  3000               	movlw	0
 19128  1BC1  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 19129  1BC2  0824               	movf	(_i2c_status^(0+256)+4),w
 19130  1BC3  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 19131  1BC4  1903               	btfsc	3,2
 19132  1BC5  2BCA               	goto	l761
 19133                           
 19134                           ;i2c_master.c: 361: {
 19135                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 19136  1BC6  31A3  239A         	fcall	_i2c1_driver_sendACK
 19137                           
 19138                           ;i2c_master.c: 363: return I2C_RCEN;
 19139  1BC8  3005               	movlw	5
 19140                           
 19141                           ;i2c_master.c: 364: }
 19142  1BC9  0008               	return
 19143  1BCA                     l761:	
 19144                           
 19145                           ;i2c_master.c: 365: else
 19146                           ;i2c_master.c: 366: {
 19147                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 19148  1BCA  1520               	bsf	_i2c_status^(0+256),2
 19149                           
 19150                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 19151  1BCB  2BD2               	goto	l7150
 19152  1BCC                     l7140:	
 19153                           ;i2c_master.c: 369: {
 19154                           ;i2c_master.c: 370: case i2c_restart_write:
 19155                           
 19156                           
 19157                           ;i2c_master.c: 371: case i2c_restart_read:
 19158                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 19159  1BCC  31A4  2442         	fcall	_do_I2C_DO_NACK_RESTART
 19160  1BCE  0008               	return
 19161  1BCF                     l7144:	
 19162                           ;i2c_master.c: 374: case i2c_continue:
 19163                           
 19164                           ;i2c_master.c: 373: default:
 19165                           
 19166                           
 19167                           ;i2c_master.c: 375: case i2c_stop:
 19168                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 19169  1BCF  31A4  243A         	fcall	_do_I2C_DO_NACK_STOP
 19170                           
 19171                           ;i2c_master.c: 377: }
 19172  1BD1  0008               	return
 19173  1BD2                     l7150:	
 19174  1BD2  0022               	movlb	2	; select bank2
 19175  1BD3  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 19176  1BD4  0020               	movlb	0	; select bank0
 19177  1BD5  00B1               	movwf	??_do_I2C_RX
 19178  1BD6  0831               	movf	??_do_I2C_RX,w
 19179  1BD7  00B1               	movwf	returnReset@p
 19180  1BD8  300C               	movlw	12
 19181  1BD9  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 19182  1BDA  0086               	movwf	6
 19183  1BDB  3001               	movlw	1	; select bank2/3
 19184  1BDC  0087               	movwf	7
 19185  1BDD  3F41               	moviw [1]fsr1
 19186  1BDE  008A               	movwf	10
 19187  1BDF  3F40               	moviw [0]fsr1
 19188  1BE0  000A               	callw
 19189  1BE1  319B               	pagesel	$
 19190                           
 19191                           ; Switch size 1, requested type "space"
 19192                           ; Number of cases is 4, Range of values is 1 to 4
 19193                           ; switch strategies available:
 19194                           ; Name         Instructions Cycles
 19195                           ; simple_byte           13     7 (average)
 19196                           ; direct_byte           17     9 (fixed)
 19197                           ; jumptable            263     9 (fixed)
 19198                           ;	Chosen strategy is simple_byte
 19199  1BE2  3A01               	xorlw	1	; case 1
 19200  1BE3  1903               	skipnz
 19201  1BE4  2BCF               	goto	l7144
 19202  1BE5  3A03               	xorlw	3	; case 2
 19203  1BE6  1903               	skipnz
 19204  1BE7  2BCC               	goto	l7140
 19205  1BE8  3A01               	xorlw	1	; case 3
 19206  1BE9  1903               	skipnz
 19207  1BEA  2BCC               	goto	l7140
 19208  1BEB  3A07               	xorlw	7	; case 4
 19209  1BEC  1903               	skipnz
 19210  1BED  2BCF               	goto	l7144
 19211  1BEE  2BCF               	goto	l7144
 19212  1BEF  0008               	return
 19213  1BF0                     __end_of_do_I2C_RX:	
 19214                           
 19215                           	psect	text71
 19216  1F4C                     __ptext71:	
 19217 ;; *************** function _do_I2C_TX *****************
 19218 ;; Defined at:
 19219 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 19220 ;; Parameters:    Size  Location     Type
 19221 ;;		None
 19222 ;; Auto vars:     Size  Location     Type
 19223 ;;		None
 19224 ;; Return value:  Size  Location     Type
 19225 ;;                  1    wreg      enum E8364
 19226 ;; Registers used:
 19227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19228 ;; Tracked objects:
 19229 ;;		On entry : 0/0
 19230 ;;		On exit  : 0/0
 19231 ;;		Unchanged: 0/0
 19232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19234 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19235 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19236 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19237 ;;Total ram usage:        4 bytes
 19238 ;; Hardware stack levels used:    1
 19239 ;; Hardware stack levels required when called:    8
 19240 ;; This function calls:
 19241 ;;		_do_I2C_SEND_RESTART_READ
 19242 ;;		_do_I2C_SEND_RESTART_WRITE
 19243 ;;		_do_I2C_SEND_STOP
 19244 ;;		_i2c1_driver_TXData
 19245 ;;		_i2c1_driver_isNACK
 19246 ;;		_returnReset
 19247 ;;		_returnStop
 19248 ;; This function is called by:
 19249 ;;		_i2c_ISR
 19250 ;;		i1_i2c_ISR
 19251 ;; This function uses a non-reentrant model
 19252 ;;
 19253                           
 19254                           
 19255                           ;psect for function _do_I2C_TX
 19256  1F4C                     _do_I2C_TX:	
 19257                           
 19258                           ;Skip over the trampoline to the duplicate function for level 1
 19259  1F4C  1C7E               	btfss	126,0
 19260  1F4D  2F50               	goto	l7096
 19261  1F4E  319D  2D5F         	ljmp	i1l8144
 19262  1F50                     _do_I2C_TX$intlevel0:	
 19263  1F50                     l7096:	
 19264                           ;incstack = 0
 19265                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19266                           
 19267                           
 19268                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 19269  1F50  31A5  250F  319F   	fcall	_i2c1_driver_isNACK
 19270  1F53  1803               	btfsc	3,0
 19271  1F54  2F5F               	goto	l7114
 19272  1F55  2F7D               	goto	l745
 19273  1F56                     l7100:	
 19274                           ;i2c_master.c: 338: {
 19275                           ;i2c_master.c: 339: case i2c_restart_read:
 19276                           
 19277                           ;i2c_master.c: 336: {
 19278                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 19279                           
 19280                           
 19281                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 19282  1F56  31A4  2412         	fcall	_do_I2C_SEND_RESTART_READ
 19283  1F58  0008               	return
 19284  1F59                     l7104:	
 19285                           ;i2c_master.c: 341: case i2c_restart_write:
 19286                           
 19287                           
 19288                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 19289  1F59  31A4  241A         	fcall	_do_I2C_SEND_RESTART_WRITE
 19290  1F5B  0008               	return
 19291  1F5C                     l7108:	
 19292                           ;i2c_master.c: 344: case i2c_continue:
 19293                           
 19294                           ;i2c_master.c: 343: default:
 19295                           
 19296                           
 19297                           ;i2c_master.c: 345: case i2c_stop:
 19298                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 19299  1F5C  31A4  242A         	fcall	_do_I2C_SEND_STOP
 19300                           
 19301                           ;i2c_master.c: 347: }
 19302  1F5E  0008               	return
 19303  1F5F                     l7114:	
 19304  1F5F  0022               	movlb	2	; select bank2
 19305  1F60  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 19306  1F61  0020               	movlb	0	; select bank0
 19307  1F62  00B2               	movwf	??_do_I2C_TX
 19308  1F63  0832               	movf	??_do_I2C_TX,w
 19309  1F64  00B1               	movwf	returnReset@p
 19310  1F65  3012               	movlw	18
 19311  1F66  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 19312  1F67  0086               	movwf	6
 19313  1F68  3001               	movlw	1	; select bank2/3
 19314  1F69  0087               	movwf	7
 19315  1F6A  3F41               	moviw [1]fsr1
 19316  1F6B  008A               	movwf	10
 19317  1F6C  3F40               	moviw [0]fsr1
 19318  1F6D  000A               	callw
 19319  1F6E  319F               	pagesel	$
 19320                           
 19321                           ; Switch size 1, requested type "space"
 19322                           ; Number of cases is 4, Range of values is 1 to 4
 19323                           ; switch strategies available:
 19324                           ; Name         Instructions Cycles
 19325                           ; simple_byte           13     7 (average)
 19326                           ; direct_byte           17     9 (fixed)
 19327                           ; jumptable            263     9 (fixed)
 19328                           ;	Chosen strategy is simple_byte
 19329  1F6F  3A01               	xorlw	1	; case 1
 19330  1F70  1903               	skipnz
 19331  1F71  2F5C               	goto	l7108
 19332  1F72  3A03               	xorlw	3	; case 2
 19333  1F73  1903               	skipnz
 19334  1F74  2F56               	goto	l7100
 19335  1F75  3A01               	xorlw	1	; case 3
 19336  1F76  1903               	skipnz
 19337  1F77  2F59               	goto	l7104
 19338  1F78  3A07               	xorlw	7	; case 4
 19339  1F79  1903               	skipnz
 19340  1F7A  2F5C               	goto	l7108
 19341  1F7B  2F5C               	goto	l7108
 19342                           
 19343                           ;i2c_master.c: 348: }
 19344  1F7C  0008               	return
 19345  1F7D                     l745:	
 19346                           
 19347                           ;i2c_master.c: 349: else
 19348                           ;i2c_master.c: 350: {
 19349                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 19350  1F7D  0022               	movlb	2	; select bank2
 19351  1F7E  11A0               	bcf	_i2c_status^(0+256),3
 19352                           
 19353                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 19354  1F7F  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 19355  1F80  0020               	movlb	0	; select bank0
 19356  1F81  00B3               	movwf	??_do_I2C_TX+1
 19357  1F82  0022               	movlb	2	; select bank2
 19358  1F83  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 19359  1F84  0020               	movlb	0	; select bank0
 19360  1F85  00B2               	movwf	??_do_I2C_TX
 19361  1F86  0022               	movlb	2	; select bank2
 19362  1F87  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 19363  1F88  1903               	skipnz
 19364  1F89  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 19365  1F8A  0020               	movlb	0	; select bank0
 19366  1F8B  0832               	movf	??_do_I2C_TX,w
 19367  1F8C  0084               	movwf	4
 19368  1F8D  0833               	movf	??_do_I2C_TX+1,w
 19369  1F8E  0085               	movwf	5
 19370  1F8F  0800               	movf	0,w	;code access
 19371  1F90  31A3  23D6  319F   	fcall	_i2c1_driver_TXData
 19372                           
 19373                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 19374  1F93  3001               	movlw	1
 19375  1F94  0022               	movlb	2	; select bank2
 19376  1F95  02A4               	subwf	(_i2c_status^(0+256)+4),f
 19377  1F96  3000               	movlw	0
 19378  1F97  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 19379  1F98  0824               	movf	(_i2c_status^(0+256)+4),w
 19380  1F99  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 19381  1F9A  1D03               	btfss	3,2
 19382  1F9B  2F9E               	goto	l7122
 19383  1F9C  3006               	movlw	6
 19384  1F9D  2F9F               	goto	L34
 19385  1F9E                     l7122:	
 19386  1F9E  3003               	movlw	3
 19387  1F9F                     L34:	
 19388  1F9F  0020               	movlb	0	; select bank0
 19389  1FA0  00B4               	movwf	_do_I2C_TX$1132
 19390  1FA1  3000               	movlw	0
 19391  1FA2  00B5               	movwf	_do_I2C_TX$1132+1
 19392  1FA3  0834               	movf	_do_I2C_TX$1132,w
 19393  1FA4  0008               	return
 19394  1FA5                     __end_of_do_I2C_TX:	
 19395                           
 19396                           	psect	text72
 19397  18F3                     __ptext72:	
 19398 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 19399 ;; Defined at:
 19400 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 19401 ;; Parameters:    Size  Location     Type
 19402 ;;		None
 19403 ;; Auto vars:     Size  Location     Type
 19404 ;;		None
 19405 ;; Return value:  Size  Location     Type
 19406 ;;                  1    wreg      enum E8364
 19407 ;; Registers used:
 19408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19409 ;; Tracked objects:
 19410 ;;		On entry : 0/0
 19411 ;;		On exit  : 0/0
 19412 ;;		Unchanged: 0/0
 19413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19416 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19417 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19418 ;;Total ram usage:        1 bytes
 19419 ;; Hardware stack levels used:    1
 19420 ;; Hardware stack levels required when called:    8
 19421 ;; This function calls:
 19422 ;;		_do_I2C_SEND_RESTART
 19423 ;;		_do_I2C_SEND_STOP
 19424 ;;		_returnReset
 19425 ;;		_returnStop
 19426 ;; This function is called by:
 19427 ;;		_i2c_ISR
 19428 ;;		i1_i2c_ISR
 19429 ;; This function uses a non-reentrant model
 19430 ;;
 19431                           
 19432                           
 19433                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 19434  18F3                     _do_I2C_DO_ADDRESS_NACK:	
 19435                           
 19436                           ;Skip over the trampoline to the duplicate function for level 1
 19437  18F3  1C7E               	btfss	126,0
 19438  18F4  28F7               	goto	l7080
 19439  18F5  31A7  2F94         	ljmp	i1l8128
 19440  18F7                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
 19441  18F7                     l7080:	
 19442                           ;incstack = 0
 19443                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19444                           
 19445                           
 19446                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 19447  18F7  0022               	movlb	2	; select bank2
 19448  18F8  11A0               	bcf	_i2c_status^(0+256),3
 19449                           
 19450                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 19451  18F9  3002               	movlw	2
 19452  18FA  0020               	movlb	0	; select bank0
 19453  18FB  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 19454  18FC  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 19455  18FD  0022               	movlb	2	; select bank2
 19456  18FE  00AB               	movwf	(_i2c_status^(0+256)+11)
 19457                           
 19458                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 19459  18FF  2906               	goto	l7094
 19460  1900                     l7084:	
 19461                           ;i2c_master.c: 324: {
 19462                           ;i2c_master.c: 325: case i2c_restart_read:
 19463                           
 19464                           
 19465                           ;i2c_master.c: 326: case i2c_restart_write:
 19466                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 19467  1900  31A4  2422         	fcall	_do_I2C_SEND_RESTART
 19468  1902  0008               	return
 19469  1903                     l7088:	
 19470                           ;i2c_master.c: 328: default:
 19471                           
 19472                           
 19473                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 19474  1903  31A4  242A         	fcall	_do_I2C_SEND_STOP
 19475                           
 19476                           ;i2c_master.c: 330: }
 19477  1905  0008               	return
 19478  1906                     l7094:	
 19479  1906  0022               	movlb	2	; select bank2
 19480  1907  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 19481  1908  0020               	movlb	0	; select bank0
 19482  1909  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 19483  190A  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 19484  190B  00B1               	movwf	returnReset@p
 19485  190C  3010               	movlw	16
 19486  190D  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 19487  190E  0086               	movwf	6
 19488  190F  3001               	movlw	1	; select bank2/3
 19489  1910  0087               	movwf	7
 19490  1911  3F41               	moviw [1]fsr1
 19491  1912  008A               	movwf	10
 19492  1913  3F40               	moviw [0]fsr1
 19493  1914  000A               	callw
 19494  1915  3198               	pagesel	$
 19495                           
 19496                           ; Switch size 1, requested type "space"
 19497                           ; Number of cases is 2, Range of values is 2 to 3
 19498                           ; switch strategies available:
 19499                           ; Name         Instructions Cycles
 19500                           ; simple_byte            7     4 (average)
 19501                           ; direct_byte           13     9 (fixed)
 19502                           ; jumptable            263     9 (fixed)
 19503                           ;	Chosen strategy is simple_byte
 19504  1916  3A02               	xorlw	2	; case 2
 19505  1917  1903               	skipnz
 19506  1918  2900               	goto	l7084
 19507  1919  3A01               	xorlw	1	; case 3
 19508  191A  1903               	skipnz
 19509  191B  2900               	goto	l7084
 19510  191C  2903               	goto	l7088
 19511  191D  0008               	return
 19512  191E                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 19513                           
 19514                           	psect	text73
 19515  2442                     __ptext73:	
 19516 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 19517 ;; Defined at:
 19518 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 19519 ;; Parameters:    Size  Location     Type
 19520 ;;		None
 19521 ;; Auto vars:     Size  Location     Type
 19522 ;;		None
 19523 ;; Return value:  Size  Location     Type
 19524 ;;                  1    wreg      enum E8364
 19525 ;; Registers used:
 19526 ;;		wreg, status,2, status,0, pclath, cstack
 19527 ;; Tracked objects:
 19528 ;;		On entry : 0/0
 19529 ;;		On exit  : 0/0
 19530 ;;		Unchanged: 0/0
 19531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19536 ;;Total ram usage:        0 bytes
 19537 ;; Hardware stack levels used:    1
 19538 ;; Hardware stack levels required when called:    7
 19539 ;; This function calls:
 19540 ;;		_i2c1_driver_sendNACK
 19541 ;; This function is called by:
 19542 ;;		_do_I2C_RX
 19543 ;;		_i2c_ISR
 19544 ;;		i1_i2c_ISR
 19545 ;; This function uses a non-reentrant model
 19546 ;;
 19547                           
 19548                           
 19549                           ;psect for function _do_I2C_DO_NACK_RESTART
 19550  2442                     _do_I2C_DO_NACK_RESTART:	
 19551                           
 19552                           ;Skip over the trampoline to the duplicate function for level 1
 19553  2442  1C7E               	btfss	126,0
 19554  2443  2C46               	goto	l7016
 19555  2444  31A3  2B92         	ljmp	i1l7786
 19556  2446                     _do_I2C_DO_NACK_RESTART$intlevel0:	
 19557  2446                     l7016:	
 19558                           ;incstack = 0
 19559                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 19560                           
 19561                           
 19562                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 19563  2446  31A3  239E         	fcall	_i2c1_driver_sendNACK
 19564                           
 19565                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 19566  2448  3009               	movlw	9
 19567  2449  0008               	return
 19568  244A                     __end_of_do_I2C_DO_NACK_RESTART:	
 19569                           
 19570                           	psect	text74
 19571  243A                     __ptext74:	
 19572 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 19573 ;; Defined at:
 19574 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 19575 ;; Parameters:    Size  Location     Type
 19576 ;;		None
 19577 ;; Auto vars:     Size  Location     Type
 19578 ;;		None
 19579 ;; Return value:  Size  Location     Type
 19580 ;;                  1    wreg      enum E8364
 19581 ;; Registers used:
 19582 ;;		wreg, status,2, status,0, pclath, cstack
 19583 ;; Tracked objects:
 19584 ;;		On entry : 0/0
 19585 ;;		On exit  : 0/0
 19586 ;;		Unchanged: 0/0
 19587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19592 ;;Total ram usage:        0 bytes
 19593 ;; Hardware stack levels used:    1
 19594 ;; Hardware stack levels required when called:    7
 19595 ;; This function calls:
 19596 ;;		_i2c1_driver_sendNACK
 19597 ;; This function is called by:
 19598 ;;		_do_I2C_RX
 19599 ;;		_i2c_ISR
 19600 ;;		i1_i2c_ISR
 19601 ;; This function uses a non-reentrant model
 19602 ;;
 19603                           
 19604                           
 19605                           ;psect for function _do_I2C_DO_NACK_STOP
 19606  243A                     _do_I2C_DO_NACK_STOP:	
 19607                           
 19608                           ;Skip over the trampoline to the duplicate function for level 1
 19609  243A  1C7E               	btfss	126,0
 19610  243B  2C3E               	goto	l7010
 19611  243C  31A3  2B8E         	ljmp	i1l7780
 19612  243E                     _do_I2C_DO_NACK_STOP$intlevel0:	
 19613  243E                     l7010:	
 19614                           ;incstack = 0
 19615                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 19616                           
 19617                           
 19618                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 19619  243E  31A3  239E         	fcall	_i2c1_driver_sendNACK
 19620                           
 19621                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 19622  2440  300A               	movlw	10
 19623  2441  0008               	return
 19624  2442                     __end_of_do_I2C_DO_NACK_STOP:	
 19625                           
 19626                           	psect	text75
 19627  2432                     __ptext75:	
 19628 ;; *************** function _do_I2C_DO_ACK *****************
 19629 ;; Defined at:
 19630 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 19631 ;; Parameters:    Size  Location     Type
 19632 ;;		None
 19633 ;; Auto vars:     Size  Location     Type
 19634 ;;		None
 19635 ;; Return value:  Size  Location     Type
 19636 ;;                  1    wreg      enum E8364
 19637 ;; Registers used:
 19638 ;;		wreg, status,2, status,0, pclath, cstack
 19639 ;; Tracked objects:
 19640 ;;		On entry : 0/0
 19641 ;;		On exit  : 0/0
 19642 ;;		Unchanged: 0/0
 19643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19648 ;;Total ram usage:        0 bytes
 19649 ;; Hardware stack levels used:    1
 19650 ;; Hardware stack levels required when called:    7
 19651 ;; This function calls:
 19652 ;;		_i2c1_driver_sendACK
 19653 ;; This function is called by:
 19654 ;;		_i2c_ISR
 19655 ;;		i1_i2c_ISR
 19656 ;; This function uses a non-reentrant model
 19657 ;;
 19658                           
 19659                           
 19660                           ;psect for function _do_I2C_DO_ACK
 19661  2432                     _do_I2C_DO_ACK:	
 19662                           
 19663                           ;Skip over the trampoline to the duplicate function for level 1
 19664  2432  1C7E               	btfss	126,0
 19665  2433  2C36               	goto	l7074
 19666  2434  31A3  2B8A         	ljmp	i1l8122
 19667  2436                     _do_I2C_DO_ACK$intlevel0:	
 19668  2436                     l7074:	
 19669                           ;incstack = 0
 19670                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 19671                           
 19672                           
 19673                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 19674  2436  31A3  239A         	fcall	_i2c1_driver_sendACK
 19675                           
 19676                           ;i2c_master.c: 302: return I2C_RCEN;
 19677  2438  3005               	movlw	5
 19678  2439  0008               	return
 19679  243A                     __end_of_do_I2C_DO_ACK:	
 19680                           
 19681                           	psect	text76
 19682  2489                     __ptext76:	
 19683 ;; *************** function _do_I2C_RCEN *****************
 19684 ;; Defined at:
 19685 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 19686 ;; Parameters:    Size  Location     Type
 19687 ;;		None
 19688 ;; Auto vars:     Size  Location     Type
 19689 ;;		None
 19690 ;; Return value:  Size  Location     Type
 19691 ;;                  1    wreg      enum E8364
 19692 ;; Registers used:
 19693 ;;		wreg, status,2, status,0, pclath, cstack
 19694 ;; Tracked objects:
 19695 ;;		On entry : 0/0
 19696 ;;		On exit  : 0/0
 19697 ;;		Unchanged: 0/0
 19698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19703 ;;Total ram usage:        0 bytes
 19704 ;; Hardware stack levels used:    1
 19705 ;; Hardware stack levels required when called:    7
 19706 ;; This function calls:
 19707 ;;		_i2c1_driver_startRX
 19708 ;; This function is called by:
 19709 ;;		_i2c_ISR
 19710 ;;		i1_i2c_ISR
 19711 ;; This function uses a non-reentrant model
 19712 ;;
 19713                           
 19714                           
 19715                           ;psect for function _do_I2C_RCEN
 19716  2489                     _do_I2C_RCEN:	
 19717                           
 19718                           ;Skip over the trampoline to the duplicate function for level 1
 19719  2489  1C7E               	btfss	126,0
 19720  248A  2C8D               	goto	l7066
 19721  248B  31A3  2BC4         	ljmp	i1l6254
 19722  248D                     _do_I2C_RCEN$intlevel0:	
 19723  248D                     l7066:	
 19724                           ;incstack = 0
 19725                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 19726                           
 19727                           
 19728                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 19729  248D  0022               	movlb	2	; select bank2
 19730  248E  11A0               	bcf	_i2c_status^(0+256),3
 19731                           
 19732                           ;i2c_master.c: 295: i2c1_driver_startRX();
 19733  248F  31A3  2366         	fcall	_i2c1_driver_startRX
 19734                           
 19735                           ;i2c_master.c: 296: return I2C_RX;
 19736  2491  3004               	movlw	4
 19737  2492  0008               	return
 19738  2493                     __end_of_do_I2C_RCEN:	
 19739                           
 19740                           	psect	text77
 19741  24BC                     __ptext77:	
 19742 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 19743 ;; Defined at:
 19744 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 19745 ;; Parameters:    Size  Location     Type
 19746 ;;		None
 19747 ;; Auto vars:     Size  Location     Type
 19748 ;;		None
 19749 ;; Return value:  Size  Location     Type
 19750 ;;                  1    wreg      enum E8364
 19751 ;; Registers used:
 19752 ;;		wreg, status,2, status,0, pclath, cstack
 19753 ;; Tracked objects:
 19754 ;;		On entry : 0/0
 19755 ;;		On exit  : 0/0
 19756 ;;		Unchanged: 0/0
 19757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19762 ;;Total ram usage:        0 bytes
 19763 ;; Hardware stack levels used:    1
 19764 ;; Hardware stack levels required when called:    7
 19765 ;; This function calls:
 19766 ;;		_i2c1_driver_TXData
 19767 ;; This function is called by:
 19768 ;;		_i2c_ISR
 19769 ;;		i1_i2c_ISR
 19770 ;; This function uses a non-reentrant model
 19771 ;;
 19772                           
 19773                           
 19774                           ;psect for function _do_I2C_SEND_ADR_WRITE
 19775  24BC                     _do_I2C_SEND_ADR_WRITE:	
 19776                           
 19777                           ;Skip over the trampoline to the duplicate function for level 1
 19778  24BC  1C7E               	btfss	126,0
 19779  24BD  2CC0               	goto	l7058
 19780  24BE  31A3  2BFB         	ljmp	i1l8114
 19781  24C0                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
 19782  24C0                     l7058:	
 19783                           ;incstack = 0
 19784                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 19785                           
 19786                           
 19787                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 19788  24C0  0022               	movlb	2	; select bank2
 19789  24C1  15A0               	bsf	_i2c_status^(0+256),3
 19790                           
 19791                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 19792  24C2  3521               	lslf	(_i2c_status^(0+256)+1),w
 19793  24C3  31A3  23D6         	fcall	_i2c1_driver_TXData
 19794                           
 19795                           ;i2c_master.c: 289: return I2C_TX;
 19796  24C5  3003               	movlw	3
 19797  24C6  0008               	return
 19798  24C7                     __end_of_do_I2C_SEND_ADR_WRITE:	
 19799                           
 19800                           	psect	text78
 19801  24E9                     __ptext78:	
 19802 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 19803 ;; Defined at:
 19804 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 19805 ;; Parameters:    Size  Location     Type
 19806 ;;		None
 19807 ;; Auto vars:     Size  Location     Type
 19808 ;;		None
 19809 ;; Return value:  Size  Location     Type
 19810 ;;                  1    wreg      enum E8364
 19811 ;; Registers used:
 19812 ;;		wreg, status,2, status,0, pclath, cstack
 19813 ;; Tracked objects:
 19814 ;;		On entry : 0/0
 19815 ;;		On exit  : 0/0
 19816 ;;		Unchanged: 0/0
 19817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19822 ;;Total ram usage:        0 bytes
 19823 ;; Hardware stack levels used:    1
 19824 ;; Hardware stack levels required when called:    7
 19825 ;; This function calls:
 19826 ;;		_i2c1_driver_TXData
 19827 ;; This function is called by:
 19828 ;;		_i2c_ISR
 19829 ;;		i1_i2c_ISR
 19830 ;; This function uses a non-reentrant model
 19831 ;;
 19832                           
 19833                           
 19834                           ;psect for function _do_I2C_SEND_ADR_READ
 19835  24E9                     _do_I2C_SEND_ADR_READ:	
 19836                           
 19837                           ;Skip over the trampoline to the duplicate function for level 1
 19838  24E9  1C7E               	btfss	126,0
 19839  24EA  2CED               	goto	l7050
 19840  24EB  31A4  2C02         	ljmp	i1l8106
 19841  24ED                     _do_I2C_SEND_ADR_READ$intlevel0:	
 19842  24ED                     l7050:	
 19843                           ;incstack = 0
 19844                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 19845                           
 19846                           
 19847                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 19848  24ED  0022               	movlb	2	; select bank2
 19849  24EE  15A0               	bsf	_i2c_status^(0+256),3
 19850                           
 19851                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 19852  24EF  1403               	setc
 19853  24F0  0D21               	rlf	(_i2c_status^(0+256)+1),w
 19854  24F1  31A3  23D6         	fcall	_i2c1_driver_TXData
 19855                           
 19856                           ;i2c_master.c: 282: return I2C_RCEN;
 19857  24F3  3005               	movlw	5
 19858  24F4  0008               	return
 19859  24F5                     __end_of_do_I2C_SEND_ADR_READ:	
 19860                           
 19861                           	psect	text79
 19862  242A                     __ptext79:	
 19863 ;; *************** function _do_I2C_SEND_STOP *****************
 19864 ;; Defined at:
 19865 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 19866 ;; Parameters:    Size  Location     Type
 19867 ;;		None
 19868 ;; Auto vars:     Size  Location     Type
 19869 ;;		None
 19870 ;; Return value:  Size  Location     Type
 19871 ;;                  1    wreg      enum E8364
 19872 ;; Registers used:
 19873 ;;		wreg, status,2, status,0, pclath, cstack
 19874 ;; Tracked objects:
 19875 ;;		On entry : 0/0
 19876 ;;		On exit  : 0/0
 19877 ;;		Unchanged: 0/0
 19878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19883 ;;Total ram usage:        0 bytes
 19884 ;; Hardware stack levels used:    1
 19885 ;; Hardware stack levels required when called:    7
 19886 ;; This function calls:
 19887 ;;		_i2c1_driver_stop
 19888 ;; This function is called by:
 19889 ;;		_do_I2C_DO_ADDRESS_NACK
 19890 ;;		_do_I2C_TX
 19891 ;;		_do_I2C_TX_EMPTY
 19892 ;;		_i2c_ISR
 19893 ;;		i1_i2c_ISR
 19894 ;; This function uses a non-reentrant model
 19895 ;;
 19896                           
 19897                           
 19898                           ;psect for function _do_I2C_SEND_STOP
 19899  242A                     _do_I2C_SEND_STOP:	
 19900                           
 19901                           ;Skip over the trampoline to the duplicate function for level 1
 19902  242A  1C7E               	btfss	126,0
 19903  242B  2C2E               	goto	l7004
 19904  242C  31A3  2B86         	ljmp	i1l7774
 19905  242E                     _do_I2C_SEND_STOP$intlevel0:	
 19906  242E                     l7004:	
 19907                           ;incstack = 0
 19908                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 19909                           
 19910                           
 19911                           ;i2c_master.c: 274: i2c1_driver_stop();
 19912  242E  31A3  2363         	fcall	_i2c1_driver_stop
 19913                           
 19914                           ;i2c_master.c: 275: return I2C_IDLE;
 19915  2430  3000               	movlw	0
 19916  2431  0008               	return
 19917  2432                     __end_of_do_I2C_SEND_STOP:	
 19918                           
 19919                           	psect	text80
 19920  2422                     __ptext80:	
 19921 ;; *************** function _do_I2C_SEND_RESTART *****************
 19922 ;; Defined at:
 19923 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 19924 ;; Parameters:    Size  Location     Type
 19925 ;;		None
 19926 ;; Auto vars:     Size  Location     Type
 19927 ;;		None
 19928 ;; Return value:  Size  Location     Type
 19929 ;;                  1    wreg      enum E8364
 19930 ;; Registers used:
 19931 ;;		wreg, status,2, status,0, pclath, cstack
 19932 ;; Tracked objects:
 19933 ;;		On entry : 0/0
 19934 ;;		On exit  : 0/0
 19935 ;;		Unchanged: 0/0
 19936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19941 ;;Total ram usage:        0 bytes
 19942 ;; Hardware stack levels used:    1
 19943 ;; Hardware stack levels required when called:    7
 19944 ;; This function calls:
 19945 ;;		_i2c1_driver_restart
 19946 ;; This function is called by:
 19947 ;;		_do_I2C_DO_ADDRESS_NACK
 19948 ;;		_do_I2C_TX_EMPTY
 19949 ;;		_i2c_ISR
 19950 ;;		i1_i2c_ISR
 19951 ;; This function uses a non-reentrant model
 19952 ;;
 19953                           
 19954                           
 19955                           ;psect for function _do_I2C_SEND_RESTART
 19956  2422                     _do_I2C_SEND_RESTART:	
 19957                           
 19958                           ;Skip over the trampoline to the duplicate function for level 1
 19959  2422  1C7E               	btfss	126,0
 19960  2423  2C26               	goto	l6998
 19961  2424  31A3  2B82         	ljmp	i1l7768
 19962  2426                     _do_I2C_SEND_RESTART$intlevel0:	
 19963  2426                     l6998:	
 19964                           ;incstack = 0
 19965                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 19966                           
 19967                           
 19968                           ;i2c_master.c: 268: i2c1_driver_restart();
 19969  2426  31A3  2360         	fcall	_i2c1_driver_restart
 19970                           
 19971                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 19972  2428  3001               	movlw	1
 19973  2429  0008               	return
 19974  242A                     __end_of_do_I2C_SEND_RESTART:	
 19975                           
 19976                           	psect	text81
 19977  241A                     __ptext81:	
 19978 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 19979 ;; Defined at:
 19980 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 19981 ;; Parameters:    Size  Location     Type
 19982 ;;		None
 19983 ;; Auto vars:     Size  Location     Type
 19984 ;;		None
 19985 ;; Return value:  Size  Location     Type
 19986 ;;                  1    wreg      enum E8364
 19987 ;; Registers used:
 19988 ;;		wreg, status,2, status,0, pclath, cstack
 19989 ;; Tracked objects:
 19990 ;;		On entry : 0/0
 19991 ;;		On exit  : 0/0
 19992 ;;		Unchanged: 0/0
 19993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19998 ;;Total ram usage:        0 bytes
 19999 ;; Hardware stack levels used:    1
 20000 ;; Hardware stack levels required when called:    7
 20001 ;; This function calls:
 20002 ;;		_i2c1_driver_restart
 20003 ;; This function is called by:
 20004 ;;		_do_I2C_TX
 20005 ;;		_i2c_ISR
 20006 ;;		i1_i2c_ISR
 20007 ;; This function uses a non-reentrant model
 20008 ;;
 20009                           
 20010                           
 20011                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 20012  241A                     _do_I2C_SEND_RESTART_WRITE:	
 20013                           
 20014                           ;Skip over the trampoline to the duplicate function for level 1
 20015  241A  1C7E               	btfss	126,0
 20016  241B  2C1E               	goto	l6992
 20017  241C  31A3  2B7E         	ljmp	i1l7762
 20018  241E                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
 20019  241E                     l6992:	
 20020                           ;incstack = 0
 20021                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20022                           
 20023                           
 20024                           ;i2c_master.c: 262: i2c1_driver_restart();
 20025  241E  31A3  2360         	fcall	_i2c1_driver_restart
 20026                           
 20027                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 20028  2420  3002               	movlw	2
 20029  2421  0008               	return
 20030  2422                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 20031                           
 20032                           	psect	text82
 20033  2412                     __ptext82:	
 20034 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 20035 ;; Defined at:
 20036 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 20037 ;; Parameters:    Size  Location     Type
 20038 ;;		None
 20039 ;; Auto vars:     Size  Location     Type
 20040 ;;		None
 20041 ;; Return value:  Size  Location     Type
 20042 ;;                  1    wreg      enum E8364
 20043 ;; Registers used:
 20044 ;;		wreg, status,2, status,0, pclath, cstack
 20045 ;; Tracked objects:
 20046 ;;		On entry : 0/0
 20047 ;;		On exit  : 0/0
 20048 ;;		Unchanged: 0/0
 20049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20054 ;;Total ram usage:        0 bytes
 20055 ;; Hardware stack levels used:    1
 20056 ;; Hardware stack levels required when called:    7
 20057 ;; This function calls:
 20058 ;;		_i2c1_driver_restart
 20059 ;; This function is called by:
 20060 ;;		_do_I2C_TX
 20061 ;;		_i2c_ISR
 20062 ;;		i1_i2c_ISR
 20063 ;; This function uses a non-reentrant model
 20064 ;;
 20065                           
 20066                           
 20067                           ;psect for function _do_I2C_SEND_RESTART_READ
 20068  2412                     _do_I2C_SEND_RESTART_READ:	
 20069                           
 20070                           ;Skip over the trampoline to the duplicate function for level 1
 20071  2412  1C7E               	btfss	126,0
 20072  2413  2C16               	goto	l6986
 20073  2414  31A3  2B7A         	ljmp	i1l7756
 20074  2416                     _do_I2C_SEND_RESTART_READ$intlevel0:	
 20075  2416                     l6986:	
 20076                           ;incstack = 0
 20077                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 20078                           
 20079                           
 20080                           ;i2c_master.c: 256: i2c1_driver_restart();
 20081  2416  31A3  2360         	fcall	_i2c1_driver_restart
 20082                           
 20083                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 20084  2418  3001               	movlw	1
 20085  2419  0008               	return
 20086  241A                     __end_of_do_I2C_SEND_RESTART_READ:	
 20087                           
 20088                           	psect	text83
 20089  246D                     __ptext83:	
 20090 ;; *************** function _do_I2C_IDLE *****************
 20091 ;; Defined at:
 20092 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 20093 ;; Parameters:    Size  Location     Type
 20094 ;;		None
 20095 ;; Auto vars:     Size  Location     Type
 20096 ;;		None
 20097 ;; Return value:  Size  Location     Type
 20098 ;;                  1    wreg      enum E8364
 20099 ;; Registers used:
 20100 ;;		wreg, status,2
 20101 ;; Tracked objects:
 20102 ;;		On entry : 0/0
 20103 ;;		On exit  : 0/0
 20104 ;;		Unchanged: 0/0
 20105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20110 ;;Total ram usage:        0 bytes
 20111 ;; Hardware stack levels used:    1
 20112 ;; Hardware stack levels required when called:    6
 20113 ;; This function calls:
 20114 ;;		Nothing
 20115 ;; This function is called by:
 20116 ;;		_i2c_ISR
 20117 ;;		i1_i2c_ISR
 20118 ;; This function uses a non-reentrant model
 20119 ;;
 20120                           
 20121                           
 20122                           ;psect for function _do_I2C_IDLE
 20123  246D                     _do_I2C_IDLE:	
 20124                           
 20125                           ;Skip over the trampoline to the duplicate function for level 1
 20126  246D  1C7E               	btfss	126,0
 20127  246E  2C71               	goto	l7042
 20128  246F  31A3  2BB5         	ljmp	i1l6230
 20129  2471                     _do_I2C_IDLE$intlevel0:	
 20130  2471                     l7042:	
 20131                           ;incstack = 0
 20132                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 20133                           
 20134                           
 20135                           ;i2c_master.c: 249: i2c_status.busy = 0;
 20136  2471  0022               	movlb	2	; select bank2
 20137  2472  1020               	bcf	_i2c_status^(0+256),0
 20138                           
 20139                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 20140  2473  01AB               	clrf	(_i2c_status^(0+256)+11)
 20141                           
 20142                           ;i2c_master.c: 251: return I2C_RESET;
 20143  2474  300E               	movlw	14
 20144  2475  0008               	return
 20145  2476                     __end_of_do_I2C_IDLE:	
 20146                           
 20147                           	psect	text84
 20148  24B1                     __ptext84:	
 20149 ;; *************** function _do_I2C_RESET *****************
 20150 ;; Defined at:
 20151 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 20152 ;; Parameters:    Size  Location     Type
 20153 ;;		None
 20154 ;; Auto vars:     Size  Location     Type
 20155 ;;		None
 20156 ;; Return value:  Size  Location     Type
 20157 ;;                  1    wreg      enum E8364
 20158 ;; Registers used:
 20159 ;;		wreg, status,2, status,0, pclath, cstack
 20160 ;; Tracked objects:
 20161 ;;		On entry : 0/0
 20162 ;;		On exit  : 0/0
 20163 ;;		Unchanged: 0/0
 20164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20169 ;;Total ram usage:        0 bytes
 20170 ;; Hardware stack levels used:    1
 20171 ;; Hardware stack levels required when called:    7
 20172 ;; This function calls:
 20173 ;;		_i2c1_driver_resetBus
 20174 ;; This function is called by:
 20175 ;;		_i2c_ISR
 20176 ;;		i1_i2c_ISR
 20177 ;; This function uses a non-reentrant model
 20178 ;;
 20179                           
 20180                           
 20181                           ;psect for function _do_I2C_RESET
 20182  24B1                     _do_I2C_RESET:	
 20183                           
 20184                           ;Skip over the trampoline to the duplicate function for level 1
 20185  24B1  1C7E               	btfss	126,0
 20186  24B2  2CB5               	goto	l7032
 20187  24B3  31A3  2BF4         	ljmp	i1l6220
 20188  24B5                     _do_I2C_RESET$intlevel0:	
 20189  24B5                     l7032:	
 20190                           ;incstack = 0
 20191                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 20192                           
 20193                           
 20194                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 20195  24B5  3188  2000         	fcall	_i2c1_driver_resetBus
 20196                           
 20197                           ;i2c_master.c: 242: i2c_status.busy = 0;
 20198  24B7  0022               	movlb	2	; select bank2
 20199  24B8  1020               	bcf	_i2c_status^(0+256),0
 20200                           
 20201                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 20202  24B9  01AB               	clrf	(_i2c_status^(0+256)+11)
 20203                           
 20204                           ;i2c_master.c: 244: return I2C_RESET;
 20205  24BA  300E               	movlw	14
 20206  24BB  0008               	return
 20207  24BC                     __end_of_do_I2C_RESET:	
 20208                           
 20209                           	psect	text85
 20210  1949                     __ptext85:	
 20211 ;; *************** function _do_I2C_TX_EMPTY *****************
 20212 ;; Defined at:
 20213 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 20214 ;; Parameters:    Size  Location     Type
 20215 ;;		None
 20216 ;; Auto vars:     Size  Location     Type
 20217 ;;		None
 20218 ;; Return value:  Size  Location     Type
 20219 ;;                  1    wreg      enum E8364
 20220 ;; Registers used:
 20221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20222 ;; Tracked objects:
 20223 ;;		On entry : 0/0
 20224 ;;		On exit  : 0/0
 20225 ;;		Unchanged: 0/0
 20226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20230 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20231 ;;Total ram usage:        1 bytes
 20232 ;; Hardware stack levels used:    1
 20233 ;; Hardware stack levels required when called:    8
 20234 ;; This function calls:
 20235 ;;		_do_I2C_SEND_RESTART
 20236 ;;		_do_I2C_SEND_STOP
 20237 ;;		_mssp1_setIRQ
 20238 ;;		_returnReset
 20239 ;;		_returnStop
 20240 ;; This function is called by:
 20241 ;;		_i2c_ISR
 20242 ;;		i1_i2c_ISR
 20243 ;; This function uses a non-reentrant model
 20244 ;;
 20245                           
 20246                           
 20247                           ;psect for function _do_I2C_TX_EMPTY
 20248  1949                     _do_I2C_TX_EMPTY:	
 20249                           
 20250                           ;Skip over the trampoline to the duplicate function for level 1
 20251  1949  1C7E               	btfss	126,0
 20252  194A  294D               	goto	l7152
 20253  194B  3198  289F         	ljmp	i1l8200
 20254  194D                     _do_I2C_TX_EMPTY$intlevel0:	
 20255  194D                     l7152:	
 20256                           ;incstack = 0
 20257                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20258                           
 20259                           
 20260                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 20261  194D  0022               	movlb	2	; select bank2
 20262  194E  1520               	bsf	_i2c_status^(0+256),2
 20263                           
 20264                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 20265  194F  295A               	goto	l7170
 20266  1950                     l7154:	
 20267                           ;i2c_master.c: 386: {
 20268                           ;i2c_master.c: 387: case i2c_restart_read:
 20269                           
 20270                           
 20271                           ;i2c_master.c: 388: case i2c_restart_write:
 20272                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 20273  1950  31A4  2422         	fcall	_do_I2C_SEND_RESTART
 20274  1952  0008               	return
 20275  1953                     l7158:	
 20276                           ;i2c_master.c: 390: case i2c_continue:
 20277                           
 20278                           
 20279                           ;i2c_master.c: 391: mssp1_setIRQ();
 20280  1953  31A3  236C         	fcall	_mssp1_setIRQ
 20281                           
 20282                           ;i2c_master.c: 392: return I2C_TX;
 20283  1955  3003               	movlw	3
 20284  1956  0008               	return
 20285  1957                     l7164:	
 20286                           ;i2c_master.c: 394: case i2c_stop:
 20287                           
 20288                           ;i2c_master.c: 393: default:
 20289                           
 20290                           
 20291                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 20292  1957  31A4  242A         	fcall	_do_I2C_SEND_STOP
 20293                           
 20294                           ;i2c_master.c: 396: }
 20295  1959  0008               	return
 20296  195A                     l7170:	
 20297  195A  0022               	movlb	2	; select bank2
 20298  195B  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 20299  195C  0020               	movlb	0	; select bank0
 20300  195D  00B1               	movwf	??_do_I2C_TX_EMPTY
 20301  195E  0831               	movf	??_do_I2C_TX_EMPTY,w
 20302  195F  00B1               	movwf	returnReset@p
 20303  1960  300C               	movlw	12
 20304  1961  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 20305  1962  0086               	movwf	6
 20306  1963  3001               	movlw	1	; select bank2/3
 20307  1964  0087               	movwf	7
 20308  1965  3F41               	moviw [1]fsr1
 20309  1966  008A               	movwf	10
 20310  1967  3F40               	moviw [0]fsr1
 20311  1968  000A               	callw
 20312  1969  3199               	pagesel	$
 20313                           
 20314                           ; Switch size 1, requested type "space"
 20315                           ; Number of cases is 4, Range of values is 1 to 4
 20316                           ; switch strategies available:
 20317                           ; Name         Instructions Cycles
 20318                           ; simple_byte           13     7 (average)
 20319                           ; direct_byte           17     9 (fixed)
 20320                           ; jumptable            263     9 (fixed)
 20321                           ;	Chosen strategy is simple_byte
 20322  196A  3A01               	xorlw	1	; case 1
 20323  196B  1903               	skipnz
 20324  196C  2957               	goto	l7164
 20325  196D  3A03               	xorlw	3	; case 2
 20326  196E  1903               	skipnz
 20327  196F  2950               	goto	l7154
 20328  1970  3A01               	xorlw	1	; case 3
 20329  1971  1903               	skipnz
 20330  1972  2950               	goto	l7154
 20331  1973  3A07               	xorlw	7	; case 4
 20332  1974  1903               	skipnz
 20333  1975  2953               	goto	l7158
 20334  1976  2957               	goto	l7164
 20335  1977  0008               	return
 20336  1978                     __end_of_do_I2C_TX_EMPTY:	
 20337                           
 20338                           	psect	text86
 20339  236C                     __ptext86:	
 20340 ;; *************** function _mssp1_setIRQ *****************
 20341 ;; Defined at:
 20342 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 20343 ;; Parameters:    Size  Location     Type
 20344 ;;		None
 20345 ;; Auto vars:     Size  Location     Type
 20346 ;;		None
 20347 ;; Return value:  Size  Location     Type
 20348 ;;                  1    wreg      void 
 20349 ;; Registers used:
 20350 ;;		None
 20351 ;; Tracked objects:
 20352 ;;		On entry : 0/0
 20353 ;;		On exit  : 0/0
 20354 ;;		Unchanged: 0/0
 20355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20360 ;;Total ram usage:        0 bytes
 20361 ;; Hardware stack levels used:    1
 20362 ;; Hardware stack levels required when called:    6
 20363 ;; This function calls:
 20364 ;;		Nothing
 20365 ;; This function is called by:
 20366 ;;		_do_I2C_TX_EMPTY
 20367 ;; This function uses a non-reentrant model
 20368 ;;
 20369                           
 20370                           
 20371                           ;psect for function _mssp1_setIRQ
 20372  236C                     _mssp1_setIRQ:	
 20373                           
 20374                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 20375                           
 20376                           ;incstack = 0
 20377                           ; Regs used in _mssp1_setIRQ: []
 20378  236C  0020               	movlb	0	; select bank0
 20379  236D  1591               	bsf	17,3	;volatile
 20380  236E  0008               	return
 20381  236F                     __end_of_mssp1_setIRQ:	
 20382                           
 20383                           	psect	text87
 20384  250F                     __ptext87:	
 20385 ;; *************** function _i2c1_driver_isNACK *****************
 20386 ;; Defined at:
 20387 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 20388 ;; Parameters:    Size  Location     Type
 20389 ;;		None
 20390 ;; Auto vars:     Size  Location     Type
 20391 ;;		None
 20392 ;; Return value:  Size  Location     Type
 20393 ;;		None               void
 20394 ;; Registers used:
 20395 ;;		wreg, status,2, status,0
 20396 ;; Tracked objects:
 20397 ;;		On entry : 0/0
 20398 ;;		On exit  : 0/0
 20399 ;;		Unchanged: 0/0
 20400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20403 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20404 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20405 ;;Total ram usage:        1 bytes
 20406 ;; Hardware stack levels used:    1
 20407 ;; Hardware stack levels required when called:    6
 20408 ;; This function calls:
 20409 ;;		Nothing
 20410 ;; This function is called by:
 20411 ;;		_do_I2C_TX
 20412 ;;		_i2c_ISR
 20413 ;; This function uses a non-reentrant model
 20414 ;;
 20415                           
 20416                           
 20417                           ;psect for function _i2c1_driver_isNACK
 20418  250F                     _i2c1_driver_isNACK:	
 20419                           
 20420                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 20421                           
 20422                           ;incstack = 0
 20423                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 20424  250F  0024               	movlb	4	; select bank4
 20425  2510  0816               	movf	22,w	;volatile
 20426  2511  39BF               	andlw	-65
 20427  2512  3840               	iorlw	64
 20428  2513  0096               	movwf	22	;volatile
 20429  2514  0E16               	swapf	22,w	;volatile
 20430  2515  0C89               	rrf	9,f
 20431  2516  0C89               	rrf	9,f
 20432  2517  3901               	andlw	1
 20433  2518  0020               	movlb	0	; select bank0
 20434  2519  00B1               	movwf	??_i2c1_driver_isNACK
 20435  251A  0C31               	rrf	??_i2c1_driver_isNACK,w
 20436  251B  0008               	return
 20437  251C                     __end_of_i2c1_driver_isNACK:	
 20438                           
 20439                           	psect	text88
 20440  23D6                     __ptext88:	
 20441 ;; *************** function _i2c1_driver_TXData *****************
 20442 ;; Defined at:
 20443 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 20444 ;; Parameters:    Size  Location     Type
 20445 ;;  d               1    wreg     unsigned char 
 20446 ;; Auto vars:     Size  Location     Type
 20447 ;;  d               1   17[BANK0 ] unsigned char 
 20448 ;; Return value:  Size  Location     Type
 20449 ;;                  1    wreg      void 
 20450 ;; Registers used:
 20451 ;;		wreg
 20452 ;; Tracked objects:
 20453 ;;		On entry : 0/0
 20454 ;;		On exit  : 0/0
 20455 ;;		Unchanged: 0/0
 20456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20458 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20460 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20461 ;;Total ram usage:        1 bytes
 20462 ;; Hardware stack levels used:    1
 20463 ;; Hardware stack levels required when called:    6
 20464 ;; This function calls:
 20465 ;;		Nothing
 20466 ;; This function is called by:
 20467 ;;		_do_I2C_SEND_ADR_READ
 20468 ;;		_do_I2C_SEND_ADR_WRITE
 20469 ;;		_do_I2C_TX
 20470 ;; This function uses a non-reentrant model
 20471 ;;
 20472                           
 20473                           
 20474                           ;psect for function _i2c1_driver_TXData
 20475  23D6                     _i2c1_driver_TXData:	
 20476                           
 20477                           ;incstack = 0
 20478                           ; Regs used in _i2c1_driver_TXData: [wreg]
 20479                           ;i2c1_driver_TXData@d stored from wreg
 20480  23D6  0020               	movlb	0	; select bank0
 20481  23D7  00B1               	movwf	i2c1_driver_TXData@d
 20482                           
 20483                           ;i2c1_driver.c: 188: SSP1BUF = d;
 20484  23D8  0831               	movf	i2c1_driver_TXData@d,w
 20485  23D9  0024               	movlb	4	; select bank4
 20486  23DA  0091               	movwf	17	;volatile
 20487  23DB  0008               	return
 20488  23DC                     __end_of_i2c1_driver_TXData:	
 20489                           
 20490                           	psect	text89
 20491  2369                     __ptext89:	
 20492 ;; *************** function _i2c1_driver_getRXData *****************
 20493 ;; Defined at:
 20494 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 20495 ;; Parameters:    Size  Location     Type
 20496 ;;		None
 20497 ;; Auto vars:     Size  Location     Type
 20498 ;;		None
 20499 ;; Return value:  Size  Location     Type
 20500 ;;                  1    wreg      unsigned char 
 20501 ;; Registers used:
 20502 ;;		wreg
 20503 ;; Tracked objects:
 20504 ;;		On entry : 0/0
 20505 ;;		On exit  : 0/0
 20506 ;;		Unchanged: 0/0
 20507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20512 ;;Total ram usage:        0 bytes
 20513 ;; Hardware stack levels used:    1
 20514 ;; Hardware stack levels required when called:    6
 20515 ;; This function calls:
 20516 ;;		Nothing
 20517 ;; This function is called by:
 20518 ;;		_do_I2C_RX
 20519 ;; This function uses a non-reentrant model
 20520 ;;
 20521                           
 20522                           
 20523                           ;psect for function _i2c1_driver_getRXData
 20524  2369                     _i2c1_driver_getRXData:	
 20525                           
 20526                           ;i2c1_driver.c: 173: return SSP1BUF;
 20527                           
 20528                           ;incstack = 0
 20529                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 20530  2369  0024               	movlb	4	; select bank4
 20531  236A  0811               	movf	17,w	;volatile
 20532  236B  0008               	return
 20533  236C                     __end_of_i2c1_driver_getRXData:	
 20534                           
 20535                           	psect	text90
 20536  239E                     __ptext90:	
 20537 ;; *************** function _i2c1_driver_sendNACK *****************
 20538 ;; Defined at:
 20539 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 20540 ;; Parameters:    Size  Location     Type
 20541 ;;		None
 20542 ;; Auto vars:     Size  Location     Type
 20543 ;;		None
 20544 ;; Return value:  Size  Location     Type
 20545 ;;                  1    wreg      void 
 20546 ;; Registers used:
 20547 ;;		None
 20548 ;; Tracked objects:
 20549 ;;		On entry : 0/0
 20550 ;;		On exit  : 0/0
 20551 ;;		Unchanged: 0/0
 20552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20557 ;;Total ram usage:        0 bytes
 20558 ;; Hardware stack levels used:    1
 20559 ;; Hardware stack levels required when called:    6
 20560 ;; This function calls:
 20561 ;;		Nothing
 20562 ;; This function is called by:
 20563 ;;		_do_I2C_DO_NACK_STOP
 20564 ;;		_do_I2C_DO_NACK_RESTART
 20565 ;; This function uses a non-reentrant model
 20566 ;;
 20567                           
 20568                           
 20569                           ;psect for function _i2c1_driver_sendNACK
 20570  239E                     _i2c1_driver_sendNACK:	
 20571                           
 20572                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 20573                           
 20574                           ;incstack = 0
 20575                           ; Regs used in _i2c1_driver_sendNACK: []
 20576  239E  0024               	movlb	4	; select bank4
 20577  239F  1696               	bsf	22,5	;volatile
 20578                           
 20579                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 20580  23A0  1616               	bsf	22,4	;volatile
 20581  23A1  0008               	return
 20582  23A2                     __end_of_i2c1_driver_sendNACK:	
 20583                           
 20584                           	psect	text91
 20585  0800                     __ptext91:	
 20586 ;; *************** function _i2c1_driver_resetBus *****************
 20587 ;; Defined at:
 20588 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 20589 ;; Parameters:    Size  Location     Type
 20590 ;;		None
 20591 ;; Auto vars:     Size  Location     Type
 20592 ;;		None
 20593 ;; Return value:  Size  Location     Type
 20594 ;;                  1    wreg      void 
 20595 ;; Registers used:
 20596 ;;		None
 20597 ;; Tracked objects:
 20598 ;;		On entry : 0/0
 20599 ;;		On exit  : 0/0
 20600 ;;		Unchanged: 0/0
 20601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20606 ;;Total ram usage:        0 bytes
 20607 ;; Hardware stack levels used:    1
 20608 ;; Hardware stack levels required when called:    6
 20609 ;; This function calls:
 20610 ;;		Nothing
 20611 ;; This function is called by:
 20612 ;;		_do_I2C_RESET
 20613 ;; This function uses a non-reentrant model
 20614 ;;
 20615                           
 20616                           
 20617                           ;psect for function _i2c1_driver_resetBus
 20618  0800                     _i2c1_driver_resetBus:	
 20619                           
 20620                           ;incstack = 0
 20621                           ; Regs used in _i2c1_driver_resetBus: []
 20622  0800  0008               	return
 20623  0801                     __end_of_i2c1_driver_resetBus:	
 20624                           
 20625                           	psect	text92
 20626  2366                     __ptext92:	
 20627 ;; *************** function _i2c1_driver_startRX *****************
 20628 ;; Defined at:
 20629 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 20630 ;; Parameters:    Size  Location     Type
 20631 ;;		None
 20632 ;; Auto vars:     Size  Location     Type
 20633 ;;		None
 20634 ;; Return value:  Size  Location     Type
 20635 ;;                  1    wreg      void 
 20636 ;; Registers used:
 20637 ;;		None
 20638 ;; Tracked objects:
 20639 ;;		On entry : 0/0
 20640 ;;		On exit  : 0/0
 20641 ;;		Unchanged: 0/0
 20642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20647 ;;Total ram usage:        0 bytes
 20648 ;; Hardware stack levels used:    1
 20649 ;; Hardware stack levels required when called:    6
 20650 ;; This function calls:
 20651 ;;		Nothing
 20652 ;; This function is called by:
 20653 ;;		_do_I2C_RCEN
 20654 ;; This function uses a non-reentrant model
 20655 ;;
 20656                           
 20657                           
 20658                           ;psect for function _i2c1_driver_startRX
 20659  2366                     _i2c1_driver_startRX:	
 20660                           
 20661                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 20662                           
 20663                           ;incstack = 0
 20664                           ; Regs used in _i2c1_driver_startRX: []
 20665  2366  0024               	movlb	4	; select bank4
 20666  2367  1596               	bsf	22,3	;volatile
 20667  2368  0008               	return
 20668  2369                     __end_of_i2c1_driver_startRX:	
 20669                           
 20670                           	psect	text93
 20671  23D0                     __ptext93:	
 20672 ;; *************** function _returnReset *****************
 20673 ;; Defined at:
 20674 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 20675 ;; Parameters:    Size  Location     Type
 20676 ;;  p               1   17[BANK0 ] PTR void 
 20677 ;;		 -> NULL(0), 
 20678 ;; Auto vars:     Size  Location     Type
 20679 ;;		None
 20680 ;; Return value:  Size  Location     Type
 20681 ;;                  1    wreg      enum E8198
 20682 ;; Registers used:
 20683 ;;		wreg
 20684 ;; Tracked objects:
 20685 ;;		On entry : 0/0
 20686 ;;		On exit  : 0/0
 20687 ;;		Unchanged: 0/0
 20688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20689 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20692 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20693 ;;Total ram usage:        1 bytes
 20694 ;; Hardware stack levels used:    1
 20695 ;; Hardware stack levels required when called:    6
 20696 ;; This function calls:
 20697 ;;		Nothing
 20698 ;; This function is called by:
 20699 ;;		_i2c_open
 20700 ;;		_do_I2C_DO_ADDRESS_NACK
 20701 ;;		_do_I2C_TX
 20702 ;;		_do_I2C_RX
 20703 ;;		_do_I2C_TX_EMPTY
 20704 ;;		i1_do_I2C_DO_ADDRESS_NACK
 20705 ;;		i1_do_I2C_TX
 20706 ;;		i1_do_I2C_RX
 20707 ;;		i1_do_I2C_TX_EMPTY
 20708 ;; This function uses a non-reentrant model
 20709 ;;
 20710                           
 20711                           
 20712                           ;psect for function _returnReset
 20713  23D0                     _returnReset:	
 20714                           
 20715                           ;Skip over the trampoline to the duplicate function for level 1
 20716  23D0  1C7E               	btfss	126,0
 20717  23D1  2BD4               	goto	l7026
 20718  23D2  31A3  2B37         	ljmp	i1l7796
 20719  23D4                     _returnReset$intlevel0:	
 20720  23D4                     l7026:	
 20721                           ;incstack = 0
 20722                           ; Regs used in _returnReset: [wreg]
 20723                           
 20724                           
 20725                           ;i2c_master.c: 450: return i2c_reset_link;
 20726  23D4  3005               	movlw	5
 20727  23D5  0008               	return
 20728  23D6                     __end_of_returnReset:	
 20729                           
 20730                           	psect	text94
 20731  23CA                     __ptext94:	
 20732 ;; *************** function _returnStop *****************
 20733 ;; Defined at:
 20734 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 20735 ;; Parameters:    Size  Location     Type
 20736 ;;  p               1   17[BANK0 ] PTR void 
 20737 ;;		 -> NULL(0), 
 20738 ;; Auto vars:     Size  Location     Type
 20739 ;;		None
 20740 ;; Return value:  Size  Location     Type
 20741 ;;                  1    wreg      enum E8198
 20742 ;; Registers used:
 20743 ;;		wreg
 20744 ;; Tracked objects:
 20745 ;;		On entry : 0/0
 20746 ;;		On exit  : 0/0
 20747 ;;		Unchanged: 0/0
 20748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20749 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20752 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20753 ;;Total ram usage:        1 bytes
 20754 ;; Hardware stack levels used:    1
 20755 ;; Hardware stack levels required when called:    6
 20756 ;; This function calls:
 20757 ;;		Nothing
 20758 ;; This function is called by:
 20759 ;;		_i2c_open
 20760 ;;		_setCallBack
 20761 ;;		_do_I2C_DO_ADDRESS_NACK
 20762 ;;		_do_I2C_TX
 20763 ;;		_do_I2C_RX
 20764 ;;		_do_I2C_TX_EMPTY
 20765 ;;		i1_do_I2C_DO_ADDRESS_NACK
 20766 ;;		i1_do_I2C_TX
 20767 ;;		i1_do_I2C_RX
 20768 ;;		i1_do_I2C_TX_EMPTY
 20769 ;; This function uses a non-reentrant model
 20770 ;;
 20771                           
 20772                           
 20773                           ;psect for function _returnStop
 20774  23CA                     _returnStop:	
 20775                           
 20776                           ;Skip over the trampoline to the duplicate function for level 1
 20777  23CA  1C7E               	btfss	126,0
 20778  23CB  2BCE               	goto	l7022
 20779  23CC  31A3  2B35         	ljmp	i1l7792
 20780  23CE                     _returnStop$intlevel0:	
 20781  23CE                     l7022:	
 20782                           ;incstack = 0
 20783                           ; Regs used in _returnStop: [wreg]
 20784                           
 20785                           
 20786                           ;i2c_master.c: 445: return i2c_stop;
 20787  23CE  3001               	movlw	1
 20788  23CF  0008               	return
 20789  23D0                     __end_of_returnStop:	
 20790                           
 20791                           	psect	text95
 20792  2363                     __ptext95:	
 20793 ;; *************** function _i2c1_driver_stop *****************
 20794 ;; Defined at:
 20795 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 20796 ;; Parameters:    Size  Location     Type
 20797 ;;		None
 20798 ;; Auto vars:     Size  Location     Type
 20799 ;;		None
 20800 ;; Return value:  Size  Location     Type
 20801 ;;                  1    wreg      void 
 20802 ;; Registers used:
 20803 ;;		None
 20804 ;; Tracked objects:
 20805 ;;		On entry : 0/0
 20806 ;;		On exit  : 0/0
 20807 ;;		Unchanged: 0/0
 20808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20813 ;;Total ram usage:        0 bytes
 20814 ;; Hardware stack levels used:    1
 20815 ;; Hardware stack levels required when called:    6
 20816 ;; This function calls:
 20817 ;;		Nothing
 20818 ;; This function is called by:
 20819 ;;		_do_I2C_SEND_STOP
 20820 ;; This function uses a non-reentrant model
 20821 ;;
 20822                           
 20823                           
 20824                           ;psect for function _i2c1_driver_stop
 20825  2363                     _i2c1_driver_stop:	
 20826                           
 20827                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 20828                           
 20829                           ;incstack = 0
 20830                           ; Regs used in _i2c1_driver_stop: []
 20831  2363  0024               	movlb	4	; select bank4
 20832  2364  1516               	bsf	22,2	;volatile
 20833  2365  0008               	return
 20834  2366                     __end_of_i2c1_driver_stop:	
 20835                           
 20836                           	psect	text96
 20837  2360                     __ptext96:	
 20838 ;; *************** function _i2c1_driver_restart *****************
 20839 ;; Defined at:
 20840 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 20841 ;; Parameters:    Size  Location     Type
 20842 ;;		None
 20843 ;; Auto vars:     Size  Location     Type
 20844 ;;		None
 20845 ;; Return value:  Size  Location     Type
 20846 ;;                  1    wreg      void 
 20847 ;; Registers used:
 20848 ;;		None
 20849 ;; Tracked objects:
 20850 ;;		On entry : 0/0
 20851 ;;		On exit  : 0/0
 20852 ;;		Unchanged: 0/0
 20853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20858 ;;Total ram usage:        0 bytes
 20859 ;; Hardware stack levels used:    1
 20860 ;; Hardware stack levels required when called:    6
 20861 ;; This function calls:
 20862 ;;		Nothing
 20863 ;; This function is called by:
 20864 ;;		_do_I2C_SEND_RESTART_READ
 20865 ;;		_do_I2C_SEND_RESTART_WRITE
 20866 ;;		_do_I2C_SEND_RESTART
 20867 ;; This function uses a non-reentrant model
 20868 ;;
 20869                           
 20870                           
 20871                           ;psect for function _i2c1_driver_restart
 20872  2360                     _i2c1_driver_restart:	
 20873                           
 20874                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 20875                           
 20876                           ;incstack = 0
 20877                           ; Regs used in _i2c1_driver_restart: []
 20878  2360  0024               	movlb	4	; select bank4
 20879  2361  1496               	bsf	22,1	;volatile
 20880  2362  0008               	return
 20881  2363                     __end_of_i2c1_driver_restart:	
 20882                           
 20883                           	psect	text97
 20884  239A                     __ptext97:	
 20885 ;; *************** function _i2c1_driver_sendACK *****************
 20886 ;; Defined at:
 20887 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 20888 ;; Parameters:    Size  Location     Type
 20889 ;;		None
 20890 ;; Auto vars:     Size  Location     Type
 20891 ;;		None
 20892 ;; Return value:  Size  Location     Type
 20893 ;;                  1    wreg      void 
 20894 ;; Registers used:
 20895 ;;		None
 20896 ;; Tracked objects:
 20897 ;;		On entry : 0/0
 20898 ;;		On exit  : 0/0
 20899 ;;		Unchanged: 0/0
 20900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20905 ;;Total ram usage:        0 bytes
 20906 ;; Hardware stack levels used:    1
 20907 ;; Hardware stack levels required when called:    6
 20908 ;; This function calls:
 20909 ;;		Nothing
 20910 ;; This function is called by:
 20911 ;;		_do_I2C_DO_ACK
 20912 ;;		_do_I2C_RX
 20913 ;; This function uses a non-reentrant model
 20914 ;;
 20915                           
 20916                           
 20917                           ;psect for function _i2c1_driver_sendACK
 20918  239A                     _i2c1_driver_sendACK:	
 20919                           
 20920                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 20921                           
 20922                           ;incstack = 0
 20923                           ; Regs used in _i2c1_driver_sendACK: []
 20924  239A  0024               	movlb	4	; select bank4
 20925  239B  1296               	bcf	22,5	;volatile
 20926                           
 20927                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 20928  239C  1616               	bsf	22,4	;volatile
 20929  239D  0008               	return
 20930  239E                     __end_of_i2c1_driver_sendACK:	
 20931                           
 20932                           	psect	text98
 20933  235D                     __ptext98:	
 20934 ;; *************** function _i2c1_driver_start *****************
 20935 ;; Defined at:
 20936 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 20937 ;; Parameters:    Size  Location     Type
 20938 ;;		None
 20939 ;; Auto vars:     Size  Location     Type
 20940 ;;		None
 20941 ;; Return value:  Size  Location     Type
 20942 ;;                  1    wreg      void 
 20943 ;; Registers used:
 20944 ;;		None
 20945 ;; Tracked objects:
 20946 ;;		On entry : 0/0
 20947 ;;		On exit  : 0/0
 20948 ;;		Unchanged: 0/0
 20949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20954 ;;Total ram usage:        0 bytes
 20955 ;; Hardware stack levels used:    1
 20956 ;; Hardware stack levels required when called:    6
 20957 ;; This function calls:
 20958 ;;		Nothing
 20959 ;; This function is called by:
 20960 ;;		_i2c_masterOperation
 20961 ;; This function uses a non-reentrant model
 20962 ;;
 20963                           
 20964                           
 20965                           ;psect for function _i2c1_driver_start
 20966  235D                     _i2c1_driver_start:	
 20967                           
 20968                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
 20969                           
 20970                           ;incstack = 0
 20971                           ; Regs used in _i2c1_driver_start: []
 20972  235D  0024               	movlb	4	; select bank4
 20973  235E  1416               	bsf	22,0	;volatile
 20974  235F  0008               	return
 20975  2360                     __end_of_i2c1_driver_start:	
 20976                           
 20977                           	psect	text99
 20978  1DFD                     __ptext99:	
 20979 ;; *************** function ___awdiv *****************
 20980 ;; Defined at:
 20981 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 20982 ;; Parameters:    Size  Location     Type
 20983 ;;  divisor         2   17[BANK0 ] int 
 20984 ;;  dividend        2   19[BANK0 ] int 
 20985 ;; Auto vars:     Size  Location     Type
 20986 ;;  quotient        2   24[BANK0 ] int 
 20987 ;;  sign            1   23[BANK0 ] unsigned char 
 20988 ;;  counter         1   22[BANK0 ] unsigned char 
 20989 ;; Return value:  Size  Location     Type
 20990 ;;                  2   17[BANK0 ] int 
 20991 ;; Registers used:
 20992 ;;		wreg, status,2, status,0
 20993 ;; Tracked objects:
 20994 ;;		On entry : 0/0
 20995 ;;		On exit  : 0/0
 20996 ;;		Unchanged: 0/0
 20997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20998 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20999 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21000 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21001 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21002 ;;Total ram usage:        9 bytes
 21003 ;; Hardware stack levels used:    1
 21004 ;; Hardware stack levels required when called:    6
 21005 ;; This function calls:
 21006 ;;		Nothing
 21007 ;; This function is called by:
 21008 ;;		_drv_write_DC
 21009 ;;		_drv_outputSine
 21010 ;; This function uses a non-reentrant model
 21011 ;;
 21012                           
 21013                           
 21014                           ;psect for function ___awdiv
 21015  1DFD                     ___awdiv:	
 21016                           
 21017                           ;incstack = 0
 21018                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 21019  1DFD  0020               	movlb	0	; select bank0
 21020  1DFE  01B7               	clrf	___awdiv@sign
 21021  1DFF  1FB2               	btfss	___awdiv@divisor+1,7
 21022  1E00  2E08               	goto	l5258
 21023  1E01  09B1               	comf	___awdiv@divisor,f
 21024  1E02  09B2               	comf	___awdiv@divisor+1,f
 21025  1E03  0AB1               	incf	___awdiv@divisor,f
 21026  1E04  1903               	skipnz
 21027  1E05  0AB2               	incf	___awdiv@divisor+1,f
 21028  1E06  01B7               	clrf	___awdiv@sign
 21029  1E07  0AB7               	incf	___awdiv@sign,f
 21030  1E08                     l5258:	
 21031  1E08  1FB4               	btfss	___awdiv@dividend+1,7
 21032  1E09  2E13               	goto	l5264
 21033  1E0A  09B3               	comf	___awdiv@dividend,f
 21034  1E0B  09B4               	comf	___awdiv@dividend+1,f
 21035  1E0C  0AB3               	incf	___awdiv@dividend,f
 21036  1E0D  1903               	skipnz
 21037  1E0E  0AB4               	incf	___awdiv@dividend+1,f
 21038  1E0F  3001               	movlw	1
 21039  1E10  00B5               	movwf	??___awdiv
 21040  1E11  0835               	movf	??___awdiv,w
 21041  1E12  06B7               	xorwf	___awdiv@sign,f
 21042  1E13                     l5264:	
 21043  1E13  01B8               	clrf	___awdiv@quotient
 21044  1E14  01B9               	clrf	___awdiv@quotient+1
 21045  1E15  0831               	movf	___awdiv@divisor,w
 21046  1E16  0432               	iorwf	___awdiv@divisor+1,w
 21047  1E17  1903               	btfsc	3,2
 21048  1E18  2E42               	goto	l5286
 21049  1E19  01B6               	clrf	___awdiv@counter
 21050  1E1A  0AB6               	incf	___awdiv@counter,f
 21051  1E1B                     l5274:	
 21052  1E1B  1BB2               	btfsc	___awdiv@divisor+1,7
 21053  1E1C  2E27               	goto	l5276
 21054  1E1D  3001               	movlw	1
 21055  1E1E                     u4265:	
 21056  1E1E  35B1               	lslf	___awdiv@divisor,f
 21057  1E1F  0DB2               	rlf	___awdiv@divisor+1,f
 21058  1E20  0B89               	decfsz	9,f
 21059  1E21  2E1E               	goto	u4265
 21060  1E22  3001               	movlw	1
 21061  1E23  00B5               	movwf	??___awdiv
 21062  1E24  0835               	movf	??___awdiv,w
 21063  1E25  07B6               	addwf	___awdiv@counter,f
 21064  1E26  2E1B               	goto	l5274
 21065  1E27                     l5276:	
 21066  1E27  3001               	movlw	1
 21067  1E28                     u4285:	
 21068  1E28  35B8               	lslf	___awdiv@quotient,f
 21069  1E29  0DB9               	rlf	___awdiv@quotient+1,f
 21070  1E2A  0B89               	decfsz	9,f
 21071  1E2B  2E28               	goto	u4285
 21072  1E2C  0832               	movf	___awdiv@divisor+1,w
 21073  1E2D  0234               	subwf	___awdiv@dividend+1,w
 21074  1E2E  1D03               	skipz
 21075  1E2F  2E32               	goto	u4295
 21076  1E30  0831               	movf	___awdiv@divisor,w
 21077  1E31  0233               	subwf	___awdiv@dividend,w
 21078  1E32                     u4295:	
 21079  1E32  1C03               	skipc
 21080  1E33  2E39               	goto	l5282
 21081  1E34  0831               	movf	___awdiv@divisor,w
 21082  1E35  02B3               	subwf	___awdiv@dividend,f
 21083  1E36  0832               	movf	___awdiv@divisor+1,w
 21084  1E37  3BB4               	subwfb	___awdiv@dividend+1,f
 21085  1E38  1438               	bsf	___awdiv@quotient,0
 21086  1E39                     l5282:	
 21087  1E39  3001               	movlw	1
 21088  1E3A                     u4305:	
 21089  1E3A  36B2               	lsrf	___awdiv@divisor+1,f
 21090  1E3B  0CB1               	rrf	___awdiv@divisor,f
 21091  1E3C  0B89               	decfsz	9,f
 21092  1E3D  2E3A               	goto	u4305
 21093  1E3E  3001               	movlw	1
 21094  1E3F  02B6               	subwf	___awdiv@counter,f
 21095  1E40  1D03               	btfss	3,2
 21096  1E41  2E27               	goto	l5276
 21097  1E42                     l5286:	
 21098  1E42  0837               	movf	___awdiv@sign,w
 21099  1E43  1903               	btfsc	3,2
 21100  1E44  2E4A               	goto	l5290
 21101  1E45  09B8               	comf	___awdiv@quotient,f
 21102  1E46  09B9               	comf	___awdiv@quotient+1,f
 21103  1E47  0AB8               	incf	___awdiv@quotient,f
 21104  1E48  1903               	skipnz
 21105  1E49  0AB9               	incf	___awdiv@quotient+1,f
 21106  1E4A                     l5290:	
 21107  1E4A  0839               	movf	___awdiv@quotient+1,w
 21108  1E4B  00B2               	movwf	?___awdiv+1
 21109  1E4C  0838               	movf	___awdiv@quotient,w
 21110  1E4D  00B1               	movwf	?___awdiv
 21111  1E4E  0008               	return
 21112  1E4F                     __end_of___awdiv:	
 21113                           
 21114                           	psect	text100
 21115  1712                     __ptext100:	
 21116 ;; *************** function _calcHeaterPins *****************
 21117 ;; Defined at:
 21118 ;;		line 263 in file "main.c"
 21119 ;; Parameters:    Size  Location     Type
 21120 ;;		None
 21121 ;; Auto vars:     Size  Location     Type
 21122 ;;		None
 21123 ;; Return value:  Size  Location     Type
 21124 ;;                  1    wreg      void 
 21125 ;; Registers used:
 21126 ;;		wreg, status,2, status,0
 21127 ;; Tracked objects:
 21128 ;;		On entry : 0/0
 21129 ;;		On exit  : 0/0
 21130 ;;		Unchanged: 0/0
 21131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21134 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21135 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21136 ;;Total ram usage:        4 bytes
 21137 ;; Hardware stack levels used:    1
 21138 ;; Hardware stack levels required when called:    6
 21139 ;; This function calls:
 21140 ;;		Nothing
 21141 ;; This function is called by:
 21142 ;;		_doMove
 21143 ;; This function uses a non-reentrant model
 21144 ;;
 21145                           
 21146                           
 21147                           ;psect for function _calcHeaterPins
 21148  1712                     _calcHeaterPins:	
 21149                           
 21150                           ;main.c: 264: first_top = moveVector_downs & moveMask;
 21151                           
 21152                           ;incstack = 0
 21153                           ; Regs used in _calcHeaterPins: [wreg+status,2+status,0]
 21154  1712  0020               	movlb	0	; select bank0
 21155  1713  084E               	movf	_moveMask,w
 21156  1714  0021               	movlb	1	; select bank1
 21157  1715  055C               	andwf	_moveVector_downs^(0+128),w
 21158  1716  0022               	movlb	2	; select bank2
 21159  1717  00D2               	movwf	_first_top^(0+256)
 21160  1718  0020               	movlb	0	; select bank0
 21161  1719  084F               	movf	_moveMask+1,w
 21162  171A  0021               	movlb	1	; select bank1
 21163  171B  055D               	andwf	(_moveVector_downs+1)^(0+128),w
 21164  171C  0022               	movlb	2	; select bank2
 21165  171D  00D3               	movwf	(_first_top+1)^(0+256)
 21166  171E  0020               	movlb	0	; select bank0
 21167  171F  0850               	movf	_moveMask+2,w
 21168  1720  0021               	movlb	1	; select bank1
 21169  1721  055E               	andwf	(_moveVector_downs+2)^(0+128),w
 21170  1722  0022               	movlb	2	; select bank2
 21171  1723  00D4               	movwf	(_first_top+2)^(0+256)
 21172  1724  0020               	movlb	0	; select bank0
 21173  1725  0851               	movf	_moveMask+3,w
 21174  1726  0021               	movlb	1	; select bank1
 21175  1727  055F               	andwf	(_moveVector_downs+3)^(0+128),w
 21176  1728  0022               	movlb	2	; select bank2
 21177  1729  00D5               	movwf	(_first_top+3)^(0+256)
 21178                           
 21179                           ;main.c: 265: first_bottom = (~moveVector_downs) & moveMask;
 21180  172A  0021               	movlb	1	; select bank1
 21181  172B  095C               	comf	_moveVector_downs^(0+128),w
 21182  172C  0020               	movlb	0	; select bank0
 21183  172D  00B1               	movwf	??_calcHeaterPins
 21184  172E  0021               	movlb	1	; select bank1
 21185  172F  095D               	comf	(_moveVector_downs+1)^(0+128),w
 21186  1730  0020               	movlb	0	; select bank0
 21187  1731  00B2               	movwf	??_calcHeaterPins+1
 21188  1732  0021               	movlb	1	; select bank1
 21189  1733  095E               	comf	(_moveVector_downs+2)^(0+128),w
 21190  1734  0020               	movlb	0	; select bank0
 21191  1735  00B3               	movwf	??_calcHeaterPins+2
 21192  1736  0021               	movlb	1	; select bank1
 21193  1737  095F               	comf	(_moveVector_downs+3)^(0+128),w
 21194  1738  0020               	movlb	0	; select bank0
 21195  1739  00B4               	movwf	??_calcHeaterPins+3
 21196  173A  084E               	movf	_moveMask,w
 21197  173B  0531               	andwf	??_calcHeaterPins,w
 21198  173C  0022               	movlb	2	; select bank2
 21199  173D  00D6               	movwf	_first_bottom^(0+256)
 21200  173E  0020               	movlb	0	; select bank0
 21201  173F  084F               	movf	_moveMask+1,w
 21202  1740  0532               	andwf	??_calcHeaterPins+1,w
 21203  1741  0022               	movlb	2	; select bank2
 21204  1742  00D7               	movwf	(_first_bottom+1)^(0+256)
 21205  1743  0020               	movlb	0	; select bank0
 21206  1744  0850               	movf	_moveMask+2,w
 21207  1745  0533               	andwf	??_calcHeaterPins+2,w
 21208  1746  0022               	movlb	2	; select bank2
 21209  1747  00D8               	movwf	(_first_bottom+2)^(0+256)
 21210  1748  0020               	movlb	0	; select bank0
 21211  1749  0851               	movf	_moveMask+3,w
 21212  174A  0534               	andwf	??_calcHeaterPins+3,w
 21213  174B  0022               	movlb	2	; select bank2
 21214  174C  00D9               	movwf	(_first_bottom+3)^(0+256)
 21215                           
 21216                           ;main.c: 266: second_top = moveVector_ups & moveMask;
 21217  174D  0020               	movlb	0	; select bank0
 21218  174E  084E               	movf	_moveMask,w
 21219  174F  0021               	movlb	1	; select bank1
 21220  1750  0560               	andwf	_moveVector_ups^(0+128),w
 21221  1751  0022               	movlb	2	; select bank2
 21222  1752  00DA               	movwf	_second_top^(0+256)
 21223  1753  0020               	movlb	0	; select bank0
 21224  1754  084F               	movf	_moveMask+1,w
 21225  1755  0021               	movlb	1	; select bank1
 21226  1756  0561               	andwf	(_moveVector_ups+1)^(0+128),w
 21227  1757  0022               	movlb	2	; select bank2
 21228  1758  00DB               	movwf	(_second_top+1)^(0+256)
 21229  1759  0020               	movlb	0	; select bank0
 21230  175A  0850               	movf	_moveMask+2,w
 21231  175B  0021               	movlb	1	; select bank1
 21232  175C  0562               	andwf	(_moveVector_ups+2)^(0+128),w
 21233  175D  0022               	movlb	2	; select bank2
 21234  175E  00DC               	movwf	(_second_top+2)^(0+256)
 21235  175F  0020               	movlb	0	; select bank0
 21236  1760  0851               	movf	_moveMask+3,w
 21237  1761  0021               	movlb	1	; select bank1
 21238  1762  0563               	andwf	(_moveVector_ups+3)^(0+128),w
 21239  1763  0022               	movlb	2	; select bank2
 21240  1764  00DD               	movwf	(_second_top+3)^(0+256)
 21241                           
 21242                           ;main.c: 267: second_bottom = (~moveVector_ups) & moveMask;
 21243  1765  0021               	movlb	1	; select bank1
 21244  1766  0960               	comf	_moveVector_ups^(0+128),w
 21245  1767  0020               	movlb	0	; select bank0
 21246  1768  00B1               	movwf	??_calcHeaterPins
 21247  1769  0021               	movlb	1	; select bank1
 21248  176A  0961               	comf	(_moveVector_ups+1)^(0+128),w
 21249  176B  0020               	movlb	0	; select bank0
 21250  176C  00B2               	movwf	??_calcHeaterPins+1
 21251  176D  0021               	movlb	1	; select bank1
 21252  176E  0962               	comf	(_moveVector_ups+2)^(0+128),w
 21253  176F  0020               	movlb	0	; select bank0
 21254  1770  00B3               	movwf	??_calcHeaterPins+2
 21255  1771  0021               	movlb	1	; select bank1
 21256  1772  0963               	comf	(_moveVector_ups+3)^(0+128),w
 21257  1773  0020               	movlb	0	; select bank0
 21258  1774  00B4               	movwf	??_calcHeaterPins+3
 21259  1775  084E               	movf	_moveMask,w
 21260  1776  0531               	andwf	??_calcHeaterPins,w
 21261  1777  0022               	movlb	2	; select bank2
 21262  1778  00CE               	movwf	_second_bottom^(0+256)
 21263  1779  0020               	movlb	0	; select bank0
 21264  177A  084F               	movf	_moveMask+1,w
 21265  177B  0532               	andwf	??_calcHeaterPins+1,w
 21266  177C  0022               	movlb	2	; select bank2
 21267  177D  00CF               	movwf	(_second_bottom+1)^(0+256)
 21268  177E  0020               	movlb	0	; select bank0
 21269  177F  0850               	movf	_moveMask+2,w
 21270  1780  0533               	andwf	??_calcHeaterPins+2,w
 21271  1781  0022               	movlb	2	; select bank2
 21272  1782  00D0               	movwf	(_second_bottom+2)^(0+256)
 21273  1783  0020               	movlb	0	; select bank0
 21274  1784  0851               	movf	_moveMask+3,w
 21275  1785  0534               	andwf	??_calcHeaterPins+3,w
 21276  1786  0022               	movlb	2	; select bank2
 21277  1787  00D1               	movwf	(_second_bottom+3)^(0+256)
 21278  1788  0008               	return
 21279  1789                     __end_of_calcHeaterPins:	
 21280                           
 21281                           	psect	text101
 21282  235A                     __ptext101:	
 21283 ;; *************** function _TMR2_StartTimer *****************
 21284 ;; Defined at:
 21285 ;;		line 85 in file "mcc_generated_files/tmr2.c"
 21286 ;; Parameters:    Size  Location     Type
 21287 ;;		None
 21288 ;; Auto vars:     Size  Location     Type
 21289 ;;		None
 21290 ;; Return value:  Size  Location     Type
 21291 ;;                  1    wreg      void 
 21292 ;; Registers used:
 21293 ;;		None
 21294 ;; Tracked objects:
 21295 ;;		On entry : 0/0
 21296 ;;		On exit  : 0/0
 21297 ;;		Unchanged: 0/0
 21298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21303 ;;Total ram usage:        0 bytes
 21304 ;; Hardware stack levels used:    1
 21305 ;; Hardware stack levels required when called:    6
 21306 ;; This function calls:
 21307 ;;		Nothing
 21308 ;; This function is called by:
 21309 ;;		_doMove
 21310 ;; This function uses a non-reentrant model
 21311 ;;
 21312                           
 21313                           
 21314                           ;psect for function _TMR2_StartTimer
 21315  235A                     _TMR2_StartTimer:	
 21316                           
 21317                           ;tmr2.c: 88: T2CONbits.TMR2ON = 1;
 21318                           
 21319                           ;incstack = 0
 21320                           ; Regs used in _TMR2_StartTimer: []
 21321  235A  0020               	movlb	0	; select bank0
 21322  235B  151F               	bsf	31,2	;volatile
 21323  235C  0008               	return
 21324  235D                     __end_of_TMR2_StartTimer:	
 21325                           
 21326                           	psect	text102
 21327  2357                     __ptext102:	
 21328 ;; *************** function _TMR0_StartTimer *****************
 21329 ;; Defined at:
 21330 ;;		line 85 in file "mcc_generated_files/tmr0.c"
 21331 ;; Parameters:    Size  Location     Type
 21332 ;;		None
 21333 ;; Auto vars:     Size  Location     Type
 21334 ;;		None
 21335 ;; Return value:  Size  Location     Type
 21336 ;;                  1    wreg      void 
 21337 ;; Registers used:
 21338 ;;		None
 21339 ;; Tracked objects:
 21340 ;;		On entry : 0/0
 21341 ;;		On exit  : 0/0
 21342 ;;		Unchanged: 0/0
 21343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21348 ;;Total ram usage:        0 bytes
 21349 ;; Hardware stack levels used:    1
 21350 ;; Hardware stack levels required when called:    6
 21351 ;; This function calls:
 21352 ;;		Nothing
 21353 ;; This function is called by:
 21354 ;;		_doMove
 21355 ;; This function uses a non-reentrant model
 21356 ;;
 21357                           
 21358                           
 21359                           ;psect for function _TMR0_StartTimer
 21360  2357                     _TMR0_StartTimer:	
 21361                           
 21362                           ;tmr0.c: 88: T0CON0bits.T0EN = 1;
 21363                           
 21364                           ;incstack = 0
 21365                           ; Regs used in _TMR0_StartTimer: []
 21366  2357  0020               	movlb	0	; select bank0
 21367  2358  1797               	bsf	23,7	;volatile
 21368  2359  0008               	return
 21369  235A                     __end_of_TMR0_StartTimer:	
 21370                           
 21371                           	psect	text103
 21372  13CC                     __ptext103:	
 21373 ;; *************** function _LEDsOn *****************
 21374 ;; Defined at:
 21375 ;;		line 6 in file "LEDcomm.c"
 21376 ;; Parameters:    Size  Location     Type
 21377 ;;  LEDpins         4   36[BANK0 ] unsigned long 
 21378 ;;  topOrBottom     2   40[BANK0 ] int 
 21379 ;; Auto vars:     Size  Location     Type
 21380 ;;		None
 21381 ;; Return value:  Size  Location     Type
 21382 ;;                  1    wreg      void 
 21383 ;; Registers used:
 21384 ;;		wreg, status,2, status,0, pclath, cstack
 21385 ;; Tracked objects:
 21386 ;;		On entry : 0/0
 21387 ;;		On exit  : 0/0
 21388 ;;		Unchanged: 0/0
 21389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21390 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21392 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21393 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21394 ;;Total ram usage:       10 bytes
 21395 ;; Hardware stack levels used:    1
 21396 ;; Hardware stack levels required when called:    8
 21397 ;; This function calls:
 21398 ;;		_send_2length_2bytes_IK
 21399 ;; This function is called by:
 21400 ;;		_LED_test_openshort
 21401 ;;		_doMove
 21402 ;;		_setHeaterToggle
 21403 ;;		_demoSequence
 21404 ;; This function uses a non-reentrant model
 21405 ;;
 21406                           
 21407                           
 21408                           ;psect for function _LEDsOn
 21409  13CC                     _LEDsOn:	
 21410                           
 21411                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 21412                           
 21413                           ;incstack = 0
 21414                           ; Regs used in _LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 21415  13CC  0020               	movlb	0	; select bank0
 21416  13CD  0844               	movf	LEDsOn@LEDpins,w
 21417  13CE  00CA               	movwf	??_LEDsOn
 21418  13CF  0845               	movf	LEDsOn@LEDpins+1,w
 21419  13D0  00CB               	movwf	??_LEDsOn+1
 21420  13D1  0846               	movf	LEDsOn@LEDpins+2,w
 21421  13D2  00CC               	movwf	??_LEDsOn+2
 21422  13D3  0847               	movf	LEDsOn@LEDpins+3,w
 21423  13D4  00CD               	movwf	??_LEDsOn+3
 21424  13D5  3010               	movlw	16
 21425  13D6                     u7075:	
 21426  13D6  36CD               	lsrf	??_LEDsOn+3,f
 21427  13D7  0CCC               	rrf	??_LEDsOn+2,f
 21428  13D8  0CCB               	rrf	??_LEDsOn+1,f
 21429  13D9  0CCA               	rrf	??_LEDsOn,f
 21430  13DA  0B89               	decfsz	9,f
 21431  13DB  2BD6               	goto	u7075
 21432  13DC  084B               	movf	??_LEDsOn+1,w
 21433  13DD  00BD               	movwf	send_2length_2bytes_IK@data1+1
 21434  13DE  084A               	movf	??_LEDsOn,w
 21435  13DF  00BC               	movwf	send_2length_2bytes_IK@data1
 21436  13E0  0845               	movf	LEDsOn@LEDpins+1,w
 21437  13E1  00BF               	movwf	send_2length_2bytes_IK@data2+1
 21438  13E2  0844               	movf	LEDsOn@LEDpins,w
 21439  13E3  00BE               	movwf	send_2length_2bytes_IK@data2
 21440  13E4  01C0               	clrf	send_2length_2bytes_IK@latch_start
 21441  13E5  0AC0               	incf	send_2length_2bytes_IK@latch_start,f
 21442  13E6  0849               	movf	LEDsOn@topOrBottom+1,w
 21443  13E7  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 21444  13E8  0848               	movf	LEDsOn@topOrBottom,w
 21445  13E9  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 21446  13EA  31A5  25F0         	fcall	_send_2length_2bytes_IK
 21447  13EC  0008               	return
 21448  13ED                     __end_of_LEDsOn:	
 21449                           
 21450                           	psect	text104
 21451  25F0                     __ptext104:	
 21452 ;; *************** function _send_2length_2bytes_IK *****************
 21453 ;; Defined at:
 21454 ;;		line 70 in file "LEDcomm.c"
 21455 ;; Parameters:    Size  Location     Type
 21456 ;;  data1           2   28[BANK0 ] unsigned int 
 21457 ;;  data2           2   30[BANK0 ] unsigned int 
 21458 ;;  latch_start     1   32[BANK0 ] unsigned char 
 21459 ;;  topOrBottom     2   33[BANK0 ] int 
 21460 ;; Auto vars:     Size  Location     Type
 21461 ;;		None
 21462 ;; Return value:  Size  Location     Type
 21463 ;;                  1    wreg      void 
 21464 ;; Registers used:
 21465 ;;		wreg, status,2, status,0, pclath, cstack
 21466 ;; Tracked objects:
 21467 ;;		On entry : 0/0
 21468 ;;		On exit  : 0/0
 21469 ;;		Unchanged: 0/0
 21470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21471 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21473 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21474 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21475 ;;Total ram usage:        8 bytes
 21476 ;; Hardware stack levels used:    1
 21477 ;; Hardware stack levels required when called:    7
 21478 ;; This function calls:
 21479 ;;		_send_2bytes_latchless_IK
 21480 ;;		_send_last_2bytes_IK
 21481 ;; This function is called by:
 21482 ;;		_LEDsOn
 21483 ;;		_LEDsPwr
 21484 ;;		_LED_setBrightnessRange
 21485 ;;		_LED_test_openshort
 21486 ;;		_LED_readConfig
 21487 ;; This function uses a non-reentrant model
 21488 ;;
 21489                           
 21490                           
 21491                           ;psect for function _send_2length_2bytes_IK
 21492  25F0                     _send_2length_2bytes_IK:	
 21493                           
 21494                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 21495                           
 21496                           ;incstack = 0
 21497                           ; Regs used in _send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 21498  25F0  0020               	movlb	0	; select bank0
 21499  25F1  083D               	movf	send_2length_2bytes_IK@data1+1,w
 21500  25F2  00B2               	movwf	send_2bytes_latchless_IK@data+1
 21501  25F3  083C               	movf	send_2length_2bytes_IK@data1,w
 21502  25F4  00B1               	movwf	send_2bytes_latchless_IK@data
 21503  25F5  3199  2178  31A5   	fcall	_send_2bytes_latchless_IK
 21504                           
 21505                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 21506  25F8  0020               	movlb	0	; select bank0
 21507  25F9  083F               	movf	send_2length_2bytes_IK@data2+1,w
 21508  25FA  00B2               	movwf	send_last_2bytes_IK@data+1
 21509  25FB  083E               	movf	send_2length_2bytes_IK@data2,w
 21510  25FC  00B1               	movwf	send_last_2bytes_IK@data
 21511  25FD  0840               	movf	send_2length_2bytes_IK@latch_start,w
 21512  25FE  00C3               	movwf	??_send_2length_2bytes_IK
 21513  25FF  0843               	movf	??_send_2length_2bytes_IK,w
 21514  2600  00B3               	movwf	send_last_2bytes_IK@latch_start
 21515  2601  0842               	movf	send_2length_2bytes_IK@topOrBottom+1,w
 21516  2602  00B5               	movwf	send_last_2bytes_IK@topOrBottom+1
 21517  2603  0841               	movf	send_2length_2bytes_IK@topOrBottom,w
 21518  2604  00B4               	movwf	send_last_2bytes_IK@topOrBottom
 21519  2605  319E  26F4         	fcall	_send_last_2bytes_IK
 21520  2607  0008               	return
 21521  2608                     __end_of_send_2length_2bytes_IK:	
 21522                           
 21523                           	psect	text105
 21524  1EF4                     __ptext105:	
 21525 ;; *************** function _send_last_2bytes_IK *****************
 21526 ;; Defined at:
 21527 ;;		line 19 in file "LEDcomm.c"
 21528 ;; Parameters:    Size  Location     Type
 21529 ;;  data            2   17[BANK0 ] unsigned int 
 21530 ;;  latch_start     1   19[BANK0 ] unsigned char 
 21531 ;;  topOrBottom     2   20[BANK0 ] int 
 21532 ;; Auto vars:     Size  Location     Type
 21533 ;;  j               2   26[BANK0 ] int 
 21534 ;; Return value:  Size  Location     Type
 21535 ;;                  1    wreg      void 
 21536 ;; Registers used:
 21537 ;;		wreg, status,2, status,0
 21538 ;; Tracked objects:
 21539 ;;		On entry : 0/0
 21540 ;;		On exit  : 0/0
 21541 ;;		Unchanged: 0/0
 21542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21543 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21544 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21545 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21546 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21547 ;;Total ram usage:       11 bytes
 21548 ;; Hardware stack levels used:    1
 21549 ;; Hardware stack levels required when called:    6
 21550 ;; This function calls:
 21551 ;;		Nothing
 21552 ;; This function is called by:
 21553 ;;		_send_2length_2bytes_IK
 21554 ;; This function uses a non-reentrant model
 21555 ;;
 21556                           
 21557                           
 21558                           ;psect for function _send_last_2bytes_IK
 21559  1EF4                     _send_last_2bytes_IK:	
 21560                           
 21561                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 21562                           
 21563                           ;incstack = 0
 21564                           ; Regs used in _send_last_2bytes_IK: [wreg+status,2+status,0]
 21565  1EF4  0020               	movlb	0	; select bank0
 21566  1EF5  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 21567  1EF6  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 21568  1EF7  1D03               	btfss	3,2
 21569  1EF8  2EFC               	goto	l210
 21570  1EF9  0022               	movlb	2	; select bank2
 21571  1EFA  120D               	bcf	13,4	;volatile
 21572  1EFB  2EFE               	goto	l7268
 21573  1EFC                     l210:	
 21574  1EFC  0022               	movlb	2	; select bank2
 21575  1EFD  100E               	bcf	14,0	;volatile
 21576  1EFE                     l7268:	
 21577                           
 21578                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 21579  1EFE  300F               	movlw	15
 21580  1EFF  0020               	movlb	0	; select bank0
 21581  1F00  00BA               	movwf	send_last_2bytes_IK@j
 21582  1F01  3000               	movlw	0
 21583  1F02  00BB               	movwf	send_last_2bytes_IK@j+1
 21584  1F03  1BBB               	btfsc	send_last_2bytes_IK@j+1,7
 21585  1F04  2F3F               	goto	l231
 21586  1F05                     l214:	
 21587                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 21588                           
 21589  1F05  0022               	movlb	2	; select bank2
 21590  1F06  110C               	bcf	12,2	;volatile
 21591                           
 21592                           ;LEDcomm.c: 28: if (data & 1 << j){
 21593  1F07  3001               	movlw	1
 21594  1F08  0020               	movlb	0	; select bank0
 21595  1F09  00B6               	movwf	??_send_last_2bytes_IK
 21596  1F0A  3000               	movlw	0
 21597  1F0B  00B7               	movwf	??_send_last_2bytes_IK+1
 21598  1F0C  0A3A               	incf	send_last_2bytes_IK@j,w
 21599  1F0D  2F10               	goto	u6774
 21600  1F0E                     u6775:	
 21601  1F0E  35B6               	lslf	??_send_last_2bytes_IK,f
 21602  1F0F  0DB7               	rlf	??_send_last_2bytes_IK+1,f
 21603  1F10                     u6774:	
 21604  1F10  0B89               	decfsz	9,f
 21605  1F11  2F0E               	goto	u6775
 21606  1F12  0831               	movf	send_last_2bytes_IK@data,w
 21607  1F13  0536               	andwf	??_send_last_2bytes_IK,w
 21608  1F14  00B8               	movwf	??_send_last_2bytes_IK+2
 21609  1F15  0832               	movf	send_last_2bytes_IK@data+1,w
 21610  1F16  0537               	andwf	??_send_last_2bytes_IK+1,w
 21611  1F17  00B9               	movwf	??_send_last_2bytes_IK+3
 21612  1F18  0838               	movf	??_send_last_2bytes_IK+2,w
 21613  1F19  0439               	iorwf	??_send_last_2bytes_IK+3,w
 21614  1F1A  1903               	btfsc	3,2
 21615  1F1B  2F1F               	goto	l220
 21616                           
 21617                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 21618  1F1C  0022               	movlb	2	; select bank2
 21619  1F1D  150E               	bsf	14,2	;volatile
 21620                           
 21621                           ;LEDcomm.c: 30: }
 21622  1F1E  2F21               	goto	l7276
 21623  1F1F                     l220:	
 21624                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 21625                           
 21626  1F1F  0022               	movlb	2	; select bank2
 21627  1F20  110E               	bcf	14,2	;volatile
 21628  1F21                     l7276:	
 21629                           
 21630                           ;LEDcomm.c: 33: if( j == latch_start) {
 21631  1F21  0020               	movlb	0	; select bank0
 21632  1F22  0833               	movf	send_last_2bytes_IK@latch_start,w
 21633  1F23  00B6               	movwf	??_send_last_2bytes_IK
 21634  1F24  01B7               	clrf	??_send_last_2bytes_IK+1
 21635  1F25  083B               	movf	send_last_2bytes_IK@j+1,w
 21636  1F26  0637               	xorwf	??_send_last_2bytes_IK+1,w
 21637  1F27  1D03               	skipz
 21638  1F28  2F2B               	goto	u6795
 21639  1F29  083A               	movf	send_last_2bytes_IK@j,w
 21640  1F2A  0636               	xorwf	??_send_last_2bytes_IK,w
 21641  1F2B                     u6795:	
 21642  1F2B  1D03               	skipz
 21643  1F2C  2F36               	goto	l229
 21644                           
 21645                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 21646  1F2D  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 21647  1F2E  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 21648  1F2F  1D03               	btfss	3,2
 21649  1F30  2F34               	goto	l227
 21650  1F31  0022               	movlb	2	; select bank2
 21651  1F32  160D               	bsf	13,4	;volatile
 21652  1F33  2F36               	goto	l229
 21653  1F34                     l227:	
 21654  1F34  0022               	movlb	2	; select bank2
 21655  1F35  140E               	bsf	14,0	;volatile
 21656  1F36                     l229:	
 21657                           ;LEDcomm.c: 37: }
 21658                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 21659                           
 21660  1F36  0022               	movlb	2	; select bank2
 21661  1F37  150C               	bsf	12,2	;volatile
 21662  1F38  30FF               	movlw	255
 21663  1F39  0020               	movlb	0	; select bank0
 21664  1F3A  07BA               	addwf	send_last_2bytes_IK@j,f
 21665  1F3B  30FF               	movlw	255
 21666  1F3C  3DBB               	addwfc	send_last_2bytes_IK@j+1,f
 21667  1F3D  1FBB               	btfss	send_last_2bytes_IK@j+1,7
 21668  1F3E  2F05               	goto	l214
 21669  1F3F                     l231:	
 21670                           ;LEDcomm.c: 41: }
 21671                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 21672                           
 21673  1F3F  0022               	movlb	2	; select bank2
 21674  1F40  110C               	bcf	12,2	;volatile
 21675                           
 21676                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 21677  1F41  0020               	movlb	0	; select bank0
 21678  1F42  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 21679  1F43  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 21680  1F44  1D03               	btfss	3,2
 21681  1F45  2F49               	goto	l237
 21682  1F46  0022               	movlb	2	; select bank2
 21683  1F47  120D               	bcf	13,4	;volatile
 21684  1F48  0008               	return
 21685  1F49                     l237:	
 21686  1F49  0022               	movlb	2	; select bank2
 21687  1F4A  100E               	bcf	14,0	;volatile
 21688  1F4B  0008               	return
 21689  1F4C                     __end_of_send_last_2bytes_IK:	
 21690                           
 21691                           	psect	text106
 21692  1978                     __ptext106:	
 21693 ;; *************** function _send_2bytes_latchless_IK *****************
 21694 ;; Defined at:
 21695 ;;		line 49 in file "LEDcomm.c"
 21696 ;; Parameters:    Size  Location     Type
 21697 ;;  data            2   17[BANK0 ] unsigned int 
 21698 ;; Auto vars:     Size  Location     Type
 21699 ;;  j               2   23[BANK0 ] int 
 21700 ;; Return value:  Size  Location     Type
 21701 ;;                  1    wreg      void 
 21702 ;; Registers used:
 21703 ;;		wreg, status,2, status,0
 21704 ;; Tracked objects:
 21705 ;;		On entry : 0/0
 21706 ;;		On exit  : 0/0
 21707 ;;		Unchanged: 0/0
 21708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21709 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21710 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21711 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21712 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21713 ;;Total ram usage:        8 bytes
 21714 ;; Hardware stack levels used:    1
 21715 ;; Hardware stack levels required when called:    6
 21716 ;; This function calls:
 21717 ;;		Nothing
 21718 ;; This function is called by:
 21719 ;;		_send_2length_2bytes_IK
 21720 ;; This function uses a non-reentrant model
 21721 ;;
 21722                           
 21723                           
 21724                           ;psect for function _send_2bytes_latchless_IK
 21725  1978                     _send_2bytes_latchless_IK:	
 21726                           
 21727                           ;incstack = 0
 21728                           ; Regs used in _send_2bytes_latchless_IK: [wreg+status,2+status,0]
 21729                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 21730  1978  0022               	movlb	2	; select bank2
 21731  1979  120D               	bcf	13,4	;volatile
 21732                           
 21733                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 21734  197A  300F               	movlw	15
 21735  197B  0020               	movlb	0	; select bank0
 21736  197C  00B7               	movwf	send_2bytes_latchless_IK@j
 21737  197D  3000               	movlw	0
 21738  197E  00B8               	movwf	send_2bytes_latchless_IK@j+1
 21739  197F  1BB8               	btfsc	send_2bytes_latchless_IK@j+1,7
 21740  1980  29A5               	goto	l256
 21741  1981                     l246:	
 21742                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 21743                           
 21744  1981  0022               	movlb	2	; select bank2
 21745  1982  110C               	bcf	12,2	;volatile
 21746                           
 21747                           ;LEDcomm.c: 56: if (data & 1 << j){
 21748  1983  3001               	movlw	1
 21749  1984  0020               	movlb	0	; select bank0
 21750  1985  00B3               	movwf	??_send_2bytes_latchless_IK
 21751  1986  3000               	movlw	0
 21752  1987  00B4               	movwf	??_send_2bytes_latchless_IK+1
 21753  1988  0A37               	incf	send_2bytes_latchless_IK@j,w
 21754  1989  298C               	goto	u6844
 21755  198A                     u6845:	
 21756  198A  35B3               	lslf	??_send_2bytes_latchless_IK,f
 21757  198B  0DB4               	rlf	??_send_2bytes_latchless_IK+1,f
 21758  198C                     u6844:	
 21759  198C  0B89               	decfsz	9,f
 21760  198D  298A               	goto	u6845
 21761  198E  0831               	movf	send_2bytes_latchless_IK@data,w
 21762  198F  0533               	andwf	??_send_2bytes_latchless_IK,w
 21763  1990  00B5               	movwf	??_send_2bytes_latchless_IK+2
 21764  1991  0832               	movf	send_2bytes_latchless_IK@data+1,w
 21765  1992  0534               	andwf	??_send_2bytes_latchless_IK+1,w
 21766  1993  00B6               	movwf	??_send_2bytes_latchless_IK+3
 21767  1994  0835               	movf	??_send_2bytes_latchless_IK+2,w
 21768  1995  0436               	iorwf	??_send_2bytes_latchless_IK+3,w
 21769  1996  1903               	btfsc	3,2
 21770  1997  299B               	goto	l252
 21771                           
 21772                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 21773  1998  0022               	movlb	2	; select bank2
 21774  1999  150E               	bsf	14,2	;volatile
 21775                           
 21776                           ;LEDcomm.c: 58: }
 21777  199A  299D               	goto	l254
 21778  199B                     l252:	
 21779                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 21780                           
 21781  199B  0022               	movlb	2	; select bank2
 21782  199C  110E               	bcf	14,2	;volatile
 21783  199D                     l254:	
 21784                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 21785                           
 21786  199D  150C               	bsf	12,2	;volatile
 21787  199E  30FF               	movlw	255
 21788  199F  0020               	movlb	0	; select bank0
 21789  19A0  07B7               	addwf	send_2bytes_latchless_IK@j,f
 21790  19A1  30FF               	movlw	255
 21791  19A2  3DB8               	addwfc	send_2bytes_latchless_IK@j+1,f
 21792  19A3  1FB8               	btfss	send_2bytes_latchless_IK@j+1,7
 21793  19A4  2981               	goto	l246
 21794  19A5                     l256:	
 21795                           ;LEDcomm.c: 64: }
 21796                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 21797                           
 21798  19A5  0022               	movlb	2	; select bank2
 21799  19A6  110C               	bcf	12,2	;volatile
 21800  19A7  0008               	return
 21801  19A8                     __end_of_send_2bytes_latchless_IK:	
 21802                           
 21803                           	psect	text107
 21804  2598                     __ptext107:	
 21805 ;; *************** function _SYSTEM_Initialize *****************
 21806 ;; Defined at:
 21807 ;;		line 77 in file "mcc_generated_files/mcc.c"
 21808 ;; Parameters:    Size  Location     Type
 21809 ;;		None
 21810 ;; Auto vars:     Size  Location     Type
 21811 ;;		None
 21812 ;; Return value:  Size  Location     Type
 21813 ;;                  1    wreg      void 
 21814 ;; Registers used:
 21815 ;;		wreg, status,2, status,0, pclath, cstack
 21816 ;; Tracked objects:
 21817 ;;		On entry : 0/0
 21818 ;;		On exit  : 0/0
 21819 ;;		Unchanged: 0/0
 21820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21825 ;;Total ram usage:        0 bytes
 21826 ;; Hardware stack levels used:    1
 21827 ;; Hardware stack levels required when called:    8
 21828 ;; This function calls:
 21829 ;;		_EUSART_Initialize
 21830 ;;		_OSCILLATOR_Initialize
 21831 ;;		_PIN_MANAGER_Initialize
 21832 ;;		_PMD_Initialize
 21833 ;;		_TMR0_Initialize
 21834 ;;		_TMR2_Initialize
 21835 ;;		_WDT_Initialize
 21836 ;; This function is called by:
 21837 ;;		_main
 21838 ;; This function uses a non-reentrant model
 21839 ;;
 21840                           
 21841                           
 21842                           ;psect for function _SYSTEM_Initialize
 21843  2598                     _SYSTEM_Initialize:	
 21844                           
 21845                           ;mcc.c: 80: PMD_Initialize();
 21846                           
 21847                           ;incstack = 0
 21848                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 21849  2598  31A4  240A  31A5   	fcall	_PMD_Initialize
 21850                           
 21851                           ;mcc.c: 81: PIN_MANAGER_Initialize();
 21852  259B  319A  2208  31A5   	fcall	_PIN_MANAGER_Initialize
 21853                           
 21854                           ;mcc.c: 82: OSCILLATOR_Initialize();
 21855  259E  31A4  247F  31A5   	fcall	_OSCILLATOR_Initialize
 21856                           
 21857                           ;mcc.c: 83: WDT_Initialize();
 21858  25A1  31A3  2396  31A5   	fcall	_WDT_Initialize
 21859                           
 21860                           ;mcc.c: 84: TMR2_Initialize();
 21861  25A4  31A5  254B  31A5   	fcall	_TMR2_Initialize
 21862                           
 21863                           ;mcc.c: 85: TMR0_Initialize();
 21864  25A7  31A5  2570  31A5   	fcall	_TMR0_Initialize
 21865                           
 21866                           ;mcc.c: 86: EUSART_Initialize();
 21867  25AA  31A6  2608         	fcall	_EUSART_Initialize
 21868  25AC  0008               	return
 21869  25AD                     __end_of_SYSTEM_Initialize:	
 21870                           
 21871                           	psect	text108
 21872  2396                     __ptext108:	
 21873 ;; *************** function _WDT_Initialize *****************
 21874 ;; Defined at:
 21875 ;;		line 103 in file "mcc_generated_files/mcc.c"
 21876 ;; Parameters:    Size  Location     Type
 21877 ;;		None
 21878 ;; Auto vars:     Size  Location     Type
 21879 ;;		None
 21880 ;; Return value:  Size  Location     Type
 21881 ;;                  1    wreg      void 
 21882 ;; Registers used:
 21883 ;;		wreg
 21884 ;; Tracked objects:
 21885 ;;		On entry : 0/0
 21886 ;;		On exit  : 0/0
 21887 ;;		Unchanged: 0/0
 21888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21893 ;;Total ram usage:        0 bytes
 21894 ;; Hardware stack levels used:    1
 21895 ;; Hardware stack levels required when called:    6
 21896 ;; This function calls:
 21897 ;;		Nothing
 21898 ;; This function is called by:
 21899 ;;		_SYSTEM_Initialize
 21900 ;; This function uses a non-reentrant model
 21901 ;;
 21902                           
 21903                           
 21904                           ;psect for function _WDT_Initialize
 21905  2396                     _WDT_Initialize:	
 21906                           
 21907                           ;mcc.c: 106: WDTCON = 0x16;
 21908                           
 21909                           ;incstack = 0
 21910                           ; Regs used in _WDT_Initialize: [wreg]
 21911  2396  3016               	movlw	22
 21912  2397  0021               	movlb	1	; select bank1
 21913  2398  0097               	movwf	23	;volatile
 21914  2399  0008               	return
 21915  239A                     __end_of_WDT_Initialize:	
 21916                           
 21917                           	psect	text109
 21918  254B                     __ptext109:	
 21919 ;; *************** function _TMR2_Initialize *****************
 21920 ;; Defined at:
 21921 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 21922 ;; Parameters:    Size  Location     Type
 21923 ;;		None
 21924 ;; Auto vars:     Size  Location     Type
 21925 ;;		None
 21926 ;; Return value:  Size  Location     Type
 21927 ;;                  1    wreg      void 
 21928 ;; Registers used:
 21929 ;;		wreg, status,2, status,0, pclath, cstack
 21930 ;; Tracked objects:
 21931 ;;		On entry : 0/0
 21932 ;;		On exit  : 0/0
 21933 ;;		Unchanged: 0/0
 21934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21939 ;;Total ram usage:        0 bytes
 21940 ;; Hardware stack levels used:    1
 21941 ;; Hardware stack levels required when called:    7
 21942 ;; This function calls:
 21943 ;;		_TMR2_SetInterruptHandler
 21944 ;; This function is called by:
 21945 ;;		_SYSTEM_Initialize
 21946 ;; This function uses a non-reentrant model
 21947 ;;
 21948                           
 21949                           
 21950                           ;psect for function _TMR2_Initialize
 21951  254B                     _TMR2_Initialize:	
 21952                           
 21953                           ;tmr2.c: 67: PR2 = 0x0F;
 21954                           
 21955                           ;incstack = 0
 21956                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 21957  254B  300F               	movlw	15
 21958  254C  0020               	movlb	0	; select bank0
 21959  254D  009E               	movwf	30	;volatile
 21960                           
 21961                           ;tmr2.c: 70: TMR2 = 0x00;
 21962  254E  019D               	clrf	29	;volatile
 21963                           
 21964                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 21965  254F  1091               	bcf	17,1	;volatile
 21966                           
 21967                           ;tmr2.c: 76: PIE1bits.TMR2IE = 1;
 21968  2550  0021               	movlb	1	; select bank1
 21969  2551  1491               	bsf	17,1	;volatile
 21970                           
 21971                           ;tmr2.c: 79: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 21972  2552  3052               	movlw	low _TMR2_DefaultInterruptHandler
 21973  2553  0020               	movlb	0	; select bank0
 21974  2554  00B1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 21975  2555  3024               	movlw	high _TMR2_DefaultInterruptHandler
 21976  2556  00B2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 21977  2557  31A4  2464         	fcall	_TMR2_SetInterruptHandler
 21978                           
 21979                           ;tmr2.c: 82: T2CON = 0x4E;
 21980  2559  304E               	movlw	78
 21981  255A  0020               	movlb	0	; select bank0
 21982  255B  009F               	movwf	31	;volatile
 21983  255C  0008               	return
 21984  255D                     __end_of_TMR2_Initialize:	
 21985                           
 21986                           	psect	text110
 21987  2464                     __ptext110:	
 21988 ;; *************** function _TMR2_SetInterruptHandler *****************
 21989 ;; Defined at:
 21990 ;;		line 130 in file "mcc_generated_files/tmr2.c"
 21991 ;; Parameters:    Size  Location     Type
 21992 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 21993 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 21994 ;; Auto vars:     Size  Location     Type
 21995 ;;		None
 21996 ;; Return value:  Size  Location     Type
 21997 ;;                  1    wreg      void 
 21998 ;; Registers used:
 21999 ;;		wreg
 22000 ;; Tracked objects:
 22001 ;;		On entry : 0/0
 22002 ;;		On exit  : 0/0
 22003 ;;		Unchanged: 0/0
 22004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22005 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22008 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22009 ;;Total ram usage:        2 bytes
 22010 ;; Hardware stack levels used:    1
 22011 ;; Hardware stack levels required when called:    6
 22012 ;; This function calls:
 22013 ;;		Nothing
 22014 ;; This function is called by:
 22015 ;;		_TMR2_Initialize
 22016 ;; This function uses a non-reentrant model
 22017 ;;
 22018                           
 22019                           
 22020                           ;psect for function _TMR2_SetInterruptHandler
 22021  2464                     _TMR2_SetInterruptHandler:	
 22022                           
 22023                           ;tmr2.c: 131: TMR2_InterruptHandler = InterruptHandler;
 22024                           
 22025                           ;incstack = 0
 22026                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 22027  2464  0020               	movlb	0	; select bank0
 22028  2465  0832               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 22029  2466  0022               	movlb	2	; select bank2
 22030  2467  00E7               	movwf	(_TMR2_InterruptHandler+1)^(0+256)
 22031  2468  0020               	movlb	0	; select bank0
 22032  2469  0831               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 22033  246A  0022               	movlb	2	; select bank2
 22034  246B  00E6               	movwf	_TMR2_InterruptHandler^(0+256)
 22035  246C  0008               	return
 22036  246D                     __end_of_TMR2_SetInterruptHandler:	
 22037                           
 22038                           	psect	text111
 22039  2570                     __ptext111:	
 22040 ;; *************** function _TMR0_Initialize *****************
 22041 ;; Defined at:
 22042 ;;		line 59 in file "mcc_generated_files/tmr0.c"
 22043 ;; Parameters:    Size  Location     Type
 22044 ;;		None
 22045 ;; Auto vars:     Size  Location     Type
 22046 ;;		None
 22047 ;; Return value:  Size  Location     Type
 22048 ;;                  1    wreg      void 
 22049 ;; Registers used:
 22050 ;;		wreg, status,2, status,0, pclath, cstack
 22051 ;; Tracked objects:
 22052 ;;		On entry : 0/0
 22053 ;;		On exit  : 0/0
 22054 ;;		Unchanged: 0/0
 22055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22060 ;;Total ram usage:        0 bytes
 22061 ;; Hardware stack levels used:    1
 22062 ;; Hardware stack levels required when called:    7
 22063 ;; This function calls:
 22064 ;;		_TMR0_SetInterruptHandler
 22065 ;; This function is called by:
 22066 ;;		_SYSTEM_Initialize
 22067 ;; This function uses a non-reentrant model
 22068 ;;
 22069                           
 22070                           
 22071                           ;psect for function _TMR0_Initialize
 22072  2570                     _TMR0_Initialize:	
 22073                           
 22074                           ;tmr0.c: 64: T0CON1 = 0x58;
 22075                           
 22076                           ;incstack = 0
 22077                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22078  2570  3058               	movlw	88
 22079  2571  0020               	movlb	0	; select bank0
 22080  2572  0098               	movwf	24	;volatile
 22081                           
 22082                           ;tmr0.c: 67: TMR0H = 0x61;
 22083  2573  3061               	movlw	97
 22084  2574  0096               	movwf	22	;volatile
 22085                           
 22086                           ;tmr0.c: 70: TMR0L = 0x00;
 22087  2575  0195               	clrf	21	;volatile
 22088                           
 22089                           ;tmr0.c: 73: PIR0bits.TMR0IF = 0;
 22090  2576  1290               	bcf	16,5	;volatile
 22091                           
 22092                           ;tmr0.c: 76: PIE0bits.TMR0IE = 1;
 22093  2577  0021               	movlb	1	; select bank1
 22094  2578  1690               	bsf	16,5	;volatile
 22095                           
 22096                           ;tmr0.c: 79: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 22097  2579  306F               	movlw	low _TMR0_DefaultInterruptHandler
 22098  257A  0020               	movlb	0	; select bank0
 22099  257B  00B1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 22100  257C  301A               	movlw	high _TMR0_DefaultInterruptHandler
 22101  257D  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 22102  257E  31A4  245B         	fcall	_TMR0_SetInterruptHandler
 22103                           
 22104                           ;tmr0.c: 82: T0CON0 = 0x89;
 22105  2580  3089               	movlw	137
 22106  2581  0020               	movlb	0	; select bank0
 22107  2582  0097               	movwf	23	;volatile
 22108  2583  0008               	return
 22109  2584                     __end_of_TMR0_Initialize:	
 22110                           
 22111                           	psect	text112
 22112  245B                     __ptext112:	
 22113 ;; *************** function _TMR0_SetInterruptHandler *****************
 22114 ;; Defined at:
 22115 ;;		line 132 in file "mcc_generated_files/tmr0.c"
 22116 ;; Parameters:    Size  Location     Type
 22117 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 22118 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 22119 ;; Auto vars:     Size  Location     Type
 22120 ;;		None
 22121 ;; Return value:  Size  Location     Type
 22122 ;;                  1    wreg      void 
 22123 ;; Registers used:
 22124 ;;		wreg
 22125 ;; Tracked objects:
 22126 ;;		On entry : 0/0
 22127 ;;		On exit  : 0/0
 22128 ;;		Unchanged: 0/0
 22129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22133 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22134 ;;Total ram usage:        2 bytes
 22135 ;; Hardware stack levels used:    1
 22136 ;; Hardware stack levels required when called:    6
 22137 ;; This function calls:
 22138 ;;		Nothing
 22139 ;; This function is called by:
 22140 ;;		_TMR0_Initialize
 22141 ;; This function uses a non-reentrant model
 22142 ;;
 22143                           
 22144                           
 22145                           ;psect for function _TMR0_SetInterruptHandler
 22146  245B                     _TMR0_SetInterruptHandler:	
 22147                           
 22148                           ;tmr0.c: 133: TMR0_InterruptHandler = InterruptHandler;
 22149                           
 22150                           ;incstack = 0
 22151                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 22152  245B  0020               	movlb	0	; select bank0
 22153  245C  0832               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 22154  245D  0022               	movlb	2	; select bank2
 22155  245E  00E9               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 22156  245F  0020               	movlb	0	; select bank0
 22157  2460  0831               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 22158  2461  0022               	movlb	2	; select bank2
 22159  2462  00E8               	movwf	_TMR0_InterruptHandler^(0+256)
 22160  2463  0008               	return
 22161  2464                     __end_of_TMR0_SetInterruptHandler:	
 22162                           
 22163                           	psect	text113
 22164  240A                     __ptext113:	
 22165 ;; *************** function _PMD_Initialize *****************
 22166 ;; Defined at:
 22167 ;;		line 109 in file "mcc_generated_files/mcc.c"
 22168 ;; Parameters:    Size  Location     Type
 22169 ;;		None
 22170 ;; Auto vars:     Size  Location     Type
 22171 ;;		None
 22172 ;; Return value:  Size  Location     Type
 22173 ;;                  1    wreg      void 
 22174 ;; Registers used:
 22175 ;;		status,2
 22176 ;; Tracked objects:
 22177 ;;		On entry : 0/0
 22178 ;;		On exit  : 0/0
 22179 ;;		Unchanged: 0/0
 22180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22185 ;;Total ram usage:        0 bytes
 22186 ;; Hardware stack levels used:    1
 22187 ;; Hardware stack levels required when called:    6
 22188 ;; This function calls:
 22189 ;;		Nothing
 22190 ;; This function is called by:
 22191 ;;		_SYSTEM_Initialize
 22192 ;; This function uses a non-reentrant model
 22193 ;;
 22194                           
 22195                           
 22196                           ;psect for function _PMD_Initialize
 22197  240A                     _PMD_Initialize:	
 22198                           
 22199                           ;mcc.c: 112: PMD0 = 0x00;
 22200                           
 22201                           ;incstack = 0
 22202                           ; Regs used in _PMD_Initialize: [status,2]
 22203  240A  0032               	movlb	18	; select bank18
 22204  240B  0191               	clrf	17	;volatile
 22205                           
 22206                           ;mcc.c: 114: PMD1 = 0x00;
 22207  240C  0192               	clrf	18	;volatile
 22208                           
 22209                           ;mcc.c: 116: PMD2 = 0x00;
 22210  240D  0193               	clrf	19	;volatile
 22211                           
 22212                           ;mcc.c: 118: PMD3 = 0x00;
 22213  240E  0194               	clrf	20	;volatile
 22214                           
 22215                           ;mcc.c: 120: PMD4 = 0x00;
 22216  240F  0195               	clrf	21	;volatile
 22217                           
 22218                           ;mcc.c: 122: PMD5 = 0x00;
 22219  2410  0196               	clrf	22	;volatile
 22220  2411  0008               	return
 22221  2412                     __end_of_PMD_Initialize:	
 22222                           
 22223                           	psect	text114
 22224  1A08                     __ptext114:	
 22225 ;; *************** function _PIN_MANAGER_Initialize *****************
 22226 ;; Defined at:
 22227 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 22228 ;; Parameters:    Size  Location     Type
 22229 ;;		None
 22230 ;; Auto vars:     Size  Location     Type
 22231 ;;		None
 22232 ;; Return value:  Size  Location     Type
 22233 ;;                  1    wreg      void 
 22234 ;; Registers used:
 22235 ;;		wreg, status,2, status,0
 22236 ;; Tracked objects:
 22237 ;;		On entry : 0/0
 22238 ;;		On exit  : 0/0
 22239 ;;		Unchanged: 0/0
 22240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22245 ;;Total ram usage:        0 bytes
 22246 ;; Hardware stack levels used:    1
 22247 ;; Hardware stack levels required when called:    6
 22248 ;; This function calls:
 22249 ;;		Nothing
 22250 ;; This function is called by:
 22251 ;;		_SYSTEM_Initialize
 22252 ;; This function uses a non-reentrant model
 22253 ;;
 22254                           
 22255                           
 22256                           ;psect for function _PIN_MANAGER_Initialize
 22257  1A08                     _PIN_MANAGER_Initialize:	
 22258                           
 22259                           ;pin_manager.c: 57: LATA = 0x00;
 22260                           
 22261                           ;incstack = 0
 22262                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 22263  1A08  0022               	movlb	2	; select bank2
 22264  1A09  018C               	clrf	12	;volatile
 22265                           
 22266                           ;pin_manager.c: 58: LATB = 0x00;
 22267  1A0A  018D               	clrf	13	;volatile
 22268                           
 22269                           ;pin_manager.c: 59: LATC = 0x00;
 22270  1A0B  018E               	clrf	14	;volatile
 22271                           
 22272                           ;pin_manager.c: 64: TRISA = 0x33;
 22273  1A0C  3033               	movlw	51
 22274  1A0D  0021               	movlb	1	; select bank1
 22275  1A0E  008C               	movwf	12	;volatile
 22276                           
 22277                           ;pin_manager.c: 65: TRISB = 0x60;
 22278  1A0F  3060               	movlw	96
 22279  1A10  008D               	movwf	13	;volatile
 22280                           
 22281                           ;pin_manager.c: 66: TRISC = 0xF8;
 22282  1A11  30F8               	movlw	248
 22283  1A12  008E               	movwf	14	;volatile
 22284                           
 22285                           ;pin_manager.c: 71: ANSELC = 0x00;
 22286  1A13  0023               	movlb	3	; select bank3
 22287  1A14  018E               	clrf	14	;volatile
 22288                           
 22289                           ;pin_manager.c: 72: ANSELB = 0x00;
 22290  1A15  018D               	clrf	13	;volatile
 22291                           
 22292                           ;pin_manager.c: 73: ANSELA = 0x00;
 22293  1A16  018C               	clrf	12	;volatile
 22294                           
 22295                           ;pin_manager.c: 78: WPUB = 0x00;
 22296  1A17  0024               	movlb	4	; select bank4
 22297  1A18  018D               	clrf	13	;volatile
 22298                           
 22299                           ;pin_manager.c: 79: WPUA = 0x00;
 22300  1A19  018C               	clrf	12	;volatile
 22301                           
 22302                           ;pin_manager.c: 80: WPUC = 0xC0;
 22303  1A1A  30C0               	movlw	192
 22304  1A1B  008E               	movwf	14	;volatile
 22305                           
 22306                           ;pin_manager.c: 85: ODCONA = 0x00;
 22307  1A1C  0025               	movlb	5	; select bank5
 22308  1A1D  018C               	clrf	12	;volatile
 22309                           
 22310                           ;pin_manager.c: 86: ODCONB = 0x00;
 22311  1A1E  018D               	clrf	13	;volatile
 22312                           
 22313                           ;pin_manager.c: 87: ODCONC = 0x00;
 22314  1A1F  018E               	clrf	14	;volatile
 22315                           
 22316                           ;pin_manager.c: 94: SSP1DATPPSbits.SSP1DATPPS = 0x0D;
 22317  1A20  003C               	movlb	28	; select bank28
 22318  1A21  0821               	movf	33,w	;volatile
 22319  1A22  39E0               	andlw	-32
 22320  1A23  380D               	iorlw	13
 22321  1A24  00A1               	movwf	33	;volatile
 22322                           
 22323                           ;pin_manager.c: 95: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 22324  1A25  0820               	movf	32,w	;volatile
 22325  1A26  39E0               	andlw	-32
 22326  1A27  380E               	iorlw	14
 22327  1A28  00A0               	movwf	32	;volatile
 22328                           
 22329                           ;pin_manager.c: 96: RXPPSbits.RXPPS = 0x17;
 22330  1A29  0824               	movf	36,w	;volatile
 22331  1A2A  39E0               	andlw	-32
 22332  1A2B  3817               	iorlw	23
 22333  1A2C  00A4               	movwf	36	;volatile
 22334                           
 22335                           ;pin_manager.c: 97: RB7PPSbits.RB7PPS = 0x14;
 22336  1A2D  003D               	movlb	29	; select bank29
 22337  1A2E  081F               	movf	31,w	;volatile
 22338  1A2F  39E0               	andlw	-32
 22339  1A30  3814               	iorlw	20
 22340  1A31  009F               	movwf	31	;volatile
 22341                           
 22342                           ;pin_manager.c: 98: RB6PPSbits.RB6PPS = 0x18;
 22343  1A32  081E               	movf	30,w	;volatile
 22344  1A33  39E0               	andlw	-32
 22345  1A34  3818               	iorlw	24
 22346  1A35  009E               	movwf	30	;volatile
 22347                           
 22348                           ;pin_manager.c: 99: RB5PPSbits.RB5PPS = 0x19;
 22349  1A36  081D               	movf	29,w	;volatile
 22350  1A37  39E0               	andlw	-32
 22351  1A38  3819               	iorlw	25
 22352  1A39  009D               	movwf	29	;volatile
 22353  1A3A  0008               	return
 22354  1A3B                     __end_of_PIN_MANAGER_Initialize:	
 22355                           
 22356                           	psect	text115
 22357  247F                     __ptext115:	
 22358 ;; *************** function _OSCILLATOR_Initialize *****************
 22359 ;; Defined at:
 22360 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22361 ;; Parameters:    Size  Location     Type
 22362 ;;		None
 22363 ;; Auto vars:     Size  Location     Type
 22364 ;;		None
 22365 ;; Return value:  Size  Location     Type
 22366 ;;                  1    wreg      void 
 22367 ;; Registers used:
 22368 ;;		wreg, status,2
 22369 ;; Tracked objects:
 22370 ;;		On entry : 0/0
 22371 ;;		On exit  : 0/0
 22372 ;;		Unchanged: 0/0
 22373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22378 ;;Total ram usage:        0 bytes
 22379 ;; Hardware stack levels used:    1
 22380 ;; Hardware stack levels required when called:    6
 22381 ;; This function calls:
 22382 ;;		Nothing
 22383 ;; This function is called by:
 22384 ;;		_SYSTEM_Initialize
 22385 ;; This function uses a non-reentrant model
 22386 ;;
 22387                           
 22388                           
 22389                           ;psect for function _OSCILLATOR_Initialize
 22390  247F                     _OSCILLATOR_Initialize:	
 22391                           
 22392                           ;mcc.c: 92: OSCCON1 = 0x62;
 22393                           
 22394                           ;incstack = 0
 22395                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 22396  247F  3062               	movlw	98
 22397  2480  0032               	movlb	18	; select bank18
 22398  2481  0099               	movwf	25	;volatile
 22399                           
 22400                           ;mcc.c: 94: OSCCON3 = 0x00;
 22401  2482  019B               	clrf	27	;volatile
 22402                           
 22403                           ;mcc.c: 96: OSCEN = 0x00;
 22404  2483  019D               	clrf	29	;volatile
 22405                           
 22406                           ;mcc.c: 98: OSCFRQ = 0x03;
 22407  2484  3003               	movlw	3
 22408  2485  009F               	movwf	31	;volatile
 22409                           
 22410                           ;mcc.c: 100: OSCTUNE = 0x20;
 22411  2486  3020               	movlw	32
 22412  2487  009E               	movwf	30	;volatile
 22413  2488  0008               	return
 22414  2489                     __end_of_OSCILLATOR_Initialize:	
 22415                           
 22416                           	psect	text116
 22417  2608                     __ptext116:	
 22418 ;; *************** function _EUSART_Initialize *****************
 22419 ;; Defined at:
 22420 ;;		line 72 in file "mcc_generated_files/eusart.c"
 22421 ;; Parameters:    Size  Location     Type
 22422 ;;		None
 22423 ;; Auto vars:     Size  Location     Type
 22424 ;;		None
 22425 ;; Return value:  Size  Location     Type
 22426 ;;                  1    wreg      void 
 22427 ;; Registers used:
 22428 ;;		wreg, status,2
 22429 ;; Tracked objects:
 22430 ;;		On entry : 0/0
 22431 ;;		On exit  : 0/0
 22432 ;;		Unchanged: 0/0
 22433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22436 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22437 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22438 ;;Total ram usage:        1 bytes
 22439 ;; Hardware stack levels used:    1
 22440 ;; Hardware stack levels required when called:    6
 22441 ;; This function calls:
 22442 ;;		Nothing
 22443 ;; This function is called by:
 22444 ;;		_SYSTEM_Initialize
 22445 ;; This function uses a non-reentrant model
 22446 ;;
 22447                           
 22448                           
 22449                           ;psect for function _EUSART_Initialize
 22450  2608                     _EUSART_Initialize:	
 22451                           
 22452                           ;eusart.c: 75: PIE1bits.RCIE = 0;
 22453                           
 22454                           ;incstack = 0
 22455                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 22456  2608  0021               	movlb	1	; select bank1
 22457  2609  1291               	bcf	17,5	;volatile
 22458                           
 22459                           ;eusart.c: 76: PIE1bits.TXIE = 0;
 22460  260A  1211               	bcf	17,4	;volatile
 22461                           
 22462                           ;eusart.c: 80: BAUD1CON = 0x08;
 22463  260B  3008               	movlw	8
 22464  260C  0023               	movlb	3	; select bank3
 22465  260D  009F               	movwf	31	;volatile
 22466                           
 22467                           ;eusart.c: 83: RC1STA = 0x90;
 22468  260E  3090               	movlw	144
 22469  260F  009D               	movwf	29	;volatile
 22470                           
 22471                           ;eusart.c: 86: TX1STA = 0x24;
 22472  2610  3024               	movlw	36
 22473  2611  009E               	movwf	30	;volatile
 22474                           
 22475                           ;eusart.c: 89: SP1BRGL = 0x19;
 22476  2612  3019               	movlw	25
 22477  2613  009B               	movwf	27	;volatile
 22478                           
 22479                           ;eusart.c: 92: SP1BRGH = 0x00;
 22480  2614  019C               	clrf	28	;volatile
 22481                           
 22482                           ;eusart.c: 96: eusartTxHead = 0;
 22483  2615  01FD               	clrf	_eusartTxHead	;volatile
 22484                           
 22485                           ;eusart.c: 97: eusartTxTail = 0;
 22486  2616  0020               	movlb	0	; select bank0
 22487  2617  01D9               	clrf	_eusartTxTail	;volatile
 22488                           
 22489                           ;eusart.c: 98: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 22490  2618  3008               	movlw	8
 22491  2619  00B1               	movwf	??_EUSART_Initialize
 22492  261A  0831               	movf	??_EUSART_Initialize,w
 22493  261B  00DE               	movwf	_eusartTxBufferRemaining	;volatile
 22494                           
 22495                           ;eusart.c: 100: eusartRxHead = 0;
 22496  261C  01D8               	clrf	_eusartRxHead	;volatile
 22497                           
 22498                           ;eusart.c: 101: eusartRxTail = 0;
 22499  261D  01D7               	clrf	_eusartRxTail	;volatile
 22500                           
 22501                           ;eusart.c: 102: eusartRxCount = 0;
 22502  261E  01D6               	clrf	_eusartRxCount	;volatile
 22503                           
 22504                           ;eusart.c: 105: PIE1bits.RCIE = 1;
 22505  261F  0021               	movlb	1	; select bank1
 22506  2620  1691               	bsf	17,5	;volatile
 22507  2621  0008               	return
 22508  2622                     __end_of_EUSART_Initialize:	
 22509                           
 22510                           	psect	text117
 22511  26EE                     __ptext117:	
 22512 ;; *************** function _EUSART_Read *****************
 22513 ;; Defined at:
 22514 ;;		line 108 in file "mcc_generated_files/eusart.c"
 22515 ;; Parameters:    Size  Location     Type
 22516 ;;		None
 22517 ;; Auto vars:     Size  Location     Type
 22518 ;;  readValue       1   18[BANK0 ] unsigned char 
 22519 ;; Return value:  Size  Location     Type
 22520 ;;                  1    wreg      unsigned char 
 22521 ;; Registers used:
 22522 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22523 ;; Tracked objects:
 22524 ;;		On entry : 0/0
 22525 ;;		On exit  : 0/0
 22526 ;;		Unchanged: 0/0
 22527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22530 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22531 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22532 ;;Total ram usage:        2 bytes
 22533 ;; Hardware stack levels used:    1
 22534 ;; Hardware stack levels required when called:    6
 22535 ;; This function calls:
 22536 ;;		Nothing
 22537 ;; This function is called by:
 22538 ;;		_main
 22539 ;;		_getch
 22540 ;; This function uses a non-reentrant model
 22541 ;;
 22542                           
 22543                           
 22544                           ;psect for function _EUSART_Read
 22545  26EE                     _EUSART_Read:	
 22546                           
 22547                           ;eusart.c: 110: uint8_t readValue = 0;
 22548                           
 22549                           ;incstack = 0
 22550                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 22551  26EE  0020               	movlb	0	; select bank0
 22552  26EF  01B2               	clrf	EUSART_Read@readValue
 22553  26F0                     l6414:	
 22554                           ;eusart.c: 113: {
 22555                           
 22556                           ;eusart.c: 112: while(0 == eusartRxCount)
 22557                           
 22558  26F0  0856               	movf	_eusartRxCount,w	;volatile
 22559  26F1  1903               	btfsc	3,2
 22560  26F2  2EF0               	goto	l6414
 22561                           
 22562                           ;eusart.c: 114: }
 22563                           ;eusart.c: 116: readValue = eusartRxBuffer[eusartRxTail++];
 22564  26F3  0857               	movf	_eusartRxTail,w
 22565  26F4  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 22566  26F5  0086               	movwf	6
 22567  26F6  3001               	movlw	1	; select bank3/4
 22568  26F7  0087               	movwf	7
 22569  26F8  0801               	movf	1,w
 22570  26F9  00B1               	movwf	??_EUSART_Read
 22571  26FA  0831               	movf	??_EUSART_Read,w
 22572  26FB  00B2               	movwf	EUSART_Read@readValue
 22573  26FC  3001               	movlw	1
 22574  26FD  00B1               	movwf	??_EUSART_Read
 22575  26FE  0831               	movf	??_EUSART_Read,w
 22576  26FF  07D7               	addwf	_eusartRxTail,f	;volatile
 22577                           
 22578                           ;eusart.c: 117: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 22579  2700  3008               	movlw	8
 22580  2701  0257               	subwf	_eusartRxTail,w	;volatile
 22581  2702  1803               	btfsc	3,0
 22582                           
 22583                           ;eusart.c: 118: {
 22584                           ;eusart.c: 119: eusartRxTail = 0;
 22585  2703  01D7               	clrf	_eusartRxTail	;volatile
 22586                           
 22587                           ;eusart.c: 120: }
 22588                           ;eusart.c: 121: PIE1bits.RCIE = 0;
 22589  2704  0021               	movlb	1	; select bank1
 22590  2705  1291               	bcf	17,5	;volatile
 22591                           
 22592                           ;eusart.c: 122: eusartRxCount--;
 22593  2706  3001               	movlw	1
 22594  2707  0020               	movlb	0	; select bank0
 22595  2708  02D6               	subwf	_eusartRxCount,f	;volatile
 22596                           
 22597                           ;eusart.c: 123: PIE1bits.RCIE = 1;
 22598  2709  0021               	movlb	1	; select bank1
 22599  270A  1691               	bsf	17,5	;volatile
 22600                           
 22601                           ;eusart.c: 125: return readValue;
 22602  270B  0020               	movlb	0	; select bank0
 22603  270C  0832               	movf	EUSART_Read@readValue,w
 22604  270D  0008               	return
 22605  270E                     __end_of_EUSART_Read:	
 22606                           
 22607                           	psect	intentry
 22608  0004                     __pintentry:	
 22609 ;; *************** function _INTERRUPT_InterruptManager *****************
 22610 ;; Defined at:
 22611 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 22612 ;; Parameters:    Size  Location     Type
 22613 ;;		None
 22614 ;; Auto vars:     Size  Location     Type
 22615 ;;		None
 22616 ;; Return value:  Size  Location     Type
 22617 ;;                  1    wreg      void 
 22618 ;; Registers used:
 22619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22620 ;; Tracked objects:
 22621 ;;		On entry : 0/0
 22622 ;;		On exit  : 0/0
 22623 ;;		Unchanged: 0/0
 22624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22627 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22628 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22629 ;;Total ram usage:        1 bytes
 22630 ;; Hardware stack levels used:    1
 22631 ;; Hardware stack levels required when called:    5
 22632 ;; This function calls:
 22633 ;;		Absolute function
 22634 ;;		_EUSART_Receive_ISR
 22635 ;;		_EUSART_Transmit_ISR
 22636 ;;		_TMR0_ISR
 22637 ;;		_TMR2_ISR
 22638 ;;		_i2c_busCollisionISR
 22639 ;;		i1_i2c_ISR
 22640 ;; This function is called by:
 22641 ;;		Interrupt level 1
 22642 ;; This function uses a non-reentrant model
 22643 ;;
 22644                           
 22645  0004                     _INTERRUPT_InterruptManager:	
 22646                           
 22647                           ;incstack = 0
 22648 ;; hardware stack exceeded
 22649  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 22650                           
 22651                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22652  0005  3180               	pagesel	$
 22653  0006  0020               	movlb	0	; select bank0
 22654  0007  087F               	movf	127,w
 22655  0008  00FC               	movwf	??_INTERRUPT_InterruptManager
 22656                           
 22657                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 22658  0009  0021               	movlb	1	; select bank1
 22659  000A  1E90               	btfss	16,5	;volatile
 22660  000B  2813               	goto	i1l351
 22661  000C  0020               	movlb	0	; select bank0
 22662  000D  1E90               	btfss	16,5	;volatile
 22663  000E  2813               	goto	i1l351
 22664                           
 22665                           ;interrupt_manager.c: 55: {
 22666                           ;interrupt_manager.c: 56: TMR0_ISR();
 22667  000F  31A4  24F5  3180   	fcall	_TMR0_ISR
 22668                           
 22669                           ;interrupt_manager.c: 57: }
 22670  0012  284B               	goto	i1l365
 22671  0013                     i1l351:	
 22672                           
 22673                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1)
 22674  0013  1F0B               	btfss	11,6	;volatile
 22675  0014  284B               	goto	i1l365
 22676                           
 22677                           ;interrupt_manager.c: 59: {
 22678                           ;interrupt_manager.c: 60: if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
 22679  0015  0021               	movlb	1	; select bank1
 22680  0016  1D11               	btfss	17,2	;volatile
 22681  0017  2822               	goto	i1l354
 22682  0018  0020               	movlb	0	; select bank0
 22683  0019  1D11               	btfss	17,2	;volatile
 22684  001A  2822               	goto	i1l354
 22685                           
 22686                           ;interrupt_manager.c: 61: {
 22687                           ;interrupt_manager.c: 62: i2c1_driver_busCollisionISR();
 22688  001B  0021               	movlb	1	; select bank1
 22689  001C  0869               	movf	(_i2c1_driver_busCollisionISR+1)^(0+128),w
 22690  001D  008A               	movwf	10
 22691  001E  0868               	movf	_i2c1_driver_busCollisionISR^(0+128),w
 22692  001F  000A               	callw
 22693  0020  3180               	pagesel	$
 22694                           
 22695                           ;interrupt_manager.c: 63: }
 22696  0021  284B               	goto	i1l365
 22697  0022                     i1l354:	
 22698                           
 22699                           ;interrupt_manager.c: 64: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 22700  0022  0021               	movlb	1	; select bank1
 22701  0023  1D91               	btfss	17,3	;volatile
 22702  0024  282F               	goto	i1l356
 22703  0025  0020               	movlb	0	; select bank0
 22704  0026  1D91               	btfss	17,3	;volatile
 22705  0027  282F               	goto	i1l356
 22706                           
 22707                           ;interrupt_manager.c: 65: {
 22708                           ;interrupt_manager.c: 66: i2c1_driver_i2cISR();
 22709  0028  0022               	movlb	2	; select bank2
 22710  0029  0865               	movf	(_i2c1_driver_i2cISR+1)^(0+256),w
 22711  002A  008A               	movwf	10
 22712  002B  0864               	movf	_i2c1_driver_i2cISR^(0+256),w
 22713  002C  000A               	callw
 22714  002D  3180               	pagesel	$
 22715                           
 22716                           ;interrupt_manager.c: 67: }
 22717  002E  284B               	goto	i1l365
 22718  002F                     i1l356:	
 22719                           
 22720                           ;interrupt_manager.c: 68: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 22721  002F  0021               	movlb	1	; select bank1
 22722  0030  1C91               	btfss	17,1	;volatile
 22723  0031  2839               	goto	i1l358
 22724  0032  0020               	movlb	0	; select bank0
 22725  0033  1C91               	btfss	17,1	;volatile
 22726  0034  2839               	goto	i1l358
 22727                           
 22728                           ;interrupt_manager.c: 69: {
 22729                           ;interrupt_manager.c: 70: TMR2_ISR();
 22730  0035  31A5  2502  3180   	fcall	_TMR2_ISR
 22731                           
 22732                           ;interrupt_manager.c: 71: }
 22733  0038  284B               	goto	i1l365
 22734  0039                     i1l358:	
 22735                           
 22736                           ;interrupt_manager.c: 72: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 22737  0039  0021               	movlb	1	; select bank1
 22738  003A  1E91               	btfss	17,5	;volatile
 22739  003B  2843               	goto	i1l360
 22740  003C  0020               	movlb	0	; select bank0
 22741  003D  1E91               	btfss	17,5	;volatile
 22742  003E  2843               	goto	i1l360
 22743                           
 22744                           ;interrupt_manager.c: 73: {
 22745                           ;interrupt_manager.c: 74: EUSART_Receive_ISR();
 22746  003F  31A6  263C  3180   	fcall	_EUSART_Receive_ISR
 22747                           
 22748                           ;interrupt_manager.c: 75: }
 22749  0042  284B               	goto	i1l365
 22750  0043                     i1l360:	
 22751                           
 22752                           ;interrupt_manager.c: 76: else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 22753  0043  0021               	movlb	1	; select bank1
 22754  0044  1E11               	btfss	17,4	;volatile
 22755  0045  284B               	goto	i1l365
 22756  0046  0020               	movlb	0	; select bank0
 22757  0047  1E11               	btfss	17,4	;volatile
 22758  0048  284B               	goto	i1l365
 22759                           
 22760                           ;interrupt_manager.c: 77: {
 22761                           ;interrupt_manager.c: 78: EUSART_Transmit_ISR();
 22762  0049  31A6  2674         	fcall	_EUSART_Transmit_ISR
 22763  004B                     i1l365:	
 22764                           ;interrupt_manager.c: 85: else
 22765                           ;interrupt_manager.c: 86: {
 22766                           
 22767                           ;interrupt_manager.c: 83: }
 22768                           ;interrupt_manager.c: 84: }
 22769                           
 22770                           ;interrupt_manager.c: 80: else
 22771                           ;interrupt_manager.c: 81: {
 22772                           
 22773                           ;interrupt_manager.c: 79: }
 22774                           
 22775  004B  087C               	movf	??_INTERRUPT_InterruptManager,w
 22776  004C  0020               	movlb	0	; select bank0
 22777  004D  00FF               	movwf	127
 22778  004E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 22779  004F  0009               	retfie
 22780  0050                     __end_of_INTERRUPT_InterruptManager:	
 22781                           
 22782                           	psect	text119
 22783  26CE                     __ptext119:	
 22784 ;; *************** function i1_i2c_ISR *****************
 22785 ;; Defined at:
 22786 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 22787 ;; Parameters:    Size  Location     Type
 22788 ;;		None
 22789 ;; Auto vars:     Size  Location     Type
 22790 ;;		None
 22791 ;; Return value:  Size  Location     Type
 22792 ;;                  1    wreg      void 
 22793 ;; Registers used:
 22794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22795 ;; Tracked objects:
 22796 ;;		On entry : 0/0
 22797 ;;		On exit  : 0/0
 22798 ;;		Unchanged: 0/0
 22799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22802 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22803 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22804 ;;Total ram usage:        1 bytes
 22805 ;; Hardware stack levels used:    1
 22806 ;; Hardware stack levels required when called:    3
 22807 ;; This function calls:
 22808 ;;		i1_do_I2C_DO_ACK
 22809 ;;		i1_do_I2C_DO_ADDRESS_NACK
 22810 ;;		i1_do_I2C_DO_NACK_RESTART
 22811 ;;		i1_do_I2C_DO_NACK_STOP
 22812 ;;		i1_do_I2C_IDLE
 22813 ;;		i1_do_I2C_RCEN
 22814 ;;		i1_do_I2C_RESET
 22815 ;;		i1_do_I2C_RX
 22816 ;;		i1_do_I2C_SEND_ADR_READ
 22817 ;;		i1_do_I2C_SEND_ADR_WRITE
 22818 ;;		i1_do_I2C_SEND_RESTART
 22819 ;;		i1_do_I2C_SEND_RESTART_READ
 22820 ;;		i1_do_I2C_SEND_RESTART_WRITE
 22821 ;;		i1_do_I2C_SEND_STOP
 22822 ;;		i1_do_I2C_TX
 22823 ;;		i1_do_I2C_TX_EMPTY
 22824 ;;		i1_i2c1_driver_isNACK
 22825 ;;		i1_mssp1_clearIRQ
 22826 ;; This function is called by:
 22827 ;; This function uses a non-reentrant model
 22828 ;;
 22829                           
 22830                           
 22831                           ;psect for function i1_i2c_ISR
 22832  26CE                     i1_i2c_ISR:	
 22833  26CE                     i1l8392:	
 22834                           ;incstack = 0
 22835                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22836                           
 22837                           
 22838                           ;i2c_master.c: 421: mssp1_clearIRQ();
 22839  26CE  31A3  2354  31A6   	fcall	i1_mssp1_clearIRQ
 22840                           
 22841                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 22842  26D1  0022               	movlb	2	; select bank2
 22843  26D2  1DA0               	btfss	_i2c_status^(0+256),3
 22844  26D3  2EDE               	goto	i1l8400
 22845  26D4  31A4  24DD  31A6   	fcall	i1_i2c1_driver_isNACK
 22846  26D7  1C03               	btfss	3,0
 22847  26D8  2EDE               	goto	i1l8400
 22848                           
 22849                           ;i2c_master.c: 428: {
 22850                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 22851  26D9  300F               	movlw	15
 22852  26DA  00F5               	movwf	??i1_i2c_ISR
 22853  26DB  0875               	movf	??i1_i2c_ISR,w
 22854  26DC  0022               	movlb	2	; select bank2
 22855  26DD  00AA               	movwf	(_i2c_status^(0+256)+10)
 22856  26DE                     i1l8400:	
 22857                           
 22858                           ;i2c_master.c: 430: }
 22859                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 22860  26DE  0022               	movlb	2	; select bank2
 22861  26DF  352A               	lslf	(_i2c_status^(0+256)+10),w
 22862  26E0  3E50               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 22863  26E1  0086               	movwf	6
 22864  26E2  3002               	movlw	2	; select bank4/5
 22865  26E3  0087               	movwf	7
 22866  26E4  3F41               	moviw [1]fsr1
 22867  26E5  008A               	movwf	10
 22868  26E6  3F40               	moviw [0]fsr1
 22869  26E7  000A               	callw
 22870  26E8  31A6               	pagesel	$
 22871  26E9  00F5               	movwf	??i1_i2c_ISR
 22872  26EA  0875               	movf	??i1_i2c_ISR,w
 22873  26EB  0022               	movlb	2	; select bank2
 22874  26EC  00AA               	movwf	(_i2c_status^(0+256)+10)
 22875  26ED  0008               	return
 22876  26EE                     __end_ofi1_i2c_ISR:	
 22877                           
 22878                           	psect	text120
 22879  2354                     __ptext120:	
 22880 ;; *************** function i1_mssp1_clearIRQ *****************
 22881 ;; Defined at:
 22882 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 22883 ;; Parameters:    Size  Location     Type
 22884 ;;		None
 22885 ;; Auto vars:     Size  Location     Type
 22886 ;;		None
 22887 ;; Return value:  Size  Location     Type
 22888 ;;                  1    wreg      void 
 22889 ;; Registers used:
 22890 ;;		None
 22891 ;; Tracked objects:
 22892 ;;		On entry : 0/0
 22893 ;;		On exit  : 0/0
 22894 ;;		Unchanged: 0/0
 22895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22900 ;;Total ram usage:        0 bytes
 22901 ;; Hardware stack levels used:    1
 22902 ;; This function calls:
 22903 ;;		Nothing
 22904 ;; This function is called by:
 22905 ;;		i1_i2c_ISR
 22906 ;; This function uses a non-reentrant model
 22907 ;;
 22908                           
 22909                           
 22910                           ;psect for function i1_mssp1_clearIRQ
 22911  2354                     i1_mssp1_clearIRQ:	
 22912                           
 22913                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 22914                           
 22915                           ;incstack = 0
 22916                           ; Regs used in i1_mssp1_clearIRQ: []
 22917  2354  0020               	movlb	0	; select bank0
 22918  2355  1191               	bcf	17,3	;volatile
 22919  2356  0008               	return
 22920  2357                     __end_ofi1_mssp1_clearIRQ:	
 22921                           
 22922                           	psect	text121
 22923  1AA6                     __ptext121:	
 22924 ;; *************** function i1_do_I2C_RX *****************
 22925 ;; Defined at:
 22926 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 22927 ;; Parameters:    Size  Location     Type
 22928 ;;		None
 22929 ;; Auto vars:     Size  Location     Type
 22930 ;;		None
 22931 ;; Return value:  Size  Location     Type
 22932 ;;                  1    wreg      enum E8364
 22933 ;; Registers used:
 22934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22935 ;; Tracked objects:
 22936 ;;		On entry : 0/0
 22937 ;;		On exit  : 0/0
 22938 ;;		Unchanged: 0/0
 22939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22942 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22943 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22944 ;;Total ram usage:        1 bytes
 22945 ;; Hardware stack levels used:    1
 22946 ;; Hardware stack levels required when called:    2
 22947 ;; This function calls:
 22948 ;;		i1_do_I2C_DO_NACK_RESTART
 22949 ;;		i1_do_I2C_DO_NACK_STOP
 22950 ;;		i1_i2c1_driver_getRXData
 22951 ;;		i1_i2c1_driver_sendACK
 22952 ;;		i1_returnReset
 22953 ;;		i1_returnStop
 22954 ;; This function is called by:
 22955 ;; This function uses a non-reentrant model
 22956 ;;
 22957                           
 22958                           
 22959                           ;psect for function i1_do_I2C_RX
 22960  1AA6                     i1_do_I2C_RX:	
 22961  1AA6                     i1l8174:	
 22962                           ;incstack = 0
 22963                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22964                           
 22965                           
 22966                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 22967  1AA6  0022               	movlb	2	; select bank2
 22968  1AA7  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 22969  1AA8  0086               	movwf	6
 22970  1AA9  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 22971  1AAA  0087               	movwf	7
 22972  1AAB  31A3  234E  319A   	fcall	i1_i2c1_driver_getRXData
 22973  1AAE  0081               	movwf	1
 22974  1AAF  3001               	movlw	1
 22975  1AB0  0022               	movlb	2	; select bank2
 22976  1AB1  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 22977  1AB2  3000               	movlw	0
 22978  1AB3  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 22979                           
 22980                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 22981  1AB4  3001               	movlw	1
 22982  1AB5  02A4               	subwf	(_i2c_status^(0+256)+4),f
 22983  1AB6  3000               	movlw	0
 22984  1AB7  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 22985  1AB8  0824               	movf	(_i2c_status^(0+256)+4),w
 22986  1AB9  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 22987  1ABA  1903               	btfsc	3,2
 22988  1ABB  2AC0               	goto	i1l761
 22989                           
 22990                           ;i2c_master.c: 361: {
 22991                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 22992  1ABC  31A3  2372         	fcall	i1_i2c1_driver_sendACK
 22993                           
 22994                           ;i2c_master.c: 363: return I2C_RCEN;
 22995  1ABE  3005               	movlw	5
 22996                           
 22997                           ;i2c_master.c: 364: }
 22998  1ABF  0008               	return
 22999  1AC0                     i1l761:	
 23000                           
 23001                           ;i2c_master.c: 365: else
 23002                           ;i2c_master.c: 366: {
 23003                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 23004  1AC0  1520               	bsf	_i2c_status^(0+256),2
 23005                           
 23006                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 23007  1AC1  2AC8               	goto	i1l8198
 23008  1AC2                     i1l8188:	
 23009                           ;i2c_master.c: 369: {
 23010                           ;i2c_master.c: 370: case i2c_restart_write:
 23011                           
 23012                           
 23013                           ;i2c_master.c: 371: case i2c_restart_read:
 23014                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 23015  1AC2  31A3  2392         	fcall	i1_do_I2C_DO_NACK_RESTART
 23016  1AC4  0008               	return
 23017  1AC5                     i1l8192:	
 23018                           ;i2c_master.c: 374: case i2c_continue:
 23019                           
 23020                           ;i2c_master.c: 373: default:
 23021                           
 23022                           
 23023                           ;i2c_master.c: 375: case i2c_stop:
 23024                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 23025  1AC5  31A3  238E         	fcall	i1_do_I2C_DO_NACK_STOP
 23026                           
 23027                           ;i2c_master.c: 377: }
 23028  1AC7  0008               	return
 23029  1AC8                     i1l8198:	
 23030  1AC8  0022               	movlb	2	; select bank2
 23031  1AC9  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 23032  1ACA  00F0               	movwf	??i1_do_I2C_RX
 23033  1ACB  0870               	movf	??i1_do_I2C_RX,w
 23034  1ACC  00F0               	movwf	i1returnReset@p
 23035  1ACD  300C               	movlw	12
 23036  1ACE  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23037  1ACF  0086               	movwf	6
 23038  1AD0  3001               	movlw	1	; select bank2/3
 23039  1AD1  0087               	movwf	7
 23040  1AD2  3F41               	moviw [1]fsr1
 23041  1AD3  008A               	movwf	10
 23042  1AD4  3F40               	moviw [0]fsr1
 23043  1AD5  000A               	callw
 23044  1AD6  319A               	pagesel	$
 23045                           
 23046                           ; Switch size 1, requested type "space"
 23047                           ; Number of cases is 4, Range of values is 1 to 4
 23048                           ; switch strategies available:
 23049                           ; Name         Instructions Cycles
 23050                           ; simple_byte           13     7 (average)
 23051                           ; direct_byte           17     9 (fixed)
 23052                           ; jumptable            263     9 (fixed)
 23053                           ;	Chosen strategy is simple_byte
 23054  1AD7  3A01               	xorlw	1	; case 1
 23055  1AD8  1903               	skipnz
 23056  1AD9  2AC5               	goto	i1l8192
 23057  1ADA  3A03               	xorlw	3	; case 2
 23058  1ADB  1903               	skipnz
 23059  1ADC  2AC2               	goto	i1l8188
 23060  1ADD  3A01               	xorlw	1	; case 3
 23061  1ADE  1903               	skipnz
 23062  1ADF  2AC2               	goto	i1l8188
 23063  1AE0  3A07               	xorlw	7	; case 4
 23064  1AE1  1903               	skipnz
 23065  1AE2  2AC5               	goto	i1l8192
 23066  1AE3  2AC5               	goto	i1l8192
 23067  1AE4  0008               	return
 23068  1AE5                     __end_ofi1_do_I2C_RX:	
 23069                           
 23070                           	psect	text122
 23071  1D5F                     __ptext122:	
 23072 ;; *************** function i1_do_I2C_TX *****************
 23073 ;; Defined at:
 23074 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 23075 ;; Parameters:    Size  Location     Type
 23076 ;;		None
 23077 ;; Auto vars:     Size  Location     Type
 23078 ;;		None
 23079 ;; Return value:  Size  Location     Type
 23080 ;;                  1    wreg      enum E8364
 23081 ;; Registers used:
 23082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23083 ;; Tracked objects:
 23084 ;;		On entry : 0/0
 23085 ;;		On exit  : 0/0
 23086 ;;		Unchanged: 0/0
 23087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23090 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23091 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23092 ;;Total ram usage:        4 bytes
 23093 ;; Hardware stack levels used:    1
 23094 ;; Hardware stack levels required when called:    2
 23095 ;; This function calls:
 23096 ;;		i1_do_I2C_SEND_RESTART_READ
 23097 ;;		i1_do_I2C_SEND_RESTART_WRITE
 23098 ;;		i1_do_I2C_SEND_STOP
 23099 ;;		i1_i2c1_driver_TXData
 23100 ;;		i1_i2c1_driver_isNACK
 23101 ;;		i1_returnReset
 23102 ;;		i1_returnStop
 23103 ;; This function is called by:
 23104 ;; This function uses a non-reentrant model
 23105 ;;
 23106                           
 23107                           
 23108                           ;psect for function i1_do_I2C_TX
 23109  1D5F                     i1_do_I2C_TX:	
 23110  1D5F                     i1l8144:	
 23111                           ;incstack = 0
 23112                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23113                           
 23114                           
 23115                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 23116  1D5F  31A4  24DD  319D   	fcall	i1_i2c1_driver_isNACK
 23117  1D62  1803               	btfsc	3,0
 23118  1D63  2D6E               	goto	i1l8162
 23119  1D64  2D8B               	goto	i1l745
 23120  1D65                     i1l8148:	
 23121                           ;i2c_master.c: 338: {
 23122                           ;i2c_master.c: 339: case i2c_restart_read:
 23123                           
 23124                           ;i2c_master.c: 336: {
 23125                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 23126                           
 23127                           
 23128                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 23129  1D65  31A3  237A         	fcall	i1_do_I2C_SEND_RESTART_READ
 23130  1D67  0008               	return
 23131  1D68                     i1l8152:	
 23132                           ;i2c_master.c: 341: case i2c_restart_write:
 23133                           
 23134                           
 23135                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 23136  1D68  31A3  237E         	fcall	i1_do_I2C_SEND_RESTART_WRITE
 23137  1D6A  0008               	return
 23138  1D6B                     i1l8156:	
 23139                           ;i2c_master.c: 344: case i2c_continue:
 23140                           
 23141                           ;i2c_master.c: 343: default:
 23142                           
 23143                           
 23144                           ;i2c_master.c: 345: case i2c_stop:
 23145                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 23146  1D6B  31A3  2386         	fcall	i1_do_I2C_SEND_STOP
 23147                           
 23148                           ;i2c_master.c: 347: }
 23149  1D6D  0008               	return
 23150  1D6E                     i1l8162:	
 23151  1D6E  0022               	movlb	2	; select bank2
 23152  1D6F  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 23153  1D70  00F1               	movwf	??i1_do_I2C_TX
 23154  1D71  0871               	movf	??i1_do_I2C_TX,w
 23155  1D72  00F0               	movwf	i1returnReset@p
 23156  1D73  3012               	movlw	18
 23157  1D74  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23158  1D75  0086               	movwf	6
 23159  1D76  3001               	movlw	1	; select bank2/3
 23160  1D77  0087               	movwf	7
 23161  1D78  3F41               	moviw [1]fsr1
 23162  1D79  008A               	movwf	10
 23163  1D7A  3F40               	moviw [0]fsr1
 23164  1D7B  000A               	callw
 23165  1D7C  319D               	pagesel	$
 23166                           
 23167                           ; Switch size 1, requested type "space"
 23168                           ; Number of cases is 4, Range of values is 1 to 4
 23169                           ; switch strategies available:
 23170                           ; Name         Instructions Cycles
 23171                           ; simple_byte           13     7 (average)
 23172                           ; direct_byte           17     9 (fixed)
 23173                           ; jumptable            263     9 (fixed)
 23174                           ;	Chosen strategy is simple_byte
 23175  1D7D  3A01               	xorlw	1	; case 1
 23176  1D7E  1903               	skipnz
 23177  1D7F  2D6B               	goto	i1l8156
 23178  1D80  3A03               	xorlw	3	; case 2
 23179  1D81  1903               	skipnz
 23180  1D82  2D65               	goto	i1l8148
 23181  1D83  3A01               	xorlw	1	; case 3
 23182  1D84  1903               	skipnz
 23183  1D85  2D68               	goto	i1l8152
 23184  1D86  3A07               	xorlw	7	; case 4
 23185  1D87  1903               	skipnz
 23186  1D88  2D6B               	goto	i1l8156
 23187  1D89  2D6B               	goto	i1l8156
 23188                           
 23189                           ;i2c_master.c: 348: }
 23190  1D8A  0008               	return
 23191  1D8B                     i1l745:	
 23192                           
 23193                           ;i2c_master.c: 349: else
 23194                           ;i2c_master.c: 350: {
 23195                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 23196  1D8B  0022               	movlb	2	; select bank2
 23197  1D8C  11A0               	bcf	_i2c_status^(0+256),3
 23198                           
 23199                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 23200  1D8D  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 23201  1D8E  00F2               	movwf	??i1_do_I2C_TX+1
 23202  1D8F  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 23203  1D90  00F1               	movwf	??i1_do_I2C_TX
 23204  1D91  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 23205  1D92  1903               	skipnz
 23206  1D93  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 23207  1D94  0871               	movf	??i1_do_I2C_TX,w
 23208  1D95  0084               	movwf	4
 23209  1D96  0872               	movf	??i1_do_I2C_TX+1,w
 23210  1D97  0085               	movwf	5
 23211  1D98  0800               	movf	0,w	;code access
 23212  1D99  31A3  23B0  319D   	fcall	i1_i2c1_driver_TXData
 23213                           
 23214                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 23215  1D9C  3001               	movlw	1
 23216  1D9D  0022               	movlb	2	; select bank2
 23217  1D9E  02A4               	subwf	(_i2c_status^(0+256)+4),f
 23218  1D9F  3000               	movlw	0
 23219  1DA0  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 23220  1DA1  0824               	movf	(_i2c_status^(0+256)+4),w
 23221  1DA2  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 23222  1DA3  1D03               	btfss	3,2
 23223  1DA4  2DA7               	goto	i1l8170
 23224  1DA5  3006               	movlw	6
 23225  1DA6  2DA8               	goto	L35
 23226  1DA7                     i1l8170:	
 23227  1DA7  3003               	movlw	3
 23228  1DA8                     L35:	
 23229  1DA8  00F3               	movwf	i1_do_I2C_TX$1132
 23230  1DA9  3000               	movlw	0
 23231  1DAA  00F4               	movwf	i1_do_I2C_TX$1132+1
 23232  1DAB  0873               	movf	i1_do_I2C_TX$1132,w
 23233  1DAC  0008               	return
 23234  1DAD                     __end_ofi1_do_I2C_TX:	
 23235                           
 23236                           	psect	text123
 23237  2794                     __ptext123:	
 23238 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 23239 ;; Defined at:
 23240 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 23241 ;; Parameters:    Size  Location     Type
 23242 ;;		None
 23243 ;; Auto vars:     Size  Location     Type
 23244 ;;		None
 23245 ;; Return value:  Size  Location     Type
 23246 ;;                  1    wreg      enum E8364
 23247 ;; Registers used:
 23248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23249 ;; Tracked objects:
 23250 ;;		On entry : 0/0
 23251 ;;		On exit  : 0/0
 23252 ;;		Unchanged: 0/0
 23253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23258 ;;Total ram usage:        1 bytes
 23259 ;; Hardware stack levels used:    1
 23260 ;; Hardware stack levels required when called:    2
 23261 ;; This function calls:
 23262 ;;		i1_do_I2C_SEND_RESTART
 23263 ;;		i1_do_I2C_SEND_STOP
 23264 ;;		i1_returnReset
 23265 ;;		i1_returnStop
 23266 ;; This function is called by:
 23267 ;; This function uses a non-reentrant model
 23268 ;;
 23269                           
 23270                           
 23271                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 23272  2794                     i1_do_I2C_DO_ADDRESS_NACK:	
 23273  2794                     i1l8128:	
 23274                           ;incstack = 0
 23275                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23276                           
 23277                           
 23278                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 23279  2794  0022               	movlb	2	; select bank2
 23280  2795  11A0               	bcf	_i2c_status^(0+256),3
 23281                           
 23282                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 23283  2796  3002               	movlw	2
 23284  2797  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 23285  2798  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 23286  2799  00AB               	movwf	(_i2c_status^(0+256)+11)
 23287                           
 23288                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 23289  279A  2FA1               	goto	i1l8142
 23290  279B                     i1l8132:	
 23291                           ;i2c_master.c: 324: {
 23292                           ;i2c_master.c: 325: case i2c_restart_read:
 23293                           
 23294                           
 23295                           ;i2c_master.c: 326: case i2c_restart_write:
 23296                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 23297  279B  31A3  2382         	fcall	i1_do_I2C_SEND_RESTART
 23298  279D  0008               	return
 23299  279E                     i1l8136:	
 23300                           ;i2c_master.c: 328: default:
 23301                           
 23302                           
 23303                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 23304  279E  31A3  2386         	fcall	i1_do_I2C_SEND_STOP
 23305                           
 23306                           ;i2c_master.c: 330: }
 23307  27A0  0008               	return
 23308  27A1                     i1l8142:	
 23309  27A1  0022               	movlb	2	; select bank2
 23310  27A2  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 23311  27A3  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 23312  27A4  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 23313  27A5  00F0               	movwf	i1returnReset@p
 23314  27A6  3010               	movlw	16
 23315  27A7  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23316  27A8  0086               	movwf	6
 23317  27A9  3001               	movlw	1	; select bank2/3
 23318  27AA  0087               	movwf	7
 23319  27AB  3F41               	moviw [1]fsr1
 23320  27AC  008A               	movwf	10
 23321  27AD  3F40               	moviw [0]fsr1
 23322  27AE  000A               	callw
 23323  27AF  31A7               	pagesel	$
 23324                           
 23325                           ; Switch size 1, requested type "space"
 23326                           ; Number of cases is 2, Range of values is 2 to 3
 23327                           ; switch strategies available:
 23328                           ; Name         Instructions Cycles
 23329                           ; simple_byte            7     4 (average)
 23330                           ; direct_byte           13     9 (fixed)
 23331                           ; jumptable            263     9 (fixed)
 23332                           ;	Chosen strategy is simple_byte
 23333  27B0  3A02               	xorlw	2	; case 2
 23334  27B1  1903               	skipnz
 23335  27B2  2F9B               	goto	i1l8132
 23336  27B3  3A01               	xorlw	1	; case 3
 23337  27B4  1903               	skipnz
 23338  27B5  2F9B               	goto	i1l8132
 23339  27B6  2F9E               	goto	i1l8136
 23340  27B7  0008               	return
 23341  27B8                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 23342                           
 23343                           	psect	text124
 23344  2392                     __ptext124:	
 23345 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 23346 ;; Defined at:
 23347 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 23348 ;; Parameters:    Size  Location     Type
 23349 ;;		None
 23350 ;; Auto vars:     Size  Location     Type
 23351 ;;		None
 23352 ;; Return value:  Size  Location     Type
 23353 ;;                  1    wreg      enum E8364
 23354 ;; Registers used:
 23355 ;;		wreg, status,2, status,0, pclath, cstack
 23356 ;; Tracked objects:
 23357 ;;		On entry : 0/0
 23358 ;;		On exit  : 0/0
 23359 ;;		Unchanged: 0/0
 23360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23365 ;;Total ram usage:        0 bytes
 23366 ;; Hardware stack levels used:    1
 23367 ;; Hardware stack levels required when called:    1
 23368 ;; This function calls:
 23369 ;;		i1_i2c1_driver_sendNACK
 23370 ;; This function is called by:
 23371 ;;		i1_do_I2C_RX
 23372 ;; This function uses a non-reentrant model
 23373 ;;
 23374                           
 23375                           
 23376                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 23377  2392                     i1_do_I2C_DO_NACK_RESTART:	
 23378  2392                     i1l7786:	
 23379                           ;incstack = 0
 23380                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 23381                           
 23382                           
 23383                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 23384  2392  31A3  2376         	fcall	i1_i2c1_driver_sendNACK
 23385                           
 23386                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 23387  2394  3009               	movlw	9
 23388  2395  0008               	return
 23389  2396                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 23390                           
 23391                           	psect	text125
 23392  238E                     __ptext125:	
 23393 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 23394 ;; Defined at:
 23395 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 23396 ;; Parameters:    Size  Location     Type
 23397 ;;		None
 23398 ;; Auto vars:     Size  Location     Type
 23399 ;;		None
 23400 ;; Return value:  Size  Location     Type
 23401 ;;                  1    wreg      enum E8364
 23402 ;; Registers used:
 23403 ;;		wreg, status,2, status,0, pclath, cstack
 23404 ;; Tracked objects:
 23405 ;;		On entry : 0/0
 23406 ;;		On exit  : 0/0
 23407 ;;		Unchanged: 0/0
 23408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23413 ;;Total ram usage:        0 bytes
 23414 ;; Hardware stack levels used:    1
 23415 ;; Hardware stack levels required when called:    1
 23416 ;; This function calls:
 23417 ;;		i1_i2c1_driver_sendNACK
 23418 ;; This function is called by:
 23419 ;;		i1_do_I2C_RX
 23420 ;; This function uses a non-reentrant model
 23421 ;;
 23422                           
 23423                           
 23424                           ;psect for function i1_do_I2C_DO_NACK_STOP
 23425  238E                     i1_do_I2C_DO_NACK_STOP:	
 23426  238E                     i1l7780:	
 23427                           ;incstack = 0
 23428                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 23429                           
 23430                           
 23431                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 23432  238E  31A3  2376         	fcall	i1_i2c1_driver_sendNACK
 23433                           
 23434                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 23435  2390  300A               	movlw	10
 23436  2391  0008               	return
 23437  2392                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 23438                           
 23439                           	psect	text126
 23440  238A                     __ptext126:	
 23441 ;; *************** function i1_do_I2C_DO_ACK *****************
 23442 ;; Defined at:
 23443 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 23444 ;; Parameters:    Size  Location     Type
 23445 ;;		None
 23446 ;; Auto vars:     Size  Location     Type
 23447 ;;		None
 23448 ;; Return value:  Size  Location     Type
 23449 ;;                  1    wreg      enum E8364
 23450 ;; Registers used:
 23451 ;;		wreg, status,2, status,0, pclath, cstack
 23452 ;; Tracked objects:
 23453 ;;		On entry : 0/0
 23454 ;;		On exit  : 0/0
 23455 ;;		Unchanged: 0/0
 23456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23461 ;;Total ram usage:        0 bytes
 23462 ;; Hardware stack levels used:    1
 23463 ;; Hardware stack levels required when called:    1
 23464 ;; This function calls:
 23465 ;;		i1_i2c1_driver_sendACK
 23466 ;; This function is called by:
 23467 ;; This function uses a non-reentrant model
 23468 ;;
 23469                           
 23470                           
 23471                           ;psect for function i1_do_I2C_DO_ACK
 23472  238A                     i1_do_I2C_DO_ACK:	
 23473  238A                     i1l8122:	
 23474                           ;incstack = 0
 23475                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 23476                           
 23477                           
 23478                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 23479  238A  31A3  2372         	fcall	i1_i2c1_driver_sendACK
 23480                           
 23481                           ;i2c_master.c: 302: return I2C_RCEN;
 23482  238C  3005               	movlw	5
 23483  238D  0008               	return
 23484  238E                     __end_ofi1_do_I2C_DO_ACK:	
 23485                           
 23486                           	psect	text127
 23487  23C4                     __ptext127:	
 23488 ;; *************** function i1_do_I2C_RCEN *****************
 23489 ;; Defined at:
 23490 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 23491 ;; Parameters:    Size  Location     Type
 23492 ;;		None
 23493 ;; Auto vars:     Size  Location     Type
 23494 ;;		None
 23495 ;; Return value:  Size  Location     Type
 23496 ;;                  1    wreg      enum E8364
 23497 ;; Registers used:
 23498 ;;		wreg, status,2, status,0, pclath, cstack
 23499 ;; Tracked objects:
 23500 ;;		On entry : 0/0
 23501 ;;		On exit  : 0/0
 23502 ;;		Unchanged: 0/0
 23503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23508 ;;Total ram usage:        0 bytes
 23509 ;; Hardware stack levels used:    1
 23510 ;; Hardware stack levels required when called:    1
 23511 ;; This function calls:
 23512 ;;		i1_i2c1_driver_startRX
 23513 ;; This function is called by:
 23514 ;; This function uses a non-reentrant model
 23515 ;;
 23516                           
 23517                           
 23518                           ;psect for function i1_do_I2C_RCEN
 23519  23C4                     i1_do_I2C_RCEN:	
 23520  23C4                     i1l6254:	
 23521                           ;incstack = 0
 23522                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 23523                           
 23524                           
 23525                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 23526  23C4  0022               	movlb	2	; select bank2
 23527  23C5  11A0               	bcf	_i2c_status^(0+256),3
 23528                           
 23529                           ;i2c_master.c: 295: i2c1_driver_startRX();
 23530  23C6  31A3  234B         	fcall	i1_i2c1_driver_startRX
 23531                           
 23532                           ;i2c_master.c: 296: return I2C_RX;
 23533  23C8  3004               	movlw	4
 23534  23C9  0008               	return
 23535  23CA                     __end_ofi1_do_I2C_RCEN:	
 23536                           
 23537                           	psect	text128
 23538  23FB                     __ptext128:	
 23539 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 23540 ;; Defined at:
 23541 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 23542 ;; Parameters:    Size  Location     Type
 23543 ;;		None
 23544 ;; Auto vars:     Size  Location     Type
 23545 ;;		None
 23546 ;; Return value:  Size  Location     Type
 23547 ;;                  1    wreg      enum E8364
 23548 ;; Registers used:
 23549 ;;		wreg, status,2, status,0, pclath, cstack
 23550 ;; Tracked objects:
 23551 ;;		On entry : 0/0
 23552 ;;		On exit  : 0/0
 23553 ;;		Unchanged: 0/0
 23554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23559 ;;Total ram usage:        0 bytes
 23560 ;; Hardware stack levels used:    1
 23561 ;; Hardware stack levels required when called:    1
 23562 ;; This function calls:
 23563 ;;		i1_i2c1_driver_TXData
 23564 ;; This function is called by:
 23565 ;; This function uses a non-reentrant model
 23566 ;;
 23567                           
 23568                           
 23569                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 23570  23FB                     i1_do_I2C_SEND_ADR_WRITE:	
 23571  23FB                     i1l8114:	
 23572                           ;incstack = 0
 23573                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 23574                           
 23575                           
 23576                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 23577  23FB  0022               	movlb	2	; select bank2
 23578  23FC  15A0               	bsf	_i2c_status^(0+256),3
 23579                           
 23580                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 23581  23FD  3521               	lslf	(_i2c_status^(0+256)+1),w
 23582  23FE  31A3  23B0         	fcall	i1_i2c1_driver_TXData
 23583                           
 23584                           ;i2c_master.c: 289: return I2C_TX;
 23585  2400  3003               	movlw	3
 23586  2401  0008               	return
 23587  2402                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 23588                           
 23589                           	psect	text129
 23590  2402                     __ptext129:	
 23591 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 23592 ;; Defined at:
 23593 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 23594 ;; Parameters:    Size  Location     Type
 23595 ;;		None
 23596 ;; Auto vars:     Size  Location     Type
 23597 ;;		None
 23598 ;; Return value:  Size  Location     Type
 23599 ;;                  1    wreg      enum E8364
 23600 ;; Registers used:
 23601 ;;		wreg, status,2, status,0, pclath, cstack
 23602 ;; Tracked objects:
 23603 ;;		On entry : 0/0
 23604 ;;		On exit  : 0/0
 23605 ;;		Unchanged: 0/0
 23606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23611 ;;Total ram usage:        0 bytes
 23612 ;; Hardware stack levels used:    1
 23613 ;; Hardware stack levels required when called:    1
 23614 ;; This function calls:
 23615 ;;		i1_i2c1_driver_TXData
 23616 ;; This function is called by:
 23617 ;; This function uses a non-reentrant model
 23618 ;;
 23619                           
 23620                           
 23621                           ;psect for function i1_do_I2C_SEND_ADR_READ
 23622  2402                     i1_do_I2C_SEND_ADR_READ:	
 23623  2402                     i1l8106:	
 23624                           ;incstack = 0
 23625                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 23626                           
 23627                           
 23628                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 23629  2402  0022               	movlb	2	; select bank2
 23630  2403  15A0               	bsf	_i2c_status^(0+256),3
 23631                           
 23632                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 23633  2404  1403               	setc
 23634  2405  0D21               	rlf	(_i2c_status^(0+256)+1),w
 23635  2406  31A3  23B0         	fcall	i1_i2c1_driver_TXData
 23636                           
 23637                           ;i2c_master.c: 282: return I2C_RCEN;
 23638  2408  3005               	movlw	5
 23639  2409  0008               	return
 23640  240A                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 23641                           
 23642                           	psect	text130
 23643  2386                     __ptext130:	
 23644 ;; *************** function i1_do_I2C_SEND_STOP *****************
 23645 ;; Defined at:
 23646 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 23647 ;; Parameters:    Size  Location     Type
 23648 ;;		None
 23649 ;; Auto vars:     Size  Location     Type
 23650 ;;		None
 23651 ;; Return value:  Size  Location     Type
 23652 ;;                  1    wreg      enum E8364
 23653 ;; Registers used:
 23654 ;;		wreg, status,2, status,0, pclath, cstack
 23655 ;; Tracked objects:
 23656 ;;		On entry : 0/0
 23657 ;;		On exit  : 0/0
 23658 ;;		Unchanged: 0/0
 23659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23664 ;;Total ram usage:        0 bytes
 23665 ;; Hardware stack levels used:    1
 23666 ;; Hardware stack levels required when called:    1
 23667 ;; This function calls:
 23668 ;;		i1_i2c1_driver_stop
 23669 ;; This function is called by:
 23670 ;;		i1_do_I2C_DO_ADDRESS_NACK
 23671 ;;		i1_do_I2C_TX
 23672 ;;		i1_do_I2C_TX_EMPTY
 23673 ;; This function uses a non-reentrant model
 23674 ;;
 23675                           
 23676                           
 23677                           ;psect for function i1_do_I2C_SEND_STOP
 23678  2386                     i1_do_I2C_SEND_STOP:	
 23679  2386                     i1l7774:	
 23680                           ;incstack = 0
 23681                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 23682                           
 23683                           
 23684                           ;i2c_master.c: 274: i2c1_driver_stop();
 23685  2386  31A3  2348         	fcall	i1_i2c1_driver_stop
 23686                           
 23687                           ;i2c_master.c: 275: return I2C_IDLE;
 23688  2388  3000               	movlw	0
 23689  2389  0008               	return
 23690  238A                     __end_ofi1_do_I2C_SEND_STOP:	
 23691                           
 23692                           	psect	text131
 23693  2382                     __ptext131:	
 23694 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 23695 ;; Defined at:
 23696 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 23697 ;; Parameters:    Size  Location     Type
 23698 ;;		None
 23699 ;; Auto vars:     Size  Location     Type
 23700 ;;		None
 23701 ;; Return value:  Size  Location     Type
 23702 ;;                  1    wreg      enum E8364
 23703 ;; Registers used:
 23704 ;;		wreg, status,2, status,0, pclath, cstack
 23705 ;; Tracked objects:
 23706 ;;		On entry : 0/0
 23707 ;;		On exit  : 0/0
 23708 ;;		Unchanged: 0/0
 23709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23714 ;;Total ram usage:        0 bytes
 23715 ;; Hardware stack levels used:    1
 23716 ;; Hardware stack levels required when called:    1
 23717 ;; This function calls:
 23718 ;;		i1_i2c1_driver_restart
 23719 ;; This function is called by:
 23720 ;;		i1_do_I2C_DO_ADDRESS_NACK
 23721 ;;		i1_do_I2C_TX_EMPTY
 23722 ;; This function uses a non-reentrant model
 23723 ;;
 23724                           
 23725                           
 23726                           ;psect for function i1_do_I2C_SEND_RESTART
 23727  2382                     i1_do_I2C_SEND_RESTART:	
 23728  2382                     i1l7768:	
 23729                           ;incstack = 0
 23730                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 23731                           
 23732                           
 23733                           ;i2c_master.c: 268: i2c1_driver_restart();
 23734  2382  31A3  2345         	fcall	i1_i2c1_driver_restart
 23735                           
 23736                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 23737  2384  3001               	movlw	1
 23738  2385  0008               	return
 23739  2386                     __end_ofi1_do_I2C_SEND_RESTART:	
 23740                           
 23741                           	psect	text132
 23742  237E                     __ptext132:	
 23743 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 23744 ;; Defined at:
 23745 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 23746 ;; Parameters:    Size  Location     Type
 23747 ;;		None
 23748 ;; Auto vars:     Size  Location     Type
 23749 ;;		None
 23750 ;; Return value:  Size  Location     Type
 23751 ;;                  1    wreg      enum E8364
 23752 ;; Registers used:
 23753 ;;		wreg, status,2, status,0, pclath, cstack
 23754 ;; Tracked objects:
 23755 ;;		On entry : 0/0
 23756 ;;		On exit  : 0/0
 23757 ;;		Unchanged: 0/0
 23758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23763 ;;Total ram usage:        0 bytes
 23764 ;; Hardware stack levels used:    1
 23765 ;; Hardware stack levels required when called:    1
 23766 ;; This function calls:
 23767 ;;		i1_i2c1_driver_restart
 23768 ;; This function is called by:
 23769 ;;		i1_do_I2C_TX
 23770 ;; This function uses a non-reentrant model
 23771 ;;
 23772                           
 23773                           
 23774                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 23775  237E                     i1_do_I2C_SEND_RESTART_WRITE:	
 23776  237E                     i1l7762:	
 23777                           ;incstack = 0
 23778                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 23779                           
 23780                           
 23781                           ;i2c_master.c: 262: i2c1_driver_restart();
 23782  237E  31A3  2345         	fcall	i1_i2c1_driver_restart
 23783                           
 23784                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 23785  2380  3002               	movlw	2
 23786  2381  0008               	return
 23787  2382                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 23788                           
 23789                           	psect	text133
 23790  237A                     __ptext133:	
 23791 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 23792 ;; Defined at:
 23793 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 23794 ;; Parameters:    Size  Location     Type
 23795 ;;		None
 23796 ;; Auto vars:     Size  Location     Type
 23797 ;;		None
 23798 ;; Return value:  Size  Location     Type
 23799 ;;                  1    wreg      enum E8364
 23800 ;; Registers used:
 23801 ;;		wreg, status,2, status,0, pclath, cstack
 23802 ;; Tracked objects:
 23803 ;;		On entry : 0/0
 23804 ;;		On exit  : 0/0
 23805 ;;		Unchanged: 0/0
 23806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23811 ;;Total ram usage:        0 bytes
 23812 ;; Hardware stack levels used:    1
 23813 ;; Hardware stack levels required when called:    1
 23814 ;; This function calls:
 23815 ;;		i1_i2c1_driver_restart
 23816 ;; This function is called by:
 23817 ;;		i1_do_I2C_TX
 23818 ;; This function uses a non-reentrant model
 23819 ;;
 23820                           
 23821                           
 23822                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 23823  237A                     i1_do_I2C_SEND_RESTART_READ:	
 23824  237A                     i1l7756:	
 23825                           ;incstack = 0
 23826                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 23827                           
 23828                           
 23829                           ;i2c_master.c: 256: i2c1_driver_restart();
 23830  237A  31A3  2345         	fcall	i1_i2c1_driver_restart
 23831                           
 23832                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 23833  237C  3001               	movlw	1
 23834  237D  0008               	return
 23835  237E                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 23836                           
 23837                           	psect	text134
 23838  23B5                     __ptext134:	
 23839 ;; *************** function i1_do_I2C_IDLE *****************
 23840 ;; Defined at:
 23841 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 23842 ;; Parameters:    Size  Location     Type
 23843 ;;		None
 23844 ;; Auto vars:     Size  Location     Type
 23845 ;;		None
 23846 ;; Return value:  Size  Location     Type
 23847 ;;                  1    wreg      enum E8364
 23848 ;; Registers used:
 23849 ;;		wreg, status,2
 23850 ;; Tracked objects:
 23851 ;;		On entry : 0/0
 23852 ;;		On exit  : 0/0
 23853 ;;		Unchanged: 0/0
 23854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23859 ;;Total ram usage:        0 bytes
 23860 ;; Hardware stack levels used:    1
 23861 ;; This function calls:
 23862 ;;		Nothing
 23863 ;; This function is called by:
 23864 ;; This function uses a non-reentrant model
 23865 ;;
 23866                           
 23867                           
 23868                           ;psect for function i1_do_I2C_IDLE
 23869  23B5                     i1_do_I2C_IDLE:	
 23870  23B5                     i1l6230:	
 23871                           ;incstack = 0
 23872                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 23873                           
 23874                           
 23875                           ;i2c_master.c: 249: i2c_status.busy = 0;
 23876  23B5  0022               	movlb	2	; select bank2
 23877  23B6  1020               	bcf	_i2c_status^(0+256),0
 23878                           
 23879                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 23880  23B7  01AB               	clrf	(_i2c_status^(0+256)+11)
 23881                           
 23882                           ;i2c_master.c: 251: return I2C_RESET;
 23883  23B8  300E               	movlw	14
 23884  23B9  0008               	return
 23885  23BA                     __end_ofi1_do_I2C_IDLE:	
 23886                           
 23887                           	psect	text135
 23888  23F4                     __ptext135:	
 23889 ;; *************** function i1_do_I2C_RESET *****************
 23890 ;; Defined at:
 23891 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 23892 ;; Parameters:    Size  Location     Type
 23893 ;;		None
 23894 ;; Auto vars:     Size  Location     Type
 23895 ;;		None
 23896 ;; Return value:  Size  Location     Type
 23897 ;;                  1    wreg      enum E8364
 23898 ;; Registers used:
 23899 ;;		wreg, status,2, status,0, pclath, cstack
 23900 ;; Tracked objects:
 23901 ;;		On entry : 0/0
 23902 ;;		On exit  : 0/0
 23903 ;;		Unchanged: 0/0
 23904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23909 ;;Total ram usage:        0 bytes
 23910 ;; Hardware stack levels used:    1
 23911 ;; Hardware stack levels required when called:    1
 23912 ;; This function calls:
 23913 ;;		i1_i2c1_driver_resetBus
 23914 ;; This function is called by:
 23915 ;; This function uses a non-reentrant model
 23916 ;;
 23917                           
 23918                           
 23919                           ;psect for function i1_do_I2C_RESET
 23920  23F4                     i1_do_I2C_RESET:	
 23921  23F4                     i1l6220:	
 23922                           ;incstack = 0
 23923                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 23924                           
 23925                           
 23926                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 23927  23F4  3198  202A         	fcall	i1_i2c1_driver_resetBus
 23928                           
 23929                           ;i2c_master.c: 242: i2c_status.busy = 0;
 23930  23F6  0022               	movlb	2	; select bank2
 23931  23F7  1020               	bcf	_i2c_status^(0+256),0
 23932                           
 23933                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 23934  23F8  01AB               	clrf	(_i2c_status^(0+256)+11)
 23935                           
 23936                           ;i2c_master.c: 244: return I2C_RESET;
 23937  23F9  300E               	movlw	14
 23938  23FA  0008               	return
 23939  23FB                     __end_ofi1_do_I2C_RESET:	
 23940                           
 23941                           	psect	text136
 23942  189F                     __ptext136:	
 23943 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 23944 ;; Defined at:
 23945 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 23946 ;; Parameters:    Size  Location     Type
 23947 ;;		None
 23948 ;; Auto vars:     Size  Location     Type
 23949 ;;		None
 23950 ;; Return value:  Size  Location     Type
 23951 ;;                  1    wreg      enum E8364
 23952 ;; Registers used:
 23953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23954 ;; Tracked objects:
 23955 ;;		On entry : 0/0
 23956 ;;		On exit  : 0/0
 23957 ;;		Unchanged: 0/0
 23958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23963 ;;Total ram usage:        1 bytes
 23964 ;; Hardware stack levels used:    1
 23965 ;; Hardware stack levels required when called:    2
 23966 ;; This function calls:
 23967 ;;		i1_do_I2C_SEND_RESTART
 23968 ;;		i1_do_I2C_SEND_STOP
 23969 ;;		i1_mssp1_setIRQ
 23970 ;;		i1_returnReset
 23971 ;;		i1_returnStop
 23972 ;; This function is called by:
 23973 ;; This function uses a non-reentrant model
 23974 ;;
 23975                           
 23976                           
 23977                           ;psect for function i1_do_I2C_TX_EMPTY
 23978  189F                     i1_do_I2C_TX_EMPTY:	
 23979  189F                     i1l8200:	
 23980                           ;incstack = 0
 23981                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23982                           
 23983                           
 23984                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 23985  189F  0022               	movlb	2	; select bank2
 23986  18A0  1520               	bsf	_i2c_status^(0+256),2
 23987                           
 23988                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 23989  18A1  28AC               	goto	i1l8218
 23990  18A2                     i1l8202:	
 23991                           ;i2c_master.c: 386: {
 23992                           ;i2c_master.c: 387: case i2c_restart_read:
 23993                           
 23994                           
 23995                           ;i2c_master.c: 388: case i2c_restart_write:
 23996                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 23997  18A2  31A3  2382         	fcall	i1_do_I2C_SEND_RESTART
 23998  18A4  0008               	return
 23999  18A5                     i1l8206:	
 24000                           ;i2c_master.c: 390: case i2c_continue:
 24001                           
 24002                           
 24003                           ;i2c_master.c: 391: mssp1_setIRQ();
 24004  18A5  31A3  2351         	fcall	i1_mssp1_setIRQ
 24005                           
 24006                           ;i2c_master.c: 392: return I2C_TX;
 24007  18A7  3003               	movlw	3
 24008  18A8  0008               	return
 24009  18A9                     i1l8212:	
 24010                           ;i2c_master.c: 394: case i2c_stop:
 24011                           
 24012                           ;i2c_master.c: 393: default:
 24013                           
 24014                           
 24015                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 24016  18A9  31A3  2386         	fcall	i1_do_I2C_SEND_STOP
 24017                           
 24018                           ;i2c_master.c: 396: }
 24019  18AB  0008               	return
 24020  18AC                     i1l8218:	
 24021  18AC  0022               	movlb	2	; select bank2
 24022  18AD  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 24023  18AE  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 24024  18AF  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 24025  18B0  00F0               	movwf	i1returnReset@p
 24026  18B1  300C               	movlw	12
 24027  18B2  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 24028  18B3  0086               	movwf	6
 24029  18B4  3001               	movlw	1	; select bank2/3
 24030  18B5  0087               	movwf	7
 24031  18B6  3F41               	moviw [1]fsr1
 24032  18B7  008A               	movwf	10
 24033  18B8  3F40               	moviw [0]fsr1
 24034  18B9  000A               	callw
 24035  18BA  3198               	pagesel	$
 24036                           
 24037                           ; Switch size 1, requested type "space"
 24038                           ; Number of cases is 4, Range of values is 1 to 4
 24039                           ; switch strategies available:
 24040                           ; Name         Instructions Cycles
 24041                           ; simple_byte           13     7 (average)
 24042                           ; direct_byte           17     9 (fixed)
 24043                           ; jumptable            263     9 (fixed)
 24044                           ;	Chosen strategy is simple_byte
 24045  18BB  3A01               	xorlw	1	; case 1
 24046  18BC  1903               	skipnz
 24047  18BD  28A9               	goto	i1l8212
 24048  18BE  3A03               	xorlw	3	; case 2
 24049  18BF  1903               	skipnz
 24050  18C0  28A2               	goto	i1l8202
 24051  18C1  3A01               	xorlw	1	; case 3
 24052  18C2  1903               	skipnz
 24053  18C3  28A2               	goto	i1l8202
 24054  18C4  3A07               	xorlw	7	; case 4
 24055  18C5  1903               	skipnz
 24056  18C6  28A5               	goto	i1l8206
 24057  18C7  28A9               	goto	i1l8212
 24058  18C8  0008               	return
 24059  18C9                     __end_ofi1_do_I2C_TX_EMPTY:	
 24060                           
 24061                           	psect	text137
 24062  2351                     __ptext137:	
 24063 ;; *************** function i1_mssp1_setIRQ *****************
 24064 ;; Defined at:
 24065 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 24066 ;; Parameters:    Size  Location     Type
 24067 ;;		None
 24068 ;; Auto vars:     Size  Location     Type
 24069 ;;		None
 24070 ;; Return value:  Size  Location     Type
 24071 ;;                  1    wreg      void 
 24072 ;; Registers used:
 24073 ;;		None
 24074 ;; Tracked objects:
 24075 ;;		On entry : 0/0
 24076 ;;		On exit  : 0/0
 24077 ;;		Unchanged: 0/0
 24078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24083 ;;Total ram usage:        0 bytes
 24084 ;; Hardware stack levels used:    1
 24085 ;; This function calls:
 24086 ;;		Nothing
 24087 ;; This function is called by:
 24088 ;;		i1_do_I2C_TX_EMPTY
 24089 ;; This function uses a non-reentrant model
 24090 ;;
 24091                           
 24092                           
 24093                           ;psect for function i1_mssp1_setIRQ
 24094  2351                     i1_mssp1_setIRQ:	
 24095                           
 24096                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 24097                           
 24098                           ;incstack = 0
 24099                           ; Regs used in i1_mssp1_setIRQ: []
 24100  2351  0020               	movlb	0	; select bank0
 24101  2352  1591               	bsf	17,3	;volatile
 24102  2353  0008               	return
 24103  2354                     __end_ofi1_mssp1_setIRQ:	
 24104                           
 24105                           	psect	text138
 24106  24DD                     __ptext138:	
 24107 ;; *************** function i1_i2c1_driver_isNACK *****************
 24108 ;; Defined at:
 24109 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 24110 ;; Parameters:    Size  Location     Type
 24111 ;;		None
 24112 ;; Auto vars:     Size  Location     Type
 24113 ;;		None
 24114 ;; Return value:  Size  Location     Type
 24115 ;;		None               void
 24116 ;; Registers used:
 24117 ;;		wreg, status,2, status,0
 24118 ;; Tracked objects:
 24119 ;;		On entry : 0/0
 24120 ;;		On exit  : 0/0
 24121 ;;		Unchanged: 0/0
 24122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24127 ;;Total ram usage:        1 bytes
 24128 ;; Hardware stack levels used:    1
 24129 ;; This function calls:
 24130 ;;		Nothing
 24131 ;; This function is called by:
 24132 ;;		i1_do_I2C_TX
 24133 ;;		i1_i2c_ISR
 24134 ;; This function uses a non-reentrant model
 24135 ;;
 24136                           
 24137                           
 24138                           ;psect for function i1_i2c1_driver_isNACK
 24139  24DD                     i1_i2c1_driver_isNACK:	
 24140                           
 24141                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 24142                           
 24143                           ;incstack = 0
 24144                           ; Regs used in i1_i2c1_driver_isNACK: [wreg+status,2+status,0]
 24145  24DD  0024               	movlb	4	; select bank4
 24146  24DE  0816               	movf	22,w	;volatile
 24147  24DF  39BF               	andlw	-65
 24148  24E0  3840               	iorlw	64
 24149  24E1  0096               	movwf	22	;volatile
 24150  24E2  0E16               	swapf	22,w	;volatile
 24151  24E3  0C89               	rrf	9,f
 24152  24E4  0C89               	rrf	9,f
 24153  24E5  3901               	andlw	1
 24154  24E6  00F0               	movwf	??i1_i2c1_driver_isNACK
 24155  24E7  0C70               	rrf	??i1_i2c1_driver_isNACK,w
 24156  24E8  0008               	return
 24157  24E9                     __end_ofi1_i2c1_driver_isNACK:	
 24158                           
 24159                           	psect	text139
 24160  23B0                     __ptext139:	
 24161 ;; *************** function i1_i2c1_driver_TXData *****************
 24162 ;; Defined at:
 24163 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 24164 ;; Parameters:    Size  Location     Type
 24165 ;;  d               1    wreg     unsigned char 
 24166 ;; Auto vars:     Size  Location     Type
 24167 ;;  d               1    0[COMMON] unsigned char 
 24168 ;; Return value:  Size  Location     Type
 24169 ;;                  1    wreg      void 
 24170 ;; Registers used:
 24171 ;;		wreg
 24172 ;; Tracked objects:
 24173 ;;		On entry : 0/0
 24174 ;;		On exit  : 0/0
 24175 ;;		Unchanged: 0/0
 24176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24178 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24180 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24181 ;;Total ram usage:        1 bytes
 24182 ;; Hardware stack levels used:    1
 24183 ;; This function calls:
 24184 ;;		Nothing
 24185 ;; This function is called by:
 24186 ;;		i1_do_I2C_SEND_ADR_READ
 24187 ;;		i1_do_I2C_SEND_ADR_WRITE
 24188 ;;		i1_do_I2C_TX
 24189 ;; This function uses a non-reentrant model
 24190 ;;
 24191                           
 24192                           
 24193                           ;psect for function i1_i2c1_driver_TXData
 24194  23B0                     i1_i2c1_driver_TXData:	
 24195                           
 24196                           ;incstack = 0
 24197                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 24198                           ;i1i2c1_driver_TXData@d stored from wreg
 24199  23B0  00F0               	movwf	i1i2c1_driver_TXData@d
 24200                           
 24201                           ;i2c1_driver.c: 188: SSP1BUF = d;
 24202  23B1  0870               	movf	i1i2c1_driver_TXData@d,w
 24203  23B2  0024               	movlb	4	; select bank4
 24204  23B3  0091               	movwf	17	;volatile
 24205  23B4  0008               	return
 24206  23B5                     __end_ofi1_i2c1_driver_TXData:	
 24207                           
 24208                           	psect	text140
 24209  234E                     __ptext140:	
 24210 ;; *************** function i1_i2c1_driver_getRXData *****************
 24211 ;; Defined at:
 24212 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 24213 ;; Parameters:    Size  Location     Type
 24214 ;;		None
 24215 ;; Auto vars:     Size  Location     Type
 24216 ;;		None
 24217 ;; Return value:  Size  Location     Type
 24218 ;;                  1    wreg      unsigned char 
 24219 ;; Registers used:
 24220 ;;		wreg
 24221 ;; Tracked objects:
 24222 ;;		On entry : 0/0
 24223 ;;		On exit  : 0/0
 24224 ;;		Unchanged: 0/0
 24225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24230 ;;Total ram usage:        0 bytes
 24231 ;; Hardware stack levels used:    1
 24232 ;; This function calls:
 24233 ;;		Nothing
 24234 ;; This function is called by:
 24235 ;;		i1_do_I2C_RX
 24236 ;; This function uses a non-reentrant model
 24237 ;;
 24238                           
 24239                           
 24240                           ;psect for function i1_i2c1_driver_getRXData
 24241  234E                     i1_i2c1_driver_getRXData:	
 24242                           
 24243                           ;i2c1_driver.c: 173: return SSP1BUF;
 24244                           
 24245                           ;incstack = 0
 24246                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 24247  234E  0024               	movlb	4	; select bank4
 24248  234F  0811               	movf	17,w	;volatile
 24249  2350  0008               	return
 24250  2351                     __end_ofi1_i2c1_driver_getRXData:	
 24251                           
 24252                           	psect	text141
 24253  2376                     __ptext141:	
 24254 ;; *************** function i1_i2c1_driver_sendNACK *****************
 24255 ;; Defined at:
 24256 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 24257 ;; Parameters:    Size  Location     Type
 24258 ;;		None
 24259 ;; Auto vars:     Size  Location     Type
 24260 ;;		None
 24261 ;; Return value:  Size  Location     Type
 24262 ;;                  1    wreg      void 
 24263 ;; Registers used:
 24264 ;;		None
 24265 ;; Tracked objects:
 24266 ;;		On entry : 0/0
 24267 ;;		On exit  : 0/0
 24268 ;;		Unchanged: 0/0
 24269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24274 ;;Total ram usage:        0 bytes
 24275 ;; Hardware stack levels used:    1
 24276 ;; This function calls:
 24277 ;;		Nothing
 24278 ;; This function is called by:
 24279 ;;		i1_do_I2C_DO_NACK_STOP
 24280 ;;		i1_do_I2C_DO_NACK_RESTART
 24281 ;; This function uses a non-reentrant model
 24282 ;;
 24283                           
 24284                           
 24285                           ;psect for function i1_i2c1_driver_sendNACK
 24286  2376                     i1_i2c1_driver_sendNACK:	
 24287                           
 24288                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 24289                           
 24290                           ;incstack = 0
 24291                           ; Regs used in i1_i2c1_driver_sendNACK: []
 24292  2376  0024               	movlb	4	; select bank4
 24293  2377  1696               	bsf	22,5	;volatile
 24294                           
 24295                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 24296  2378  1616               	bsf	22,4	;volatile
 24297  2379  0008               	return
 24298  237A                     __end_ofi1_i2c1_driver_sendNACK:	
 24299                           
 24300                           	psect	text142
 24301  182A                     __ptext142:	
 24302 ;; *************** function i1_i2c1_driver_resetBus *****************
 24303 ;; Defined at:
 24304 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 24305 ;; Parameters:    Size  Location     Type
 24306 ;;		None
 24307 ;; Auto vars:     Size  Location     Type
 24308 ;;		None
 24309 ;; Return value:  Size  Location     Type
 24310 ;;                  1    wreg      void 
 24311 ;; Registers used:
 24312 ;;		None
 24313 ;; Tracked objects:
 24314 ;;		On entry : 0/0
 24315 ;;		On exit  : 0/0
 24316 ;;		Unchanged: 0/0
 24317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24322 ;;Total ram usage:        0 bytes
 24323 ;; Hardware stack levels used:    1
 24324 ;; This function calls:
 24325 ;;		Nothing
 24326 ;; This function is called by:
 24327 ;;		i1_do_I2C_RESET
 24328 ;; This function uses a non-reentrant model
 24329 ;;
 24330                           
 24331                           
 24332                           ;psect for function i1_i2c1_driver_resetBus
 24333  182A                     i1_i2c1_driver_resetBus:	
 24334                           
 24335                           ;incstack = 0
 24336                           ; Regs used in i1_i2c1_driver_resetBus: []
 24337  182A  0008               	return
 24338  182B                     __end_ofi1_i2c1_driver_resetBus:	
 24339                           
 24340                           	psect	text143
 24341  234B                     __ptext143:	
 24342 ;; *************** function i1_i2c1_driver_startRX *****************
 24343 ;; Defined at:
 24344 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 24345 ;; Parameters:    Size  Location     Type
 24346 ;;		None
 24347 ;; Auto vars:     Size  Location     Type
 24348 ;;		None
 24349 ;; Return value:  Size  Location     Type
 24350 ;;                  1    wreg      void 
 24351 ;; Registers used:
 24352 ;;		None
 24353 ;; Tracked objects:
 24354 ;;		On entry : 0/0
 24355 ;;		On exit  : 0/0
 24356 ;;		Unchanged: 0/0
 24357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24362 ;;Total ram usage:        0 bytes
 24363 ;; Hardware stack levels used:    1
 24364 ;; This function calls:
 24365 ;;		Nothing
 24366 ;; This function is called by:
 24367 ;;		i1_do_I2C_RCEN
 24368 ;; This function uses a non-reentrant model
 24369 ;;
 24370                           
 24371                           
 24372                           ;psect for function i1_i2c1_driver_startRX
 24373  234B                     i1_i2c1_driver_startRX:	
 24374                           
 24375                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 24376                           
 24377                           ;incstack = 0
 24378                           ; Regs used in i1_i2c1_driver_startRX: []
 24379  234B  0024               	movlb	4	; select bank4
 24380  234C  1596               	bsf	22,3	;volatile
 24381  234D  0008               	return
 24382  234E                     __end_ofi1_i2c1_driver_startRX:	
 24383                           
 24384                           	psect	text144
 24385  2337                     __ptext144:	
 24386 ;; *************** function i1_returnReset *****************
 24387 ;; Defined at:
 24388 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 24389 ;; Parameters:    Size  Location     Type
 24390 ;;  p               1    0[COMMON] PTR void 
 24391 ;;		 -> NULL(0), 
 24392 ;; Auto vars:     Size  Location     Type
 24393 ;;		None
 24394 ;; Return value:  Size  Location     Type
 24395 ;;                  1    wreg      enum E8198
 24396 ;; Registers used:
 24397 ;;		wreg
 24398 ;; Tracked objects:
 24399 ;;		On entry : 0/0
 24400 ;;		On exit  : 0/0
 24401 ;;		Unchanged: 0/0
 24402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24403 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24407 ;;Total ram usage:        1 bytes
 24408 ;; Hardware stack levels used:    1
 24409 ;; This function calls:
 24410 ;;		Nothing
 24411 ;; This function is called by:
 24412 ;; This function uses a non-reentrant model
 24413 ;;
 24414                           
 24415                           
 24416                           ;psect for function i1_returnReset
 24417  2337                     i1_returnReset:	
 24418  2337                     i1l7796:	
 24419                           ;incstack = 0
 24420                           ; Regs used in i1_returnReset: [wreg]
 24421                           
 24422                           
 24423                           ;i2c_master.c: 450: return i2c_reset_link;
 24424  2337  3005               	movlw	5
 24425  2338  0008               	return
 24426  2339                     __end_ofi1_returnReset:	
 24427                           
 24428                           	psect	text145
 24429  2335                     __ptext145:	
 24430 ;; *************** function i1_returnStop *****************
 24431 ;; Defined at:
 24432 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 24433 ;; Parameters:    Size  Location     Type
 24434 ;;  p               1    0[COMMON] PTR void 
 24435 ;;		 -> NULL(0), 
 24436 ;; Auto vars:     Size  Location     Type
 24437 ;;		None
 24438 ;; Return value:  Size  Location     Type
 24439 ;;                  1    wreg      enum E8198
 24440 ;; Registers used:
 24441 ;;		wreg
 24442 ;; Tracked objects:
 24443 ;;		On entry : 0/0
 24444 ;;		On exit  : 0/0
 24445 ;;		Unchanged: 0/0
 24446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24447 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24451 ;;Total ram usage:        1 bytes
 24452 ;; Hardware stack levels used:    1
 24453 ;; This function calls:
 24454 ;;		Nothing
 24455 ;; This function is called by:
 24456 ;; This function uses a non-reentrant model
 24457 ;;
 24458                           
 24459                           
 24460                           ;psect for function i1_returnStop
 24461  2335                     i1_returnStop:	
 24462  2335                     i1l7792:	
 24463                           ;incstack = 0
 24464                           ; Regs used in i1_returnStop: [wreg]
 24465                           
 24466                           
 24467                           ;i2c_master.c: 445: return i2c_stop;
 24468  2335  3001               	movlw	1
 24469  2336  0008               	return
 24470  2337                     __end_ofi1_returnStop:	
 24471                           
 24472                           	psect	text146
 24473  2348                     __ptext146:	
 24474 ;; *************** function i1_i2c1_driver_stop *****************
 24475 ;; Defined at:
 24476 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 24477 ;; Parameters:    Size  Location     Type
 24478 ;;		None
 24479 ;; Auto vars:     Size  Location     Type
 24480 ;;		None
 24481 ;; Return value:  Size  Location     Type
 24482 ;;                  1    wreg      void 
 24483 ;; Registers used:
 24484 ;;		None
 24485 ;; Tracked objects:
 24486 ;;		On entry : 0/0
 24487 ;;		On exit  : 0/0
 24488 ;;		Unchanged: 0/0
 24489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24494 ;;Total ram usage:        0 bytes
 24495 ;; Hardware stack levels used:    1
 24496 ;; This function calls:
 24497 ;;		Nothing
 24498 ;; This function is called by:
 24499 ;;		i1_do_I2C_SEND_STOP
 24500 ;; This function uses a non-reentrant model
 24501 ;;
 24502                           
 24503                           
 24504                           ;psect for function i1_i2c1_driver_stop
 24505  2348                     i1_i2c1_driver_stop:	
 24506                           
 24507                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 24508                           
 24509                           ;incstack = 0
 24510                           ; Regs used in i1_i2c1_driver_stop: []
 24511  2348  0024               	movlb	4	; select bank4
 24512  2349  1516               	bsf	22,2	;volatile
 24513  234A  0008               	return
 24514  234B                     __end_ofi1_i2c1_driver_stop:	
 24515                           
 24516                           	psect	text147
 24517  2345                     __ptext147:	
 24518 ;; *************** function i1_i2c1_driver_restart *****************
 24519 ;; Defined at:
 24520 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 24521 ;; Parameters:    Size  Location     Type
 24522 ;;		None
 24523 ;; Auto vars:     Size  Location     Type
 24524 ;;		None
 24525 ;; Return value:  Size  Location     Type
 24526 ;;                  1    wreg      void 
 24527 ;; Registers used:
 24528 ;;		None
 24529 ;; Tracked objects:
 24530 ;;		On entry : 0/0
 24531 ;;		On exit  : 0/0
 24532 ;;		Unchanged: 0/0
 24533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24538 ;;Total ram usage:        0 bytes
 24539 ;; Hardware stack levels used:    1
 24540 ;; This function calls:
 24541 ;;		Nothing
 24542 ;; This function is called by:
 24543 ;;		i1_do_I2C_SEND_RESTART_READ
 24544 ;;		i1_do_I2C_SEND_RESTART_WRITE
 24545 ;;		i1_do_I2C_SEND_RESTART
 24546 ;; This function uses a non-reentrant model
 24547 ;;
 24548                           
 24549                           
 24550                           ;psect for function i1_i2c1_driver_restart
 24551  2345                     i1_i2c1_driver_restart:	
 24552                           
 24553                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 24554                           
 24555                           ;incstack = 0
 24556                           ; Regs used in i1_i2c1_driver_restart: []
 24557  2345  0024               	movlb	4	; select bank4
 24558  2346  1496               	bsf	22,1	;volatile
 24559  2347  0008               	return
 24560  2348                     __end_ofi1_i2c1_driver_restart:	
 24561                           
 24562                           	psect	text148
 24563  2372                     __ptext148:	
 24564 ;; *************** function i1_i2c1_driver_sendACK *****************
 24565 ;; Defined at:
 24566 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 24567 ;; Parameters:    Size  Location     Type
 24568 ;;		None
 24569 ;; Auto vars:     Size  Location     Type
 24570 ;;		None
 24571 ;; Return value:  Size  Location     Type
 24572 ;;                  1    wreg      void 
 24573 ;; Registers used:
 24574 ;;		None
 24575 ;; Tracked objects:
 24576 ;;		On entry : 0/0
 24577 ;;		On exit  : 0/0
 24578 ;;		Unchanged: 0/0
 24579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24584 ;;Total ram usage:        0 bytes
 24585 ;; Hardware stack levels used:    1
 24586 ;; This function calls:
 24587 ;;		Nothing
 24588 ;; This function is called by:
 24589 ;;		i1_do_I2C_DO_ACK
 24590 ;;		i1_do_I2C_RX
 24591 ;; This function uses a non-reentrant model
 24592 ;;
 24593                           
 24594                           
 24595                           ;psect for function i1_i2c1_driver_sendACK
 24596  2372                     i1_i2c1_driver_sendACK:	
 24597                           
 24598                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 24599                           
 24600                           ;incstack = 0
 24601                           ; Regs used in i1_i2c1_driver_sendACK: []
 24602  2372  0024               	movlb	4	; select bank4
 24603  2373  1296               	bcf	22,5	;volatile
 24604                           
 24605                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 24606  2374  1616               	bsf	22,4	;volatile
 24607  2375  0008               	return
 24608  2376                     __end_ofi1_i2c1_driver_sendACK:	
 24609                           
 24610                           	psect	text149
 24611  2342                     __ptext149:	
 24612 ;; *************** function _i2c_busCollisionISR *****************
 24613 ;; Defined at:
 24614 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 24615 ;; Parameters:    Size  Location     Type
 24616 ;;		None
 24617 ;; Auto vars:     Size  Location     Type
 24618 ;;		None
 24619 ;; Return value:  Size  Location     Type
 24620 ;;                  1    wreg      void 
 24621 ;; Registers used:
 24622 ;;		status,2, status,0, pclath, cstack
 24623 ;; Tracked objects:
 24624 ;;		On entry : 0/0
 24625 ;;		On exit  : 0/0
 24626 ;;		Unchanged: 0/0
 24627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24632 ;;Total ram usage:        0 bytes
 24633 ;; Hardware stack levels used:    1
 24634 ;; Hardware stack levels required when called:    1
 24635 ;; This function calls:
 24636 ;;		_i2c1_driver_clearBusCollision
 24637 ;; This function is called by:
 24638 ;;		_i2c_open
 24639 ;;		_INTERRUPT_InterruptManager
 24640 ;; This function uses a non-reentrant model
 24641 ;;
 24642                           
 24643                           
 24644                           ;psect for function _i2c_busCollisionISR
 24645  2342                     _i2c_busCollisionISR:	
 24646                           
 24647                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 24648                           
 24649                           ;incstack = 0
 24650                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 24651  2342  31A3  233F         	fcall	_i2c1_driver_clearBusCollision
 24652  2344  0008               	return
 24653  2345                     __end_of_i2c_busCollisionISR:	
 24654                           
 24655                           	psect	text150
 24656  233F                     __ptext150:	
 24657 ;; *************** function _i2c1_driver_clearBusCollision *****************
 24658 ;; Defined at:
 24659 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 24660 ;; Parameters:    Size  Location     Type
 24661 ;;		None
 24662 ;; Auto vars:     Size  Location     Type
 24663 ;;		None
 24664 ;; Return value:  Size  Location     Type
 24665 ;;                  1    wreg      void 
 24666 ;; Registers used:
 24667 ;;		None
 24668 ;; Tracked objects:
 24669 ;;		On entry : 0/0
 24670 ;;		On exit  : 0/0
 24671 ;;		Unchanged: 0/0
 24672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24677 ;;Total ram usage:        0 bytes
 24678 ;; Hardware stack levels used:    1
 24679 ;; This function calls:
 24680 ;;		Nothing
 24681 ;; This function is called by:
 24682 ;;		_i2c_busCollisionISR
 24683 ;; This function uses a non-reentrant model
 24684 ;;
 24685                           
 24686                           
 24687                           ;psect for function _i2c1_driver_clearBusCollision
 24688  233F                     _i2c1_driver_clearBusCollision:	
 24689                           
 24690                           ;i2c1_driver.c: 255: PIR1bits.BCL1IF = 0;
 24691                           
 24692                           ;incstack = 0
 24693                           ; Regs used in _i2c1_driver_clearBusCollision: []
 24694  233F  0020               	movlb	0	; select bank0
 24695  2340  1111               	bcf	17,2	;volatile
 24696  2341  0008               	return
 24697  2342                     __end_of_i2c1_driver_clearBusCollision:	
 24698                           
 24699                           	psect	text151
 24700  2502                     __ptext151:	
 24701 ;; *************** function _TMR2_ISR *****************
 24702 ;; Defined at:
 24703 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 24704 ;; Parameters:    Size  Location     Type
 24705 ;;		None
 24706 ;; Auto vars:     Size  Location     Type
 24707 ;;		None
 24708 ;; Return value:  Size  Location     Type
 24709 ;;                  1    wreg      void 
 24710 ;; Registers used:
 24711 ;;		wreg, status,2, status,0, pclath, cstack
 24712 ;; Tracked objects:
 24713 ;;		On entry : 0/0
 24714 ;;		On exit  : 0/0
 24715 ;;		Unchanged: 0/0
 24716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24721 ;;Total ram usage:        0 bytes
 24722 ;; Hardware stack levels used:    1
 24723 ;; Hardware stack levels required when called:    2
 24724 ;; This function calls:
 24725 ;;		Absolute function
 24726 ;;		_TMR2_DefaultInterruptHandler
 24727 ;; This function is called by:
 24728 ;;		_INTERRUPT_InterruptManager
 24729 ;; This function uses a non-reentrant model
 24730 ;;
 24731                           
 24732                           
 24733                           ;psect for function _TMR2_ISR
 24734  2502                     _TMR2_ISR:	
 24735                           
 24736                           ;tmr2.c: 121: PIR1bits.TMR2IF = 0;
 24737                           
 24738                           ;incstack = 0
 24739                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 24740  2502  0020               	movlb	0	; select bank0
 24741  2503  1091               	bcf	17,1	;volatile
 24742                           
 24743                           ;tmr2.c: 123: if(TMR2_InterruptHandler)
 24744  2504  0022               	movlb	2	; select bank2
 24745  2505  0866               	movf	_TMR2_InterruptHandler^(0+256),w
 24746  2506  0467               	iorwf	(_TMR2_InterruptHandler+1)^(0+256),w
 24747  2507  1903               	btfsc	3,2
 24748  2508  0008               	return
 24749                           
 24750                           ;tmr2.c: 124: {
 24751                           ;tmr2.c: 125: TMR2_InterruptHandler();
 24752  2509  0867               	movf	(_TMR2_InterruptHandler+1)^(0+256),w
 24753  250A  008A               	movwf	10
 24754  250B  0866               	movf	_TMR2_InterruptHandler^(0+256),w
 24755  250C  000A               	callw
 24756  250D  31A5               	pagesel	$
 24757  250E  0008               	return
 24758  250F                     __end_of_TMR2_ISR:	
 24759                           
 24760                           	psect	text152
 24761  2452                     __ptext152:	
 24762 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 24763 ;; Defined at:
 24764 ;;		line 134 in file "mcc_generated_files/tmr2.c"
 24765 ;; Parameters:    Size  Location     Type
 24766 ;;		None
 24767 ;; Auto vars:     Size  Location     Type
 24768 ;;		None
 24769 ;; Return value:  Size  Location     Type
 24770 ;;                  1    wreg      void 
 24771 ;; Registers used:
 24772 ;;		wreg, status,2, status,0, pclath, cstack
 24773 ;; Tracked objects:
 24774 ;;		On entry : 0/0
 24775 ;;		On exit  : 0/0
 24776 ;;		Unchanged: 0/0
 24777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24782 ;;Total ram usage:        0 bytes
 24783 ;; Hardware stack levels used:    1
 24784 ;; Hardware stack levels required when called:    1
 24785 ;; This function calls:
 24786 ;;		_TMR2_StopTimer
 24787 ;;		_TMR2_WriteTimer
 24788 ;; This function is called by:
 24789 ;;		_TMR2_Initialize
 24790 ;;		_TMR2_ISR
 24791 ;; This function uses a non-reentrant model
 24792 ;;
 24793                           
 24794                           
 24795                           ;psect for function _TMR2_DefaultInterruptHandler
 24796  2452                     _TMR2_DefaultInterruptHandler:	
 24797                           
 24798                           ;incstack = 0
 24799                           ; Regs used in _TMR2_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 24800                           ;tmr2.c: 138: do { LATCbits.LATC1 = 1; } while(0);
 24801  2452  0022               	movlb	2	; select bank2
 24802  2453  148E               	bsf	14,1	;volatile
 24803                           
 24804                           ;tmr2.c: 141: TMR2_StopTimer();
 24805  2454  31A3  233C  31A4   	fcall	_TMR2_StopTimer
 24806                           
 24807                           ;tmr2.c: 142: TMR2_WriteTimer(0);
 24808  2457  3000               	movlw	0
 24809  2458  31A3  23AB         	fcall	_TMR2_WriteTimer
 24810  245A  0008               	return
 24811  245B                     __end_of_TMR2_DefaultInterruptHandler:	
 24812                           
 24813                           	psect	text153
 24814  23AB                     __ptext153:	
 24815 ;; *************** function _TMR2_WriteTimer *****************
 24816 ;; Defined at:
 24817 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 24818 ;; Parameters:    Size  Location     Type
 24819 ;;  timerVal        1    wreg     unsigned char 
 24820 ;; Auto vars:     Size  Location     Type
 24821 ;;  timerVal        1    0[COMMON] unsigned char 
 24822 ;; Return value:  Size  Location     Type
 24823 ;;                  1    wreg      void 
 24824 ;; Registers used:
 24825 ;;		wreg
 24826 ;; Tracked objects:
 24827 ;;		On entry : 0/0
 24828 ;;		On exit  : 0/0
 24829 ;;		Unchanged: 0/0
 24830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24834 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24835 ;;Total ram usage:        1 bytes
 24836 ;; Hardware stack levels used:    1
 24837 ;; This function calls:
 24838 ;;		Nothing
 24839 ;; This function is called by:
 24840 ;;		_TMR2_DefaultInterruptHandler
 24841 ;; This function uses a non-reentrant model
 24842 ;;
 24843                           
 24844                           
 24845                           ;psect for function _TMR2_WriteTimer
 24846  23AB                     _TMR2_WriteTimer:	
 24847                           
 24848                           ;incstack = 0
 24849                           ; Regs used in _TMR2_WriteTimer: [wreg]
 24850                           ;TMR2_WriteTimer@timerVal stored from wreg
 24851  23AB  00F0               	movwf	TMR2_WriteTimer@timerVal
 24852                           
 24853                           ;tmr2.c: 109: TMR2 = timerVal;
 24854  23AC  0870               	movf	TMR2_WriteTimer@timerVal,w
 24855  23AD  0020               	movlb	0	; select bank0
 24856  23AE  009D               	movwf	29	;volatile
 24857  23AF  0008               	return
 24858  23B0                     __end_of_TMR2_WriteTimer:	
 24859                           
 24860                           	psect	text154
 24861  233C                     __ptext154:	
 24862 ;; *************** function _TMR2_StopTimer *****************
 24863 ;; Defined at:
 24864 ;;		line 91 in file "mcc_generated_files/tmr2.c"
 24865 ;; Parameters:    Size  Location     Type
 24866 ;;		None
 24867 ;; Auto vars:     Size  Location     Type
 24868 ;;		None
 24869 ;; Return value:  Size  Location     Type
 24870 ;;                  1    wreg      void 
 24871 ;; Registers used:
 24872 ;;		None
 24873 ;; Tracked objects:
 24874 ;;		On entry : 0/0
 24875 ;;		On exit  : 0/0
 24876 ;;		Unchanged: 0/0
 24877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24882 ;;Total ram usage:        0 bytes
 24883 ;; Hardware stack levels used:    1
 24884 ;; This function calls:
 24885 ;;		Nothing
 24886 ;; This function is called by:
 24887 ;;		_TMR2_DefaultInterruptHandler
 24888 ;; This function uses a non-reentrant model
 24889 ;;
 24890                           
 24891                           
 24892                           ;psect for function _TMR2_StopTimer
 24893  233C                     _TMR2_StopTimer:	
 24894                           
 24895                           ;tmr2.c: 94: T2CONbits.TMR2ON = 0;
 24896                           
 24897                           ;incstack = 0
 24898                           ; Regs used in _TMR2_StopTimer: []
 24899  233C  0020               	movlb	0	; select bank0
 24900  233D  111F               	bcf	31,2	;volatile
 24901  233E  0008               	return
 24902  233F                     __end_of_TMR2_StopTimer:	
 24903                           
 24904                           	psect	text155
 24905  24F5                     __ptext155:	
 24906 ;; *************** function _TMR0_ISR *****************
 24907 ;; Defined at:
 24908 ;;		line 119 in file "mcc_generated_files/tmr0.c"
 24909 ;; Parameters:    Size  Location     Type
 24910 ;;		None
 24911 ;; Auto vars:     Size  Location     Type
 24912 ;;		None
 24913 ;; Return value:  Size  Location     Type
 24914 ;;                  1    wreg      void 
 24915 ;; Registers used:
 24916 ;;		wreg, status,2, status,0, pclath, cstack
 24917 ;; Tracked objects:
 24918 ;;		On entry : 0/0
 24919 ;;		On exit  : 0/0
 24920 ;;		Unchanged: 0/0
 24921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24926 ;;Total ram usage:        0 bytes
 24927 ;; Hardware stack levels used:    1
 24928 ;; Hardware stack levels required when called:    4
 24929 ;; This function calls:
 24930 ;;		Absolute function
 24931 ;;		_TMR0_DefaultInterruptHandler
 24932 ;; This function is called by:
 24933 ;;		_INTERRUPT_InterruptManager
 24934 ;; This function uses a non-reentrant model
 24935 ;;
 24936                           
 24937                           
 24938                           ;psect for function _TMR0_ISR
 24939  24F5                     _TMR0_ISR:	
 24940                           
 24941                           ;tmr0.c: 122: PIR0bits.TMR0IF = 0;
 24942                           
 24943                           ;incstack = 0
 24944 ;; hardware stack exceeded
 24945                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 24946  24F5  0020               	movlb	0	; select bank0
 24947  24F6  1290               	bcf	16,5	;volatile
 24948                           
 24949                           ;tmr0.c: 123: if(TMR0_InterruptHandler)
 24950  24F7  0022               	movlb	2	; select bank2
 24951  24F8  0868               	movf	_TMR0_InterruptHandler^(0+256),w
 24952  24F9  0469               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 24953  24FA  1903               	btfsc	3,2
 24954  24FB  0008               	return
 24955                           
 24956                           ;tmr0.c: 124: {
 24957                           ;tmr0.c: 125: TMR0_InterruptHandler();
 24958  24FC  0869               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 24959  24FD  008A               	movwf	10
 24960  24FE  0868               	movf	_TMR0_InterruptHandler^(0+256),w
 24961  24FF  000A               	callw
 24962  2500  31A4               	pagesel	$
 24963  2501  0008               	return
 24964  2502                     __end_of_TMR0_ISR:	
 24965                           
 24966                           	psect	text156
 24967  1A6F                     __ptext156:	
 24968 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 24969 ;; Defined at:
 24970 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 24971 ;; Parameters:    Size  Location     Type
 24972 ;;		None
 24973 ;; Auto vars:     Size  Location     Type
 24974 ;;		None
 24975 ;; Return value:  Size  Location     Type
 24976 ;;                  1    wreg      void 
 24977 ;; Registers used:
 24978 ;;		wreg, status,2, status,0, pclath, cstack
 24979 ;; Tracked objects:
 24980 ;;		On entry : 0/0
 24981 ;;		On exit  : 0/0
 24982 ;;		Unchanged: 0/0
 24983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24988 ;;Total ram usage:        0 bytes
 24989 ;; Hardware stack levels used:    1
 24990 ;; Hardware stack levels required when called:    3
 24991 ;; This function calls:
 24992 ;;		_TMR0_StopTimer
 24993 ;;		_TMR0_Write8bitTimer
 24994 ;;		i1_LEDsOn
 24995 ;; This function is called by:
 24996 ;;		_TMR0_Initialize
 24997 ;;		_TMR0_ISR
 24998 ;; This function uses a non-reentrant model
 24999 ;;
 25000                           
 25001                           
 25002                           ;psect for function _TMR0_DefaultInterruptHandler
 25003  1A6F                     _TMR0_DefaultInterruptHandler:	
 25004                           
 25005                           ;tmr0.c: 141: LEDsOn(second_top, 1);
 25006                           
 25007                           ;incstack = 0
 25008 ;; hardware stack exceeded
 25009                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 25010  1A6F  0022               	movlb	2	; select bank2
 25011  1A70  085D               	movf	(_second_top+3)^(0+256),w
 25012  1A71  0020               	movlb	0	; select bank0
 25013  1A72  00AA               	movwf	i1LEDsOn@LEDpins+3
 25014  1A73  0022               	movlb	2	; select bank2
 25015  1A74  085C               	movf	(_second_top+2)^(0+256),w
 25016  1A75  0020               	movlb	0	; select bank0
 25017  1A76  00A9               	movwf	i1LEDsOn@LEDpins+2
 25018  1A77  0022               	movlb	2	; select bank2
 25019  1A78  085B               	movf	(_second_top+1)^(0+256),w
 25020  1A79  0020               	movlb	0	; select bank0
 25021  1A7A  00A8               	movwf	i1LEDsOn@LEDpins+1
 25022  1A7B  0022               	movlb	2	; select bank2
 25023  1A7C  085A               	movf	_second_top^(0+256),w
 25024  1A7D  0020               	movlb	0	; select bank0
 25025  1A7E  00A7               	movwf	i1LEDsOn@LEDpins
 25026  1A7F  3001               	movlw	1
 25027  1A80  00AB               	movwf	i1LEDsOn@topOrBottom
 25028  1A81  3000               	movlw	0
 25029  1A82  00AC               	movwf	i1LEDsOn@topOrBottom+1
 25030  1A83  31A7  272E  319A   	fcall	i1_LEDsOn
 25031                           
 25032                           ;tmr0.c: 142: LEDsOn(second_bottom,2);
 25033  1A86  0022               	movlb	2	; select bank2
 25034  1A87  0851               	movf	(_second_bottom+3)^(0+256),w
 25035  1A88  0020               	movlb	0	; select bank0
 25036  1A89  00AA               	movwf	i1LEDsOn@LEDpins+3
 25037  1A8A  0022               	movlb	2	; select bank2
 25038  1A8B  0850               	movf	(_second_bottom+2)^(0+256),w
 25039  1A8C  0020               	movlb	0	; select bank0
 25040  1A8D  00A9               	movwf	i1LEDsOn@LEDpins+2
 25041  1A8E  0022               	movlb	2	; select bank2
 25042  1A8F  084F               	movf	(_second_bottom+1)^(0+256),w
 25043  1A90  0020               	movlb	0	; select bank0
 25044  1A91  00A8               	movwf	i1LEDsOn@LEDpins+1
 25045  1A92  0022               	movlb	2	; select bank2
 25046  1A93  084E               	movf	_second_bottom^(0+256),w
 25047  1A94  0020               	movlb	0	; select bank0
 25048  1A95  00A7               	movwf	i1LEDsOn@LEDpins
 25049  1A96  3002               	movlw	2
 25050  1A97  00AB               	movwf	i1LEDsOn@topOrBottom
 25051  1A98  3000               	movlw	0
 25052  1A99  00AC               	movwf	i1LEDsOn@topOrBottom+1
 25053  1A9A  31A7  272E  319A   	fcall	i1_LEDsOn
 25054                           
 25055                           ;tmr0.c: 144: do { LATCbits.LATC1 = 0; } while(0);
 25056  1A9D  0022               	movlb	2	; select bank2
 25057  1A9E  108E               	bcf	14,1	;volatile
 25058                           
 25059                           ;tmr0.c: 145: TMR0_StopTimer();
 25060  1A9F  31A3  2339  319A   	fcall	_TMR0_StopTimer
 25061                           
 25062                           ;tmr0.c: 146: TMR0_Write8bitTimer(0);
 25063  1AA2  3000               	movlw	0
 25064  1AA3  31A3  23A6         	fcall	_TMR0_Write8bitTimer
 25065  1AA5  0008               	return
 25066  1AA6                     __end_of_TMR0_DefaultInterruptHandler:	
 25067                           
 25068                           	psect	text157
 25069  272E                     __ptext157:	
 25070 ;; *************** function i1_LEDsOn *****************
 25071 ;; Defined at:
 25072 ;;		line 6 in file "LEDcomm.c"
 25073 ;; Parameters:    Size  Location     Type
 25074 ;;  LEDpins         4    7[BANK0 ] unsigned long 
 25075 ;;  topOrBottom     2   11[BANK0 ] int 
 25076 ;; Auto vars:     Size  Location     Type
 25077 ;;		None
 25078 ;; Return value:  Size  Location     Type
 25079 ;;                  1    wreg      void 
 25080 ;; Registers used:
 25081 ;;		wreg, status,2, status,0, pclath, cstack
 25082 ;; Tracked objects:
 25083 ;;		On entry : 0/0
 25084 ;;		On exit  : 0/0
 25085 ;;		Unchanged: 0/0
 25086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25087 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25089 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25090 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25091 ;;Total ram usage:       10 bytes
 25092 ;; Hardware stack levels used:    1
 25093 ;; Hardware stack levels required when called:    2
 25094 ;; This function calls:
 25095 ;;		i1_send_2length_2bytes_IK
 25096 ;; This function is called by:
 25097 ;;		_TMR0_DefaultInterruptHandler
 25098 ;; This function uses a non-reentrant model
 25099 ;;
 25100                           
 25101                           
 25102                           ;psect for function i1_LEDsOn
 25103  272E                     i1_LEDsOn:	
 25104                           
 25105                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 25106                           
 25107                           ;incstack = 0
 25108 ;; hardware stack exceeded
 25109                           ; Regs used in i1_LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 25110  272E  0020               	movlb	0	; select bank0
 25111  272F  0827               	movf	i1LEDsOn@LEDpins,w
 25112  2730  00AD               	movwf	??i1_LEDsOn
 25113  2731  0828               	movf	i1LEDsOn@LEDpins+1,w
 25114  2732  00AE               	movwf	??i1_LEDsOn+1
 25115  2733  0829               	movf	i1LEDsOn@LEDpins+2,w
 25116  2734  00AF               	movwf	??i1_LEDsOn+2
 25117  2735  082A               	movf	i1LEDsOn@LEDpins+3,w
 25118  2736  00B0               	movwf	??i1_LEDsOn+3
 25119  2737  3010               	movlw	16
 25120  2738                     u508_25:	
 25121  2738  36B0               	lsrf	??i1_LEDsOn+3,f
 25122  2739  0CAF               	rrf	??i1_LEDsOn+2,f
 25123  273A  0CAE               	rrf	??i1_LEDsOn+1,f
 25124  273B  0CAD               	rrf	??i1_LEDsOn,f
 25125  273C  0B89               	decfsz	9,f
 25126  273D  2F38               	goto	u508_25
 25127  273E  082E               	movf	??i1_LEDsOn+1,w
 25128  273F  00A1               	movwf	i1send_2length_2bytes_IK@data1+1
 25129  2740  082D               	movf	??i1_LEDsOn,w
 25130  2741  00A0               	movwf	i1send_2length_2bytes_IK@data1
 25131  2742  0828               	movf	i1LEDsOn@LEDpins+1,w
 25132  2743  00A3               	movwf	i1send_2length_2bytes_IK@data2+1
 25133  2744  0827               	movf	i1LEDsOn@LEDpins,w
 25134  2745  00A2               	movwf	i1send_2length_2bytes_IK@data2
 25135  2746  01A4               	clrf	i1send_2length_2bytes_IK@latch_start
 25136  2747  0AA4               	incf	i1send_2length_2bytes_IK@latch_start,f
 25137  2748  082C               	movf	i1LEDsOn@topOrBottom+1,w
 25138  2749  00A6               	movwf	i1send_2length_2bytes_IK@topOrBottom+1
 25139  274A  082B               	movf	i1LEDsOn@topOrBottom,w
 25140  274B  00A5               	movwf	i1send_2length_2bytes_IK@topOrBottom
 25141  274C  31A5  25D8         	fcall	i1_send_2length_2bytes_IK
 25142  274E  0008               	return
 25143  274F                     __end_ofi1_LEDsOn:	
 25144                           
 25145                           	psect	text158
 25146  25D8                     __ptext158:	
 25147 ;; *************** function i1_send_2length_2bytes_IK *****************
 25148 ;; Defined at:
 25149 ;;		line 70 in file "LEDcomm.c"
 25150 ;; Parameters:    Size  Location     Type
 25151 ;;  data1           2    0[BANK0 ] unsigned int 
 25152 ;;  data2           2    2[BANK0 ] unsigned int 
 25153 ;;  latch_start     1    4[BANK0 ] unsigned char 
 25154 ;;  topOrBottom     2    5[BANK0 ] int 
 25155 ;; Auto vars:     Size  Location     Type
 25156 ;;		None
 25157 ;; Return value:  Size  Location     Type
 25158 ;;                  1    wreg      void 
 25159 ;; Registers used:
 25160 ;;		wreg, status,2, status,0, pclath, cstack
 25161 ;; Tracked objects:
 25162 ;;		On entry : 0/0
 25163 ;;		On exit  : 0/0
 25164 ;;		Unchanged: 0/0
 25165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25166 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25169 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25170 ;;Total ram usage:        8 bytes
 25171 ;; Hardware stack levels used:    1
 25172 ;; Hardware stack levels required when called:    1
 25173 ;; This function calls:
 25174 ;;		i1_send_2bytes_latchless_IK
 25175 ;;		i1_send_last_2bytes_IK
 25176 ;; This function is called by:
 25177 ;;		i1_LEDsOn
 25178 ;; This function uses a non-reentrant model
 25179 ;;
 25180                           
 25181                           
 25182                           ;psect for function i1_send_2length_2bytes_IK
 25183  25D8                     i1_send_2length_2bytes_IK:	
 25184                           
 25185                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 25186                           
 25187                           ;incstack = 0
 25188 ;; hardware stack exceeded
 25189                           ; Regs used in i1_send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 25190  25D8  0020               	movlb	0	; select bank0
 25191  25D9  0821               	movf	i1send_2length_2bytes_IK@data1+1,w
 25192  25DA  00F1               	movwf	i1send_2bytes_latchless_IK@data+1
 25193  25DB  0820               	movf	i1send_2length_2bytes_IK@data1,w
 25194  25DC  00F0               	movwf	i1send_2bytes_latchless_IK@data
 25195  25DD  3198  2076  31A5   	fcall	i1_send_2bytes_latchless_IK
 25196                           
 25197                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 25198  25E0  0020               	movlb	0	; select bank0
 25199  25E1  0823               	movf	i1send_2length_2bytes_IK@data2+1,w
 25200  25E2  00F1               	movwf	i1send_last_2bytes_IK@data+1
 25201  25E3  0822               	movf	i1send_2length_2bytes_IK@data2,w
 25202  25E4  00F0               	movwf	i1send_last_2bytes_IK@data
 25203  25E5  0824               	movf	i1send_2length_2bytes_IK@latch_start,w
 25204  25E6  00FB               	movwf	??i1_send_2length_2bytes_IK
 25205  25E7  087B               	movf	??i1_send_2length_2bytes_IK,w
 25206  25E8  00F2               	movwf	i1send_last_2bytes_IK@latch_start
 25207  25E9  0826               	movf	i1send_2length_2bytes_IK@topOrBottom+1,w
 25208  25EA  00F4               	movwf	i1send_last_2bytes_IK@topOrBottom+1
 25209  25EB  0825               	movf	i1send_2length_2bytes_IK@topOrBottom,w
 25210  25EC  00F3               	movwf	i1send_last_2bytes_IK@topOrBottom
 25211  25ED  319C  2436         	fcall	i1_send_last_2bytes_IK
 25212  25EF  0008               	return
 25213  25F0                     __end_ofi1_send_2length_2bytes_IK:	
 25214                           
 25215                           	psect	text159
 25216  1C36                     __ptext159:	
 25217 ;; *************** function i1_send_last_2bytes_IK *****************
 25218 ;; Defined at:
 25219 ;;		line 19 in file "LEDcomm.c"
 25220 ;; Parameters:    Size  Location     Type
 25221 ;;  data            2    0[COMMON] unsigned int 
 25222 ;;  latch_start     1    2[COMMON] unsigned char 
 25223 ;;  topOrBottom     2    3[COMMON] int 
 25224 ;; Auto vars:     Size  Location     Type
 25225 ;;  send_last_2b    2    9[COMMON] int 
 25226 ;; Return value:  Size  Location     Type
 25227 ;;                  1    wreg      void 
 25228 ;; Registers used:
 25229 ;;		wreg, status,2, status,0
 25230 ;; Tracked objects:
 25231 ;;		On entry : 0/0
 25232 ;;		On exit  : 0/0
 25233 ;;		Unchanged: 0/0
 25234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25235 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25237 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25238 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25239 ;;Total ram usage:       11 bytes
 25240 ;; Hardware stack levels used:    1
 25241 ;; This function calls:
 25242 ;;		Nothing
 25243 ;; This function is called by:
 25244 ;;		i1_send_2length_2bytes_IK
 25245 ;; This function uses a non-reentrant model
 25246 ;;
 25247                           
 25248                           
 25249                           ;psect for function i1_send_last_2bytes_IK
 25250  1C36                     i1_send_last_2bytes_IK:	
 25251                           
 25252                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 25253                           
 25254                           ;incstack = 0
 25255 ;; hardware stack exceeded
 25256                           ; Regs used in i1_send_last_2bytes_IK: [wreg+status,2+status,0]
 25257  1C36  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25258  1C37  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25259  1C38  1D03               	btfss	3,2
 25260  1C39  2C3D               	goto	i1l210
 25261  1C3A  0022               	movlb	2	; select bank2
 25262  1C3B  120D               	bcf	13,4	;volatile
 25263  1C3C  2C3F               	goto	i1l5130
 25264  1C3D                     i1l210:	
 25265  1C3D  0022               	movlb	2	; select bank2
 25266  1C3E  100E               	bcf	14,0	;volatile
 25267  1C3F                     i1l5130:	
 25268                           
 25269                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 25270  1C3F  300F               	movlw	15
 25271  1C40  00F9               	movwf	i1send_last_2bytes_IK@j
 25272  1C41  3000               	movlw	0
 25273  1C42  00FA               	movwf	i1send_last_2bytes_IK@j+1
 25274  1C43  1BFA               	btfsc	i1send_last_2bytes_IK@j+1,7
 25275  1C44  2C76               	goto	i1l231
 25276  1C45                     i1l214:	
 25277                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 25278                           
 25279  1C45  110C               	bcf	12,2	;volatile
 25280                           
 25281                           ;LEDcomm.c: 28: if (data & 1 << j){
 25282  1C46  3001               	movlw	1
 25283  1C47  00F5               	movwf	??i1_send_last_2bytes_IK
 25284  1C48  3000               	movlw	0
 25285  1C49  00F6               	movwf	??i1_send_last_2bytes_IK+1
 25286  1C4A  0A79               	incf	i1send_last_2bytes_IK@j,w
 25287  1C4B  2C4E               	goto	u388_24
 25288  1C4C                     u388_25:	
 25289  1C4C  35F5               	lslf	??i1_send_last_2bytes_IK,f
 25290  1C4D  0DF6               	rlf	??i1_send_last_2bytes_IK+1,f
 25291  1C4E                     u388_24:	
 25292  1C4E  0B89               	decfsz	9,f
 25293  1C4F  2C4C               	goto	u388_25
 25294  1C50  0870               	movf	i1send_last_2bytes_IK@data,w
 25295  1C51  0575               	andwf	??i1_send_last_2bytes_IK,w
 25296  1C52  00F7               	movwf	??i1_send_last_2bytes_IK+2
 25297  1C53  0871               	movf	i1send_last_2bytes_IK@data+1,w
 25298  1C54  0576               	andwf	??i1_send_last_2bytes_IK+1,w
 25299  1C55  00F8               	movwf	??i1_send_last_2bytes_IK+3
 25300  1C56  0877               	movf	??i1_send_last_2bytes_IK+2,w
 25301  1C57  0478               	iorwf	??i1_send_last_2bytes_IK+3,w
 25302  1C58  1903               	btfsc	3,2
 25303  1C59  2C5C               	goto	i1l220
 25304                           
 25305                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 25306  1C5A  150E               	bsf	14,2	;volatile
 25307                           
 25308                           ;LEDcomm.c: 30: }
 25309  1C5B  2C5D               	goto	i1l5138
 25310  1C5C                     i1l220:	
 25311                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 25312                           
 25313  1C5C  110E               	bcf	14,2	;volatile
 25314  1C5D                     i1l5138:	
 25315                           
 25316                           ;LEDcomm.c: 33: if( j == latch_start) {
 25317  1C5D  0872               	movf	i1send_last_2bytes_IK@latch_start,w
 25318  1C5E  00F5               	movwf	??i1_send_last_2bytes_IK
 25319  1C5F  01F6               	clrf	??i1_send_last_2bytes_IK+1
 25320  1C60  087A               	movf	i1send_last_2bytes_IK@j+1,w
 25321  1C61  0676               	xorwf	??i1_send_last_2bytes_IK+1,w
 25322  1C62  1D03               	skipz
 25323  1C63  2C66               	goto	u390_25
 25324  1C64  0879               	movf	i1send_last_2bytes_IK@j,w
 25325  1C65  0675               	xorwf	??i1_send_last_2bytes_IK,w
 25326  1C66                     u390_25:	
 25327  1C66  1D03               	skipz
 25328  1C67  2C6F               	goto	i1l229
 25329                           
 25330                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 25331  1C68  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25332  1C69  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25333  1C6A  1D03               	btfss	3,2
 25334  1C6B  2C6E               	goto	i1l227
 25335  1C6C  160D               	bsf	13,4	;volatile
 25336  1C6D  2C6F               	goto	i1l229
 25337  1C6E                     i1l227:	
 25338  1C6E  140E               	bsf	14,0	;volatile
 25339  1C6F                     i1l229:	
 25340                           ;LEDcomm.c: 37: }
 25341                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 25342                           
 25343  1C6F  150C               	bsf	12,2	;volatile
 25344  1C70  30FF               	movlw	255
 25345  1C71  07F9               	addwf	i1send_last_2bytes_IK@j,f
 25346  1C72  30FF               	movlw	255
 25347  1C73  3DFA               	addwfc	i1send_last_2bytes_IK@j+1,f
 25348  1C74  1FFA               	btfss	i1send_last_2bytes_IK@j+1,7
 25349  1C75  2C45               	goto	i1l214
 25350  1C76                     i1l231:	
 25351                           ;LEDcomm.c: 41: }
 25352                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 25353                           
 25354  1C76  110C               	bcf	12,2	;volatile
 25355                           
 25356                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 25357  1C77  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25358  1C78  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25359  1C79  1D03               	btfss	3,2
 25360  1C7A  2C7D               	goto	i1l237
 25361  1C7B  120D               	bcf	13,4	;volatile
 25362  1C7C  0008               	return
 25363  1C7D                     i1l237:	
 25364  1C7D  100E               	bcf	14,0	;volatile
 25365  1C7E  0008               	return
 25366  1C7F                     __end_ofi1_send_last_2bytes_IK:	
 25367                           
 25368                           	psect	text160
 25369  1876                     __ptext160:	
 25370 ;; *************** function i1_send_2bytes_latchless_IK *****************
 25371 ;; Defined at:
 25372 ;;		line 49 in file "LEDcomm.c"
 25373 ;; Parameters:    Size  Location     Type
 25374 ;;  data            2    0[COMMON] unsigned int 
 25375 ;; Auto vars:     Size  Location     Type
 25376 ;;  send_2bytes_    2    6[COMMON] int 
 25377 ;; Return value:  Size  Location     Type
 25378 ;;                  1    wreg      void 
 25379 ;; Registers used:
 25380 ;;		wreg, status,2, status,0
 25381 ;; Tracked objects:
 25382 ;;		On entry : 0/0
 25383 ;;		On exit  : 0/0
 25384 ;;		Unchanged: 0/0
 25385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25388 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25389 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25390 ;;Total ram usage:        8 bytes
 25391 ;; Hardware stack levels used:    1
 25392 ;; This function calls:
 25393 ;;		Nothing
 25394 ;; This function is called by:
 25395 ;;		i1_send_2length_2bytes_IK
 25396 ;; This function uses a non-reentrant model
 25397 ;;
 25398                           
 25399                           
 25400                           ;psect for function i1_send_2bytes_latchless_IK
 25401  1876                     i1_send_2bytes_latchless_IK:	
 25402                           
 25403                           ;incstack = 0
 25404 ;; hardware stack exceeded
 25405                           ; Regs used in i1_send_2bytes_latchless_IK: [wreg+status,2+status,0]
 25406                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 25407  1876  0022               	movlb	2	; select bank2
 25408  1877  120D               	bcf	13,4	;volatile
 25409                           
 25410                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 25411  1878  300F               	movlw	15
 25412  1879  00F6               	movwf	i1send_2bytes_latchless_IK@j
 25413  187A  3000               	movlw	0
 25414  187B  00F7               	movwf	i1send_2bytes_latchless_IK@j+1
 25415  187C  1BF7               	btfsc	i1send_2bytes_latchless_IK@j+1,7
 25416  187D  289D               	goto	i1l256
 25417  187E                     i1l246:	
 25418                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 25419                           
 25420  187E  110C               	bcf	12,2	;volatile
 25421                           
 25422                           ;LEDcomm.c: 56: if (data & 1 << j){
 25423  187F  3001               	movlw	1
 25424  1880  00F2               	movwf	??i1_send_2bytes_latchless_IK
 25425  1881  3000               	movlw	0
 25426  1882  00F3               	movwf	??i1_send_2bytes_latchless_IK+1
 25427  1883  0A76               	incf	i1send_2bytes_latchless_IK@j,w
 25428  1884  2887               	goto	u395_24
 25429  1885                     u395_25:	
 25430  1885  35F2               	lslf	??i1_send_2bytes_latchless_IK,f
 25431  1886  0DF3               	rlf	??i1_send_2bytes_latchless_IK+1,f
 25432  1887                     u395_24:	
 25433  1887  0B89               	decfsz	9,f
 25434  1888  2885               	goto	u395_25
 25435  1889  0870               	movf	i1send_2bytes_latchless_IK@data,w
 25436  188A  0572               	andwf	??i1_send_2bytes_latchless_IK,w
 25437  188B  00F4               	movwf	??i1_send_2bytes_latchless_IK+2
 25438  188C  0871               	movf	i1send_2bytes_latchless_IK@data+1,w
 25439  188D  0573               	andwf	??i1_send_2bytes_latchless_IK+1,w
 25440  188E  00F5               	movwf	??i1_send_2bytes_latchless_IK+3
 25441  188F  0874               	movf	??i1_send_2bytes_latchless_IK+2,w
 25442  1890  0475               	iorwf	??i1_send_2bytes_latchless_IK+3,w
 25443  1891  1903               	btfsc	3,2
 25444  1892  2895               	goto	i1l252
 25445                           
 25446                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 25447  1893  150E               	bsf	14,2	;volatile
 25448                           
 25449                           ;LEDcomm.c: 58: }
 25450  1894  2896               	goto	i1l254
 25451  1895                     i1l252:	
 25452                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 25453                           
 25454  1895  110E               	bcf	14,2	;volatile
 25455  1896                     i1l254:	
 25456                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 25457                           
 25458  1896  150C               	bsf	12,2	;volatile
 25459  1897  30FF               	movlw	255
 25460  1898  07F6               	addwf	i1send_2bytes_latchless_IK@j,f
 25461  1899  30FF               	movlw	255
 25462  189A  3DF7               	addwfc	i1send_2bytes_latchless_IK@j+1,f
 25463  189B  1FF7               	btfss	i1send_2bytes_latchless_IK@j+1,7
 25464  189C  287E               	goto	i1l246
 25465  189D                     i1l256:	
 25466                           ;LEDcomm.c: 64: }
 25467                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 25468                           
 25469  189D  110C               	bcf	12,2	;volatile
 25470  189E  0008               	return
 25471  189F                     __end_ofi1_send_2bytes_latchless_IK:	
 25472                           
 25473                           	psect	text161
 25474  23A6                     __ptext161:	
 25475 ;; *************** function _TMR0_Write8bitTimer *****************
 25476 ;; Defined at:
 25477 ;;		line 107 in file "mcc_generated_files/tmr0.c"
 25478 ;; Parameters:    Size  Location     Type
 25479 ;;  timerVal        1    wreg     unsigned char 
 25480 ;; Auto vars:     Size  Location     Type
 25481 ;;  timerVal        1    0[COMMON] unsigned char 
 25482 ;; Return value:  Size  Location     Type
 25483 ;;                  1    wreg      void 
 25484 ;; Registers used:
 25485 ;;		wreg
 25486 ;; Tracked objects:
 25487 ;;		On entry : 0/0
 25488 ;;		On exit  : 0/0
 25489 ;;		Unchanged: 0/0
 25490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25495 ;;Total ram usage:        1 bytes
 25496 ;; Hardware stack levels used:    1
 25497 ;; This function calls:
 25498 ;;		Nothing
 25499 ;; This function is called by:
 25500 ;;		_TMR0_DefaultInterruptHandler
 25501 ;; This function uses a non-reentrant model
 25502 ;;
 25503                           
 25504                           
 25505                           ;psect for function _TMR0_Write8bitTimer
 25506  23A6                     _TMR0_Write8bitTimer:	
 25507                           
 25508                           ;incstack = 0
 25509                           ; Regs used in _TMR0_Write8bitTimer: [wreg]
 25510                           ;TMR0_Write8bitTimer@timerVal stored from wreg
 25511  23A6  00F0               	movwf	TMR0_Write8bitTimer@timerVal
 25512                           
 25513                           ;tmr0.c: 110: TMR0L = timerVal;
 25514  23A7  0870               	movf	TMR0_Write8bitTimer@timerVal,w
 25515  23A8  0020               	movlb	0	; select bank0
 25516  23A9  0095               	movwf	21	;volatile
 25517  23AA  0008               	return
 25518  23AB                     __end_of_TMR0_Write8bitTimer:	
 25519                           
 25520                           	psect	text162
 25521  2339                     __ptext162:	
 25522 ;; *************** function _TMR0_StopTimer *****************
 25523 ;; Defined at:
 25524 ;;		line 91 in file "mcc_generated_files/tmr0.c"
 25525 ;; Parameters:    Size  Location     Type
 25526 ;;		None
 25527 ;; Auto vars:     Size  Location     Type
 25528 ;;		None
 25529 ;; Return value:  Size  Location     Type
 25530 ;;                  1    wreg      void 
 25531 ;; Registers used:
 25532 ;;		None
 25533 ;; Tracked objects:
 25534 ;;		On entry : 0/0
 25535 ;;		On exit  : 0/0
 25536 ;;		Unchanged: 0/0
 25537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25542 ;;Total ram usage:        0 bytes
 25543 ;; Hardware stack levels used:    1
 25544 ;; This function calls:
 25545 ;;		Nothing
 25546 ;; This function is called by:
 25547 ;;		_TMR0_DefaultInterruptHandler
 25548 ;; This function uses a non-reentrant model
 25549 ;;
 25550                           
 25551                           
 25552                           ;psect for function _TMR0_StopTimer
 25553  2339                     _TMR0_StopTimer:	
 25554                           
 25555                           ;tmr0.c: 94: T0CON0bits.T0EN = 0;
 25556                           
 25557                           ;incstack = 0
 25558                           ; Regs used in _TMR0_StopTimer: []
 25559  2339  0020               	movlb	0	; select bank0
 25560  233A  1397               	bcf	23,7	;volatile
 25561  233B  0008               	return
 25562  233C                     __end_of_TMR0_StopTimer:	
 25563                           
 25564                           	psect	text163
 25565  2674                     __ptext163:	
 25566 ;; *************** function _EUSART_Transmit_ISR *****************
 25567 ;; Defined at:
 25568 ;;		line 161 in file "mcc_generated_files/eusart.c"
 25569 ;; Parameters:    Size  Location     Type
 25570 ;;		None
 25571 ;; Auto vars:     Size  Location     Type
 25572 ;;		None
 25573 ;; Return value:  Size  Location     Type
 25574 ;;                  1    wreg      void 
 25575 ;; Registers used:
 25576 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25577 ;; Tracked objects:
 25578 ;;		On entry : 0/0
 25579 ;;		On exit  : 0/0
 25580 ;;		Unchanged: 0/0
 25581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25586 ;;Total ram usage:        1 bytes
 25587 ;; Hardware stack levels used:    1
 25588 ;; This function calls:
 25589 ;;		Nothing
 25590 ;; This function is called by:
 25591 ;;		_INTERRUPT_InterruptManager
 25592 ;; This function uses a non-reentrant model
 25593 ;;
 25594                           
 25595                           
 25596                           ;psect for function _EUSART_Transmit_ISR
 25597  2674                     _EUSART_Transmit_ISR:	
 25598                           
 25599                           ;eusart.c: 165: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 25600                           
 25601                           ;incstack = 0
 25602                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 25603  2674  3008               	movlw	8
 25604  2675  0020               	movlb	0	; select bank0
 25605  2676  025E               	subwf	_eusartTxBufferRemaining,w	;volatile
 25606  2677  1803               	skipnc
 25607  2678  2E8F               	goto	i1l427
 25608                           
 25609                           ;eusart.c: 166: {
 25610                           ;eusart.c: 167: TX1REG = eusartTxBuffer[eusartTxTail++];
 25611  2679  0859               	movf	_eusartTxTail,w
 25612  267A  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 25613  267B  0086               	movwf	6
 25614  267C  3001               	movlw	1	; select bank3/4
 25615  267D  0087               	movwf	7
 25616  267E  0801               	movf	1,w
 25617  267F  0023               	movlb	3	; select bank3
 25618  2680  009A               	movwf	26	;volatile
 25619  2681  3001               	movlw	1
 25620  2682  00F0               	movwf	??_EUSART_Transmit_ISR
 25621  2683  0870               	movf	??_EUSART_Transmit_ISR,w
 25622  2684  0020               	movlb	0	; select bank0
 25623  2685  07D9               	addwf	_eusartTxTail,f	;volatile
 25624                           
 25625                           ;eusart.c: 168: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 25626  2686  3008               	movlw	8
 25627  2687  0259               	subwf	_eusartTxTail,w	;volatile
 25628  2688  1803               	btfsc	3,0
 25629                           
 25630                           ;eusart.c: 169: {
 25631                           ;eusart.c: 170: eusartTxTail = 0;
 25632  2689  01D9               	clrf	_eusartTxTail	;volatile
 25633                           
 25634                           ;eusart.c: 171: }
 25635                           ;eusart.c: 172: eusartTxBufferRemaining++;
 25636  268A  3001               	movlw	1
 25637  268B  00F0               	movwf	??_EUSART_Transmit_ISR
 25638  268C  0870               	movf	??_EUSART_Transmit_ISR,w
 25639  268D  07DE               	addwf	_eusartTxBufferRemaining,f	;volatile
 25640                           
 25641                           ;eusart.c: 173: }
 25642  268E  0008               	return
 25643  268F                     i1l427:	
 25644                           
 25645                           ;eusart.c: 174: else
 25646                           ;eusart.c: 175: {
 25647                           ;eusart.c: 176: PIE1bits.TXIE = 0;
 25648  268F  0021               	movlb	1	; select bank1
 25649  2690  1211               	bcf	17,4	;volatile
 25650  2691  0008               	return
 25651  2692                     __end_of_EUSART_Transmit_ISR:	
 25652                           
 25653                           	psect	text164
 25654  263C                     __ptext164:	
 25655 ;; *************** function _EUSART_Receive_ISR *****************
 25656 ;; Defined at:
 25657 ;;		line 180 in file "mcc_generated_files/eusart.c"
 25658 ;; Parameters:    Size  Location     Type
 25659 ;;		None
 25660 ;; Auto vars:     Size  Location     Type
 25661 ;;		None
 25662 ;; Return value:  Size  Location     Type
 25663 ;;                  1    wreg      void 
 25664 ;; Registers used:
 25665 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25666 ;; Tracked objects:
 25667 ;;		On entry : 0/0
 25668 ;;		On exit  : 0/0
 25669 ;;		Unchanged: 0/0
 25670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25675 ;;Total ram usage:        1 bytes
 25676 ;; Hardware stack levels used:    1
 25677 ;; This function calls:
 25678 ;;		Nothing
 25679 ;; This function is called by:
 25680 ;;		_INTERRUPT_InterruptManager
 25681 ;; This function uses a non-reentrant model
 25682 ;;
 25683                           
 25684                           
 25685                           ;psect for function _EUSART_Receive_ISR
 25686  263C                     _EUSART_Receive_ISR:	
 25687                           
 25688                           ;eusart.c: 183: if(1 == RC1STAbits.OERR)
 25689                           
 25690                           ;incstack = 0
 25691                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 25692  263C  0023               	movlb	3	; select bank3
 25693  263D  1C9D               	btfss	29,1	;volatile
 25694  263E  2E41               	goto	i1l6390
 25695                           
 25696                           ;eusart.c: 184: {
 25697                           ;eusart.c: 187: RC1STAbits.CREN = 0;
 25698  263F  121D               	bcf	29,4	;volatile
 25699                           
 25700                           ;eusart.c: 188: RC1STAbits.CREN = 1;
 25701  2640  161D               	bsf	29,4	;volatile
 25702  2641                     i1l6390:	
 25703                           
 25704                           ;eusart.c: 189: }
 25705                           ;eusart.c: 192: eusartRxBuffer[eusartRxHead++] = RC1REG;
 25706  2641  0819               	movf	25,w	;volatile
 25707  2642  00F0               	movwf	??_EUSART_Receive_ISR
 25708  2643  0020               	movlb	0	; select bank0
 25709  2644  0858               	movf	_eusartRxHead,w
 25710  2645  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 25711  2646  0086               	movwf	6
 25712  2647  3001               	movlw	1	; select bank3/4
 25713  2648  0087               	movwf	7
 25714  2649  0870               	movf	??_EUSART_Receive_ISR,w
 25715  264A  0081               	movwf	1
 25716  264B  3001               	movlw	1
 25717  264C  00F0               	movwf	??_EUSART_Receive_ISR
 25718  264D  0870               	movf	??_EUSART_Receive_ISR,w
 25719  264E  07D8               	addwf	_eusartRxHead,f	;volatile
 25720                           
 25721                           ;eusart.c: 193: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 25722  264F  3008               	movlw	8
 25723  2650  0258               	subwf	_eusartRxHead,w	;volatile
 25724  2651  1803               	btfsc	3,0
 25725                           
 25726                           ;eusart.c: 194: {
 25727                           ;eusart.c: 195: eusartRxHead = 0;
 25728  2652  01D8               	clrf	_eusartRxHead	;volatile
 25729                           
 25730                           ;eusart.c: 196: }
 25731                           ;eusart.c: 197: eusartRxCount++;
 25732  2653  3001               	movlw	1
 25733  2654  00F0               	movwf	??_EUSART_Receive_ISR
 25734  2655  0870               	movf	??_EUSART_Receive_ISR,w
 25735  2656  07D6               	addwf	_eusartRxCount,f	;volatile
 25736  2657  0008               	return
 25737  2658                     __end_of_EUSART_Receive_ISR:	
 25738  007E                     btemp	set	126	;btemp
 25739  007E                     int$flags	set	126
 25740  007E                     wtemp0	set	126


Data Sizes:
    Strings     562
    Constant    1048
    Data        44
    BSS         206
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     46      63
    BANK1            80     56      80
    BANK2            80      0      76
    BANK3            80      0      57
    BANK4            80      0      80
    BANK5            80     24      24
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    i2c_ISR$2738	PTR const FTN()enum E8364 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    returnStop@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S929$11$0	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_57(CODE[2]), STR_56(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_78(CODE[5]), STR_77(CODE[5]), STR_76(CODE[7]), STR_75(CODE[8]), 
		 -> STR_74(CODE[5]), STR_73(CODE[5]), STR_72(CODE[13]), STR_71(CODE[7]), 
		 -> STR_70(CODE[8]), STR_69(CODE[15]), STR_68(CODE[14]), STR_67(CODE[12]), 
		 -> STR_66(CODE[8]), STR_65(CODE[8]), STR_64(CODE[2]), STR_63(CODE[5]), 
		 -> STR_62(CODE[5]), STR_61(CODE[2]), STR_60(CODE[4]), STR_59(CODE[4]), 
		 -> STR_58(CODE[4]), 

    stricmp@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_81(CODE[23]), STR_80(CODE[3]), STR_79(CODE[17]), STR_55(CODE[17]), 
		 -> STR_54(CODE[17]), STR_53(CODE[18]), STR_52(CODE[18]), STR_51(CODE[17]), 
		 -> STR_50(CODE[28]), STR_49(CODE[9]), STR_48(CODE[9]), STR_47(CODE[25]), 
		 -> STR_46(CODE[11]), STR_45(CODE[8]), STR_44(CODE[8]), STR_43(CODE[8]), 
		 -> STR_42(CODE[31]), STR_41(CODE[11]), STR_40(CODE[8]), STR_39(CODE[8]), 
		 -> STR_38(CODE[8]), STR_37(CODE[26]), STR_36(CODE[30]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[4]), 
		 -> STR_30(CODE[2]), STR_29(CODE[4]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[4]), 
		 -> STR_14(CODE[3]), STR_13(CODE[16]), STR_12(CODE[11]), STR_11(CODE[16]), 
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[8]), 
		 -> STR_6(CODE[13]), STR_5(CODE[16]), STR_4(CODE[15]), STR_3(CODE[16]), 
		 -> STR_2(CODE[2]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    execCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    parseCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    parseCmd@cmdString	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), 

    parseCmd@p	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E8364[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 244
		 -> drv_read@reg(BANK1[1]), drv_read@buff(BANK1[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    S929$callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S929$callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S929$data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK1[1]), drv_read@buff(BANK1[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK1[1]), drv_read@buff(BANK1[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c1_driver_setI2cISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_i2c_ISR->i1_do_I2C_TX
    i1_do_I2C_TX->i1_i2c1_driver_TXData
    i1_do_I2C_TX->i1_i2c1_driver_isNACK
    i1_do_I2C_TX->i1_returnReset
    i1_do_I2C_TX->i1_returnStop
    i1_do_I2C_SEND_ADR_WRITE->i1_i2c1_driver_TXData
    i1_do_I2C_SEND_ADR_READ->i1_i2c1_driver_TXData
    _TMR2_DefaultInterruptHandler->_TMR2_WriteTimer
    i1_LEDsOn->i1_send_2length_2bytes_IK
    i1_send_2length_2bytes_IK->i1_send_last_2bytes_IK

Critical Paths under _main in BANK0

    _parseCmd->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _stricmp->_toupper
    _atoi->___wmul
    _main_initialize->_LEDsPwr
    _drv_init->_drv_write
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _drv_reset->_drv_write
    _setLEDPwr->_LEDsPwr
    _LEDsPwr->_send_2length_2bytes_IK
    _setLEDBrightnessRange->_LED_setBrightnessRange
    _setHeaterToggle->_LEDsOn
    _setHeaterPreTime->___ftadd
    _setHeaterPostTime->___ftadd
    _setDrvPiezoOnTime->___ftadd
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _setDrvGain->_drv_write
    _LED_test_openshort->_LEDsOn
    _LED_testComm->_LED_readConfig
    _LED_setBrightnessRange->_send_2length_2bytes_IK
    _LED_readConfig->_LED_getData
    _doMove->_LEDsOn
    _drv_write_DC->_drv_write
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _printf->___llmod
    _putch->_EUSART_Write
    ___llmod->___lldiv
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _LEDsOn->_send_2length_2bytes_IK
    _send_2length_2bytes_IK->_send_last_2bytes_IK
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_DefaultInterruptHandler->i1_LEDsOn
    i1_LEDsOn->i1_send_2length_2bytes_IK

Critical Paths under _main in BANK1

    _main->_execCmd
    _main_initialize->___fttol
    _main_initialize->_drv_init
    _drv_init->_drv_reset
    _execCmd->_commCheck
    _zeroPosition->_printf
    _startRelMove->_printf
    _startAbsMove->_printf
    _setMoveMask->_printf
    _setLEDPwr->_printf
    _setLEDBrightnessRange->_printf
    _setHeaterToggle->_printf
    _setHeaterPreTime->___fttol
    _setHeaterPostTime->___fttol
    _setDrvPiezoOnTime->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul
    _setDrvPeak->_printf
    _setDrvGain->_printf
    _setActive->_printf
    _getPosition->_printf
    _getMoveMask->_printf
    _getMotionStatus->_printf
    _getActive->_printf
    _commCheck->_LED_testComm
    _LED_test_openshort->_printf
    _LED_testComm->_LED_readConfig
    _LED_readConfig->_LED_getData
    _LED_getData->_printf
    _doRelMove->_doMove
    _doAbsMove->_doMove
    _doMove->_drv_write_DC
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _drv_read->_printf
    _drv_write->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_doAbsMove

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  390322
                                             55 BANK1      1     1      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                          _doAbsMove
                          _doRelMove
                            _execCmd
                    _main_initialize
                           _parseCmd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _parseCmd                                             6     5      1    6762
                                             37 BANK0      6     5      1
                               _atoi
                            _stricmp
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               6     4      2    1446
                                             31 BANK0      6     4      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               7     3      4     344
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _stricmp                                              6     4      2    2132
                                             19 BANK0      6     4      2
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    1920
                                             23 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1564
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _main_initialize                                      2     2      0   50293
                                             29 BANK1      2     2      0
             _LED_setBrightnessRange
                            _LEDsPwr
                _TMR0_Load8bitPeriod
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                           _drv_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drv_init                                             5     1      4   24507
                                             24 BANK1      5     1      4
                          _drv_reset
                          _drv_write
                           _i2c_open
                     _i2c_setAddress
                             _printf
 ---------------------------------------------------------------------------------
 (3) _i2c_setAddress                                       2     2      0      22
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _i2c_open                                             3     3      0     216
                                             19 BANK0      3     3      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setI2cISR                                2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setBusCollisionISR                       2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drv_reset                                            1     1      0    8970
                                             23 BANK1      1     1      0
                          _drv_write
 ---------------------------------------------------------------------------------
 (1) _execCmd                                              3     3      0  245850
                                             52 BANK1      3     3      0
                          _commCheck
                             _doMove
                          _getActive
                    _getMotionStatus
                        _getMoveMask
                        _getPosition
                             _printf
                          _setActive
                         _setDrvGain
                         _setDrvPeak
                  _setDrvPiezoOnTime
                  _setHeaterPostTime
                   _setHeaterPreTime
                    _setHeaterToggle
              _setLEDBrightnessRange
                          _setLEDPwr
                        _setMoveMask
                       _startAbsMove
                       _startRelMove
                       _zeroPosition
 ---------------------------------------------------------------------------------
 (2) _zeroPosition                                        14    12      2    6243
                                             41 BANK0      4     2      2
                                             23 BANK1     10    10      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startRelMove                                         2     0      2    6221
                                             41 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startAbsMove                                         3     1      2    6221
                                             41 BANK0      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setMoveMask                                         10     6      4    6391
                                             41 BANK0      4     0      4
                                             23 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setLEDPwr                                            4     0      4    9401
                                             23 BANK1      4     0      4
                            _LEDsPwr
                             _printf
 ---------------------------------------------------------------------------------
 (2) _LEDsPwr                                             14    10      4    3072
                                             36 BANK0     10     6      4
                                              0 BANK1      4     4      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (2) _setLEDBrightnessRange                                4     0      4    9805
                                             23 BANK1      4     0      4
             _LED_setBrightnessRange
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterToggle                                      8     4      4   10117
                                             23 BANK1      8     4      4
                             _LEDsOn
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPreTime                                     4     2      2   19324
                                             29 BANK1      4     2      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPostTime                                    2     0      2   19324
                                             29 BANK1      2     0      2
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TMR2_LoadPeriodRegister                              1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPiezoOnTime                                    4     2      2   19324
                                             29 BANK1      4     2      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     687
                                             15 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    4540
                                             31 BANK0     10     4      6
                                              0 BANK1      6     6      0
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4855
                                             41 BANK0      4     4      0
                                              6 BANK1      9     3      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2999
                                             25 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2404
                                             17 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _TMR0_Load8bitPeriod                                  1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPeak                                           2     0      2    6221
                                             41 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setDrvGain                                           5     3      2   15237
                                             23 BANK1      5     3      2
                          _drv_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setActive                                           14    10      4    6391
                                             41 BANK0      4     0      4
                                             23 BANK1     10    10      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getPosition                                          3     1      2    6283
                                             41 BANK0      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMoveMask                                          8     6      2    6212
                                             41 BANK0      4     2      2
                                             23 BANK1      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMotionStatus                                      2     0      2    6113
                                             41 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getActive                                            8     6      2    6212
                                             41 BANK0      4     2      2
                                             23 BANK1      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _commCheck                                            3     1      2   39962
                                             49 BANK1      3     1      2
                       _LED_testComm
                 _LED_test_openshort
                           _drv_read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _LED_test_openshort                                  11     7      4   13068
                                             23 BANK1     11     7      4
                             _LEDsOn
                             _printf
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _LED_testComm                                        10     8      2   12600
                                             39 BANK1     10     8      2
                     _LED_readConfig
             _LED_setBrightnessRange
 ---------------------------------------------------------------------------------
 (2) _LED_setBrightnessRange                              25    21      4    3476
                                             36 BANK0      8     4      4
                                              0 BANK1     17    17      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _LED_readConfig                                       5     1      4    8775
                                             45 BANK0      1     1      0
                                             35 BANK1      4     0      4
                        _LED_getData
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (5) _LED_getData                                         16    12      4    6280
                                             41 BANK0      4     0      4
                                             23 BANK1     12    12      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doRelMove                                            9     9      0   40393
                                             40 BANK1      9     9      0
                             _doMove
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doAbsMove                                           32    32      0   40715
                                             40 BANK1      8     8      0
                                              0 BANK5     24    24      0
                             _doMove
                             _printf
 ---------------------------------------------------------------------------------
 (2) _doMove                                               7     5      2   34020
                                             33 BANK1      7     5      2
                             _LEDsOn
                    _TMR0_StartTimer
                    _TMR2_StartTimer
                     _calcHeaterPins
                       _drv_write_DC
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drv_write_DC                                         7     3      4   24107
                                             26 BANK1      7     3      4
                            ___awdiv
                          _drv_write
                         _fifo_check
                             _printf
 ---------------------------------------------------------------------------------
 (4) _fifo_check                                           2     2      0    8215
                                             45 BANK0      1     1      0
                                             25 BANK1      1     1      0
                           _drv_read
 ---------------------------------------------------------------------------------
 (5) _drv_read                                             6     4      2    8181
                                             41 BANK0      4     2      2
                                             23 BANK1      2     2      0
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drv_write                                            5     4      1    8970
                                             41 BANK0      5     4      1
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              31    23      8    6113
                                              0 BANK1     23    15      8
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                             19 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                             31 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     395
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) _i2c_setBuffer                                        4     0      4     832
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _i2c_masterOperation                                  3     3      0    1104
                                             23 BANK0      3     3      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (5) _mssp1_IRQisEnabled                                   2     2      0       0
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _i2c_poller                                           0     0      0    1036
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (6) _mssp1_waitForEvent                                   1     1      0      42
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              1     1      0     994
                                             22 BANK0      1     1      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                       _mssp1_setIRQ
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            4     4      0     284
                                             18 BANK0      4     4      0
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            1     1      0     216
                                             17 BANK0      1     1      0
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1     216
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     556
                                             17 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _calcHeaterPins                                       4     4      0       0
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LEDsOn                                              10     4      6    3726
                                             36 BANK0     10     4      6
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _send_2length_2bytes_IK                               8     1      7    2387
                                             28 BANK0      8     1      7
           _send_2bytes_latchless_IK
                _send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _send_last_2bytes_IK                                 11     6      5     516
                                             17 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (4) _send_2bytes_latchless_IK                             8     6      2     207
                                             17 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      86
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          1     1      0    1490
                                             12 COMMON     1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
                           _TMR2_ISR
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (13) i1_i2c_ISR                                           1     1      0     690
                                              5 COMMON     1     1      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
               i1_i2c1_driver_isNACK
                   i1_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (14) i1_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX_EMPTY                                   1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                     i1_mssp1_setIRQ
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX                                         4     4      0     208
                                              1 COMMON     4     4      0
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
               i1_i2c1_driver_TXData
               i1_i2c1_driver_isNACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_READ                              0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_TXData                                1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RX                                         1     1      0     140
                                              0 COMMON     1     1      0
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
            i1_i2c1_driver_getRXData
              i1_i2c1_driver_sendACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RESET                                      0     0      0       0
             i1_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RCEN                                       0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ADDRESS_NACK                            1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_returnStop                                        1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_returnReset                                       1     0      1     140
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_STOP                                  0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART                               0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ACK                                     0     0      0       0
              i1_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (14) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0      22
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultInterruptHandler                        0     0      0      22
                     _TMR2_StopTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR2_WriteTimer                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR2_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0     778
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultInterruptHandler                        0     0      0     778
                     _TMR0_StopTimer
                _TMR0_Write8bitTimer
                           i1_LEDsOn
 ---------------------------------------------------------------------------------
 (15) i1_LEDsOn                                           10     4      6     756
                                              7 BANK0     10     4      6
           i1_send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (16) i1_send_2length_2bytes_IK                            8     1      7     586
                                             11 COMMON     1     1      0
                                              0 BANK0      7     0      7
         i1_send_2bytes_latchless_IK
              i1_send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (17) i1_send_last_2bytes_IK                              11     6      5     278
                                              0 COMMON    11     6      5
 ---------------------------------------------------------------------------------
 (17) i1_send_2bytes_latchless_IK                          8     6      2     116
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (15) _TMR0_Write8bitTimer                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _doAbsMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _doRelMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _execCmd
     _commCheck
       _LED_testComm
         _LED_readConfig
           _LED_getData
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _LED_setBrightnessRange
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
       _LED_test_openshort
         _LEDsOn
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _drv_read
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMotionStatus
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
     _setActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvGain
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPeak
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPiezoOnTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPostTime
       _TMR2_LoadPeriodRegister
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPreTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterToggle
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDBrightnessRange
       _LED_setBrightnessRange
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDPwr
       _LEDsPwr
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startAbsMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startRelMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _zeroPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
   _main_initialize
     _LED_setBrightnessRange
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _LEDsPwr
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _TMR0_Load8bitPeriod
     _TMR2_LoadPeriodRegister
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _drv_init
       _drv_reset
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _i2c_open
         _i2c1_driver_open
         _i2c1_driver_setBusCollisionISR
         _i2c1_driver_setI2cISR
         _mssp1_clearIRQ
       _i2c_setAddress
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _parseCmd
     _atoi
       ___wmul
       _isdigit
     _stricmp
       _toupper
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _TMR0_StopTimer
       _TMR0_Write8bitTimer
       i1_LEDsOn
         i1_send_2length_2bytes_IK
           i1_send_2bytes_latchless_IK
           i1_send_last_2bytes_IK
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
       _TMR2_StopTimer
       _TMR2_WriteTimer
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c1_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c1_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c1_driver_resetBus
     i1_do_I2C_RX *
       i1_do_I2C_DO_NACK_RESTART
         i1_i2c1_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP
         i1_i2c1_driver_sendNACK
       i1_i2c1_driver_getRXData
       i1_i2c1_driver_sendACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     i1_do_I2C_TX *
       i1_do_I2C_SEND_RESTART_READ
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_i2c1_driver_TXData
       i1_i2c1_driver_isNACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_TX_EMPTY *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_mssp1_setIRQ
       i1_returnReset *
       i1_returnStop *
     i1_i2c1_driver_isNACK *
     i1_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     38      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4C       9       95.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      39      11       71.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     18A      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50     18      18      16       30.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     18A      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 30 11:11:22 2018

        i1send_last_2bytes_IK@topOrBottom 0073                              returnReset@p 0031  
        __end_of_TMR2_SetInterruptHandler 246D                                         pc 0002  
            __end_ofdrv2665@drv_fifo_sine 11E8                    setLEDBrightnessRange@r 00B7  
           _do_I2C_SEND_RESTART$intlevel0 2426                         ??_getMotionStatus 004B  
                             __CFG_CP$OFF 0000                              ___awdiv@sign 0037  
                    __size_of_do_I2C_IDLE 0009                       _do_I2C_SEND_RESTART 2422  
                            _startAbsMove 25C2                      __size_of_do_I2C_RCEN 000A  
                     ___wmul@multiplicand 0033                    i1send_last_2bytes_IK@j 0079  
                    __end_ofi1_returnStop 2337                              ___ftadd@exp1 00AE  
                            ___ftadd@exp2 00AD                               i1_do_I2C_RX 1AA6  
                             i1_do_I2C_TX 1D5F                               __CFG_LVP$ON 0000  
                            ___ftadd@sign 00AC                                       l210 1EFC  
                                     l202 1580                                       l220 1F1F  
                                     l214 1F05                                       l231 1F3F  
                                     l303 1488                                       l227 1F34  
                                     l252 199B                                       l500 24CA  
                                     l237 1F49                                       l229 1F36  
                                     l254 199D                                       l246 1981  
                                     l415 1838                                       l256 19A5  
                                     l279 1677                                       l299 145A  
                                     l745 1F7D                                       l761 1BCA  
                                     _PR2 001E                              __CFG_CPD$OFF 0000  
                i1_do_I2C_DO_NACK_RESTART 2392              __size_of_i2c_masterOperation 0024  
                    _returnStop$intlevel0 23CE                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 254B                     __size_of_do_I2C_RESET 000B  
                                     wreg 0009                              _startRelMove 2584  
                         _setHeaterToggle 077C                     __end_ofi1_returnReset 2339  
                         ?i1_mssp1_setIRQ 0070                        i1_i2c1_driver_stop 2348  
         i2c1_driver_setBusCollisionISR@f 0031                                      S8620 1800  
                setLEDBrightnessRange@tOB 00B9                         setDrvGain@setGain 00BA  
                            ?_EUSART_Read 0070                                      l2031 2622  
                                    l1307 1DF7                                      l1092 0983  
                                    l1086 093F                                      l1089 096D  
                                    l1460 0670                                      l1461 06C6  
                                    l1455 066E                                      l1458 068F  
                                    l1476 077B                                      l1741 1619  
                                    l1742 1621                                      l1734 1606  
                                    l1558 2661                                      l1825 08E6  
                           i1returnStop@p 0070                                      l1765 0F9B  
                                    l7010 243E                                      l7004 242E  
                                    l7100 1F56                                      l6204 16D0  
                                    l7022 23CE                                      l6214 170D  
                                    l6206 16D4                                      l6150 1CD6  
                                    l5264 1E13                                      l7032 24B5  
                                    l7016 2446                                      l7104 1F59  
                                    l6208 16FD                                      l6144 1CD1  
                                    l5290 1E4A                                      l5282 1E39  
                                    l5274 1E1B                                      l5258 1E08  
                                    l7026 23D4                                      l7042 2471  
                                    l7050 24ED                                      l7122 1F9E  
                                    l7114 1F5F                                      l8010 0A6A  
                                    l5442 265B                                      l5276 1E27  
                                    l7108 1F5C                                      l7140 1BCC  
                                    l7204 1865                                      l7220 24D2  
                                    l8100 0B0B                                      l8012 0A8A  
                                    l5604 0892                                      l6180 1A69  
                                    l6500 0569                                      l6414 26F0  
                                    l5286 1E42                                      l7150 1BD2  
                                    l7126 1BB0                                      l7230 1EC0  
                                    l5630 08DD                                      l5622 08C2  
                                    l8030 083A                                      l5462 2529  
                                    l6190 16B0                                      l6174 1A3E  
                                    l6166 1D10                                      l6158 1CED  
                                    l7152 194D                                      l7080 18F7  
                                    l7144 1BCF                                      l7304 066B  
                                    l8104 0B5A                                      l5632 08E9  
                                    l5624 08D0                                      l8032 0861  
                                    l6176 1A46                                      l6168 1D11  
                                    l6520 05B4                                      l6512 0596  
                                    l6504 0578                                      l7154 1950  
                                    l7170 195A                                      l7058 24C0  
                                    l7066 248D                                      l7074 2436  
                                    l7242 1EEB                                      l7330 06D5  
                                    l8050 1AEC                                      l8018 0A94  
                                    l6186 16AB                                      l7164 1957  
                                    l7084 1900                                      l7228 1EB2  
                                    l7252 1B2F                                      l7340 06EC  
                                    l7316 06A0                                      l7308 0672  
                                    l7420 1C0E                                      l5636 08F7  
                                    l6188 16A3                                      l5652 19DD  
                                    l6540 05FF                                      l6532 05E1  
                                    l6524 05C3                                      l6516 05A5  
                                    l6508 0587                                      l7158 1953  
                                    l7094 1906                                      l7238 1EE0  
                                    l7254 1B3D                                      l7262 1B60  
                                    l7174 182D                                      l7350 0721  
                                    l7334 06E6                                      l8038 086C  
                                    l6198 16C8                                      l5646 2549  
                                    l5670 19D3                                      l5654 19E5  
                                    l6550 062D                                      l7088 1903  
                                    l7096 1F50                                      l8056 1B1B  
                                    l8240 0356                                      l5664 19AD  
                                    l6544 0615                                      l6536 05F0  
                                    l6528 05D2                                      l6480 051E  
                                    l6472 0500                                      l6464 04DD  
                                    l7258 1B55                                      l7346 0719  
                                    l8082 2772                                      l8090 278A  
                                    l8074 1CBD                                      l8250 03B2  
                                    l8242 0361                                      l8234 0317  
                                    l5666 19B5                                      l5658 1A03  
                                    l6554 0640                                      l6546 061B  
                                    l7276 1F21                                      l7268 1EFE  
                                    l7196 1854                                      l7188 184D  
                                    l7356 0727                                      l7428 1C2C  
                                    l7604 1DB6                                      l7540 169A  
                                    l8084 277A                                      l8068 1C86  
                                    l7620 275A                                      l7700 0D3C  
                                    l8260 043D                                      l8252 03C6  
                                    l8244 0376                                      l8236 032C  
                                    l6492 054B                                      l6484 052D  
                                    l6476 050F                                      l6468 04F1  
                                    l7382 27D9                                      l7358 064F  
                                    l7470 2539                                      l7606 1DEA  
                                    l8318 0E8E                                      l7438 0C59  
                                    l7534 168B                                      l8086 2782  
                                    l7630 0F1B                                      l8270 0489  
                                    l8262 045D                                      l8254 03E3  
                                    l8246 038A                                      l8238 0341  
                                    l8510 0A09                                      l7376 27C9  
                                    l8352 0127                                      l8344 00BF  
                                    l7448 0D12                                      l7536 1693  
                                    l8096 0AC2                                      l7640 0F34  
                                    l8272 0494                                      l8264 0468  
                                    l8256 0400                                      l8248 039E  
                                    l6496 055A                                      l6488 053C  
                                    l8504 09BD                                      l7378 27CF  
                                    l7546 179D                                      l7482 15E3  
                                    l7634 0F23                                      l7730 0DC3  
                                    l7722 0DAB                                      l7706 0D55  
                                    l8274 049C                                      l8266 0473  
                                    l8258 041D                                      l8506 09C1  
                                    l8372 0155                                      l8348 0115  
                                    l7492 160B                                      l7484 15ED  
                                    l7660 0F6F                                      l7652 0F50  
                                    l8268 047E                                      l8276 04A4  
                                    l8366 0146                                      l8622 1B8A  
                                    l7494 1613                                      l7486 15F2  
                                    l7478 15DC                                      l7670 0F8B  
                                    l7662 0F74                                      l7734 0DD1  
                                    l7718 0D9D                                      l7920 1B79  
                                    l7912 1B6D                                      l7680 0FBF  
                                    l7672 0F97                                      l7664 0F78  
                                    l8378 023A                                      l8298 0E2B  
                                    l7914 1B70                                      l7930 1B98  
                                    l7690 0FDA                                      l7658 0F63  
                                    l7916 1B72                                      l7676 0FAD  
                                    l8484 09C4                                      l7838 0955  
                                    l7918 1B74                                      l8494 09EB  
                                    l6992 241E                                      l7928 1B85  
                                    l8496 09F0              TMR0_Load8bitPeriod@periodVal 0031  
                                    l6986 2416                                      l7882 1501  
                                    l7874 14BA                                      l6998 2426  
                                    l7878 14EF                                      l7992 07B1  
                                    l7898 18ED                           __end_of_LEDsPwr 15D3  
                                    l7998 07EC                                      STR_1 2A3D  
                                    STR_2 283B                                      STR_3 2929  
                     drv_init@output_gain 00B8                                      STR_4 2957  
                                    STR_5 28F9                                      STR_6 28EC  
                                    STR_7 29F1                                      STR_8 2A47  
                                    STR_9 2A47                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    u4305 1E3A                                      u4265 1E1E  
                                    u4515 2662                                      u7100 0C79  
                                    _PMD0 0911                                      u4285 1E28  
                                    u4525 2667                                      _PMD1 0912  
                                    u7110 0C90                                      _PMD2 0913  
                                    u4295 1E32                                      _PMD3 0914  
                                    u7120 0C91                                      _PMD4 0915  
                                    _PMD5 0916                                      u7034 1468  
                                    u7130 0CA6                                      u7035 1466  
                                    u7115 0C8C                                      u7140 0CA7  
                                    u8014 081F                                      u7135 0CA2  
                                    u7215 15E8                                      u8015 081D  
                                    u8200 0E75                                      u7400 17DC  
                                    u8040 1B02                                      u8024 0845  
                                    u8025 0843                                      u7090 0C78  
                                    u7410 17F8                                      u7075 13D6  
                                    u7155 0CDF                                      u8115 0B53  
                                    u7235 1601                                      u7315 1579  
                                    u8300 010B                                      u7420 17F9  
                                    u8045 1AFD                                      u7325 158E  
                                    u8310 010C                                      u8070 1CA4  
                                    u7095 0C74                                      u7255 160E  
                                    u4935 0899                                      u7335 15B6  
                                    u8400 01EC                                      u8240 0ECC  
                                    u6705 1B32                                      u8305 0107  
                                    u8225 0EB2                                      u8250 0ECD  
                                    u8234 0EBD                                      u6635 1EB5  
                                    u8235 0EBB                                      u8075 1C9F  
                                    u8500 02D2                                      u6725 1B4B  
                                    u7445 1DD5                                      u8325 0125  
                                    u8245 0EC8                                      u8165 0E34  
                                    u4965 08C3                                      u8414 01F5  
                                    u8350 0181                                      u8190 0E74  
                                    u7390 17DB                      ?_do_I2C_SEND_RESTART 0070  
                                    u6655 1EC1                                      u6735 1B56  
                                    u8415 01F3                                      u8175 0E5A  
                                    u7391 17D9                                      u7295 1628  
                                    u8424 0201                                      u8360 0182  
                                    u8184 0E65                                      u6665 1ED5  
                                    u8425 01FF                                      u8345 0153  
                                    u8185 0E63                                      u7625 0F79  
                                    u6675 1EE1                                      u8435 0238  
                                    u8355 017D                                      u8275 00BD  
                                    u8195 0E70                                      u4995 08DE  
                                    u6844 198C                                      u8460 028B  
                                    u8284 00D9                                      u6845 198A  
                                    u8461 0289                                      u8445 024B  
                                    u8285 00D7                                      u7565 0F51  
                                    u7805 0DD9                                      u7725 0D65  
                                    u6774 1F10                                      u8470 028C  
                                    u8454 0267                                      u8390 01EB  
                                    u8374 018B                                      u7910 078F  
                                    u6775 1F0E                                      u6935 070F  
                                    u8455 0265                                      u8375 0189  
                                    u7655 0F8C                                      u7735 0D77  
                                    u8384 0197                                      u7825 0949  
                                    u8385 0195                                      u8490 02D1  
                                    u7930 07C5                                      u6795 1F2B  
                                    u7835 0977                                      u8491 02CF  
                                    u8395 01E7                                      u7595 0F64  
                                    u7755 0DAC                                      u7915 078B  
                                    u8484 02AD                                      u8485 02AB  
                                    u7765 0DB3                                      u7845 14B8  
                                    u7854 14CD                                      u7935 07C1  
                                    u7855 14CB                                      u8807 152C  
                                    u7944 0A2D                                      u7945 0A2B  
                                    u8817 153B                                      u7795 0DD2  
                                    u7875 14FF                                      u8827 154F  
                                    u8837 1562                                      u7974 0A56  
                                    u8847 147E                                      u7895 18D5  
                                    u7975 0A54                                      u7984 0A75  
                                    u8857 094C                                      u7985 0A73  
                                    u8867 097A                                      u7995 080D  
                                    u8787 0990                                      u8877 1C0F  
                                    u8797 1520                                      u8887 24CE  
                                    _TMR2 001D                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0008                       ?i1_i2c1_driver_stop 0070  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _atoi 16A1  
                                    _main 0989                              ___ftpack@arg 0031  
               __size_of_do_I2C_SEND_STOP 0008                    __size_of_do_I2C_DO_ACK 0008  
                            ___ftpack@exp 0034                           _TMR0_StartTimer 2357  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                         ??i1_do_I2C_DO_ACK 0070  
                           __CFG_BOREN$ON 0000                              ?_LED_getData 0049  
                 i1_i2c1_driver_getRXData 234E                     ?_do_I2C_SEND_ADR_READ 0070  
                           __CFG_BORV$LOW 0000           ??_i2c1_driver_clearBusCollision 0070  
                                    start 0050                          _setHeaterPreTime 13ED  
                   __size_of_zeroPosition 0062                             _i2c_setBuffer 25AD  
                  LED_test_openshort@type 00B7                   ??_setLEDBrightnessRange 004C  
                           __CFG_CSWEN$ON 0000                             __CFG_MCLRE$ON 0000  
                            ___ftmul@cntr 00A4                  _send_2bytes_latchless_IK 1978  
                         __end_of_i2c_ISR 1876                              ___ftmul@sign 00A5  
                ??_do_I2C_DO_NACK_RESTART 0031                             i1_do_I2C_IDLE 23B5  
                            ___fttol@exp1 00BC                             i1_do_I2C_RCEN 23C4  
                            ___fttol@lval 00B8                   __end_of_TMR0_Initialize 2584  
                            _do_I2C_RESET 24B1                            i1returnReset@p 0070  
            __size_of_TMR0_Write8bitTimer 0005            ??_TMR0_DefaultInterruptHandler 007C  
                           ?_EUSART_Write 0070            __size_of_OSCILLATOR_Initialize 000A  
           __end_of_OSCILLATOR_Initialize 2489                      ??i1_i2c1_driver_stop 0070  
                                   ?_atoi 0037                  __end_of_i2c1_driver_open 24B1  
                                   ?_main 0070                           __end_of___awdiv 1E4F  
                __end_of_i2c1_driver_stop 2366                           __end_of___ftadd 1000  
                                   STR_11 2919                                     STR_20 2A47  
                                   STR_12 2999                                     STR_21 2A47  
                                   STR_13 2909                                     STR_30 283B  
                                   STR_22 2A47                                     STR_14 2A47  
                                   STR_23 2A47                                     STR_31 2A3D  
                                   STR_15 2A39                                     STR_32 283B  
                                   STR_24 2A47                                     STR_16 2A47  
                                   STR_40 29F9                                     STR_25 2A47  
                                   STR_33 2A53                                     STR_17 2A4A  
                                   STR_41 29A4                             __CFG_WDTE$OFF 0000  
                                   STR_18 2A47                                     STR_26 2A4A  
                                   STR_34 2A12                                     STR_50 283D  
                                   STR_42 2800                      send_last_2bytes_IK@j 003A  
                                   STR_27 2A47                                     STR_19 2A47  
                                   STR_43 29E9                                     STR_35 2A51  
                                   STR_51 28E8                                     STR_44 29E1  
                                   STR_28 2A4A                                     STR_60 2A35  
                                   STR_52 28A3                                     STR_36 281F  
                                   STR_53 28A3                                     STR_45 29F9  
                                   STR_29 2A3D                                     STR_61 2A33  
                                   STR_37 2859                                     STR_46 29A4  
                                   STR_62 2A14                                     STR_38 29E9  
                                   STR_70 29D1                                     STR_54 28C6  
                                   STR_63 2A1E                                     STR_71 2A08  
                                   STR_39 29E1                                     STR_55 28D7  
                                   STR_47 2873                                     STR_80 28A0  
                                   STR_56 29FF                                     STR_64 2A4F  
                                   STR_48 29B8                                     STR_72 2974  
                                   STR_57 29FF                                     STR_73 2A0F  
                                   STR_65 29C1                                     STR_49 29AF  
                                   STR_81 288C                                     STR_58 2A2D  
                                   STR_74 2A19                                     STR_66 29C9  
                                   STR_59 2A31                                     STR_75 29D9  
                                   STR_67 298D                                     STR_76 2A01  
                                   STR_68 2966                                     STR_77 2A28  
                                   STR_69 2948                                     STR_78 2A23  
                                   STR_79 28B5                           __end_of___lldiv 1EF4  
                         __end_of___ftmul 0E04                           ___awdiv@divisor 0031  
                         __end_of___llmod 1B69                           __end_of___fttol 0900  
                                   _T2CON 001F                __end_of_i2c1_driver_TXData 23DC  
                          __CFG_DEBUG$OFF 0000                          __end_ofi1_LEDsOn 274F  
                                   i1l210 1C3D                                     i1l220 1C5C  
                                   i1l214 1C45                                     i1l231 1C76  
                                   i1l227 1C6E                                     i1l252 1895  
                                   i1l237 1C7D                                     i1l229 1C6F  
                                   i1l254 1896                                     i1l246 187E  
                                   i1l351 0013                                     i1l256 189D  
                                   i1l360 0043                                     i1l354 0022  
                                   i1l427 268F                                     i1l356 002F  
                                   i1l365 004B                                     i1l358 0039  
                                   i1l745 1D8B                                     i1l761 1AC0  
                         ___awdiv@counter 0036                          __end_of_LEDpower 2A4F  
                                   _OSCEN 091D                                     _TMR0H 0016  
                                   _TMR0L 0015                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                      __end_ofsin@coeff_a 2948                        __end_ofsin@coeff_b 298D  
       __size_of_TMR0_SetInterruptHandler 0009             i1send_2length_2bytes_IK@data1 0020  
           i1send_2length_2bytes_IK@data2 0022                 ?_TMR0_SetInterruptHandler 0031  
                             i2c_open@ret 0034                          __end_of_TMR0_ISR 2502  
                        __end_of_TMR2_ISR 250F                           __end_of_execCmd 04B7  
                      __size_ofi1_i2c_ISR 0020                             ___awtoft@sign 003E  
              __end_of_i2c1_driver_isNACK 251C                           __end_of_dpowers 2028  
                          _WDT_Initialize 2396                                     _errno 015E  
                         __end_of_isdigit 252B              ?i1_do_I2C_SEND_RESTART_WRITE 0070  
              ?_do_I2C_SEND_RESTART_WRITE 0070                             ___ftpack@sign 0035  
                                   atoi@a 003C                                     atoi@s 003E  
                                   _putch 23DC                     ??_do_I2C_SEND_RESTART 0031  
               send_2bytes_latchless_IK@j 0037                         ?i1_mssp1_clearIRQ 0070  
  __end_of_i2c1_driver_setBusCollisionISR 247F   __size_of_i2c1_driver_setBusCollisionISR 0009  
          _i2c1_driver_setBusCollisionISR 2476                              _zeroPosition 14AA  
                                   pclath 000A                        setDrvPiezoOnTime@t 00BD  
                 __size_of_mssp1_clearIRQ 0003                      i1_i2c1_driver_TXData 23B0  
      __end_ofi1_send_2bytes_latchless_IK 189F                i1_send_2bytes_latchless_IK 1876  
                    setLEDPwr@topOrBottom 00B9                            _i2c_setAddress 244A  
                  ?_do_I2C_SEND_ADR_WRITE 0070                                     status 0003  
                      ??i1_mssp1_clearIRQ 0070                                     wtemp0 007E  
                         _TMR2_StartTimer 235A                           __end_of_stricmp 1A6F  
        __size_of_TMR2_LoadPeriodRegister 0005                           __end_of_strcspn 19D8  
                         __end_of_toupper 254B                         ??_main_initialize 00BD  
                          ?_i2c_setBuffer 0031                       _send_last_2bytes_IK 1EF4  
                    i1_i2c1_driver_isNACK 24DD                         _setHeaterPostTime 1E4F  
                           _fsmStateTable 0250                           __initialization 0052  
          __size_ofi1_do_I2C_SEND_RESTART 0004                                _i2c_poller 24D2  
           __end_ofi1_do_I2C_SEND_RESTART 2386                            _remainingSteps 00E6  
                            __end_of_atoi 1712                                _i2c_status 0120  
                          ?i1_do_I2C_IDLE 0070                              __end_of_main 0A13  
                      ?_setHeaterPostTime 00BD                            ?i1_do_I2C_RCEN 0070  
               LED_readConfig@topOrBottom 00C3                __end_ofi1_do_I2C_SEND_STOP 238A  
                        __end_of_i2c_open 1D5F                            ??_EUSART_Write 0031  
                 __end_of_TMR2_Initialize 255D               ?_INTERRUPT_InterruptManager 0070  
                           ?_LED_testComm 00C7                   __end_of_setHeaterToggle 07F7  
                          i1_do_I2C_RESET 23F4                             _do_I2C_DO_ACK 2432  
                                  ??_atoi 0039                  _TMR2_SetInterruptHandler 2464  
                                  ??_main 00D7                             ___fttol@sign1 00B7  
                     ??_setHeaterPostTime 004D             __size_of_i2c1_driver_sendNACK 0004  
              LED_test_openshort@readData 00BC                           _TMR2_WriteTimer 23AB  
                    ?_send_last_2bytes_IK 0031                             ?_drv_write_DC 00BA  
                               ??_LEDsPwr 0048                    __end_of_WDT_Initialize 239A  
           __size_of_i2c1_driver_resetBus 0001                               drv_read@reg 00B7  
                      setHeaterPostTime@t 00BD                   ?_do_I2C_DO_ADDRESS_NACK 0070  
                            ?_setMoveMask 0049                        setHeaterToggle@num 00B7  
                        _piezo_on_time_ms 00EA                   __end_of_TMR0_StartTimer 235A  
                           _drv_fifo_sine 1000                          ___llmod@dividend 0043  
                    __size_of_getMoveMask 0049                          ___awdiv@dividend 0033  
                        __end_of___awtoft 2771                                    _ANSELA 018C  
                                  ?_putch 0070                                    _ANSELB 018D  
                                  _ANSELC 018E                    __end_of_i2c_setAddress 2452  
                        __end_of___ftpack 1638                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 0017                                    _T0CON1 0018  
                 ?i1_do_I2C_SEND_ADR_READ 0070                      drv2665@drv_fifo_sine 10F4  
                   ?i1_i2c1_driver_TXData 0070                                    _RC1REG 0199  
                                  _RC1STA 019D                                    _ODCONA 028C  
                                  _ODCONB 028D                                    _ODCONC 028E  
                                  i1l5130 1C3F                                    i1l5138 1C5D  
                                  i1l6220 23F4                                    i1l6230 23B5  
                                  i1l6254 23C4                                    i1l8200 189F  
                                  i1l8202 18A2                                    i1l8106 2402  
                                  i1l8114 23FB                                    i1l8122 238A  
                                  i1l8212 18A9                                    i1l8132 279B  
                                  i1l6390 2641                                    i1l8206 18A5  
                                  i1l8142 27A1                 ??i1_i2c1_driver_getRXData 0070  
                                  i1l8136 279E                                    i1l8128 2794  
                                  i1l8152 1D68                                    i1l8144 1D5F  
                                  i1l8400 26DE                                    i1l8218 18AC  
                                  i1l8170 1DA7                                    i1l8162 1D6E  
                                  i1l8156 1D6B                                    i1l8148 1D65  
                                  i1l8174 1AA6                                    i1l8192 1AC5  
                                  i1l8188 1AC2                                    i1l8198 1AC8  
                                  i1l8392 26CE                                    i1l7762 237E  
                                  i1l7756 237A                                    i1l7780 238E  
                                  i1l7774 2386                                    i1l7792 2335  
                                  i1l7768 2382                                    i1l7786 2392  
                                  i1l7796 2337                                    _LEDsOn 13CC  
           ??i1_do_I2C_SEND_RESTART_WRITE 0070                                    u508_25 2738  
                                  u390_25 1C66                                    u395_24 1887  
                                  u395_25 1885                                    u388_24 1C4E  
                                  u388_25 1C4C                                    _OSCFRQ 091F  
                  ??_do_I2C_SEND_ADR_READ 0032                           drv_write_DC@val 00BA  
                                  _TX1REG 019A                      __size_of_getPosition 002A  
                                  _WDTCON 0097                                    _TX1STA 019E  
                               ??_i2c_ISR 0036               __size_of_LED_test_openshort 0069  
               __end_of_setHeaterPostTime 1EA1                     ?i1_i2c1_driver_isNACK 0070  
                          __CFG_PWRTE$OFF 0000             LED_test_openshort@topOrBottom 00B9  
                   _i2c1_driver_getRXData 2369                       LED_getData@readData 00BD  
                 __size_of_LED_readConfig 002B                       _do_I2C_RX$intlevel0 1BB0  
                   __size_ofi1_returnStop 0002               __end_of_do_I2C_DO_NACK_STOP 2442  
                       __end_ofi1_i2c_ISR 26EE                                    ___wmul 2658  
                               ??___awdiv 0035     __end_of_i2c1_driver_clearBusCollision 2342  
  __size_of_i2c1_driver_clearBusCollision 0003             _i2c1_driver_clearBusCollision 233F  
                               ??___ftadd 0049                            __CFG_STVREN$ON 0000  
                                  _doMove 0900                                 ??___lldiv 0039  
                               ??___ftmul 0045                                 ??___llmod 0047  
                               ??___fttol 00B3               i1send_2bytes_latchless_IK@j 0076  
         __size_of_do_I2C_DO_NACK_RESTART 0008                         startAbsMove@steps 0049  
                        __end_of_drv_init 156F                          __end_of_drv_read 1C36  
                  __end_ofi1_do_I2C_RESET 23FB                          __end_of_drv_sine 13CC  
                 ?_send_2length_2bytes_IK 003C                       _EUSART_Transmit_ISR 2674  
                          ??_LED_testComm 00C9                          ?_TMR0_Initialize 0070  
                        ___awdiv@quotient 0038                            ?_do_I2C_DO_ACK 0070  
                        __end_of_parseCmd 064A                                    _printf 064A  
                                  _strchr 2622                                    _strtok 1CC8  
                                  _strspn 19D8                                 ??_execCmd 00D4  
                   ___ftmul@f3_as_product 00A1                    i2c1_driver_setI2cISR@f 0031  
                   i2c_setAddress@address 0032                     ??_send_last_2bytes_IK 0036  
             __end_of_i2c1_driver_sendACK 239E                            _PMD_Initialize 240A  
          __end_of_do_I2C_DO_ADDRESS_NACK 191E                            ??_drv_write_DC 00BE  
                               ??_isdigit 0031                           ?_WDT_Initialize 0070  
             __end_of_i2c1_driver_restart 2363                              ?_returnReset 0031  
           _do_I2C_DO_NACK_STOP$intlevel0 243E                     _i2c1_driver_setI2cISR 07F7  
             __end_of_i2c1_driver_startRX 2369                        LEDsPwr@topOrBottom 0046  
       __size_ofi1_do_I2C_DO_ADDRESS_NACK 0024            __end_ofi1_do_I2C_SEND_ADR_READ 240A  
                 __end_of_TMR2_StartTimer 235D  TMR2_SetInterruptHandler@InterruptHandler 0031  
TMR0_SetInterruptHandler@InterruptHandler 0031                 ?i1_do_I2C_DO_ADDRESS_NACK 0070  
                               ??_stricmp 0035                                 ??_strcspn 003A  
                               ??_toupper 0031                      ?_EUSART_Transmit_ISR 0070  
                         ?_i2c_setAddress 0070                         i1_do_I2C_TX_EMPTY 189F  
                    __size_of_EUSART_Read 0020                         _SYSTEM_Initialize 2598  
          __size_ofi1_send_last_2bytes_IK 0049                   __end_of__initialization 00A7  
           __end_ofi1_send_last_2bytes_IK 1C7F                           ??_i2c_setBuffer 0035  
          _do_I2C_SEND_ADR_READ$intlevel0 24ED                          _do_I2C_SEND_STOP 242A  
                            i1_returnStop 2335                                ___ftadd@f1 00A6  
                              ___ftadd@f2 00A9                           _getMotionStatus 2771  
                   i1_do_I2C_DO_NACK_STOP 238E                        __size_of_do_I2C_RX 0044  
                      __size_of_do_I2C_TX 0059                        ?i1_do_I2C_TX_EMPTY 0070  
                      ?_SYSTEM_Initialize 0070                        __size_of_doAbsMove 0240  
                        _moveVector_downs 00DC                __end_of_mssp1_IRQisEnabled 249D  
                     _i2c_masterOperation 27B8                  __size_of_do_I2C_TX_EMPTY 002F  
                              ___awtoft@c 0039                                 ?i1_LEDsOn 0027  
                         ??i1_do_I2C_IDLE 0070                           ??i1_do_I2C_RCEN 0070  
                              ___ftmul@f1 003F                                ___ftmul@f2 0042  
              __end_of_mssp1_waitForEvent 24D2                      __size_of_LED_getData 0062  
                              ___fttol@f1 00AF                               ?_i2c_poller 0070  
                          __pcstackCOMMON 0070                ??i1_do_I2C_DO_NACK_RESTART 0070  
                     _do_I2C_TX$intlevel0 1F50                       ??i1_do_I2C_TX_EMPTY 0070  
          __end_of_send_2length_2bytes_IK 2608                              __pidataBANK0 23A2  
                            __pidataBANK1 23EE                              __pidataBANK2 0002  
                            __pidataBANK4 270E                       ??_SYSTEM_Initialize 0033  
                              _absCommand 00E4                                 ?_TMR0_ISR 0070  
                               ?_TMR2_ISR 0070                        __size_of_doRelMove 00E2  
                 __end_of_TMR2_WriteTimer 23B0                     i1_i2c1_driver_sendACK 2372  
                   i1i2c1_driver_TXData@d 0070                           ?i1_do_I2C_RESET 0070  
                           __end_of_putch 23E2                          ?_TMR2_Initialize 0070  
                   i1_i2c1_driver_restart 2345         __size_ofi1_send_2length_2bytes_IK 0018  
                  __end_of_PMD_Initialize 2412                          ?_setHeaterToggle 00B7  
               ?i1_send_2length_2bytes_IK 0020                        __size_of_getActive 0041  
                            ?i1_do_I2C_RX 0070                              ?i1_do_I2C_TX 0070  
                   i1_i2c1_driver_startRX 234B                          ??i1_mssp1_setIRQ 0070  
                    ?_i2c_masterOperation 0070              ??i1_do_I2C_SEND_RESTART_READ 0070  
                      __size_of_commCheck 00C9                  __end_of_setHeaterPreTime 1448  
                            LED_getData@j 00C1                           i1_do_I2C_DO_ACK 238A  
             __end_of_TMR0_Load8bitPeriod 23BF                 __end_ofi1_do_I2C_TX_EMPTY 18C9  
                        ?_TMR0_StartTimer 0070                    _do_I2C_DO_NACK_RESTART 2442  
                  ??i1_i2c1_driver_TXData 0070                            _do_I2C_TX$1132 0034  
               __end_of_SYSTEM_Initialize 25AD                     ??_EUSART_Transmit_ISR 0070  
                                 ??_putch 0033                            _mssp1_clearIRQ 236F  
                              __pbssBANK0 004E                                __pbssBANK1 00D8  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                              __pbssBANK4 0220                   __size_of_calcHeaterPins 0077  
                     _TMR0_Write8bitTimer 23A6                ??_send_2bytes_latchless_IK 0033  
                    __end_of_EUSART_Write 1850                                   ?_LEDsOn 0044  
                          _moveVector_ups 00E0                   _TMR2_LoadPeriodRegister 23BF  
                               ?_i2c_open 0070                   drv_write_DC@duration_ms 00BC  
                              _activeMask 00D8                  ??i1_i2c1_driver_sendNACK 0070  
                         drv2665@drv_sine 11E8                        __size_of_drv_reset 000A  
                  ??i1_i2c1_driver_isNACK 0070                __size_of_setHeaterPostTime 0052  
                      __size_of_drv_write 0024               __size_of_EUSART_Receive_ISR 001C  
                      __size_of_setLEDPwr 001E                    ?_i2c1_driver_getRXData 0070  
                ??i1_i2c1_driver_resetBus 0070                              drv_read@buff 00B8  
                              ??i1_LEDsOn 002D                     _do_I2C_IDLE$intlevel0 2471  
                          _SSP1DATPPSbits 0E21              __size_of_i2c_busCollisionISR 0003  
                              __pmaintext 0989                                doAbsMove@i 00CA  
                           ??_do_I2C_IDLE 0031                        __size_of_setActive 008E  
                           ??_do_I2C_RCEN 0031          __end_of_TMR0_SetInterruptHandler 2464  
                 __size_of_TMR0_StopTimer 0003            __size_of_setLEDBrightnessRange 001E  
                                 ?___wmul 0031             __end_of_setLEDBrightnessRange 26B0  
                              ??_TMR0_ISR 007C                           __CFG_PPS1WAY$ON 0000  
                              _cmd_struct 01B0                                ??_TMR2_ISR 0071  
                                 ?_doMove 00C1                           ??_do_I2C_DO_ACK 0031  
                              __pintentry 0004                         startRelMove@steps 0049  
                   setHeaterToggle@topOrB 00B9                      ?_TMR0_Write8bitTimer 0070  
                     i2c_setBuffer@buffer 0031                                 ?___awtoft 0039  
                               ?___ftpack 0031                            _SSP1CLKPPSbits 0E20  
                                 ?_printf 00A0                           ?_PMD_Initialize 0070  
                              _fifo_check 252B                                   ?_strchr 0031  
          ?_i2c1_driver_clearBusCollision 0070                                   ?_strtok 003F  
                                 ?_strspn 0038                     ??_i2c_masterOperation 0037  
                       ?_i2c1_driver_open 0070                         __end_of_do_I2C_RX 1BF0  
                       __end_of_do_I2C_TX 1FA5                         ?_i2c1_driver_stop 0070  
                           _eusartRxCount 0056                         __end_of_doAbsMove 02EB  
                ?i1_do_I2C_SEND_ADR_WRITE 0070                                   _SP1BRGH 019C  
                                 _SP1BRGL 019B                    ?_i2c1_driver_setI2cISR 0031  
                                 _LEDsPwr 156F                        ??_i2c1_driver_open 0031  
                      ??_i2c1_driver_stop 0031                                   _OSCCON1 0919  
                                 _OSCCON3 091B                             ?_mssp1_setIRQ 0070  
                         _main_initialize 0B6A                                   _NVMADRH 0892  
                                 _NVMADRL 0891                                   _NVMDATH 0894  
                                 _OSCTUNE 091E                                   _NVMDATL 0893  
                                 _NVMCON2 0896                                   _SSP1ADD 0212  
                                 _SSP1BUF 0211                    __end_of_mssp1_clearIRQ 2372  
                                 _SSP1MSK 0213                   __end_of_getMotionStatus 2794  
                 __size_of_TMR2_StopTimer 0003                       __size_of_i2c_poller 000B  
                        ?_TMR2_StartTimer 0070                   ??_do_I2C_SEND_ADR_WRITE 0032  
     _do_I2C_SEND_RESTART_WRITE$intlevel0 241E                         __end_of_doRelMove 0EE6  
             ??_do_I2C_SEND_RESTART_WRITE 0031                      __size_of_setMoveMask 0078  
                  ?i1_do_I2C_DO_NACK_STOP 0070                        _i2c1_driver_TXData 23D6  
                    __end_of_LED_testComm 1800                                ??_i2c_open 0033  
                               ?_drv_init 00B8                                 ?_drv_read 0049  
                         __size_of_LEDsOn 0021                        _i2c1_driver_i2cISR 0164  
             ?i1_send_2bytes_latchless_IK 0070         LED_setBrightnessRange@topOrBottom 0046  
                       __end_of_getActive 1B26                                   _i2c_ISR 1850  
                               ?_parseCmd 0045                         __end_of_commCheck 0B6A  
                    __end_of_drv_write_DC 1DFD                     _returnReset$intlevel0 23D4  
                   _do_I2C_RCEN$intlevel0 248D                        _i2c1_driver_isNACK 250F  
                     ?_i2c1_driver_TXData 0070                              drv_write@reg 004B  
              ??_TMR2_SetInterruptHandler 0033                            _LED_readConfig 191E  
        _do_I2C_DO_ADDRESS_NACK$intlevel0 18F7                        __end_of_TMR0_RANGE 2A47  
                      __end_of_TMR2_RANGE 2A44                    ?i1_i2c1_driver_sendACK 0070  
                              doRelMove@j 00CF                    __size_ofi1_returnReset 0002  
                                 ___awdiv 1DFD                                   ___ftadd 0EE6  
                                 ___lldiv 1EA1                 __size_ofi1_mssp1_clearIRQ 0003  
                         __size_of___wmul 001C                                   ___ftmul 0D23  
                                 ___llmod 1B26                                   ___fttol 0879  
                   ??_TMR0_Write8bitTimer 0070                           __size_of_doMove 0089  
                  ?i1_i2c1_driver_restart 0070                          ?_TMR2_WriteTimer 0070  
                       ??_do_I2C_TX_EMPTY 0031                       ?_i2c1_driver_isNACK 0070  
                                 _cmdRead 0160                    ?i1_i2c1_driver_startRX 0070  
                              ??___awtoft 003C                                ??___ftpack 0036  
                 __end_ofi1_do_I2C_DO_ACK 238E                                   __ptext1 04B7  
                                 __ptext2 1CC8                                   __ptext3 19D8  
                                 __ptext4 19A8                                   __ptext5 2622  
                                 __ptext6 1A3B                                   __ptext7 253B  
                                 __ptext8 16A1                                   __ptext9 251C  
             __size_ofi1_i2c1_driver_stop 0003                       __end_of_do_I2C_IDLE 2476  
                         __size_of_printf 0132                       __end_of_do_I2C_RCEN 2493  
                       __end_of_drv_reset 24A7                                   _execCmd 02EB  
                         __size_of_strchr 001A                           __size_of_strtok 004B  
                         __size_of_strspn 0030                         __end_of_drv_write 2800  
                                 _dpowers 2000                  ??_LED_setBrightnessRange 00A0  
                   _OSCILLATOR_Initialize 247F                                   _readIdx 0052  
                               _T2CONbits 001F                                   doMove@t 00C4  
                                 _isdigit 251C                            setActive@onOff 004B  
                       __end_of_setLEDPwr 26CE               __end_of_do_I2C_SEND_RESTART 242A  
                          ??_mssp1_setIRQ 0031                      ??_i2c1_driver_TXData 0031  
                ??_PIN_MANAGER_Initialize 0031                    i2c_masterOperation@ret 0039  
                      i1_do_I2C_SEND_STOP 2386                   __end_ofdrv2665@drv_sine 12DA  
                       __end_of_setActive 0AA1                           ?_mssp1_clearIRQ 0070  
              _do_I2C_SEND_STOP$intlevel0 242E                __size_ofi1_do_I2C_TX_EMPTY 002A  
               ??_TMR2_LoadPeriodRegister 0031                  _do_I2C_SEND_RESTART_READ 2412  
              __size_of_SYSTEM_Initialize 0015                                _setDrvGain 1B69  
                       setActive@probeNum 0049                                   clrloop0 23E3  
                              _setDrvPeak 255D                                   _stricmp 1A3B  
                                 _strcspn 19A8                                   _toupper 253B  
                    __size_of_returnReset 0006                      end_of_initialization 00A7  
                    drv_init@idle_timeout 00BA                      ??_i2c1_driver_isNACK 0031  
                              _second_top 015A                                getActive@i 004B  
             TMR0_Write8bitTimer@timerVal 0070                                ??_drv_init 00BC  
                              ??_drv_read 004B                              setLEDPwr@pwr 00B7  
                                 init_ram 23E8              __end_of_i2c1_driver_sendNACK 23A2  
                     ?i1_do_I2C_SEND_STOP 0070                                   initloop 23E9  
         __size_ofi1_i2c1_driver_sendNACK 0004                                ??_parseCmd 0046  
                  __end_of_LED_readConfig 1949                         _EUSART_Initialize 2608  
            __end_of_i2c1_driver_resetBus 0801                           ___lldiv@divisor 0031  
         __size_ofi1_i2c1_driver_resetBus 0001                           ___lldiv@counter 003E  
                      ?_EUSART_Initialize 0070                                   printf@c 00B6  
                                 printf@f 00A0                                _motionType 0055  
               _do_I2C_SEND_RESTART_WRITE 241A                         LEDsOn@topOrBottom 0048  
                   i1_do_I2C_SEND_RESTART 2382          __end_ofi1_do_I2C_DO_ADDRESS_NACK 27B8  
         __end_ofi1_do_I2C_SEND_ADR_WRITE 2402                       ??_EUSART_Initialize 0031  
                        ??_WDT_Initialize 0031                                 i1_i2c_ISR 26CE  
                    ??i1_do_I2C_SEND_STOP 0070                                   strspn@i 003C  
                              _returnStop 23CA                   __end_of_main_initialize 0C45  
                _TMR0_SetInterruptHandler 245B                               ?_fifo_check 0070  
                               _PORTCbits 000E                  __end_of_do_I2C_SEND_STOP 2432  
      __end_ofi1_do_I2C_SEND_RESTART_READ 237E                i1_do_I2C_SEND_RESTART_READ 237A  
                    __size_ofi1_do_I2C_RX 003F                      __size_ofi1_do_I2C_TX 004E  
                        ??_i2c_setAddress 0031                             ??_getMoveMask 00B7  
                   __size_of_EUSART_Write 0025                             i1_returnReset 2337  
                             returnStop@p 0031                          ?_getMotionStatus 0049  
                           ??_getPosition 004B                       LED_test_openshort@j 00C0  
                        __CFG_FEXTOSC$OFF 0000                            _calcHeaterPins 1712  
        __end_of_send_2bytes_latchless_IK 19A8                __end_of_LED_test_openshort 16A1  
                 TMR2_WriteTimer@timerVal 0070                                 _RXPPSbits 0E24  
               __end_of_EUSART_Initialize 2622            send_last_2bytes_IK@latch_start 0033  
             LED_setBrightnessRange@range 0044                            __end_of_LEDsOn 13ED  
        __end_ofi1_send_2length_2bytes_IK 25F0                           ?_LED_readConfig 00C3  
           __size_of_do_I2C_SEND_ADR_READ 000C                          ??i1_do_I2C_RESET 0070  
                             ___ftmul@exp 00A0                              ??_i2c_poller 0037  
                          _TMR0_StopTimer 2339                               _do_I2C_IDLE 246D  
                             _do_I2C_RCEN 2489                         __size_ofi1_LEDsOn 0021  
                 LED_testComm@topOrBottom 00C7      __end_of_TMR2_DefaultInterruptHandler 245B  
   __size_of_TMR2_DefaultInterruptHandler 0009              _TMR2_DefaultInterruptHandler 2452  
             __end_of_send_last_2bytes_IK 1F4C                             ?_startAbsMove 0049  
                          __end_of___wmul 2674                            __end_of_doMove 0989  
                            _EUSART_Write 182B                         __size_of_TMR0_ISR 000D  
                              ?i1_i2c_ISR 0070                         __size_of_TMR2_ISR 000D  
                      _mssp1_IRQisEnabled 2493                    i1_i2c1_driver_sendNACK 2376  
                        ?i1_do_I2C_DO_ACK 0070                    ?_OSCILLATOR_Initialize 0070  
            __size_of_do_I2C_DO_NACK_STOP 0008          TMR2_LoadPeriodRegister@periodVal 0031  
                          __end_of_printf 077C                        _mssp1_waitForEvent 24C7  
     __size_ofi1_send_2bytes_latchless_IK 0029                    i1_i2c1_driver_resetBus 182A  
                          __end_of_strchr 263C           __size_of_LED_setBrightnessRange 00DE  
                 ?_do_I2C_DO_NACK_RESTART 0070                            __end_of_strtok 1D13  
                          __end_of_strspn 1A08                         setHeaterPreTime@t 00BD  
                     start_initialization 0052                             ?_startRelMove 0049  
                       ?_setHeaterPreTime 00BD                       _i2c_busCollisionISR 2342  
                __size_of_TMR0_Initialize 0014           __size_of_PIN_MANAGER_Initialize 0033  
                     ?_mssp1_IRQisEnabled 0070                            ?i1_returnReset 0070  
                ?i1_i2c1_driver_getRXData 0070                    __end_of_calcHeaterPins 1789  
                   __size_of_LED_testComm 0077                            _TMR2_StopTimer 233C  
                           ??_EUSART_Read 0031       __end_ofi1_do_I2C_SEND_RESTART_WRITE 2382  
             i1_do_I2C_SEND_RESTART_WRITE 237E                              _first_bottom 0156  
                      ??_setHeaterPreTime 00BF                               ?_setDrvGain 00B7  
                             ?_setDrvPeak 0049                       ?_mssp1_waitForEvent 0070  
                           _second_bottom 014E                               putch@txData 0033  
                      __end_of_i2c_poller 24DD              __size_of_i2c1_driver_sendACK 0004  
                         i2c_open@address 0035                       __end_of_getMoveMask 1CC8  
                 i2c_setBuffer@bufferSize 0033                                  ??_LEDsOn 004A  
                 ??_i2c1_driver_getRXData 0031                     __size_of_drv_write_DC 0050  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                         ___llmod@divisor 003F                             ??_LED_getData 00B7  
                     __size_of_fifo_check 0010                           ___llmod@counter 0048  
                   __end_of_i2c_setBuffer 25C2                       __end_of_getPosition 18F3  
                       __size_of_i2c_open 004C                    __end_of_TMR0_StopTimer 233C  
                     _heater_post_time_ms 00EC                     i1_send_last_2bytes_IK 1C36  
     LED_setBrightnessRange@LED_configReg 0048                      ?_i2c_busCollisionISR 0070  
                        __CFG_LPBOREN$OFF 0000                      __end_of_mssp1_setIRQ 236F  
                            _drv_peak_val 016A                      ??_mssp1_IRQisEnabled 0031  
                        i1_do_I2C_TX$1132 0073                                LEDsPwr@pwr 0044  
                        ??_PMD_Initialize 0031                     __end_ofi1_do_I2C_IDLE 23BA  
                   __end_ofi1_do_I2C_RCEN 23CA                                  ??___wmul 0035  
                  ?i1_do_I2C_SEND_RESTART 0070                      ??_mssp1_waitForEvent 0031  
                                ??_doMove 00C3                          i1_mssp1_clearIRQ 2354  
                          ??_startAbsMove 004B                             ?_do_I2C_RESET 0070  
                             __pdataBANK0 005A                               __pdataBANK1 00EA  
                             __pdataBANK2 016A                               __pdataBANK4 0250  
               _do_I2C_TX_EMPTY$intlevel0 194D             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0031                         _setDrvPiezoOnTime 1FA5  
                            _LED_testComm 1789                                  ??_printf 00A8  
                 ??_i2c1_driver_setI2cISR 0033                          ?_main_initialize 0070  
                                ??_strchr 0035            i1send_2bytes_latchless_IK@data 0070  
          __end_of_do_I2C_DO_NACK_RESTART 244A                                  ??_strtok 0041  
                                ??_strspn 003A                      _i2c1_driver_sendNACK 239E  
                       __size_of___awtoft 0022                         __size_of___ftpack 0065  
                      ?_setDrvPiezoOnTime 00BD               __end_of_EUSART_Transmit_ISR 2692  
                          ??_startRelMove 004B                  i1_do_I2C_DO_ADDRESS_NACK 2794  
                  __end_of_TMR2_StopTimer 233F                            setDrvGain@gain 00B7  
                             __pbssCOMMON 007D                                  ?_LEDsPwr 0044  
                               ___latbits 0003                      _i2c1_driver_resetBus 0800  
                            _drv_write_DC 1DAD                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                             __pcstackBANK5 02A0  
                         fifo_check@reply 00B9         __size_ofi1_do_I2C_DO_NACK_RESTART 0004  
                __size_of_TMR2_Initialize 0012                                 _do_I2C_RX 1BAC  
               ?i1_do_I2C_DO_NACK_RESTART 0070                                 _do_I2C_TX 1F4C  
                         ?_calcHeaterPins 0070                   ??i1_do_I2C_DO_NACK_STOP 0070  
                               _doAbsMove 00AB                  __size_of_setHeaterToggle 007B  
                            _isdigit$2135 0031                       ??_setDrvPiezoOnTime 00BF  
                           ?_zeroPosition 0049                             LEDsOn@LEDpins 0044  
          __size_of_do_I2C_SEND_ADR_WRITE 000B             __size_ofi1_i2c1_driver_TXData 0005  
              __end_of_EUSART_Receive_ISR 2658             __end_of_do_I2C_SEND_ADR_WRITE 24C7  
              __size_of_EUSART_Initialize 001A                 __size_of_i2c1_driver_open 000A  
                              sin@coeff_a 2939                                sin@coeff_b 2981  
                            doMove@t_1560 00C6                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070           _do_I2C_SEND_ADR_WRITE$intlevel0 24C0  
        __size_ofi1_do_I2C_SEND_ADR_WRITE 0007                       __end_of_EUSART_Read 270E  
            __size_of_TMR0_Load8bitPeriod 0005                                 _doRelMove 0E04  
                         _do_I2C_TX_EMPTY 1949                         parseCmd@cmdString 0047  
                   _TMR0_InterruptHandler 0168                                 __pnvBANK0 005E  
                               __pnvBANK2 0166                    _LED_setBrightnessRange 0C45  
                 ??i1_i2c1_driver_sendACK 0070                  __size_of_TMR0_StartTimer 0003  
                       __size_of_drv_init 0063                         __size_of_drv_read 0046  
                         ?_TMR0_StopTimer 0070                     ??_i2c_busCollisionISR 0070  
           __size_ofi1_i2c1_driver_isNACK 000C                    _PIN_MANAGER_Initialize 1A08  
                 ??i1_i2c1_driver_restart 0070                                 _getActive 1AE5  
                       __size_of_parseCmd 0193                              setDrvPeak@pk 0049  
                     __end_of_drv_address 2A56                      EUSART_Read@readValue 0032  
                 ??i1_i2c1_driver_startRX 0070                            ??_do_I2C_RESET 0031  
                i1_send_2length_2bytes_IK 25D8                       __end_of_LED_getData 14AA  
                                ?___awdiv 0031                                 __ptext100 1712  
                               __ptext101 235A                                 __ptext110 2464  
                               __ptext102 2357                                 __ptext111 2570  
                               __ptext103 13CC                                 __ptext120 2354  
                               __ptext112 245B                                 __ptext104 25F0  
                               __ptext121 1AA6                                 __ptext113 240A  
                               __ptext105 1EF4                                 __ptext130 2386  
                               __ptext122 1D5F                                 __ptext114 1A08  
                               __ptext106 1978                                 __ptext131 2382  
                               __ptext123 2794                                 __ptext115 247F  
                               __ptext107 2598                                 __ptext140 234E  
                               __ptext132 237E                                 __ptext124 2392  
                               __ptext116 2608                                 __ptext108 2396  
                               __ptext141 2376                                 __ptext133 237A  
                               __ptext125 238E                                 __ptext117 26EE  
                               __ptext109 254B                                  ?___ftadd 00A6  
                               __ptext150 233F                                 __ptext142 182A  
                               __ptext134 23B5                                 __ptext126 238A  
                               __ptext151 2502                                 __ptext143 234B  
                               __ptext135 23F4                                 __ptext127 23C4  
                               __ptext119 26CE                                 __ptext160 1876  
                               __ptext152 2452                                 __ptext144 2337  
                               __ptext136 189F                                 __ptext128 23FB  
                               __ptext161 23A6                                 __ptext153 23AB  
                               __ptext145 2335                                 __ptext137 2351  
                               __ptext129 2402                                 __ptext162 2339  
                               __ptext154 233C                                 __ptext146 2348  
                               __ptext138 24DD                                 __ptext163 2674  
                               __ptext155 24F5                                 __ptext147 2345  
                               __ptext139 23B0                                 __ptext164 263C  
                               __ptext156 1A6F                                 __ptext148 2372  
                               __ptext157 272E                                 __ptext149 2342  
                               __ptext158 25D8                                 __ptext159 1C36  
             __end_of_i2c_masterOperation 27DC                                  ?___lldiv 0031  
                                ?___ftmul 003F                                  ?___llmod 003F  
                                ?___fttol 00AF                                 _commCheck 0AA1  
               __end_of_setDrvPiezoOnTime 2000                  ??_do_I2C_DO_ADDRESS_NACK 0031  
             _i2c1_driver_busCollisionISR 00E8                              _eusartRxHead 0058  
                     __size_of_setDrvGain 0043         __size_of_send_2bytes_latchless_IK 0030  
                            _eusartTxHead 007D                       __size_of_setDrvPeak 0013  
                            _eusartRxTail 0057                 ?_send_2bytes_latchless_IK 0031  
                            _eusartTxTail 0059                           doAbsMove@i_1575 00CE  
                         doAbsMove@i_1577 00CC                     __end_of_do_I2C_DO_ACK 243A  
                   _setLEDBrightnessRange 2692                               ??i1_i2c_ISR 0075  
            ??_INTERRUPT_InterruptManager 007C                                 __pswtext1 1800  
              ??_do_I2C_SEND_RESTART_READ 0031                     ?_i2c1_driver_sendNACK 0070  
         __end_ofi1_i2c1_driver_getRXData 2351                   _eusartTxBufferRemaining 005E  
                                ?_execCmd 0070                  ??i1_do_I2C_SEND_ADR_READ 0071  
                        ??_mssp1_clearIRQ 0031                                  _BAUD1CON 019F  
                         ??i1_returnReset 0071                                  ?_isdigit 0070  
                  LED_testComm@readResult 00CB                           ?_TMR2_StopTimer 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0008  
                               _first_top 0152                               _getMoveMask 1C7F  
                 send_last_2bytes_IK@data 0031                             ??_setMoveMask 00B7  
                   __end_of_drv_fifo_sine 10F4                                 _drv_reset 249D  
                       parseCmd@paramIter 0048                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                                 _drv_write 27DC  
                              ?_doAbsMove 0070                         _i2c1_driver_start 235D  
                          ??_zeroPosition 00B7               send_2length_2bytes_IK@data1 003C  
             send_2length_2bytes_IK@data2 003E                                 _setLEDPwr 26B0  
          send_last_2bytes_IK@topOrBottom 0034                                  ?_stricmp 0033  
                                ?_strcspn 0038                                  ?_toupper 0070  
                             _getPosition 18C9                   __size_ofi1_mssp1_setIRQ 0003  
                          __size_of_putch 0006                         _i2c_ISR$intlevel0 1854  
                      ?_i2c1_driver_start 0070                            _eusartRxBuffer 01A0  
                           zeroPosition@i 004B                                 _setActive 0A13  
                       ??_TMR0_Initialize 0033                            _eusartTxBuffer 01A8  
                          ___wmul@product 0035                                  _LATAbits 010C  
                                _LATBbits 010D                                  _LATCbits 010E  
                  ?i1_send_last_2bytes_IK 0070                                ?_doRelMove 0070  
                ??_send_2length_2bytes_IK 0043                       __size_of_returnStop 0006  
               i1send_last_2bytes_IK@data 0070                                 clear_ram0 23E2  
                                _PIE0bits 0090                                  _PIE1bits 0091  
                __size_of_TMR2_StartTimer 0003               __end_of_TMR0_Write8bitTimer 23AB  
                     ??_i2c1_driver_start 0031                                  i1_LEDsOn 272E  
     __size_of_INTERRUPT_InterruptManager 004C                                  _LEDpower 2A4D  
              ??_TMR0_SetInterruptHandler 0033                                  _PIR0bits 0010  
                                _PIR1bits 0011                                ?_getActive 0049  
                  _currentPositions_steps 0220                        _heater_pre_time_ms 00EE  
                LED_testComm@oldConfigReg 00CD                                  _SSP1CON1 0215  
                                _SSP1CON2 0216                                  _TMR0_ISR 24F5  
                                _TMR2_ISR 2502                                ?_commCheck 00D1  
                                _SSP1STAT 0214                __end_ofi1_i2c1_driver_stop 234B  
                            ??_fifo_check 004D                         ___wmul@multiplier 0031  
                       ?_do_I2C_SEND_STOP 0070               ?i1_do_I2C_SEND_RESTART_READ 0070  
                              printf@flag 00B4                                printf@prec 00AE  
          ??_TMR2_DefaultInterruptHandler 0071         __size_of_TMR2_SetInterruptHandler 0009  
                __size_of_TMR2_WriteTimer 0005                 __end_of_i2c1_driver_start 2360  
                           ??_returnReset 0032                        ??_do_I2C_SEND_STOP 0031  
               ?_TMR2_SetInterruptHandler 0031               __size_of_i2c1_driver_TXData 0006  
                              ?_drv_reset 0070                          __size_of_LEDsPwr 0064  
       __end_of_do_I2C_SEND_RESTART_WRITE 2422                                ?_drv_write 0049  
                             _EUSART_Read 26EE                   __end_of_do_I2C_TX_EMPTY 1978  
                       doAbsMove@allThere 00C8         send_2length_2bytes_IK@latch_start 0040  
     i1send_2length_2bytes_IK@latch_start 0024                                ?_setLEDPwr 00B7  
                        ??_LED_readConfig 004D                      __end_of_startAbsMove 25D8  
            __size_of_do_I2C_SEND_RESTART 0008               __size_of_i2c1_driver_isNACK 000D  
                 _do_I2C_DO_ACK$intlevel0 2436                                  _i2c_open 1D13  
                              ?_setActive 0049                       __end_of_setMoveMask 0879  
                           ?i1_returnStop 0070                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0033                               _drv_address 2A55  
                       ??_setHeaterToggle 00BB                       _do_I2C_DO_NACK_STOP 243A  
                             _LED_getData 1448                          __size_of_i2c_ISR 0026  
                      __end_of_fifo_check 253B                           i1LEDsOn@LEDpins 0027  
                           drv_write@data 0049                             drv_write_DC@i 00BF  
                           drv_write@buff 004C                      __end_of_startRelMove 2598  
                            ?_do_I2C_IDLE 0070                              ?_do_I2C_RCEN 0070  
                      _LED_test_openshort 1638                   ?i1_i2c1_driver_sendNACK 0070  
                 ??_OSCILLATOR_Initialize 0031                __size_of_setDrvPiezoOnTime 005B  
                  ?_setLEDBrightnessRange 00B7                         ??_TMR0_StartTimer 0031  
                     _i2c1_driver_sendACK 239A                          __size_of___awdiv 0052  
                        __size_of___ftadd 011A           __size_of_do_I2C_DO_ADDRESS_NACK 002B  
        i1send_last_2bytes_IK@latch_start 0072                          __size_of___lldiv 0053  
                        __size_of___ftmul 00E1                       i2c1_driver_TXData@d 0031  
                        __size_of___llmod 0043                          __size_of___fttol 0087  
                  ??_i2c1_driver_sendNACK 0031                                  ___awtoft 274F  
                 ?i1_i2c1_driver_resetBus 0070                                  ___ftpack 15D3  
        ??_i2c1_driver_setBusCollisionISR 0033           ?_i2c1_driver_setBusCollisionISR 0031  
                           ??i1_do_I2C_RX 0070                             ??i1_do_I2C_TX 0071  
      _do_I2C_SEND_RESTART_READ$intlevel0 2416                       _i2c1_driver_restart 2360  
                               parseCmd@p 004A                                 parseCmd@s 0045  
             __size_ofi1_do_I2C_SEND_STOP 0004                             LEDsPwr@pwrAll 00A0  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 2366  
                     ?_LED_test_openshort 00B7              __end_of_do_I2C_SEND_ADR_READ 24F5  
                  ??_i2c1_driver_resetBus 0031           __size_ofi1_do_I2C_SEND_ADR_READ 0008  
                    _demoHeaterToggle_bot 013E                          __size_of_execCmd 01CC  
                ?_TMR2_LoadPeriodRegister 0070                      _demoHeaterToggle_top 0142  
                              _T0CON0bits 0017                          __size_of_isdigit 000F  
                                _demoLong 005A                              _mssp1_setIRQ 236C  
                             ??_do_I2C_RX 0031                               ??_do_I2C_TX 0032  
                             ??_doAbsMove 02A0                                  __ptext10 2658  
                                __ptext11 0B6A                                  __ptext20 14AA  
                                __ptext12 150C                                  __ptext21 2584  
                                __ptext13 244A                                  __ptext30 23BF  
                                __ptext22 25C2                                  __ptext14 1D13  
                                __ptext31 1FA5                                  __ptext23 0801  
                                __ptext15 07F7                                  __ptext40 0A13  
                                __ptext32 0879                                  __ptext24 26B0  
                                __ptext16 2476                                  __ptext41 18C9  
                                __ptext33 0D23                                  __ptext25 156F  
                                __ptext17 24A7                                  __ptext50 1448  
                                __ptext42 1C7F                                  __ptext34 0EE6  
                                __ptext26 2692                                  __ptext18 249D  
                                __ptext51 0E04                                  __ptext43 2771  
                                __ptext35 274F                                  __ptext27 077C  
                                __ptext19 02EB                                  __ptext60 182B  
                                __ptext52 00AB                                  __ptext44 1AE5  
                                __ptext36 15D3                                  __ptext28 13ED  
                                __ptext61 1B26                                  __ptext53 0900  
                                __ptext45 0AA1                                  __ptext37 23BA  
                                __ptext29 1E4F                                  __ptext70 1BAC  
                                __ptext62 1EA1                                  __ptext54 1DAD  
                                __ptext46 1638                                  __ptext38 255D  
                                __ptext71 1F4C                                  __ptext63 25AD  
                                __ptext55 252B                                  __ptext47 1789  
                                __ptext39 1B69                                  __ptext80 2422  
                                __ptext72 18F3                                  __ptext64 27B8  
                                __ptext56 1BF0                                  __ptext48 0C45  
                                __ptext81 241A                                  __ptext73 2442  
                                __ptext65 2493                                  __ptext57 27DC  
                                __ptext49 191E                                  __ptext90 239E  
                                __ptext82 2412                                  __ptext74 243A  
                                __ptext66 24D2                                  __ptext58 064A  
                                __ptext91 0800                                  __ptext83 246D  
                                __ptext75 2432                                  __ptext67 24C7  
                                __ptext59 23DC                                  __ptext92 2366  
                                __ptext84 24B1                                  __ptext76 2489  
                                __ptext68 1850                                  __ptext93 23D0  
                                __ptext85 1949                                  __ptext77 24BC  
                                __ptext69 236F                                  __ptext94 23CA  
                                __ptext86 236C                                  __ptext78 24E9  
                                __ptext95 2363                                  __ptext87 250F  
                                __ptext79 242A                                  __ptext96 2360  
                                __ptext88 23D6                                  __ptext97 239A  
                                __ptext89 2369                                  __ptext98 235D  
                                __ptext99 1DFD                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                              ??_setDrvGain 00B9  
                            ??_setDrvPeak 004B                  __end_ofi1_mssp1_clearIRQ 2357  
            send_2bytes_latchless_IK@data 0031                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 24BC                       i1LEDsOn@topOrBottom 002B  
                        __size_of_stricmp 0034                          __size_of_strcspn 0030  
                        __size_of_toupper 0010                            ??i1_returnStop 0071  
                 i1_do_I2C_SEND_ADR_WRITE 23FB                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 23D6                                  _drv_init 150C  
                                _drv_read 1BF0                                  _drv_sine 12DA  
                        _i2c1_driver_open 24A7                          _i2c1_driver_stop 2363  
                           __size_of_atoi 0071                             __size_of_main 008A  
                    ?_i2c1_driver_startRX 0070                                  _errorOut 0162  
                    ??_LED_test_openshort 00BB                                  _readdata 01C5  
          __size_of_i2c1_driver_getRXData 0003                               ??_doRelMove 00C8  
           __end_of_i2c1_driver_getRXData 236C                                  _parseCmd 04B7  
         __size_of_send_2length_2bytes_IK 0018      __end_of_TMR0_DefaultInterruptHandler 1AA6  
   __size_of_TMR0_DefaultInterruptHandler 0037              _TMR0_DefaultInterruptHandler 1A6F  
                __size_of_getMotionStatus 0023                 __size_of_setHeaterPreTime 005B  
                 ??i1_do_I2C_SEND_RESTART 0070          __size_ofi1_i2c1_driver_getRXData 0003  
                                _moveMask 004E                   i2c_masterOperation@read 0038  
                             ??_getActive 00B7                                _RC1STAbits 019D  
    __size_ofi1_do_I2C_SEND_RESTART_WRITE 0004            __end_ofi1_i2c1_driver_sendNACK 237A  
                              _RB5PPSbits 0E9D                          setMoveMask@onOff 004B  
                              _RB6PPSbits 0E9E                                  int$flags 007E  
              ??i1_do_I2C_DO_ADDRESS_NACK 0070                                _RB7PPSbits 0E9F  
                                atoi@sign 003B                               ??_commCheck 00D3  
        __end_ofi1_do_I2C_DO_NACK_RESTART 2396                         _LED_configReg_bot 0146  
          __end_ofi1_i2c1_driver_resetBus 182B                      __end_of_zeroPosition 150C  
                       _LED_configReg_top 014A                         ??_TMR2_StartTimer 0031  
      __end_of_INTERRUPT_InterruptManager 0050                _INTERRUPT_InterruptManager 0004  
                               printf@val 00B0                              _SSP1STATbits 0214  
                      __end_of_setDrvGain 1BAC          __end_of_do_I2C_SEND_RESTART_READ 241A  
                      __end_of_setDrvPeak 2570                              ??_returnStop 0032  
                                execCmd@s 00D6                     ??_do_I2C_DO_NACK_STOP 0031  
                        ??_calcHeaterPins 0031                       _TMR0_Load8bitPeriod 23BA  
               mssp1_waitForEvent@timeout 0031            __size_of_i2c1_driver_setI2cISR 0009  
           __end_of_i2c1_driver_setI2cISR 0800                                _INTCONbits 000B  
            __size_of_send_last_2bytes_IK 0058                               _NVMCON1bits 0895  
              __size_of_i2c1_driver_start 0003                               ??_drv_reset 00B7  
                             _setMoveMask 0801                       __end_ofi1_do_I2C_RX 1AE5  
                          __pstringtext10 2939                            __pstringtext11 2981  
                          __pstringtext20 28C6                            __pstringtext12 2800  
                     __end_ofi1_do_I2C_TX 1DAD                            __pstringtext21 28D7  
                          __pstringtext13 281F                            __pstringtext30 2974  
                          __pstringtext22 28E8                            __pstringtext14 283D  
                          __pstringtext31 298D                            __pstringtext23 28F9  
                          __pstringtext15 2859                            __pstringtext40 29E1  
                          __pstringtext32 2999                            __pstringtext24 2909  
                          __pstringtext16 2873                            __pstringtext41 29E9  
                          __pstringtext33 29A4                            __pstringtext25 2919  
                          __pstringtext17 288C                            __pstringtext50 2A23  
                          __pstringtext42 29F1                            __pstringtext34 29AF  
                          __pstringtext26 2929                            __pstringtext18 28A3  
                          __pstringtext51 2A28                            __pstringtext43 29F9  
                          __pstringtext35 29B8                            __pstringtext27 2948  
                          __pstringtext19 28B5                            __pstringtext60 2A51  
                          __pstringtext52 2A2D                            __pstringtext44 2A01  
                          __pstringtext36 29C1                            __pstringtext28 2957  
                          __pstringtext61 2A53                            __pstringtext53 2A31  
                          __pstringtext45 2A08                            __pstringtext37 29C9  
                          __pstringtext29 2966                            __pstringtext62 0000  
                          __pstringtext54 2A35                            __pstringtext46 2A0F  
                          __pstringtext38 29D1                            __pstringtext55 2A39  
                          __pstringtext47 2A14                            __pstringtext39 29D9  
                          __pstringtext56 2A3D                            __pstringtext48 2A19  
                          __pstringtext57 2A47                            __pstringtext49 2A1E  
                          __pstringtext58 2A4A                            __pstringtext59 2A4F  
                                isdigit@c 0032                               ??_drv_write 004A  
                __size_ofi1_do_I2C_DO_ACK 0004                               ??_setLEDPwr 004E  
                   ??_i2c1_driver_sendACK 0031                          ?_do_I2C_TX_EMPTY 0070  
                          i1_mssp1_setIRQ 2351                   __size_of_WDT_Initialize 0004  
                  _do_I2C_DO_ADDRESS_NACK 18F3            __size_ofi1_do_I2C_DO_NACK_STOP 0004  
                                intlevel1 0000             __end_ofi1_do_I2C_DO_NACK_STOP 2392  
                  _do_I2C_RESET$intlevel0 24B5                          ??_TMR0_StopTimer 0070  
                   ??_i2c1_driver_restart 0031                         ??_TMR2_WriteTimer 0070  
                 ?_LED_setBrightnessRange 0044                               ??_setActive 00B7  
                               strchr@chr 0033                     ??_i2c1_driver_startRX 0031  
                               strchr@ptr 0031                ??i1_send_2length_2bytes_IK 007B  
                        ___lldiv@dividend 0035                   ?_PIN_MANAGER_Initialize 0070  
                 __size_of_i2c_setAddress 0008                      ?_TMR0_Load8bitPeriod 0070  
            ??i1_send_2bytes_latchless_IK 0072                    i1_do_I2C_SEND_ADR_READ 2402  
                       __CFG_CLKOUTEN$OFF 0000                                 stricmp@s1 0038  
                               stricmp@s2 0033                                 strcspn@s1 003E  
                               strcspn@s2 0038                        __end_of_returnStop 23D0  
                            getMoveMask@i 004B       __size_ofi1_do_I2C_SEND_RESTART_READ 0004  
          __size_ofi1_i2c1_driver_sendACK 0004             ?_TMR0_DefaultInterruptHandler 0070  
           __end_ofi1_i2c1_driver_sendACK 2376               __size_of_mssp1_IRQisEnabled 000A  
          __size_ofi1_i2c1_driver_restart 0003                                  printf@ap 00B5  
           __end_ofi1_i2c1_driver_restart 2348                        _EUSART_Receive_ISR 263C  
             __size_of_mssp1_waitForEvent 000B            __size_ofi1_i2c1_driver_startRX 0003  
            __end_ofi1_i2c1_driver_TXData 23B5             __end_ofi1_i2c1_driver_startRX 234E  
                        ??_TMR2_StopTimer 0070           __end_of_TMR2_LoadPeriodRegister 23C4  
                           __pstringtext1 1000                             __pstringtext2 11E8  
                           __pstringtext3 12DA                             __pstringtext4 2000  
                           __pstringtext5 2A41                             __pstringtext6 2A44  
                           __pstringtext7 2A4D                             __pstringtext8 2A55  
                           __pstringtext9 10F4                   __size_ofi1_do_I2C_RESET 0007  
                  _send_2length_2bytes_IK 25F0                       ?_EUSART_Receive_ISR 0070  
            __end_ofi1_i2c1_driver_isNACK 24E9                                _TMR0_RANGE 2A44  
                        ___lldiv@quotient 003A                           _TMR0_Initialize 2570  
                                stricmp@r 0037                                _TMR2_RANGE 2A41  
                                strcspn@i 003C         send_2length_2bytes_IK@topOrBottom 0041  
     i1send_2length_2bytes_IK@topOrBottom 0025                    __size_of_i2c_setBuffer 0015  
                            ?_getMoveMask 0049                     __size_of_startAbsMove 0016  
                                toupper@c 0032                    __end_ofi1_mssp1_setIRQ 2354  
                             _returnReset 23D0                                  strtok@s1 0044  
                                strtok@s2 003F                                  strspn@s1 003E  
                                strspn@s2 0038          _do_I2C_DO_NACK_RESTART$intlevel0 2446  
                                strtok@sp 0054                 ??i1_do_I2C_SEND_ADR_WRITE 0071  
                __size_of_main_initialize 00DB            __end_of_LED_setBrightnessRange 0D23  
                            getPosition@a 0049                              ?_getPosition 0049  
                  __size_ofi1_do_I2C_IDLE 0005                    __size_ofi1_do_I2C_RCEN 0006  
                 ??i1_send_last_2bytes_IK 0075                        EUSART_Write@txData 0032  
            __size_of_EUSART_Transmit_ISR 001E            __end_of_PIN_MANAGER_Initialize 1A3B  
             __end_of_i2c_busCollisionISR 2345                     __size_of_startRelMove 0014  
                   ??_TMR0_Load8bitPeriod 0031                       setMoveMask@probeNum 0049  
                    ??_EUSART_Receive_ISR 0070                     _TMR2_InterruptHandler 0166  
                   _do_I2C_SEND_ADR_WRITE 24BC                      _do_I2C_SEND_ADR_READ 24E9  
