

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jul 05 11:09:40 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	stringtext12,global,class=STRCODE,delta=2
    23                           	psect	stringtext13,global,class=STRCODE,delta=2
    24                           	psect	stringtext14,global,class=STRCODE,delta=2
    25                           	psect	stringtext15,global,class=STRCODE,delta=2
    26                           	psect	stringtext16,global,class=STRCODE,delta=2
    27                           	psect	stringtext17,global,class=STRCODE,delta=2
    28                           	psect	stringtext18,global,class=STRCODE,delta=2
    29                           	psect	stringtext19,global,class=STRCODE,delta=2
    30                           	psect	stringtext20,global,class=STRCODE,delta=2
    31                           	psect	stringtext21,global,class=STRCODE,delta=2
    32                           	psect	stringtext22,global,class=STRCODE,delta=2
    33                           	psect	stringtext23,global,class=STRCODE,delta=2
    34                           	psect	stringtext24,global,class=STRCODE,delta=2
    35                           	psect	stringtext25,global,class=STRCODE,delta=2
    36                           	psect	stringtext26,global,class=STRCODE,delta=2
    37                           	psect	stringtext27,global,class=STRCODE,delta=2
    38                           	psect	stringtext28,global,class=STRCODE,delta=2
    39                           	psect	stringtext29,global,class=STRCODE,delta=2
    40                           	psect	stringtext30,global,class=STRCODE,delta=2
    41                           	psect	stringtext31,global,class=STRCODE,delta=2
    42                           	psect	stringtext32,global,class=STRCODE,delta=2
    43                           	psect	stringtext33,global,class=STRCODE,delta=2
    44                           	psect	stringtext34,global,class=STRCODE,delta=2
    45                           	psect	stringtext35,global,class=STRCODE,delta=2
    46                           	psect	stringtext36,global,class=STRCODE,delta=2
    47                           	psect	stringtext37,global,class=STRCODE,delta=2
    48                           	psect	stringtext38,global,class=STRCODE,delta=2
    49                           	psect	stringtext39,global,class=STRCODE,delta=2
    50                           	psect	stringtext40,global,class=STRCODE,delta=2
    51                           	psect	stringtext41,global,class=STRCODE,delta=2
    52                           	psect	stringtext42,global,class=STRCODE,delta=2
    53                           	psect	stringtext43,global,class=STRCODE,delta=2
    54                           	psect	stringtext44,global,class=STRCODE,delta=2
    55                           	psect	stringtext45,global,class=STRCODE,delta=2
    56                           	psect	stringtext46,global,class=STRCODE,delta=2
    57                           	psect	stringtext47,global,class=STRCODE,delta=2
    58                           	psect	stringtext48,global,class=STRCODE,delta=2
    59                           	psect	stringtext49,global,class=STRCODE,delta=2
    60                           	psect	stringtext50,global,class=STRCODE,delta=2
    61                           	psect	stringtext51,global,class=STRCODE,delta=2
    62                           	psect	stringtext52,global,class=STRCODE,delta=2
    63                           	psect	stringtext53,global,class=STRCODE,delta=2
    64                           	psect	stringtext54,global,class=STRCODE,delta=2
    65                           	psect	stringtext55,global,class=STRCODE,delta=2
    66                           	psect	stringtext56,global,class=STRCODE,delta=2
    67                           	psect	stringtext57,global,class=STRCODE,delta=2
    68                           	psect	stringtext58,global,class=STRCODE,delta=2
    69                           	psect	stringtext59,global,class=STRCODE,delta=2
    70                           	psect	stringtext60,global,class=STRCODE,delta=2
    71                           	psect	stringtext61,global,class=STRCODE,delta=2
    72                           	psect	cinit,global,class=CODE,merge=1,delta=2
    73                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    74                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    75                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    76                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    77                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    78                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    79                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    80                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    81                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    82                           	psect	inittext,global,class=CODE,delta=2
    83                           	psect	clrtext,global,class=CODE,delta=2
    84                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    85                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    86                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    87                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    88                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    89                           	psect	text1,local,class=CODE,merge=1,delta=2
    90                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text11,local,class=CODE,merge=1,delta=2
   100                           	psect	text12,local,class=CODE,merge=1,delta=2
   101                           	psect	text13,local,class=CODE,merge=1,delta=2
   102                           	psect	text14,local,class=CODE,merge=1,delta=2
   103                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text17,local,class=CODE,merge=1,delta=2
   106                           	psect	text18,local,class=CODE,merge=1,delta=2
   107                           	psect	text19,local,class=CODE,merge=1,delta=2
   108                           	psect	swtext1,local,class=CONST,delta=2
   109                           	psect	text20,local,class=CODE,merge=1,delta=2
   110                           	psect	text21,local,class=CODE,merge=1,delta=2
   111                           	psect	text22,local,class=CODE,merge=1,delta=2
   112                           	psect	text23,local,class=CODE,merge=1,delta=2
   113                           	psect	text24,local,class=CODE,merge=1,delta=2
   114                           	psect	text25,local,class=CODE,merge=1,delta=2
   115                           	psect	text26,local,class=CODE,merge=1,delta=2
   116                           	psect	text27,local,class=CODE,merge=1,delta=2
   117                           	psect	text28,local,class=CODE,merge=1,delta=2
   118                           	psect	text29,local,class=CODE,merge=1,delta=2
   119                           	psect	text30,local,class=CODE,merge=1,delta=2
   120                           	psect	text31,local,class=CODE,merge=1,delta=2
   121                           	psect	text32,local,class=CODE,merge=1,delta=2
   122                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
   123                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
   124                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
   125                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
   126                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
   127                           	psect	text38,local,class=CODE,merge=1,delta=2
   128                           	psect	text39,local,class=CODE,merge=1,delta=2
   129                           	psect	text40,local,class=CODE,merge=1,delta=2
   130                           	psect	text41,local,class=CODE,merge=1,delta=2
   131                           	psect	text42,local,class=CODE,merge=1,delta=2
   132                           	psect	text43,local,class=CODE,merge=1,delta=2
   133                           	psect	text44,local,class=CODE,merge=1,delta=2
   134                           	psect	text45,local,class=CODE,merge=1,delta=2
   135                           	psect	text46,local,class=CODE,merge=1,delta=2
   136                           	psect	text47,local,class=CODE,merge=1,delta=2
   137                           	psect	text48,local,class=CODE,merge=1,delta=2
   138                           	psect	text49,local,class=CODE,merge=1,delta=2
   139                           	psect	text50,local,class=CODE,merge=1,delta=2
   140                           	psect	text51,local,class=CODE,merge=1,delta=2
   141                           	psect	text52,local,class=CODE,merge=1,delta=2
   142                           	psect	text53,local,class=CODE,merge=1,delta=2
   143                           	psect	text54,local,class=CODE,merge=1,delta=2
   144                           	psect	text55,local,class=CODE,merge=1,delta=2
   145                           	psect	text56,local,class=CODE,merge=1,delta=2
   146                           	psect	text57,local,class=CODE,merge=1,delta=2
   147                           	psect	text58,local,class=CODE,merge=1,delta=2
   148                           	psect	text59,local,class=CODE,merge=1,delta=2
   149                           	psect	text60,local,class=CODE,merge=1,delta=2
   150                           	psect	text61,local,class=CODE,merge=1,delta=2
   151                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
   152                           	psect	text63,local,class=CODE,merge=1,delta=2,group=2
   153                           	psect	text64,local,class=CODE,merge=1,delta=2
   154                           	psect	text65,local,class=CODE,merge=1,delta=2
   155                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
   156                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
   157                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
   158                           	psect	text69,local,class=CODE,merge=1,delta=2
   159                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
   160                           	psect	text71,local,class=CODE,merge=1,delta=2
   161                           	psect	text72,local,class=CODE,merge=1,delta=2
   162                           	psect	text73,local,class=CODE,merge=1,delta=2
   163                           	psect	text74,local,class=CODE,merge=1,delta=2
   164                           	psect	text75,local,class=CODE,merge=1,delta=2
   165                           	psect	text76,local,class=CODE,merge=1,delta=2
   166                           	psect	text77,local,class=CODE,merge=1,delta=2
   167                           	psect	text78,local,class=CODE,merge=1,delta=2
   168                           	psect	text79,local,class=CODE,merge=1,delta=2
   169                           	psect	text80,local,class=CODE,merge=1,delta=2
   170                           	psect	text81,local,class=CODE,merge=1,delta=2
   171                           	psect	text82,local,class=CODE,merge=1,delta=2
   172                           	psect	text83,local,class=CODE,merge=1,delta=2
   173                           	psect	text84,local,class=CODE,merge=1,delta=2
   174                           	psect	text85,local,class=CODE,merge=1,delta=2
   175                           	psect	text86,local,class=CODE,merge=1,delta=2
   176                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   177                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   178                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   179                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   180                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   181                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   182                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   183                           	psect	text94,local,class=CODE,merge=1,delta=2
   184                           	psect	text95,local,class=CODE,merge=1,delta=2
   185                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   186                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   187                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
   188                           	psect	text99,local,class=CODE,merge=1,inline,delta=2
   189                           	psect	text100,local,class=CODE,merge=1,delta=2,group=2
   190                           	psect	text101,local,class=CODE,merge=1,delta=2
   191                           	psect	text102,local,class=CODE,merge=1,delta=2
   192                           	psect	text103,local,class=CODE,merge=1,delta=2
   193                           	psect	text104,local,class=CODE,merge=1,delta=2
   194                           	psect	text105,local,class=CODE,merge=1,delta=2
   195                           	psect	text106,local,class=CODE,merge=1,delta=2
   196                           	psect	text107,local,class=CODE,merge=1,delta=2
   197                           	psect	text108,local,class=CODE,merge=1,delta=2
   198                           	psect	text109,local,class=CODE,merge=1,delta=2
   199                           	psect	text110,local,class=CODE,merge=1,delta=2
   200                           	psect	text111,local,class=CODE,merge=1,delta=2
   201                           	psect	text112,local,class=CODE,merge=1,delta=2
   202                           	psect	text113,local,class=CODE,merge=1,delta=2
   203                           	psect	text114,local,class=CODE,merge=1,delta=2
   204                           	psect	text115,local,class=CODE,merge=1,delta=2
   205                           	psect	text116,local,class=CODE,merge=1,delta=2
   206                           	psect	text117,local,class=CODE,merge=1,delta=2
   207                           	psect	text118,local,class=CODE,merge=1,delta=2
   208                           	psect	intentry,global,class=CODE,delta=2
   209                           	psect	text120,local,class=CODE,merge=1,delta=2
   210                           	psect	text121,local,class=CODE,merge=1,inline,delta=2
   211                           	psect	text122,local,class=CODE,merge=1,delta=2
   212                           	psect	text123,local,class=CODE,merge=1,delta=2
   213                           	psect	text124,local,class=CODE,merge=1,delta=2
   214                           	psect	text125,local,class=CODE,merge=1,delta=2
   215                           	psect	text126,local,class=CODE,merge=1,delta=2
   216                           	psect	text127,local,class=CODE,merge=1,delta=2
   217                           	psect	text128,local,class=CODE,merge=1,delta=2
   218                           	psect	text129,local,class=CODE,merge=1,delta=2
   219                           	psect	text130,local,class=CODE,merge=1,delta=2
   220                           	psect	text131,local,class=CODE,merge=1,delta=2
   221                           	psect	text132,local,class=CODE,merge=1,delta=2
   222                           	psect	text133,local,class=CODE,merge=1,delta=2
   223                           	psect	text134,local,class=CODE,merge=1,delta=2
   224                           	psect	text135,local,class=CODE,merge=1,delta=2
   225                           	psect	text136,local,class=CODE,merge=1,delta=2
   226                           	psect	text137,local,class=CODE,merge=1,delta=2
   227                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   228                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   229                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   230                           	psect	text141,local,class=CODE,merge=1,inline,delta=2
   231                           	psect	text142,local,class=CODE,merge=1,inline,delta=2
   232                           	psect	text143,local,class=CODE,merge=1,inline,delta=2
   233                           	psect	text144,local,class=CODE,merge=1,inline,delta=2
   234                           	psect	text145,local,class=CODE,merge=1,delta=2
   235                           	psect	text146,local,class=CODE,merge=1,delta=2
   236                           	psect	text147,local,class=CODE,merge=1,inline,delta=2
   237                           	psect	text148,local,class=CODE,merge=1,inline,delta=2
   238                           	psect	text149,local,class=CODE,merge=1,inline,delta=2
   239                           	psect	text150,local,class=CODE,merge=1,delta=2
   240                           	psect	text151,local,class=CODE,merge=1,inline,delta=2
   241                           	psect	text152,local,class=CODE,merge=1,delta=2
   242                           	psect	text153,local,class=CODE,merge=1,delta=2
   243                           	psect	text154,local,class=CODE,merge=1,delta=2
   244                           	psect	text155,local,class=CODE,merge=1,delta=2
   245                           	psect	text156,local,class=CODE,merge=1,delta=2
   246                           	psect	text157,local,class=CODE,merge=1,delta=2
   247                           	psect	text158,local,class=CODE,merge=1,delta=2
   248                           	psect	text159,local,class=CODE,merge=1,delta=2
   249                           	psect	text160,local,class=CODE,merge=1,delta=2
   250                           	psect	text161,local,class=CODE,merge=1,delta=2
   251                           	psect	text162,local,class=CODE,merge=1,delta=2
   252                           	psect	text163,local,class=CODE,merge=1,delta=2
   253                           	psect	text164,local,class=CODE,merge=1,delta=2
   254                           	psect	text165,local,class=CODE,merge=1,delta=2
   255                           	dabs	1,0xCA0,32
   256                           	dabs	1,0xC30,64
   257                           	dabs	1,0x2790,0,_currentPositions_steps
   258                           	dabs	1,0x7E,2
   259  0000                     
   260                           ; Version 1.45
   261                           ; Generated 16/11/2017 GMT
   262                           ; 
   263                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   264                           ; All rights reserved.
   265                           ; 
   266                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   267                           ; 
   268                           ; Redistribution and use in source and binary forms, with or without modification, are
   269                           ; permitted provided that the following conditions are met:
   270                           ; 
   271                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   272                           ;        conditions and the following disclaimer.
   273                           ; 
   274                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   275                           ;        of conditions and the following disclaimer in the documentation and/or other
   276                           ;        materials provided with the distribution.
   277                           ; 
   278                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   279                           ;        software without specific prior written permission.
   280                           ; 
   281                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   282                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   283                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   284                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   285                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   286                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   287                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   288                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   289                           ; 
   290                           ; 
   291                           ; Code-generator required, PIC16F18346 Definitions
   292                           ; 
   293                           ; SFR Addresses
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0097                     	;# 
   337  009B                     	;# 
   338  009B                     	;# 
   339  009C                     	;# 
   340  009D                     	;# 
   341  009E                     	;# 
   342  009F                     	;# 
   343  010C                     	;# 
   344  010D                     	;# 
   345  010E                     	;# 
   346  0111                     	;# 
   347  0112                     	;# 
   348  0113                     	;# 
   349  0114                     	;# 
   350  0115                     	;# 
   351  0116                     	;# 
   352  0117                     	;# 
   353  0118                     	;# 
   354  0119                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  018E                     	;# 
   358  0197                     	;# 
   359  0199                     	;# 
   360  0199                     	;# 
   361  0199                     	;# 
   362  019A                     	;# 
   363  019A                     	;# 
   364  019A                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019C                     	;# 
   371  019C                     	;# 
   372  019C                     	;# 
   373  019D                     	;# 
   374  019D                     	;# 
   375  019D                     	;# 
   376  019E                     	;# 
   377  019E                     	;# 
   378  019E                     	;# 
   379  019F                     	;# 
   380  019F                     	;# 
   381  019F                     	;# 
   382  019F                     	;# 
   383  019F                     	;# 
   384  020C                     	;# 
   385  020D                     	;# 
   386  020E                     	;# 
   387  0211                     	;# 
   388  0211                     	;# 
   389  0212                     	;# 
   390  0212                     	;# 
   391  0213                     	;# 
   392  0213                     	;# 
   393  0214                     	;# 
   394  0214                     	;# 
   395  0215                     	;# 
   396  0215                     	;# 
   397  0215                     	;# 
   398  0215                     	;# 
   399  0216                     	;# 
   400  0216                     	;# 
   401  0217                     	;# 
   402  0217                     	;# 
   403  0219                     	;# 
   404  021A                     	;# 
   405  021B                     	;# 
   406  021C                     	;# 
   407  021D                     	;# 
   408  021D                     	;# 
   409  021E                     	;# 
   410  021F                     	;# 
   411  028C                     	;# 
   412  028D                     	;# 
   413  028E                     	;# 
   414  0291                     	;# 
   415  0291                     	;# 
   416  0292                     	;# 
   417  0293                     	;# 
   418  0294                     	;# 
   419  0295                     	;# 
   420  0295                     	;# 
   421  0296                     	;# 
   422  0297                     	;# 
   423  0298                     	;# 
   424  029F                     	;# 
   425  030C                     	;# 
   426  030D                     	;# 
   427  030E                     	;# 
   428  0311                     	;# 
   429  0311                     	;# 
   430  0312                     	;# 
   431  0313                     	;# 
   432  0314                     	;# 
   433  0315                     	;# 
   434  0315                     	;# 
   435  0316                     	;# 
   436  0317                     	;# 
   437  0318                     	;# 
   438  038C                     	;# 
   439  038D                     	;# 
   440  038E                     	;# 
   441  0391                     	;# 
   442  0392                     	;# 
   443  0393                     	;# 
   444  0394                     	;# 
   445  0395                     	;# 
   446  0396                     	;# 
   447  0397                     	;# 
   448  0398                     	;# 
   449  0399                     	;# 
   450  039A                     	;# 
   451  039C                     	;# 
   452  039D                     	;# 
   453  039E                     	;# 
   454  039F                     	;# 
   455  0411                     	;# 
   456  0411                     	;# 
   457  0412                     	;# 
   458  0413                     	;# 
   459  0414                     	;# 
   460  0415                     	;# 
   461  0416                     	;# 
   462  0417                     	;# 
   463  0418                     	;# 
   464  0418                     	;# 
   465  0419                     	;# 
   466  041A                     	;# 
   467  041B                     	;# 
   468  041C                     	;# 
   469  041D                     	;# 
   470  041E                     	;# 
   471  041F                     	;# 
   472  0498                     	;# 
   473  0498                     	;# 
   474  0499                     	;# 
   475  049A                     	;# 
   476  049B                     	;# 
   477  049B                     	;# 
   478  049C                     	;# 
   479  049D                     	;# 
   480  049E                     	;# 
   481  049F                     	;# 
   482  0617                     	;# 
   483  0618                     	;# 
   484  0619                     	;# 
   485  0619                     	;# 
   486  061A                     	;# 
   487  061B                     	;# 
   488  061C                     	;# 
   489  061C                     	;# 
   490  061F                     	;# 
   491  0691                     	;# 
   492  0692                     	;# 
   493  0693                     	;# 
   494  0694                     	;# 
   495  0695                     	;# 
   496  0696                     	;# 
   497  0697                     	;# 
   498  0698                     	;# 
   499  0699                     	;# 
   500  0711                     	;# 
   501  0712                     	;# 
   502  0713                     	;# 
   503  0714                     	;# 
   504  0715                     	;# 
   505  0716                     	;# 
   506  0717                     	;# 
   507  0718                     	;# 
   508  0719                     	;# 
   509  0891                     	;# 
   510  0891                     	;# 
   511  0891                     	;# 
   512  0891                     	;# 
   513  0891                     	;# 
   514  0891                     	;# 
   515  0892                     	;# 
   516  0892                     	;# 
   517  0892                     	;# 
   518  0893                     	;# 
   519  0893                     	;# 
   520  0893                     	;# 
   521  0893                     	;# 
   522  0893                     	;# 
   523  0893                     	;# 
   524  0894                     	;# 
   525  0894                     	;# 
   526  0894                     	;# 
   527  0895                     	;# 
   528  0895                     	;# 
   529  0895                     	;# 
   530  0896                     	;# 
   531  0896                     	;# 
   532  0896                     	;# 
   533  089B                     	;# 
   534  0911                     	;# 
   535  0912                     	;# 
   536  0913                     	;# 
   537  0914                     	;# 
   538  0915                     	;# 
   539  0916                     	;# 
   540  0918                     	;# 
   541  0919                     	;# 
   542  091A                     	;# 
   543  091B                     	;# 
   544  091C                     	;# 
   545  091D                     	;# 
   546  091E                     	;# 
   547  091F                     	;# 
   548  0E0F                     	;# 
   549  0E10                     	;# 
   550  0E11                     	;# 
   551  0E12                     	;# 
   552  0E13                     	;# 
   553  0E14                     	;# 
   554  0E15                     	;# 
   555  0E16                     	;# 
   556  0E17                     	;# 
   557  0E18                     	;# 
   558  0E19                     	;# 
   559  0E1A                     	;# 
   560  0E1B                     	;# 
   561  0E1C                     	;# 
   562  0E1D                     	;# 
   563  0E1E                     	;# 
   564  0E1F                     	;# 
   565  0E20                     	;# 
   566  0E21                     	;# 
   567  0E22                     	;# 
   568  0E24                     	;# 
   569  0E25                     	;# 
   570  0E28                     	;# 
   571  0E29                     	;# 
   572  0E2A                     	;# 
   573  0E2B                     	;# 
   574  0E2C                     	;# 
   575  0E2D                     	;# 
   576  0E2E                     	;# 
   577  0E2F                     	;# 
   578  0E90                     	;# 
   579  0E91                     	;# 
   580  0E92                     	;# 
   581  0E94                     	;# 
   582  0E95                     	;# 
   583  0E9C                     	;# 
   584  0E9D                     	;# 
   585  0E9E                     	;# 
   586  0E9F                     	;# 
   587  0EA0                     	;# 
   588  0EA1                     	;# 
   589  0EA2                     	;# 
   590  0EA3                     	;# 
   591  0EA4                     	;# 
   592  0EA5                     	;# 
   593  0EA6                     	;# 
   594  0EA7                     	;# 
   595  0F0F                     	;# 
   596  0F10                     	;# 
   597  0F11                     	;# 
   598  0F12                     	;# 
   599  0F13                     	;# 
   600  0F14                     	;# 
   601  0F15                     	;# 
   602  0F16                     	;# 
   603  0F17                     	;# 
   604  0F18                     	;# 
   605  0F19                     	;# 
   606  0F1A                     	;# 
   607  0F1B                     	;# 
   608  0F1C                     	;# 
   609  0F1D                     	;# 
   610  0F1E                     	;# 
   611  0F1F                     	;# 
   612  0F20                     	;# 
   613  0F21                     	;# 
   614  0F22                     	;# 
   615  0F23                     	;# 
   616  0F24                     	;# 
   617  0F25                     	;# 
   618  0F26                     	;# 
   619  0F27                     	;# 
   620  0F28                     	;# 
   621  0F29                     	;# 
   622  0F2A                     	;# 
   623  0F2B                     	;# 
   624  0F2C                     	;# 
   625  0F2D                     	;# 
   626  0F2E                     	;# 
   627  0F2F                     	;# 
   628  0F30                     	;# 
   629  0F31                     	;# 
   630  0F32                     	;# 
   631  0F33                     	;# 
   632  0F34                     	;# 
   633  0F35                     	;# 
   634  0F36                     	;# 
   635  0F37                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  000D                     	;# 
   661  000E                     	;# 
   662  0010                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0013                     	;# 
   666  0014                     	;# 
   667  0015                     	;# 
   668  0015                     	;# 
   669  0016                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  0019                     	;# 
   675  001A                     	;# 
   676  001B                     	;# 
   677  001C                     	;# 
   678  001D                     	;# 
   679  001E                     	;# 
   680  001F                     	;# 
   681  008C                     	;# 
   682  008D                     	;# 
   683  008E                     	;# 
   684  0090                     	;# 
   685  0091                     	;# 
   686  0092                     	;# 
   687  0093                     	;# 
   688  0094                     	;# 
   689  0097                     	;# 
   690  009B                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  009F                     	;# 
   696  010C                     	;# 
   697  010D                     	;# 
   698  010E                     	;# 
   699  0111                     	;# 
   700  0112                     	;# 
   701  0113                     	;# 
   702  0114                     	;# 
   703  0115                     	;# 
   704  0116                     	;# 
   705  0117                     	;# 
   706  0118                     	;# 
   707  0119                     	;# 
   708  018C                     	;# 
   709  018D                     	;# 
   710  018E                     	;# 
   711  0197                     	;# 
   712  0199                     	;# 
   713  0199                     	;# 
   714  0199                     	;# 
   715  019A                     	;# 
   716  019A                     	;# 
   717  019A                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019B                     	;# 
   722  019B                     	;# 
   723  019C                     	;# 
   724  019C                     	;# 
   725  019C                     	;# 
   726  019D                     	;# 
   727  019D                     	;# 
   728  019D                     	;# 
   729  019E                     	;# 
   730  019E                     	;# 
   731  019E                     	;# 
   732  019F                     	;# 
   733  019F                     	;# 
   734  019F                     	;# 
   735  019F                     	;# 
   736  019F                     	;# 
   737  020C                     	;# 
   738  020D                     	;# 
   739  020E                     	;# 
   740  0211                     	;# 
   741  0211                     	;# 
   742  0212                     	;# 
   743  0212                     	;# 
   744  0213                     	;# 
   745  0213                     	;# 
   746  0214                     	;# 
   747  0214                     	;# 
   748  0215                     	;# 
   749  0215                     	;# 
   750  0215                     	;# 
   751  0215                     	;# 
   752  0216                     	;# 
   753  0216                     	;# 
   754  0217                     	;# 
   755  0217                     	;# 
   756  0219                     	;# 
   757  021A                     	;# 
   758  021B                     	;# 
   759  021C                     	;# 
   760  021D                     	;# 
   761  021D                     	;# 
   762  021E                     	;# 
   763  021F                     	;# 
   764  028C                     	;# 
   765  028D                     	;# 
   766  028E                     	;# 
   767  0291                     	;# 
   768  0291                     	;# 
   769  0292                     	;# 
   770  0293                     	;# 
   771  0294                     	;# 
   772  0295                     	;# 
   773  0295                     	;# 
   774  0296                     	;# 
   775  0297                     	;# 
   776  0298                     	;# 
   777  029F                     	;# 
   778  030C                     	;# 
   779  030D                     	;# 
   780  030E                     	;# 
   781  0311                     	;# 
   782  0311                     	;# 
   783  0312                     	;# 
   784  0313                     	;# 
   785  0314                     	;# 
   786  0315                     	;# 
   787  0315                     	;# 
   788  0316                     	;# 
   789  0317                     	;# 
   790  0318                     	;# 
   791  038C                     	;# 
   792  038D                     	;# 
   793  038E                     	;# 
   794  0391                     	;# 
   795  0392                     	;# 
   796  0393                     	;# 
   797  0394                     	;# 
   798  0395                     	;# 
   799  0396                     	;# 
   800  0397                     	;# 
   801  0398                     	;# 
   802  0399                     	;# 
   803  039A                     	;# 
   804  039C                     	;# 
   805  039D                     	;# 
   806  039E                     	;# 
   807  039F                     	;# 
   808  0411                     	;# 
   809  0411                     	;# 
   810  0412                     	;# 
   811  0413                     	;# 
   812  0414                     	;# 
   813  0415                     	;# 
   814  0416                     	;# 
   815  0417                     	;# 
   816  0418                     	;# 
   817  0418                     	;# 
   818  0419                     	;# 
   819  041A                     	;# 
   820  041B                     	;# 
   821  041C                     	;# 
   822  041D                     	;# 
   823  041E                     	;# 
   824  041F                     	;# 
   825  0498                     	;# 
   826  0498                     	;# 
   827  0499                     	;# 
   828  049A                     	;# 
   829  049B                     	;# 
   830  049B                     	;# 
   831  049C                     	;# 
   832  049D                     	;# 
   833  049E                     	;# 
   834  049F                     	;# 
   835  0617                     	;# 
   836  0618                     	;# 
   837  0619                     	;# 
   838  0619                     	;# 
   839  061A                     	;# 
   840  061B                     	;# 
   841  061C                     	;# 
   842  061C                     	;# 
   843  061F                     	;# 
   844  0691                     	;# 
   845  0692                     	;# 
   846  0693                     	;# 
   847  0694                     	;# 
   848  0695                     	;# 
   849  0696                     	;# 
   850  0697                     	;# 
   851  0698                     	;# 
   852  0699                     	;# 
   853  0711                     	;# 
   854  0712                     	;# 
   855  0713                     	;# 
   856  0714                     	;# 
   857  0715                     	;# 
   858  0716                     	;# 
   859  0717                     	;# 
   860  0718                     	;# 
   861  0719                     	;# 
   862  0891                     	;# 
   863  0891                     	;# 
   864  0891                     	;# 
   865  0891                     	;# 
   866  0891                     	;# 
   867  0891                     	;# 
   868  0892                     	;# 
   869  0892                     	;# 
   870  0892                     	;# 
   871  0893                     	;# 
   872  0893                     	;# 
   873  0893                     	;# 
   874  0893                     	;# 
   875  0893                     	;# 
   876  0893                     	;# 
   877  0894                     	;# 
   878  0894                     	;# 
   879  0894                     	;# 
   880  0895                     	;# 
   881  0895                     	;# 
   882  0895                     	;# 
   883  0896                     	;# 
   884  0896                     	;# 
   885  0896                     	;# 
   886  089B                     	;# 
   887  0911                     	;# 
   888  0912                     	;# 
   889  0913                     	;# 
   890  0914                     	;# 
   891  0915                     	;# 
   892  0916                     	;# 
   893  0918                     	;# 
   894  0919                     	;# 
   895  091A                     	;# 
   896  091B                     	;# 
   897  091C                     	;# 
   898  091D                     	;# 
   899  091E                     	;# 
   900  091F                     	;# 
   901  0E0F                     	;# 
   902  0E10                     	;# 
   903  0E11                     	;# 
   904  0E12                     	;# 
   905  0E13                     	;# 
   906  0E14                     	;# 
   907  0E15                     	;# 
   908  0E16                     	;# 
   909  0E17                     	;# 
   910  0E18                     	;# 
   911  0E19                     	;# 
   912  0E1A                     	;# 
   913  0E1B                     	;# 
   914  0E1C                     	;# 
   915  0E1D                     	;# 
   916  0E1E                     	;# 
   917  0E1F                     	;# 
   918  0E20                     	;# 
   919  0E21                     	;# 
   920  0E22                     	;# 
   921  0E24                     	;# 
   922  0E25                     	;# 
   923  0E28                     	;# 
   924  0E29                     	;# 
   925  0E2A                     	;# 
   926  0E2B                     	;# 
   927  0E2C                     	;# 
   928  0E2D                     	;# 
   929  0E2E                     	;# 
   930  0E2F                     	;# 
   931  0E90                     	;# 
   932  0E91                     	;# 
   933  0E92                     	;# 
   934  0E94                     	;# 
   935  0E95                     	;# 
   936  0E9C                     	;# 
   937  0E9D                     	;# 
   938  0E9E                     	;# 
   939  0E9F                     	;# 
   940  0EA0                     	;# 
   941  0EA1                     	;# 
   942  0EA2                     	;# 
   943  0EA3                     	;# 
   944  0EA4                     	;# 
   945  0EA5                     	;# 
   946  0EA6                     	;# 
   947  0EA7                     	;# 
   948  0F0F                     	;# 
   949  0F10                     	;# 
   950  0F11                     	;# 
   951  0F12                     	;# 
   952  0F13                     	;# 
   953  0F14                     	;# 
   954  0F15                     	;# 
   955  0F16                     	;# 
   956  0F17                     	;# 
   957  0F18                     	;# 
   958  0F19                     	;# 
   959  0F1A                     	;# 
   960  0F1B                     	;# 
   961  0F1C                     	;# 
   962  0F1D                     	;# 
   963  0F1E                     	;# 
   964  0F1F                     	;# 
   965  0F20                     	;# 
   966  0F21                     	;# 
   967  0F22                     	;# 
   968  0F23                     	;# 
   969  0F24                     	;# 
   970  0F25                     	;# 
   971  0F26                     	;# 
   972  0F27                     	;# 
   973  0F28                     	;# 
   974  0F29                     	;# 
   975  0F2A                     	;# 
   976  0F2B                     	;# 
   977  0F2C                     	;# 
   978  0F2D                     	;# 
   979  0F2E                     	;# 
   980  0F2F                     	;# 
   981  0F30                     	;# 
   982  0F31                     	;# 
   983  0F32                     	;# 
   984  0F33                     	;# 
   985  0F34                     	;# 
   986  0F35                     	;# 
   987  0F36                     	;# 
   988  0F37                     	;# 
   989  0FE4                     	;# 
   990  0FE5                     	;# 
   991  0FE6                     	;# 
   992  0FE7                     	;# 
   993  0FE8                     	;# 
   994  0FE9                     	;# 
   995  0FEA                     	;# 
   996  0FEB                     	;# 
   997  0FED                     	;# 
   998  0FEE                     	;# 
   999  0FEF                     	;# 
  1000  0000                     	;# 
  1001  0001                     	;# 
  1002  0002                     	;# 
  1003  0003                     	;# 
  1004  0004                     	;# 
  1005  0005                     	;# 
  1006  0006                     	;# 
  1007  0007                     	;# 
  1008  0008                     	;# 
  1009  0009                     	;# 
  1010  000A                     	;# 
  1011  000B                     	;# 
  1012  000C                     	;# 
  1013  000D                     	;# 
  1014  000E                     	;# 
  1015  0010                     	;# 
  1016  0011                     	;# 
  1017  0012                     	;# 
  1018  0013                     	;# 
  1019  0014                     	;# 
  1020  0015                     	;# 
  1021  0015                     	;# 
  1022  0016                     	;# 
  1023  0016                     	;# 
  1024  0017                     	;# 
  1025  0018                     	;# 
  1026  0019                     	;# 
  1027  0019                     	;# 
  1028  001A                     	;# 
  1029  001B                     	;# 
  1030  001C                     	;# 
  1031  001D                     	;# 
  1032  001E                     	;# 
  1033  001F                     	;# 
  1034  008C                     	;# 
  1035  008D                     	;# 
  1036  008E                     	;# 
  1037  0090                     	;# 
  1038  0091                     	;# 
  1039  0092                     	;# 
  1040  0093                     	;# 
  1041  0094                     	;# 
  1042  0097                     	;# 
  1043  009B                     	;# 
  1044  009B                     	;# 
  1045  009C                     	;# 
  1046  009D                     	;# 
  1047  009E                     	;# 
  1048  009F                     	;# 
  1049  010C                     	;# 
  1050  010D                     	;# 
  1051  010E                     	;# 
  1052  0111                     	;# 
  1053  0112                     	;# 
  1054  0113                     	;# 
  1055  0114                     	;# 
  1056  0115                     	;# 
  1057  0116                     	;# 
  1058  0117                     	;# 
  1059  0118                     	;# 
  1060  0119                     	;# 
  1061  018C                     	;# 
  1062  018D                     	;# 
  1063  018E                     	;# 
  1064  0197                     	;# 
  1065  0199                     	;# 
  1066  0199                     	;# 
  1067  0199                     	;# 
  1068  019A                     	;# 
  1069  019A                     	;# 
  1070  019A                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019B                     	;# 
  1076  019C                     	;# 
  1077  019C                     	;# 
  1078  019C                     	;# 
  1079  019D                     	;# 
  1080  019D                     	;# 
  1081  019D                     	;# 
  1082  019E                     	;# 
  1083  019E                     	;# 
  1084  019E                     	;# 
  1085  019F                     	;# 
  1086  019F                     	;# 
  1087  019F                     	;# 
  1088  019F                     	;# 
  1089  019F                     	;# 
  1090  020C                     	;# 
  1091  020D                     	;# 
  1092  020E                     	;# 
  1093  0211                     	;# 
  1094  0211                     	;# 
  1095  0212                     	;# 
  1096  0212                     	;# 
  1097  0213                     	;# 
  1098  0213                     	;# 
  1099  0214                     	;# 
  1100  0214                     	;# 
  1101  0215                     	;# 
  1102  0215                     	;# 
  1103  0215                     	;# 
  1104  0215                     	;# 
  1105  0216                     	;# 
  1106  0216                     	;# 
  1107  0217                     	;# 
  1108  0217                     	;# 
  1109  0219                     	;# 
  1110  021A                     	;# 
  1111  021B                     	;# 
  1112  021C                     	;# 
  1113  021D                     	;# 
  1114  021D                     	;# 
  1115  021E                     	;# 
  1116  021F                     	;# 
  1117  028C                     	;# 
  1118  028D                     	;# 
  1119  028E                     	;# 
  1120  0291                     	;# 
  1121  0291                     	;# 
  1122  0292                     	;# 
  1123  0293                     	;# 
  1124  0294                     	;# 
  1125  0295                     	;# 
  1126  0295                     	;# 
  1127  0296                     	;# 
  1128  0297                     	;# 
  1129  0298                     	;# 
  1130  029F                     	;# 
  1131  030C                     	;# 
  1132  030D                     	;# 
  1133  030E                     	;# 
  1134  0311                     	;# 
  1135  0311                     	;# 
  1136  0312                     	;# 
  1137  0313                     	;# 
  1138  0314                     	;# 
  1139  0315                     	;# 
  1140  0315                     	;# 
  1141  0316                     	;# 
  1142  0317                     	;# 
  1143  0318                     	;# 
  1144  038C                     	;# 
  1145  038D                     	;# 
  1146  038E                     	;# 
  1147  0391                     	;# 
  1148  0392                     	;# 
  1149  0393                     	;# 
  1150  0394                     	;# 
  1151  0395                     	;# 
  1152  0396                     	;# 
  1153  0397                     	;# 
  1154  0398                     	;# 
  1155  0399                     	;# 
  1156  039A                     	;# 
  1157  039C                     	;# 
  1158  039D                     	;# 
  1159  039E                     	;# 
  1160  039F                     	;# 
  1161  0411                     	;# 
  1162  0411                     	;# 
  1163  0412                     	;# 
  1164  0413                     	;# 
  1165  0414                     	;# 
  1166  0415                     	;# 
  1167  0416                     	;# 
  1168  0417                     	;# 
  1169  0418                     	;# 
  1170  0418                     	;# 
  1171  0419                     	;# 
  1172  041A                     	;# 
  1173  041B                     	;# 
  1174  041C                     	;# 
  1175  041D                     	;# 
  1176  041E                     	;# 
  1177  041F                     	;# 
  1178  0498                     	;# 
  1179  0498                     	;# 
  1180  0499                     	;# 
  1181  049A                     	;# 
  1182  049B                     	;# 
  1183  049B                     	;# 
  1184  049C                     	;# 
  1185  049D                     	;# 
  1186  049E                     	;# 
  1187  049F                     	;# 
  1188  0617                     	;# 
  1189  0618                     	;# 
  1190  0619                     	;# 
  1191  0619                     	;# 
  1192  061A                     	;# 
  1193  061B                     	;# 
  1194  061C                     	;# 
  1195  061C                     	;# 
  1196  061F                     	;# 
  1197  0691                     	;# 
  1198  0692                     	;# 
  1199  0693                     	;# 
  1200  0694                     	;# 
  1201  0695                     	;# 
  1202  0696                     	;# 
  1203  0697                     	;# 
  1204  0698                     	;# 
  1205  0699                     	;# 
  1206  0711                     	;# 
  1207  0712                     	;# 
  1208  0713                     	;# 
  1209  0714                     	;# 
  1210  0715                     	;# 
  1211  0716                     	;# 
  1212  0717                     	;# 
  1213  0718                     	;# 
  1214  0719                     	;# 
  1215  0891                     	;# 
  1216  0891                     	;# 
  1217  0891                     	;# 
  1218  0891                     	;# 
  1219  0891                     	;# 
  1220  0891                     	;# 
  1221  0892                     	;# 
  1222  0892                     	;# 
  1223  0892                     	;# 
  1224  0893                     	;# 
  1225  0893                     	;# 
  1226  0893                     	;# 
  1227  0893                     	;# 
  1228  0893                     	;# 
  1229  0893                     	;# 
  1230  0894                     	;# 
  1231  0894                     	;# 
  1232  0894                     	;# 
  1233  0895                     	;# 
  1234  0895                     	;# 
  1235  0895                     	;# 
  1236  0896                     	;# 
  1237  0896                     	;# 
  1238  0896                     	;# 
  1239  089B                     	;# 
  1240  0911                     	;# 
  1241  0912                     	;# 
  1242  0913                     	;# 
  1243  0914                     	;# 
  1244  0915                     	;# 
  1245  0916                     	;# 
  1246  0918                     	;# 
  1247  0919                     	;# 
  1248  091A                     	;# 
  1249  091B                     	;# 
  1250  091C                     	;# 
  1251  091D                     	;# 
  1252  091E                     	;# 
  1253  091F                     	;# 
  1254  0E0F                     	;# 
  1255  0E10                     	;# 
  1256  0E11                     	;# 
  1257  0E12                     	;# 
  1258  0E13                     	;# 
  1259  0E14                     	;# 
  1260  0E15                     	;# 
  1261  0E16                     	;# 
  1262  0E17                     	;# 
  1263  0E18                     	;# 
  1264  0E19                     	;# 
  1265  0E1A                     	;# 
  1266  0E1B                     	;# 
  1267  0E1C                     	;# 
  1268  0E1D                     	;# 
  1269  0E1E                     	;# 
  1270  0E1F                     	;# 
  1271  0E20                     	;# 
  1272  0E21                     	;# 
  1273  0E22                     	;# 
  1274  0E24                     	;# 
  1275  0E25                     	;# 
  1276  0E28                     	;# 
  1277  0E29                     	;# 
  1278  0E2A                     	;# 
  1279  0E2B                     	;# 
  1280  0E2C                     	;# 
  1281  0E2D                     	;# 
  1282  0E2E                     	;# 
  1283  0E2F                     	;# 
  1284  0E90                     	;# 
  1285  0E91                     	;# 
  1286  0E92                     	;# 
  1287  0E94                     	;# 
  1288  0E95                     	;# 
  1289  0E9C                     	;# 
  1290  0E9D                     	;# 
  1291  0E9E                     	;# 
  1292  0E9F                     	;# 
  1293  0EA0                     	;# 
  1294  0EA1                     	;# 
  1295  0EA2                     	;# 
  1296  0EA3                     	;# 
  1297  0EA4                     	;# 
  1298  0EA5                     	;# 
  1299  0EA6                     	;# 
  1300  0EA7                     	;# 
  1301  0F0F                     	;# 
  1302  0F10                     	;# 
  1303  0F11                     	;# 
  1304  0F12                     	;# 
  1305  0F13                     	;# 
  1306  0F14                     	;# 
  1307  0F15                     	;# 
  1308  0F16                     	;# 
  1309  0F17                     	;# 
  1310  0F18                     	;# 
  1311  0F19                     	;# 
  1312  0F1A                     	;# 
  1313  0F1B                     	;# 
  1314  0F1C                     	;# 
  1315  0F1D                     	;# 
  1316  0F1E                     	;# 
  1317  0F1F                     	;# 
  1318  0F20                     	;# 
  1319  0F21                     	;# 
  1320  0F22                     	;# 
  1321  0F23                     	;# 
  1322  0F24                     	;# 
  1323  0F25                     	;# 
  1324  0F26                     	;# 
  1325  0F27                     	;# 
  1326  0F28                     	;# 
  1327  0F29                     	;# 
  1328  0F2A                     	;# 
  1329  0F2B                     	;# 
  1330  0F2C                     	;# 
  1331  0F2D                     	;# 
  1332  0F2E                     	;# 
  1333  0F2F                     	;# 
  1334  0F30                     	;# 
  1335  0F31                     	;# 
  1336  0F32                     	;# 
  1337  0F33                     	;# 
  1338  0F34                     	;# 
  1339  0F35                     	;# 
  1340  0F36                     	;# 
  1341  0F37                     	;# 
  1342  0FE4                     	;# 
  1343  0FE5                     	;# 
  1344  0FE6                     	;# 
  1345  0FE7                     	;# 
  1346  0FE8                     	;# 
  1347  0FE9                     	;# 
  1348  0FEA                     	;# 
  1349  0FEB                     	;# 
  1350  0FED                     	;# 
  1351  0FEE                     	;# 
  1352  0FEF                     	;# 
  1353  0000                     	;# 
  1354  0001                     	;# 
  1355  0002                     	;# 
  1356  0003                     	;# 
  1357  0004                     	;# 
  1358  0005                     	;# 
  1359  0006                     	;# 
  1360  0007                     	;# 
  1361  0008                     	;# 
  1362  0009                     	;# 
  1363  000A                     	;# 
  1364  000B                     	;# 
  1365  000C                     	;# 
  1366  000D                     	;# 
  1367  000E                     	;# 
  1368  0010                     	;# 
  1369  0011                     	;# 
  1370  0012                     	;# 
  1371  0013                     	;# 
  1372  0014                     	;# 
  1373  0015                     	;# 
  1374  0015                     	;# 
  1375  0016                     	;# 
  1376  0016                     	;# 
  1377  0017                     	;# 
  1378  0018                     	;# 
  1379  0019                     	;# 
  1380  0019                     	;# 
  1381  001A                     	;# 
  1382  001B                     	;# 
  1383  001C                     	;# 
  1384  001D                     	;# 
  1385  001E                     	;# 
  1386  001F                     	;# 
  1387  008C                     	;# 
  1388  008D                     	;# 
  1389  008E                     	;# 
  1390  0090                     	;# 
  1391  0091                     	;# 
  1392  0092                     	;# 
  1393  0093                     	;# 
  1394  0094                     	;# 
  1395  0097                     	;# 
  1396  009B                     	;# 
  1397  009B                     	;# 
  1398  009C                     	;# 
  1399  009D                     	;# 
  1400  009E                     	;# 
  1401  009F                     	;# 
  1402  010C                     	;# 
  1403  010D                     	;# 
  1404  010E                     	;# 
  1405  0111                     	;# 
  1406  0112                     	;# 
  1407  0113                     	;# 
  1408  0114                     	;# 
  1409  0115                     	;# 
  1410  0116                     	;# 
  1411  0117                     	;# 
  1412  0118                     	;# 
  1413  0119                     	;# 
  1414  018C                     	;# 
  1415  018D                     	;# 
  1416  018E                     	;# 
  1417  0197                     	;# 
  1418  0199                     	;# 
  1419  0199                     	;# 
  1420  0199                     	;# 
  1421  019A                     	;# 
  1422  019A                     	;# 
  1423  019A                     	;# 
  1424  019B                     	;# 
  1425  019B                     	;# 
  1426  019B                     	;# 
  1427  019B                     	;# 
  1428  019B                     	;# 
  1429  019C                     	;# 
  1430  019C                     	;# 
  1431  019C                     	;# 
  1432  019D                     	;# 
  1433  019D                     	;# 
  1434  019D                     	;# 
  1435  019E                     	;# 
  1436  019E                     	;# 
  1437  019E                     	;# 
  1438  019F                     	;# 
  1439  019F                     	;# 
  1440  019F                     	;# 
  1441  019F                     	;# 
  1442  019F                     	;# 
  1443  020C                     	;# 
  1444  020D                     	;# 
  1445  020E                     	;# 
  1446  0211                     	;# 
  1447  0211                     	;# 
  1448  0212                     	;# 
  1449  0212                     	;# 
  1450  0213                     	;# 
  1451  0213                     	;# 
  1452  0214                     	;# 
  1453  0214                     	;# 
  1454  0215                     	;# 
  1455  0215                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0216                     	;# 
  1459  0216                     	;# 
  1460  0217                     	;# 
  1461  0217                     	;# 
  1462  0219                     	;# 
  1463  021A                     	;# 
  1464  021B                     	;# 
  1465  021C                     	;# 
  1466  021D                     	;# 
  1467  021D                     	;# 
  1468  021E                     	;# 
  1469  021F                     	;# 
  1470  028C                     	;# 
  1471  028D                     	;# 
  1472  028E                     	;# 
  1473  0291                     	;# 
  1474  0291                     	;# 
  1475  0292                     	;# 
  1476  0293                     	;# 
  1477  0294                     	;# 
  1478  0295                     	;# 
  1479  0295                     	;# 
  1480  0296                     	;# 
  1481  0297                     	;# 
  1482  0298                     	;# 
  1483  029F                     	;# 
  1484  030C                     	;# 
  1485  030D                     	;# 
  1486  030E                     	;# 
  1487  0311                     	;# 
  1488  0311                     	;# 
  1489  0312                     	;# 
  1490  0313                     	;# 
  1491  0314                     	;# 
  1492  0315                     	;# 
  1493  0315                     	;# 
  1494  0316                     	;# 
  1495  0317                     	;# 
  1496  0318                     	;# 
  1497  038C                     	;# 
  1498  038D                     	;# 
  1499  038E                     	;# 
  1500  0391                     	;# 
  1501  0392                     	;# 
  1502  0393                     	;# 
  1503  0394                     	;# 
  1504  0395                     	;# 
  1505  0396                     	;# 
  1506  0397                     	;# 
  1507  0398                     	;# 
  1508  0399                     	;# 
  1509  039A                     	;# 
  1510  039C                     	;# 
  1511  039D                     	;# 
  1512  039E                     	;# 
  1513  039F                     	;# 
  1514  0411                     	;# 
  1515  0411                     	;# 
  1516  0412                     	;# 
  1517  0413                     	;# 
  1518  0414                     	;# 
  1519  0415                     	;# 
  1520  0416                     	;# 
  1521  0417                     	;# 
  1522  0418                     	;# 
  1523  0418                     	;# 
  1524  0419                     	;# 
  1525  041A                     	;# 
  1526  041B                     	;# 
  1527  041C                     	;# 
  1528  041D                     	;# 
  1529  041E                     	;# 
  1530  041F                     	;# 
  1531  0498                     	;# 
  1532  0498                     	;# 
  1533  0499                     	;# 
  1534  049A                     	;# 
  1535  049B                     	;# 
  1536  049B                     	;# 
  1537  049C                     	;# 
  1538  049D                     	;# 
  1539  049E                     	;# 
  1540  049F                     	;# 
  1541  0617                     	;# 
  1542  0618                     	;# 
  1543  0619                     	;# 
  1544  0619                     	;# 
  1545  061A                     	;# 
  1546  061B                     	;# 
  1547  061C                     	;# 
  1548  061C                     	;# 
  1549  061F                     	;# 
  1550  0691                     	;# 
  1551  0692                     	;# 
  1552  0693                     	;# 
  1553  0694                     	;# 
  1554  0695                     	;# 
  1555  0696                     	;# 
  1556  0697                     	;# 
  1557  0698                     	;# 
  1558  0699                     	;# 
  1559  0711                     	;# 
  1560  0712                     	;# 
  1561  0713                     	;# 
  1562  0714                     	;# 
  1563  0715                     	;# 
  1564  0716                     	;# 
  1565  0717                     	;# 
  1566  0718                     	;# 
  1567  0719                     	;# 
  1568  0891                     	;# 
  1569  0891                     	;# 
  1570  0891                     	;# 
  1571  0891                     	;# 
  1572  0891                     	;# 
  1573  0891                     	;# 
  1574  0892                     	;# 
  1575  0892                     	;# 
  1576  0892                     	;# 
  1577  0893                     	;# 
  1578  0893                     	;# 
  1579  0893                     	;# 
  1580  0893                     	;# 
  1581  0893                     	;# 
  1582  0893                     	;# 
  1583  0894                     	;# 
  1584  0894                     	;# 
  1585  0894                     	;# 
  1586  0895                     	;# 
  1587  0895                     	;# 
  1588  0895                     	;# 
  1589  0896                     	;# 
  1590  0896                     	;# 
  1591  0896                     	;# 
  1592  089B                     	;# 
  1593  0911                     	;# 
  1594  0912                     	;# 
  1595  0913                     	;# 
  1596  0914                     	;# 
  1597  0915                     	;# 
  1598  0916                     	;# 
  1599  0918                     	;# 
  1600  0919                     	;# 
  1601  091A                     	;# 
  1602  091B                     	;# 
  1603  091C                     	;# 
  1604  091D                     	;# 
  1605  091E                     	;# 
  1606  091F                     	;# 
  1607  0E0F                     	;# 
  1608  0E10                     	;# 
  1609  0E11                     	;# 
  1610  0E12                     	;# 
  1611  0E13                     	;# 
  1612  0E14                     	;# 
  1613  0E15                     	;# 
  1614  0E16                     	;# 
  1615  0E17                     	;# 
  1616  0E18                     	;# 
  1617  0E19                     	;# 
  1618  0E1A                     	;# 
  1619  0E1B                     	;# 
  1620  0E1C                     	;# 
  1621  0E1D                     	;# 
  1622  0E1E                     	;# 
  1623  0E1F                     	;# 
  1624  0E20                     	;# 
  1625  0E21                     	;# 
  1626  0E22                     	;# 
  1627  0E24                     	;# 
  1628  0E25                     	;# 
  1629  0E28                     	;# 
  1630  0E29                     	;# 
  1631  0E2A                     	;# 
  1632  0E2B                     	;# 
  1633  0E2C                     	;# 
  1634  0E2D                     	;# 
  1635  0E2E                     	;# 
  1636  0E2F                     	;# 
  1637  0E90                     	;# 
  1638  0E91                     	;# 
  1639  0E92                     	;# 
  1640  0E94                     	;# 
  1641  0E95                     	;# 
  1642  0E9C                     	;# 
  1643  0E9D                     	;# 
  1644  0E9E                     	;# 
  1645  0E9F                     	;# 
  1646  0EA0                     	;# 
  1647  0EA1                     	;# 
  1648  0EA2                     	;# 
  1649  0EA3                     	;# 
  1650  0EA4                     	;# 
  1651  0EA5                     	;# 
  1652  0EA6                     	;# 
  1653  0EA7                     	;# 
  1654  0F0F                     	;# 
  1655  0F10                     	;# 
  1656  0F11                     	;# 
  1657  0F12                     	;# 
  1658  0F13                     	;# 
  1659  0F14                     	;# 
  1660  0F15                     	;# 
  1661  0F16                     	;# 
  1662  0F17                     	;# 
  1663  0F18                     	;# 
  1664  0F19                     	;# 
  1665  0F1A                     	;# 
  1666  0F1B                     	;# 
  1667  0F1C                     	;# 
  1668  0F1D                     	;# 
  1669  0F1E                     	;# 
  1670  0F1F                     	;# 
  1671  0F20                     	;# 
  1672  0F21                     	;# 
  1673  0F22                     	;# 
  1674  0F23                     	;# 
  1675  0F24                     	;# 
  1676  0F25                     	;# 
  1677  0F26                     	;# 
  1678  0F27                     	;# 
  1679  0F28                     	;# 
  1680  0F29                     	;# 
  1681  0F2A                     	;# 
  1682  0F2B                     	;# 
  1683  0F2C                     	;# 
  1684  0F2D                     	;# 
  1685  0F2E                     	;# 
  1686  0F2F                     	;# 
  1687  0F30                     	;# 
  1688  0F31                     	;# 
  1689  0F32                     	;# 
  1690  0F33                     	;# 
  1691  0F34                     	;# 
  1692  0F35                     	;# 
  1693  0F36                     	;# 
  1694  0F37                     	;# 
  1695  0FE4                     	;# 
  1696  0FE5                     	;# 
  1697  0FE6                     	;# 
  1698  0FE7                     	;# 
  1699  0FE8                     	;# 
  1700  0FE9                     	;# 
  1701  0FEA                     	;# 
  1702  0FEB                     	;# 
  1703  0FED                     	;# 
  1704  0FEE                     	;# 
  1705  0FEF                     	;# 
  1706  0000                     	;# 
  1707  0001                     	;# 
  1708  0002                     	;# 
  1709  0003                     	;# 
  1710  0004                     	;# 
  1711  0005                     	;# 
  1712  0006                     	;# 
  1713  0007                     	;# 
  1714  0008                     	;# 
  1715  0009                     	;# 
  1716  000A                     	;# 
  1717  000B                     	;# 
  1718  000C                     	;# 
  1719  000D                     	;# 
  1720  000E                     	;# 
  1721  0010                     	;# 
  1722  0011                     	;# 
  1723  0012                     	;# 
  1724  0013                     	;# 
  1725  0014                     	;# 
  1726  0015                     	;# 
  1727  0015                     	;# 
  1728  0016                     	;# 
  1729  0016                     	;# 
  1730  0017                     	;# 
  1731  0018                     	;# 
  1732  0019                     	;# 
  1733  0019                     	;# 
  1734  001A                     	;# 
  1735  001B                     	;# 
  1736  001C                     	;# 
  1737  001D                     	;# 
  1738  001E                     	;# 
  1739  001F                     	;# 
  1740  008C                     	;# 
  1741  008D                     	;# 
  1742  008E                     	;# 
  1743  0090                     	;# 
  1744  0091                     	;# 
  1745  0092                     	;# 
  1746  0093                     	;# 
  1747  0094                     	;# 
  1748  0097                     	;# 
  1749  009B                     	;# 
  1750  009B                     	;# 
  1751  009C                     	;# 
  1752  009D                     	;# 
  1753  009E                     	;# 
  1754  009F                     	;# 
  1755  010C                     	;# 
  1756  010D                     	;# 
  1757  010E                     	;# 
  1758  0111                     	;# 
  1759  0112                     	;# 
  1760  0113                     	;# 
  1761  0114                     	;# 
  1762  0115                     	;# 
  1763  0116                     	;# 
  1764  0117                     	;# 
  1765  0118                     	;# 
  1766  0119                     	;# 
  1767  018C                     	;# 
  1768  018D                     	;# 
  1769  018E                     	;# 
  1770  0197                     	;# 
  1771  0199                     	;# 
  1772  0199                     	;# 
  1773  0199                     	;# 
  1774  019A                     	;# 
  1775  019A                     	;# 
  1776  019A                     	;# 
  1777  019B                     	;# 
  1778  019B                     	;# 
  1779  019B                     	;# 
  1780  019B                     	;# 
  1781  019B                     	;# 
  1782  019C                     	;# 
  1783  019C                     	;# 
  1784  019C                     	;# 
  1785  019D                     	;# 
  1786  019D                     	;# 
  1787  019D                     	;# 
  1788  019E                     	;# 
  1789  019E                     	;# 
  1790  019E                     	;# 
  1791  019F                     	;# 
  1792  019F                     	;# 
  1793  019F                     	;# 
  1794  019F                     	;# 
  1795  019F                     	;# 
  1796  020C                     	;# 
  1797  020D                     	;# 
  1798  020E                     	;# 
  1799  0211                     	;# 
  1800  0211                     	;# 
  1801  0212                     	;# 
  1802  0212                     	;# 
  1803  0213                     	;# 
  1804  0213                     	;# 
  1805  0214                     	;# 
  1806  0214                     	;# 
  1807  0215                     	;# 
  1808  0215                     	;# 
  1809  0215                     	;# 
  1810  0215                     	;# 
  1811  0216                     	;# 
  1812  0216                     	;# 
  1813  0217                     	;# 
  1814  0217                     	;# 
  1815  0219                     	;# 
  1816  021A                     	;# 
  1817  021B                     	;# 
  1818  021C                     	;# 
  1819  021D                     	;# 
  1820  021D                     	;# 
  1821  021E                     	;# 
  1822  021F                     	;# 
  1823  028C                     	;# 
  1824  028D                     	;# 
  1825  028E                     	;# 
  1826  0291                     	;# 
  1827  0291                     	;# 
  1828  0292                     	;# 
  1829  0293                     	;# 
  1830  0294                     	;# 
  1831  0295                     	;# 
  1832  0295                     	;# 
  1833  0296                     	;# 
  1834  0297                     	;# 
  1835  0298                     	;# 
  1836  029F                     	;# 
  1837  030C                     	;# 
  1838  030D                     	;# 
  1839  030E                     	;# 
  1840  0311                     	;# 
  1841  0311                     	;# 
  1842  0312                     	;# 
  1843  0313                     	;# 
  1844  0314                     	;# 
  1845  0315                     	;# 
  1846  0315                     	;# 
  1847  0316                     	;# 
  1848  0317                     	;# 
  1849  0318                     	;# 
  1850  038C                     	;# 
  1851  038D                     	;# 
  1852  038E                     	;# 
  1853  0391                     	;# 
  1854  0392                     	;# 
  1855  0393                     	;# 
  1856  0394                     	;# 
  1857  0395                     	;# 
  1858  0396                     	;# 
  1859  0397                     	;# 
  1860  0398                     	;# 
  1861  0399                     	;# 
  1862  039A                     	;# 
  1863  039C                     	;# 
  1864  039D                     	;# 
  1865  039E                     	;# 
  1866  039F                     	;# 
  1867  0411                     	;# 
  1868  0411                     	;# 
  1869  0412                     	;# 
  1870  0413                     	;# 
  1871  0414                     	;# 
  1872  0415                     	;# 
  1873  0416                     	;# 
  1874  0417                     	;# 
  1875  0418                     	;# 
  1876  0418                     	;# 
  1877  0419                     	;# 
  1878  041A                     	;# 
  1879  041B                     	;# 
  1880  041C                     	;# 
  1881  041D                     	;# 
  1882  041E                     	;# 
  1883  041F                     	;# 
  1884  0498                     	;# 
  1885  0498                     	;# 
  1886  0499                     	;# 
  1887  049A                     	;# 
  1888  049B                     	;# 
  1889  049B                     	;# 
  1890  049C                     	;# 
  1891  049D                     	;# 
  1892  049E                     	;# 
  1893  049F                     	;# 
  1894  0617                     	;# 
  1895  0618                     	;# 
  1896  0619                     	;# 
  1897  0619                     	;# 
  1898  061A                     	;# 
  1899  061B                     	;# 
  1900  061C                     	;# 
  1901  061C                     	;# 
  1902  061F                     	;# 
  1903  0691                     	;# 
  1904  0692                     	;# 
  1905  0693                     	;# 
  1906  0694                     	;# 
  1907  0695                     	;# 
  1908  0696                     	;# 
  1909  0697                     	;# 
  1910  0698                     	;# 
  1911  0699                     	;# 
  1912  0711                     	;# 
  1913  0712                     	;# 
  1914  0713                     	;# 
  1915  0714                     	;# 
  1916  0715                     	;# 
  1917  0716                     	;# 
  1918  0717                     	;# 
  1919  0718                     	;# 
  1920  0719                     	;# 
  1921  0891                     	;# 
  1922  0891                     	;# 
  1923  0891                     	;# 
  1924  0891                     	;# 
  1925  0891                     	;# 
  1926  0891                     	;# 
  1927  0892                     	;# 
  1928  0892                     	;# 
  1929  0892                     	;# 
  1930  0893                     	;# 
  1931  0893                     	;# 
  1932  0893                     	;# 
  1933  0893                     	;# 
  1934  0893                     	;# 
  1935  0893                     	;# 
  1936  0894                     	;# 
  1937  0894                     	;# 
  1938  0894                     	;# 
  1939  0895                     	;# 
  1940  0895                     	;# 
  1941  0895                     	;# 
  1942  0896                     	;# 
  1943  0896                     	;# 
  1944  0896                     	;# 
  1945  089B                     	;# 
  1946  0911                     	;# 
  1947  0912                     	;# 
  1948  0913                     	;# 
  1949  0914                     	;# 
  1950  0915                     	;# 
  1951  0916                     	;# 
  1952  0918                     	;# 
  1953  0919                     	;# 
  1954  091A                     	;# 
  1955  091B                     	;# 
  1956  091C                     	;# 
  1957  091D                     	;# 
  1958  091E                     	;# 
  1959  091F                     	;# 
  1960  0E0F                     	;# 
  1961  0E10                     	;# 
  1962  0E11                     	;# 
  1963  0E12                     	;# 
  1964  0E13                     	;# 
  1965  0E14                     	;# 
  1966  0E15                     	;# 
  1967  0E16                     	;# 
  1968  0E17                     	;# 
  1969  0E18                     	;# 
  1970  0E19                     	;# 
  1971  0E1A                     	;# 
  1972  0E1B                     	;# 
  1973  0E1C                     	;# 
  1974  0E1D                     	;# 
  1975  0E1E                     	;# 
  1976  0E1F                     	;# 
  1977  0E20                     	;# 
  1978  0E21                     	;# 
  1979  0E22                     	;# 
  1980  0E24                     	;# 
  1981  0E25                     	;# 
  1982  0E28                     	;# 
  1983  0E29                     	;# 
  1984  0E2A                     	;# 
  1985  0E2B                     	;# 
  1986  0E2C                     	;# 
  1987  0E2D                     	;# 
  1988  0E2E                     	;# 
  1989  0E2F                     	;# 
  1990  0E90                     	;# 
  1991  0E91                     	;# 
  1992  0E92                     	;# 
  1993  0E94                     	;# 
  1994  0E95                     	;# 
  1995  0E9C                     	;# 
  1996  0E9D                     	;# 
  1997  0E9E                     	;# 
  1998  0E9F                     	;# 
  1999  0EA0                     	;# 
  2000  0EA1                     	;# 
  2001  0EA2                     	;# 
  2002  0EA3                     	;# 
  2003  0EA4                     	;# 
  2004  0EA5                     	;# 
  2005  0EA6                     	;# 
  2006  0EA7                     	;# 
  2007  0F0F                     	;# 
  2008  0F10                     	;# 
  2009  0F11                     	;# 
  2010  0F12                     	;# 
  2011  0F13                     	;# 
  2012  0F14                     	;# 
  2013  0F15                     	;# 
  2014  0F16                     	;# 
  2015  0F17                     	;# 
  2016  0F18                     	;# 
  2017  0F19                     	;# 
  2018  0F1A                     	;# 
  2019  0F1B                     	;# 
  2020  0F1C                     	;# 
  2021  0F1D                     	;# 
  2022  0F1E                     	;# 
  2023  0F1F                     	;# 
  2024  0F20                     	;# 
  2025  0F21                     	;# 
  2026  0F22                     	;# 
  2027  0F23                     	;# 
  2028  0F24                     	;# 
  2029  0F25                     	;# 
  2030  0F26                     	;# 
  2031  0F27                     	;# 
  2032  0F28                     	;# 
  2033  0F29                     	;# 
  2034  0F2A                     	;# 
  2035  0F2B                     	;# 
  2036  0F2C                     	;# 
  2037  0F2D                     	;# 
  2038  0F2E                     	;# 
  2039  0F2F                     	;# 
  2040  0F30                     	;# 
  2041  0F31                     	;# 
  2042  0F32                     	;# 
  2043  0F33                     	;# 
  2044  0F34                     	;# 
  2045  0F35                     	;# 
  2046  0F36                     	;# 
  2047  0F37                     	;# 
  2048  0FE4                     	;# 
  2049  0FE5                     	;# 
  2050  0FE6                     	;# 
  2051  0FE7                     	;# 
  2052  0FE8                     	;# 
  2053  0FE9                     	;# 
  2054  0FEA                     	;# 
  2055  0FEB                     	;# 
  2056  0FED                     	;# 
  2057  0FEE                     	;# 
  2058  0FEF                     	;# 
  2059  0000                     	;# 
  2060  0001                     	;# 
  2061  0002                     	;# 
  2062  0003                     	;# 
  2063  0004                     	;# 
  2064  0005                     	;# 
  2065  0006                     	;# 
  2066  0007                     	;# 
  2067  0008                     	;# 
  2068  0009                     	;# 
  2069  000A                     	;# 
  2070  000B                     	;# 
  2071  000C                     	;# 
  2072  000D                     	;# 
  2073  000E                     	;# 
  2074  0010                     	;# 
  2075  0011                     	;# 
  2076  0012                     	;# 
  2077  0013                     	;# 
  2078  0014                     	;# 
  2079  0015                     	;# 
  2080  0015                     	;# 
  2081  0016                     	;# 
  2082  0016                     	;# 
  2083  0017                     	;# 
  2084  0018                     	;# 
  2085  0019                     	;# 
  2086  0019                     	;# 
  2087  001A                     	;# 
  2088  001B                     	;# 
  2089  001C                     	;# 
  2090  001D                     	;# 
  2091  001E                     	;# 
  2092  001F                     	;# 
  2093  008C                     	;# 
  2094  008D                     	;# 
  2095  008E                     	;# 
  2096  0090                     	;# 
  2097  0091                     	;# 
  2098  0092                     	;# 
  2099  0093                     	;# 
  2100  0094                     	;# 
  2101  0097                     	;# 
  2102  009B                     	;# 
  2103  009B                     	;# 
  2104  009C                     	;# 
  2105  009D                     	;# 
  2106  009E                     	;# 
  2107  009F                     	;# 
  2108  010C                     	;# 
  2109  010D                     	;# 
  2110  010E                     	;# 
  2111  0111                     	;# 
  2112  0112                     	;# 
  2113  0113                     	;# 
  2114  0114                     	;# 
  2115  0115                     	;# 
  2116  0116                     	;# 
  2117  0117                     	;# 
  2118  0118                     	;# 
  2119  0119                     	;# 
  2120  018C                     	;# 
  2121  018D                     	;# 
  2122  018E                     	;# 
  2123  0197                     	;# 
  2124  0199                     	;# 
  2125  0199                     	;# 
  2126  0199                     	;# 
  2127  019A                     	;# 
  2128  019A                     	;# 
  2129  019A                     	;# 
  2130  019B                     	;# 
  2131  019B                     	;# 
  2132  019B                     	;# 
  2133  019B                     	;# 
  2134  019B                     	;# 
  2135  019C                     	;# 
  2136  019C                     	;# 
  2137  019C                     	;# 
  2138  019D                     	;# 
  2139  019D                     	;# 
  2140  019D                     	;# 
  2141  019E                     	;# 
  2142  019E                     	;# 
  2143  019E                     	;# 
  2144  019F                     	;# 
  2145  019F                     	;# 
  2146  019F                     	;# 
  2147  019F                     	;# 
  2148  019F                     	;# 
  2149  020C                     	;# 
  2150  020D                     	;# 
  2151  020E                     	;# 
  2152  0211                     	;# 
  2153  0211                     	;# 
  2154  0212                     	;# 
  2155  0212                     	;# 
  2156  0213                     	;# 
  2157  0213                     	;# 
  2158  0214                     	;# 
  2159  0214                     	;# 
  2160  0215                     	;# 
  2161  0215                     	;# 
  2162  0215                     	;# 
  2163  0215                     	;# 
  2164  0216                     	;# 
  2165  0216                     	;# 
  2166  0217                     	;# 
  2167  0217                     	;# 
  2168  0219                     	;# 
  2169  021A                     	;# 
  2170  021B                     	;# 
  2171  021C                     	;# 
  2172  021D                     	;# 
  2173  021D                     	;# 
  2174  021E                     	;# 
  2175  021F                     	;# 
  2176  028C                     	;# 
  2177  028D                     	;# 
  2178  028E                     	;# 
  2179  0291                     	;# 
  2180  0291                     	;# 
  2181  0292                     	;# 
  2182  0293                     	;# 
  2183  0294                     	;# 
  2184  0295                     	;# 
  2185  0295                     	;# 
  2186  0296                     	;# 
  2187  0297                     	;# 
  2188  0298                     	;# 
  2189  029F                     	;# 
  2190  030C                     	;# 
  2191  030D                     	;# 
  2192  030E                     	;# 
  2193  0311                     	;# 
  2194  0311                     	;# 
  2195  0312                     	;# 
  2196  0313                     	;# 
  2197  0314                     	;# 
  2198  0315                     	;# 
  2199  0315                     	;# 
  2200  0316                     	;# 
  2201  0317                     	;# 
  2202  0318                     	;# 
  2203  038C                     	;# 
  2204  038D                     	;# 
  2205  038E                     	;# 
  2206  0391                     	;# 
  2207  0392                     	;# 
  2208  0393                     	;# 
  2209  0394                     	;# 
  2210  0395                     	;# 
  2211  0396                     	;# 
  2212  0397                     	;# 
  2213  0398                     	;# 
  2214  0399                     	;# 
  2215  039A                     	;# 
  2216  039C                     	;# 
  2217  039D                     	;# 
  2218  039E                     	;# 
  2219  039F                     	;# 
  2220  0411                     	;# 
  2221  0411                     	;# 
  2222  0412                     	;# 
  2223  0413                     	;# 
  2224  0414                     	;# 
  2225  0415                     	;# 
  2226  0416                     	;# 
  2227  0417                     	;# 
  2228  0418                     	;# 
  2229  0418                     	;# 
  2230  0419                     	;# 
  2231  041A                     	;# 
  2232  041B                     	;# 
  2233  041C                     	;# 
  2234  041D                     	;# 
  2235  041E                     	;# 
  2236  041F                     	;# 
  2237  0498                     	;# 
  2238  0498                     	;# 
  2239  0499                     	;# 
  2240  049A                     	;# 
  2241  049B                     	;# 
  2242  049B                     	;# 
  2243  049C                     	;# 
  2244  049D                     	;# 
  2245  049E                     	;# 
  2246  049F                     	;# 
  2247  0617                     	;# 
  2248  0618                     	;# 
  2249  0619                     	;# 
  2250  0619                     	;# 
  2251  061A                     	;# 
  2252  061B                     	;# 
  2253  061C                     	;# 
  2254  061C                     	;# 
  2255  061F                     	;# 
  2256  0691                     	;# 
  2257  0692                     	;# 
  2258  0693                     	;# 
  2259  0694                     	;# 
  2260  0695                     	;# 
  2261  0696                     	;# 
  2262  0697                     	;# 
  2263  0698                     	;# 
  2264  0699                     	;# 
  2265  0711                     	;# 
  2266  0712                     	;# 
  2267  0713                     	;# 
  2268  0714                     	;# 
  2269  0715                     	;# 
  2270  0716                     	;# 
  2271  0717                     	;# 
  2272  0718                     	;# 
  2273  0719                     	;# 
  2274  0891                     	;# 
  2275  0891                     	;# 
  2276  0891                     	;# 
  2277  0891                     	;# 
  2278  0891                     	;# 
  2279  0891                     	;# 
  2280  0892                     	;# 
  2281  0892                     	;# 
  2282  0892                     	;# 
  2283  0893                     	;# 
  2284  0893                     	;# 
  2285  0893                     	;# 
  2286  0893                     	;# 
  2287  0893                     	;# 
  2288  0893                     	;# 
  2289  0894                     	;# 
  2290  0894                     	;# 
  2291  0894                     	;# 
  2292  0895                     	;# 
  2293  0895                     	;# 
  2294  0895                     	;# 
  2295  0896                     	;# 
  2296  0896                     	;# 
  2297  0896                     	;# 
  2298  089B                     	;# 
  2299  0911                     	;# 
  2300  0912                     	;# 
  2301  0913                     	;# 
  2302  0914                     	;# 
  2303  0915                     	;# 
  2304  0916                     	;# 
  2305  0918                     	;# 
  2306  0919                     	;# 
  2307  091A                     	;# 
  2308  091B                     	;# 
  2309  091C                     	;# 
  2310  091D                     	;# 
  2311  091E                     	;# 
  2312  091F                     	;# 
  2313  0E0F                     	;# 
  2314  0E10                     	;# 
  2315  0E11                     	;# 
  2316  0E12                     	;# 
  2317  0E13                     	;# 
  2318  0E14                     	;# 
  2319  0E15                     	;# 
  2320  0E16                     	;# 
  2321  0E17                     	;# 
  2322  0E18                     	;# 
  2323  0E19                     	;# 
  2324  0E1A                     	;# 
  2325  0E1B                     	;# 
  2326  0E1C                     	;# 
  2327  0E1D                     	;# 
  2328  0E1E                     	;# 
  2329  0E1F                     	;# 
  2330  0E20                     	;# 
  2331  0E21                     	;# 
  2332  0E22                     	;# 
  2333  0E24                     	;# 
  2334  0E25                     	;# 
  2335  0E28                     	;# 
  2336  0E29                     	;# 
  2337  0E2A                     	;# 
  2338  0E2B                     	;# 
  2339  0E2C                     	;# 
  2340  0E2D                     	;# 
  2341  0E2E                     	;# 
  2342  0E2F                     	;# 
  2343  0E90                     	;# 
  2344  0E91                     	;# 
  2345  0E92                     	;# 
  2346  0E94                     	;# 
  2347  0E95                     	;# 
  2348  0E9C                     	;# 
  2349  0E9D                     	;# 
  2350  0E9E                     	;# 
  2351  0E9F                     	;# 
  2352  0EA0                     	;# 
  2353  0EA1                     	;# 
  2354  0EA2                     	;# 
  2355  0EA3                     	;# 
  2356  0EA4                     	;# 
  2357  0EA5                     	;# 
  2358  0EA6                     	;# 
  2359  0EA7                     	;# 
  2360  0F0F                     	;# 
  2361  0F10                     	;# 
  2362  0F11                     	;# 
  2363  0F12                     	;# 
  2364  0F13                     	;# 
  2365  0F14                     	;# 
  2366  0F15                     	;# 
  2367  0F16                     	;# 
  2368  0F17                     	;# 
  2369  0F18                     	;# 
  2370  0F19                     	;# 
  2371  0F1A                     	;# 
  2372  0F1B                     	;# 
  2373  0F1C                     	;# 
  2374  0F1D                     	;# 
  2375  0F1E                     	;# 
  2376  0F1F                     	;# 
  2377  0F20                     	;# 
  2378  0F21                     	;# 
  2379  0F22                     	;# 
  2380  0F23                     	;# 
  2381  0F24                     	;# 
  2382  0F25                     	;# 
  2383  0F26                     	;# 
  2384  0F27                     	;# 
  2385  0F28                     	;# 
  2386  0F29                     	;# 
  2387  0F2A                     	;# 
  2388  0F2B                     	;# 
  2389  0F2C                     	;# 
  2390  0F2D                     	;# 
  2391  0F2E                     	;# 
  2392  0F2F                     	;# 
  2393  0F30                     	;# 
  2394  0F31                     	;# 
  2395  0F32                     	;# 
  2396  0F33                     	;# 
  2397  0F34                     	;# 
  2398  0F35                     	;# 
  2399  0F36                     	;# 
  2400  0F37                     	;# 
  2401  0FE4                     	;# 
  2402  0FE5                     	;# 
  2403  0FE6                     	;# 
  2404  0FE7                     	;# 
  2405  0FE8                     	;# 
  2406  0FE9                     	;# 
  2407  0FEA                     	;# 
  2408  0FEB                     	;# 
  2409  0FED                     	;# 
  2410  0FEE                     	;# 
  2411  0FEF                     	;# 
  2412  0000                     	;# 
  2413  0001                     	;# 
  2414  0002                     	;# 
  2415  0003                     	;# 
  2416  0004                     	;# 
  2417  0005                     	;# 
  2418  0006                     	;# 
  2419  0007                     	;# 
  2420  0008                     	;# 
  2421  0009                     	;# 
  2422  000A                     	;# 
  2423  000B                     	;# 
  2424  000C                     	;# 
  2425  000D                     	;# 
  2426  000E                     	;# 
  2427  0010                     	;# 
  2428  0011                     	;# 
  2429  0012                     	;# 
  2430  0013                     	;# 
  2431  0014                     	;# 
  2432  0015                     	;# 
  2433  0015                     	;# 
  2434  0016                     	;# 
  2435  0016                     	;# 
  2436  0017                     	;# 
  2437  0018                     	;# 
  2438  0019                     	;# 
  2439  0019                     	;# 
  2440  001A                     	;# 
  2441  001B                     	;# 
  2442  001C                     	;# 
  2443  001D                     	;# 
  2444  001E                     	;# 
  2445  001F                     	;# 
  2446  008C                     	;# 
  2447  008D                     	;# 
  2448  008E                     	;# 
  2449  0090                     	;# 
  2450  0091                     	;# 
  2451  0092                     	;# 
  2452  0093                     	;# 
  2453  0094                     	;# 
  2454  0097                     	;# 
  2455  009B                     	;# 
  2456  009B                     	;# 
  2457  009C                     	;# 
  2458  009D                     	;# 
  2459  009E                     	;# 
  2460  009F                     	;# 
  2461  010C                     	;# 
  2462  010D                     	;# 
  2463  010E                     	;# 
  2464  0111                     	;# 
  2465  0112                     	;# 
  2466  0113                     	;# 
  2467  0114                     	;# 
  2468  0115                     	;# 
  2469  0116                     	;# 
  2470  0117                     	;# 
  2471  0118                     	;# 
  2472  0119                     	;# 
  2473  018C                     	;# 
  2474  018D                     	;# 
  2475  018E                     	;# 
  2476  0197                     	;# 
  2477  0199                     	;# 
  2478  0199                     	;# 
  2479  0199                     	;# 
  2480  019A                     	;# 
  2481  019A                     	;# 
  2482  019A                     	;# 
  2483  019B                     	;# 
  2484  019B                     	;# 
  2485  019B                     	;# 
  2486  019B                     	;# 
  2487  019B                     	;# 
  2488  019C                     	;# 
  2489  019C                     	;# 
  2490  019C                     	;# 
  2491  019D                     	;# 
  2492  019D                     	;# 
  2493  019D                     	;# 
  2494  019E                     	;# 
  2495  019E                     	;# 
  2496  019E                     	;# 
  2497  019F                     	;# 
  2498  019F                     	;# 
  2499  019F                     	;# 
  2500  019F                     	;# 
  2501  019F                     	;# 
  2502  020C                     	;# 
  2503  020D                     	;# 
  2504  020E                     	;# 
  2505  0211                     	;# 
  2506  0211                     	;# 
  2507  0212                     	;# 
  2508  0212                     	;# 
  2509  0213                     	;# 
  2510  0213                     	;# 
  2511  0214                     	;# 
  2512  0214                     	;# 
  2513  0215                     	;# 
  2514  0215                     	;# 
  2515  0215                     	;# 
  2516  0215                     	;# 
  2517  0216                     	;# 
  2518  0216                     	;# 
  2519  0217                     	;# 
  2520  0217                     	;# 
  2521  0219                     	;# 
  2522  021A                     	;# 
  2523  021B                     	;# 
  2524  021C                     	;# 
  2525  021D                     	;# 
  2526  021D                     	;# 
  2527  021E                     	;# 
  2528  021F                     	;# 
  2529  028C                     	;# 
  2530  028D                     	;# 
  2531  028E                     	;# 
  2532  0291                     	;# 
  2533  0291                     	;# 
  2534  0292                     	;# 
  2535  0293                     	;# 
  2536  0294                     	;# 
  2537  0295                     	;# 
  2538  0295                     	;# 
  2539  0296                     	;# 
  2540  0297                     	;# 
  2541  0298                     	;# 
  2542  029F                     	;# 
  2543  030C                     	;# 
  2544  030D                     	;# 
  2545  030E                     	;# 
  2546  0311                     	;# 
  2547  0311                     	;# 
  2548  0312                     	;# 
  2549  0313                     	;# 
  2550  0314                     	;# 
  2551  0315                     	;# 
  2552  0315                     	;# 
  2553  0316                     	;# 
  2554  0317                     	;# 
  2555  0318                     	;# 
  2556  038C                     	;# 
  2557  038D                     	;# 
  2558  038E                     	;# 
  2559  0391                     	;# 
  2560  0392                     	;# 
  2561  0393                     	;# 
  2562  0394                     	;# 
  2563  0395                     	;# 
  2564  0396                     	;# 
  2565  0397                     	;# 
  2566  0398                     	;# 
  2567  0399                     	;# 
  2568  039A                     	;# 
  2569  039C                     	;# 
  2570  039D                     	;# 
  2571  039E                     	;# 
  2572  039F                     	;# 
  2573  0411                     	;# 
  2574  0411                     	;# 
  2575  0412                     	;# 
  2576  0413                     	;# 
  2577  0414                     	;# 
  2578  0415                     	;# 
  2579  0416                     	;# 
  2580  0417                     	;# 
  2581  0418                     	;# 
  2582  0418                     	;# 
  2583  0419                     	;# 
  2584  041A                     	;# 
  2585  041B                     	;# 
  2586  041C                     	;# 
  2587  041D                     	;# 
  2588  041E                     	;# 
  2589  041F                     	;# 
  2590  0498                     	;# 
  2591  0498                     	;# 
  2592  0499                     	;# 
  2593  049A                     	;# 
  2594  049B                     	;# 
  2595  049B                     	;# 
  2596  049C                     	;# 
  2597  049D                     	;# 
  2598  049E                     	;# 
  2599  049F                     	;# 
  2600  0617                     	;# 
  2601  0618                     	;# 
  2602  0619                     	;# 
  2603  0619                     	;# 
  2604  061A                     	;# 
  2605  061B                     	;# 
  2606  061C                     	;# 
  2607  061C                     	;# 
  2608  061F                     	;# 
  2609  0691                     	;# 
  2610  0692                     	;# 
  2611  0693                     	;# 
  2612  0694                     	;# 
  2613  0695                     	;# 
  2614  0696                     	;# 
  2615  0697                     	;# 
  2616  0698                     	;# 
  2617  0699                     	;# 
  2618  0711                     	;# 
  2619  0712                     	;# 
  2620  0713                     	;# 
  2621  0714                     	;# 
  2622  0715                     	;# 
  2623  0716                     	;# 
  2624  0717                     	;# 
  2625  0718                     	;# 
  2626  0719                     	;# 
  2627  0891                     	;# 
  2628  0891                     	;# 
  2629  0891                     	;# 
  2630  0891                     	;# 
  2631  0891                     	;# 
  2632  0891                     	;# 
  2633  0892                     	;# 
  2634  0892                     	;# 
  2635  0892                     	;# 
  2636  0893                     	;# 
  2637  0893                     	;# 
  2638  0893                     	;# 
  2639  0893                     	;# 
  2640  0893                     	;# 
  2641  0893                     	;# 
  2642  0894                     	;# 
  2643  0894                     	;# 
  2644  0894                     	;# 
  2645  0895                     	;# 
  2646  0895                     	;# 
  2647  0895                     	;# 
  2648  0896                     	;# 
  2649  0896                     	;# 
  2650  0896                     	;# 
  2651  089B                     	;# 
  2652  0911                     	;# 
  2653  0912                     	;# 
  2654  0913                     	;# 
  2655  0914                     	;# 
  2656  0915                     	;# 
  2657  0916                     	;# 
  2658  0918                     	;# 
  2659  0919                     	;# 
  2660  091A                     	;# 
  2661  091B                     	;# 
  2662  091C                     	;# 
  2663  091D                     	;# 
  2664  091E                     	;# 
  2665  091F                     	;# 
  2666  0E0F                     	;# 
  2667  0E10                     	;# 
  2668  0E11                     	;# 
  2669  0E12                     	;# 
  2670  0E13                     	;# 
  2671  0E14                     	;# 
  2672  0E15                     	;# 
  2673  0E16                     	;# 
  2674  0E17                     	;# 
  2675  0E18                     	;# 
  2676  0E19                     	;# 
  2677  0E1A                     	;# 
  2678  0E1B                     	;# 
  2679  0E1C                     	;# 
  2680  0E1D                     	;# 
  2681  0E1E                     	;# 
  2682  0E1F                     	;# 
  2683  0E20                     	;# 
  2684  0E21                     	;# 
  2685  0E22                     	;# 
  2686  0E24                     	;# 
  2687  0E25                     	;# 
  2688  0E28                     	;# 
  2689  0E29                     	;# 
  2690  0E2A                     	;# 
  2691  0E2B                     	;# 
  2692  0E2C                     	;# 
  2693  0E2D                     	;# 
  2694  0E2E                     	;# 
  2695  0E2F                     	;# 
  2696  0E90                     	;# 
  2697  0E91                     	;# 
  2698  0E92                     	;# 
  2699  0E94                     	;# 
  2700  0E95                     	;# 
  2701  0E9C                     	;# 
  2702  0E9D                     	;# 
  2703  0E9E                     	;# 
  2704  0E9F                     	;# 
  2705  0EA0                     	;# 
  2706  0EA1                     	;# 
  2707  0EA2                     	;# 
  2708  0EA3                     	;# 
  2709  0EA4                     	;# 
  2710  0EA5                     	;# 
  2711  0EA6                     	;# 
  2712  0EA7                     	;# 
  2713  0F0F                     	;# 
  2714  0F10                     	;# 
  2715  0F11                     	;# 
  2716  0F12                     	;# 
  2717  0F13                     	;# 
  2718  0F14                     	;# 
  2719  0F15                     	;# 
  2720  0F16                     	;# 
  2721  0F17                     	;# 
  2722  0F18                     	;# 
  2723  0F19                     	;# 
  2724  0F1A                     	;# 
  2725  0F1B                     	;# 
  2726  0F1C                     	;# 
  2727  0F1D                     	;# 
  2728  0F1E                     	;# 
  2729  0F1F                     	;# 
  2730  0F20                     	;# 
  2731  0F21                     	;# 
  2732  0F22                     	;# 
  2733  0F23                     	;# 
  2734  0F24                     	;# 
  2735  0F25                     	;# 
  2736  0F26                     	;# 
  2737  0F27                     	;# 
  2738  0F28                     	;# 
  2739  0F29                     	;# 
  2740  0F2A                     	;# 
  2741  0F2B                     	;# 
  2742  0F2C                     	;# 
  2743  0F2D                     	;# 
  2744  0F2E                     	;# 
  2745  0F2F                     	;# 
  2746  0F30                     	;# 
  2747  0F31                     	;# 
  2748  0F32                     	;# 
  2749  0F33                     	;# 
  2750  0F34                     	;# 
  2751  0F35                     	;# 
  2752  0F36                     	;# 
  2753  0F37                     	;# 
  2754  0FE4                     	;# 
  2755  0FE5                     	;# 
  2756  0FE6                     	;# 
  2757  0FE7                     	;# 
  2758  0FE8                     	;# 
  2759  0FE9                     	;# 
  2760  0FEA                     	;# 
  2761  0FEB                     	;# 
  2762  0FED                     	;# 
  2763  0FEE                     	;# 
  2764  0FEF                     	;# 
  2765  0000                     	;# 
  2766  0001                     	;# 
  2767  0002                     	;# 
  2768  0003                     	;# 
  2769  0004                     	;# 
  2770  0005                     	;# 
  2771  0006                     	;# 
  2772  0007                     	;# 
  2773  0008                     	;# 
  2774  0009                     	;# 
  2775  000A                     	;# 
  2776  000B                     	;# 
  2777  000C                     	;# 
  2778  000D                     	;# 
  2779  000E                     	;# 
  2780  0010                     	;# 
  2781  0011                     	;# 
  2782  0012                     	;# 
  2783  0013                     	;# 
  2784  0014                     	;# 
  2785  0015                     	;# 
  2786  0015                     	;# 
  2787  0016                     	;# 
  2788  0016                     	;# 
  2789  0017                     	;# 
  2790  0018                     	;# 
  2791  0019                     	;# 
  2792  0019                     	;# 
  2793  001A                     	;# 
  2794  001B                     	;# 
  2795  001C                     	;# 
  2796  001D                     	;# 
  2797  001E                     	;# 
  2798  001F                     	;# 
  2799  008C                     	;# 
  2800  008D                     	;# 
  2801  008E                     	;# 
  2802  0090                     	;# 
  2803  0091                     	;# 
  2804  0092                     	;# 
  2805  0093                     	;# 
  2806  0094                     	;# 
  2807  0097                     	;# 
  2808  009B                     	;# 
  2809  009B                     	;# 
  2810  009C                     	;# 
  2811  009D                     	;# 
  2812  009E                     	;# 
  2813  009F                     	;# 
  2814  010C                     	;# 
  2815  010D                     	;# 
  2816  010E                     	;# 
  2817  0111                     	;# 
  2818  0112                     	;# 
  2819  0113                     	;# 
  2820  0114                     	;# 
  2821  0115                     	;# 
  2822  0116                     	;# 
  2823  0117                     	;# 
  2824  0118                     	;# 
  2825  0119                     	;# 
  2826  018C                     	;# 
  2827  018D                     	;# 
  2828  018E                     	;# 
  2829  0197                     	;# 
  2830  0199                     	;# 
  2831  0199                     	;# 
  2832  0199                     	;# 
  2833  019A                     	;# 
  2834  019A                     	;# 
  2835  019A                     	;# 
  2836  019B                     	;# 
  2837  019B                     	;# 
  2838  019B                     	;# 
  2839  019B                     	;# 
  2840  019B                     	;# 
  2841  019C                     	;# 
  2842  019C                     	;# 
  2843  019C                     	;# 
  2844  019D                     	;# 
  2845  019D                     	;# 
  2846  019D                     	;# 
  2847  019E                     	;# 
  2848  019E                     	;# 
  2849  019E                     	;# 
  2850  019F                     	;# 
  2851  019F                     	;# 
  2852  019F                     	;# 
  2853  019F                     	;# 
  2854  019F                     	;# 
  2855  020C                     	;# 
  2856  020D                     	;# 
  2857  020E                     	;# 
  2858  0211                     	;# 
  2859  0211                     	;# 
  2860  0212                     	;# 
  2861  0212                     	;# 
  2862  0213                     	;# 
  2863  0213                     	;# 
  2864  0214                     	;# 
  2865  0214                     	;# 
  2866  0215                     	;# 
  2867  0215                     	;# 
  2868  0215                     	;# 
  2869  0215                     	;# 
  2870  0216                     	;# 
  2871  0216                     	;# 
  2872  0217                     	;# 
  2873  0217                     	;# 
  2874  0219                     	;# 
  2875  021A                     	;# 
  2876  021B                     	;# 
  2877  021C                     	;# 
  2878  021D                     	;# 
  2879  021D                     	;# 
  2880  021E                     	;# 
  2881  021F                     	;# 
  2882  028C                     	;# 
  2883  028D                     	;# 
  2884  028E                     	;# 
  2885  0291                     	;# 
  2886  0291                     	;# 
  2887  0292                     	;# 
  2888  0293                     	;# 
  2889  0294                     	;# 
  2890  0295                     	;# 
  2891  0295                     	;# 
  2892  0296                     	;# 
  2893  0297                     	;# 
  2894  0298                     	;# 
  2895  029F                     	;# 
  2896  030C                     	;# 
  2897  030D                     	;# 
  2898  030E                     	;# 
  2899  0311                     	;# 
  2900  0311                     	;# 
  2901  0312                     	;# 
  2902  0313                     	;# 
  2903  0314                     	;# 
  2904  0315                     	;# 
  2905  0315                     	;# 
  2906  0316                     	;# 
  2907  0317                     	;# 
  2908  0318                     	;# 
  2909  038C                     	;# 
  2910  038D                     	;# 
  2911  038E                     	;# 
  2912  0391                     	;# 
  2913  0392                     	;# 
  2914  0393                     	;# 
  2915  0394                     	;# 
  2916  0395                     	;# 
  2917  0396                     	;# 
  2918  0397                     	;# 
  2919  0398                     	;# 
  2920  0399                     	;# 
  2921  039A                     	;# 
  2922  039C                     	;# 
  2923  039D                     	;# 
  2924  039E                     	;# 
  2925  039F                     	;# 
  2926  0411                     	;# 
  2927  0411                     	;# 
  2928  0412                     	;# 
  2929  0413                     	;# 
  2930  0414                     	;# 
  2931  0415                     	;# 
  2932  0416                     	;# 
  2933  0417                     	;# 
  2934  0418                     	;# 
  2935  0418                     	;# 
  2936  0419                     	;# 
  2937  041A                     	;# 
  2938  041B                     	;# 
  2939  041C                     	;# 
  2940  041D                     	;# 
  2941  041E                     	;# 
  2942  041F                     	;# 
  2943  0498                     	;# 
  2944  0498                     	;# 
  2945  0499                     	;# 
  2946  049A                     	;# 
  2947  049B                     	;# 
  2948  049B                     	;# 
  2949  049C                     	;# 
  2950  049D                     	;# 
  2951  049E                     	;# 
  2952  049F                     	;# 
  2953  0617                     	;# 
  2954  0618                     	;# 
  2955  0619                     	;# 
  2956  0619                     	;# 
  2957  061A                     	;# 
  2958  061B                     	;# 
  2959  061C                     	;# 
  2960  061C                     	;# 
  2961  061F                     	;# 
  2962  0691                     	;# 
  2963  0692                     	;# 
  2964  0693                     	;# 
  2965  0694                     	;# 
  2966  0695                     	;# 
  2967  0696                     	;# 
  2968  0697                     	;# 
  2969  0698                     	;# 
  2970  0699                     	;# 
  2971  0711                     	;# 
  2972  0712                     	;# 
  2973  0713                     	;# 
  2974  0714                     	;# 
  2975  0715                     	;# 
  2976  0716                     	;# 
  2977  0717                     	;# 
  2978  0718                     	;# 
  2979  0719                     	;# 
  2980  0891                     	;# 
  2981  0891                     	;# 
  2982  0891                     	;# 
  2983  0891                     	;# 
  2984  0891                     	;# 
  2985  0891                     	;# 
  2986  0892                     	;# 
  2987  0892                     	;# 
  2988  0892                     	;# 
  2989  0893                     	;# 
  2990  0893                     	;# 
  2991  0893                     	;# 
  2992  0893                     	;# 
  2993  0893                     	;# 
  2994  0893                     	;# 
  2995  0894                     	;# 
  2996  0894                     	;# 
  2997  0894                     	;# 
  2998  0895                     	;# 
  2999  0895                     	;# 
  3000  0895                     	;# 
  3001  0896                     	;# 
  3002  0896                     	;# 
  3003  0896                     	;# 
  3004  089B                     	;# 
  3005  0911                     	;# 
  3006  0912                     	;# 
  3007  0913                     	;# 
  3008  0914                     	;# 
  3009  0915                     	;# 
  3010  0916                     	;# 
  3011  0918                     	;# 
  3012  0919                     	;# 
  3013  091A                     	;# 
  3014  091B                     	;# 
  3015  091C                     	;# 
  3016  091D                     	;# 
  3017  091E                     	;# 
  3018  091F                     	;# 
  3019  0E0F                     	;# 
  3020  0E10                     	;# 
  3021  0E11                     	;# 
  3022  0E12                     	;# 
  3023  0E13                     	;# 
  3024  0E14                     	;# 
  3025  0E15                     	;# 
  3026  0E16                     	;# 
  3027  0E17                     	;# 
  3028  0E18                     	;# 
  3029  0E19                     	;# 
  3030  0E1A                     	;# 
  3031  0E1B                     	;# 
  3032  0E1C                     	;# 
  3033  0E1D                     	;# 
  3034  0E1E                     	;# 
  3035  0E1F                     	;# 
  3036  0E20                     	;# 
  3037  0E21                     	;# 
  3038  0E22                     	;# 
  3039  0E24                     	;# 
  3040  0E25                     	;# 
  3041  0E28                     	;# 
  3042  0E29                     	;# 
  3043  0E2A                     	;# 
  3044  0E2B                     	;# 
  3045  0E2C                     	;# 
  3046  0E2D                     	;# 
  3047  0E2E                     	;# 
  3048  0E2F                     	;# 
  3049  0E90                     	;# 
  3050  0E91                     	;# 
  3051  0E92                     	;# 
  3052  0E94                     	;# 
  3053  0E95                     	;# 
  3054  0E9C                     	;# 
  3055  0E9D                     	;# 
  3056  0E9E                     	;# 
  3057  0E9F                     	;# 
  3058  0EA0                     	;# 
  3059  0EA1                     	;# 
  3060  0EA2                     	;# 
  3061  0EA3                     	;# 
  3062  0EA4                     	;# 
  3063  0EA5                     	;# 
  3064  0EA6                     	;# 
  3065  0EA7                     	;# 
  3066  0F0F                     	;# 
  3067  0F10                     	;# 
  3068  0F11                     	;# 
  3069  0F12                     	;# 
  3070  0F13                     	;# 
  3071  0F14                     	;# 
  3072  0F15                     	;# 
  3073  0F16                     	;# 
  3074  0F17                     	;# 
  3075  0F18                     	;# 
  3076  0F19                     	;# 
  3077  0F1A                     	;# 
  3078  0F1B                     	;# 
  3079  0F1C                     	;# 
  3080  0F1D                     	;# 
  3081  0F1E                     	;# 
  3082  0F1F                     	;# 
  3083  0F20                     	;# 
  3084  0F21                     	;# 
  3085  0F22                     	;# 
  3086  0F23                     	;# 
  3087  0F24                     	;# 
  3088  0F25                     	;# 
  3089  0F26                     	;# 
  3090  0F27                     	;# 
  3091  0F28                     	;# 
  3092  0F29                     	;# 
  3093  0F2A                     	;# 
  3094  0F2B                     	;# 
  3095  0F2C                     	;# 
  3096  0F2D                     	;# 
  3097  0F2E                     	;# 
  3098  0F2F                     	;# 
  3099  0F30                     	;# 
  3100  0F31                     	;# 
  3101  0F32                     	;# 
  3102  0F33                     	;# 
  3103  0F34                     	;# 
  3104  0F35                     	;# 
  3105  0F36                     	;# 
  3106  0F37                     	;# 
  3107  0FE4                     	;# 
  3108  0FE5                     	;# 
  3109  0FE6                     	;# 
  3110  0FE7                     	;# 
  3111  0FE8                     	;# 
  3112  0FE9                     	;# 
  3113  0FEA                     	;# 
  3114  0FEB                     	;# 
  3115  0FED                     	;# 
  3116  0FEE                     	;# 
  3117  0FEF                     	;# 
  3118  0000                     	;# 
  3119  0001                     	;# 
  3120  0002                     	;# 
  3121  0003                     	;# 
  3122  0004                     	;# 
  3123  0005                     	;# 
  3124  0006                     	;# 
  3125  0007                     	;# 
  3126  0008                     	;# 
  3127  0009                     	;# 
  3128  000A                     	;# 
  3129  000B                     	;# 
  3130  000C                     	;# 
  3131  000D                     	;# 
  3132  000E                     	;# 
  3133  0010                     	;# 
  3134  0011                     	;# 
  3135  0012                     	;# 
  3136  0013                     	;# 
  3137  0014                     	;# 
  3138  0015                     	;# 
  3139  0015                     	;# 
  3140  0016                     	;# 
  3141  0016                     	;# 
  3142  0017                     	;# 
  3143  0018                     	;# 
  3144  0019                     	;# 
  3145  0019                     	;# 
  3146  001A                     	;# 
  3147  001B                     	;# 
  3148  001C                     	;# 
  3149  001D                     	;# 
  3150  001E                     	;# 
  3151  001F                     	;# 
  3152  008C                     	;# 
  3153  008D                     	;# 
  3154  008E                     	;# 
  3155  0090                     	;# 
  3156  0091                     	;# 
  3157  0092                     	;# 
  3158  0093                     	;# 
  3159  0094                     	;# 
  3160  0097                     	;# 
  3161  009B                     	;# 
  3162  009B                     	;# 
  3163  009C                     	;# 
  3164  009D                     	;# 
  3165  009E                     	;# 
  3166  009F                     	;# 
  3167  010C                     	;# 
  3168  010D                     	;# 
  3169  010E                     	;# 
  3170  0111                     	;# 
  3171  0112                     	;# 
  3172  0113                     	;# 
  3173  0114                     	;# 
  3174  0115                     	;# 
  3175  0116                     	;# 
  3176  0117                     	;# 
  3177  0118                     	;# 
  3178  0119                     	;# 
  3179  018C                     	;# 
  3180  018D                     	;# 
  3181  018E                     	;# 
  3182  0197                     	;# 
  3183  0199                     	;# 
  3184  0199                     	;# 
  3185  0199                     	;# 
  3186  019A                     	;# 
  3187  019A                     	;# 
  3188  019A                     	;# 
  3189  019B                     	;# 
  3190  019B                     	;# 
  3191  019B                     	;# 
  3192  019B                     	;# 
  3193  019B                     	;# 
  3194  019C                     	;# 
  3195  019C                     	;# 
  3196  019C                     	;# 
  3197  019D                     	;# 
  3198  019D                     	;# 
  3199  019D                     	;# 
  3200  019E                     	;# 
  3201  019E                     	;# 
  3202  019E                     	;# 
  3203  019F                     	;# 
  3204  019F                     	;# 
  3205  019F                     	;# 
  3206  019F                     	;# 
  3207  019F                     	;# 
  3208  020C                     	;# 
  3209  020D                     	;# 
  3210  020E                     	;# 
  3211  0211                     	;# 
  3212  0211                     	;# 
  3213  0212                     	;# 
  3214  0212                     	;# 
  3215  0213                     	;# 
  3216  0213                     	;# 
  3217  0214                     	;# 
  3218  0214                     	;# 
  3219  0215                     	;# 
  3220  0215                     	;# 
  3221  0215                     	;# 
  3222  0215                     	;# 
  3223  0216                     	;# 
  3224  0216                     	;# 
  3225  0217                     	;# 
  3226  0217                     	;# 
  3227  0219                     	;# 
  3228  021A                     	;# 
  3229  021B                     	;# 
  3230  021C                     	;# 
  3231  021D                     	;# 
  3232  021D                     	;# 
  3233  021E                     	;# 
  3234  021F                     	;# 
  3235  028C                     	;# 
  3236  028D                     	;# 
  3237  028E                     	;# 
  3238  0291                     	;# 
  3239  0291                     	;# 
  3240  0292                     	;# 
  3241  0293                     	;# 
  3242  0294                     	;# 
  3243  0295                     	;# 
  3244  0295                     	;# 
  3245  0296                     	;# 
  3246  0297                     	;# 
  3247  0298                     	;# 
  3248  029F                     	;# 
  3249  030C                     	;# 
  3250  030D                     	;# 
  3251  030E                     	;# 
  3252  0311                     	;# 
  3253  0311                     	;# 
  3254  0312                     	;# 
  3255  0313                     	;# 
  3256  0314                     	;# 
  3257  0315                     	;# 
  3258  0315                     	;# 
  3259  0316                     	;# 
  3260  0317                     	;# 
  3261  0318                     	;# 
  3262  038C                     	;# 
  3263  038D                     	;# 
  3264  038E                     	;# 
  3265  0391                     	;# 
  3266  0392                     	;# 
  3267  0393                     	;# 
  3268  0394                     	;# 
  3269  0395                     	;# 
  3270  0396                     	;# 
  3271  0397                     	;# 
  3272  0398                     	;# 
  3273  0399                     	;# 
  3274  039A                     	;# 
  3275  039C                     	;# 
  3276  039D                     	;# 
  3277  039E                     	;# 
  3278  039F                     	;# 
  3279  0411                     	;# 
  3280  0411                     	;# 
  3281  0412                     	;# 
  3282  0413                     	;# 
  3283  0414                     	;# 
  3284  0415                     	;# 
  3285  0416                     	;# 
  3286  0417                     	;# 
  3287  0418                     	;# 
  3288  0418                     	;# 
  3289  0419                     	;# 
  3290  041A                     	;# 
  3291  041B                     	;# 
  3292  041C                     	;# 
  3293  041D                     	;# 
  3294  041E                     	;# 
  3295  041F                     	;# 
  3296  0498                     	;# 
  3297  0498                     	;# 
  3298  0499                     	;# 
  3299  049A                     	;# 
  3300  049B                     	;# 
  3301  049B                     	;# 
  3302  049C                     	;# 
  3303  049D                     	;# 
  3304  049E                     	;# 
  3305  049F                     	;# 
  3306  0617                     	;# 
  3307  0618                     	;# 
  3308  0619                     	;# 
  3309  0619                     	;# 
  3310  061A                     	;# 
  3311  061B                     	;# 
  3312  061C                     	;# 
  3313  061C                     	;# 
  3314  061F                     	;# 
  3315  0691                     	;# 
  3316  0692                     	;# 
  3317  0693                     	;# 
  3318  0694                     	;# 
  3319  0695                     	;# 
  3320  0696                     	;# 
  3321  0697                     	;# 
  3322  0698                     	;# 
  3323  0699                     	;# 
  3324  0711                     	;# 
  3325  0712                     	;# 
  3326  0713                     	;# 
  3327  0714                     	;# 
  3328  0715                     	;# 
  3329  0716                     	;# 
  3330  0717                     	;# 
  3331  0718                     	;# 
  3332  0719                     	;# 
  3333  0891                     	;# 
  3334  0891                     	;# 
  3335  0891                     	;# 
  3336  0891                     	;# 
  3337  0891                     	;# 
  3338  0891                     	;# 
  3339  0892                     	;# 
  3340  0892                     	;# 
  3341  0892                     	;# 
  3342  0893                     	;# 
  3343  0893                     	;# 
  3344  0893                     	;# 
  3345  0893                     	;# 
  3346  0893                     	;# 
  3347  0893                     	;# 
  3348  0894                     	;# 
  3349  0894                     	;# 
  3350  0894                     	;# 
  3351  0895                     	;# 
  3352  0895                     	;# 
  3353  0895                     	;# 
  3354  0896                     	;# 
  3355  0896                     	;# 
  3356  0896                     	;# 
  3357  089B                     	;# 
  3358  0911                     	;# 
  3359  0912                     	;# 
  3360  0913                     	;# 
  3361  0914                     	;# 
  3362  0915                     	;# 
  3363  0916                     	;# 
  3364  0918                     	;# 
  3365  0919                     	;# 
  3366  091A                     	;# 
  3367  091B                     	;# 
  3368  091C                     	;# 
  3369  091D                     	;# 
  3370  091E                     	;# 
  3371  091F                     	;# 
  3372  0E0F                     	;# 
  3373  0E10                     	;# 
  3374  0E11                     	;# 
  3375  0E12                     	;# 
  3376  0E13                     	;# 
  3377  0E14                     	;# 
  3378  0E15                     	;# 
  3379  0E16                     	;# 
  3380  0E17                     	;# 
  3381  0E18                     	;# 
  3382  0E19                     	;# 
  3383  0E1A                     	;# 
  3384  0E1B                     	;# 
  3385  0E1C                     	;# 
  3386  0E1D                     	;# 
  3387  0E1E                     	;# 
  3388  0E1F                     	;# 
  3389  0E20                     	;# 
  3390  0E21                     	;# 
  3391  0E22                     	;# 
  3392  0E24                     	;# 
  3393  0E25                     	;# 
  3394  0E28                     	;# 
  3395  0E29                     	;# 
  3396  0E2A                     	;# 
  3397  0E2B                     	;# 
  3398  0E2C                     	;# 
  3399  0E2D                     	;# 
  3400  0E2E                     	;# 
  3401  0E2F                     	;# 
  3402  0E90                     	;# 
  3403  0E91                     	;# 
  3404  0E92                     	;# 
  3405  0E94                     	;# 
  3406  0E95                     	;# 
  3407  0E9C                     	;# 
  3408  0E9D                     	;# 
  3409  0E9E                     	;# 
  3410  0E9F                     	;# 
  3411  0EA0                     	;# 
  3412  0EA1                     	;# 
  3413  0EA2                     	;# 
  3414  0EA3                     	;# 
  3415  0EA4                     	;# 
  3416  0EA5                     	;# 
  3417  0EA6                     	;# 
  3418  0EA7                     	;# 
  3419  0F0F                     	;# 
  3420  0F10                     	;# 
  3421  0F11                     	;# 
  3422  0F12                     	;# 
  3423  0F13                     	;# 
  3424  0F14                     	;# 
  3425  0F15                     	;# 
  3426  0F16                     	;# 
  3427  0F17                     	;# 
  3428  0F18                     	;# 
  3429  0F19                     	;# 
  3430  0F1A                     	;# 
  3431  0F1B                     	;# 
  3432  0F1C                     	;# 
  3433  0F1D                     	;# 
  3434  0F1E                     	;# 
  3435  0F1F                     	;# 
  3436  0F20                     	;# 
  3437  0F21                     	;# 
  3438  0F22                     	;# 
  3439  0F23                     	;# 
  3440  0F24                     	;# 
  3441  0F25                     	;# 
  3442  0F26                     	;# 
  3443  0F27                     	;# 
  3444  0F28                     	;# 
  3445  0F29                     	;# 
  3446  0F2A                     	;# 
  3447  0F2B                     	;# 
  3448  0F2C                     	;# 
  3449  0F2D                     	;# 
  3450  0F2E                     	;# 
  3451  0F2F                     	;# 
  3452  0F30                     	;# 
  3453  0F31                     	;# 
  3454  0F32                     	;# 
  3455  0F33                     	;# 
  3456  0F34                     	;# 
  3457  0F35                     	;# 
  3458  0F36                     	;# 
  3459  0F37                     	;# 
  3460  0FE4                     	;# 
  3461  0FE5                     	;# 
  3462  0FE6                     	;# 
  3463  0FE7                     	;# 
  3464  0FE8                     	;# 
  3465  0FE9                     	;# 
  3466  0FEA                     	;# 
  3467  0FEB                     	;# 
  3468  0FED                     	;# 
  3469  0FEE                     	;# 
  3470  0FEF                     	;# 
  3471  0000                     	;# 
  3472  0001                     	;# 
  3473  0002                     	;# 
  3474  0003                     	;# 
  3475  0004                     	;# 
  3476  0005                     	;# 
  3477  0006                     	;# 
  3478  0007                     	;# 
  3479  0008                     	;# 
  3480  0009                     	;# 
  3481  000A                     	;# 
  3482  000B                     	;# 
  3483  000C                     	;# 
  3484  000D                     	;# 
  3485  000E                     	;# 
  3486  0010                     	;# 
  3487  0011                     	;# 
  3488  0012                     	;# 
  3489  0013                     	;# 
  3490  0014                     	;# 
  3491  0015                     	;# 
  3492  0015                     	;# 
  3493  0016                     	;# 
  3494  0016                     	;# 
  3495  0017                     	;# 
  3496  0018                     	;# 
  3497  0019                     	;# 
  3498  0019                     	;# 
  3499  001A                     	;# 
  3500  001B                     	;# 
  3501  001C                     	;# 
  3502  001D                     	;# 
  3503  001E                     	;# 
  3504  001F                     	;# 
  3505  008C                     	;# 
  3506  008D                     	;# 
  3507  008E                     	;# 
  3508  0090                     	;# 
  3509  0091                     	;# 
  3510  0092                     	;# 
  3511  0093                     	;# 
  3512  0094                     	;# 
  3513  0097                     	;# 
  3514  009B                     	;# 
  3515  009B                     	;# 
  3516  009C                     	;# 
  3517  009D                     	;# 
  3518  009E                     	;# 
  3519  009F                     	;# 
  3520  010C                     	;# 
  3521  010D                     	;# 
  3522  010E                     	;# 
  3523  0111                     	;# 
  3524  0112                     	;# 
  3525  0113                     	;# 
  3526  0114                     	;# 
  3527  0115                     	;# 
  3528  0116                     	;# 
  3529  0117                     	;# 
  3530  0118                     	;# 
  3531  0119                     	;# 
  3532  018C                     	;# 
  3533  018D                     	;# 
  3534  018E                     	;# 
  3535  0197                     	;# 
  3536  0199                     	;# 
  3537  0199                     	;# 
  3538  0199                     	;# 
  3539  019A                     	;# 
  3540  019A                     	;# 
  3541  019A                     	;# 
  3542  019B                     	;# 
  3543  019B                     	;# 
  3544  019B                     	;# 
  3545  019B                     	;# 
  3546  019B                     	;# 
  3547  019C                     	;# 
  3548  019C                     	;# 
  3549  019C                     	;# 
  3550  019D                     	;# 
  3551  019D                     	;# 
  3552  019D                     	;# 
  3553  019E                     	;# 
  3554  019E                     	;# 
  3555  019E                     	;# 
  3556  019F                     	;# 
  3557  019F                     	;# 
  3558  019F                     	;# 
  3559  019F                     	;# 
  3560  019F                     	;# 
  3561  020C                     	;# 
  3562  020D                     	;# 
  3563  020E                     	;# 
  3564  0211                     	;# 
  3565  0211                     	;# 
  3566  0212                     	;# 
  3567  0212                     	;# 
  3568  0213                     	;# 
  3569  0213                     	;# 
  3570  0214                     	;# 
  3571  0214                     	;# 
  3572  0215                     	;# 
  3573  0215                     	;# 
  3574  0215                     	;# 
  3575  0215                     	;# 
  3576  0216                     	;# 
  3577  0216                     	;# 
  3578  0217                     	;# 
  3579  0217                     	;# 
  3580  0219                     	;# 
  3581  021A                     	;# 
  3582  021B                     	;# 
  3583  021C                     	;# 
  3584  021D                     	;# 
  3585  021D                     	;# 
  3586  021E                     	;# 
  3587  021F                     	;# 
  3588  028C                     	;# 
  3589  028D                     	;# 
  3590  028E                     	;# 
  3591  0291                     	;# 
  3592  0291                     	;# 
  3593  0292                     	;# 
  3594  0293                     	;# 
  3595  0294                     	;# 
  3596  0295                     	;# 
  3597  0295                     	;# 
  3598  0296                     	;# 
  3599  0297                     	;# 
  3600  0298                     	;# 
  3601  029F                     	;# 
  3602  030C                     	;# 
  3603  030D                     	;# 
  3604  030E                     	;# 
  3605  0311                     	;# 
  3606  0311                     	;# 
  3607  0312                     	;# 
  3608  0313                     	;# 
  3609  0314                     	;# 
  3610  0315                     	;# 
  3611  0315                     	;# 
  3612  0316                     	;# 
  3613  0317                     	;# 
  3614  0318                     	;# 
  3615  038C                     	;# 
  3616  038D                     	;# 
  3617  038E                     	;# 
  3618  0391                     	;# 
  3619  0392                     	;# 
  3620  0393                     	;# 
  3621  0394                     	;# 
  3622  0395                     	;# 
  3623  0396                     	;# 
  3624  0397                     	;# 
  3625  0398                     	;# 
  3626  0399                     	;# 
  3627  039A                     	;# 
  3628  039C                     	;# 
  3629  039D                     	;# 
  3630  039E                     	;# 
  3631  039F                     	;# 
  3632  0411                     	;# 
  3633  0411                     	;# 
  3634  0412                     	;# 
  3635  0413                     	;# 
  3636  0414                     	;# 
  3637  0415                     	;# 
  3638  0416                     	;# 
  3639  0417                     	;# 
  3640  0418                     	;# 
  3641  0418                     	;# 
  3642  0419                     	;# 
  3643  041A                     	;# 
  3644  041B                     	;# 
  3645  041C                     	;# 
  3646  041D                     	;# 
  3647  041E                     	;# 
  3648  041F                     	;# 
  3649  0498                     	;# 
  3650  0498                     	;# 
  3651  0499                     	;# 
  3652  049A                     	;# 
  3653  049B                     	;# 
  3654  049B                     	;# 
  3655  049C                     	;# 
  3656  049D                     	;# 
  3657  049E                     	;# 
  3658  049F                     	;# 
  3659  0617                     	;# 
  3660  0618                     	;# 
  3661  0619                     	;# 
  3662  0619                     	;# 
  3663  061A                     	;# 
  3664  061B                     	;# 
  3665  061C                     	;# 
  3666  061C                     	;# 
  3667  061F                     	;# 
  3668  0691                     	;# 
  3669  0692                     	;# 
  3670  0693                     	;# 
  3671  0694                     	;# 
  3672  0695                     	;# 
  3673  0696                     	;# 
  3674  0697                     	;# 
  3675  0698                     	;# 
  3676  0699                     	;# 
  3677  0711                     	;# 
  3678  0712                     	;# 
  3679  0713                     	;# 
  3680  0714                     	;# 
  3681  0715                     	;# 
  3682  0716                     	;# 
  3683  0717                     	;# 
  3684  0718                     	;# 
  3685  0719                     	;# 
  3686  0891                     	;# 
  3687  0891                     	;# 
  3688  0891                     	;# 
  3689  0891                     	;# 
  3690  0891                     	;# 
  3691  0891                     	;# 
  3692  0892                     	;# 
  3693  0892                     	;# 
  3694  0892                     	;# 
  3695  0893                     	;# 
  3696  0893                     	;# 
  3697  0893                     	;# 
  3698  0893                     	;# 
  3699  0893                     	;# 
  3700  0893                     	;# 
  3701  0894                     	;# 
  3702  0894                     	;# 
  3703  0894                     	;# 
  3704  0895                     	;# 
  3705  0895                     	;# 
  3706  0895                     	;# 
  3707  0896                     	;# 
  3708  0896                     	;# 
  3709  0896                     	;# 
  3710  089B                     	;# 
  3711  0911                     	;# 
  3712  0912                     	;# 
  3713  0913                     	;# 
  3714  0914                     	;# 
  3715  0915                     	;# 
  3716  0916                     	;# 
  3717  0918                     	;# 
  3718  0919                     	;# 
  3719  091A                     	;# 
  3720  091B                     	;# 
  3721  091C                     	;# 
  3722  091D                     	;# 
  3723  091E                     	;# 
  3724  091F                     	;# 
  3725  0E0F                     	;# 
  3726  0E10                     	;# 
  3727  0E11                     	;# 
  3728  0E12                     	;# 
  3729  0E13                     	;# 
  3730  0E14                     	;# 
  3731  0E15                     	;# 
  3732  0E16                     	;# 
  3733  0E17                     	;# 
  3734  0E18                     	;# 
  3735  0E19                     	;# 
  3736  0E1A                     	;# 
  3737  0E1B                     	;# 
  3738  0E1C                     	;# 
  3739  0E1D                     	;# 
  3740  0E1E                     	;# 
  3741  0E1F                     	;# 
  3742  0E20                     	;# 
  3743  0E21                     	;# 
  3744  0E22                     	;# 
  3745  0E24                     	;# 
  3746  0E25                     	;# 
  3747  0E28                     	;# 
  3748  0E29                     	;# 
  3749  0E2A                     	;# 
  3750  0E2B                     	;# 
  3751  0E2C                     	;# 
  3752  0E2D                     	;# 
  3753  0E2E                     	;# 
  3754  0E2F                     	;# 
  3755  0E90                     	;# 
  3756  0E91                     	;# 
  3757  0E92                     	;# 
  3758  0E94                     	;# 
  3759  0E95                     	;# 
  3760  0E9C                     	;# 
  3761  0E9D                     	;# 
  3762  0E9E                     	;# 
  3763  0E9F                     	;# 
  3764  0EA0                     	;# 
  3765  0EA1                     	;# 
  3766  0EA2                     	;# 
  3767  0EA3                     	;# 
  3768  0EA4                     	;# 
  3769  0EA5                     	;# 
  3770  0EA6                     	;# 
  3771  0EA7                     	;# 
  3772  0F0F                     	;# 
  3773  0F10                     	;# 
  3774  0F11                     	;# 
  3775  0F12                     	;# 
  3776  0F13                     	;# 
  3777  0F14                     	;# 
  3778  0F15                     	;# 
  3779  0F16                     	;# 
  3780  0F17                     	;# 
  3781  0F18                     	;# 
  3782  0F19                     	;# 
  3783  0F1A                     	;# 
  3784  0F1B                     	;# 
  3785  0F1C                     	;# 
  3786  0F1D                     	;# 
  3787  0F1E                     	;# 
  3788  0F1F                     	;# 
  3789  0F20                     	;# 
  3790  0F21                     	;# 
  3791  0F22                     	;# 
  3792  0F23                     	;# 
  3793  0F24                     	;# 
  3794  0F25                     	;# 
  3795  0F26                     	;# 
  3796  0F27                     	;# 
  3797  0F28                     	;# 
  3798  0F29                     	;# 
  3799  0F2A                     	;# 
  3800  0F2B                     	;# 
  3801  0F2C                     	;# 
  3802  0F2D                     	;# 
  3803  0F2E                     	;# 
  3804  0F2F                     	;# 
  3805  0F30                     	;# 
  3806  0F31                     	;# 
  3807  0F32                     	;# 
  3808  0F33                     	;# 
  3809  0F34                     	;# 
  3810  0F35                     	;# 
  3811  0F36                     	;# 
  3812  0F37                     	;# 
  3813  0FE4                     	;# 
  3814  0FE5                     	;# 
  3815  0FE6                     	;# 
  3816  0FE7                     	;# 
  3817  0FE8                     	;# 
  3818  0FE9                     	;# 
  3819  0FEA                     	;# 
  3820  0FEB                     	;# 
  3821  0FED                     	;# 
  3822  0FEE                     	;# 
  3823  0FEF                     	;# 
  3824  0000                     	;# 
  3825  0001                     	;# 
  3826  0002                     	;# 
  3827  0003                     	;# 
  3828  0004                     	;# 
  3829  0005                     	;# 
  3830  0006                     	;# 
  3831  0007                     	;# 
  3832  0008                     	;# 
  3833  0009                     	;# 
  3834  000A                     	;# 
  3835  000B                     	;# 
  3836  000C                     	;# 
  3837  000D                     	;# 
  3838  000E                     	;# 
  3839  0010                     	;# 
  3840  0011                     	;# 
  3841  0012                     	;# 
  3842  0013                     	;# 
  3843  0014                     	;# 
  3844  0015                     	;# 
  3845  0015                     	;# 
  3846  0016                     	;# 
  3847  0016                     	;# 
  3848  0017                     	;# 
  3849  0018                     	;# 
  3850  0019                     	;# 
  3851  0019                     	;# 
  3852  001A                     	;# 
  3853  001B                     	;# 
  3854  001C                     	;# 
  3855  001D                     	;# 
  3856  001E                     	;# 
  3857  001F                     	;# 
  3858  008C                     	;# 
  3859  008D                     	;# 
  3860  008E                     	;# 
  3861  0090                     	;# 
  3862  0091                     	;# 
  3863  0092                     	;# 
  3864  0093                     	;# 
  3865  0094                     	;# 
  3866  0097                     	;# 
  3867  009B                     	;# 
  3868  009B                     	;# 
  3869  009C                     	;# 
  3870  009D                     	;# 
  3871  009E                     	;# 
  3872  009F                     	;# 
  3873  010C                     	;# 
  3874  010D                     	;# 
  3875  010E                     	;# 
  3876  0111                     	;# 
  3877  0112                     	;# 
  3878  0113                     	;# 
  3879  0114                     	;# 
  3880  0115                     	;# 
  3881  0116                     	;# 
  3882  0117                     	;# 
  3883  0118                     	;# 
  3884  0119                     	;# 
  3885  018C                     	;# 
  3886  018D                     	;# 
  3887  018E                     	;# 
  3888  0197                     	;# 
  3889  0199                     	;# 
  3890  0199                     	;# 
  3891  0199                     	;# 
  3892  019A                     	;# 
  3893  019A                     	;# 
  3894  019A                     	;# 
  3895  019B                     	;# 
  3896  019B                     	;# 
  3897  019B                     	;# 
  3898  019B                     	;# 
  3899  019B                     	;# 
  3900  019C                     	;# 
  3901  019C                     	;# 
  3902  019C                     	;# 
  3903  019D                     	;# 
  3904  019D                     	;# 
  3905  019D                     	;# 
  3906  019E                     	;# 
  3907  019E                     	;# 
  3908  019E                     	;# 
  3909  019F                     	;# 
  3910  019F                     	;# 
  3911  019F                     	;# 
  3912  019F                     	;# 
  3913  019F                     	;# 
  3914  020C                     	;# 
  3915  020D                     	;# 
  3916  020E                     	;# 
  3917  0211                     	;# 
  3918  0211                     	;# 
  3919  0212                     	;# 
  3920  0212                     	;# 
  3921  0213                     	;# 
  3922  0213                     	;# 
  3923  0214                     	;# 
  3924  0214                     	;# 
  3925  0215                     	;# 
  3926  0215                     	;# 
  3927  0215                     	;# 
  3928  0215                     	;# 
  3929  0216                     	;# 
  3930  0216                     	;# 
  3931  0217                     	;# 
  3932  0217                     	;# 
  3933  0219                     	;# 
  3934  021A                     	;# 
  3935  021B                     	;# 
  3936  021C                     	;# 
  3937  021D                     	;# 
  3938  021D                     	;# 
  3939  021E                     	;# 
  3940  021F                     	;# 
  3941  028C                     	;# 
  3942  028D                     	;# 
  3943  028E                     	;# 
  3944  0291                     	;# 
  3945  0291                     	;# 
  3946  0292                     	;# 
  3947  0293                     	;# 
  3948  0294                     	;# 
  3949  0295                     	;# 
  3950  0295                     	;# 
  3951  0296                     	;# 
  3952  0297                     	;# 
  3953  0298                     	;# 
  3954  029F                     	;# 
  3955  030C                     	;# 
  3956  030D                     	;# 
  3957  030E                     	;# 
  3958  0311                     	;# 
  3959  0311                     	;# 
  3960  0312                     	;# 
  3961  0313                     	;# 
  3962  0314                     	;# 
  3963  0315                     	;# 
  3964  0315                     	;# 
  3965  0316                     	;# 
  3966  0317                     	;# 
  3967  0318                     	;# 
  3968  038C                     	;# 
  3969  038D                     	;# 
  3970  038E                     	;# 
  3971  0391                     	;# 
  3972  0392                     	;# 
  3973  0393                     	;# 
  3974  0394                     	;# 
  3975  0395                     	;# 
  3976  0396                     	;# 
  3977  0397                     	;# 
  3978  0398                     	;# 
  3979  0399                     	;# 
  3980  039A                     	;# 
  3981  039C                     	;# 
  3982  039D                     	;# 
  3983  039E                     	;# 
  3984  039F                     	;# 
  3985  0411                     	;# 
  3986  0411                     	;# 
  3987  0412                     	;# 
  3988  0413                     	;# 
  3989  0414                     	;# 
  3990  0415                     	;# 
  3991  0416                     	;# 
  3992  0417                     	;# 
  3993  0418                     	;# 
  3994  0418                     	;# 
  3995  0419                     	;# 
  3996  041A                     	;# 
  3997  041B                     	;# 
  3998  041C                     	;# 
  3999  041D                     	;# 
  4000  041E                     	;# 
  4001  041F                     	;# 
  4002  0498                     	;# 
  4003  0498                     	;# 
  4004  0499                     	;# 
  4005  049A                     	;# 
  4006  049B                     	;# 
  4007  049B                     	;# 
  4008  049C                     	;# 
  4009  049D                     	;# 
  4010  049E                     	;# 
  4011  049F                     	;# 
  4012  0617                     	;# 
  4013  0618                     	;# 
  4014  0619                     	;# 
  4015  0619                     	;# 
  4016  061A                     	;# 
  4017  061B                     	;# 
  4018  061C                     	;# 
  4019  061C                     	;# 
  4020  061F                     	;# 
  4021  0691                     	;# 
  4022  0692                     	;# 
  4023  0693                     	;# 
  4024  0694                     	;# 
  4025  0695                     	;# 
  4026  0696                     	;# 
  4027  0697                     	;# 
  4028  0698                     	;# 
  4029  0699                     	;# 
  4030  0711                     	;# 
  4031  0712                     	;# 
  4032  0713                     	;# 
  4033  0714                     	;# 
  4034  0715                     	;# 
  4035  0716                     	;# 
  4036  0717                     	;# 
  4037  0718                     	;# 
  4038  0719                     	;# 
  4039  0891                     	;# 
  4040  0891                     	;# 
  4041  0891                     	;# 
  4042  0891                     	;# 
  4043  0891                     	;# 
  4044  0891                     	;# 
  4045  0892                     	;# 
  4046  0892                     	;# 
  4047  0892                     	;# 
  4048  0893                     	;# 
  4049  0893                     	;# 
  4050  0893                     	;# 
  4051  0893                     	;# 
  4052  0893                     	;# 
  4053  0893                     	;# 
  4054  0894                     	;# 
  4055  0894                     	;# 
  4056  0894                     	;# 
  4057  0895                     	;# 
  4058  0895                     	;# 
  4059  0895                     	;# 
  4060  0896                     	;# 
  4061  0896                     	;# 
  4062  0896                     	;# 
  4063  089B                     	;# 
  4064  0911                     	;# 
  4065  0912                     	;# 
  4066  0913                     	;# 
  4067  0914                     	;# 
  4068  0915                     	;# 
  4069  0916                     	;# 
  4070  0918                     	;# 
  4071  0919                     	;# 
  4072  091A                     	;# 
  4073  091B                     	;# 
  4074  091C                     	;# 
  4075  091D                     	;# 
  4076  091E                     	;# 
  4077  091F                     	;# 
  4078  0E0F                     	;# 
  4079  0E10                     	;# 
  4080  0E11                     	;# 
  4081  0E12                     	;# 
  4082  0E13                     	;# 
  4083  0E14                     	;# 
  4084  0E15                     	;# 
  4085  0E16                     	;# 
  4086  0E17                     	;# 
  4087  0E18                     	;# 
  4088  0E19                     	;# 
  4089  0E1A                     	;# 
  4090  0E1B                     	;# 
  4091  0E1C                     	;# 
  4092  0E1D                     	;# 
  4093  0E1E                     	;# 
  4094  0E1F                     	;# 
  4095  0E20                     	;# 
  4096  0E21                     	;# 
  4097  0E22                     	;# 
  4098  0E24                     	;# 
  4099  0E25                     	;# 
  4100  0E28                     	;# 
  4101  0E29                     	;# 
  4102  0E2A                     	;# 
  4103  0E2B                     	;# 
  4104  0E2C                     	;# 
  4105  0E2D                     	;# 
  4106  0E2E                     	;# 
  4107  0E2F                     	;# 
  4108  0E90                     	;# 
  4109  0E91                     	;# 
  4110  0E92                     	;# 
  4111  0E94                     	;# 
  4112  0E95                     	;# 
  4113  0E9C                     	;# 
  4114  0E9D                     	;# 
  4115  0E9E                     	;# 
  4116  0E9F                     	;# 
  4117  0EA0                     	;# 
  4118  0EA1                     	;# 
  4119  0EA2                     	;# 
  4120  0EA3                     	;# 
  4121  0EA4                     	;# 
  4122  0EA5                     	;# 
  4123  0EA6                     	;# 
  4124  0EA7                     	;# 
  4125  0F0F                     	;# 
  4126  0F10                     	;# 
  4127  0F11                     	;# 
  4128  0F12                     	;# 
  4129  0F13                     	;# 
  4130  0F14                     	;# 
  4131  0F15                     	;# 
  4132  0F16                     	;# 
  4133  0F17                     	;# 
  4134  0F18                     	;# 
  4135  0F19                     	;# 
  4136  0F1A                     	;# 
  4137  0F1B                     	;# 
  4138  0F1C                     	;# 
  4139  0F1D                     	;# 
  4140  0F1E                     	;# 
  4141  0F1F                     	;# 
  4142  0F20                     	;# 
  4143  0F21                     	;# 
  4144  0F22                     	;# 
  4145  0F23                     	;# 
  4146  0F24                     	;# 
  4147  0F25                     	;# 
  4148  0F26                     	;# 
  4149  0F27                     	;# 
  4150  0F28                     	;# 
  4151  0F29                     	;# 
  4152  0F2A                     	;# 
  4153  0F2B                     	;# 
  4154  0F2C                     	;# 
  4155  0F2D                     	;# 
  4156  0F2E                     	;# 
  4157  0F2F                     	;# 
  4158  0F30                     	;# 
  4159  0F31                     	;# 
  4160  0F32                     	;# 
  4161  0F33                     	;# 
  4162  0F34                     	;# 
  4163  0F35                     	;# 
  4164  0F36                     	;# 
  4165  0F37                     	;# 
  4166  0FE4                     	;# 
  4167  0FE5                     	;# 
  4168  0FE6                     	;# 
  4169  0FE7                     	;# 
  4170  0FE8                     	;# 
  4171  0FE9                     	;# 
  4172  0FEA                     	;# 
  4173  0FEB                     	;# 
  4174  0FED                     	;# 
  4175  0FEE                     	;# 
  4176  0FEF                     	;# 
  4177  0000                     	;# 
  4178  0001                     	;# 
  4179  0002                     	;# 
  4180  0003                     	;# 
  4181  0004                     	;# 
  4182  0005                     	;# 
  4183  0006                     	;# 
  4184  0007                     	;# 
  4185  0008                     	;# 
  4186  0009                     	;# 
  4187  000A                     	;# 
  4188  000B                     	;# 
  4189  000C                     	;# 
  4190  000D                     	;# 
  4191  000E                     	;# 
  4192  0010                     	;# 
  4193  0011                     	;# 
  4194  0012                     	;# 
  4195  0013                     	;# 
  4196  0014                     	;# 
  4197  0015                     	;# 
  4198  0015                     	;# 
  4199  0016                     	;# 
  4200  0016                     	;# 
  4201  0017                     	;# 
  4202  0018                     	;# 
  4203  0019                     	;# 
  4204  0019                     	;# 
  4205  001A                     	;# 
  4206  001B                     	;# 
  4207  001C                     	;# 
  4208  001D                     	;# 
  4209  001E                     	;# 
  4210  001F                     	;# 
  4211  008C                     	;# 
  4212  008D                     	;# 
  4213  008E                     	;# 
  4214  0090                     	;# 
  4215  0091                     	;# 
  4216  0092                     	;# 
  4217  0093                     	;# 
  4218  0094                     	;# 
  4219  0097                     	;# 
  4220  009B                     	;# 
  4221  009B                     	;# 
  4222  009C                     	;# 
  4223  009D                     	;# 
  4224  009E                     	;# 
  4225  009F                     	;# 
  4226  010C                     	;# 
  4227  010D                     	;# 
  4228  010E                     	;# 
  4229  0111                     	;# 
  4230  0112                     	;# 
  4231  0113                     	;# 
  4232  0114                     	;# 
  4233  0115                     	;# 
  4234  0116                     	;# 
  4235  0117                     	;# 
  4236  0118                     	;# 
  4237  0119                     	;# 
  4238  018C                     	;# 
  4239  018D                     	;# 
  4240  018E                     	;# 
  4241  0197                     	;# 
  4242  0199                     	;# 
  4243  0199                     	;# 
  4244  0199                     	;# 
  4245  019A                     	;# 
  4246  019A                     	;# 
  4247  019A                     	;# 
  4248  019B                     	;# 
  4249  019B                     	;# 
  4250  019B                     	;# 
  4251  019B                     	;# 
  4252  019B                     	;# 
  4253  019C                     	;# 
  4254  019C                     	;# 
  4255  019C                     	;# 
  4256  019D                     	;# 
  4257  019D                     	;# 
  4258  019D                     	;# 
  4259  019E                     	;# 
  4260  019E                     	;# 
  4261  019E                     	;# 
  4262  019F                     	;# 
  4263  019F                     	;# 
  4264  019F                     	;# 
  4265  019F                     	;# 
  4266  019F                     	;# 
  4267  020C                     	;# 
  4268  020D                     	;# 
  4269  020E                     	;# 
  4270  0211                     	;# 
  4271  0211                     	;# 
  4272  0212                     	;# 
  4273  0212                     	;# 
  4274  0213                     	;# 
  4275  0213                     	;# 
  4276  0214                     	;# 
  4277  0214                     	;# 
  4278  0215                     	;# 
  4279  0215                     	;# 
  4280  0215                     	;# 
  4281  0215                     	;# 
  4282  0216                     	;# 
  4283  0216                     	;# 
  4284  0217                     	;# 
  4285  0217                     	;# 
  4286  0219                     	;# 
  4287  021A                     	;# 
  4288  021B                     	;# 
  4289  021C                     	;# 
  4290  021D                     	;# 
  4291  021D                     	;# 
  4292  021E                     	;# 
  4293  021F                     	;# 
  4294  028C                     	;# 
  4295  028D                     	;# 
  4296  028E                     	;# 
  4297  0291                     	;# 
  4298  0291                     	;# 
  4299  0292                     	;# 
  4300  0293                     	;# 
  4301  0294                     	;# 
  4302  0295                     	;# 
  4303  0295                     	;# 
  4304  0296                     	;# 
  4305  0297                     	;# 
  4306  0298                     	;# 
  4307  029F                     	;# 
  4308  030C                     	;# 
  4309  030D                     	;# 
  4310  030E                     	;# 
  4311  0311                     	;# 
  4312  0311                     	;# 
  4313  0312                     	;# 
  4314  0313                     	;# 
  4315  0314                     	;# 
  4316  0315                     	;# 
  4317  0315                     	;# 
  4318  0316                     	;# 
  4319  0317                     	;# 
  4320  0318                     	;# 
  4321  038C                     	;# 
  4322  038D                     	;# 
  4323  038E                     	;# 
  4324  0391                     	;# 
  4325  0392                     	;# 
  4326  0393                     	;# 
  4327  0394                     	;# 
  4328  0395                     	;# 
  4329  0396                     	;# 
  4330  0397                     	;# 
  4331  0398                     	;# 
  4332  0399                     	;# 
  4333  039A                     	;# 
  4334  039C                     	;# 
  4335  039D                     	;# 
  4336  039E                     	;# 
  4337  039F                     	;# 
  4338  0411                     	;# 
  4339  0411                     	;# 
  4340  0412                     	;# 
  4341  0413                     	;# 
  4342  0414                     	;# 
  4343  0415                     	;# 
  4344  0416                     	;# 
  4345  0417                     	;# 
  4346  0418                     	;# 
  4347  0418                     	;# 
  4348  0419                     	;# 
  4349  041A                     	;# 
  4350  041B                     	;# 
  4351  041C                     	;# 
  4352  041D                     	;# 
  4353  041E                     	;# 
  4354  041F                     	;# 
  4355  0498                     	;# 
  4356  0498                     	;# 
  4357  0499                     	;# 
  4358  049A                     	;# 
  4359  049B                     	;# 
  4360  049B                     	;# 
  4361  049C                     	;# 
  4362  049D                     	;# 
  4363  049E                     	;# 
  4364  049F                     	;# 
  4365  0617                     	;# 
  4366  0618                     	;# 
  4367  0619                     	;# 
  4368  0619                     	;# 
  4369  061A                     	;# 
  4370  061B                     	;# 
  4371  061C                     	;# 
  4372  061C                     	;# 
  4373  061F                     	;# 
  4374  0691                     	;# 
  4375  0692                     	;# 
  4376  0693                     	;# 
  4377  0694                     	;# 
  4378  0695                     	;# 
  4379  0696                     	;# 
  4380  0697                     	;# 
  4381  0698                     	;# 
  4382  0699                     	;# 
  4383  0711                     	;# 
  4384  0712                     	;# 
  4385  0713                     	;# 
  4386  0714                     	;# 
  4387  0715                     	;# 
  4388  0716                     	;# 
  4389  0717                     	;# 
  4390  0718                     	;# 
  4391  0719                     	;# 
  4392  0891                     	;# 
  4393  0891                     	;# 
  4394  0891                     	;# 
  4395  0891                     	;# 
  4396  0891                     	;# 
  4397  0891                     	;# 
  4398  0892                     	;# 
  4399  0892                     	;# 
  4400  0892                     	;# 
  4401  0893                     	;# 
  4402  0893                     	;# 
  4403  0893                     	;# 
  4404  0893                     	;# 
  4405  0893                     	;# 
  4406  0893                     	;# 
  4407  0894                     	;# 
  4408  0894                     	;# 
  4409  0894                     	;# 
  4410  0895                     	;# 
  4411  0895                     	;# 
  4412  0895                     	;# 
  4413  0896                     	;# 
  4414  0896                     	;# 
  4415  0896                     	;# 
  4416  089B                     	;# 
  4417  0911                     	;# 
  4418  0912                     	;# 
  4419  0913                     	;# 
  4420  0914                     	;# 
  4421  0915                     	;# 
  4422  0916                     	;# 
  4423  0918                     	;# 
  4424  0919                     	;# 
  4425  091A                     	;# 
  4426  091B                     	;# 
  4427  091C                     	;# 
  4428  091D                     	;# 
  4429  091E                     	;# 
  4430  091F                     	;# 
  4431  0E0F                     	;# 
  4432  0E10                     	;# 
  4433  0E11                     	;# 
  4434  0E12                     	;# 
  4435  0E13                     	;# 
  4436  0E14                     	;# 
  4437  0E15                     	;# 
  4438  0E16                     	;# 
  4439  0E17                     	;# 
  4440  0E18                     	;# 
  4441  0E19                     	;# 
  4442  0E1A                     	;# 
  4443  0E1B                     	;# 
  4444  0E1C                     	;# 
  4445  0E1D                     	;# 
  4446  0E1E                     	;# 
  4447  0E1F                     	;# 
  4448  0E20                     	;# 
  4449  0E21                     	;# 
  4450  0E22                     	;# 
  4451  0E24                     	;# 
  4452  0E25                     	;# 
  4453  0E28                     	;# 
  4454  0E29                     	;# 
  4455  0E2A                     	;# 
  4456  0E2B                     	;# 
  4457  0E2C                     	;# 
  4458  0E2D                     	;# 
  4459  0E2E                     	;# 
  4460  0E2F                     	;# 
  4461  0E90                     	;# 
  4462  0E91                     	;# 
  4463  0E92                     	;# 
  4464  0E94                     	;# 
  4465  0E95                     	;# 
  4466  0E9C                     	;# 
  4467  0E9D                     	;# 
  4468  0E9E                     	;# 
  4469  0E9F                     	;# 
  4470  0EA0                     	;# 
  4471  0EA1                     	;# 
  4472  0EA2                     	;# 
  4473  0EA3                     	;# 
  4474  0EA4                     	;# 
  4475  0EA5                     	;# 
  4476  0EA6                     	;# 
  4477  0EA7                     	;# 
  4478  0F0F                     	;# 
  4479  0F10                     	;# 
  4480  0F11                     	;# 
  4481  0F12                     	;# 
  4482  0F13                     	;# 
  4483  0F14                     	;# 
  4484  0F15                     	;# 
  4485  0F16                     	;# 
  4486  0F17                     	;# 
  4487  0F18                     	;# 
  4488  0F19                     	;# 
  4489  0F1A                     	;# 
  4490  0F1B                     	;# 
  4491  0F1C                     	;# 
  4492  0F1D                     	;# 
  4493  0F1E                     	;# 
  4494  0F1F                     	;# 
  4495  0F20                     	;# 
  4496  0F21                     	;# 
  4497  0F22                     	;# 
  4498  0F23                     	;# 
  4499  0F24                     	;# 
  4500  0F25                     	;# 
  4501  0F26                     	;# 
  4502  0F27                     	;# 
  4503  0F28                     	;# 
  4504  0F29                     	;# 
  4505  0F2A                     	;# 
  4506  0F2B                     	;# 
  4507  0F2C                     	;# 
  4508  0F2D                     	;# 
  4509  0F2E                     	;# 
  4510  0F2F                     	;# 
  4511  0F30                     	;# 
  4512  0F31                     	;# 
  4513  0F32                     	;# 
  4514  0F33                     	;# 
  4515  0F34                     	;# 
  4516  0F35                     	;# 
  4517  0F36                     	;# 
  4518  0F37                     	;# 
  4519  0FE4                     	;# 
  4520  0FE5                     	;# 
  4521  0FE6                     	;# 
  4522  0FE7                     	;# 
  4523  0FE8                     	;# 
  4524  0FE9                     	;# 
  4525  0FEA                     	;# 
  4526  0FEB                     	;# 
  4527  0FED                     	;# 
  4528  0FEE                     	;# 
  4529  0FEF                     	;_currentPositions_steps
  4530                           
  4531                           	psect	idataBANK0
  4532  2207                     __pidataBANK0:	
  4533                           
  4534                           ;initializer for _demoLong
  4535  2207  3401               	retlw	1
  4536  2208  3400               	retlw	0
  4537  2209  3400               	retlw	0
  4538  220A  3400               	retlw	0
  4539                           
  4540                           	psect	idataBANK1
  4541  2247                     __pidataBANK1:	
  4542                           
  4543                           ;initializer for _piezo_on_time_ms
  4544  2247  34E8               	retlw	232
  4545  2248  3403               	retlw	3
  4546                           
  4547                           ;initializer for _heater_post_time_ms
  4548  2249  340A               	retlw	10
  4549  224A  3400               	retlw	0
  4550                           
  4551                           ;initializer for _heater_pre_time_ms
  4552  224B  340A               	retlw	10
  4553  224C  3400               	retlw	0
  4554                           
  4555                           	psect	idataBANK2
  4556  0002                     __pidataBANK2:	
  4557                           
  4558                           ;initializer for _drv_peak_val
  4559  0002  347F               	retlw	127
  4560  0003  3400               	retlw	0
  4561                           
  4562                           	psect	idataBANK4
  4563  256C                     __pidataBANK4:	
  4564                           
  4565                           ;initializer for _fsmStateTable
  4566  256C  34C6               	retlw	low _do_I2C_IDLE
  4567  256D  3422               	retlw	high _do_I2C_IDLE
  4568  256E  3435               	retlw	low _do_I2C_SEND_ADR_READ
  4569  256F  3423               	retlw	high _do_I2C_SEND_ADR_READ
  4570  2570  341E               	retlw	low _do_I2C_SEND_ADR_WRITE
  4571  2571  3423               	retlw	high _do_I2C_SEND_ADR_WRITE
  4572  2572  34C5               	retlw	low _do_I2C_TX
  4573  2573  341D               	retlw	high _do_I2C_TX
  4574  2574  34D3               	retlw	low _do_I2C_RX
  4575  2575  3419               	retlw	high _do_I2C_RX
  4576  2576  34EB               	retlw	low _do_I2C_RCEN
  4577  2577  3422               	retlw	high _do_I2C_RCEN
  4578  2578  3471               	retlw	low _do_I2C_TX_EMPTY
  4579  2579  3427               	retlw	high _do_I2C_TX_EMPTY
  4580  257A  346B               	retlw	low _do_I2C_SEND_RESTART_READ
  4581  257B  3422               	retlw	high _do_I2C_SEND_RESTART_READ
  4582  257C  3473               	retlw	low _do_I2C_SEND_RESTART_WRITE
  4583  257D  3422               	retlw	high _do_I2C_SEND_RESTART_WRITE
  4584  257E  347B               	retlw	low _do_I2C_SEND_RESTART
  4585  257F  3422               	retlw	high _do_I2C_SEND_RESTART
  4586  2580  3483               	retlw	low _do_I2C_SEND_STOP
  4587  2581  3422               	retlw	high _do_I2C_SEND_STOP
  4588  2582  348B               	retlw	low _do_I2C_DO_ACK
  4589  2583  3422               	retlw	high _do_I2C_DO_ACK
  4590  2584  3493               	retlw	low _do_I2C_DO_NACK_STOP
  4591  2585  3422               	retlw	high _do_I2C_DO_NACK_STOP
  4592  2586  349B               	retlw	low _do_I2C_DO_NACK_RESTART
  4593  2587  3422               	retlw	high _do_I2C_DO_NACK_RESTART
  4594  2588  3413               	retlw	low _do_I2C_RESET
  4595  2589  3423               	retlw	high _do_I2C_RESET
  4596  258A  3446               	retlw	low _do_I2C_DO_ADDRESS_NACK
  4597  258B  3427               	retlw	high _do_I2C_DO_ADDRESS_NACK
  4598                           
  4599                           	psect	stringtext1
  4600  1000                     __pstringtext1:	
  4601  1000                     _drv_fifo_sine:	
  4602  1000  340B               	retlw	11
  4603  1001  3400               	retlw	0
  4604  1002  3400               	retlw	0
  4605  1003  3400               	retlw	0
  4606  1004  3410               	retlw	16
  4607  1005  3400               	retlw	0
  4608  1006  3420               	retlw	32
  4609  1007  3400               	retlw	0
  4610  1008  342E               	retlw	46
  4611  1009  3400               	retlw	0
  4612  100A  343C               	retlw	60
  4613  100B  3400               	retlw	0
  4614  100C  3448               	retlw	72
  4615  100D  3400               	retlw	0
  4616  100E  3453               	retlw	83
  4617  100F  3400               	retlw	0
  4618  1010  345B               	retlw	91
  4619  1011  3400               	retlw	0
  4620  1012  3461               	retlw	97
  4621  1013  3400               	retlw	0
  4622  1014  3465               	retlw	101
  4623  1015  3400               	retlw	0
  4624  1016  3466               	retlw	102
  4625  1017  3400               	retlw	0
  4626  1018  3465               	retlw	101
  4627  1019  3400               	retlw	0
  4628  101A  3461               	retlw	97
  4629  101B  3400               	retlw	0
  4630  101C  345B               	retlw	91
  4631  101D  3400               	retlw	0
  4632  101E  3453               	retlw	83
  4633  101F  3400               	retlw	0
  4634  1020  3448               	retlw	72
  4635  1021  3400               	retlw	0
  4636  1022  343C               	retlw	60
  4637  1023  3400               	retlw	0
  4638  1024  342E               	retlw	46
  4639  1025  3400               	retlw	0
  4640  1026  3420               	retlw	32
  4641  1027  3400               	retlw	0
  4642  1028  3410               	retlw	16
  4643  1029  3400               	retlw	0
  4644  102A  3400               	retlw	0
  4645  102B  3400               	retlw	0
  4646  102C  34F0               	retlw	240
  4647  102D  3400               	retlw	0
  4648  102E  34E0               	retlw	224
  4649  102F  3400               	retlw	0
  4650  1030  34D2               	retlw	210
  4651  1031  3400               	retlw	0
  4652  1032  34C4               	retlw	196
  4653  1033  3400               	retlw	0
  4654  1034  34B8               	retlw	184
  4655  1035  3400               	retlw	0
  4656  1036  34AD               	retlw	173
  4657  1037  3400               	retlw	0
  4658  1038  34A5               	retlw	165
  4659  1039  3400               	retlw	0
  4660  103A  349F               	retlw	159
  4661  103B  3400               	retlw	0
  4662  103C  349B               	retlw	155
  4663  103D  3400               	retlw	0
  4664  103E  349A               	retlw	154
  4665  103F  3400               	retlw	0
  4666  1040  349B               	retlw	155
  4667  1041  3400               	retlw	0
  4668  1042  349F               	retlw	159
  4669  1043  3400               	retlw	0
  4670  1044  34A5               	retlw	165
  4671  1045  3400               	retlw	0
  4672  1046  34AD               	retlw	173
  4673  1047  3400               	retlw	0
  4674  1048  34B8               	retlw	184
  4675  1049  3400               	retlw	0
  4676  104A  34C4               	retlw	196
  4677  104B  3400               	retlw	0
  4678  104C  34D2               	retlw	210
  4679  104D  3400               	retlw	0
  4680  104E  34E0               	retlw	224
  4681  104F  3400               	retlw	0
  4682  1050  34F0               	retlw	240
  4683  1051  3400               	retlw	0
  4684  1052  3400               	retlw	0
  4685  1053  3400               	retlw	0
  4686  1054  3410               	retlw	16
  4687  1055  3400               	retlw	0
  4688  1056  3420               	retlw	32
  4689  1057  3400               	retlw	0
  4690  1058  342E               	retlw	46
  4691  1059  3400               	retlw	0
  4692  105A  343C               	retlw	60
  4693  105B  3400               	retlw	0
  4694  105C  3448               	retlw	72
  4695  105D  3400               	retlw	0
  4696  105E  3453               	retlw	83
  4697  105F  3400               	retlw	0
  4698  1060  345B               	retlw	91
  4699  1061  3400               	retlw	0
  4700  1062  3461               	retlw	97
  4701  1063  3400               	retlw	0
  4702  1064  3465               	retlw	101
  4703  1065  3400               	retlw	0
  4704  1066  3466               	retlw	102
  4705  1067  3400               	retlw	0
  4706  1068  3465               	retlw	101
  4707  1069  3400               	retlw	0
  4708  106A  3461               	retlw	97
  4709  106B  3400               	retlw	0
  4710  106C  345B               	retlw	91
  4711  106D  3400               	retlw	0
  4712  106E  3453               	retlw	83
  4713  106F  3400               	retlw	0
  4714  1070  3448               	retlw	72
  4715  1071  3400               	retlw	0
  4716  1072  343C               	retlw	60
  4717  1073  3400               	retlw	0
  4718  1074  342E               	retlw	46
  4719  1075  3400               	retlw	0
  4720  1076  3420               	retlw	32
  4721  1077  3400               	retlw	0
  4722  1078  3410               	retlw	16
  4723  1079  3400               	retlw	0
  4724  107A  3400               	retlw	0
  4725  107B  3400               	retlw	0
  4726  107C  34F0               	retlw	240
  4727  107D  3400               	retlw	0
  4728  107E  34E0               	retlw	224
  4729  107F  3400               	retlw	0
  4730  1080  34D2               	retlw	210
  4731  1081  3400               	retlw	0
  4732  1082  34C4               	retlw	196
  4733  1083  3400               	retlw	0
  4734  1084  34B8               	retlw	184
  4735  1085  3400               	retlw	0
  4736  1086  34AD               	retlw	173
  4737  1087  3400               	retlw	0
  4738  1088  34A5               	retlw	165
  4739  1089  3400               	retlw	0
  4740  108A  349F               	retlw	159
  4741  108B  3400               	retlw	0
  4742  108C  349B               	retlw	155
  4743  108D  3400               	retlw	0
  4744  108E  349A               	retlw	154
  4745  108F  3400               	retlw	0
  4746  1090  349B               	retlw	155
  4747  1091  3400               	retlw	0
  4748  1092  349F               	retlw	159
  4749  1093  3400               	retlw	0
  4750  1094  34A5               	retlw	165
  4751  1095  3400               	retlw	0
  4752  1096  34AD               	retlw	173
  4753  1097  3400               	retlw	0
  4754  1098  34B8               	retlw	184
  4755  1099  3400               	retlw	0
  4756  109A  34C4               	retlw	196
  4757  109B  3400               	retlw	0
  4758  109C  34D2               	retlw	210
  4759  109D  3400               	retlw	0
  4760  109E  34E0               	retlw	224
  4761  109F  3400               	retlw	0
  4762  10A0  34F0               	retlw	240
  4763  10A1  3400               	retlw	0
  4764  10A2  3400               	retlw	0
  4765  10A3  3400               	retlw	0
  4766  10A4  3410               	retlw	16
  4767  10A5  3400               	retlw	0
  4768  10A6  3420               	retlw	32
  4769  10A7  3400               	retlw	0
  4770  10A8  342E               	retlw	46
  4771  10A9  3400               	retlw	0
  4772  10AA  343C               	retlw	60
  4773  10AB  3400               	retlw	0
  4774  10AC  3448               	retlw	72
  4775  10AD  3400               	retlw	0
  4776  10AE  3453               	retlw	83
  4777  10AF  3400               	retlw	0
  4778  10B0  345B               	retlw	91
  4779  10B1  3400               	retlw	0
  4780  10B2  3461               	retlw	97
  4781  10B3  3400               	retlw	0
  4782  10B4  3465               	retlw	101
  4783  10B5  3400               	retlw	0
  4784  10B6  3466               	retlw	102
  4785  10B7  3400               	retlw	0
  4786  10B8  3465               	retlw	101
  4787  10B9  3400               	retlw	0
  4788  10BA  3461               	retlw	97
  4789  10BB  3400               	retlw	0
  4790  10BC  345B               	retlw	91
  4791  10BD  3400               	retlw	0
  4792  10BE  3453               	retlw	83
  4793  10BF  3400               	retlw	0
  4794  10C0  3448               	retlw	72
  4795  10C1  3400               	retlw	0
  4796  10C2  343C               	retlw	60
  4797  10C3  3400               	retlw	0
  4798  10C4  342E               	retlw	46
  4799  10C5  3400               	retlw	0
  4800  10C6  3420               	retlw	32
  4801  10C7  3400               	retlw	0
  4802  10C8  3410               	retlw	16
  4803  10C9  3400               	retlw	0
  4804  10CA  3400               	retlw	0
  4805  10CB  3400               	retlw	0
  4806  10CC  34F0               	retlw	240
  4807  10CD  3400               	retlw	0
  4808  10CE  34E0               	retlw	224
  4809  10CF  3400               	retlw	0
  4810  10D0  34D2               	retlw	210
  4811  10D1  3400               	retlw	0
  4812  10D2  34C4               	retlw	196
  4813  10D3  3400               	retlw	0
  4814  10D4  34B8               	retlw	184
  4815  10D5  3400               	retlw	0
  4816  10D6  34AD               	retlw	173
  4817  10D7  3400               	retlw	0
  4818  10D8  34A5               	retlw	165
  4819  10D9  3400               	retlw	0
  4820  10DA  349F               	retlw	159
  4821  10DB  3400               	retlw	0
  4822  10DC  349B               	retlw	155
  4823  10DD  3400               	retlw	0
  4824  10DE  349A               	retlw	154
  4825  10DF  3400               	retlw	0
  4826  10E0  349B               	retlw	155
  4827  10E1  3400               	retlw	0
  4828  10E2  349F               	retlw	159
  4829  10E3  3400               	retlw	0
  4830  10E4  34A5               	retlw	165
  4831  10E5  3400               	retlw	0
  4832  10E6  34AD               	retlw	173
  4833  10E7  3400               	retlw	0
  4834  10E8  34B8               	retlw	184
  4835  10E9  3400               	retlw	0
  4836  10EA  34C4               	retlw	196
  4837  10EB  3400               	retlw	0
  4838  10EC  34D2               	retlw	210
  4839  10ED  3400               	retlw	0
  4840  10EE  34E0               	retlw	224
  4841  10EF  3400               	retlw	0
  4842  10F0  34F0               	retlw	240
  4843  10F1  3400               	retlw	0
  4844  10F2  3400               	retlw	0
  4845  10F3  3400               	retlw	0
  4846  10F4                     __end_of_drv_fifo_sine:	
  4847                           
  4848                           	psect	stringtext2
  4849  11E8                     __pstringtext2:	
  4850  11E8                     drv2665@drv_sine:	
  4851  11E8  3400               	retlw	0
  4852  11E9  3400               	retlw	0
  4853  11EA  3410               	retlw	16
  4854  11EB  3400               	retlw	0
  4855  11EC  3420               	retlw	32
  4856  11ED  3400               	retlw	0
  4857  11EE  342E               	retlw	46
  4858  11EF  3400               	retlw	0
  4859  11F0  343C               	retlw	60
  4860  11F1  3400               	retlw	0
  4861  11F2  3448               	retlw	72
  4862  11F3  3400               	retlw	0
  4863  11F4  3453               	retlw	83
  4864  11F5  3400               	retlw	0
  4865  11F6  345B               	retlw	91
  4866  11F7  3400               	retlw	0
  4867  11F8  3461               	retlw	97
  4868  11F9  3400               	retlw	0
  4869  11FA  3465               	retlw	101
  4870  11FB  3400               	retlw	0
  4871  11FC  3466               	retlw	102
  4872  11FD  3400               	retlw	0
  4873  11FE  3465               	retlw	101
  4874  11FF  3400               	retlw	0
  4875  1200  3461               	retlw	97
  4876  1201  3400               	retlw	0
  4877  1202  345B               	retlw	91
  4878  1203  3400               	retlw	0
  4879  1204  3453               	retlw	83
  4880  1205  3400               	retlw	0
  4881  1206  3448               	retlw	72
  4882  1207  3400               	retlw	0
  4883  1208  343C               	retlw	60
  4884  1209  3400               	retlw	0
  4885  120A  342E               	retlw	46
  4886  120B  3400               	retlw	0
  4887  120C  3420               	retlw	32
  4888  120D  3400               	retlw	0
  4889  120E  3410               	retlw	16
  4890  120F  3400               	retlw	0
  4891  1210  3400               	retlw	0
  4892  1211  3400               	retlw	0
  4893  1212  34F0               	retlw	240
  4894  1213  3400               	retlw	0
  4895  1214  34E0               	retlw	224
  4896  1215  3400               	retlw	0
  4897  1216  34D2               	retlw	210
  4898  1217  3400               	retlw	0
  4899  1218  34C4               	retlw	196
  4900  1219  3400               	retlw	0
  4901  121A  34B8               	retlw	184
  4902  121B  3400               	retlw	0
  4903  121C  34AD               	retlw	173
  4904  121D  3400               	retlw	0
  4905  121E  34A5               	retlw	165
  4906  121F  3400               	retlw	0
  4907  1220  349F               	retlw	159
  4908  1221  3400               	retlw	0
  4909  1222  349B               	retlw	155
  4910  1223  3400               	retlw	0
  4911  1224  349A               	retlw	154
  4912  1225  3400               	retlw	0
  4913  1226  349B               	retlw	155
  4914  1227  3400               	retlw	0
  4915  1228  349F               	retlw	159
  4916  1229  3400               	retlw	0
  4917  122A  34A5               	retlw	165
  4918  122B  3400               	retlw	0
  4919  122C  34AD               	retlw	173
  4920  122D  3400               	retlw	0
  4921  122E  34B8               	retlw	184
  4922  122F  3400               	retlw	0
  4923  1230  34C4               	retlw	196
  4924  1231  3400               	retlw	0
  4925  1232  34D2               	retlw	210
  4926  1233  3400               	retlw	0
  4927  1234  34E0               	retlw	224
  4928  1235  3400               	retlw	0
  4929  1236  34F0               	retlw	240
  4930  1237  3400               	retlw	0
  4931  1238  3400               	retlw	0
  4932  1239  3400               	retlw	0
  4933  123A  3410               	retlw	16
  4934  123B  3400               	retlw	0
  4935  123C  3420               	retlw	32
  4936  123D  3400               	retlw	0
  4937  123E  342E               	retlw	46
  4938  123F  3400               	retlw	0
  4939  1240  343C               	retlw	60
  4940  1241  3400               	retlw	0
  4941  1242  3448               	retlw	72
  4942  1243  3400               	retlw	0
  4943  1244  3453               	retlw	83
  4944  1245  3400               	retlw	0
  4945  1246  345B               	retlw	91
  4946  1247  3400               	retlw	0
  4947  1248  3461               	retlw	97
  4948  1249  3400               	retlw	0
  4949  124A  3465               	retlw	101
  4950  124B  3400               	retlw	0
  4951  124C  3466               	retlw	102
  4952  124D  3400               	retlw	0
  4953  124E  3465               	retlw	101
  4954  124F  3400               	retlw	0
  4955  1250  3461               	retlw	97
  4956  1251  3400               	retlw	0
  4957  1252  345B               	retlw	91
  4958  1253  3400               	retlw	0
  4959  1254  3453               	retlw	83
  4960  1255  3400               	retlw	0
  4961  1256  3448               	retlw	72
  4962  1257  3400               	retlw	0
  4963  1258  343C               	retlw	60
  4964  1259  3400               	retlw	0
  4965  125A  342E               	retlw	46
  4966  125B  3400               	retlw	0
  4967  125C  3420               	retlw	32
  4968  125D  3400               	retlw	0
  4969  125E  3410               	retlw	16
  4970  125F  3400               	retlw	0
  4971  1260  3400               	retlw	0
  4972  1261  3400               	retlw	0
  4973  1262  34F0               	retlw	240
  4974  1263  3400               	retlw	0
  4975  1264  34E0               	retlw	224
  4976  1265  3400               	retlw	0
  4977  1266  34D2               	retlw	210
  4978  1267  3400               	retlw	0
  4979  1268  34C4               	retlw	196
  4980  1269  3400               	retlw	0
  4981  126A  34B8               	retlw	184
  4982  126B  3400               	retlw	0
  4983  126C  34AD               	retlw	173
  4984  126D  3400               	retlw	0
  4985  126E  34A5               	retlw	165
  4986  126F  3400               	retlw	0
  4987  1270  349F               	retlw	159
  4988  1271  3400               	retlw	0
  4989  1272  349B               	retlw	155
  4990  1273  3400               	retlw	0
  4991  1274  349A               	retlw	154
  4992  1275  3400               	retlw	0
  4993  1276  349B               	retlw	155
  4994  1277  3400               	retlw	0
  4995  1278  349F               	retlw	159
  4996  1279  3400               	retlw	0
  4997  127A  34A5               	retlw	165
  4998  127B  3400               	retlw	0
  4999  127C  34AD               	retlw	173
  5000  127D  3400               	retlw	0
  5001  127E  34B8               	retlw	184
  5002  127F  3400               	retlw	0
  5003  1280  34C4               	retlw	196
  5004  1281  3400               	retlw	0
  5005  1282  34D2               	retlw	210
  5006  1283  3400               	retlw	0
  5007  1284  34E0               	retlw	224
  5008  1285  3400               	retlw	0
  5009  1286  34F0               	retlw	240
  5010  1287  3400               	retlw	0
  5011  1288  3400               	retlw	0
  5012  1289  3400               	retlw	0
  5013  128A  3410               	retlw	16
  5014  128B  3400               	retlw	0
  5015  128C  3420               	retlw	32
  5016  128D  3400               	retlw	0
  5017  128E  342E               	retlw	46
  5018  128F  3400               	retlw	0
  5019  1290  343C               	retlw	60
  5020  1291  3400               	retlw	0
  5021  1292  3448               	retlw	72
  5022  1293  3400               	retlw	0
  5023  1294  3453               	retlw	83
  5024  1295  3400               	retlw	0
  5025  1296  345B               	retlw	91
  5026  1297  3400               	retlw	0
  5027  1298  3461               	retlw	97
  5028  1299  3400               	retlw	0
  5029  129A  3465               	retlw	101
  5030  129B  3400               	retlw	0
  5031  129C  3466               	retlw	102
  5032  129D  3400               	retlw	0
  5033  129E  3465               	retlw	101
  5034  129F  3400               	retlw	0
  5035  12A0  3461               	retlw	97
  5036  12A1  3400               	retlw	0
  5037  12A2  345B               	retlw	91
  5038  12A3  3400               	retlw	0
  5039  12A4  3453               	retlw	83
  5040  12A5  3400               	retlw	0
  5041  12A6  3448               	retlw	72
  5042  12A7  3400               	retlw	0
  5043  12A8  343C               	retlw	60
  5044  12A9  3400               	retlw	0
  5045  12AA  342E               	retlw	46
  5046  12AB  3400               	retlw	0
  5047  12AC  3420               	retlw	32
  5048  12AD  3400               	retlw	0
  5049  12AE  3410               	retlw	16
  5050  12AF  3400               	retlw	0
  5051  12B0  3400               	retlw	0
  5052  12B1  3400               	retlw	0
  5053  12B2  34F0               	retlw	240
  5054  12B3  3400               	retlw	0
  5055  12B4  34E0               	retlw	224
  5056  12B5  3400               	retlw	0
  5057  12B6  34D2               	retlw	210
  5058  12B7  3400               	retlw	0
  5059  12B8  34C4               	retlw	196
  5060  12B9  3400               	retlw	0
  5061  12BA  34B8               	retlw	184
  5062  12BB  3400               	retlw	0
  5063  12BC  34AD               	retlw	173
  5064  12BD  3400               	retlw	0
  5065  12BE  34A5               	retlw	165
  5066  12BF  3400               	retlw	0
  5067  12C0  349F               	retlw	159
  5068  12C1  3400               	retlw	0
  5069  12C2  349B               	retlw	155
  5070  12C3  3400               	retlw	0
  5071  12C4  349A               	retlw	154
  5072  12C5  3400               	retlw	0
  5073  12C6  349B               	retlw	155
  5074  12C7  3400               	retlw	0
  5075  12C8  349F               	retlw	159
  5076  12C9  3400               	retlw	0
  5077  12CA  34A5               	retlw	165
  5078  12CB  3400               	retlw	0
  5079  12CC  34AD               	retlw	173
  5080  12CD  3400               	retlw	0
  5081  12CE  34B8               	retlw	184
  5082  12CF  3400               	retlw	0
  5083  12D0  34C4               	retlw	196
  5084  12D1  3400               	retlw	0
  5085  12D2  34D2               	retlw	210
  5086  12D3  3400               	retlw	0
  5087  12D4  34E0               	retlw	224
  5088  12D5  3400               	retlw	0
  5089  12D6  34F0               	retlw	240
  5090  12D7  3400               	retlw	0
  5091  12D8  3400               	retlw	0
  5092  12D9  3400               	retlw	0
  5093  12DA                     __end_ofdrv2665@drv_sine:	
  5094                           
  5095                           	psect	stringtext3
  5096  12DA                     __pstringtext3:	
  5097  12DA                     _drv_sine:	
  5098  12DA  3400               	retlw	0
  5099  12DB  3400               	retlw	0
  5100  12DC  3410               	retlw	16
  5101  12DD  3400               	retlw	0
  5102  12DE  3420               	retlw	32
  5103  12DF  3400               	retlw	0
  5104  12E0  342E               	retlw	46
  5105  12E1  3400               	retlw	0
  5106  12E2  343C               	retlw	60
  5107  12E3  3400               	retlw	0
  5108  12E4  3448               	retlw	72
  5109  12E5  3400               	retlw	0
  5110  12E6  3453               	retlw	83
  5111  12E7  3400               	retlw	0
  5112  12E8  345B               	retlw	91
  5113  12E9  3400               	retlw	0
  5114  12EA  3461               	retlw	97
  5115  12EB  3400               	retlw	0
  5116  12EC  3465               	retlw	101
  5117  12ED  3400               	retlw	0
  5118  12EE  3466               	retlw	102
  5119  12EF  3400               	retlw	0
  5120  12F0  3465               	retlw	101
  5121  12F1  3400               	retlw	0
  5122  12F2  3461               	retlw	97
  5123  12F3  3400               	retlw	0
  5124  12F4  345B               	retlw	91
  5125  12F5  3400               	retlw	0
  5126  12F6  3453               	retlw	83
  5127  12F7  3400               	retlw	0
  5128  12F8  3448               	retlw	72
  5129  12F9  3400               	retlw	0
  5130  12FA  343C               	retlw	60
  5131  12FB  3400               	retlw	0
  5132  12FC  342E               	retlw	46
  5133  12FD  3400               	retlw	0
  5134  12FE  3420               	retlw	32
  5135  12FF  3400               	retlw	0
  5136  1300  3410               	retlw	16
  5137  1301  3400               	retlw	0
  5138  1302  3400               	retlw	0
  5139  1303  3400               	retlw	0
  5140  1304  34F0               	retlw	240
  5141  1305  3400               	retlw	0
  5142  1306  34E0               	retlw	224
  5143  1307  3400               	retlw	0
  5144  1308  34D2               	retlw	210
  5145  1309  3400               	retlw	0
  5146  130A  34C4               	retlw	196
  5147  130B  3400               	retlw	0
  5148  130C  34B8               	retlw	184
  5149  130D  3400               	retlw	0
  5150  130E  34AD               	retlw	173
  5151  130F  3400               	retlw	0
  5152  1310  34A5               	retlw	165
  5153  1311  3400               	retlw	0
  5154  1312  349F               	retlw	159
  5155  1313  3400               	retlw	0
  5156  1314  349B               	retlw	155
  5157  1315  3400               	retlw	0
  5158  1316  349A               	retlw	154
  5159  1317  3400               	retlw	0
  5160  1318  349B               	retlw	155
  5161  1319  3400               	retlw	0
  5162  131A  349F               	retlw	159
  5163  131B  3400               	retlw	0
  5164  131C  34A5               	retlw	165
  5165  131D  3400               	retlw	0
  5166  131E  34AD               	retlw	173
  5167  131F  3400               	retlw	0
  5168  1320  34B8               	retlw	184
  5169  1321  3400               	retlw	0
  5170  1322  34C4               	retlw	196
  5171  1323  3400               	retlw	0
  5172  1324  34D2               	retlw	210
  5173  1325  3400               	retlw	0
  5174  1326  34E0               	retlw	224
  5175  1327  3400               	retlw	0
  5176  1328  34F0               	retlw	240
  5177  1329  3400               	retlw	0
  5178  132A  3400               	retlw	0
  5179  132B  3400               	retlw	0
  5180  132C  3410               	retlw	16
  5181  132D  3400               	retlw	0
  5182  132E  3420               	retlw	32
  5183  132F  3400               	retlw	0
  5184  1330  342E               	retlw	46
  5185  1331  3400               	retlw	0
  5186  1332  343C               	retlw	60
  5187  1333  3400               	retlw	0
  5188  1334  3448               	retlw	72
  5189  1335  3400               	retlw	0
  5190  1336  3453               	retlw	83
  5191  1337  3400               	retlw	0
  5192  1338  345B               	retlw	91
  5193  1339  3400               	retlw	0
  5194  133A  3461               	retlw	97
  5195  133B  3400               	retlw	0
  5196  133C  3465               	retlw	101
  5197  133D  3400               	retlw	0
  5198  133E  3466               	retlw	102
  5199  133F  3400               	retlw	0
  5200  1340  3465               	retlw	101
  5201  1341  3400               	retlw	0
  5202  1342  3461               	retlw	97
  5203  1343  3400               	retlw	0
  5204  1344  345B               	retlw	91
  5205  1345  3400               	retlw	0
  5206  1346  3453               	retlw	83
  5207  1347  3400               	retlw	0
  5208  1348  3448               	retlw	72
  5209  1349  3400               	retlw	0
  5210  134A  343C               	retlw	60
  5211  134B  3400               	retlw	0
  5212  134C  342E               	retlw	46
  5213  134D  3400               	retlw	0
  5214  134E  3420               	retlw	32
  5215  134F  3400               	retlw	0
  5216  1350  3410               	retlw	16
  5217  1351  3400               	retlw	0
  5218  1352  3400               	retlw	0
  5219  1353  3400               	retlw	0
  5220  1354  34F0               	retlw	240
  5221  1355  3400               	retlw	0
  5222  1356  34E0               	retlw	224
  5223  1357  3400               	retlw	0
  5224  1358  34D2               	retlw	210
  5225  1359  3400               	retlw	0
  5226  135A  34C4               	retlw	196
  5227  135B  3400               	retlw	0
  5228  135C  34B8               	retlw	184
  5229  135D  3400               	retlw	0
  5230  135E  34AD               	retlw	173
  5231  135F  3400               	retlw	0
  5232  1360  34A5               	retlw	165
  5233  1361  3400               	retlw	0
  5234  1362  349F               	retlw	159
  5235  1363  3400               	retlw	0
  5236  1364  349B               	retlw	155
  5237  1365  3400               	retlw	0
  5238  1366  349A               	retlw	154
  5239  1367  3400               	retlw	0
  5240  1368  349B               	retlw	155
  5241  1369  3400               	retlw	0
  5242  136A  349F               	retlw	159
  5243  136B  3400               	retlw	0
  5244  136C  34A5               	retlw	165
  5245  136D  3400               	retlw	0
  5246  136E  34AD               	retlw	173
  5247  136F  3400               	retlw	0
  5248  1370  34B8               	retlw	184
  5249  1371  3400               	retlw	0
  5250  1372  34C4               	retlw	196
  5251  1373  3400               	retlw	0
  5252  1374  34D2               	retlw	210
  5253  1375  3400               	retlw	0
  5254  1376  34E0               	retlw	224
  5255  1377  3400               	retlw	0
  5256  1378  34F0               	retlw	240
  5257  1379  3400               	retlw	0
  5258  137A  3400               	retlw	0
  5259  137B  3400               	retlw	0
  5260  137C  3410               	retlw	16
  5261  137D  3400               	retlw	0
  5262  137E  3420               	retlw	32
  5263  137F  3400               	retlw	0
  5264  1380  342E               	retlw	46
  5265  1381  3400               	retlw	0
  5266  1382  343C               	retlw	60
  5267  1383  3400               	retlw	0
  5268  1384  3448               	retlw	72
  5269  1385  3400               	retlw	0
  5270  1386  3453               	retlw	83
  5271  1387  3400               	retlw	0
  5272  1388  345B               	retlw	91
  5273  1389  3400               	retlw	0
  5274  138A  3461               	retlw	97
  5275  138B  3400               	retlw	0
  5276  138C  3465               	retlw	101
  5277  138D  3400               	retlw	0
  5278  138E  3466               	retlw	102
  5279  138F  3400               	retlw	0
  5280  1390  3465               	retlw	101
  5281  1391  3400               	retlw	0
  5282  1392  3461               	retlw	97
  5283  1393  3400               	retlw	0
  5284  1394  345B               	retlw	91
  5285  1395  3400               	retlw	0
  5286  1396  3453               	retlw	83
  5287  1397  3400               	retlw	0
  5288  1398  3448               	retlw	72
  5289  1399  3400               	retlw	0
  5290  139A  343C               	retlw	60
  5291  139B  3400               	retlw	0
  5292  139C  342E               	retlw	46
  5293  139D  3400               	retlw	0
  5294  139E  3420               	retlw	32
  5295  139F  3400               	retlw	0
  5296  13A0  3410               	retlw	16
  5297  13A1  3400               	retlw	0
  5298  13A2  3400               	retlw	0
  5299  13A3  3400               	retlw	0
  5300  13A4  34F0               	retlw	240
  5301  13A5  3400               	retlw	0
  5302  13A6  34E0               	retlw	224
  5303  13A7  3400               	retlw	0
  5304  13A8  34D2               	retlw	210
  5305  13A9  3400               	retlw	0
  5306  13AA  34C4               	retlw	196
  5307  13AB  3400               	retlw	0
  5308  13AC  34B8               	retlw	184
  5309  13AD  3400               	retlw	0
  5310  13AE  34AD               	retlw	173
  5311  13AF  3400               	retlw	0
  5312  13B0  34A5               	retlw	165
  5313  13B1  3400               	retlw	0
  5314  13B2  349F               	retlw	159
  5315  13B3  3400               	retlw	0
  5316  13B4  349B               	retlw	155
  5317  13B5  3400               	retlw	0
  5318  13B6  349A               	retlw	154
  5319  13B7  3400               	retlw	0
  5320  13B8  349B               	retlw	155
  5321  13B9  3400               	retlw	0
  5322  13BA  349F               	retlw	159
  5323  13BB  3400               	retlw	0
  5324  13BC  34A5               	retlw	165
  5325  13BD  3400               	retlw	0
  5326  13BE  34AD               	retlw	173
  5327  13BF  3400               	retlw	0
  5328  13C0  34B8               	retlw	184
  5329  13C1  3400               	retlw	0
  5330  13C2  34C4               	retlw	196
  5331  13C3  3400               	retlw	0
  5332  13C4  34D2               	retlw	210
  5333  13C5  3400               	retlw	0
  5334  13C6  34E0               	retlw	224
  5335  13C7  3400               	retlw	0
  5336  13C8  34F0               	retlw	240
  5337  13C9  3400               	retlw	0
  5338  13CA  3400               	retlw	0
  5339  13CB  3400               	retlw	0
  5340  13CC                     __end_of_drv_sine:	
  5341                           
  5342                           	psect	stringtext4
  5343  2800                     __pstringtext4:	
  5344  2800                     _dpowers:	
  5345  2800  3401               	retlw	1
  5346  2801  3400               	retlw	0
  5347  2802  3400               	retlw	0
  5348  2803  3400               	retlw	0
  5349  2804  340A               	retlw	10
  5350  2805  3400               	retlw	0
  5351  2806  3400               	retlw	0
  5352  2807  3400               	retlw	0
  5353  2808  3464               	retlw	100
  5354  2809  3400               	retlw	0
  5355  280A  3400               	retlw	0
  5356  280B  3400               	retlw	0
  5357  280C  34E8               	retlw	232
  5358  280D  3403               	retlw	3
  5359  280E  3400               	retlw	0
  5360  280F  3400               	retlw	0
  5361  2810  3410               	retlw	16
  5362  2811  3427               	retlw	39
  5363  2812  3400               	retlw	0
  5364  2813  3400               	retlw	0
  5365  2814  34A0               	retlw	160
  5366  2815  3486               	retlw	134
  5367  2816  3401               	retlw	1
  5368  2817  3400               	retlw	0
  5369  2818  3440               	retlw	64
  5370  2819  3442               	retlw	66
  5371  281A  340F               	retlw	15
  5372  281B  3400               	retlw	0
  5373  281C  3480               	retlw	128
  5374  281D  3496               	retlw	150
  5375  281E  3498               	retlw	152
  5376  281F  3400               	retlw	0
  5377  2820  3400               	retlw	0
  5378  2821  34E1               	retlw	225
  5379  2822  34F5               	retlw	245
  5380  2823  3405               	retlw	5
  5381  2824  3400               	retlw	0
  5382  2825  34CA               	retlw	202
  5383  2826  349A               	retlw	154
  5384  2827  343B               	retlw	59
  5385  2828                     __end_of_dpowers:	
  5386                           
  5387                           	psect	stringtext5
  5388  2A53                     __pstringtext5:	
  5389  2A53                     _TMR2_RANGE:	
  5390  2A53  3400               	retlw	0
  5391  2A54  34C8               	retlw	200
  5392  2A55  343F               	retlw	63
  5393  2A56                     __end_of_TMR2_RANGE:	
  5394                           
  5395                           	psect	stringtext6
  5396  2A56                     __pstringtext6:	
  5397  2A56                     _TMR0_RANGE:	
  5398  2A56  3400               	retlw	0
  5399  2A57  34C8               	retlw	200
  5400  2A58  343D               	retlw	61
  5401  2A59                     __end_of_TMR0_RANGE:	
  5402                           
  5403                           	psect	stringtext7
  5404  2A5F                     __pstringtext7:	
  5405  2A5F                     _LEDpower:	
  5406  2A5F  343F               	retlw	63
  5407  2A60  3400               	retlw	0
  5408  2A61                     __end_of_LEDpower:	
  5409                           
  5410                           	psect	stringtext8
  5411  2A67                     __pstringtext8:	
  5412  2A67                     _drv_address:	
  5413  2A67  3459               	retlw	89
  5414  2A68                     __end_of_drv_address:	
  5415                           
  5416                           	psect	stringtext9
  5417  10F4                     __pstringtext9:	
  5418  10F4                     drv2665@drv_fifo_sine:	
  5419  10F4  340B               	retlw	11
  5420  10F5  3400               	retlw	0
  5421  10F6  3400               	retlw	0
  5422  10F7  3400               	retlw	0
  5423  10F8  3410               	retlw	16
  5424  10F9  3400               	retlw	0
  5425  10FA  3420               	retlw	32
  5426  10FB  3400               	retlw	0
  5427  10FC  342E               	retlw	46
  5428  10FD  3400               	retlw	0
  5429  10FE  343C               	retlw	60
  5430  10FF  3400               	retlw	0
  5431  1100  3448               	retlw	72
  5432  1101  3400               	retlw	0
  5433  1102  3453               	retlw	83
  5434  1103  3400               	retlw	0
  5435  1104  345B               	retlw	91
  5436  1105  3400               	retlw	0
  5437  1106  3461               	retlw	97
  5438  1107  3400               	retlw	0
  5439  1108  3465               	retlw	101
  5440  1109  3400               	retlw	0
  5441  110A  3466               	retlw	102
  5442  110B  3400               	retlw	0
  5443  110C  3465               	retlw	101
  5444  110D  3400               	retlw	0
  5445  110E  3461               	retlw	97
  5446  110F  3400               	retlw	0
  5447  1110  345B               	retlw	91
  5448  1111  3400               	retlw	0
  5449  1112  3453               	retlw	83
  5450  1113  3400               	retlw	0
  5451  1114  3448               	retlw	72
  5452  1115  3400               	retlw	0
  5453  1116  343C               	retlw	60
  5454  1117  3400               	retlw	0
  5455  1118  342E               	retlw	46
  5456  1119  3400               	retlw	0
  5457  111A  3420               	retlw	32
  5458  111B  3400               	retlw	0
  5459  111C  3410               	retlw	16
  5460  111D  3400               	retlw	0
  5461  111E  3400               	retlw	0
  5462  111F  3400               	retlw	0
  5463  1120  34F0               	retlw	240
  5464  1121  3400               	retlw	0
  5465  1122  34E0               	retlw	224
  5466  1123  3400               	retlw	0
  5467  1124  34D2               	retlw	210
  5468  1125  3400               	retlw	0
  5469  1126  34C4               	retlw	196
  5470  1127  3400               	retlw	0
  5471  1128  34B8               	retlw	184
  5472  1129  3400               	retlw	0
  5473  112A  34AD               	retlw	173
  5474  112B  3400               	retlw	0
  5475  112C  34A5               	retlw	165
  5476  112D  3400               	retlw	0
  5477  112E  349F               	retlw	159
  5478  112F  3400               	retlw	0
  5479  1130  349B               	retlw	155
  5480  1131  3400               	retlw	0
  5481  1132  349A               	retlw	154
  5482  1133  3400               	retlw	0
  5483  1134  349B               	retlw	155
  5484  1135  3400               	retlw	0
  5485  1136  349F               	retlw	159
  5486  1137  3400               	retlw	0
  5487  1138  34A5               	retlw	165
  5488  1139  3400               	retlw	0
  5489  113A  34AD               	retlw	173
  5490  113B  3400               	retlw	0
  5491  113C  34B8               	retlw	184
  5492  113D  3400               	retlw	0
  5493  113E  34C4               	retlw	196
  5494  113F  3400               	retlw	0
  5495  1140  34D2               	retlw	210
  5496  1141  3400               	retlw	0
  5497  1142  34E0               	retlw	224
  5498  1143  3400               	retlw	0
  5499  1144  34F0               	retlw	240
  5500  1145  3400               	retlw	0
  5501  1146  3400               	retlw	0
  5502  1147  3400               	retlw	0
  5503  1148  3410               	retlw	16
  5504  1149  3400               	retlw	0
  5505  114A  3420               	retlw	32
  5506  114B  3400               	retlw	0
  5507  114C  342E               	retlw	46
  5508  114D  3400               	retlw	0
  5509  114E  343C               	retlw	60
  5510  114F  3400               	retlw	0
  5511  1150  3448               	retlw	72
  5512  1151  3400               	retlw	0
  5513  1152  3453               	retlw	83
  5514  1153  3400               	retlw	0
  5515  1154  345B               	retlw	91
  5516  1155  3400               	retlw	0
  5517  1156  3461               	retlw	97
  5518  1157  3400               	retlw	0
  5519  1158  3465               	retlw	101
  5520  1159  3400               	retlw	0
  5521  115A  3466               	retlw	102
  5522  115B  3400               	retlw	0
  5523  115C  3465               	retlw	101
  5524  115D  3400               	retlw	0
  5525  115E  3461               	retlw	97
  5526  115F  3400               	retlw	0
  5527  1160  345B               	retlw	91
  5528  1161  3400               	retlw	0
  5529  1162  3453               	retlw	83
  5530  1163  3400               	retlw	0
  5531  1164  3448               	retlw	72
  5532  1165  3400               	retlw	0
  5533  1166  343C               	retlw	60
  5534  1167  3400               	retlw	0
  5535  1168  342E               	retlw	46
  5536  1169  3400               	retlw	0
  5537  116A  3420               	retlw	32
  5538  116B  3400               	retlw	0
  5539  116C  3410               	retlw	16
  5540  116D  3400               	retlw	0
  5541  116E  3400               	retlw	0
  5542  116F  3400               	retlw	0
  5543  1170  34F0               	retlw	240
  5544  1171  3400               	retlw	0
  5545  1172  34E0               	retlw	224
  5546  1173  3400               	retlw	0
  5547  1174  34D2               	retlw	210
  5548  1175  3400               	retlw	0
  5549  1176  34C4               	retlw	196
  5550  1177  3400               	retlw	0
  5551  1178  34B8               	retlw	184
  5552  1179  3400               	retlw	0
  5553  117A  34AD               	retlw	173
  5554  117B  3400               	retlw	0
  5555  117C  34A5               	retlw	165
  5556  117D  3400               	retlw	0
  5557  117E  349F               	retlw	159
  5558  117F  3400               	retlw	0
  5559  1180  349B               	retlw	155
  5560  1181  3400               	retlw	0
  5561  1182  349A               	retlw	154
  5562  1183  3400               	retlw	0
  5563  1184  349B               	retlw	155
  5564  1185  3400               	retlw	0
  5565  1186  349F               	retlw	159
  5566  1187  3400               	retlw	0
  5567  1188  34A5               	retlw	165
  5568  1189  3400               	retlw	0
  5569  118A  34AD               	retlw	173
  5570  118B  3400               	retlw	0
  5571  118C  34B8               	retlw	184
  5572  118D  3400               	retlw	0
  5573  118E  34C4               	retlw	196
  5574  118F  3400               	retlw	0
  5575  1190  34D2               	retlw	210
  5576  1191  3400               	retlw	0
  5577  1192  34E0               	retlw	224
  5578  1193  3400               	retlw	0
  5579  1194  34F0               	retlw	240
  5580  1195  3400               	retlw	0
  5581  1196  3400               	retlw	0
  5582  1197  3400               	retlw	0
  5583  1198  3410               	retlw	16
  5584  1199  3400               	retlw	0
  5585  119A  3420               	retlw	32
  5586  119B  3400               	retlw	0
  5587  119C  342E               	retlw	46
  5588  119D  3400               	retlw	0
  5589  119E  343C               	retlw	60
  5590  119F  3400               	retlw	0
  5591  11A0  3448               	retlw	72
  5592  11A1  3400               	retlw	0
  5593  11A2  3453               	retlw	83
  5594  11A3  3400               	retlw	0
  5595  11A4  345B               	retlw	91
  5596  11A5  3400               	retlw	0
  5597  11A6  3461               	retlw	97
  5598  11A7  3400               	retlw	0
  5599  11A8  3465               	retlw	101
  5600  11A9  3400               	retlw	0
  5601  11AA  3466               	retlw	102
  5602  11AB  3400               	retlw	0
  5603  11AC  3465               	retlw	101
  5604  11AD  3400               	retlw	0
  5605  11AE  3461               	retlw	97
  5606  11AF  3400               	retlw	0
  5607  11B0  345B               	retlw	91
  5608  11B1  3400               	retlw	0
  5609  11B2  3453               	retlw	83
  5610  11B3  3400               	retlw	0
  5611  11B4  3448               	retlw	72
  5612  11B5  3400               	retlw	0
  5613  11B6  343C               	retlw	60
  5614  11B7  3400               	retlw	0
  5615  11B8  342E               	retlw	46
  5616  11B9  3400               	retlw	0
  5617  11BA  3420               	retlw	32
  5618  11BB  3400               	retlw	0
  5619  11BC  3410               	retlw	16
  5620  11BD  3400               	retlw	0
  5621  11BE  3400               	retlw	0
  5622  11BF  3400               	retlw	0
  5623  11C0  34F0               	retlw	240
  5624  11C1  3400               	retlw	0
  5625  11C2  34E0               	retlw	224
  5626  11C3  3400               	retlw	0
  5627  11C4  34D2               	retlw	210
  5628  11C5  3400               	retlw	0
  5629  11C6  34C4               	retlw	196
  5630  11C7  3400               	retlw	0
  5631  11C8  34B8               	retlw	184
  5632  11C9  3400               	retlw	0
  5633  11CA  34AD               	retlw	173
  5634  11CB  3400               	retlw	0
  5635  11CC  34A5               	retlw	165
  5636  11CD  3400               	retlw	0
  5637  11CE  349F               	retlw	159
  5638  11CF  3400               	retlw	0
  5639  11D0  349B               	retlw	155
  5640  11D1  3400               	retlw	0
  5641  11D2  349A               	retlw	154
  5642  11D3  3400               	retlw	0
  5643  11D4  349B               	retlw	155
  5644  11D5  3400               	retlw	0
  5645  11D6  349F               	retlw	159
  5646  11D7  3400               	retlw	0
  5647  11D8  34A5               	retlw	165
  5648  11D9  3400               	retlw	0
  5649  11DA  34AD               	retlw	173
  5650  11DB  3400               	retlw	0
  5651  11DC  34B8               	retlw	184
  5652  11DD  3400               	retlw	0
  5653  11DE  34C4               	retlw	196
  5654  11DF  3400               	retlw	0
  5655  11E0  34D2               	retlw	210
  5656  11E1  3400               	retlw	0
  5657  11E2  34E0               	retlw	224
  5658  11E3  3400               	retlw	0
  5659  11E4  34F0               	retlw	240
  5660  11E5  3400               	retlw	0
  5661  11E6  3400               	retlw	0
  5662  11E7  3400               	retlw	0
  5663  11E8                     __end_ofdrv2665@drv_fifo_sine:	
  5664                           
  5665                           	psect	stringtext10
  5666  2940                     __pstringtext10:	
  5667  2940                     sin@coeff_a:	
  5668  2940  34F4               	retlw	244
  5669  2941  344A               	retlw	74
  5670  2942  3448               	retlw	72
  5671  2943  3495               	retlw	149
  5672  2944  3495               	retlw	149
  5673  2945  34C7               	retlw	199
  5674  2946  34C1               	retlw	193
  5675  2947  34DC               	retlw	220
  5676  2948  3445               	retlw	69
  5677  2949  34DC               	retlw	220
  5678  294A  346D               	retlw	109
  5679  294B  34C3               	retlw	195
  5680  294C  34B3               	retlw	179
  5681  294D  3433               	retlw	51
  5682  294E  3440               	retlw	64
  5683  294F                     __end_ofsin@coeff_a:	
  5684                           
  5685                           	psect	stringtext11
  5686  2988                     __pstringtext11:	
  5687  2988                     sin@coeff_b:	
  5688  2988  3434               	retlw	52
  5689  2989  3401               	retlw	1
  5690  298A  3448               	retlw	72
  5691  298B  349D               	retlw	157
  5692  298C  34B0               	retlw	176
  5693  298D  3445               	retlw	69
  5694  298E  3400               	retlw	0
  5695  298F  34DA               	retlw	218
  5696  2990  3442               	retlw	66
  5697  2991  3400               	retlw	0
  5698  2992  3480               	retlw	128
  5699  2993  343F               	retlw	63
  5700  2994                     __end_ofsin@coeff_b:	
  5701                           
  5702                           	psect	nvBANK0
  5703  005E                     __pnvBANK0:	
  5704  005E                     _eusartTxBufferRemaining:	
  5705  005E                     	ds	1
  5706                           
  5707                           	psect	nvBANK2
  5708  016C                     __pnvBANK2:	
  5709  016C                     _TMR0_InterruptHandler:	
  5710  016C                     	ds	2
  5711                           
  5712                           	psect	nvBANK3
  5713  01D9                     __pnvBANK3:	
  5714  01D9                     _TMR2_InterruptHandler:	
  5715  01D9                     	ds	2
  5716  001F                     _T2CONbits	set	31
  5717  001F                     _T2CON	set	31
  5718  001D                     _TMR2	set	29
  5719  001E                     _PR2	set	30
  5720  0017                     _T0CON0bits	set	23
  5721  0017                     _T0CON0	set	23
  5722  0015                     _TMR0L	set	21
  5723  0016                     _TMR0H	set	22
  5724  0018                     _T0CON1	set	24
  5725  0011                     _PIR1bits	set	17
  5726  0010                     _PIR0bits	set	16
  5727  000E                     _PORTCbits	set	14
  5728  000B                     _INTCONbits	set	11
  5729  0091                     _PIE1bits	set	145
  5730  0090                     _PIE0bits	set	144
  5731  008E                     _TRISC	set	142
  5732  008D                     _TRISB	set	141
  5733  008C                     _TRISA	set	140
  5734  0097                     _WDTCON	set	151
  5735  010C                     _LATAbits	set	268
  5736  010E                     _LATCbits	set	270
  5737  010D                     _LATBbits	set	269
  5738  010E                     _LATC	set	270
  5739  010D                     _LATB	set	269
  5740  010C                     _LATA	set	268
  5741  0199                     _RC1REG	set	409
  5742  019D                     _RC1STAbits	set	413
  5743  019A                     _TX1REG	set	410
  5744  019C                     _SP1BRGH	set	412
  5745  019B                     _SP1BRGL	set	411
  5746  019E                     _TX1STA	set	414
  5747  019D                     _RC1STA	set	413
  5748  019F                     _BAUD1CON	set	415
  5749  018C                     _ANSELA	set	396
  5750  018D                     _ANSELB	set	397
  5751  018E                     _ANSELC	set	398
  5752  0214                     _SSP1STATbits	set	532
  5753  0213                     _SSP1MSK	set	531
  5754  0211                     _SSP1BUF	set	529
  5755  0216                     _SSP1CON2bits	set	534
  5756  0212                     _SSP1ADD	set	530
  5757  0216                     _SSP1CON2	set	534
  5758  0215                     _SSP1CON1	set	533
  5759  0214                     _SSP1STAT	set	532
  5760  0215                     _SSP1CON1bits	set	533
  5761  020E                     _WPUC	set	526
  5762  020C                     _WPUA	set	524
  5763  020D                     _WPUB	set	525
  5764  028E                     _ODCONC	set	654
  5765  028D                     _ODCONB	set	653
  5766  028C                     _ODCONA	set	652
  5767  0896                     _NVMCON2	set	2198
  5768  0893                     _NVMDATL	set	2195
  5769  0894                     _NVMDATH	set	2196
  5770  0895                     _NVMCON1bits	set	2197
  5771  0892                     _NVMADRH	set	2194
  5772  0891                     _NVMADRL	set	2193
  5773  0916                     _PMD5	set	2326
  5774  0915                     _PMD4	set	2325
  5775  0914                     _PMD3	set	2324
  5776  0913                     _PMD2	set	2323
  5777  0912                     _PMD1	set	2322
  5778  0911                     _PMD0	set	2321
  5779  091E                     _OSCTUNE	set	2334
  5780  091F                     _OSCFRQ	set	2335
  5781  091D                     _OSCEN	set	2333
  5782  091B                     _OSCCON3	set	2331
  5783  0919                     _OSCCON1	set	2329
  5784  0E24                     _RXPPSbits	set	3620
  5785  0E20                     _SSP1CLKPPSbits	set	3616
  5786  0E21                     _SSP1DATPPSbits	set	3617
  5787  0E9D                     _RB5PPSbits	set	3741
  5788  0E9E                     _RB6PPSbits	set	3742
  5789  0E9F                     _RB7PPSbits	set	3743
  5790                           
  5791                           	psect	stringtext12
  5792  2828                     __pstringtext12:	
  5793  2828                     STR_43:	
  5794  2828  340A               	retlw	10
  5795  2829  3474               	retlw	116	;'t'
  5796  282A  3465               	retlw	101	;'e'
  5797  282B  3473               	retlw	115	;'s'
  5798  282C  3474               	retlw	116	;'t'
  5799  282D  3469               	retlw	105	;'i'
  5800  282E  346E               	retlw	110	;'n'
  5801  282F  3467               	retlw	103	;'g'
  5802  2830  3420               	retlw	32	;' '
  5803  2831  3462               	retlw	98	;'b'
  5804  2832  346F               	retlw	111	;'o'
  5805  2833  3474               	retlw	116	;'t'
  5806  2834  3474               	retlw	116	;'t'
  5807  2835  346F               	retlw	111	;'o'
  5808  2836  346D               	retlw	109	;'m'
  5809  2837  3420               	retlw	32	;' '
  5810  2838  344C               	retlw	76	;'L'
  5811  2839  3445               	retlw	69	;'E'
  5812  283A  3444               	retlw	68	;'D'
  5813  283B  3420               	retlw	32	;' '
  5814  283C  3464               	retlw	100	;'d'
  5815  283D  3472               	retlw	114	;'r'
  5816  283E  3469               	retlw	105	;'i'
  5817  283F  3476               	retlw	118	;'v'
  5818  2840  3465               	retlw	101	;'e'
  5819  2841  3472               	retlw	114	;'r'
  5820  2842  342E               	retlw	46	;'.'
  5821  2843  342E               	retlw	46	;'.'
  5822  2844  342E               	retlw	46	;'.'
  5823  2845  340A               	retlw	10
  5824  2846  3400               	retlw	0
  5825                           
  5826                           	psect	stringtext13
  5827  2847                     __pstringtext13:	
  5828  2847                     STR_37:	
  5829  2847  340A               	retlw	10
  5830  2848  342D               	retlw	45	;'-'
  5831  2849  342D               	retlw	45	;'-'
  5832  284A  342D               	retlw	45	;'-'
  5833  284B  342D               	retlw	45	;'-'
  5834  284C  3473               	retlw	115	;'s'
  5835  284D  3474               	retlw	116	;'t'
  5836  284E  3461               	retlw	97	;'a'
  5837  284F  3472               	retlw	114	;'r'
  5838  2850  3474               	retlw	116	;'t'
  5839  2851  3469               	retlw	105	;'i'
  5840  2852  346E               	retlw	110	;'n'
  5841  2853  3467               	retlw	103	;'g'
  5842  2854  3420               	retlw	32	;' '
  5843  2855  3463               	retlw	99	;'c'
  5844  2856  346F               	retlw	111	;'o'
  5845  2857  346D               	retlw	109	;'m'
  5846  2858  346D               	retlw	109	;'m'
  5847  2859  3420               	retlw	32	;' '
  5848  285A  3474               	retlw	116	;'t'
  5849  285B  3465               	retlw	101	;'e'
  5850  285C  3473               	retlw	115	;'s'
  5851  285D  3474               	retlw	116	;'t'
  5852  285E  342D               	retlw	45	;'-'
  5853  285F  342D               	retlw	45	;'-'
  5854  2860  342D               	retlw	45	;'-'
  5855  2861  342D               	retlw	45	;'-'
  5856  2862  340A               	retlw	10
  5857  2863  340A               	retlw	10
  5858  2864  3400               	retlw	0
  5859                           
  5860                           	psect	stringtext14
  5861  2865                     __pstringtext14:	
  5862  2865                     STR_51:	
  5863  2865  342D               	retlw	45	;'-'
  5864  2866  342D               	retlw	45	;'-'
  5865  2867  342D               	retlw	45	;'-'
  5866  2868  342D               	retlw	45	;'-'
  5867  2869  3466               	retlw	102	;'f'
  5868  286A  3469               	retlw	105	;'i'
  5869  286B  346E               	retlw	110	;'n'
  5870  286C  3469               	retlw	105	;'i'
  5871  286D  3473               	retlw	115	;'s'
  5872  286E  3468               	retlw	104	;'h'
  5873  286F  3465               	retlw	101	;'e'
  5874  2870  3464               	retlw	100	;'d'
  5875  2871  3420               	retlw	32	;' '
  5876  2872  3463               	retlw	99	;'c'
  5877  2873  346F               	retlw	111	;'o'
  5878  2874  346D               	retlw	109	;'m'
  5879  2875  346D               	retlw	109	;'m'
  5880  2876  3420               	retlw	32	;' '
  5881  2877  3474               	retlw	116	;'t'
  5882  2878  3465               	retlw	101	;'e'
  5883  2879  3473               	retlw	115	;'s'
  5884  287A  3474               	retlw	116	;'t'
  5885  287B  342D               	retlw	45	;'-'
  5886  287C  342D               	retlw	45	;'-'
  5887  287D  342D               	retlw	45	;'-'
  5888  287E  342D               	retlw	45	;'-'
  5889  287F  340A               	retlw	10
  5890  2880  3400               	retlw	0
  5891                           
  5892                           	psect	stringtext15
  5893  2881                     __pstringtext15:	
  5894  2881                     STR_38:	
  5895  2881  3474               	retlw	116	;'t'
  5896  2882  3465               	retlw	101	;'e'
  5897  2883  3473               	retlw	115	;'s'
  5898  2884  3474               	retlw	116	;'t'
  5899  2885  3469               	retlw	105	;'i'
  5900  2886  346E               	retlw	110	;'n'
  5901  2887  3467               	retlw	103	;'g'
  5902  2888  3420               	retlw	32	;' '
  5903  2889  3474               	retlw	116	;'t'
  5904  288A  346F               	retlw	111	;'o'
  5905  288B  3470               	retlw	112	;'p'
  5906  288C  3420               	retlw	32	;' '
  5907  288D  344C               	retlw	76	;'L'
  5908  288E  3445               	retlw	69	;'E'
  5909  288F  3444               	retlw	68	;'D'
  5910  2890  3420               	retlw	32	;' '
  5911  2891  3464               	retlw	100	;'d'
  5912  2892  3472               	retlw	114	;'r'
  5913  2893  3469               	retlw	105	;'i'
  5914  2894  3476               	retlw	118	;'v'
  5915  2895  3465               	retlw	101	;'e'
  5916  2896  3472               	retlw	114	;'r'
  5917  2897  342E               	retlw	46	;'.'
  5918  2898  342E               	retlw	46	;'.'
  5919  2899  342E               	retlw	46	;'.'
  5920  289A  3400               	retlw	0
  5921                           
  5922                           	psect	stringtext16
  5923  289B                     __pstringtext16:	
  5924  289B                     STR_48:	
  5925  289B  340A               	retlw	10
  5926  289C  3474               	retlw	116	;'t'
  5927  289D  3465               	retlw	101	;'e'
  5928  289E  3473               	retlw	115	;'s'
  5929  289F  3474               	retlw	116	;'t'
  5930  28A0  3469               	retlw	105	;'i'
  5931  28A1  346E               	retlw	110	;'n'
  5932  28A2  3467               	retlw	103	;'g'
  5933  28A3  3420               	retlw	32	;' '
  5934  28A4  3470               	retlw	112	;'p'
  5935  28A5  3469               	retlw	105	;'i'
  5936  28A6  3465               	retlw	101	;'e'
  5937  28A7  347A               	retlw	122	;'z'
  5938  28A8  346F               	retlw	111	;'o'
  5939  28A9  3420               	retlw	32	;' '
  5940  28AA  3464               	retlw	100	;'d'
  5941  28AB  3472               	retlw	114	;'r'
  5942  28AC  3469               	retlw	105	;'i'
  5943  28AD  3476               	retlw	118	;'v'
  5944  28AE  3465               	retlw	101	;'e'
  5945  28AF  3472               	retlw	114	;'r'
  5946  28B0  342E               	retlw	46	;'.'
  5947  28B1  342E               	retlw	46	;'.'
  5948  28B2  342E               	retlw	46	;'.'
  5949  28B3  3400               	retlw	0
  5950                           
  5951                           	psect	stringtext17
  5952  28B4                     __pstringtext17:	
  5953  28B4                     STR_82:	
  5954  28B4  3455               	retlw	85	;'U'
  5955  28B5  344E               	retlw	78	;'N'
  5956  28B6  3452               	retlw	82	;'R'
  5957  28B7  3445               	retlw	69	;'E'
  5958  28B8  3443               	retlw	67	;'C'
  5959  28B9  344F               	retlw	79	;'O'
  5960  28BA  3447               	retlw	71	;'G'
  5961  28BB  344E               	retlw	78	;'N'
  5962  28BC  3449               	retlw	73	;'I'
  5963  28BD  345A               	retlw	90	;'Z'
  5964  28BE  3445               	retlw	69	;'E'
  5965  28BF  3444               	retlw	68	;'D'
  5966  28C0  3420               	retlw	32	;' '
  5967  28C1  3443               	retlw	67	;'C'
  5968  28C2  344F               	retlw	79	;'O'
  5969  28C3  344D               	retlw	77	;'M'
  5970  28C4  344D               	retlw	77	;'M'
  5971  28C5  3441               	retlw	65	;'A'
  5972  28C6  344E               	retlw	78	;'N'
  5973  28C7  3444               	retlw	68	;'D'
  5974  28C8  3421               	retlw	33	;'!'
  5975  28C9  340A               	retlw	10
  5976  28CA  3400               	retlw	0
  5977                           
  5978                           	psect	stringtext18
  5979  28CB                     __pstringtext18:	
  5980  28CB                     STR_53:	
  5981  28CB  3464               	retlw	100	;'d'
  5982  28CC  3472               	retlw	114	;'r'
  5983  28CD  3476               	retlw	118	;'v'
  5984  28CE  345F               	retlw	95	;'_'
  5985  28CF  3477               	retlw	119	;'w'
  5986  28D0  3472               	retlw	114	;'r'
  5987  28D1  3469               	retlw	105	;'i'
  5988  28D2  3474               	retlw	116	;'t'
  5989  28D3  3465               	retlw	101	;'e'
  5990  28D4  3420               	retlw	32	;' '
  5991  28D5  3465               	retlw	101	;'e'
  5992  28D6  3472               	retlw	114	;'r'
  5993  28D7  3472               	retlw	114	;'r'
  5994  28D8  346F               	retlw	111	;'o'
  5995  28D9  3472               	retlw	114	;'r'
  5996  28DA  3421               	retlw	33	;'!'
  5997  28DB  340A               	retlw	10
  5998  28DC  3400               	retlw	0
  5999                           
  6000                           	psect	stringtext19
  6001  28DD                     __pstringtext19:	
  6002  28DD                     STR_55:	
  6003  28DD  3464               	retlw	100	;'d'
  6004  28DE  3472               	retlw	114	;'r'
  6005  28DF  3476               	retlw	118	;'v'
  6006  28E0  345F               	retlw	95	;'_'
  6007  28E1  3472               	retlw	114	;'r'
  6008  28E2  3465               	retlw	101	;'e'
  6009  28E3  3461               	retlw	97	;'a'
  6010  28E4  3464               	retlw	100	;'d'
  6011  28E5  3420               	retlw	32	;' '
  6012  28E6  3465               	retlw	101	;'e'
  6013  28E7  3472               	retlw	114	;'r'
  6014  28E8  3472               	retlw	114	;'r'
  6015  28E9  346F               	retlw	111	;'o'
  6016  28EA  3472               	retlw	114	;'r'
  6017  28EB  3421               	retlw	33	;'!'
  6018  28EC  340A               	retlw	10
  6019  28ED  3400               	retlw	0
  6020                           
  6021                           	psect	stringtext20
  6022  28EE                     __pstringtext20:	
  6023  28EE                     STR_56:	
  6024  28EE  3466               	retlw	102	;'f'
  6025  28EF  3469               	retlw	105	;'i'
  6026  28F0  3466               	retlw	102	;'f'
  6027  28F1  346F               	retlw	111	;'o'
  6028  28F2  3420               	retlw	32	;' '
  6029  28F3  346E               	retlw	110	;'n'
  6030  28F4  346F               	retlw	111	;'o'
  6031  28F5  3474               	retlw	116	;'t'
  6032  28F6  3420               	retlw	32	;' '
  6033  28F7  3472               	retlw	114	;'r'
  6034  28F8  3465               	retlw	101	;'e'
  6035  28F9  3461               	retlw	97	;'a'
  6036  28FA  3464               	retlw	100	;'d'
  6037  28FB  3479               	retlw	121	;'y'
  6038  28FC  3421               	retlw	33	;'!'
  6039  28FD  340A               	retlw	10
  6040  28FE  3400               	retlw	0
  6041                           
  6042                           	psect	stringtext21
  6043  28FF                     __pstringtext21:	
  6044  28FF                     STR_52:	
  6045  28FF  3464               	retlw	100	;'d'
  6046  2900  3472               	retlw	114	;'r'
  6047  2901  3476               	retlw	118	;'v'
  6048  2902  3420               	retlw	32	;' '
  6049  2903  3469               	retlw	105	;'i'
  6050  2904  346E               	retlw	110	;'n'
  6051  2905  3469               	retlw	105	;'i'
  6052  2906  3474               	retlw	116	;'t'
  6053  2907  3469               	retlw	105	;'i'
  6054  2908  3461               	retlw	97	;'a'
  6055  2909  346C               	retlw	108	;'l'
  6056  290A  3469               	retlw	105	;'i'
  6057  290B  347A               	retlw	122	;'z'
  6058  290C  3465               	retlw	101	;'e'
  6059  290D  3464               	retlw	100	;'d'
  6060  290E  340A               	retlw	10
  6061  290F  3400               	retlw	0
  6062                           
  6063                           	psect	stringtext22
  6064  2910                     __pstringtext22:	
  6065  2910                     STR_13:	
  6066  2910  3472               	retlw	114	;'r'
  6067  2911  3465               	retlw	101	;'e'
  6068  2912  346C               	retlw	108	;'l'
  6069  2913  343A               	retlw	58	;':'
  6070  2914  3420               	retlw	32	;' '
  6071  2915  3461               	retlw	97	;'a'
  6072  2916  346C               	retlw	108	;'l'
  6073  2917  346C               	retlw	108	;'l'
  6074  2918  3420               	retlw	32	;' '
  6075  2919  3474               	retlw	116	;'t'
  6076  291A  3468               	retlw	104	;'h'
  6077  291B  3465               	retlw	101	;'e'
  6078  291C  3472               	retlw	114	;'r'
  6079  291D  3465               	retlw	101	;'e'
  6080  291E  340A               	retlw	10
  6081  291F  3400               	retlw	0
  6082                           
  6083                           	psect	stringtext23
  6084  2920                     __pstringtext23:	
  6085  2920                     STR_11:	
  6086  2920  3461               	retlw	97	;'a'
  6087  2921  3462               	retlw	98	;'b'
  6088  2922  3473               	retlw	115	;'s'
  6089  2923  343A               	retlw	58	;':'
  6090  2924  3420               	retlw	32	;' '
  6091  2925  3461               	retlw	97	;'a'
  6092  2926  346C               	retlw	108	;'l'
  6093  2927  346C               	retlw	108	;'l'
  6094  2928  3420               	retlw	32	;' '
  6095  2929  3474               	retlw	116	;'t'
  6096  292A  3468               	retlw	104	;'h'
  6097  292B  3465               	retlw	101	;'e'
  6098  292C  3472               	retlw	114	;'r'
  6099  292D  3465               	retlw	101	;'e'
  6100  292E  340A               	retlw	10
  6101  292F  3400               	retlw	0
  6102                           
  6103                           	psect	stringtext24
  6104  2930                     __pstringtext24:	
  6105  2930                     STR_4:	
  6106  2930  3472               	retlw	114	;'r'
  6107  2931  3465               	retlw	101	;'e'
  6108  2932  3461               	retlw	97	;'a'
  6109  2933  3464               	retlw	100	;'d'
  6110  2934  3420               	retlw	32	;' '
  6111  2935  3464               	retlw	100	;'d'
  6112  2936  3461               	retlw	97	;'a'
  6113  2937  3474               	retlw	116	;'t'
  6114  2938  3461               	retlw	97	;'a'
  6115  2939  343A               	retlw	58	;':'
  6116  293A  3420               	retlw	32	;' '
  6117  293B  3425               	retlw	37	;'%'
  6118  293C  346C               	retlw	108	;'l'
  6119  293D  3475               	retlw	117	;'u'
  6120  293E  340A               	retlw	10
  6121  293F  3400               	retlw	0
  6122                           
  6123                           	psect	stringtext25
  6124  294F                     __pstringtext25:	
  6125  294F                     STR_70:	
  6126  294F  3468               	retlw	104	;'h'
  6127  2950  3465               	retlw	101	;'e'
  6128  2951  3461               	retlw	97	;'a'
  6129  2952  3474               	retlw	116	;'t'
  6130  2953  3465               	retlw	101	;'e'
  6131  2954  3472               	retlw	114	;'r'
  6132  2955  3470               	retlw	112	;'p'
  6133  2956  346F               	retlw	111	;'o'
  6134  2957  3473               	retlw	115	;'s'
  6135  2958  3474               	retlw	116	;'t'
  6136  2959  3474               	retlw	116	;'t'
  6137  295A  3469               	retlw	105	;'i'
  6138  295B  346D               	retlw	109	;'m'
  6139  295C  3465               	retlw	101	;'e'
  6140  295D  3400               	retlw	0
  6141                           
  6142                           	psect	stringtext26
  6143  295E                     __pstringtext26:	
  6144  295E                     STR_5:	
  6145  295E  340A               	retlw	10
  6146  295F  340A               	retlw	10
  6147  2960  3473               	retlw	115	;'s'
  6148  2961  3479               	retlw	121	;'y'
  6149  2962  3473               	retlw	115	;'s'
  6150  2963  3474               	retlw	116	;'t'
  6151  2964  3465               	retlw	101	;'e'
  6152  2965  346D               	retlw	109	;'m'
  6153  2966  3420               	retlw	32	;' '
  6154  2967  3464               	retlw	100	;'d'
  6155  2968  346F               	retlw	111	;'o'
  6156  2969  346E               	retlw	110	;'n'
  6157  296A  3465               	retlw	101	;'e'
  6158  296B  340A               	retlw	10
  6159  296C  3400               	retlw	0
  6160                           
  6161                           	psect	stringtext27
  6162  296D                     __pstringtext27:	
  6163  296D                     STR_69:	
  6164  296D  3468               	retlw	104	;'h'
  6165  296E  3465               	retlw	101	;'e'
  6166  296F  3461               	retlw	97	;'a'
  6167  2970  3474               	retlw	116	;'t'
  6168  2971  3465               	retlw	101	;'e'
  6169  2972  3472               	retlw	114	;'r'
  6170  2973  3470               	retlw	112	;'p'
  6171  2974  3472               	retlw	114	;'r'
  6172  2975  3465               	retlw	101	;'e'
  6173  2976  3474               	retlw	116	;'t'
  6174  2977  3469               	retlw	105	;'i'
  6175  2978  346D               	retlw	109	;'m'
  6176  2979  3465               	retlw	101	;'e'
  6177  297A  3400               	retlw	0
  6178                           
  6179                           	psect	stringtext28
  6180  297B                     __pstringtext28:	
  6181  297B                     STR_73:	
  6182  297B  3474               	retlw	116	;'t'
  6183  297C  346F               	retlw	111	;'o'
  6184  297D  3467               	retlw	103	;'g'
  6185  297E  3467               	retlw	103	;'g'
  6186  297F  346C               	retlw	108	;'l'
  6187  2980  3465               	retlw	101	;'e'
  6188  2981  3468               	retlw	104	;'h'
  6189  2982  3465               	retlw	101	;'e'
  6190  2983  3461               	retlw	97	;'a'
  6191  2984  3474               	retlw	116	;'t'
  6192  2985  3465               	retlw	101	;'e'
  6193  2986  3472               	retlw	114	;'r'
  6194  2987  3400               	retlw	0
  6195                           
  6196                           	psect	stringtext29
  6197  2994                     __pstringtext29:	
  6198  2994                     STR_68:	
  6199  2994  3470               	retlw	112	;'p'
  6200  2995  3469               	retlw	105	;'i'
  6201  2996  3465               	retlw	101	;'e'
  6202  2997  347A               	retlw	122	;'z'
  6203  2998  346F               	retlw	111	;'o'
  6204  2999  346F               	retlw	111	;'o'
  6205  299A  346E               	retlw	110	;'n'
  6206  299B  3474               	retlw	116	;'t'
  6207  299C  3469               	retlw	105	;'i'
  6208  299D  346D               	retlw	109	;'m'
  6209  299E  3465               	retlw	101	;'e'
  6210  299F  3400               	retlw	0
  6211                           
  6212                           	psect	stringtext30
  6213  29A0                     __pstringtext30:	
  6214  29A0                     STR_74:	
  6215  29A0  3474               	retlw	116	;'t'
  6216  29A1  3469               	retlw	105	;'i'
  6217  29A2  346D               	retlw	109	;'m'
  6218  29A3  3465               	retlw	101	;'e'
  6219  29A4  3468               	retlw	104	;'h'
  6220  29A5  3465               	retlw	101	;'e'
  6221  29A6  3461               	retlw	97	;'a'
  6222  29A7  3474               	retlw	116	;'t'
  6223  29A8  3465               	retlw	101	;'e'
  6224  29A9  3472               	retlw	114	;'r'
  6225  29AA  3400               	retlw	0
  6226                           
  6227                           	psect	stringtext31
  6228  29AB                     __pstringtext31:	
  6229  29AB                     STR_12:	
  6230  29AB  3464               	retlw	100	;'d'
  6231  29AC  346F               	retlw	111	;'o'
  6232  29AD  3452               	retlw	82	;'R'
  6233  29AE  3465               	retlw	101	;'e'
  6234  29AF  346C               	retlw	108	;'l'
  6235  29B0  344D               	retlw	77	;'M'
  6236  29B1  346F               	retlw	111	;'o'
  6237  29B2  3476               	retlw	118	;'v'
  6238  29B3  3465               	retlw	101	;'e'
  6239  29B4  340A               	retlw	10
  6240  29B5  3400               	retlw	0
  6241                           
  6242                           	psect	stringtext32
  6243  29B6                     __pstringtext32:	
  6244  29B6                     STR_42:	
  6245  29B6  340A               	retlw	10
  6246  29B7  340A               	retlw	10
  6247  29B8  3473               	retlw	115	;'s'
  6248  29B9  3468               	retlw	104	;'h'
  6249  29BA  346F               	retlw	111	;'o'
  6250  29BB  3472               	retlw	114	;'r'
  6251  29BC  3474               	retlw	116	;'t'
  6252  29BD  3473               	retlw	115	;'s'
  6253  29BE  343A               	retlw	58	;':'
  6254  29BF  3420               	retlw	32	;' '
  6255  29C0  3400               	retlw	0
  6256                           
  6257                           	psect	stringtext33
  6258  29C1                     __pstringtext33:	
  6259  29C1                     STR_50:	
  6260  29C1  3446               	retlw	70	;'F'
  6261  29C2  3441               	retlw	65	;'A'
  6262  29C3  3449               	retlw	73	;'I'
  6263  29C4  344C               	retlw	76	;'L'
  6264  29C5  3445               	retlw	69	;'E'
  6265  29C6  3444               	retlw	68	;'D'
  6266  29C7  340A               	retlw	10
  6267  29C8  340A               	retlw	10
  6268  29C9  3400               	retlw	0
  6269                           
  6270                           	psect	stringtext34
  6271  29CA                     __pstringtext34:	
  6272  29CA                     STR_49:	
  6273  29CA  3470               	retlw	112	;'p'
  6274  29CB  3461               	retlw	97	;'a'
  6275  29CC  3473               	retlw	115	;'s'
  6276  29CD  3473               	retlw	115	;'s'
  6277  29CE  3465               	retlw	101	;'e'
  6278  29CF  3464               	retlw	100	;'d'
  6279  29D0  340A               	retlw	10
  6280  29D1  340A               	retlw	10
  6281  29D2  3400               	retlw	0
  6282                           
  6283                           	psect	stringtext35
  6284  29D3                     __pstringtext35:	
  6285  29D3                     STR_66:	
  6286  29D3  3464               	retlw	100	;'d'
  6287  29D4  3472               	retlw	114	;'r'
  6288  29D5  3476               	retlw	118	;'v'
  6289  29D6  3450               	retlw	80	;'P'
  6290  29D7  3465               	retlw	101	;'e'
  6291  29D8  3461               	retlw	97	;'a'
  6292  29D9  346B               	retlw	107	;'k'
  6293  29DA  3400               	retlw	0
  6294                           
  6295                           	psect	stringtext36
  6296  29DB                     __pstringtext36:	
  6297  29DB                     STR_67:	
  6298  29DB  3464               	retlw	100	;'d'
  6299  29DC  3472               	retlw	114	;'r'
  6300  29DD  3476               	retlw	118	;'v'
  6301  29DE  3447               	retlw	71	;'G'
  6302  29DF  3461               	retlw	97	;'a'
  6303  29E0  3469               	retlw	105	;'i'
  6304  29E1  346E               	retlw	110	;'n'
  6305  29E2  3400               	retlw	0
  6306                           
  6307                           	psect	stringtext37
  6308  29E3                     __pstringtext37:	
  6309  29E3                     STR_71:	
  6310  29E3  346C               	retlw	108	;'l'
  6311  29E4  3465               	retlw	101	;'e'
  6312  29E5  3464               	retlw	100	;'d'
  6313  29E6  3467               	retlw	103	;'g'
  6314  29E7  3461               	retlw	97	;'a'
  6315  29E8  3469               	retlw	105	;'i'
  6316  29E9  346E               	retlw	110	;'n'
  6317  29EA  3400               	retlw	0
  6318                           
  6319                           	psect	stringtext38
  6320  29EB                     __pstringtext38:	
  6321  29EB                     STR_77:	
  6322  29EB  346D               	retlw	109	;'m'
  6323  29EC  3473               	retlw	115	;'s'
  6324  29ED  3474               	retlw	116	;'t'
  6325  29EE  3461               	retlw	97	;'a'
  6326  29EF  3474               	retlw	116	;'t'
  6327  29F0  3475               	retlw	117	;'u'
  6328  29F1  3473               	retlw	115	;'s'
  6329  29F2  3400               	retlw	0
  6330                           
  6331                           	psect	stringtext39
  6332  29F3                     __pstringtext39:	
  6333  29F3                     STR_40:	
  6334  29F3  3446               	retlw	70	;'F'
  6335  29F4  3441               	retlw	65	;'A'
  6336  29F5  3449               	retlw	73	;'I'
  6337  29F6  344C               	retlw	76	;'L'
  6338  29F7  3445               	retlw	69	;'E'
  6339  29F8  3444               	retlw	68	;'D'
  6340  29F9  340A               	retlw	10
  6341  29FA  3400               	retlw	0
  6342                           
  6343                           	psect	stringtext40
  6344  29FB                     __pstringtext40:	
  6345  29FB                     STR_39:	
  6346  29FB  3470               	retlw	112	;'p'
  6347  29FC  3461               	retlw	97	;'a'
  6348  29FD  3473               	retlw	115	;'s'
  6349  29FE  3473               	retlw	115	;'s'
  6350  29FF  3465               	retlw	101	;'e'
  6351  2A00  3464               	retlw	100	;'d'
  6352  2A01  340A               	retlw	10
  6353  2A02  3400               	retlw	0
  6354                           
  6355                           	psect	stringtext41
  6356  2A03                     __pstringtext41:	
  6357  2A03                     STR_7:	
  6358  2A03  3464               	retlw	100	;'d'
  6359  2A04  346F               	retlw	111	;'o'
  6360  2A05  344D               	retlw	77	;'M'
  6361  2A06  346F               	retlw	111	;'o'
  6362  2A07  3476               	retlw	118	;'v'
  6363  2A08  3465               	retlw	101	;'e'
  6364  2A09  340A               	retlw	10
  6365  2A0A  3400               	retlw	0
  6366                           
  6367                           	psect	stringtext42
  6368  2A0B                     __pstringtext42:	
  6369  2A0B                     STR_41:	
  6370  2A0B  346F               	retlw	111	;'o'
  6371  2A0C  3470               	retlw	112	;'p'
  6372  2A0D  3465               	retlw	101	;'e'
  6373  2A0E  346E               	retlw	110	;'n'
  6374  2A0F  3473               	retlw	115	;'s'
  6375  2A10  343A               	retlw	58	;':'
  6376  2A11  3420               	retlw	32	;' '
  6377  2A12  3400               	retlw	0
  6378                           
  6379                           	psect	stringtext43
  6380  2A13                     __pstringtext43:	
  6381  2A13                     STR_78:	
  6382  2A13  3464               	retlw	100	;'d'
  6383  2A14  346F               	retlw	111	;'o'
  6384  2A15  346D               	retlw	109	;'m'
  6385  2A16  346F               	retlw	111	;'o'
  6386  2A17  3476               	retlw	118	;'v'
  6387  2A18  3465               	retlw	101	;'e'
  6388  2A19  3400               	retlw	0
  6389                           
  6390                           	psect	stringtext44
  6391  2A1A                     __pstringtext44:	
  6392  2A1A                     STR_72:	
  6393  2A1A  346C               	retlw	108	;'l'
  6394  2A1B  3465               	retlw	101	;'e'
  6395  2A1C  3464               	retlw	100	;'d'
  6396  2A1D  3470               	retlw	112	;'p'
  6397  2A1E  3477               	retlw	119	;'w'
  6398  2A1F  3472               	retlw	114	;'r'
  6399  2A20  3400               	retlw	0
  6400                           
  6401                           	psect	stringtext45
  6402  2A21                     __pstringtext45:	
  6403  2A21                     STR_75:	
  6404  2A21  3467               	retlw	103	;'g'
  6405  2A22  3465               	retlw	101	;'e'
  6406  2A23  3474               	retlw	116	;'t'
  6407  2A24  3441               	retlw	65	;'A'
  6408  2A25  3400               	retlw	0
  6409                           
  6410                           	psect	stringtext46
  6411  2A26                     __pstringtext46:	
  6412  2A26                     STR_63:	
  6413  2A26  3473               	retlw	115	;'s'
  6414  2A27  3465               	retlw	101	;'e'
  6415  2A28  3474               	retlw	116	;'t'
  6416  2A29  3441               	retlw	65	;'A'
  6417  2A2A  3400               	retlw	0
  6418                           
  6419                           	psect	stringtext47
  6420  2A2B                     __pstringtext47:	
  6421  2A2B                     STR_76:	
  6422  2A2B  3467               	retlw	103	;'g'
  6423  2A2C  3465               	retlw	101	;'e'
  6424  2A2D  3474               	retlw	116	;'t'
  6425  2A2E  344D               	retlw	77	;'M'
  6426  2A2F  3400               	retlw	0
  6427                           
  6428                           	psect	stringtext48
  6429  2A30                     __pstringtext48:	
  6430  2A30                     STR_64:	
  6431  2A30  3473               	retlw	115	;'s'
  6432  2A31  3465               	retlw	101	;'e'
  6433  2A32  3474               	retlw	116	;'t'
  6434  2A33  344D               	retlw	77	;'M'
  6435  2A34  3400               	retlw	0
  6436                           
  6437                           	psect	stringtext49
  6438  2A35                     __pstringtext49:	
  6439  2A35                     STR_80:	
  6440  2A35  3470               	retlw	112	;'p'
  6441  2A36  3469               	retlw	105	;'i'
  6442  2A37  346E               	retlw	110	;'n'
  6443  2A38  3467               	retlw	103	;'g'
  6444  2A39  3400               	retlw	0
  6445                           
  6446                           	psect	stringtext50
  6447  2A3A                     __pstringtext50:	
  6448  2A3A                     STR_79:	
  6449  2A3A  3463               	retlw	99	;'c'
  6450  2A3B  346F               	retlw	111	;'o'
  6451  2A3C  346D               	retlw	109	;'m'
  6452  2A3D  346D               	retlw	109	;'m'
  6453  2A3E  3400               	retlw	0
  6454                           
  6455                           	psect	stringtext51
  6456  2A3F                     __pstringtext51:	
  6457  2A3F                     STR_59:	
  6458  2A3F  3472               	retlw	114	;'r'
  6459  2A40  3465               	retlw	101	;'e'
  6460  2A41  346C               	retlw	108	;'l'
  6461  2A42  3400               	retlw	0
  6462                           
  6463                           	psect	stringtext52
  6464  2A43                     __pstringtext52:	
  6465  2A43                     STR_60:	
  6466  2A43  3461               	retlw	97	;'a'
  6467  2A44  3462               	retlw	98	;'b'
  6468  2A45  3473               	retlw	115	;'s'
  6469  2A46  3400               	retlw	0
  6470                           
  6471                           	psect	stringtext53
  6472  2A47                     __pstringtext53:	
  6473  2A47                     STR_61:	
  6474  2A47  3470               	retlw	112	;'p'
  6475  2A48  346F               	retlw	111	;'o'
  6476  2A49  3473               	retlw	115	;'s'
  6477  2A4A  3400               	retlw	0
  6478                           
  6479                           	psect	stringtext54
  6480  2A4B                     __pstringtext54:	
  6481  2A4B                     STR_15:	
  6482  2A4B  3425               	retlw	37	;'%'
  6483  2A4C  3464               	retlw	100	;'d'
  6484  2A4D  340A               	retlw	10
  6485  2A4E  3400               	retlw	0
  6486                           
  6487                           	psect	stringtext55
  6488  2A4F                     __pstringtext55:	
  6489  2A4F                     STR_1:	
  6490  2A4F  3425               	retlw	37	;'%'
  6491  2A50  3464               	retlw	100	;'d'
  6492  2A51  3420               	retlw	32	;' '
  6493  2A52  3400               	retlw	0
  6494                           
  6495                           	psect	stringtext56
  6496  2A59                     __pstringtext56:	
  6497  2A59                     STR_8:	
  6498  2A59  3441               	retlw	65	;'A'
  6499  2A5A  340A               	retlw	10
  6500  2A5B  3400               	retlw	0
  6501                           
  6502                           	psect	stringtext57
  6503  2A5C                     __pstringtext57:	
  6504  2A5C                     STR_17:	
  6505  2A5C  3445               	retlw	69	;'E'
  6506  2A5D  340A               	retlw	10
  6507  2A5E  3400               	retlw	0
  6508                           
  6509                           	psect	stringtext58
  6510  2A61                     __pstringtext58:	
  6511  2A61                     STR_65:	
  6512  2A61  347A               	retlw	122	;'z'
  6513  2A62  3400               	retlw	0
  6514                           
  6515                           	psect	stringtext59
  6516  2A63                     __pstringtext59:	
  6517  2A63                     STR_36:	
  6518  2A63  344E               	retlw	78	;'N'
  6519  2A64  3400               	retlw	0
  6520                           
  6521                           	psect	stringtext60
  6522  2A65                     __pstringtext60:	
  6523  2A65                     STR_34:	
  6524  2A65  3452               	retlw	82	;'R'
  6525  2A66  3400               	retlw	0
  6526                           
  6527                           	psect	stringtext61
  6528  0000                     __pstringtext61:	
  6529  2863                     
  6530                           ; #config settings
  6531  0000                     
  6532                           	psect	cinit
  6533  0052                     start_initialization:	
  6534  0052                     __initialization:		;BIGRAM
  6535                           
  6536                           ; Initialize objects allocated to BANK0
  6537  0052  3007               	movlw	low __pidataBANK0
  6538  0053  0084               	movwf	4
  6539  0054  30A2               	movlw	(high __pidataBANK0)| (0+128)
  6540  0055  0085               	movwf	5
  6541  0056  305A               	movlw	low __pdataBANK0
  6542  0057  0086               	movwf	6
  6543  0058  3000               	movlw	high __pdataBANK0
  6544  0059  0087               	movwf	7
  6545  005A  3000               	movlw	0
  6546  005B  00FF               	movwf	btemp+1
  6547  005C  3004               	movlw	4
  6548  005D  31A3  234D  3180   	fcall	init_ram
  6549                           
  6550                           ; Initialize objects allocated to BANK1
  6551  0060  3047               	movlw	low __pidataBANK1
  6552  0061  0084               	movwf	4
  6553  0062  30A2               	movlw	(high __pidataBANK1)| (0+128)
  6554  0063  0085               	movwf	5
  6555  0064  30E9               	movlw	low __pdataBANK1
  6556  0065  0086               	movwf	6
  6557  0066  3000               	movlw	high __pdataBANK1
  6558  0067  0087               	movwf	7
  6559  0068  3000               	movlw	0
  6560  0069  00FF               	movwf	btemp+1
  6561  006A  3006               	movlw	6
  6562  006B  31A3  234D  3180   	fcall	init_ram
  6563                           
  6564                           ; Initialize objects allocated to BANK2
  6565  006E  0022               	movlb	2	; select bank2
  6566  006F  3180  2002  3180   	fcall	__pidataBANK2	;fetch initializer
  6567  0072  00EE               	movwf	__pdataBANK2& (0+127)
  6568  0073  3180  2003  3180   	fcall	__pidataBANK2+1	;fetch initializer
  6569  0076  00EF               	movwf	(__pdataBANK2+1)& (0+127)
  6570                           
  6571                           ; Initialize objects allocated to BANK4
  6572  0077  306C               	movlw	low __pidataBANK4
  6573  0078  0084               	movwf	4
  6574  0079  30A5               	movlw	(high __pidataBANK4)| (0+128)
  6575  007A  0085               	movwf	5
  6576  007B  3020               	movlw	low __pdataBANK4
  6577  007C  0086               	movwf	6
  6578  007D  3002               	movlw	high __pdataBANK4
  6579  007E  0087               	movwf	7
  6580  007F  3000               	movlw	0
  6581  0080  00FF               	movwf	btemp+1
  6582  0081  3020               	movlw	32
  6583  0082  31A3  234D  3180   	fcall	init_ram
  6584                           
  6585                           ; Clear objects allocated to BIGRAM
  6586  0085  3090               	movlw	low (0+10128)
  6587  0086  0084               	movwf	4
  6588  0087  3027               	movlw	high (0+10128)
  6589  0088  0085               	movwf	5
  6590  0089  3060               	movlw	96
  6591  008A  00FE               	movwf	btemp
  6592  008B  3000               	movlw	0
  6593  008C  00FF               	movwf	btemp+1
  6594  008D  31A3  2341  3180   	fcall	clear_ram0
  6595                           
  6596                           ; Clear objects allocated to COMMON
  6597  0090  01FD               	clrf	__pbssCOMMON& (0+127)
  6598                           
  6599                           ; Clear objects allocated to BANK0
  6600  0091  304E               	movlw	low __pbssBANK0
  6601  0092  0084               	movwf	4
  6602  0093  3000               	movlw	high __pbssBANK0
  6603  0094  0085               	movwf	5
  6604  0095  300C               	movlw	12
  6605  0096  00FE               	movwf	btemp
  6606  0097  3000               	movlw	0
  6607  0098  00FF               	movwf	btemp+1
  6608  0099  31A3  2341  3180   	fcall	clear_ram0
  6609                           
  6610                           ; Clear objects allocated to BANK1
  6611  009C  30D9               	movlw	low __pbssBANK1
  6612  009D  0084               	movwf	4
  6613  009E  3000               	movlw	high __pbssBANK1
  6614  009F  0085               	movwf	5
  6615  00A0  3010               	movlw	16
  6616  00A1  00FE               	movwf	btemp
  6617  00A2  3000               	movlw	0
  6618  00A3  00FF               	movwf	btemp+1
  6619  00A4  31A3  2341  3180   	fcall	clear_ram0
  6620                           
  6621                           ; Clear objects allocated to BANK2
  6622  00A7  3020               	movlw	low __pbssBANK2
  6623  00A8  0084               	movwf	4
  6624  00A9  3001               	movlw	high __pbssBANK2
  6625  00AA  0085               	movwf	5
  6626  00AB  304C               	movlw	76
  6627  00AC  00FE               	movwf	btemp
  6628  00AD  3000               	movlw	0
  6629  00AE  00FF               	movwf	btemp+1
  6630  00AF  31A3  2341  3180   	fcall	clear_ram0
  6631                           
  6632                           ; Clear objects allocated to BANK3
  6633  00B2  30A0               	movlw	low __pbssBANK3
  6634  00B3  0084               	movwf	4
  6635  00B4  3001               	movlw	high __pbssBANK3
  6636  00B5  0085               	movwf	5
  6637  00B6  3039               	movlw	57
  6638  00B7  00FE               	movwf	btemp
  6639  00B8  3000               	movlw	0
  6640  00B9  00FF               	movwf	btemp+1
  6641  00BA  31A3  2341         	fcall	clear_ram0
  6642  00BC                     end_of_initialization:	
  6643                           ;End of C runtime variable initialization code
  6644                           
  6645  00BC                     __end_of__initialization:	
  6646  00BC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6647  00BD  0020               	movlb	0
  6648  00BE  3193  2BD7         	ljmp	_main	;jump to C main() function
  6649                           
  6650                           	psect	bssCOMMON
  6651  007D                     __pbssCOMMON:	
  6652  007D                     _eusartTxHead:	
  6653  007D                     	ds	1
  6654                           
  6655                           	psect	bssBANK0
  6656  004E                     __pbssBANK0:	
  6657  004E                     _absCommand:	
  6658  004E                     	ds	4
  6659  0052                     _readIdx:	
  6660  0052                     	ds	2
  6661  0054                     strtok@sp:	
  6662  0054                     	ds	1
  6663  0055                     _motionType:	
  6664  0055                     	ds	1
  6665  0056                     _eusartRxCount:	
  6666  0056                     	ds	1
  6667  0057                     _eusartRxTail:	
  6668  0057                     	ds	1
  6669  0058                     _eusartRxHead:	
  6670  0058                     	ds	1
  6671  0059                     _eusartTxTail:	
  6672  0059                     	ds	1
  6673                           
  6674                           	psect	dataBANK0
  6675  005A                     __pdataBANK0:	
  6676  005A                     _demoLong:	
  6677  005A                     	ds	4
  6678                           
  6679                           	psect	bssBANK1
  6680  00D9                     __pbssBANK1:	
  6681  00D9                     _moveMask:	
  6682  00D9                     	ds	4
  6683  00DD                     _activeMask:	
  6684  00DD                     	ds	4
  6685  00E1                     _moveVector_downs:	
  6686  00E1                     	ds	4
  6687  00E5                     _moveVector_ups:	
  6688  00E5                     	ds	4
  6689                           
  6690                           	psect	dataBANK1
  6691  00E9                     __pdataBANK1:	
  6692  00E9                     _piezo_on_time_ms:	
  6693  00E9                     	ds	2
  6694  00EB                     _heater_post_time_ms:	
  6695  00EB                     	ds	2
  6696  00ED                     _heater_pre_time_ms:	
  6697  00ED                     	ds	2
  6698                           
  6699                           	psect	bssBANK2
  6700  0120                     __pbssBANK2:	
  6701  0120                     _i2c_status:	
  6702  0120                     	ds	30
  6703  013E                     _remainingSteps:	
  6704  013E                     	ds	4
  6705  0142                     _demoHeaterToggle_bot:	
  6706  0142                     	ds	4
  6707  0146                     _demoHeaterToggle_top:	
  6708  0146                     	ds	4
  6709  014A                     _LED_configReg_bot:	
  6710  014A                     	ds	4
  6711  014E                     _LED_configReg_top:	
  6712  014E                     	ds	4
  6713  0152                     _second_bottom:	
  6714  0152                     	ds	4
  6715  0156                     _first_top:	
  6716  0156                     	ds	4
  6717  015A                     _first_bottom:	
  6718  015A                     	ds	4
  6719  015E                     _second_top:	
  6720  015E                     	ds	4
  6721  0162                     _errno:	
  6722  0162                     	ds	2
  6723  0164                     _cmdRead:	
  6724  0164                     	ds	2
  6725  0166                     _errorOut:	
  6726  0166                     	ds	2
  6727  0168                     _i2c1_driver_i2cISR:	
  6728  0168                     	ds	2
  6729  016A                     _i2c1_driver_busCollisionISR:	
  6730  016A                     	ds	2
  6731                           
  6732                           	psect	dataBANK2
  6733  016E                     __pdataBANK2:	
  6734  016E                     _drv_peak_val:	
  6735  016E                     	ds	2
  6736                           
  6737                           	psect	bssBANK3
  6738  01A0                     __pbssBANK3:	
  6739  01A0                     _eusartRxBuffer:	
  6740  01A0                     	ds	8
  6741  01A8                     _eusartTxBuffer:	
  6742  01A8                     	ds	8
  6743  01B0                     _cmd_struct:	
  6744  01B0                     	ds	21
  6745  01C5                     _readdata:	
  6746  01C5                     	ds	20
  6747                           
  6748                           	psect	dataBANK4
  6749  0220                     __pdataBANK4:	
  6750  0220                     _fsmStateTable:	
  6751  0220                     	ds	32
  6752                           
  6753                           	psect	inittext
  6754  234D                     init_ram:	
  6755  234D  00FE               	movwf	126
  6756  234E                     initloop:	
  6757  234E  0012               	moviw fsr0++
  6758  234F  001E               	movwi fsr1++
  6759  2350  3001               	movlw	1
  6760  2351  02FE               	subwf	126,f
  6761  2352  3000               	movlw	0
  6762  2353  3BFF               	subwfb	127,f
  6763  2354  087F               	movf	127,w
  6764  2355  047E               	iorwf	126,w
  6765  2356  1903               	btfsc	3,2
  6766  2357  3400               	retlw	0
  6767  2358  2B4E               	goto	initloop
  6768                           
  6769                           	psect	clrtext
  6770  2341                     clear_ram0:	
  6771                           ;	Called with FSR0 containing the base address, and
  6772                           ;	btemp/btemp+1 has the size to clear
  6773                           
  6774  2341  0064               	clrwdt	;clear the watchdog before getting into this loop
  6775  2342                     clrloop0:	
  6776  2342  0180               	clrf	0	;clear RAM location pointed to by FSR
  6777  2343  3101               	addfsr 0,1
  6778  2344  3001               	movlw	1
  6779  2345  02FE               	subwf	126,f
  6780  2346  3000               	movlw	0
  6781  2347  3BFF               	subwfb	127,f
  6782  2348  087F               	movf	127,w
  6783  2349  047E               	iorwf	126,w
  6784  234A  1903               	btfsc	3,2
  6785  234B  3400               	retlw	0	;all done for this memory range, return
  6786  234C  2B42               	goto	clrloop0	;have we reached the end yet?
  6787                           
  6788                           	psect	cstackBANK4
  6789  0240                     __pcstackBANK4:	
  6790  0240                     ??_doAbsMove:	
  6791                           
  6792                           ; 1 bytes @ 0x0
  6793  0240                     	ds	28
  6794                           
  6795                           	psect	cstackBANK1
  6796  00A0                     __pcstackBANK1:	
  6797  00A0                     ??_LED_setBrightnessRange:	
  6798  00A0                     ?_printf:	
  6799                           ; 1 bytes @ 0x0
  6800                           
  6801  00A0                     ___ftmul@exp:	
  6802                           ; 2 bytes @ 0x0
  6803                           
  6804  00A0                     printf@f:	
  6805                           ; 1 bytes @ 0x0
  6806                           
  6807  00A0                     LEDsPwr@pwrAll:	
  6808                           ; 2 bytes @ 0x0
  6809                           
  6810                           
  6811                           ; 4 bytes @ 0x0
  6812  00A0                     	ds	1
  6813  00A1                     ___ftmul@f3_as_product:	
  6814                           
  6815                           ; 3 bytes @ 0x1
  6816  00A1                     	ds	3
  6817  00A4                     ___ftmul@cntr:	
  6818                           
  6819                           ; 1 bytes @ 0x4
  6820  00A4                     	ds	1
  6821  00A5                     ___ftmul@sign:	
  6822                           
  6823                           ; 1 bytes @ 0x5
  6824  00A5                     	ds	1
  6825  00A6                     ??_printf:	
  6826  00A6                     ?___ftadd:	
  6827                           ; 1 bytes @ 0x6
  6828                           
  6829  00A6                     ___ftadd@f1:	
  6830                           ; 3 bytes @ 0x6
  6831                           
  6832                           
  6833                           ; 3 bytes @ 0x6
  6834  00A6                     	ds	3
  6835  00A9                     ___ftadd@f2:	
  6836                           
  6837                           ; 3 bytes @ 0x9
  6838  00A9                     	ds	3
  6839  00AC                     ___ftadd@sign:	
  6840  00AC                     printf@prec:	
  6841                           ; 1 bytes @ 0xC
  6842                           
  6843                           
  6844                           ; 2 bytes @ 0xC
  6845  00AC                     	ds	1
  6846  00AD                     ___ftadd@exp2:	
  6847                           
  6848                           ; 1 bytes @ 0xD
  6849  00AD                     	ds	1
  6850  00AE                     ___ftadd@exp1:	
  6851  00AE                     printf@val:	
  6852                           ; 1 bytes @ 0xE
  6853                           
  6854                           
  6855                           ; 4 bytes @ 0xE
  6856  00AE                     	ds	1
  6857  00AF                     ?___fttol:	
  6858  00AF                     ___fttol@f1:	
  6859                           ; 4 bytes @ 0xF
  6860                           
  6861                           
  6862                           ; 3 bytes @ 0xF
  6863  00AF                     	ds	3
  6864  00B2                     printf@flag:	
  6865                           
  6866                           ; 1 bytes @ 0x12
  6867  00B2                     	ds	1
  6868  00B3                     ??___fttol:	
  6869  00B3                     printf@ap:	
  6870                           ; 1 bytes @ 0x13
  6871                           
  6872                           
  6873                           ; 1 bytes @ 0x13
  6874  00B3                     	ds	1
  6875  00B4                     printf@c:	
  6876                           
  6877                           ; 1 bytes @ 0x14
  6878  00B4                     	ds	1
  6879  00B5                     ??_drv_reset:	
  6880  00B5                     ?_LED_test_openshort:	
  6881                           ; 1 bytes @ 0x15
  6882                           
  6883  00B5                     ?_drv_read:	
  6884                           ; 1 bytes @ 0x15
  6885                           
  6886  00B5                     ?_startRelMove:	
  6887                           ; 2 bytes @ 0x15
  6888                           
  6889  00B5                     ?_startAbsMove:	
  6890                           ; 2 bytes @ 0x15
  6891                           
  6892  00B5                     ?_zeroPosition:	
  6893                           ; 2 bytes @ 0x15
  6894                           
  6895  00B5                     ?_getPosition:	
  6896                           ; 2 bytes @ 0x15
  6897                           
  6898  00B5                     ?_setDrvPeak:	
  6899                           ; 2 bytes @ 0x15
  6900                           
  6901  00B5                     ?_setDrvGain:	
  6902                           ; 2 bytes @ 0x15
  6903                           
  6904  00B5                     ?_setLEDBrightnessRange:	
  6905                           ; 2 bytes @ 0x15
  6906                           
  6907  00B5                     ?_setLEDPwr:	
  6908                           ; 2 bytes @ 0x15
  6909                           
  6910  00B5                     ?_setHeaterToggle:	
  6911                           ; 2 bytes @ 0x15
  6912                           
  6913  00B5                     ?_timedActiveHeatOn:	
  6914                           ; 2 bytes @ 0x15
  6915                           
  6916  00B5                     ?_setActive:	
  6917                           ; 2 bytes @ 0x15
  6918                           
  6919  00B5                     ?_setMoveMask:	
  6920                           ; 2 bytes @ 0x15
  6921                           
  6922  00B5                     ?_getActive:	
  6923                           ; 2 bytes @ 0x15
  6924                           
  6925  00B5                     ?_getMoveMask:	
  6926                           ; 2 bytes @ 0x15
  6927                           
  6928  00B5                     ?_getMotionStatus:	
  6929                           ; 2 bytes @ 0x15
  6930                           
  6931  00B5                     ?_LED_getData:	
  6932                           ; 2 bytes @ 0x15
  6933                           
  6934  00B5                     LED_test_openshort@type:	
  6935                           ; 4 bytes @ 0x15
  6936                           
  6937  00B5                     LED_getData@topOrBottom:	
  6938                           ; 2 bytes @ 0x15
  6939                           
  6940  00B5                     startRelMove@steps:	
  6941                           ; 2 bytes @ 0x15
  6942                           
  6943  00B5                     startAbsMove@steps:	
  6944                           ; 2 bytes @ 0x15
  6945                           
  6946  00B5                     getPosition@a:	
  6947                           ; 2 bytes @ 0x15
  6948                           
  6949  00B5                     setDrvPeak@pk:	
  6950                           ; 2 bytes @ 0x15
  6951                           
  6952  00B5                     setDrvGain@gain:	
  6953                           ; 2 bytes @ 0x15
  6954                           
  6955  00B5                     setLEDBrightnessRange@r:	
  6956                           ; 2 bytes @ 0x15
  6957                           
  6958  00B5                     setLEDPwr@pwr:	
  6959                           ; 2 bytes @ 0x15
  6960                           
  6961  00B5                     setHeaterToggle@num:	
  6962                           ; 2 bytes @ 0x15
  6963                           
  6964  00B5                     setActive@probeNum:	
  6965                           ; 2 bytes @ 0x15
  6966                           
  6967  00B5                     setMoveMask@probeNum:	
  6968                           ; 2 bytes @ 0x15
  6969                           
  6970  00B5                     timedActiveHeatOn@onTime:	
  6971                           ; 2 bytes @ 0x15
  6972                           
  6973                           
  6974                           ; 4 bytes @ 0x15
  6975  00B5                     	ds	1
  6976  00B6                     ?_drv_init:	
  6977  00B6                     drv_init@output_gain:	
  6978                           ; 1 bytes @ 0x16
  6979                           
  6980                           
  6981                           ; 2 bytes @ 0x16
  6982  00B6                     	ds	1
  6983  00B7                     ??_zeroPosition:	
  6984  00B7                     ??_setDrvGain:	
  6985                           ; 1 bytes @ 0x17
  6986                           
  6987  00B7                     fifo_check@reply:	
  6988                           ; 1 bytes @ 0x17
  6989                           
  6990  00B7                     ___fttol@sign1:	
  6991                           ; 1 bytes @ 0x17
  6992                           
  6993  00B7                     LED_test_openshort@topOrBottom:	
  6994                           ; 1 bytes @ 0x17
  6995                           
  6996  00B7                     setLEDBrightnessRange@tOB:	
  6997                           ; 2 bytes @ 0x17
  6998                           
  6999  00B7                     setLEDPwr@topOrBottom:	
  7000                           ; 2 bytes @ 0x17
  7001                           
  7002  00B7                     setHeaterToggle@topOrB:	
  7003                           ; 2 bytes @ 0x17
  7004                           
  7005  00B7                     setActive@onOff:	
  7006                           ; 2 bytes @ 0x17
  7007                           
  7008  00B7                     setMoveMask@onOff:	
  7009                           ; 2 bytes @ 0x17
  7010                           
  7011  00B7                     getActive@i:	
  7012                           ; 2 bytes @ 0x17
  7013                           
  7014  00B7                     getMoveMask@i:	
  7015                           ; 2 bytes @ 0x17
  7016                           
  7017                           
  7018                           ; 2 bytes @ 0x17
  7019  00B7                     	ds	1
  7020  00B8                     ?_drv_write_DC:	
  7021  00B8                     setDrvGain@setGain:	
  7022                           ; 1 bytes @ 0x18
  7023                           
  7024  00B8                     drv_init@idle_timeout:	
  7025                           ; 2 bytes @ 0x18
  7026                           
  7027  00B8                     drv_write_DC@val:	
  7028                           ; 2 bytes @ 0x18
  7029                           
  7030  00B8                     ___fttol@lval:	
  7031                           ; 2 bytes @ 0x18
  7032                           
  7033                           
  7034                           ; 4 bytes @ 0x18
  7035  00B8                     	ds	1
  7036  00B9                     ??_LED_getData:	
  7037  00B9                     ??_LED_test_openshort:	
  7038                           ; 1 bytes @ 0x19
  7039                           
  7040  00B9                     ??_setHeaterToggle:	
  7041                           ; 1 bytes @ 0x19
  7042                           
  7043  00B9                     ??_setActive:	
  7044                           ; 1 bytes @ 0x19
  7045                           
  7046  00B9                     timedActiveHeatOn@topOrB:	
  7047                           ; 1 bytes @ 0x19
  7048                           
  7049                           
  7050                           ; 2 bytes @ 0x19
  7051  00B9                     	ds	1
  7052  00BA                     ??_drv_init:	
  7053  00BA                     LED_test_openshort@j:	
  7054                           ; 1 bytes @ 0x1A
  7055                           
  7056  00BA                     drv_write_DC@duration_ms:	
  7057                           ; 2 bytes @ 0x1A
  7058                           
  7059                           
  7060                           ; 2 bytes @ 0x1A
  7061  00BA                     	ds	1
  7062  00BB                     ??_timedActiveHeatOn:	
  7063                           
  7064                           ; 1 bytes @ 0x1B
  7065  00BB                     	ds	1
  7066  00BC                     ??_drv_write_DC:	
  7067  00BC                     ___fttol@exp1:	
  7068                           ; 1 bytes @ 0x1C
  7069                           
  7070                           
  7071                           ; 1 bytes @ 0x1C
  7072  00BC                     	ds	1
  7073  00BD                     ??_main_initialize:	
  7074  00BD                     ?_setDrvPiezoOnTime:	
  7075                           ; 1 bytes @ 0x1D
  7076                           
  7077  00BD                     ?_setHeaterPreTime:	
  7078                           ; 2 bytes @ 0x1D
  7079                           
  7080  00BD                     ?_setHeaterPostTime:	
  7081                           ; 2 bytes @ 0x1D
  7082                           
  7083  00BD                     setDrvPiezoOnTime@t:	
  7084                           ; 2 bytes @ 0x1D
  7085                           
  7086  00BD                     setHeaterPreTime@t:	
  7087                           ; 2 bytes @ 0x1D
  7088                           
  7089  00BD                     setHeaterPostTime@t:	
  7090                           ; 2 bytes @ 0x1D
  7091                           
  7092  00BD                     drv_write_DC@i:	
  7093                           ; 2 bytes @ 0x1D
  7094                           
  7095                           
  7096                           ; 2 bytes @ 0x1D
  7097  00BD                     	ds	2
  7098  00BF                     ??_setDrvPiezoOnTime:	
  7099  00BF                     ??_setHeaterPreTime:	
  7100                           ; 1 bytes @ 0x1F
  7101                           
  7102  00BF                     ?_doMove:	
  7103                           ; 1 bytes @ 0x1F
  7104                           
  7105                           
  7106                           ; 2 bytes @ 0x1F
  7107  00BF                     	ds	1
  7108  00C0                     timedActiveHeatOn@t:	
  7109  00C0                     LED_getData@readData:	
  7110                           ; 2 bytes @ 0x20
  7111                           
  7112                           
  7113                           ; 4 bytes @ 0x20
  7114  00C0                     	ds	1
  7115  00C1                     ??_doMove:	
  7116                           
  7117                           ; 1 bytes @ 0x21
  7118  00C1                     	ds	1
  7119  00C2                     doMove@t:	
  7120                           
  7121                           ; 2 bytes @ 0x22
  7122  00C2                     	ds	2
  7123  00C4                     LED_getData@j:	
  7124  00C4                     doMove@t_1565:	
  7125                           ; 2 bytes @ 0x24
  7126                           
  7127                           
  7128                           ; 2 bytes @ 0x24
  7129  00C4                     	ds	2
  7130  00C6                     ??_doRelMove:	
  7131  00C6                     ?_LED_readConfig:	
  7132                           ; 1 bytes @ 0x26
  7133                           
  7134  00C6                     LED_readConfig@topOrBottom:	
  7135                           ; 4 bytes @ 0x26
  7136                           
  7137  00C6                     doAbsMove@allThere:	
  7138                           ; 2 bytes @ 0x26
  7139                           
  7140                           
  7141                           ; 2 bytes @ 0x26
  7142  00C6                     	ds	2
  7143  00C8                     doAbsMove@i:	
  7144                           
  7145                           ; 2 bytes @ 0x28
  7146  00C8                     	ds	2
  7147  00CA                     ?_LED_testComm:	
  7148  00CA                     LED_testComm@topOrBottom:	
  7149                           ; 2 bytes @ 0x2A
  7150                           
  7151  00CA                     doAbsMove@i_1582:	
  7152                           ; 2 bytes @ 0x2A
  7153                           
  7154                           
  7155                           ; 2 bytes @ 0x2A
  7156  00CA                     	ds	2
  7157  00CC                     LED_testComm@readResult:	
  7158  00CC                     doAbsMove@i_1580:	
  7159                           ; 2 bytes @ 0x2C
  7160                           
  7161                           
  7162                           ; 2 bytes @ 0x2C
  7163  00CC                     	ds	2
  7164  00CE                     LED_testComm@oldConfigReg:	
  7165                           
  7166                           ; 4 bytes @ 0x2E
  7167  00CE                     	ds	4
  7168  00D2                     ?_commCheck:	
  7169                           
  7170                           ; 2 bytes @ 0x32
  7171  00D2                     	ds	2
  7172  00D4                     ??_commCheck:	
  7173                           
  7174                           ; 1 bytes @ 0x34
  7175  00D4                     	ds	1
  7176  00D5                     execCmd@s:	
  7177                           
  7178                           ; 1 bytes @ 0x35
  7179  00D5                     	ds	1
  7180  00D6                     doRelMove@j:	
  7181                           
  7182                           ; 2 bytes @ 0x36
  7183  00D6                     	ds	2
  7184  00D8                     ??_main:	
  7185                           
  7186                           ; 1 bytes @ 0x38
  7187  00D8                     	ds	1
  7188                           
  7189                           	psect	cstackCOMMON
  7190  0070                     __pcstackCOMMON:	
  7191  0070                     ?_fifo_check:	
  7192  0070                     ?_isdigit:	
  7193                           ; 1 bit 
  7194                           
  7195  0070                     ?_mssp1_IRQisEnabled:	
  7196                           ; 1 bit 
  7197                           
  7198  0070                     ?_i2c1_driver_open:	
  7199                           ; 1 bit 
  7200                           
  7201  0070                     ?_i2c1_driver_isNACK:	
  7202                           ; 1 bit 
  7203                           
  7204  0070                     ?i1_i2c1_driver_isNACK:	
  7205                           ; 1 bit 
  7206                           
  7207  0070                     ?_PMD_Initialize:	
  7208                           ; 1 bit 
  7209                           
  7210  0070                     ?_PIN_MANAGER_Initialize:	
  7211                           ; 1 bytes @ 0x0
  7212                           
  7213  0070                     ?_OSCILLATOR_Initialize:	
  7214                           ; 1 bytes @ 0x0
  7215                           
  7216  0070                     ?_WDT_Initialize:	
  7217                           ; 1 bytes @ 0x0
  7218                           
  7219  0070                     ?_TMR2_Initialize:	
  7220                           ; 1 bytes @ 0x0
  7221                           
  7222  0070                     ?_TMR0_Initialize:	
  7223                           ; 1 bytes @ 0x0
  7224                           
  7225  0070                     ?_EUSART_Initialize:	
  7226                           ; 1 bytes @ 0x0
  7227                           
  7228  0070                     ?_TMR0_ISR:	
  7229                           ; 1 bytes @ 0x0
  7230                           
  7231  0070                     ?_TMR2_ISR:	
  7232                           ; 1 bytes @ 0x0
  7233                           
  7234  0070                     ?_EUSART_Receive_ISR:	
  7235                           ; 1 bytes @ 0x0
  7236                           
  7237  0070                     ??_EUSART_Receive_ISR:	
  7238                           ; 1 bytes @ 0x0
  7239                           
  7240  0070                     ?_EUSART_Transmit_ISR:	
  7241                           ; 1 bytes @ 0x0
  7242                           
  7243  0070                     ??_EUSART_Transmit_ISR:	
  7244                           ; 1 bytes @ 0x0
  7245                           
  7246  0070                     ?_i2c_busCollisionISR:	
  7247                           ; 1 bytes @ 0x0
  7248                           
  7249  0070                     ??_i2c_busCollisionISR:	
  7250                           ; 1 bytes @ 0x0
  7251                           
  7252  0070                     ?_i2c_ISR:	
  7253                           ; 1 bytes @ 0x0
  7254                           
  7255  0070                     ?_i2c_poller:	
  7256                           ; 1 bytes @ 0x0
  7257                           
  7258  0070                     ?_TMR0_DefaultInterruptHandler:	
  7259                           ; 1 bytes @ 0x0
  7260                           
  7261  0070                     ?_TMR2_DefaultInterruptHandler:	
  7262                           ; 1 bytes @ 0x0
  7263                           
  7264  0070                     ?_main_initialize:	
  7265                           ; 1 bytes @ 0x0
  7266                           
  7267  0070                     ?_doRelMove:	
  7268                           ; 1 bytes @ 0x0
  7269                           
  7270  0070                     ?_doAbsMove:	
  7271                           ; 1 bytes @ 0x0
  7272                           
  7273  0070                     ?_calcHeaterPins:	
  7274                           ; 1 bytes @ 0x0
  7275                           
  7276  0070                     ?_drv_reset:	
  7277                           ; 1 bytes @ 0x0
  7278                           
  7279  0070                     ?_toupper:	
  7280                           ; 1 bytes @ 0x0
  7281                           
  7282  0070                     ?_SYSTEM_Initialize:	
  7283                           ; 1 bytes @ 0x0
  7284                           
  7285  0070                     ?_INTERRUPT_InterruptManager:	
  7286                           ; 1 bytes @ 0x0
  7287                           
  7288  0070                     ?_EUSART_Read:	
  7289                           ; 1 bytes @ 0x0
  7290                           
  7291  0070                     ?_EUSART_Write:	
  7292                           ; 1 bytes @ 0x0
  7293                           
  7294  0070                     ?_putch:	
  7295                           ; 1 bytes @ 0x0
  7296                           
  7297  0070                     ?_mssp1_clearIRQ:	
  7298                           ; 1 bytes @ 0x0
  7299                           
  7300  0070                     ?_mssp1_setIRQ:	
  7301                           ; 1 bytes @ 0x0
  7302                           
  7303  0070                     ?_mssp1_waitForEvent:	
  7304                           ; 1 bytes @ 0x0
  7305                           
  7306  0070                     ?_i2c1_driver_resetBus:	
  7307                           ; 1 bytes @ 0x0
  7308                           
  7309  0070                     ?_i2c1_driver_start:	
  7310                           ; 1 bytes @ 0x0
  7311                           
  7312  0070                     ?_i2c1_driver_restart:	
  7313                           ; 1 bytes @ 0x0
  7314                           
  7315  0070                     ?_i2c1_driver_stop:	
  7316                           ; 1 bytes @ 0x0
  7317                           
  7318  0070                     ?_i2c1_driver_startRX:	
  7319                           ; 1 bytes @ 0x0
  7320                           
  7321  0070                     ?_i2c1_driver_getRXData:	
  7322                           ; 1 bytes @ 0x0
  7323                           
  7324  0070                     ?_i2c1_driver_TXData:	
  7325                           ; 1 bytes @ 0x0
  7326                           
  7327  0070                     ?_i2c1_driver_sendACK:	
  7328                           ; 1 bytes @ 0x0
  7329                           
  7330  0070                     ?_i2c1_driver_sendNACK:	
  7331                           ; 1 bytes @ 0x0
  7332                           
  7333  0070                     ?_i2c1_driver_clearBusCollision:	
  7334                           ; 1 bytes @ 0x0
  7335                           
  7336  0070                     ??_i2c1_driver_clearBusCollision:	
  7337                           ; 1 bytes @ 0x0
  7338                           
  7339  0070                     ?_i2c_open:	
  7340                           ; 1 bytes @ 0x0
  7341                           
  7342  0070                     ?_i2c_setAddress:	
  7343                           ; 1 bytes @ 0x0
  7344                           
  7345  0070                     ?_i2c_masterOperation:	
  7346                           ; 1 bytes @ 0x0
  7347                           
  7348  0070                     ?_do_I2C_RESET:	
  7349                           ; 1 bytes @ 0x0
  7350                           
  7351  0070                     ?_do_I2C_IDLE:	
  7352                           ; 1 bytes @ 0x0
  7353                           
  7354  0070                     ?_do_I2C_SEND_RESTART_READ:	
  7355                           ; 1 bytes @ 0x0
  7356                           
  7357  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  7358                           ; 1 bytes @ 0x0
  7359                           
  7360  0070                     ?_do_I2C_SEND_RESTART:	
  7361                           ; 1 bytes @ 0x0
  7362                           
  7363  0070                     ?_do_I2C_SEND_STOP:	
  7364                           ; 1 bytes @ 0x0
  7365                           
  7366  0070                     ?_do_I2C_SEND_ADR_READ:	
  7367                           ; 1 bytes @ 0x0
  7368                           
  7369  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  7370                           ; 1 bytes @ 0x0
  7371                           
  7372  0070                     ?_do_I2C_RCEN:	
  7373                           ; 1 bytes @ 0x0
  7374                           
  7375  0070                     ?_do_I2C_DO_ACK:	
  7376                           ; 1 bytes @ 0x0
  7377                           
  7378  0070                     ?_do_I2C_DO_NACK_STOP:	
  7379                           ; 1 bytes @ 0x0
  7380                           
  7381  0070                     ?_do_I2C_DO_NACK_RESTART:	
  7382                           ; 1 bytes @ 0x0
  7383                           
  7384  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  7385                           ; 1 bytes @ 0x0
  7386                           
  7387  0070                     ?_do_I2C_TX:	
  7388                           ; 1 bytes @ 0x0
  7389                           
  7390  0070                     ?_do_I2C_RX:	
  7391                           ; 1 bytes @ 0x0
  7392                           
  7393  0070                     ?_do_I2C_TX_EMPTY:	
  7394                           ; 1 bytes @ 0x0
  7395                           
  7396  0070                     ?_TMR0_StartTimer:	
  7397                           ; 1 bytes @ 0x0
  7398                           
  7399  0070                     ?_TMR0_StopTimer:	
  7400                           ; 1 bytes @ 0x0
  7401                           
  7402  0070                     ??_TMR0_StopTimer:	
  7403                           ; 1 bytes @ 0x0
  7404                           
  7405  0070                     ?_TMR0_Write8bitTimer:	
  7406                           ; 1 bytes @ 0x0
  7407                           
  7408  0070                     ??_TMR0_Write8bitTimer:	
  7409                           ; 1 bytes @ 0x0
  7410                           
  7411  0070                     ?_TMR0_Load8bitPeriod:	
  7412                           ; 1 bytes @ 0x0
  7413                           
  7414  0070                     ?_TMR2_StartTimer:	
  7415                           ; 1 bytes @ 0x0
  7416                           
  7417  0070                     ?_TMR2_StopTimer:	
  7418                           ; 1 bytes @ 0x0
  7419                           
  7420  0070                     ??_TMR2_StopTimer:	
  7421                           ; 1 bytes @ 0x0
  7422                           
  7423  0070                     ?_TMR2_WriteTimer:	
  7424                           ; 1 bytes @ 0x0
  7425                           
  7426  0070                     ??_TMR2_WriteTimer:	
  7427                           ; 1 bytes @ 0x0
  7428                           
  7429  0070                     ?_TMR2_LoadPeriodRegister:	
  7430                           ; 1 bytes @ 0x0
  7431                           
  7432  0070                     ?_main:	
  7433                           ; 1 bytes @ 0x0
  7434                           
  7435  0070                     ?i1_send_last_2bytes_IK:	
  7436                           ; 1 bytes @ 0x0
  7437                           
  7438  0070                     ?i1_send_2bytes_latchless_IK:	
  7439                           ; 1 bytes @ 0x0
  7440                           
  7441  0070                     ?i1_mssp1_clearIRQ:	
  7442                           ; 1 bytes @ 0x0
  7443                           
  7444  0070                     ??i1_mssp1_clearIRQ:	
  7445                           ; 1 bytes @ 0x0
  7446                           
  7447  0070                     ?i1_mssp1_setIRQ:	
  7448                           ; 1 bytes @ 0x0
  7449                           
  7450  0070                     ??i1_mssp1_setIRQ:	
  7451                           ; 1 bytes @ 0x0
  7452                           
  7453  0070                     ?i1_i2c1_driver_resetBus:	
  7454                           ; 1 bytes @ 0x0
  7455                           
  7456  0070                     ??i1_i2c1_driver_resetBus:	
  7457                           ; 1 bytes @ 0x0
  7458                           
  7459  0070                     ?i1_i2c1_driver_restart:	
  7460                           ; 1 bytes @ 0x0
  7461                           
  7462  0070                     ??i1_i2c1_driver_restart:	
  7463                           ; 1 bytes @ 0x0
  7464                           
  7465  0070                     ?i1_i2c1_driver_stop:	
  7466                           ; 1 bytes @ 0x0
  7467                           
  7468  0070                     ??i1_i2c1_driver_stop:	
  7469                           ; 1 bytes @ 0x0
  7470                           
  7471  0070                     ??i1_i2c1_driver_isNACK:	
  7472                           ; 1 bytes @ 0x0
  7473                           
  7474  0070                     ?i1_i2c1_driver_startRX:	
  7475                           ; 1 bytes @ 0x0
  7476                           
  7477  0070                     ??i1_i2c1_driver_startRX:	
  7478                           ; 1 bytes @ 0x0
  7479                           
  7480  0070                     ?i1_i2c1_driver_getRXData:	
  7481                           ; 1 bytes @ 0x0
  7482                           
  7483  0070                     ??i1_i2c1_driver_getRXData:	
  7484                           ; 1 bytes @ 0x0
  7485                           
  7486  0070                     ?i1_i2c1_driver_TXData:	
  7487                           ; 1 bytes @ 0x0
  7488                           
  7489  0070                     ??i1_i2c1_driver_TXData:	
  7490                           ; 1 bytes @ 0x0
  7491                           
  7492  0070                     ?i1_i2c1_driver_sendACK:	
  7493                           ; 1 bytes @ 0x0
  7494                           
  7495  0070                     ??i1_i2c1_driver_sendACK:	
  7496                           ; 1 bytes @ 0x0
  7497                           
  7498  0070                     ?i1_i2c1_driver_sendNACK:	
  7499                           ; 1 bytes @ 0x0
  7500                           
  7501  0070                     ??i1_i2c1_driver_sendNACK:	
  7502                           ; 1 bytes @ 0x0
  7503                           
  7504  0070                     ?i1_do_I2C_RESET:	
  7505                           ; 1 bytes @ 0x0
  7506                           
  7507  0070                     ??i1_do_I2C_RESET:	
  7508                           ; 1 bytes @ 0x0
  7509                           
  7510  0070                     ?i1_do_I2C_IDLE:	
  7511                           ; 1 bytes @ 0x0
  7512                           
  7513  0070                     ??i1_do_I2C_IDLE:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516  0070                     ?i1_do_I2C_SEND_RESTART_READ:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519  0070                     ??i1_do_I2C_SEND_RESTART_READ:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522  0070                     ?i1_do_I2C_SEND_RESTART_WRITE:	
  7523                           ; 1 bytes @ 0x0
  7524                           
  7525  0070                     ??i1_do_I2C_SEND_RESTART_WRITE:	
  7526                           ; 1 bytes @ 0x0
  7527                           
  7528  0070                     ?i1_do_I2C_SEND_RESTART:	
  7529                           ; 1 bytes @ 0x0
  7530                           
  7531  0070                     ??i1_do_I2C_SEND_RESTART:	
  7532                           ; 1 bytes @ 0x0
  7533                           
  7534  0070                     ?i1_do_I2C_SEND_STOP:	
  7535                           ; 1 bytes @ 0x0
  7536                           
  7537  0070                     ??i1_do_I2C_SEND_STOP:	
  7538                           ; 1 bytes @ 0x0
  7539                           
  7540  0070                     ?i1_do_I2C_SEND_ADR_READ:	
  7541                           ; 1 bytes @ 0x0
  7542                           
  7543  0070                     ?i1_do_I2C_SEND_ADR_WRITE:	
  7544                           ; 1 bytes @ 0x0
  7545                           
  7546  0070                     ?i1_do_I2C_RCEN:	
  7547                           ; 1 bytes @ 0x0
  7548                           
  7549  0070                     ??i1_do_I2C_RCEN:	
  7550                           ; 1 bytes @ 0x0
  7551                           
  7552  0070                     ?i1_do_I2C_DO_ACK:	
  7553                           ; 1 bytes @ 0x0
  7554                           
  7555  0070                     ??i1_do_I2C_DO_ACK:	
  7556                           ; 1 bytes @ 0x0
  7557                           
  7558  0070                     ?i1_do_I2C_DO_NACK_STOP:	
  7559                           ; 1 bytes @ 0x0
  7560                           
  7561  0070                     ??i1_do_I2C_DO_NACK_STOP:	
  7562                           ; 1 bytes @ 0x0
  7563                           
  7564  0070                     ?i1_do_I2C_DO_NACK_RESTART:	
  7565                           ; 1 bytes @ 0x0
  7566                           
  7567  0070                     ??i1_do_I2C_DO_NACK_RESTART:	
  7568                           ; 1 bytes @ 0x0
  7569                           
  7570  0070                     ?i1_do_I2C_DO_ADDRESS_NACK:	
  7571                           ; 1 bytes @ 0x0
  7572                           
  7573  0070                     ??i1_do_I2C_DO_ADDRESS_NACK:	
  7574                           ; 1 bytes @ 0x0
  7575                           
  7576  0070                     ?i1_do_I2C_TX:	
  7577                           ; 1 bytes @ 0x0
  7578                           
  7579  0070                     ?i1_do_I2C_RX:	
  7580                           ; 1 bytes @ 0x0
  7581                           
  7582  0070                     ??i1_do_I2C_RX:	
  7583                           ; 1 bytes @ 0x0
  7584                           
  7585  0070                     ?i1_do_I2C_TX_EMPTY:	
  7586                           ; 1 bytes @ 0x0
  7587                           
  7588  0070                     ??i1_do_I2C_TX_EMPTY:	
  7589                           ; 1 bytes @ 0x0
  7590                           
  7591  0070                     ?i1_i2c_ISR:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594  0070                     ?i1_returnStop:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597  0070                     ?i1_returnReset:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600  0070                     ?_execCmd:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603  0070                     TMR0_Write8bitTimer@timerVal:	
  7604                           ; 2 bytes @ 0x0
  7605                           
  7606  0070                     TMR2_WriteTimer@timerVal:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609  0070                     i1i2c1_driver_TXData@d:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612  0070                     i1returnStop@p:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615  0070                     i1returnReset@p:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618  0070                     i1send_last_2bytes_IK@data:	
  7619                           ; 1 bytes @ 0x0
  7620                           
  7621  0070                     i1send_2bytes_latchless_IK@data:	
  7622                           ; 2 bytes @ 0x0
  7623                           
  7624                           
  7625                           ; 2 bytes @ 0x0
  7626  0070                     	ds	1
  7627  0071                     ??_TMR2_ISR:	
  7628  0071                     ??_TMR2_DefaultInterruptHandler:	
  7629                           ; 1 bytes @ 0x1
  7630                           
  7631  0071                     ??i1_do_I2C_SEND_ADR_READ:	
  7632                           ; 1 bytes @ 0x1
  7633                           
  7634  0071                     ??i1_do_I2C_SEND_ADR_WRITE:	
  7635                           ; 1 bytes @ 0x1
  7636                           
  7637  0071                     ??i1_do_I2C_TX:	
  7638                           ; 1 bytes @ 0x1
  7639                           
  7640  0071                     ??i1_returnStop:	
  7641                           ; 1 bytes @ 0x1
  7642                           
  7643  0071                     ??i1_returnReset:	
  7644                           ; 1 bytes @ 0x1
  7645                           
  7646                           
  7647                           ; 1 bytes @ 0x1
  7648  0071                     	ds	1
  7649  0072                     ??i1_send_2bytes_latchless_IK:	
  7650  0072                     i1send_last_2bytes_IK@latch_start:	
  7651                           ; 1 bytes @ 0x2
  7652                           
  7653                           
  7654                           ; 1 bytes @ 0x2
  7655  0072                     	ds	1
  7656  0073                     i1send_last_2bytes_IK@topOrBottom:	
  7657  0073                     i1_do_I2C_TX$1134:	
  7658                           ; 2 bytes @ 0x3
  7659                           
  7660                           
  7661                           ; 2 bytes @ 0x3
  7662  0073                     	ds	2
  7663  0075                     ??i1_send_last_2bytes_IK:	
  7664  0075                     ??i1_i2c_ISR:	
  7665                           ; 1 bytes @ 0x5
  7666                           
  7667                           
  7668                           ; 1 bytes @ 0x5
  7669  0075                     	ds	1
  7670  0076                     i1send_2bytes_latchless_IK@j:	
  7671                           
  7672                           ; 2 bytes @ 0x6
  7673  0076                     	ds	3
  7674  0079                     i1send_last_2bytes_IK@j:	
  7675                           
  7676                           ; 2 bytes @ 0x9
  7677  0079                     	ds	2
  7678  007B                     ??i1_send_2length_2bytes_IK:	
  7679                           
  7680                           ; 1 bytes @ 0xB
  7681  007B                     	ds	1
  7682  007C                     ??_TMR0_ISR:	
  7683  007C                     ??_TMR0_DefaultInterruptHandler:	
  7684                           ; 1 bytes @ 0xC
  7685                           
  7686  007C                     ??_INTERRUPT_InterruptManager:	
  7687                           ; 1 bytes @ 0xC
  7688                           
  7689                           
  7690                           ; 1 bytes @ 0xC
  7691  007C                     	ds	1
  7692                           
  7693                           	psect	cstackBANK0
  7694  0020                     __pcstackBANK0:	
  7695  0020                     ?i1_send_2length_2bytes_IK:	
  7696  0020                     i1send_2length_2bytes_IK@data1:	
  7697                           ; 1 bytes @ 0x0
  7698                           
  7699                           
  7700                           ; 2 bytes @ 0x0
  7701  0020                     	ds	2
  7702  0022                     i1send_2length_2bytes_IK@data2:	
  7703                           
  7704                           ; 2 bytes @ 0x2
  7705  0022                     	ds	2
  7706  0024                     i1send_2length_2bytes_IK@latch_start:	
  7707                           
  7708                           ; 1 bytes @ 0x4
  7709  0024                     	ds	1
  7710  0025                     i1send_2length_2bytes_IK@topOrBottom:	
  7711                           
  7712                           ; 2 bytes @ 0x5
  7713  0025                     	ds	2
  7714  0027                     ?i1_LEDsOn:	
  7715  0027                     i1LEDsOn@LEDpins:	
  7716                           ; 1 bytes @ 0x7
  7717                           
  7718                           
  7719                           ; 4 bytes @ 0x7
  7720  0027                     	ds	4
  7721  002B                     i1LEDsOn@topOrBottom:	
  7722                           
  7723                           ; 2 bytes @ 0xB
  7724  002B                     	ds	2
  7725  002D                     ??i1_LEDsOn:	
  7726                           
  7727                           ; 1 bytes @ 0xD
  7728  002D                     	ds	4
  7729  0031                     ??_PMD_Initialize:	
  7730  0031                     ??_PIN_MANAGER_Initialize:	
  7731                           ; 1 bytes @ 0x11
  7732                           
  7733  0031                     ??_OSCILLATOR_Initialize:	
  7734                           ; 1 bytes @ 0x11
  7735                           
  7736  0031                     ??_WDT_Initialize:	
  7737                           ; 1 bytes @ 0x11
  7738                           
  7739  0031                     ??_EUSART_Initialize:	
  7740                           ; 1 bytes @ 0x11
  7741                           
  7742  0031                     ?_returnStop:	
  7743                           ; 1 bytes @ 0x11
  7744                           
  7745  0031                     ?_returnReset:	
  7746                           ; 1 bytes @ 0x11
  7747                           
  7748  0031                     ?_TMR0_SetInterruptHandler:	
  7749                           ; 1 bytes @ 0x11
  7750                           
  7751  0031                     ?_TMR2_SetInterruptHandler:	
  7752                           ; 1 bytes @ 0x11
  7753                           
  7754  0031                     ??_calcHeaterPins:	
  7755                           ; 1 bytes @ 0x11
  7756                           
  7757  0031                     ??_isdigit:	
  7758                           ; 1 bytes @ 0x11
  7759                           
  7760  0031                     ??_toupper:	
  7761                           ; 1 bytes @ 0x11
  7762                           
  7763  0031                     ?_send_last_2bytes_IK:	
  7764                           ; 1 bytes @ 0x11
  7765                           
  7766  0031                     ?_send_2bytes_latchless_IK:	
  7767                           ; 1 bytes @ 0x11
  7768                           
  7769  0031                     ??_EUSART_Read:	
  7770                           ; 1 bytes @ 0x11
  7771                           
  7772  0031                     ??_EUSART_Write:	
  7773                           ; 1 bytes @ 0x11
  7774                           
  7775  0031                     ??_mssp1_IRQisEnabled:	
  7776                           ; 1 bytes @ 0x11
  7777                           
  7778  0031                     ??_mssp1_clearIRQ:	
  7779                           ; 1 bytes @ 0x11
  7780                           
  7781  0031                     ??_mssp1_setIRQ:	
  7782                           ; 1 bytes @ 0x11
  7783                           
  7784  0031                     ??_mssp1_waitForEvent:	
  7785                           ; 1 bytes @ 0x11
  7786                           
  7787  0031                     ??_i2c1_driver_open:	
  7788                           ; 1 bytes @ 0x11
  7789                           
  7790  0031                     ??_i2c1_driver_resetBus:	
  7791                           ; 1 bytes @ 0x11
  7792                           
  7793  0031                     ??_i2c1_driver_start:	
  7794                           ; 1 bytes @ 0x11
  7795                           
  7796  0031                     ??_i2c1_driver_restart:	
  7797                           ; 1 bytes @ 0x11
  7798                           
  7799  0031                     ??_i2c1_driver_stop:	
  7800                           ; 1 bytes @ 0x11
  7801                           
  7802  0031                     ??_i2c1_driver_isNACK:	
  7803                           ; 1 bytes @ 0x11
  7804                           
  7805  0031                     ??_i2c1_driver_startRX:	
  7806                           ; 1 bytes @ 0x11
  7807                           
  7808  0031                     ??_i2c1_driver_getRXData:	
  7809                           ; 1 bytes @ 0x11
  7810                           
  7811  0031                     ??_i2c1_driver_TXData:	
  7812                           ; 1 bytes @ 0x11
  7813                           
  7814  0031                     ??_i2c1_driver_sendACK:	
  7815                           ; 1 bytes @ 0x11
  7816                           
  7817  0031                     ??_i2c1_driver_sendNACK:	
  7818                           ; 1 bytes @ 0x11
  7819                           
  7820  0031                     ?_i2c1_driver_setBusCollisionISR:	
  7821                           ; 1 bytes @ 0x11
  7822                           
  7823  0031                     ?_i2c1_driver_setI2cISR:	
  7824                           ; 1 bytes @ 0x11
  7825                           
  7826  0031                     ??_i2c_setAddress:	
  7827                           ; 1 bytes @ 0x11
  7828                           
  7829  0031                     ?_i2c_setBuffer:	
  7830                           ; 1 bytes @ 0x11
  7831                           
  7832  0031                     ??_do_I2C_RESET:	
  7833                           ; 1 bytes @ 0x11
  7834                           
  7835  0031                     ??_do_I2C_IDLE:	
  7836                           ; 1 bytes @ 0x11
  7837                           
  7838  0031                     ??_do_I2C_SEND_RESTART_READ:	
  7839                           ; 1 bytes @ 0x11
  7840                           
  7841  0031                     ??_do_I2C_SEND_RESTART_WRITE:	
  7842                           ; 1 bytes @ 0x11
  7843                           
  7844  0031                     ??_do_I2C_SEND_RESTART:	
  7845                           ; 1 bytes @ 0x11
  7846                           
  7847  0031                     ??_do_I2C_SEND_STOP:	
  7848                           ; 1 bytes @ 0x11
  7849                           
  7850  0031                     ??_do_I2C_RCEN:	
  7851                           ; 1 bytes @ 0x11
  7852                           
  7853  0031                     ??_do_I2C_DO_ACK:	
  7854                           ; 1 bytes @ 0x11
  7855                           
  7856  0031                     ??_do_I2C_DO_NACK_STOP:	
  7857                           ; 1 bytes @ 0x11
  7858                           
  7859  0031                     ??_do_I2C_DO_NACK_RESTART:	
  7860                           ; 1 bytes @ 0x11
  7861                           
  7862  0031                     ??_do_I2C_DO_ADDRESS_NACK:	
  7863                           ; 1 bytes @ 0x11
  7864                           
  7865  0031                     ??_do_I2C_RX:	
  7866                           ; 1 bytes @ 0x11
  7867                           
  7868  0031                     ??_do_I2C_TX_EMPTY:	
  7869                           ; 1 bytes @ 0x11
  7870                           
  7871  0031                     ??_TMR0_StartTimer:	
  7872                           ; 1 bytes @ 0x11
  7873                           
  7874  0031                     ??_TMR0_Load8bitPeriod:	
  7875                           ; 1 bytes @ 0x11
  7876                           
  7877  0031                     ??_TMR2_StartTimer:	
  7878                           ; 1 bytes @ 0x11
  7879                           
  7880  0031                     ??_TMR2_LoadPeriodRegister:	
  7881                           ; 1 bytes @ 0x11
  7882                           
  7883  0031                     ?_strchr:	
  7884                           ; 1 bytes @ 0x11
  7885                           
  7886  0031                     ?___wmul:	
  7887                           ; 2 bytes @ 0x11
  7888                           
  7889  0031                     ?___awdiv:	
  7890                           ; 2 bytes @ 0x11
  7891                           
  7892  0031                     ?___ftpack:	
  7893                           ; 2 bytes @ 0x11
  7894                           
  7895  0031                     ?___lldiv:	
  7896                           ; 3 bytes @ 0x11
  7897                           
  7898  0031                     mssp1_waitForEvent@timeout:	
  7899                           ; 4 bytes @ 0x11
  7900                           
  7901  0031                     i2c1_driver_TXData@d:	
  7902                           ; 1 bytes @ 0x11
  7903                           
  7904  0031                     returnStop@p:	
  7905                           ; 1 bytes @ 0x11
  7906                           
  7907  0031                     returnReset@p:	
  7908                           ; 1 bytes @ 0x11
  7909                           
  7910  0031                     TMR0_Load8bitPeriod@periodVal:	
  7911                           ; 1 bytes @ 0x11
  7912                           
  7913  0031                     TMR2_LoadPeriodRegister@periodVal:	
  7914                           ; 1 bytes @ 0x11
  7915                           
  7916  0031                     _isdigit$2153:	
  7917                           ; 1 bytes @ 0x11
  7918                           
  7919  0031                     send_last_2bytes_IK@data:	
  7920                           ; 1 bytes @ 0x11
  7921                           
  7922  0031                     send_2bytes_latchless_IK@data:	
  7923                           ; 2 bytes @ 0x11
  7924                           
  7925  0031                     i2c1_driver_setBusCollisionISR@f:	
  7926                           ; 2 bytes @ 0x11
  7927                           
  7928  0031                     i2c1_driver_setI2cISR@f:	
  7929                           ; 2 bytes @ 0x11
  7930                           
  7931  0031                     i2c_setBuffer@buffer:	
  7932                           ; 2 bytes @ 0x11
  7933                           
  7934  0031                     TMR0_SetInterruptHandler@InterruptHandler:	
  7935                           ; 2 bytes @ 0x11
  7936                           
  7937  0031                     TMR2_SetInterruptHandler@InterruptHandler:	
  7938                           ; 2 bytes @ 0x11
  7939                           
  7940  0031                     ___wmul@multiplier:	
  7941                           ; 2 bytes @ 0x11
  7942                           
  7943  0031                     ___awdiv@divisor:	
  7944                           ; 2 bytes @ 0x11
  7945                           
  7946  0031                     strchr@ptr:	
  7947                           ; 2 bytes @ 0x11
  7948                           
  7949  0031                     ___ftpack@arg:	
  7950                           ; 2 bytes @ 0x11
  7951                           
  7952  0031                     ___lldiv@divisor:	
  7953                           ; 3 bytes @ 0x11
  7954                           
  7955                           
  7956                           ; 4 bytes @ 0x11
  7957  0031                     	ds	1
  7958  0032                     ??_returnStop:	
  7959  0032                     ??_returnReset:	
  7960                           ; 1 bytes @ 0x12
  7961                           
  7962  0032                     ??_do_I2C_SEND_ADR_READ:	
  7963                           ; 1 bytes @ 0x12
  7964                           
  7965  0032                     ??_do_I2C_SEND_ADR_WRITE:	
  7966                           ; 1 bytes @ 0x12
  7967                           
  7968  0032                     ??_do_I2C_TX:	
  7969                           ; 1 bytes @ 0x12
  7970                           
  7971  0032                     EUSART_Read@readValue:	
  7972                           ; 1 bytes @ 0x12
  7973                           
  7974  0032                     EUSART_Write@txData:	
  7975                           ; 1 bytes @ 0x12
  7976                           
  7977  0032                     i2c_setAddress@address:	
  7978                           ; 1 bytes @ 0x12
  7979                           
  7980  0032                     isdigit@c:	
  7981                           ; 1 bytes @ 0x12
  7982                           
  7983  0032                     toupper@c:	
  7984                           ; 1 bytes @ 0x12
  7985                           
  7986                           
  7987                           ; 1 bytes @ 0x12
  7988  0032                     	ds	1
  7989  0033                     ??_TMR2_Initialize:	
  7990  0033                     ??_TMR0_Initialize:	
  7991                           ; 1 bytes @ 0x13
  7992                           
  7993  0033                     ??_TMR0_SetInterruptHandler:	
  7994                           ; 1 bytes @ 0x13
  7995                           
  7996  0033                     ??_TMR2_SetInterruptHandler:	
  7997                           ; 1 bytes @ 0x13
  7998                           
  7999  0033                     ??_SYSTEM_Initialize:	
  8000                           ; 1 bytes @ 0x13
  8001                           
  8002  0033                     ??_send_2bytes_latchless_IK:	
  8003                           ; 1 bytes @ 0x13
  8004                           
  8005  0033                     ??_putch:	
  8006                           ; 1 bytes @ 0x13
  8007                           
  8008  0033                     ??_i2c1_driver_setBusCollisionISR:	
  8009                           ; 1 bytes @ 0x13
  8010                           
  8011  0033                     ??_i2c1_driver_setI2cISR:	
  8012                           ; 1 bytes @ 0x13
  8013                           
  8014  0033                     ??_i2c_open:	
  8015                           ; 1 bytes @ 0x13
  8016                           
  8017  0033                     ?_stricmp:	
  8018                           ; 1 bytes @ 0x13
  8019                           
  8020  0033                     send_last_2bytes_IK@latch_start:	
  8021                           ; 2 bytes @ 0x13
  8022                           
  8023  0033                     putch@txData:	
  8024                           ; 1 bytes @ 0x13
  8025                           
  8026  0033                     i2c_setBuffer@bufferSize:	
  8027                           ; 1 bytes @ 0x13
  8028                           
  8029  0033                     ___wmul@multiplicand:	
  8030                           ; 2 bytes @ 0x13
  8031                           
  8032  0033                     ___awdiv@dividend:	
  8033                           ; 2 bytes @ 0x13
  8034                           
  8035  0033                     stricmp@s2:	
  8036                           ; 2 bytes @ 0x13
  8037                           
  8038  0033                     strchr@chr:	
  8039                           ; 2 bytes @ 0x13
  8040                           
  8041                           
  8042                           ; 2 bytes @ 0x13
  8043  0033                     	ds	1
  8044  0034                     i2c_open@ret:	
  8045  0034                     ___ftpack@exp:	
  8046                           ; 1 bytes @ 0x14
  8047                           
  8048  0034                     send_last_2bytes_IK@topOrBottom:	
  8049                           ; 1 bytes @ 0x14
  8050                           
  8051  0034                     _do_I2C_TX$1134:	
  8052                           ; 2 bytes @ 0x14
  8053                           
  8054                           
  8055                           ; 2 bytes @ 0x14
  8056  0034                     	ds	1
  8057  0035                     ??_stricmp:	
  8058  0035                     ??_strchr:	
  8059                           ; 1 bytes @ 0x15
  8060                           
  8061  0035                     ??_i2c_setBuffer:	
  8062                           ; 1 bytes @ 0x15
  8063                           
  8064  0035                     ??___wmul:	
  8065                           ; 1 bytes @ 0x15
  8066                           
  8067  0035                     ??___awdiv:	
  8068                           ; 1 bytes @ 0x15
  8069                           
  8070  0035                     i2c_open@address:	
  8071                           ; 1 bytes @ 0x15
  8072                           
  8073  0035                     ___ftpack@sign:	
  8074                           ; 1 bytes @ 0x15
  8075                           
  8076  0035                     ___wmul@product:	
  8077                           ; 1 bytes @ 0x15
  8078                           
  8079  0035                     ___lldiv@dividend:	
  8080                           ; 2 bytes @ 0x15
  8081                           
  8082                           
  8083                           ; 4 bytes @ 0x15
  8084  0035                     	ds	1
  8085  0036                     ??_i2c_ISR:	
  8086  0036                     ??___ftpack:	
  8087                           ; 1 bytes @ 0x16
  8088                           
  8089  0036                     ??_send_last_2bytes_IK:	
  8090                           ; 1 bytes @ 0x16
  8091                           
  8092  0036                     ___awdiv@counter:	
  8093                           ; 1 bytes @ 0x16
  8094                           
  8095                           
  8096                           ; 1 bytes @ 0x16
  8097  0036                     	ds	1
  8098  0037                     ??_i2c_poller:	
  8099  0037                     ??_i2c_masterOperation:	
  8100                           ; 1 bytes @ 0x17
  8101                           
  8102  0037                     ?_atoi:	
  8103                           ; 1 bytes @ 0x17
  8104                           
  8105  0037                     ___awdiv@sign:	
  8106                           ; 2 bytes @ 0x17
  8107                           
  8108  0037                     stricmp@r:	
  8109                           ; 1 bytes @ 0x17
  8110                           
  8111  0037                     send_2bytes_latchless_IK@j:	
  8112                           ; 1 bytes @ 0x17
  8113                           
  8114                           
  8115                           ; 2 bytes @ 0x17
  8116  0037                     	ds	1
  8117  0038                     ?_strspn:	
  8118  0038                     ?_strcspn:	
  8119                           ; 2 bytes @ 0x18
  8120                           
  8121  0038                     i2c_masterOperation@read:	
  8122                           ; 2 bytes @ 0x18
  8123                           
  8124  0038                     stricmp@s1:	
  8125                           ; 1 bytes @ 0x18
  8126                           
  8127  0038                     ___awdiv@quotient:	
  8128                           ; 1 bytes @ 0x18
  8129                           
  8130  0038                     strcspn@s2:	
  8131                           ; 2 bytes @ 0x18
  8132                           
  8133  0038                     strspn@s2:	
  8134                           ; 2 bytes @ 0x18
  8135                           
  8136                           
  8137                           ; 2 bytes @ 0x18
  8138  0038                     	ds	1
  8139  0039                     ??_atoi:	
  8140  0039                     ??___lldiv:	
  8141                           ; 1 bytes @ 0x19
  8142                           
  8143  0039                     ?___awtoft:	
  8144                           ; 1 bytes @ 0x19
  8145                           
  8146  0039                     i2c_masterOperation@ret:	
  8147                           ; 3 bytes @ 0x19
  8148                           
  8149  0039                     ___awtoft@c:	
  8150                           ; 1 bytes @ 0x19
  8151                           
  8152                           
  8153                           ; 2 bytes @ 0x19
  8154  0039                     	ds	1
  8155  003A                     ??_strspn:	
  8156  003A                     ??_strcspn:	
  8157                           ; 1 bytes @ 0x1A
  8158                           
  8159  003A                     send_last_2bytes_IK@j:	
  8160                           ; 1 bytes @ 0x1A
  8161                           
  8162  003A                     ___lldiv@quotient:	
  8163                           ; 2 bytes @ 0x1A
  8164                           
  8165                           
  8166                           ; 4 bytes @ 0x1A
  8167  003A                     	ds	1
  8168  003B                     atoi@sign:	
  8169                           
  8170                           ; 1 bytes @ 0x1B
  8171  003B                     	ds	1
  8172  003C                     ?_send_2length_2bytes_IK:	
  8173  003C                     ??___awtoft:	
  8174                           ; 1 bytes @ 0x1C
  8175                           
  8176  003C                     send_2length_2bytes_IK@data1:	
  8177                           ; 1 bytes @ 0x1C
  8178                           
  8179  003C                     atoi@a:	
  8180                           ; 2 bytes @ 0x1C
  8181                           
  8182  003C                     strcspn@i:	
  8183                           ; 2 bytes @ 0x1C
  8184                           
  8185  003C                     strspn@i:	
  8186                           ; 2 bytes @ 0x1C
  8187                           
  8188                           
  8189                           ; 2 bytes @ 0x1C
  8190  003C                     	ds	2
  8191  003E                     atoi@s:	
  8192  003E                     ___awtoft@sign:	
  8193                           ; 1 bytes @ 0x1E
  8194                           
  8195  003E                     ___lldiv@counter:	
  8196                           ; 1 bytes @ 0x1E
  8197                           
  8198  003E                     strcspn@s1:	
  8199                           ; 1 bytes @ 0x1E
  8200                           
  8201  003E                     strspn@s1:	
  8202                           ; 1 bytes @ 0x1E
  8203                           
  8204  003E                     send_2length_2bytes_IK@data2:	
  8205                           ; 1 bytes @ 0x1E
  8206                           
  8207                           
  8208                           ; 2 bytes @ 0x1E
  8209  003E                     	ds	1
  8210  003F                     ?_strtok:	
  8211  003F                     ?___ftmul:	
  8212                           ; 1 bytes @ 0x1F
  8213                           
  8214  003F                     ?___llmod:	
  8215                           ; 3 bytes @ 0x1F
  8216                           
  8217  003F                     strtok@s2:	
  8218                           ; 4 bytes @ 0x1F
  8219                           
  8220  003F                     ___ftmul@f1:	
  8221                           ; 2 bytes @ 0x1F
  8222                           
  8223  003F                     ___llmod@divisor:	
  8224                           ; 3 bytes @ 0x1F
  8225                           
  8226                           
  8227                           ; 4 bytes @ 0x1F
  8228  003F                     	ds	1
  8229  0040                     send_2length_2bytes_IK@latch_start:	
  8230                           
  8231                           ; 1 bytes @ 0x20
  8232  0040                     	ds	1
  8233  0041                     ??_strtok:	
  8234  0041                     send_2length_2bytes_IK@topOrBottom:	
  8235                           ; 1 bytes @ 0x21
  8236                           
  8237                           
  8238                           ; 2 bytes @ 0x21
  8239  0041                     	ds	1
  8240  0042                     ___ftmul@f2:	
  8241                           
  8242                           ; 3 bytes @ 0x22
  8243  0042                     	ds	1
  8244  0043                     ??_send_2length_2bytes_IK:	
  8245  0043                     ___llmod@dividend:	
  8246                           ; 1 bytes @ 0x23
  8247                           
  8248                           
  8249                           ; 4 bytes @ 0x23
  8250  0043                     	ds	1
  8251  0044                     ?_LEDsOn:	
  8252  0044                     ?_LEDsPwr:	
  8253                           ; 1 bytes @ 0x24
  8254                           
  8255  0044                     ?_LED_setBrightnessRange:	
  8256                           ; 1 bytes @ 0x24
  8257                           
  8258  0044                     strtok@s1:	
  8259                           ; 1 bytes @ 0x24
  8260                           
  8261  0044                     LEDsPwr@pwr:	
  8262                           ; 1 bytes @ 0x24
  8263                           
  8264  0044                     LED_setBrightnessRange@range:	
  8265                           ; 2 bytes @ 0x24
  8266                           
  8267  0044                     LEDsOn@LEDpins:	
  8268                           ; 2 bytes @ 0x24
  8269                           
  8270                           
  8271                           ; 4 bytes @ 0x24
  8272  0044                     	ds	1
  8273  0045                     ?_parseCmd:	
  8274  0045                     ??___ftmul:	
  8275                           ; 1 bytes @ 0x25
  8276                           
  8277  0045                     parseCmd@s:	
  8278                           ; 1 bytes @ 0x25
  8279                           
  8280                           
  8281                           ; 1 bytes @ 0x25
  8282  0045                     	ds	1
  8283  0046                     ??_parseCmd:	
  8284  0046                     LEDsPwr@topOrBottom:	
  8285                           ; 1 bytes @ 0x26
  8286                           
  8287  0046                     LED_setBrightnessRange@topOrBottom:	
  8288                           ; 2 bytes @ 0x26
  8289                           
  8290                           
  8291                           ; 2 bytes @ 0x26
  8292  0046                     	ds	1
  8293  0047                     ??___llmod:	
  8294  0047                     parseCmd@cmdString:	
  8295                           ; 1 bytes @ 0x27
  8296                           
  8297                           
  8298                           ; 1 bytes @ 0x27
  8299  0047                     	ds	1
  8300  0048                     ??_LEDsPwr:	
  8301  0048                     ___llmod@counter:	
  8302                           ; 1 bytes @ 0x28
  8303                           
  8304  0048                     LEDsOn@topOrBottom:	
  8305                           ; 1 bytes @ 0x28
  8306                           
  8307  0048                     parseCmd@paramIter:	
  8308                           ; 2 bytes @ 0x28
  8309                           
  8310  0048                     LED_setBrightnessRange@LED_configReg:	
  8311                           ; 2 bytes @ 0x28
  8312                           
  8313                           
  8314                           ; 4 bytes @ 0x28
  8315  0048                     	ds	1
  8316  0049                     ?_drv_write:	
  8317  0049                     ??_drv_read:	
  8318                           ; 1 bytes @ 0x29
  8319                           
  8320  0049                     ??_LED_readConfig:	
  8321                           ; 1 bytes @ 0x29
  8322                           
  8323  0049                     ??_startRelMove:	
  8324                           ; 1 bytes @ 0x29
  8325                           
  8326  0049                     ??_startAbsMove:	
  8327                           ; 1 bytes @ 0x29
  8328                           
  8329  0049                     ??_getPosition:	
  8330                           ; 1 bytes @ 0x29
  8331                           
  8332  0049                     ??_setDrvPeak:	
  8333                           ; 1 bytes @ 0x29
  8334                           
  8335  0049                     ??_setMoveMask:	
  8336                           ; 1 bytes @ 0x29
  8337                           
  8338  0049                     ??_getActive:	
  8339                           ; 1 bytes @ 0x29
  8340                           
  8341  0049                     ??_getMoveMask:	
  8342                           ; 1 bytes @ 0x29
  8343                           
  8344  0049                     ??_getMotionStatus:	
  8345                           ; 1 bytes @ 0x29
  8346                           
  8347  0049                     ??___ftadd:	
  8348                           ; 1 bytes @ 0x29
  8349                           
  8350  0049                     drv_write@data:	
  8351                           ; 1 bytes @ 0x29
  8352                           
  8353  0049                     zeroPosition@i:	
  8354                           ; 1 bytes @ 0x29
  8355                           
  8356                           
  8357                           ; 2 bytes @ 0x29
  8358  0049                     	ds	1
  8359  004A                     ??_drv_write:	
  8360  004A                     ??_LEDsOn:	
  8361                           ; 1 bytes @ 0x2A
  8362                           
  8363  004A                     parseCmd@p:	
  8364                           ; 1 bytes @ 0x2A
  8365                           
  8366                           
  8367                           ; 1 bytes @ 0x2A
  8368  004A                     	ds	1
  8369  004B                     drv_write@reg:	
  8370  004B                     drv_read@reg:	
  8371                           ; 1 bytes @ 0x2B
  8372                           
  8373                           
  8374                           ; 1 bytes @ 0x2B
  8375  004B                     	ds	1
  8376  004C                     ??_LED_testComm:	
  8377  004C                     ??_setLEDBrightnessRange:	
  8378                           ; 1 bytes @ 0x2C
  8379                           
  8380  004C                     drv_read@buff:	
  8381                           ; 1 bytes @ 0x2C
  8382                           
  8383  004C                     drv_write@buff:	
  8384                           ; 1 bytes @ 0x2C
  8385                           
  8386                           
  8387                           ; 2 bytes @ 0x2C
  8388  004C                     	ds	1
  8389  004D                     ??_fifo_check:	
  8390  004D                     ??_setHeaterPostTime:	
  8391                           ; 1 bytes @ 0x2D
  8392                           
  8393                           
  8394                           ; 1 bytes @ 0x2D
  8395  004D                     	ds	1
  8396  004E                     ??_execCmd:	
  8397  004E                     ??_setLEDPwr:	
  8398                           ; 1 bytes @ 0x2E
  8399                           
  8400                           
  8401                           	psect	maintext
  8402  13D7                     __pmaintext:	
  8403                           ; 1 bytes @ 0x2E
  8404 ;;
  8405 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8406 ;;
  8407 ;; *************** function _main *****************
  8408 ;; Defined at:
  8409 ;;		line 130 in file "main.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;		None
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;		None
  8414 ;; Return value:  Size  Location     Type
  8415 ;;                  1    wreg      void 
  8416 ;; Registers used:
  8417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8418 ;; Tracked objects:
  8419 ;;		On entry : B1F/0
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8425 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8426 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8427 ;;Total ram usage:        1 bytes
  8428 ;; Hardware stack levels required when called:   17
  8429 ;; This function calls:
  8430 ;;		_EUSART_Read
  8431 ;;		_SYSTEM_Initialize
  8432 ;;		_doAbsMove
  8433 ;;		_doRelMove
  8434 ;;		_execCmd
  8435 ;;		_main_initialize
  8436 ;;		_parseCmd
  8437 ;;		_printf
  8438 ;; This function is called by:
  8439 ;;		Startup code after reset
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           
  8444                           ;psect for function _main
  8445  13D7                     _main:	
  8446                           
  8447                           ;main.c: 133: SYSTEM_Initialize();
  8448                           
  8449                           ;incstack = 0
  8450 ;; hardware stack exceeded
  8451                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8452  13D7  31A3  23E9  3193   	fcall	_SYSTEM_Initialize
  8453                           
  8454                           ;main.c: 134: _delay((unsigned long)((500)*(1000000/4000.0)));
  8455  13DA  30A3               	movlw	163
  8456  13DB  0021               	movlb	1	; select bank1
  8457  13DC  00D8               	movwf	??_main^(0+128)
  8458  13DD  3055               	movlw	85
  8459  13DE                     u9047:	
  8460  13DE  0B89               	decfsz	9,f
  8461  13DF  2BDE               	goto	u9047
  8462  13E0  0BD8               	decfsz	??_main^(0+128),f
  8463  13E1  2BDE               	goto	u9047
  8464                           
  8465                           ;main.c: 140: (INTCONbits.GIE = 1);
  8466  13E2  178B               	bsf	11,7	;volatile
  8467                           
  8468                           ;main.c: 143: (INTCONbits.PEIE = 1);
  8469  13E3  170B               	bsf	11,6	;volatile
  8470                           
  8471                           ;main.c: 144: printf("\n\nsystem done\n");
  8472  13E4  305E               	movlw	low (STR_5| (0+32768))
  8473  13E5  0021               	movlb	1	; select bank1
  8474  13E6  00A0               	movwf	printf@f^(0+128)
  8475  13E7  30A9               	movlw	high (STR_5| (0+32768))
  8476  13E8  00A1               	movwf	(printf@f^(0+128)+1)
  8477  13E9  318E  26CE  3193   	fcall	_printf
  8478                           
  8479                           ;main.c: 150: main_initialize();
  8480  13EC  318B  2301  3193   	fcall	_main_initialize
  8481                           
  8482                           ;main.c: 173: }
  8483                           ;main.c: 176: switch(motionType){
  8484  13EF  2BF7               	goto	l8623
  8485  13F0                     l8643:	
  8486                           ;main.c: 177: case REL_MOVE: doRelMove(); break;
  8487                           
  8488  13F0  318D  259D  3193   	fcall	_doRelMove
  8489  13F3  2BF7               	goto	l8623
  8490  13F4                     l8645:	
  8491                           ;main.c: 178: case ABS_MOVE: doAbsMove(); break;
  8492                           
  8493  13F4  3180  20C0  3193   	fcall	_doAbsMove
  8494  13F7                     l8623:	
  8495                           ;main.c: 152: while (1)
  8496                           
  8497                           ;main.c: 180: }
  8498                           
  8499                           ;main.c: 179: default: break;
  8500                           
  8501                           
  8502                           ;main.c: 153: {
  8503                           ;main.c: 155: if (eusartRxCount!=0) {
  8504  13F7  0020               	movlb	0	; select bank0
  8505  13F8  0856               	movf	_eusartRxCount,w	;volatile
  8506  13F9  1903               	btfsc	3,2
  8507  13FA  2C23               	goto	l8635
  8508                           
  8509                           ;main.c: 156: readdata[readIdx] = EUSART_Read();
  8510  13FB  31A5  254C  3193   	fcall	_EUSART_Read
  8511  13FE  0021               	movlb	1	; select bank1
  8512  13FF  00D8               	movwf	??_main^(0+128)
  8513  1400  0020               	movlb	0	; select bank0
  8514  1401  0852               	movf	_readIdx,w
  8515  1402  3EC5               	addlw	(low (_readdata| (0+256)))& (0+255)
  8516  1403  0086               	movwf	6
  8517  1404  3001               	movlw	1	; select bank3/4
  8518  1405  0087               	movwf	7
  8519  1406  0021               	movlb	1	; select bank1
  8520  1407  0858               	movf	??_main^(0+128),w
  8521  1408  0081               	movwf	1
  8522                           
  8523                           ;main.c: 157: if(readdata[readIdx] == '\n'){
  8524  1409  0020               	movlb	0	; select bank0
  8525  140A  0852               	movf	_readIdx,w
  8526  140B  3EC5               	addlw	(low (_readdata| (0+256)))& (0+255)
  8527  140C  0086               	movwf	6
  8528  140D  3001               	movlw	1	; select bank3/4
  8529  140E  0087               	movwf	7
  8530  140F  300A               	movlw	10
  8531  1410  0601               	xorwf	1,w
  8532  1411  1D03               	btfss	3,2
  8533  1412  2C1E               	goto	l8633
  8534                           
  8535                           ;main.c: 158: readdata[readIdx] = 0;
  8536  1413  0852               	movf	_readIdx,w
  8537  1414  3EC5               	addlw	(low (_readdata| (0+256)))& (0+255)
  8538  1415  0086               	movwf	6
  8539  1416  3001               	movlw	1	; select bank3/4
  8540  1417  0087               	movwf	7
  8541  1418  0181               	clrf	1
  8542                           
  8543                           ;main.c: 159: cmdRead = 1;
  8544  1419  3001               	movlw	1
  8545  141A  0022               	movlb	2	; select bank2
  8546  141B  00E4               	movwf	_cmdRead^(0+256)
  8547  141C  3000               	movlw	0
  8548  141D  00E5               	movwf	(_cmdRead^(0+256)+1)
  8549  141E                     l8633:	
  8550                           
  8551                           ;main.c: 160: }
  8552                           ;main.c: 161: readIdx++;
  8553  141E  3001               	movlw	1
  8554  141F  0020               	movlb	0	; select bank0
  8555  1420  07D2               	addwf	_readIdx,f
  8556  1421  3000               	movlw	0
  8557  1422  3DD3               	addwfc	_readIdx+1,f
  8558  1423                     l8635:	
  8559                           
  8560                           ;main.c: 162: }
  8561                           ;main.c: 165: if(cmdRead){
  8562  1423  0022               	movlb	2	; select bank2
  8563  1424  0864               	movf	_cmdRead^(0+256),w
  8564  1425  0465               	iorwf	(_cmdRead+1)^(0+256),w
  8565  1426  1903               	btfsc	3,2
  8566  1427  2C3C               	goto	l8649
  8567                           
  8568                           ;main.c: 167: parseCmd(readdata, &cmd_struct);
  8569  1428  30B0               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8570  1429  0021               	movlb	1	; select bank1
  8571  142A  00D8               	movwf	??_main^(0+128)
  8572  142B  0858               	movf	??_main^(0+128),w
  8573  142C  0020               	movlb	0	; select bank0
  8574  142D  00C5               	movwf	parseCmd@s
  8575  142E  30C5               	movlw	(low (_readdata| (0+256)))& (0+255)
  8576  142F  3185  252F  3193   	fcall	_parseCmd
  8577                           
  8578                           ;main.c: 169: cmdRead = 0;
  8579  1432  0022               	movlb	2	; select bank2
  8580  1433  01E4               	clrf	_cmdRead^(0+256)
  8581  1434  01E5               	clrf	(_cmdRead+1)^(0+256)
  8582                           
  8583                           ;main.c: 170: readIdx=0;
  8584  1435  0020               	movlb	0	; select bank0
  8585  1436  01D2               	clrf	_readIdx
  8586  1437  01D3               	clrf	_readIdx+1
  8587                           
  8588                           ;main.c: 171: execCmd(&cmd_struct);
  8589  1438  30B0               	movlw	(low (_cmd_struct| (0+256)))& (0+255)
  8590  1439  3183  2370  3193   	fcall	_execCmd
  8591  143C                     l8649:	
  8592  143C  0020               	movlb	0	; select bank0
  8593  143D  0855               	movf	_motionType,w
  8594                           
  8595                           ; Switch size 1, requested type "space"
  8596                           ; Number of cases is 2, Range of values is 1 to 2
  8597                           ; switch strategies available:
  8598                           ; Name         Instructions Cycles
  8599                           ; simple_byte            7     4 (average)
  8600                           ; direct_byte           13     9 (fixed)
  8601                           ; jumptable            263     9 (fixed)
  8602                           ;	Chosen strategy is simple_byte
  8603  143E  3A01               	xorlw	1	; case 1
  8604  143F  1903               	skipnz
  8605  1440  2BF0               	goto	l8643
  8606  1441  3A03               	xorlw	3	; case 2
  8607  1442  1903               	skipnz
  8608  1443  2BF4               	goto	l8645
  8609  1444  2BF7               	goto	l8623
  8610  1445  2BF7               	goto	l8623
  8611  1446                     __end_of_main:	
  8612                           
  8613                           	psect	text1
  8614  052F                     __ptext1:	
  8615 ;; *************** function _parseCmd *****************
  8616 ;; Defined at:
  8617 ;;		line 5 in file "cmd_parser.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;  cmdString       1    wreg     PTR unsigned char 
  8620 ;;		 -> readdata(20), 
  8621 ;;  s               1   37[BANK0 ] PTR struct CMD_STRUCT
  8622 ;;		 -> cmd_struct(21), 
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;  cmdString       1   39[BANK0 ] PTR unsigned char 
  8625 ;;		 -> readdata(20), 
  8626 ;;  p               1   42[BANK0 ] PTR unsigned char 
  8627 ;;		 -> readdata(20), NULL(0), 
  8628 ;;  paramIter       2   40[BANK0 ] int 
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      void 
  8631 ;; Registers used:
  8632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8638 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8639 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8641 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8642 ;;Total ram usage:        6 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; Hardware stack levels required when called:    9
  8645 ;; This function calls:
  8646 ;;		_atoi
  8647 ;;		_stricmp
  8648 ;;		_strtok
  8649 ;; This function is called by:
  8650 ;;		_main
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           
  8655                           ;psect for function _parseCmd
  8656  052F                     _parseCmd:	
  8657                           
  8658                           ;incstack = 0
  8659                           ; Regs used in _parseCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8660                           ;parseCmd@cmdString stored from wreg
  8661  052F  0020               	movlb	0	; select bank0
  8662  0530  00C7               	movwf	parseCmd@cmdString
  8663                           
  8664                           ;cmd_parser.c: 6: int paramIter = 0;
  8665  0531  01C8               	clrf	parseCmd@paramIter
  8666  0532  01C9               	clrf	parseCmd@paramIter+1
  8667                           
  8668                           ;cmd_parser.c: 7: for (char *p = strtok(cmdString," "); p != (0); p = strtok((0), " ")){
  8669  0533  3011               	movlw	low ((STR_41+6)| (0+32768))
  8670  0534  00BF               	movwf	strtok@s2
  8671  0535  30AA               	movlw	high ((STR_41+6)| (0+32768))
  8672  0536  00C0               	movwf	strtok@s2+1
  8673  0537  0847               	movf	parseCmd@cmdString,w
  8674  0538                     L21:	
  8675  0538  319A  22A7  3185   	fcall	_strtok
  8676  053B  0020               	movlb	0	; select bank0
  8677  053C  00C6               	movwf	??_parseCmd
  8678  053D  0846               	movf	??_parseCmd,w
  8679  053E  00CA               	movwf	parseCmd@p
  8680  053F  084A               	movf	parseCmd@p,w
  8681  0540  1903               	btfsc	3,2
  8682  0541  0008               	return
  8683                           
  8684                           ;cmd_parser.c: 9: if (paramIter == 0){
  8685  0542  0848               	movf	parseCmd@paramIter,w
  8686  0543  0449               	iorwf	parseCmd@paramIter+1,w
  8687  0544  1D03               	btfss	3,2
  8688  0545  2EA2               	goto	l6657
  8689                           
  8690                           ;cmd_parser.c: 10: if(stricmp(p, "rel") == 0)
  8691  0546  303F               	movlw	low (STR_59| (0+32768))
  8692  0547  00B3               	movwf	stricmp@s2
  8693  0548  30AA               	movlw	high (STR_59| (0+32768))
  8694  0549  00B4               	movwf	stricmp@s2+1
  8695  054A  084A               	movf	parseCmd@p,w
  8696  054B  3198  2064  3185   	fcall	_stricmp
  8697  054E  0020               	movlb	0	; select bank0
  8698  054F  0833               	movf	?_stricmp,w
  8699  0550  0434               	iorwf	?_stricmp+1,w
  8700  0551  1D03               	btfss	3,2
  8701  0552  2D55               	goto	l6571
  8702                           
  8703                           ;cmd_parser.c: 11: s->c = CMD_REL;
  8704  0553  3002               	movlw	2
  8705  0554  2E94               	goto	L20
  8706  0555                     l6571:	
  8707                           
  8708                           ;cmd_parser.c: 12: else if(stricmp(p, "abs") == 0)
  8709  0555  3043               	movlw	low (STR_60| (0+32768))
  8710  0556  00B3               	movwf	stricmp@s2
  8711  0557  30AA               	movlw	high (STR_60| (0+32768))
  8712  0558  00B4               	movwf	stricmp@s2+1
  8713  0559  084A               	movf	parseCmd@p,w
  8714  055A  3198  2064  3185   	fcall	_stricmp
  8715  055D  0020               	movlb	0	; select bank0
  8716  055E  0833               	movf	?_stricmp,w
  8717  055F  0434               	iorwf	?_stricmp+1,w
  8718  0560  1D03               	btfss	3,2
  8719  0561  2D69               	goto	l6575
  8720                           
  8721                           ;cmd_parser.c: 13: s->c = CMD_ABS;
  8722  0562  0845               	movf	parseCmd@s,w
  8723  0563  0086               	movwf	6
  8724  0564  3001               	movlw	1	; select bank2/3
  8725  0565  0087               	movwf	7
  8726  0566  0181               	clrf	1
  8727  0567  0A81               	incf	1,f
  8728  0568  2EC7               	goto	l6665
  8729  0569                     l6575:	
  8730                           
  8731                           ;cmd_parser.c: 14: else if(stricmp(p, "pos") == 0)
  8732  0569  3047               	movlw	low (STR_61| (0+32768))
  8733  056A  00B3               	movwf	stricmp@s2
  8734  056B  30AA               	movlw	high (STR_61| (0+32768))
  8735  056C  00B4               	movwf	stricmp@s2+1
  8736  056D  084A               	movf	parseCmd@p,w
  8737  056E  3198  2064  3185   	fcall	_stricmp
  8738  0571  0020               	movlb	0	; select bank0
  8739  0572  0833               	movf	?_stricmp,w
  8740  0573  0434               	iorwf	?_stricmp+1,w
  8741  0574  1D03               	btfss	3,2
  8742  0575  2D78               	goto	l6579
  8743                           
  8744                           ;cmd_parser.c: 15: s->c = CMD_P;
  8745  0576  3003               	movlw	3
  8746  0577  2E94               	goto	L20
  8747  0578                     l6579:	
  8748                           
  8749                           ;cmd_parser.c: 16: else if(stricmp(p,"s") == 0)
  8750  0578  3045               	movlw	low ((STR_60+2)| (0+32768))
  8751  0579  00B3               	movwf	stricmp@s2
  8752  057A  30AA               	movlw	high ((STR_60+2)| (0+32768))
  8753  057B  00B4               	movwf	stricmp@s2+1
  8754  057C  084A               	movf	parseCmd@p,w
  8755  057D  3198  2064  3185   	fcall	_stricmp
  8756  0580  0020               	movlb	0	; select bank0
  8757  0581  0833               	movf	?_stricmp,w
  8758  0582  0434               	iorwf	?_stricmp+1,w
  8759  0583  1D03               	btfss	3,2
  8760  0584  2D87               	goto	l6583
  8761                           
  8762                           ;cmd_parser.c: 17: s->c = CMD_S;
  8763  0585  3004               	movlw	4
  8764  0586  2E94               	goto	L20
  8765  0587                     l6583:	
  8766                           
  8767                           ;cmd_parser.c: 18: else if(stricmp(p,"setA") == 0)
  8768  0587  3026               	movlw	low (STR_63| (0+32768))
  8769  0588  00B3               	movwf	stricmp@s2
  8770  0589  30AA               	movlw	high (STR_63| (0+32768))
  8771  058A  00B4               	movwf	stricmp@s2+1
  8772  058B  084A               	movf	parseCmd@p,w
  8773  058C  3198  2064  3185   	fcall	_stricmp
  8774  058F  0020               	movlb	0	; select bank0
  8775  0590  0833               	movf	?_stricmp,w
  8776  0591  0434               	iorwf	?_stricmp+1,w
  8777  0592  1D03               	btfss	3,2
  8778  0593  2D96               	goto	l6587
  8779                           
  8780                           ;cmd_parser.c: 19: s->c = CMD_SETA;
  8781  0594  3005               	movlw	5
  8782  0595  2E94               	goto	L20
  8783  0596                     l6587:	
  8784                           
  8785                           ;cmd_parser.c: 20: else if(stricmp(p,"setM") == 0)
  8786  0596  3030               	movlw	low (STR_64| (0+32768))
  8787  0597  00B3               	movwf	stricmp@s2
  8788  0598  30AA               	movlw	high (STR_64| (0+32768))
  8789  0599  00B4               	movwf	stricmp@s2+1
  8790  059A  084A               	movf	parseCmd@p,w
  8791  059B  3198  2064  3185   	fcall	_stricmp
  8792  059E  0020               	movlb	0	; select bank0
  8793  059F  0833               	movf	?_stricmp,w
  8794  05A0  0434               	iorwf	?_stricmp+1,w
  8795  05A1  1D03               	btfss	3,2
  8796  05A2  2DA5               	goto	l6591
  8797                           
  8798                           ;cmd_parser.c: 21: s->c = CMD_SETM;
  8799  05A3  3006               	movlw	6
  8800  05A4  2E94               	goto	L20
  8801  05A5                     l6591:	
  8802                           
  8803                           ;cmd_parser.c: 22: else if(stricmp(p,"z") == 0)
  8804  05A5  3061               	movlw	low (STR_65| (0+32768))
  8805  05A6  00B3               	movwf	stricmp@s2
  8806  05A7  30AA               	movlw	high (STR_65| (0+32768))
  8807  05A8  00B4               	movwf	stricmp@s2+1
  8808  05A9  084A               	movf	parseCmd@p,w
  8809  05AA  3198  2064  3185   	fcall	_stricmp
  8810  05AD  0020               	movlb	0	; select bank0
  8811  05AE  0833               	movf	?_stricmp,w
  8812  05AF  0434               	iorwf	?_stricmp+1,w
  8813  05B0  1D03               	btfss	3,2
  8814  05B1  2DB4               	goto	l6595
  8815                           
  8816                           ;cmd_parser.c: 23: s->c = CMD_ZERO;
  8817  05B2  3007               	movlw	7
  8818  05B3  2E94               	goto	L20
  8819  05B4                     l6595:	
  8820                           
  8821                           ;cmd_parser.c: 24: else if(stricmp(p,"drvPeak") == 0)
  8822  05B4  30D3               	movlw	low (STR_66| (0+32768))
  8823  05B5  00B3               	movwf	stricmp@s2
  8824  05B6  30A9               	movlw	high (STR_66| (0+32768))
  8825  05B7  00B4               	movwf	stricmp@s2+1
  8826  05B8  084A               	movf	parseCmd@p,w
  8827  05B9  3198  2064  3185   	fcall	_stricmp
  8828  05BC  0020               	movlb	0	; select bank0
  8829  05BD  0833               	movf	?_stricmp,w
  8830  05BE  0434               	iorwf	?_stricmp+1,w
  8831  05BF  1D03               	btfss	3,2
  8832  05C0  2DC3               	goto	l6599
  8833                           
  8834                           ;cmd_parser.c: 25: s->c = CMD_DRV_PEAK;
  8835  05C1  3008               	movlw	8
  8836  05C2  2E94               	goto	L20
  8837  05C3                     l6599:	
  8838                           
  8839                           ;cmd_parser.c: 26: else if(stricmp(p,"drvGain") == 0)
  8840  05C3  30DB               	movlw	low (STR_67| (0+32768))
  8841  05C4  00B3               	movwf	stricmp@s2
  8842  05C5  30A9               	movlw	high (STR_67| (0+32768))
  8843  05C6  00B4               	movwf	stricmp@s2+1
  8844  05C7  084A               	movf	parseCmd@p,w
  8845  05C8  3198  2064  3185   	fcall	_stricmp
  8846  05CB  0020               	movlb	0	; select bank0
  8847  05CC  0833               	movf	?_stricmp,w
  8848  05CD  0434               	iorwf	?_stricmp+1,w
  8849  05CE  1D03               	btfss	3,2
  8850  05CF  2DD2               	goto	l6603
  8851                           
  8852                           ;cmd_parser.c: 27: s->c = CMD_DRV_GAIN;
  8853  05D0  3009               	movlw	9
  8854  05D1  2E94               	goto	L20
  8855  05D2                     l6603:	
  8856                           
  8857                           ;cmd_parser.c: 28: else if(stricmp(p,"piezoontime") == 0)
  8858  05D2  3094               	movlw	low (STR_68| (0+32768))
  8859  05D3  00B3               	movwf	stricmp@s2
  8860  05D4  30A9               	movlw	high (STR_68| (0+32768))
  8861  05D5  00B4               	movwf	stricmp@s2+1
  8862  05D6  084A               	movf	parseCmd@p,w
  8863  05D7  3198  2064  3185   	fcall	_stricmp
  8864  05DA  0020               	movlb	0	; select bank0
  8865  05DB  0833               	movf	?_stricmp,w
  8866  05DC  0434               	iorwf	?_stricmp+1,w
  8867  05DD  1D03               	btfss	3,2
  8868  05DE  2DE1               	goto	l6607
  8869                           
  8870                           ;cmd_parser.c: 29: s->c = CMD_DRV_PIEZOONTIME;
  8871  05DF  300A               	movlw	10
  8872  05E0  2E94               	goto	L20
  8873  05E1                     l6607:	
  8874                           
  8875                           ;cmd_parser.c: 30: else if(stricmp(p,"heaterpretime") == 0)
  8876  05E1  306D               	movlw	low (STR_69| (0+32768))
  8877  05E2  00B3               	movwf	stricmp@s2
  8878  05E3  30A9               	movlw	high (STR_69| (0+32768))
  8879  05E4  00B4               	movwf	stricmp@s2+1
  8880  05E5  084A               	movf	parseCmd@p,w
  8881  05E6  3198  2064  3185   	fcall	_stricmp
  8882  05E9  0020               	movlb	0	; select bank0
  8883  05EA  0833               	movf	?_stricmp,w
  8884  05EB  0434               	iorwf	?_stricmp+1,w
  8885  05EC  1D03               	btfss	3,2
  8886  05ED  2DF0               	goto	l6611
  8887                           
  8888                           ;cmd_parser.c: 31: s->c = CMD_HEATER_PRETIME;
  8889  05EE  300B               	movlw	11
  8890  05EF  2E94               	goto	L20
  8891  05F0                     l6611:	
  8892                           
  8893                           ;cmd_parser.c: 32: else if(stricmp(p,"heaterposttime") == 0)
  8894  05F0  304F               	movlw	low (STR_70| (0+32768))
  8895  05F1  00B3               	movwf	stricmp@s2
  8896  05F2  30A9               	movlw	high (STR_70| (0+32768))
  8897  05F3  00B4               	movwf	stricmp@s2+1
  8898  05F4  084A               	movf	parseCmd@p,w
  8899  05F5  3198  2064  3185   	fcall	_stricmp
  8900  05F8  0020               	movlb	0	; select bank0
  8901  05F9  0833               	movf	?_stricmp,w
  8902  05FA  0434               	iorwf	?_stricmp+1,w
  8903  05FB  1D03               	btfss	3,2
  8904  05FC  2DFF               	goto	l6615
  8905                           
  8906                           ;cmd_parser.c: 33: s->c = CMD_HEATER_POSTTIME;
  8907  05FD  300C               	movlw	12
  8908  05FE  2E94               	goto	L20
  8909  05FF                     l6615:	
  8910                           
  8911                           ;cmd_parser.c: 34: else if(stricmp(p,"ledgain") == 0)
  8912  05FF  30E3               	movlw	low (STR_71| (0+32768))
  8913  0600  00B3               	movwf	stricmp@s2
  8914  0601  30A9               	movlw	high (STR_71| (0+32768))
  8915  0602  00B4               	movwf	stricmp@s2+1
  8916  0603  084A               	movf	parseCmd@p,w
  8917  0604  3198  2064  3185   	fcall	_stricmp
  8918  0607  0020               	movlb	0	; select bank0
  8919  0608  0833               	movf	?_stricmp,w
  8920  0609  0434               	iorwf	?_stricmp+1,w
  8921  060A  1D03               	btfss	3,2
  8922  060B  2E0E               	goto	l6619
  8923                           
  8924                           ;cmd_parser.c: 35: s->c = CMD_HEATER_GAIN;
  8925  060C  300D               	movlw	13
  8926  060D  2E94               	goto	L20
  8927  060E                     l6619:	
  8928                           
  8929                           ;cmd_parser.c: 36: else if(stricmp(p,"ledpwr") == 0)
  8930  060E  301A               	movlw	low (STR_72| (0+32768))
  8931  060F  00B3               	movwf	stricmp@s2
  8932  0610  30AA               	movlw	high (STR_72| (0+32768))
  8933  0611  00B4               	movwf	stricmp@s2+1
  8934  0612  084A               	movf	parseCmd@p,w
  8935  0613  3198  2064  3185   	fcall	_stricmp
  8936  0616  0020               	movlb	0	; select bank0
  8937  0617  0833               	movf	?_stricmp,w
  8938  0618  0434               	iorwf	?_stricmp+1,w
  8939  0619  1D03               	btfss	3,2
  8940  061A  2E1D               	goto	l6623
  8941                           
  8942                           ;cmd_parser.c: 37: s->c = CMD_HEATER_PWR;
  8943  061B  300E               	movlw	14
  8944  061C  2E94               	goto	L20
  8945  061D                     l6623:	
  8946                           
  8947                           ;cmd_parser.c: 38: else if(stricmp(p,"toggleheater") == 0)
  8948  061D  307B               	movlw	low (STR_73| (0+32768))
  8949  061E  00B3               	movwf	stricmp@s2
  8950  061F  30A9               	movlw	high (STR_73| (0+32768))
  8951  0620  00B4               	movwf	stricmp@s2+1
  8952  0621  084A               	movf	parseCmd@p,w
  8953  0622  3198  2064  3185   	fcall	_stricmp
  8954  0625  0020               	movlb	0	; select bank0
  8955  0626  0833               	movf	?_stricmp,w
  8956  0627  0434               	iorwf	?_stricmp+1,w
  8957  0628  1D03               	btfss	3,2
  8958  0629  2E2C               	goto	l6627
  8959                           
  8960                           ;cmd_parser.c: 39: s->c = CMD_HEATER_TOGGLE;
  8961  062A  300F               	movlw	15
  8962  062B  2E94               	goto	L20
  8963  062C                     l6627:	
  8964                           
  8965                           ;cmd_parser.c: 40: else if(stricmp(p,"timeheater") == 0)
  8966  062C  30A0               	movlw	low (STR_74| (0+32768))
  8967  062D  00B3               	movwf	stricmp@s2
  8968  062E  30A9               	movlw	high (STR_74| (0+32768))
  8969  062F  00B4               	movwf	stricmp@s2+1
  8970  0630  084A               	movf	parseCmd@p,w
  8971  0631  3198  2064  3185   	fcall	_stricmp
  8972  0634  0020               	movlb	0	; select bank0
  8973  0635  0833               	movf	?_stricmp,w
  8974  0636  0434               	iorwf	?_stricmp+1,w
  8975  0637  1D03               	btfss	3,2
  8976  0638  2E3B               	goto	l6631
  8977                           
  8978                           ;cmd_parser.c: 41: s->c = CMD_HEATER_TIMED;
  8979  0639  3010               	movlw	16
  8980  063A  2E94               	goto	L20
  8981  063B                     l6631:	
  8982                           
  8983                           ;cmd_parser.c: 42: else if(stricmp(p,"getA") == 0)
  8984  063B  3021               	movlw	low (STR_75| (0+32768))
  8985  063C  00B3               	movwf	stricmp@s2
  8986  063D  30AA               	movlw	high (STR_75| (0+32768))
  8987  063E  00B4               	movwf	stricmp@s2+1
  8988  063F  084A               	movf	parseCmd@p,w
  8989  0640  3198  2064  3185   	fcall	_stricmp
  8990  0643  0020               	movlb	0	; select bank0
  8991  0644  0833               	movf	?_stricmp,w
  8992  0645  0434               	iorwf	?_stricmp+1,w
  8993  0646  1D03               	btfss	3,2
  8994  0647  2E4A               	goto	l6635
  8995                           
  8996                           ;cmd_parser.c: 43: s->c = CMD_GET_ACTIVE;
  8997  0648  3011               	movlw	17
  8998  0649  2E94               	goto	L20
  8999  064A                     l6635:	
  9000                           
  9001                           ;cmd_parser.c: 44: else if(stricmp(p,"getM") == 0)
  9002  064A  302B               	movlw	low (STR_76| (0+32768))
  9003  064B  00B3               	movwf	stricmp@s2
  9004  064C  30AA               	movlw	high (STR_76| (0+32768))
  9005  064D  00B4               	movwf	stricmp@s2+1
  9006  064E  084A               	movf	parseCmd@p,w
  9007  064F  3198  2064  3185   	fcall	_stricmp
  9008  0652  0020               	movlb	0	; select bank0
  9009  0653  0833               	movf	?_stricmp,w
  9010  0654  0434               	iorwf	?_stricmp+1,w
  9011  0655  1D03               	btfss	3,2
  9012  0656  2E59               	goto	l6639
  9013                           
  9014                           ;cmd_parser.c: 45: s->c = CMD_GET_MOVABLE;
  9015  0657  3012               	movlw	18
  9016  0658  2E94               	goto	L20
  9017  0659                     l6639:	
  9018                           
  9019                           ;cmd_parser.c: 46: else if(stricmp(p,"mstatus") == 0)
  9020  0659  30EB               	movlw	low (STR_77| (0+32768))
  9021  065A  00B3               	movwf	stricmp@s2
  9022  065B  30A9               	movlw	high (STR_77| (0+32768))
  9023  065C  00B4               	movwf	stricmp@s2+1
  9024  065D  084A               	movf	parseCmd@p,w
  9025  065E  3198  2064  3185   	fcall	_stricmp
  9026  0661  0020               	movlb	0	; select bank0
  9027  0662  0833               	movf	?_stricmp,w
  9028  0663  0434               	iorwf	?_stricmp+1,w
  9029  0664  1D03               	btfss	3,2
  9030  0665  2E68               	goto	l6643
  9031                           
  9032                           ;cmd_parser.c: 47: s->c = CMD_MOTION_STATUS;
  9033  0666  3013               	movlw	19
  9034  0667  2E94               	goto	L20
  9035  0668                     l6643:	
  9036                           
  9037                           ;cmd_parser.c: 48: else if(stricmp(p,"domove") == 0)
  9038  0668  3013               	movlw	low (STR_78| (0+32768))
  9039  0669  00B3               	movwf	stricmp@s2
  9040  066A  30AA               	movlw	high (STR_78| (0+32768))
  9041  066B  00B4               	movwf	stricmp@s2+1
  9042  066C  084A               	movf	parseCmd@p,w
  9043  066D  3198  2064  3185   	fcall	_stricmp
  9044  0670  0020               	movlb	0	; select bank0
  9045  0671  0833               	movf	?_stricmp,w
  9046  0672  0434               	iorwf	?_stricmp+1,w
  9047  0673  1D03               	btfss	3,2
  9048  0674  2E77               	goto	l6647
  9049                           
  9050                           ;cmd_parser.c: 49: s->c = CMD_DOMOVE;
  9051  0675  3014               	movlw	20
  9052  0676  2E94               	goto	L20
  9053  0677                     l6647:	
  9054                           
  9055                           ;cmd_parser.c: 50: else if(stricmp(p,"comm") == 0)
  9056  0677  303A               	movlw	low (STR_79| (0+32768))
  9057  0678  00B3               	movwf	stricmp@s2
  9058  0679  30AA               	movlw	high (STR_79| (0+32768))
  9059  067A  00B4               	movwf	stricmp@s2+1
  9060  067B  084A               	movf	parseCmd@p,w
  9061  067C  3198  2064  3185   	fcall	_stricmp
  9062  067F  0020               	movlb	0	; select bank0
  9063  0680  0833               	movf	?_stricmp,w
  9064  0681  0434               	iorwf	?_stricmp+1,w
  9065  0682  1D03               	btfss	3,2
  9066  0683  2E86               	goto	l6651
  9067                           
  9068                           ;cmd_parser.c: 51: s->c = CMD_COMM_CHECK;
  9069  0684  3015               	movlw	21
  9070  0685  2E94               	goto	L20
  9071  0686                     l6651:	
  9072                           
  9073                           ;cmd_parser.c: 52: else if(stricmp(p,"ping") == 0)
  9074  0686  3035               	movlw	low (STR_80| (0+32768))
  9075  0687  00B3               	movwf	stricmp@s2
  9076  0688  30AA               	movlw	high (STR_80| (0+32768))
  9077  0689  00B4               	movwf	stricmp@s2+1
  9078  068A  084A               	movf	parseCmd@p,w
  9079  068B  3198  2064  3185   	fcall	_stricmp
  9080  068E  0020               	movlb	0	; select bank0
  9081  068F  0833               	movf	?_stricmp,w
  9082  0690  0434               	iorwf	?_stricmp+1,w
  9083  0691  1D03               	btfss	3,2
  9084  0692  2E9C               	goto	l6655
  9085                           
  9086                           ;cmd_parser.c: 53: s->c = CMD_PING;
  9087  0693  3016               	movlw	22
  9088  0694                     L20:	
  9089  0694  00C6               	movwf	??_parseCmd
  9090  0695  0845               	movf	parseCmd@s,w
  9091  0696  0086               	movwf	6
  9092  0697  3001               	movlw	1	; select bank2/3
  9093  0698  0087               	movwf	7
  9094  0699  0846               	movf	??_parseCmd,w
  9095  069A  0081               	movwf	1
  9096  069B  2EC7               	goto	l6665
  9097  069C                     l6655:	
  9098                           
  9099                           ;cmd_parser.c: 56: else
  9100                           ;cmd_parser.c: 57: s->c = CMD_NONE;
  9101  069C  0845               	movf	parseCmd@s,w
  9102  069D  0086               	movwf	6
  9103  069E  3001               	movlw	1	; select bank2/3
  9104  069F  0087               	movwf	7
  9105  06A0  0181               	clrf	1
  9106                           
  9107                           ;cmd_parser.c: 58: }
  9108  06A1  2EC7               	goto	l6665
  9109  06A2                     l6657:	
  9110                           
  9111                           ;cmd_parser.c: 59: else if(paramIter == 1){
  9112  06A2  0348               	decf	parseCmd@paramIter,w
  9113  06A3  0449               	iorwf	parseCmd@paramIter+1,w
  9114  06A4  1D03               	btfss	3,2
  9115  06A5  2EB4               	goto	l6661
  9116                           
  9117                           ;cmd_parser.c: 60: s->p1.paramI = atoi(p);
  9118  06A6  084A               	movf	parseCmd@p,w
  9119  06A7  3194  2446  3185   	fcall	_atoi
  9120  06AA  0020               	movlb	0	; select bank0
  9121  06AB  0A45               	incf	parseCmd@s,w
  9122  06AC  0086               	movwf	6
  9123  06AD  3001               	movlw	1	; select bank2/3
  9124  06AE  0087               	movwf	7
  9125  06AF  0837               	movf	?_atoi,w
  9126  06B0  3FC0               	movwi [0]fsr1
  9127  06B1  0838               	movf	?_atoi+1,w
  9128  06B2  3FC1               	movwi [1]fsr1
  9129                           
  9130                           ;cmd_parser.c: 61: }
  9131  06B3  2EC7               	goto	l6665
  9132  06B4                     l6661:	
  9133                           
  9134                           ;cmd_parser.c: 62: else if(paramIter == 2){
  9135  06B4  3002               	movlw	2
  9136  06B5  0648               	xorwf	parseCmd@paramIter,w
  9137  06B6  0449               	iorwf	parseCmd@paramIter+1,w
  9138  06B7  1D03               	btfss	3,2
  9139  06B8  2EC7               	goto	l6665
  9140                           
  9141                           ;cmd_parser.c: 64: s->p2.paramI = atoi(p);
  9142  06B9  084A               	movf	parseCmd@p,w
  9143  06BA  3194  2446  3185   	fcall	_atoi
  9144  06BD  0020               	movlb	0	; select bank0
  9145  06BE  0845               	movf	parseCmd@s,w
  9146  06BF  3E0B               	addlw	11
  9147  06C0  0086               	movwf	6
  9148  06C1  3001               	movlw	1	; select bank2/3
  9149  06C2  0087               	movwf	7
  9150  06C3  0837               	movf	?_atoi,w
  9151  06C4  3FC0               	movwi [0]fsr1
  9152  06C5  0838               	movf	?_atoi+1,w
  9153  06C6  3FC1               	movwi [1]fsr1
  9154  06C7                     l6665:	
  9155                           
  9156                           ;cmd_parser.c: 65: }
  9157                           ;cmd_parser.c: 67: paramIter++;
  9158  06C7  3001               	movlw	1
  9159  06C8  07C8               	addwf	parseCmd@paramIter,f
  9160  06C9  3000               	movlw	0
  9161  06CA  3DC9               	addwfc	parseCmd@paramIter+1,f
  9162  06CB  3011               	movlw	low ((STR_41+6)| (0+32768))
  9163  06CC  00BF               	movwf	strtok@s2
  9164  06CD  30AA               	movlw	high ((STR_41+6)| (0+32768))
  9165  06CE  00C0               	movwf	strtok@s2+1
  9166  06CF  3000               	movlw	0
  9167  06D0  2D38               	goto	L21
  9168  06D1                     __end_of_parseCmd:	
  9169                           
  9170                           	psect	text2
  9171  1AA7                     __ptext2:	
  9172 ;; *************** function _strtok *****************
  9173 ;; Defined at:
  9174 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtok.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;  s1              1    wreg     PTR unsigned char 
  9177 ;;		 -> readdata(20), NULL(0), 
  9178 ;;  s2              2   31[BANK0 ] PTR const unsigned char 
  9179 ;;		 -> STR_58(2), STR_57(2), 
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;  s1              1   36[BANK0 ] PTR unsigned char 
  9182 ;;		 -> readdata(20), NULL(0), 
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  1    wreg      PTR unsigned char 
  9185 ;; Registers used:
  9186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9192 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9193 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9194 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9195 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9196 ;;Total ram usage:        6 bytes
  9197 ;; Hardware stack levels used:    1
  9198 ;; Hardware stack levels required when called:    8
  9199 ;; This function calls:
  9200 ;;		_strcspn
  9201 ;;		_strspn
  9202 ;; This function is called by:
  9203 ;;		_parseCmd
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           
  9208                           ;psect for function _strtok
  9209  1AA7                     _strtok:	
  9210                           
  9211                           ;incstack = 0
  9212                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9213                           ;strtok@s1 stored from wreg
  9214  1AA7  0020               	movlb	0	; select bank0
  9215  1AA8  00C4               	movwf	strtok@s1
  9216  1AA9  0844               	movf	strtok@s1,w
  9217  1AAA  1D03               	btfss	3,2
  9218  1AAB  2AB0               	goto	l6249
  9219  1AAC  0854               	movf	strtok@sp,w
  9220  1AAD  00C1               	movwf	??_strtok
  9221  1AAE  0841               	movf	??_strtok,w
  9222  1AAF  00C4               	movwf	strtok@s1
  9223  1AB0                     l6249:	
  9224  1AB0  0844               	movf	strtok@s1,w
  9225  1AB1  1D03               	btfss	3,2
  9226  1AB2  2AB5               	goto	l6255
  9227  1AB3  3000               	movlw	0
  9228  1AB4  0008               	return
  9229  1AB5                     l6255:	
  9230  1AB5  0840               	movf	strtok@s2+1,w
  9231  1AB6  00B9               	movwf	strspn@s2+1
  9232  1AB7  083F               	movf	strtok@s2,w
  9233  1AB8  00B8               	movwf	strspn@s2
  9234  1AB9  0844               	movf	strtok@s1,w
  9235  1ABA  3198  2001  319A   	fcall	_strspn
  9236  1ABD  0020               	movlb	0	; select bank0
  9237  1ABE  0838               	movf	?_strspn,w
  9238  1ABF  00C1               	movwf	??_strtok
  9239  1AC0  0841               	movf	??_strtok,w
  9240  1AC1  07C4               	addwf	strtok@s1,f
  9241  1AC2  0844               	movf	strtok@s1,w
  9242  1AC3  0086               	movwf	6
  9243  1AC4  3001               	movlw	1	; select bank2/3
  9244  1AC5  0087               	movwf	7
  9245  1AC6  0801               	movf	1,w
  9246  1AC7  1D03               	btfss	3,2
  9247  1AC8  2ACC               	goto	l6263
  9248  1AC9  01D4               	clrf	strtok@sp
  9249  1ACA  3000               	movlw	0
  9250  1ACB  0008               	return
  9251  1ACC                     l6263:	
  9252  1ACC  0840               	movf	strtok@s2+1,w
  9253  1ACD  00B9               	movwf	strcspn@s2+1
  9254  1ACE  083F               	movf	strtok@s2,w
  9255  1ACF  00B8               	movwf	strcspn@s2
  9256  1AD0  0844               	movf	strtok@s1,w
  9257  1AD1  31A7  27D0  319A   	fcall	_strcspn
  9258  1AD4  0020               	movlb	0	; select bank0
  9259  1AD5  0838               	movf	?_strcspn,w
  9260  1AD6  00C1               	movwf	??_strtok
  9261  1AD7  0839               	movf	?_strcspn+1,w
  9262  1AD8  00C2               	movwf	??_strtok+1
  9263  1AD9  0844               	movf	strtok@s1,w
  9264  1ADA  0741               	addwf	??_strtok,w
  9265  1ADB  00C3               	movwf	??_strtok+2
  9266  1ADC  0843               	movf	??_strtok+2,w
  9267  1ADD  00D4               	movwf	strtok@sp
  9268  1ADE  0854               	movf	strtok@sp,w
  9269  1ADF  0086               	movwf	6
  9270  1AE0  3001               	movlw	1	; select bank2/3
  9271  1AE1  0087               	movwf	7
  9272  1AE2  0801               	movf	1,w
  9273  1AE3  1903               	btfsc	3,2
  9274  1AE4  2AEF               	goto	l6271
  9275  1AE5  0854               	movf	strtok@sp,w
  9276  1AE6  0086               	movwf	6
  9277  1AE7  3001               	movlw	1	; select bank2/3
  9278  1AE8  0087               	movwf	7
  9279  1AE9  0181               	clrf	1
  9280  1AEA  3001               	movlw	1
  9281  1AEB  00C1               	movwf	??_strtok
  9282  1AEC  0841               	movf	??_strtok,w
  9283  1AED  07D4               	addwf	strtok@sp,f
  9284  1AEE  2AF0               	goto	l6273
  9285  1AEF                     l6271:	
  9286  1AEF  01D4               	clrf	strtok@sp
  9287  1AF0                     l6273:	
  9288  1AF0  0844               	movf	strtok@s1,w
  9289  1AF1  0008               	return
  9290  1AF2                     __end_of_strtok:	
  9291                           
  9292                           	psect	text3
  9293  1801                     __ptext3:	
  9294 ;; *************** function _strspn *****************
  9295 ;; Defined at:
  9296 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strspn.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;  s1              1    wreg     PTR const unsigned char 
  9299 ;;		 -> readdata(20), NULL(0), 
  9300 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9301 ;;		 -> STR_58(2), STR_57(2), 
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9304 ;;		 -> readdata(20), NULL(0), 
  9305 ;;  i               2   28[BANK0 ] unsigned int 
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  2   24[BANK0 ] unsigned int 
  9308 ;; Registers used:
  9309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9315 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9316 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9317 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9318 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9319 ;;Total ram usage:        7 bytes
  9320 ;; Hardware stack levels used:    1
  9321 ;; Hardware stack levels required when called:    7
  9322 ;; This function calls:
  9323 ;;		_strchr
  9324 ;; This function is called by:
  9325 ;;		_strtok
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           
  9330                           ;psect for function _strspn
  9331  1801                     _strspn:	
  9332                           
  9333                           ;incstack = 0
  9334                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9335                           ;strspn@s1 stored from wreg
  9336  1801  0020               	movlb	0	; select bank0
  9337  1802  00BE               	movwf	strspn@s1
  9338  1803  01BC               	clrf	strspn@i
  9339  1804  01BD               	clrf	strspn@i+1
  9340  1805  280E               	goto	l5735
  9341  1806                     l5733:	
  9342  1806  3001               	movlw	1
  9343  1807  00BA               	movwf	??_strspn
  9344  1808  083A               	movf	??_strspn,w
  9345  1809  07BE               	addwf	strspn@s1,f
  9346  180A  3001               	movlw	1
  9347  180B  07BC               	addwf	strspn@i,f
  9348  180C  3000               	movlw	0
  9349  180D  3DBD               	addwfc	strspn@i+1,f
  9350  180E                     l5735:	
  9351  180E  083E               	movf	strspn@s1,w
  9352  180F  0086               	movwf	6
  9353  1810  3001               	movlw	1	; select bank2/3
  9354  1811  0087               	movwf	7
  9355  1812  0801               	movf	1,w
  9356  1813  1903               	btfsc	3,2
  9357  1814  282C               	goto	l5739
  9358  1815  0839               	movf	strspn@s2+1,w
  9359  1816  00B2               	movwf	strchr@ptr+1
  9360  1817  0838               	movf	strspn@s2,w
  9361  1818  00B1               	movwf	strchr@ptr
  9362  1819  083E               	movf	strspn@s1,w
  9363  181A  0086               	movwf	6
  9364  181B  3001               	movlw	1	; select bank2/3
  9365  181C  0087               	movwf	7
  9366  181D  0801               	movf	1,w
  9367  181E  00BA               	movwf	??_strspn
  9368  181F  01BB               	clrf	??_strspn+1
  9369  1820  083A               	movf	??_strspn,w
  9370  1821  00B3               	movwf	strchr@chr
  9371  1822  083B               	movf	??_strspn+1,w
  9372  1823  00B4               	movwf	strchr@chr+1
  9373  1824  31A4  2448  3198   	fcall	_strchr
  9374  1827  0020               	movlb	0	; select bank0
  9375  1828  0831               	movf	?_strchr,w
  9376  1829  0432               	iorwf	?_strchr+1,w
  9377  182A  1D03               	btfss	3,2
  9378  182B  2806               	goto	l5733
  9379  182C                     l5739:	
  9380  182C  083D               	movf	strspn@i+1,w
  9381  182D  00B9               	movwf	?_strspn+1
  9382  182E  083C               	movf	strspn@i,w
  9383  182F  00B8               	movwf	?_strspn
  9384  1830  0008               	return
  9385  1831                     __end_of_strspn:	
  9386                           
  9387                           	psect	text4
  9388  27D0                     __ptext4:	
  9389 ;; *************** function _strcspn *****************
  9390 ;; Defined at:
  9391 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcspn.c"
  9392 ;; Parameters:    Size  Location     Type
  9393 ;;  s1              1    wreg     PTR const unsigned char 
  9394 ;;		 -> readdata(20), NULL(0), 
  9395 ;;  s2              2   24[BANK0 ] PTR const unsigned char 
  9396 ;;		 -> STR_58(2), STR_57(2), 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  s1              1   30[BANK0 ] PTR const unsigned char 
  9399 ;;		 -> readdata(20), NULL(0), 
  9400 ;;  i               2   28[BANK0 ] unsigned int 
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  2   24[BANK0 ] unsigned int 
  9403 ;; Registers used:
  9404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9410 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9411 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9412 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9413 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9414 ;;Total ram usage:        7 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; Hardware stack levels required when called:    7
  9417 ;; This function calls:
  9418 ;;		_strchr
  9419 ;; This function is called by:
  9420 ;;		_strtok
  9421 ;; This function uses a non-reentrant model
  9422 ;;
  9423                           
  9424                           
  9425                           ;psect for function _strcspn
  9426  27D0                     _strcspn:	
  9427                           
  9428                           ;incstack = 0
  9429                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9430                           ;strcspn@s1 stored from wreg
  9431  27D0  0020               	movlb	0	; select bank0
  9432  27D1  00BE               	movwf	strcspn@s1
  9433  27D2  01BC               	clrf	strcspn@i
  9434  27D3  01BD               	clrf	strcspn@i+1
  9435  27D4  2FDD               	goto	l5747
  9436  27D5                     l5745:	
  9437  27D5  3001               	movlw	1
  9438  27D6  00BA               	movwf	??_strcspn
  9439  27D7  083A               	movf	??_strcspn,w
  9440  27D8  07BE               	addwf	strcspn@s1,f
  9441  27D9  3001               	movlw	1
  9442  27DA  07BC               	addwf	strcspn@i,f
  9443  27DB  3000               	movlw	0
  9444  27DC  3DBD               	addwfc	strcspn@i+1,f
  9445  27DD                     l5747:	
  9446  27DD  083E               	movf	strcspn@s1,w
  9447  27DE  0086               	movwf	6
  9448  27DF  3001               	movlw	1	; select bank2/3
  9449  27E0  0087               	movwf	7
  9450  27E1  0801               	movf	1,w
  9451  27E2  1903               	btfsc	3,2
  9452  27E3  2FFB               	goto	l5751
  9453  27E4  0839               	movf	strcspn@s2+1,w
  9454  27E5  00B2               	movwf	strchr@ptr+1
  9455  27E6  0838               	movf	strcspn@s2,w
  9456  27E7  00B1               	movwf	strchr@ptr
  9457  27E8  083E               	movf	strcspn@s1,w
  9458  27E9  0086               	movwf	6
  9459  27EA  3001               	movlw	1	; select bank2/3
  9460  27EB  0087               	movwf	7
  9461  27EC  0801               	movf	1,w
  9462  27ED  00BA               	movwf	??_strcspn
  9463  27EE  01BB               	clrf	??_strcspn+1
  9464  27EF  083A               	movf	??_strcspn,w
  9465  27F0  00B3               	movwf	strchr@chr
  9466  27F1  083B               	movf	??_strcspn+1,w
  9467  27F2  00B4               	movwf	strchr@chr+1
  9468  27F3  31A4  2448  31A7   	fcall	_strchr
  9469  27F6  0020               	movlb	0	; select bank0
  9470  27F7  0831               	movf	?_strchr,w
  9471  27F8  0432               	iorwf	?_strchr+1,w
  9472  27F9  1903               	btfsc	3,2
  9473  27FA  2FD5               	goto	l5745
  9474  27FB                     l5751:	
  9475  27FB  083D               	movf	strcspn@i+1,w
  9476  27FC  00B9               	movwf	?_strcspn+1
  9477  27FD  083C               	movf	strcspn@i,w
  9478  27FE  00B8               	movwf	?_strcspn
  9479  27FF  0008               	return
  9480  2800                     __end_of_strcspn:	
  9481                           
  9482                           	psect	text5
  9483  2448                     __ptext5:	
  9484 ;; *************** function _strchr *****************
  9485 ;; Defined at:
  9486 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;  ptr             2   17[BANK0 ] PTR const unsigned char 
  9489 ;;		 -> STR_58(2), STR_57(2), 
  9490 ;;  chr             2   19[BANK0 ] int 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;		None
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  2   17[BANK0 ] PTR unsigned char 
  9495 ;; Registers used:
  9496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9497 ;; Tracked objects:
  9498 ;;		On entry : 0/0
  9499 ;;		On exit  : 0/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9504 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9505 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9506 ;;Total ram usage:        7 bytes
  9507 ;; Hardware stack levels used:    1
  9508 ;; Hardware stack levels required when called:    6
  9509 ;; This function calls:
  9510 ;;		Nothing
  9511 ;; This function is called by:
  9512 ;;		_strcspn
  9513 ;;		_strspn
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           
  9518                           ;psect for function _strchr
  9519  2448                     _strchr:	
  9520  2448                     l2062:	
  9521                           ;incstack = 0
  9522                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  9523                           
  9524  2448  0020               	movlb	0	; select bank0
  9525  2449  0831               	movf	strchr@ptr,w
  9526  244A  0084               	movwf	4
  9527  244B  0832               	movf	strchr@ptr+1,w
  9528  244C  0085               	movwf	5
  9529  244D  0800               	movf	0,w	;code access
  9530  244E  0633               	xorwf	strchr@chr,w
  9531  244F  1903               	btfsc	3,2
  9532  2450  0008               	return
  9533  2451  0832               	movf	strchr@ptr+1,w
  9534  2452  00B6               	movwf	??_strchr+1
  9535  2453  0831               	movf	strchr@ptr,w
  9536  2454  00B5               	movwf	??_strchr
  9537  2455  0AB1               	incf	strchr@ptr,f
  9538  2456  1903               	skipnz
  9539  2457  0AB2               	incf	strchr@ptr+1,f
  9540  2458  0835               	movf	??_strchr,w
  9541  2459  0084               	movwf	4
  9542  245A  0836               	movf	??_strchr+1,w
  9543  245B  0085               	movwf	5
  9544  245C  0012               	moviw fsr0++
  9545  245D  1D03               	btfss	3,2
  9546  245E  2C48               	goto	l2062
  9547  245F  01B1               	clrf	?_strchr
  9548  2460  01B2               	clrf	?_strchr+1
  9549  2461  0008               	return
  9550  2462                     __end_of_strchr:	
  9551                           
  9552                           	psect	text6
  9553  1864                     __ptext6:	
  9554 ;; *************** function _stricmp *****************
  9555 ;; Defined at:
  9556 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\stricmp.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;  s1              1    wreg     PTR const unsigned char 
  9559 ;;		 -> readdata(20), NULL(0), 
  9560 ;;  s2              2   19[BANK0 ] PTR const unsigned char 
  9561 ;;		 -> STR_80(5), STR_79(5), STR_78(7), STR_77(8), 
  9562 ;;		 -> STR_76(5), STR_75(5), STR_74(11), STR_73(13), 
  9563 ;;		 -> STR_72(7), STR_71(8), STR_70(15), STR_69(14), 
  9564 ;;		 -> STR_68(12), STR_67(8), STR_66(8), STR_65(2), 
  9565 ;;		 -> STR_64(5), STR_63(5), STR_62(2), STR_61(4), 
  9566 ;;		 -> STR_60(4), STR_59(4), 
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;  s1              1   24[BANK0 ] PTR const unsigned char 
  9569 ;;		 -> readdata(20), NULL(0), 
  9570 ;;  r               1   23[BANK0 ] char 
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  2   19[BANK0 ] int 
  9573 ;; Registers used:
  9574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9580 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9581 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9582 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9583 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9584 ;;Total ram usage:        6 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; Hardware stack levels required when called:    7
  9587 ;; This function calls:
  9588 ;;		_toupper
  9589 ;; This function is called by:
  9590 ;;		_parseCmd
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           
  9595                           ;psect for function _stricmp
  9596  1864                     _stricmp:	
  9597                           
  9598                           ;incstack = 0
  9599                           ; Regs used in _stricmp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9600                           ;stricmp@s1 stored from wreg
  9601  1864  0020               	movlb	0	; select bank0
  9602  1865  00B8               	movwf	stricmp@s1
  9603  1866  286F               	goto	l6281
  9604  1867                     l6279:	
  9605  1867  3001               	movlw	1
  9606  1868  00B5               	movwf	??_stricmp
  9607  1869  0835               	movf	??_stricmp,w
  9608  186A  07B8               	addwf	stricmp@s1,f
  9609  186B  3001               	movlw	1
  9610  186C  07B3               	addwf	stricmp@s2,f
  9611  186D  3000               	movlw	0
  9612  186E  3DB4               	addwfc	stricmp@s2+1,f
  9613  186F                     l6281:	
  9614  186F  0833               	movf	stricmp@s2,w
  9615  1870  0084               	movwf	4
  9616  1871  0834               	movf	stricmp@s2+1,w
  9617  1872  0085               	movwf	5
  9618  1873  0800               	movf	0,w	;code access
  9619  1874  31A3  238F  3198   	fcall	_toupper
  9620  1877  3AFF               	xorlw	255
  9621  1878  3E01               	addlw	1
  9622  1879  0020               	movlb	0	; select bank0
  9623  187A  00B5               	movwf	??_stricmp
  9624  187B  0838               	movf	stricmp@s1,w
  9625  187C  0086               	movwf	6
  9626  187D  3001               	movlw	1	; select bank2/3
  9627  187E  0087               	movwf	7
  9628  187F  0801               	movf	1,w
  9629  1880  31A3  238F  3198   	fcall	_toupper
  9630  1883  0020               	movlb	0	; select bank0
  9631  1884  0735               	addwf	??_stricmp,w
  9632  1885  00B6               	movwf	??_stricmp+1
  9633  1886  0836               	movf	??_stricmp+1,w
  9634  1887  00B7               	movwf	stricmp@r
  9635  1888  0837               	movf	stricmp@r,w
  9636  1889  1D03               	btfss	3,2
  9637  188A  2892               	goto	l6285
  9638  188B  0838               	movf	stricmp@s1,w
  9639  188C  0086               	movwf	6
  9640  188D  3001               	movlw	1	; select bank2/3
  9641  188E  0087               	movwf	7
  9642  188F  0801               	movf	1,w
  9643  1890  1D03               	btfss	3,2
  9644  1891  2867               	goto	l6279
  9645  1892                     l6285:	
  9646  1892  0837               	movf	stricmp@r,w
  9647  1893  00B3               	movwf	?_stricmp
  9648  1894  01B4               	clrf	?_stricmp+1
  9649  1895  1BB3               	btfsc	?_stricmp,7
  9650  1896  03B4               	decf	?_stricmp+1,f
  9651  1897  0008               	return
  9652  1898                     __end_of_stricmp:	
  9653                           
  9654                           	psect	text7
  9655  238F                     __ptext7:	
  9656 ;; *************** function _toupper *****************
  9657 ;; Defined at:
  9658 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;  c               1    wreg     unsigned char 
  9661 ;; Auto vars:     Size  Location     Type
  9662 ;;  c               1   18[BANK0 ] unsigned char 
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  1    wreg      unsigned char 
  9665 ;; Registers used:
  9666 ;;		wreg, status,2, status,0
  9667 ;; Tracked objects:
  9668 ;;		On entry : 0/0
  9669 ;;		On exit  : 0/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9674 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9675 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9676 ;;Total ram usage:        2 bytes
  9677 ;; Hardware stack levels used:    1
  9678 ;; Hardware stack levels required when called:    6
  9679 ;; This function calls:
  9680 ;;		Nothing
  9681 ;; This function is called by:
  9682 ;;		_stricmp
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           
  9687                           ;psect for function _toupper
  9688  238F                     _toupper:	
  9689                           
  9690                           ;incstack = 0
  9691                           ; Regs used in _toupper: [wreg+status,2+status,0]
  9692                           ;toupper@c stored from wreg
  9693  238F  0020               	movlb	0	; select bank0
  9694  2390  00B2               	movwf	toupper@c
  9695  2391  307B               	movlw	123
  9696  2392  0232               	subwf	toupper@c,w
  9697  2393  1803               	skipnc
  9698  2394  2B9D               	goto	l5727
  9699  2395  3061               	movlw	97
  9700  2396  0232               	subwf	toupper@c,w
  9701  2397  1C03               	skipc
  9702  2398  2B9D               	goto	l5727
  9703  2399  30DF               	movlw	223
  9704  239A  00B1               	movwf	??_toupper
  9705  239B  0831               	movf	??_toupper,w
  9706  239C  05B2               	andwf	toupper@c,f
  9707  239D                     l5727:	
  9708  239D  0832               	movf	toupper@c,w
  9709  239E  0008               	return
  9710  239F                     __end_of_toupper:	
  9711                           
  9712                           	psect	text8
  9713  1446                     __ptext8:	
  9714 ;; *************** function _atoi *****************
  9715 ;; Defined at:
  9716 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  9717 ;; Parameters:    Size  Location     Type
  9718 ;;  s               1    wreg     PTR const unsigned char 
  9719 ;;		 -> readdata(20), NULL(0), 
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;  s               1   30[BANK0 ] PTR const unsigned char 
  9722 ;;		 -> readdata(20), NULL(0), 
  9723 ;;  a               2   28[BANK0 ] int 
  9724 ;;  sign            1   27[BANK0 ] unsigned char 
  9725 ;; Return value:  Size  Location     Type
  9726 ;;                  2   23[BANK0 ] int 
  9727 ;; Registers used:
  9728 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9729 ;; Tracked objects:
  9730 ;;		On entry : 0/0
  9731 ;;		On exit  : 0/0
  9732 ;;		Unchanged: 0/0
  9733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9735 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9737 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9738 ;;Total ram usage:        8 bytes
  9739 ;; Hardware stack levels used:    1
  9740 ;; Hardware stack levels required when called:    7
  9741 ;; This function calls:
  9742 ;;		___wmul
  9743 ;;		_isdigit
  9744 ;; This function is called by:
  9745 ;;		_parseCmd
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           
  9750                           ;psect for function _atoi
  9751  1446                     _atoi:	
  9752                           
  9753                           ;incstack = 0
  9754                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9755                           ;atoi@s stored from wreg
  9756  1446  0020               	movlb	0	; select bank0
  9757  1447  00BE               	movwf	atoi@s
  9758  1448                     l6293:	
  9759  1448  083E               	movf	atoi@s,w
  9760  1449  0086               	movwf	6
  9761  144A  3001               	movlw	1	; select bank2/3
  9762  144B  0087               	movwf	7
  9763  144C  3020               	movlw	32
  9764  144D  0601               	xorwf	1,w
  9765  144E  1D03               	btfss	3,2
  9766  144F  2C55               	goto	l6295
  9767  1450                     l6291:	
  9768  1450  3001               	movlw	1
  9769  1451  00B9               	movwf	??_atoi
  9770  1452  0839               	movf	??_atoi,w
  9771  1453  07BE               	addwf	atoi@s,f
  9772  1454  2C48               	goto	l6293
  9773  1455                     l6295:	
  9774  1455  083E               	movf	atoi@s,w
  9775  1456  0086               	movwf	6
  9776  1457  3001               	movlw	1	; select bank2/3
  9777  1458  0087               	movwf	7
  9778  1459  3009               	movlw	9
  9779  145A  0601               	xorwf	1,w
  9780  145B  1903               	btfsc	3,2
  9781  145C  2C50               	goto	l6291
  9782  145D  01BC               	clrf	atoi@a
  9783  145E  01BD               	clrf	atoi@a+1
  9784  145F  01BB               	clrf	atoi@sign
  9785  1460  083E               	movf	atoi@s,w
  9786  1461  0086               	movwf	6
  9787  1462  3001               	movlw	1	; select bank2/3
  9788  1463  0087               	movwf	7
  9789  1464  302D               	movlw	45
  9790  1465  0601               	xorwf	1,w
  9791  1466  1D03               	btfss	3,2
  9792  1467  2C6D               	goto	l6303
  9793  1468  3001               	movlw	1
  9794  1469  00B9               	movwf	??_atoi
  9795  146A  0839               	movf	??_atoi,w
  9796  146B  07BB               	addwf	atoi@sign,f
  9797  146C  2C75               	goto	l6309
  9798  146D                     l6303:	
  9799  146D  083E               	movf	atoi@s,w
  9800  146E  0086               	movwf	6
  9801  146F  3001               	movlw	1	; select bank2/3
  9802  1470  0087               	movwf	7
  9803  1471  302B               	movlw	43
  9804  1472  0601               	xorwf	1,w
  9805  1473  1D03               	btfss	3,2
  9806  1474  2C79               	goto	l6311
  9807  1475                     l6309:	
  9808  1475  3001               	movlw	1
  9809  1476  00B9               	movwf	??_atoi
  9810  1477  0839               	movf	??_atoi,w
  9811  1478  07BE               	addwf	atoi@s,f
  9812  1479                     l6311:	
  9813  1479  083E               	movf	atoi@s,w
  9814  147A  0086               	movwf	6
  9815  147B  3001               	movlw	1	; select bank2/3
  9816  147C  0087               	movwf	7
  9817  147D  0801               	movf	1,w
  9818  147E  31A3  2380  3194   	fcall	_isdigit
  9819  1481  1C03               	btfss	3,0
  9820  1482  2CA2               	goto	l6313
  9821  1483  0020               	movlb	0	; select bank0
  9822  1484  083D               	movf	atoi@a+1,w
  9823  1485  00B2               	movwf	___wmul@multiplier+1
  9824  1486  083C               	movf	atoi@a,w
  9825  1487  00B1               	movwf	___wmul@multiplier
  9826  1488  300A               	movlw	10
  9827  1489  00B3               	movwf	___wmul@multiplicand
  9828  148A  3000               	movlw	0
  9829  148B  00B4               	movwf	___wmul@multiplicand+1
  9830  148C  31A4  2499  3194   	fcall	___wmul
  9831  148F  0020               	movlb	0	; select bank0
  9832  1490  083E               	movf	atoi@s,w
  9833  1491  0086               	movwf	6
  9834  1492  3001               	movlw	1	; select bank2/3
  9835  1493  0087               	movwf	7
  9836  1494  0801               	movf	1,w
  9837  1495  0731               	addwf	?___wmul,w
  9838  1496  00B9               	movwf	??_atoi
  9839  1497  0832               	movf	?___wmul+1,w
  9840  1498  1803               	skipnc
  9841  1499  0A32               	incf	?___wmul+1,w
  9842  149A  00BA               	movwf	??_atoi+1
  9843  149B  0839               	movf	??_atoi,w
  9844  149C  3ED0               	addlw	208
  9845  149D  00BC               	movwf	atoi@a
  9846  149E  30FF               	movlw	255
  9847  149F  3D3A               	addwfc	??_atoi+1,w
  9848  14A0  00BD               	movwf	atoi@a+1
  9849  14A1  2C75               	goto	l6309
  9850  14A2                     l6313:	
  9851  14A2  0020               	movlb	0	; select bank0
  9852  14A3  083B               	movf	atoi@sign,w
  9853  14A4  1903               	btfsc	3,2
  9854  14A5  2CB2               	goto	l6319
  9855  14A6  093C               	comf	atoi@a,w
  9856  14A7  00B9               	movwf	??_atoi
  9857  14A8  093D               	comf	atoi@a+1,w
  9858  14A9  00BA               	movwf	??_atoi+1
  9859  14AA  0AB9               	incf	??_atoi,f
  9860  14AB  1903               	skipnz
  9861  14AC  0ABA               	incf	??_atoi+1,f
  9862  14AD  0839               	movf	??_atoi,w
  9863  14AE  00B7               	movwf	?_atoi
  9864  14AF  083A               	movf	??_atoi+1,w
  9865  14B0  00B8               	movwf	?_atoi+1
  9866  14B1  0008               	return
  9867  14B2                     l6319:	
  9868  14B2  083D               	movf	atoi@a+1,w
  9869  14B3  00B8               	movwf	?_atoi+1
  9870  14B4  083C               	movf	atoi@a,w
  9871  14B5  00B7               	movwf	?_atoi
  9872  14B6  0008               	return
  9873  14B7                     __end_of_atoi:	
  9874                           
  9875                           	psect	text9
  9876  2380                     __ptext9:	
  9877 ;; *************** function _isdigit *****************
  9878 ;; Defined at:
  9879 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  9880 ;; Parameters:    Size  Location     Type
  9881 ;;  c               1    wreg     unsigned char 
  9882 ;; Auto vars:     Size  Location     Type
  9883 ;;  c               1   18[BANK0 ] unsigned char 
  9884 ;; Return value:  Size  Location     Type
  9885 ;;		None               void
  9886 ;; Registers used:
  9887 ;;		wreg, status,2, status,0
  9888 ;; Tracked objects:
  9889 ;;		On entry : 0/0
  9890 ;;		On exit  : 0/0
  9891 ;;		Unchanged: 0/0
  9892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9894 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9896 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9897 ;;Total ram usage:        2 bytes
  9898 ;; Hardware stack levels used:    1
  9899 ;; Hardware stack levels required when called:    6
  9900 ;; This function calls:
  9901 ;;		Nothing
  9902 ;; This function is called by:
  9903 ;;		_atoi
  9904 ;; This function uses a non-reentrant model
  9905 ;;
  9906                           
  9907                           
  9908                           ;psect for function _isdigit
  9909  2380                     _isdigit:	
  9910                           
  9911                           ;incstack = 0
  9912                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9913                           ;isdigit@c stored from wreg
  9914  2380  0020               	movlb	0	; select bank0
  9915  2381  00B2               	movwf	isdigit@c
  9916  2382  01B1               	clrf	_isdigit$2153
  9917  2383  303A               	movlw	58
  9918  2384  0232               	subwf	isdigit@c,w
  9919  2385  1803               	skipnc
  9920  2386  2B8D               	goto	l5543
  9921  2387  3030               	movlw	48
  9922  2388  0232               	subwf	isdigit@c,w
  9923  2389  1C03               	skipc
  9924  238A  2B8D               	goto	l5543
  9925  238B  01B1               	clrf	_isdigit$2153
  9926  238C  0AB1               	incf	_isdigit$2153,f
  9927  238D                     l5543:	
  9928  238D  0C31               	rrf	_isdigit$2153,w
  9929  238E  0008               	return
  9930  238F                     __end_of_isdigit:	
  9931                           
  9932                           	psect	text10
  9933  2499                     __ptext10:	
  9934 ;; *************** function ___wmul *****************
  9935 ;; Defined at:
  9936 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;  multiplier      2   17[BANK0 ] unsigned int 
  9939 ;;  multiplicand    2   19[BANK0 ] unsigned int 
  9940 ;; Auto vars:     Size  Location     Type
  9941 ;;  product         2   21[BANK0 ] unsigned int 
  9942 ;; Return value:  Size  Location     Type
  9943 ;;                  2   17[BANK0 ] unsigned int 
  9944 ;; Registers used:
  9945 ;;		wreg, status,2, status,0
  9946 ;; Tracked objects:
  9947 ;;		On entry : 0/0
  9948 ;;		On exit  : 0/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9951 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9952 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9954 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9955 ;;Total ram usage:        6 bytes
  9956 ;; Hardware stack levels used:    1
  9957 ;; Hardware stack levels required when called:    6
  9958 ;; This function calls:
  9959 ;;		Nothing
  9960 ;; This function is called by:
  9961 ;;		_atoi
  9962 ;; This function uses a non-reentrant model
  9963 ;;
  9964                           
  9965                           
  9966                           ;psect for function ___wmul
  9967  2499                     ___wmul:	
  9968                           
  9969                           ;incstack = 0
  9970                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9971  2499  0020               	movlb	0	; select bank0
  9972  249A  01B5               	clrf	___wmul@product
  9973  249B  01B6               	clrf	___wmul@product+1
  9974  249C                     l5523:	
  9975  249C  1C31               	btfss	___wmul@multiplier,0
  9976  249D  2CA2               	goto	l1589
  9977  249E  0833               	movf	___wmul@multiplicand,w
  9978  249F  07B5               	addwf	___wmul@product,f
  9979  24A0  0834               	movf	___wmul@multiplicand+1,w
  9980  24A1  3DB6               	addwfc	___wmul@product+1,f
  9981  24A2                     l1589:	
  9982  24A2  3001               	movlw	1
  9983  24A3                     u4655:	
  9984  24A3  35B3               	lslf	___wmul@multiplicand,f
  9985  24A4  0DB4               	rlf	___wmul@multiplicand+1,f
  9986  24A5  0B89               	decfsz	9,f
  9987  24A6  2CA3               	goto	u4655
  9988  24A7  3001               	movlw	1
  9989  24A8                     u4665:	
  9990  24A8  36B2               	lsrf	___wmul@multiplier+1,f
  9991  24A9  0CB1               	rrf	___wmul@multiplier,f
  9992  24AA  0B89               	decfsz	9,f
  9993  24AB  2CA8               	goto	u4665
  9994  24AC  0831               	movf	___wmul@multiplier,w
  9995  24AD  0432               	iorwf	___wmul@multiplier+1,w
  9996  24AE  1D03               	btfss	3,2
  9997  24AF  2C9C               	goto	l5523
  9998  24B0  0836               	movf	___wmul@product+1,w
  9999  24B1  00B2               	movwf	?___wmul+1
 10000  24B2  0835               	movf	___wmul@product,w
 10001  24B3  00B1               	movwf	?___wmul
 10002  24B4  0008               	return
 10003  24B5                     __end_of___wmul:	
 10004                           
 10005                           	psect	text11
 10006  0B01                     __ptext11:	
 10007 ;; *************** function _main_initialize *****************
 10008 ;; Defined at:
 10009 ;;		line 185 in file "main.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;		None
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;		None
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1    wreg      void 
 10016 ;; Registers used:
 10017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10025 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10026 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10027 ;;Total ram usage:        2 bytes
 10028 ;; Hardware stack levels used:    1
 10029 ;; Hardware stack levels required when called:   15
 10030 ;; This function calls:
 10031 ;;		_LED_setBrightnessRange
 10032 ;;		_LEDsPwr
 10033 ;;		_TMR0_Load8bitPeriod
 10034 ;;		_TMR2_LoadPeriodRegister
 10035 ;;		___awtoft
 10036 ;;		___ftadd
 10037 ;;		___ftmul
 10038 ;;		___fttol
 10039 ;;		_drv_init
 10040 ;;		_printf
 10041 ;; This function is called by:
 10042 ;;		_main
 10043 ;; This function uses a non-reentrant model
 10044 ;;
 10045                           
 10046                           
 10047                           ;psect for function _main_initialize
 10048  0B01                     _main_initialize:	
 10049                           
 10050                           ;main.c: 187: LEDsPwr(LEDpower, 1);
 10051                           
 10052                           ;incstack = 0
 10053                           ; Regs used in _main_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10054  0B01  305F               	movlw	low (_LEDpower| (0+32768))
 10055  0B02  0084               	movwf	4
 10056  0B03  30AA               	movlw	high (_LEDpower| (0+32768))
 10057  0B04  0085               	movwf	5
 10058  0B05  3F00               	moviw [0]fsr0
 10059  0B06  0020               	movlb	0	; select bank0
 10060  0B07  00C4               	movwf	LEDsPwr@pwr
 10061  0B08  3F01               	moviw [1]fsr0
 10062  0B09  00C5               	movwf	LEDsPwr@pwr+1
 10063  0B0A  3001               	movlw	1
 10064  0B0B  00C6               	movwf	LEDsPwr@topOrBottom
 10065  0B0C  3000               	movlw	0
 10066  0B0D  00C7               	movwf	LEDsPwr@topOrBottom+1
 10067  0B0E  319F  2737  318B   	fcall	_LEDsPwr
 10068                           
 10069                           ;main.c: 188: LEDsPwr(LEDpower, 2);
 10070  0B11  305F               	movlw	low (_LEDpower| (0+32768))
 10071  0B12  0084               	movwf	4
 10072  0B13  30AA               	movlw	high (_LEDpower| (0+32768))
 10073  0B14  0085               	movwf	5
 10074  0B15  3F00               	moviw [0]fsr0
 10075  0B16  0020               	movlb	0	; select bank0
 10076  0B17  00C4               	movwf	LEDsPwr@pwr
 10077  0B18  3F01               	moviw [1]fsr0
 10078  0B19  00C5               	movwf	LEDsPwr@pwr+1
 10079  0B1A  3002               	movlw	2
 10080  0B1B  00C6               	movwf	LEDsPwr@topOrBottom
 10081  0B1C  3000               	movlw	0
 10082  0B1D  00C7               	movwf	LEDsPwr@topOrBottom+1
 10083  0B1E  319F  2737  318B   	fcall	_LEDsPwr
 10084                           
 10085                           ;main.c: 190: LED_setBrightnessRange(1, 1);
 10086  0B21  3001               	movlw	1
 10087  0B22  0020               	movlb	0	; select bank0
 10088  0B23  00C4               	movwf	LED_setBrightnessRange@range
 10089  0B24  3000               	movlw	0
 10090  0B25  00C5               	movwf	LED_setBrightnessRange@range+1
 10091  0B26  3001               	movlw	1
 10092  0B27  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10093  0B28  3000               	movlw	0
 10094  0B29  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10095  0B2A  318B  23DE  318B   	fcall	_LED_setBrightnessRange
 10096                           
 10097                           ;main.c: 191: LED_setBrightnessRange(1, 2);
 10098  0B2D  3001               	movlw	1
 10099  0B2E  0020               	movlb	0	; select bank0
 10100  0B2F  00C4               	movwf	LED_setBrightnessRange@range
 10101  0B30  3000               	movlw	0
 10102  0B31  00C5               	movwf	LED_setBrightnessRange@range+1
 10103  0B32  3002               	movlw	2
 10104  0B33  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 10105  0B34  3000               	movlw	0
 10106  0B35  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 10107  0B36  318B  23DE  318B   	fcall	_LED_setBrightnessRange
 10108                           
 10109                           ;main.c: 192: do { LATCbits.LATC1 = 1; } while(0);
 10110  0B39  0022               	movlb	2	; select bank2
 10111  0B3A  148E               	bsf	14,1	;volatile
 10112                           
 10113                           ;main.c: 195: TMR2_LoadPeriodRegister((heater_post_time_ms*TMR2_RANGE)-1);
 10114  0B3B  0021               	movlb	1	; select bank1
 10115  0B3C  086C               	movf	(_heater_post_time_ms+1)^(0+128),w
 10116  0B3D  0020               	movlb	0	; select bank0
 10117  0B3E  00BA               	movwf	___awtoft@c+1
 10118  0B3F  0021               	movlb	1	; select bank1
 10119  0B40  086B               	movf	_heater_post_time_ms^(0+128),w
 10120  0B41  0020               	movlb	0	; select bank0
 10121  0B42  00B9               	movwf	___awtoft@c
 10122  0B43  31A5  25CE  318B   	fcall	___awtoft
 10123  0B46  0020               	movlb	0	; select bank0
 10124  0B47  0839               	movf	?___awtoft,w
 10125  0B48  00C2               	movwf	___ftmul@f2
 10126  0B49  083A               	movf	?___awtoft+1,w
 10127  0B4A  00C3               	movwf	___ftmul@f2+1
 10128  0B4B  083B               	movf	?___awtoft+2,w
 10129  0B4C  00C4               	movwf	___ftmul@f2+2
 10130  0B4D  3053               	movlw	low (_TMR2_RANGE| (0+32768))
 10131  0B4E  0084               	movwf	4
 10132  0B4F  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
 10133  0B50  0085               	movwf	5
 10134  0B51  3F00               	moviw [0]fsr0
 10135  0B52  00BF               	movwf	___ftmul@f1
 10136  0B53  3F01               	moviw [1]fsr0
 10137  0B54  00C0               	movwf	___ftmul@f1+1
 10138  0B55  3F02               	moviw [2]fsr0
 10139  0B56  00C1               	movwf	___ftmul@f1+2
 10140  0B57  318C  24BC  318B   	fcall	___ftmul
 10141  0B5A  0020               	movlb	0	; select bank0
 10142  0B5B  083F               	movf	?___ftmul,w
 10143  0B5C  0021               	movlb	1	; select bank1
 10144  0B5D  00A9               	movwf	___ftadd@f2^(0+128)
 10145  0B5E  0020               	movlb	0	; select bank0
 10146  0B5F  0840               	movf	?___ftmul+1,w
 10147  0B60  0021               	movlb	1	; select bank1
 10148  0B61  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 10149  0B62  0020               	movlb	0	; select bank0
 10150  0B63  0841               	movf	?___ftmul+2,w
 10151  0B64  0021               	movlb	1	; select bank1
 10152  0B65  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 10153  0B66  3000               	movlw	0
 10154  0B67  00A6               	movwf	___ftadd@f1^(0+128)
 10155  0B68  3080               	movlw	128
 10156  0B69  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 10157  0B6A  30BF               	movlw	191
 10158  0B6B  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 10159  0B6C  3186  26D1  318B   	fcall	___ftadd
 10160  0B6F  0021               	movlb	1	; select bank1
 10161  0B70  0826               	movf	?___ftadd^(0+128),w
 10162  0B71  00AF               	movwf	___fttol@f1^(0+128)
 10163  0B72  0827               	movf	(?___ftadd+1)^(0+128),w
 10164  0B73  00B0               	movwf	(___fttol@f1+1)^(0+128)
 10165  0B74  0828               	movf	(?___ftadd+2)^(0+128),w
 10166  0B75  00B1               	movwf	(___fttol@f1+2)^(0+128)
 10167  0B76  3188  2092  318B   	fcall	___fttol
 10168  0B79  0021               	movlb	1	; select bank1
 10169  0B7A  082F               	movf	?___fttol^(0+128),w
 10170  0B7B  31A2  2224  318B   	fcall	_TMR2_LoadPeriodRegister
 10171                           
 10172                           ;main.c: 196: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 10173  0B7E  0021               	movlb	1	; select bank1
 10174  0B7F  096D               	comf	_heater_pre_time_ms^(0+128),w
 10175  0B80  00BD               	movwf	??_main_initialize^(0+128)
 10176  0B81  096E               	comf	(_heater_pre_time_ms+1)^(0+128),w
 10177  0B82  00BE               	movwf	(??_main_initialize^(0+128)+1)
 10178  0B83  0ABD               	incf	??_main_initialize^(0+128),f
 10179  0B84  1903               	skipnz
 10180  0B85  0ABE               	incf	(??_main_initialize^(0+128)+1),f
 10181  0B86  0869               	movf	_piezo_on_time_ms^(0+128),w
 10182  0B87  073D               	addwf	??_main_initialize^(0+128),w
 10183  0B88  0020               	movlb	0	; select bank0
 10184  0B89  00B9               	movwf	___awtoft@c
 10185  0B8A  0021               	movlb	1	; select bank1
 10186  0B8B  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 10187  0B8C  3D3E               	addwfc	(??_main_initialize+1)^(0+128),w
 10188  0B8D  0020               	movlb	0	; select bank0
 10189  0B8E  00BA               	movwf	___awtoft@c+1
 10190  0B8F  31A5  25CE  318B   	fcall	___awtoft
 10191  0B92  0020               	movlb	0	; select bank0
 10192  0B93  0839               	movf	?___awtoft,w
 10193  0B94  00C2               	movwf	___ftmul@f2
 10194  0B95  083A               	movf	?___awtoft+1,w
 10195  0B96  00C3               	movwf	___ftmul@f2+1
 10196  0B97  083B               	movf	?___awtoft+2,w
 10197  0B98  00C4               	movwf	___ftmul@f2+2
 10198  0B99  3056               	movlw	low (_TMR0_RANGE| (0+32768))
 10199  0B9A  0084               	movwf	4
 10200  0B9B  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 10201  0B9C  0085               	movwf	5
 10202  0B9D  3F00               	moviw [0]fsr0
 10203  0B9E  00BF               	movwf	___ftmul@f1
 10204  0B9F  3F01               	moviw [1]fsr0
 10205  0BA0  00C0               	movwf	___ftmul@f1+1
 10206  0BA1  3F02               	moviw [2]fsr0
 10207  0BA2  00C1               	movwf	___ftmul@f1+2
 10208  0BA3  318C  24BC  318B   	fcall	___ftmul
 10209  0BA6  0020               	movlb	0	; select bank0
 10210  0BA7  083F               	movf	?___ftmul,w
 10211  0BA8  0021               	movlb	1	; select bank1
 10212  0BA9  00A9               	movwf	___ftadd@f2^(0+128)
 10213  0BAA  0020               	movlb	0	; select bank0
 10214  0BAB  0840               	movf	?___ftmul+1,w
 10215  0BAC  0021               	movlb	1	; select bank1
 10216  0BAD  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 10217  0BAE  0020               	movlb	0	; select bank0
 10218  0BAF  0841               	movf	?___ftmul+2,w
 10219  0BB0  0021               	movlb	1	; select bank1
 10220  0BB1  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 10221  0BB2  3000               	movlw	0
 10222  0BB3  00A6               	movwf	___ftadd@f1^(0+128)
 10223  0BB4  3080               	movlw	128
 10224  0BB5  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 10225  0BB6  30BF               	movlw	191
 10226  0BB7  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 10227  0BB8  3186  26D1  318B   	fcall	___ftadd
 10228  0BBB  0021               	movlb	1	; select bank1
 10229  0BBC  0826               	movf	?___ftadd^(0+128),w
 10230  0BBD  00AF               	movwf	___fttol@f1^(0+128)
 10231  0BBE  0827               	movf	(?___ftadd+1)^(0+128),w
 10232  0BBF  00B0               	movwf	(___fttol@f1+1)^(0+128)
 10233  0BC0  0828               	movf	(?___ftadd+2)^(0+128),w
 10234  0BC1  00B1               	movwf	(___fttol@f1+2)^(0+128)
 10235  0BC2  3188  2092  318B   	fcall	___fttol
 10236  0BC5  0021               	movlb	1	; select bank1
 10237  0BC6  082F               	movf	?___fttol^(0+128),w
 10238  0BC7  31A2  221F  318B   	fcall	_TMR0_Load8bitPeriod
 10239                           
 10240                           ;main.c: 199: drv_init(0x03, 0x0c);
 10241  0BCA  3003               	movlw	3
 10242  0BCB  0021               	movlb	1	; select bank1
 10243  0BCC  00B6               	movwf	drv_init@output_gain^(0+128)
 10244  0BCD  3000               	movlw	0
 10245  0BCE  00B7               	movwf	(drv_init@output_gain^(0+128)+1)
 10246  0BCF  300C               	movlw	12
 10247  0BD0  00B8               	movwf	drv_init@idle_timeout^(0+128)
 10248  0BD1  3000               	movlw	0
 10249  0BD2  00B9               	movwf	(drv_init@idle_timeout^(0+128)+1)
 10250  0BD3  319E  26D4  318B   	fcall	_drv_init
 10251                           
 10252                           ;main.c: 200: printf("initialized\n");
 10253  0BD6  3003               	movlw	low ((STR_52+4)| (0+32768))
 10254  0BD7  0021               	movlb	1	; select bank1
 10255  0BD8  00A0               	movwf	printf@f^(0+128)
 10256  0BD9  30A9               	movlw	high ((STR_52+4)| (0+32768))
 10257  0BDA  00A1               	movwf	(printf@f^(0+128)+1)
 10258  0BDB  318E  26CE         	fcall	_printf
 10259  0BDD  0008               	return
 10260  0BDE                     __end_of_main_initialize:	
 10261                           
 10262                           	psect	text12
 10263  1ED4                     __ptext12:	
 10264 ;; *************** function _drv_init *****************
 10265 ;; Defined at:
 10266 ;;		line 3 in file "drv2665.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;  output_gain     2   22[BANK1 ] int 
 10269 ;;  idle_timeout    2   24[BANK1 ] int 
 10270 ;; Auto vars:     Size  Location     Type
 10271 ;;		None
 10272 ;; Return value:  Size  Location     Type
 10273 ;;                  1    wreg      void 
 10274 ;; Registers used:
 10275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10276 ;; Tracked objects:
 10277 ;;		On entry : 0/0
 10278 ;;		On exit  : 0/0
 10279 ;;		Unchanged: 0/0
 10280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10281 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10283 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10284 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10285 ;;Total ram usage:        5 bytes
 10286 ;; Hardware stack levels used:    1
 10287 ;; Hardware stack levels required when called:   14
 10288 ;; This function calls:
 10289 ;;		_drv_reset
 10290 ;;		_drv_write
 10291 ;;		_i2c_open
 10292 ;;		_i2c_setAddress
 10293 ;;		_printf
 10294 ;; This function is called by:
 10295 ;;		_main_initialize
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299                           
 10300                           ;psect for function _drv_init
 10301  1ED4                     _drv_init:	
 10302                           
 10303                           ;drv2665.c: 5: i2c_setAddress(drv_address);
 10304                           
 10305                           ;incstack = 0
 10306                           ; Regs used in _drv_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10307  1ED4  3067               	movlw	low (_drv_address| (0+32768))
 10308  1ED5  0084               	movwf	4
 10309  1ED6  30AA               	movlw	high (_drv_address| (0+32768))
 10310  1ED7  0085               	movwf	5
 10311  1ED8  0800               	movf	0,w	;code access
 10312  1ED9  31A2  22A3  319E   	fcall	_i2c_setAddress
 10313                           
 10314                           ;drv2665.c: 6: i2c_open(drv_address);
 10315  1EDC  3067               	movlw	low (_drv_address| (0+32768))
 10316  1EDD  0084               	movwf	4
 10317  1EDE  30AA               	movlw	high (_drv_address| (0+32768))
 10318  1EDF  0085               	movwf	5
 10319  1EE0  0800               	movf	0,w	;code access
 10320  1EE1  319A  22F2  319E   	fcall	_i2c_open
 10321                           
 10322                           ;drv2665.c: 7: _delay((unsigned long)((10)*(1000000/4000.0)));
 10323  1EE4  3004               	movlw	4
 10324  1EE5  0021               	movlb	1	; select bank1
 10325  1EE6  00BA               	movwf	??_drv_init^(0+128)
 10326  1EE7  303D               	movlw	61
 10327  1EE8                     u9057:	
 10328  1EE8  0B89               	decfsz	9,f
 10329  1EE9  2EE8               	goto	u9057
 10330  1EEA  0BBA               	decfsz	??_drv_init^(0+128),f
 10331  1EEB  2EE8               	goto	u9057
 10332  1EEC  3200               	nop2
 10333                           
 10334                           ;drv2665.c: 9: drv_reset();
 10335  1EED  31A2  22FF  319E   	fcall	_drv_reset
 10336                           
 10337                           ;drv2665.c: 10: _delay((unsigned long)((10)*(1000000/4000.0)));
 10338  1EF0  3004               	movlw	4
 10339  1EF1  0021               	movlb	1	; select bank1
 10340  1EF2  00BA               	movwf	??_drv_init^(0+128)
 10341  1EF3  303D               	movlw	61
 10342  1EF4                     u9067:	
 10343  1EF4  0B89               	decfsz	9,f
 10344  1EF5  2EF4               	goto	u9067
 10345  1EF6  0BBA               	decfsz	??_drv_init^(0+128),f
 10346  1EF7  2EF4               	goto	u9067
 10347  1EF8  3200               	nop2
 10348                           
 10349                           ;drv2665.c: 11: drv_write(0x02, 0);
 10350  1EF9  0020               	movlb	0	; select bank0
 10351  1EFA  01C9               	clrf	drv_write@data
 10352  1EFB  3002               	movlw	2
 10353  1EFC  31A6  265B  319E   	fcall	_drv_write
 10354                           
 10355                           ;drv2665.c: 12: _delay((unsigned long)((10)*(1000000/4000.0)));
 10356  1EFF  3004               	movlw	4
 10357  1F00  0021               	movlb	1	; select bank1
 10358  1F01  00BA               	movwf	??_drv_init^(0+128)
 10359  1F02  303D               	movlw	61
 10360  1F03                     u9077:	
 10361  1F03  0B89               	decfsz	9,f
 10362  1F04  2F03               	goto	u9077
 10363  1F05  0BBA               	decfsz	??_drv_init^(0+128),f
 10364  1F06  2F03               	goto	u9077
 10365  1F07  3200               	nop2
 10366                           
 10367                           ;drv2665.c: 13: drv_write(0x01, 0x38 | output_gain);
 10368  1F08  0021               	movlb	1	; select bank1
 10369  1F09  0836               	movf	drv_init@output_gain^(0+128),w
 10370  1F0A  3838               	iorlw	56
 10371  1F0B  00BA               	movwf	??_drv_init^(0+128)
 10372  1F0C  083A               	movf	??_drv_init^(0+128),w
 10373  1F0D  0020               	movlb	0	; select bank0
 10374  1F0E  00C9               	movwf	drv_write@data
 10375  1F0F  3001               	movlw	1
 10376  1F10  31A6  265B  319E   	fcall	_drv_write
 10377                           
 10378                           ;drv2665.c: 15: _delay((unsigned long)((10)*(1000000/4000.0)));
 10379  1F13  3004               	movlw	4
 10380  1F14  0021               	movlb	1	; select bank1
 10381  1F15  00BA               	movwf	??_drv_init^(0+128)
 10382  1F16  303D               	movlw	61
 10383  1F17                     u9087:	
 10384  1F17  0B89               	decfsz	9,f
 10385  1F18  2F17               	goto	u9087
 10386  1F19  0BBA               	decfsz	??_drv_init^(0+128),f
 10387  1F1A  2F17               	goto	u9087
 10388  1F1B  3200               	nop2
 10389                           
 10390                           ;drv2665.c: 16: drv_write(0x02, idle_timeout);
 10391  1F1C  0021               	movlb	1	; select bank1
 10392  1F1D  0838               	movf	drv_init@idle_timeout^(0+128),w
 10393  1F1E  00BA               	movwf	??_drv_init^(0+128)
 10394  1F1F  083A               	movf	??_drv_init^(0+128),w
 10395  1F20  0020               	movlb	0	; select bank0
 10396  1F21  00C9               	movwf	drv_write@data
 10397  1F22  3002               	movlw	2
 10398  1F23  31A6  265B  319E   	fcall	_drv_write
 10399                           
 10400                           ;drv2665.c: 18: _delay((unsigned long)((10)*(1000000/4000.0)));
 10401  1F26  3004               	movlw	4
 10402  1F27  0021               	movlb	1	; select bank1
 10403  1F28  00BA               	movwf	??_drv_init^(0+128)
 10404  1F29  303D               	movlw	61
 10405  1F2A                     u9097:	
 10406  1F2A  0B89               	decfsz	9,f
 10407  1F2B  2F2A               	goto	u9097
 10408  1F2C  0BBA               	decfsz	??_drv_init^(0+128),f
 10409  1F2D  2F2A               	goto	u9097
 10410  1F2E  3200               	nop2
 10411                           
 10412                           ;drv2665.c: 20: printf("drv initialized\n");
 10413  1F2F  30FF               	movlw	low (STR_52| (0+32768))
 10414  1F30  0021               	movlb	1	; select bank1
 10415  1F31  00A0               	movwf	printf@f^(0+128)
 10416  1F32  30A8               	movlw	high (STR_52| (0+32768))
 10417  1F33  00A1               	movwf	(printf@f^(0+128)+1)
 10418  1F34  318E  26CE         	fcall	_printf
 10419  1F36  0008               	return
 10420  1F37                     __end_of_drv_init:	
 10421                           
 10422                           	psect	text13
 10423  22A3                     __ptext13:	
 10424 ;; *************** function _i2c_setAddress *****************
 10425 ;; Defined at:
 10426 ;;		line 156 in file "mcc_generated_files/drivers/i2c_master.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;  address         1    wreg     unsigned char 
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;  address         1   18[BANK0 ] unsigned char 
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  1    wreg      void 
 10433 ;; Registers used:
 10434 ;;		wreg
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10442 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10443 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10444 ;;Total ram usage:        2 bytes
 10445 ;; Hardware stack levels used:    1
 10446 ;; Hardware stack levels required when called:    6
 10447 ;; This function calls:
 10448 ;;		Nothing
 10449 ;; This function is called by:
 10450 ;;		_drv_init
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454                           
 10455                           ;psect for function _i2c_setAddress
 10456  22A3                     _i2c_setAddress:	
 10457                           
 10458                           ;incstack = 0
 10459                           ; Regs used in _i2c_setAddress: [wreg]
 10460                           ;i2c_setAddress@address stored from wreg
 10461  22A3  0020               	movlb	0	; select bank0
 10462  22A4  00B2               	movwf	i2c_setAddress@address
 10463                           
 10464                           ;i2c_master.c: 158: i2c_status.address = address;
 10465  22A5  0832               	movf	i2c_setAddress@address,w
 10466  22A6  00B1               	movwf	??_i2c_setAddress
 10467  22A7  0831               	movf	??_i2c_setAddress,w
 10468  22A8  0022               	movlb	2	; select bank2
 10469  22A9  00A1               	movwf	(_i2c_status^(0+256)+1)
 10470  22AA  0008               	return
 10471  22AB                     __end_of_i2c_setAddress:	
 10472                           
 10473                           	psect	text14
 10474  1AF2                     __ptext14:	
 10475 ;; *************** function _i2c_open *****************
 10476 ;; Defined at:
 10477 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;  address         1    wreg     unsigned char 
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;  address         1   21[BANK0 ] unsigned char 
 10482 ;;  ret             1   20[BANK0 ] enum E8193
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  1    wreg      enum E8193
 10485 ;; Registers used:
 10486 ;;		wreg, status,2, status,0, pclath, cstack
 10487 ;; Tracked objects:
 10488 ;;		On entry : 0/0
 10489 ;;		On exit  : 0/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10493 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10495 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10496 ;;Total ram usage:        3 bytes
 10497 ;; Hardware stack levels used:    1
 10498 ;; Hardware stack levels required when called:    7
 10499 ;; This function calls:
 10500 ;;		_i2c1_driver_open
 10501 ;;		_i2c1_driver_setBusCollisionISR
 10502 ;;		_i2c1_driver_setI2cISR
 10503 ;;		_mssp1_clearIRQ
 10504 ;; This function is called by:
 10505 ;;		_drv_init
 10506 ;; This function uses a non-reentrant model
 10507 ;;
 10508                           
 10509                           
 10510                           ;psect for function _i2c_open
 10511  1AF2                     _i2c_open:	
 10512                           
 10513                           ;incstack = 0
 10514                           ; Regs used in _i2c_open: [wreg+status,2+status,0+pclath+cstack]
 10515                           ;i2c_open@address stored from wreg
 10516  1AF2  0020               	movlb	0	; select bank0
 10517  1AF3  00B5               	movwf	i2c_open@address
 10518                           
 10519                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
 10520  1AF4  01B4               	clrf	i2c_open@ret
 10521  1AF5  0AB4               	incf	i2c_open@ret,f
 10522                           
 10523                           ;i2c_master.c: 120: if(!i2c_status.inUse)
 10524  1AF6  0022               	movlb	2	; select bank2
 10525  1AF7  18A0               	btfsc	_i2c_status^(0+256),1
 10526  1AF8  0008               	return
 10527                           
 10528                           ;i2c_master.c: 121: {
 10529                           ;i2c_master.c: 122: i2c_status.address = address;
 10530  1AF9  0020               	movlb	0	; select bank0
 10531  1AFA  0835               	movf	i2c_open@address,w
 10532  1AFB  00B3               	movwf	??_i2c_open
 10533  1AFC  0833               	movf	??_i2c_open,w
 10534  1AFD  0022               	movlb	2	; select bank2
 10535  1AFE  00A1               	movwf	(_i2c_status^(0+256)+1)
 10536                           
 10537                           ;i2c_master.c: 123: i2c_status.busy = 0;
 10538  1AFF  1020               	bcf	_i2c_status^(0+256),0
 10539                           
 10540                           ;i2c_master.c: 124: i2c_status.inUse = 1;
 10541  1B00  14A0               	bsf	_i2c_status^(0+256),1
 10542                           
 10543                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
 10544  1B01  11A0               	bcf	_i2c_status^(0+256),3
 10545                           
 10546                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
 10547  1B02  300E               	movlw	14
 10548  1B03  0020               	movlb	0	; select bank0
 10549  1B04  00B3               	movwf	??_i2c_open
 10550  1B05  0833               	movf	??_i2c_open,w
 10551  1B06  0022               	movlb	2	; select bank2
 10552  1B07  00AA               	movwf	(_i2c_status^(0+256)+10)
 10553                           
 10554                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
 10555  1B08  30F4               	movlw	244
 10556  1B09  00A8               	movwf	(_i2c_status^(0+256)+8)
 10557  1B0A  3001               	movlw	1
 10558  1B0B  00A9               	movwf	(_i2c_status^(0+256)+9)
 10559                           
 10560                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
 10561  1B0C  1520               	bsf	_i2c_status^(0+256),2
 10562                           
 10563                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
 10564  1B0D  302F               	movlw	low _returnStop
 10565  1B0E  00AC               	movwf	(low ((_i2c_status| (0+256)+12)))^0
 10566  1B0F  3022               	movlw	high _returnStop
 10567  1B10  00AD               	movwf	((low ((_i2c_status| (0+256)+12)))^0+1)
 10568                           
 10569                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
 10570  1B11  01B8               	clrf	(low ((_i2c_status| (0+256)+24)))^0
 10571                           
 10572                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
 10573  1B12  302F               	movlw	low _returnStop
 10574  1B13  00AE               	movwf	(low ((_i2c_status| (0+256)+14)))^0
 10575  1B14  3022               	movlw	high _returnStop
 10576  1B15  00AF               	movwf	((low ((_i2c_status| (0+256)+14)))^0+1)
 10577                           
 10578                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
 10579  1B16  01B9               	clrf	(low ((_i2c_status| (0+256)+25)))^0
 10580                           
 10581                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
 10582  1B17  302F               	movlw	low _returnStop
 10583  1B18  00B0               	movwf	(low ((_i2c_status| (0+256)+16)))^0
 10584  1B19  3022               	movlw	high _returnStop
 10585  1B1A  00B1               	movwf	((low ((_i2c_status| (0+256)+16)))^0+1)
 10586                           
 10587                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
 10588  1B1B  01BA               	clrf	(low ((_i2c_status| (0+256)+26)))^0
 10589                           
 10590                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
 10591  1B1C  302F               	movlw	low _returnStop
 10592  1B1D  00B2               	movwf	(low ((_i2c_status| (0+256)+18)))^0
 10593  1B1E  3022               	movlw	high _returnStop
 10594  1B1F  00B3               	movwf	((low ((_i2c_status| (0+256)+18)))^0+1)
 10595                           
 10596                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
 10597  1B20  01BB               	clrf	(low ((_i2c_status| (0+256)+27)))^0
 10598                           
 10599                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
 10600  1B21  3035               	movlw	low _returnReset
 10601  1B22  00B4               	movwf	(low ((_i2c_status| (0+256)+20)))^0
 10602  1B23  3022               	movlw	high _returnReset
 10603  1B24  00B5               	movwf	((low ((_i2c_status| (0+256)+20)))^0+1)
 10604                           
 10605                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
 10606  1B25  01BC               	clrf	(low ((_i2c_status| (0+256)+28)))^0
 10607                           
 10608                           ;i2c_master.c: 142: i2c1_driver_open();
 10609  1B26  31A3  2309  319A   	fcall	_i2c1_driver_open
 10610                           
 10611                           ;i2c_master.c: 143: mssp1_clearIRQ();
 10612  1B29  31A1  21D4  319A   	fcall	_mssp1_clearIRQ
 10613                           
 10614                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
 10615  1B2C  30A7               	movlw	low _i2c_busCollisionISR
 10616  1B2D  0020               	movlb	0	; select bank0
 10617  1B2E  00B1               	movwf	i2c1_driver_setBusCollisionISR@f
 10618  1B2F  3021               	movlw	high _i2c_busCollisionISR
 10619  1B30  00B2               	movwf	i2c1_driver_setBusCollisionISR@f+1
 10620  1B31  31A2  22CF  319A   	fcall	_i2c1_driver_setBusCollisionISR
 10621                           
 10622                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
 10623  1B34  30A4               	movlw	low _i2c_ISR
 10624  1B35  0020               	movlb	0	; select bank0
 10625  1B36  00B1               	movwf	i2c1_driver_setI2cISR@f
 10626  1B37  3026               	movlw	high _i2c_ISR
 10627  1B38  00B2               	movwf	i2c1_driver_setI2cISR@f+1
 10628  1B39  31A2  22D8         	fcall	_i2c1_driver_setI2cISR
 10629                           
 10630                           ;i2c_master.c: 151: ret = I2C_NOERR;
 10631  1B3B  0020               	movlb	0	; select bank0
 10632  1B3C  01B4               	clrf	i2c_open@ret
 10633  1B3D  0008               	return
 10634  1B3E                     __end_of_i2c_open:	
 10635                           ;i2c_master.c: 152: }
 10636                           ;i2c_master.c: 153: return ret;
 10637                           ;	Return value of _i2c_open is never used
 10638                           
 10639                           
 10640                           	psect	text15
 10641  22D8                     __ptext15:	
 10642 ;; *************** function _i2c1_driver_setI2cISR *****************
 10643 ;; Defined at:
 10644 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;  f               2   17[BANK0 ] PTR void 
 10647 ;;		 -> i2c_ISR(1), 
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;		None
 10650 ;; Return value:  Size  Location     Type
 10651 ;;                  1    wreg      void 
 10652 ;; Registers used:
 10653 ;;		wreg
 10654 ;; Tracked objects:
 10655 ;;		On entry : 0/0
 10656 ;;		On exit  : 0/0
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10659 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10662 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10663 ;;Total ram usage:        2 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; Hardware stack levels required when called:    6
 10666 ;; This function calls:
 10667 ;;		Nothing
 10668 ;; This function is called by:
 10669 ;;		_i2c_open
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673                           
 10674                           ;psect for function _i2c1_driver_setI2cISR
 10675  22D8                     _i2c1_driver_setI2cISR:	
 10676                           
 10677                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
 10678                           
 10679                           ;incstack = 0
 10680                           ; Regs used in _i2c1_driver_setI2cISR: [wreg]
 10681  22D8  0020               	movlb	0	; select bank0
 10682  22D9  0832               	movf	i2c1_driver_setI2cISR@f+1,w
 10683  22DA  0022               	movlb	2	; select bank2
 10684  22DB  00E9               	movwf	(_i2c1_driver_i2cISR+1)^(0+256)
 10685  22DC  0020               	movlb	0	; select bank0
 10686  22DD  0831               	movf	i2c1_driver_setI2cISR@f,w
 10687  22DE  0022               	movlb	2	; select bank2
 10688  22DF  00E8               	movwf	_i2c1_driver_i2cISR^(0+256)
 10689  22E0  0008               	return
 10690  22E1                     __end_of_i2c1_driver_setI2cISR:	
 10691                           
 10692                           	psect	text16
 10693  22CF                     __ptext16:	
 10694 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
 10695 ;; Defined at:
 10696 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
 10697 ;; Parameters:    Size  Location     Type
 10698 ;;  f               2   17[BANK0 ] PTR void 
 10699 ;;		 -> i2c_busCollisionISR(1), 
 10700 ;; Auto vars:     Size  Location     Type
 10701 ;;		None
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  1    wreg      void 
 10704 ;; Registers used:
 10705 ;;		wreg
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10711 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10714 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10715 ;;Total ram usage:        2 bytes
 10716 ;; Hardware stack levels used:    1
 10717 ;; Hardware stack levels required when called:    6
 10718 ;; This function calls:
 10719 ;;		Nothing
 10720 ;; This function is called by:
 10721 ;;		_i2c_open
 10722 ;; This function uses a non-reentrant model
 10723 ;;
 10724                           
 10725                           
 10726                           ;psect for function _i2c1_driver_setBusCollisionISR
 10727  22CF                     _i2c1_driver_setBusCollisionISR:	
 10728                           
 10729                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
 10730                           
 10731                           ;incstack = 0
 10732                           ; Regs used in _i2c1_driver_setBusCollisionISR: [wreg]
 10733  22CF  0020               	movlb	0	; select bank0
 10734  22D0  0832               	movf	i2c1_driver_setBusCollisionISR@f+1,w
 10735  22D1  0022               	movlb	2	; select bank2
 10736  22D2  00EB               	movwf	(_i2c1_driver_busCollisionISR+1)^(0+256)
 10737  22D3  0020               	movlb	0	; select bank0
 10738  22D4  0831               	movf	i2c1_driver_setBusCollisionISR@f,w
 10739  22D5  0022               	movlb	2	; select bank2
 10740  22D6  00EA               	movwf	_i2c1_driver_busCollisionISR^(0+256)
 10741  22D7  0008               	return
 10742  22D8                     __end_of_i2c1_driver_setBusCollisionISR:	
 10743                           
 10744                           	psect	text17
 10745  2309                     __ptext17:	
 10746 ;; *************** function _i2c1_driver_open *****************
 10747 ;; Defined at:
 10748 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;		None
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;		None
 10753 ;; Return value:  Size  Location     Type
 10754 ;;		None               void
 10755 ;; Registers used:
 10756 ;;		wreg, status,2
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10766 ;;Total ram usage:        0 bytes
 10767 ;; Hardware stack levels used:    1
 10768 ;; Hardware stack levels required when called:    6
 10769 ;; This function calls:
 10770 ;;		Nothing
 10771 ;; This function is called by:
 10772 ;;		_i2c_open
 10773 ;; This function uses a non-reentrant model
 10774 ;;
 10775                           
 10776                           
 10777                           ;psect for function _i2c1_driver_open
 10778  2309                     _i2c1_driver_open:	
 10779                           
 10780                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 10781                           
 10782                           ;incstack = 0
 10783                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 10784  2309  0024               	movlb	4	; select bank4
 10785  230A  1A95               	btfsc	21,5	;volatile
 10786  230B  0008               	return
 10787                           
 10788                           ;i2c1_driver.c: 86: {
 10789                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
 10790  230C  0194               	clrf	20	;volatile
 10791                           
 10792                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 10793  230D  3028               	movlw	40
 10794  230E  0095               	movwf	21	;volatile
 10795                           
 10796                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 10797  230F  0196               	clrf	22	;volatile
 10798                           
 10799                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 10800  2310  3003               	movlw	3
 10801  2311  0092               	movwf	18	;volatile
 10802                           
 10803                           ;i2c1_driver.c: 93: else
 10804                           ;i2c1_driver.c: 94: return 0;
 10805                           ;	Return value of _i2c1_driver_open is never used
 10806                           
 10807                           ;i2c1_driver.c: 92: }
 10808                           
 10809                           ;i2c1_driver.c: 91: return 1;
 10810                           ;	Return value of _i2c1_driver_open is never used
 10811  2312  0008               	return
 10812  2313                     __end_of_i2c1_driver_open:	
 10813                           
 10814                           	psect	text18
 10815  22FF                     __ptext18:	
 10816 ;; *************** function _drv_reset *****************
 10817 ;; Defined at:
 10818 ;;		line 23 in file "drv2665.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;		None
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;		None
 10823 ;; Return value:  Size  Location     Type
 10824 ;;                  1    wreg      void 
 10825 ;; Registers used:
 10826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10827 ;; Tracked objects:
 10828 ;;		On entry : 0/0
 10829 ;;		On exit  : 0/0
 10830 ;;		Unchanged: 0/0
 10831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10834 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10835 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10836 ;;Total ram usage:        1 bytes
 10837 ;; Hardware stack levels used:    1
 10838 ;; Hardware stack levels required when called:   13
 10839 ;; This function calls:
 10840 ;;		_drv_write
 10841 ;; This function is called by:
 10842 ;;		_drv_init
 10843 ;; This function uses a non-reentrant model
 10844 ;;
 10845                           
 10846                           
 10847                           ;psect for function _drv_reset
 10848  22FF                     _drv_reset:	
 10849                           
 10850                           ;drv2665.c: 24: drv_write(0x02, 0x80);
 10851                           
 10852                           ;incstack = 0
 10853                           ; Regs used in _drv_reset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10854  22FF  3080               	movlw	128
 10855  2300  0021               	movlb	1	; select bank1
 10856  2301  00B5               	movwf	??_drv_reset^(0+128)
 10857  2302  0835               	movf	??_drv_reset^(0+128),w
 10858  2303  0020               	movlb	0	; select bank0
 10859  2304  00C9               	movwf	drv_write@data
 10860  2305  3002               	movlw	2
 10861  2306  31A6  265B         	fcall	_drv_write
 10862  2308  0008               	return
 10863  2309                     __end_of_drv_reset:	
 10864                           
 10865                           	psect	text19
 10866  0370                     __ptext19:	
 10867 ;; *************** function _execCmd *****************
 10868 ;; Defined at:
 10869 ;;		line 72 in file "cmd_parser.c"
 10870 ;; Parameters:    Size  Location     Type
 10871 ;;  s               1    wreg     PTR struct CMD_STRUCT
 10872 ;;		 -> cmd_struct(21), 
 10873 ;; Auto vars:     Size  Location     Type
 10874 ;;  s               1   53[BANK1 ] PTR struct CMD_STRUCT
 10875 ;;		 -> cmd_struct(21), 
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  2  967[None  ] int 
 10878 ;; Registers used:
 10879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10886 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10888 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10889 ;;Total ram usage:        1 bytes
 10890 ;; Hardware stack levels used:    1
 10891 ;; Hardware stack levels required when called:   16
 10892 ;; This function calls:
 10893 ;;		_commCheck
 10894 ;;		_doMove
 10895 ;;		_getActive
 10896 ;;		_getMotionStatus
 10897 ;;		_getMoveMask
 10898 ;;		_getPosition
 10899 ;;		_printf
 10900 ;;		_setActive
 10901 ;;		_setDrvGain
 10902 ;;		_setDrvPeak
 10903 ;;		_setDrvPiezoOnTime
 10904 ;;		_setHeaterPostTime
 10905 ;;		_setHeaterPreTime
 10906 ;;		_setHeaterToggle
 10907 ;;		_setLEDBrightnessRange
 10908 ;;		_setLEDPwr
 10909 ;;		_setMoveMask
 10910 ;;		_startAbsMove
 10911 ;;		_startRelMove
 10912 ;;		_timedActiveHeatOn
 10913 ;;		_zeroPosition
 10914 ;; This function is called by:
 10915 ;;		_main
 10916 ;; This function uses a non-reentrant model
 10917 ;;
 10918                           
 10919                           
 10920                           ;psect for function _execCmd
 10921  0370                     _execCmd:	
 10922                           
 10923                           ;incstack = 0
 10924 ;; hardware stack exceeded
 10925                           ; Regs used in _execCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10926                           ;execCmd@s stored from wreg
 10927  0370  0021               	movlb	1	; select bank1
 10928  0371  00D5               	movwf	execCmd@s^(0+128)
 10929                           
 10930                           ;cmd_parser.c: 73: errorOut = 1;
 10931  0372  3001               	movlw	1
 10932  0373  0022               	movlb	2	; select bank2
 10933  0374  00E6               	movwf	_errorOut^(0+256)
 10934  0375  3000               	movlw	0
 10935  0376  00E7               	movwf	(_errorOut^(0+256)+1)
 10936                           
 10937                           ;cmd_parser.c: 75: switch(s->c){
 10938  0377  2D1C               	goto	l8421
 10939  0378                     l8377:	
 10940                           ;cmd_parser.c: 76: case CMD_REL: errorOut = startRelMove(s->p1.paramI); break;
 10941                           
 10942  0378  0021               	movlb	1	; select bank1
 10943  0379  0A55               	incf	execCmd@s^(0+128),w
 10944  037A  0086               	movwf	6
 10945  037B  3001               	movlw	1	; select bank2/3
 10946  037C  0087               	movwf	7
 10947  037D  3F40               	moviw [0]fsr1
 10948  037E  00B5               	movwf	startRelMove@steps^(0+128)
 10949  037F  3F41               	moviw [1]fsr1
 10950  0380  00B6               	movwf	(startRelMove@steps+1)^(0+128)
 10951  0381  31A4  2462         	fcall	_startRelMove
 10952  0383  0021               	movlb	1	; select bank1
 10953  0384  0836               	movf	(?_startRelMove+1)^(0+128),w
 10954  0385  0022               	movlb	2	; select bank2
 10955  0386  00E7               	movwf	(_errorOut+1)^(0+256)
 10956  0387  0021               	movlb	1	; select bank1
 10957  0388  0835               	movf	?_startRelMove^(0+128),w
 10958  0389  0022               	movlb	2	; select bank2
 10959  038A  00E6               	movwf	_errorOut^(0+256)
 10960  038B  0008               	return
 10961  038C                     l8379:	
 10962                           ;cmd_parser.c: 77: case CMD_ABS: errorOut = startAbsMove(s->p1.paramI); break;
 10963                           
 10964  038C  0021               	movlb	1	; select bank1
 10965  038D  0A55               	incf	execCmd@s^(0+128),w
 10966  038E  0086               	movwf	6
 10967  038F  3001               	movlw	1	; select bank2/3
 10968  0390  0087               	movwf	7
 10969  0391  3F40               	moviw [0]fsr1
 10970  0392  00B5               	movwf	startAbsMove@steps^(0+128)
 10971  0393  3F41               	moviw [1]fsr1
 10972  0394  00B6               	movwf	(startAbsMove@steps+1)^(0+128)
 10973  0395  31A4  24B5         	fcall	_startAbsMove
 10974  0397  0021               	movlb	1	; select bank1
 10975  0398  0836               	movf	(?_startAbsMove+1)^(0+128),w
 10976  0399  0022               	movlb	2	; select bank2
 10977  039A  00E7               	movwf	(_errorOut+1)^(0+256)
 10978  039B  0021               	movlb	1	; select bank1
 10979  039C  0835               	movf	?_startAbsMove^(0+128),w
 10980  039D  0022               	movlb	2	; select bank2
 10981  039E  00E6               	movwf	_errorOut^(0+256)
 10982  039F  0008               	return
 10983  03A0                     l8381:	
 10984                           ;cmd_parser.c: 78: case CMD_P: errorOut = getPosition(s->p1.paramI); break;
 10985                           
 10986  03A0  0021               	movlb	1	; select bank1
 10987  03A1  0A55               	incf	execCmd@s^(0+128),w
 10988  03A2  0086               	movwf	6
 10989  03A3  3001               	movlw	1	; select bank2/3
 10990  03A4  0087               	movwf	7
 10991  03A5  3F40               	moviw [0]fsr1
 10992  03A6  00B5               	movwf	getPosition@a^(0+128)
 10993  03A7  3F41               	moviw [1]fsr1
 10994  03A8  00B6               	movwf	(getPosition@a+1)^(0+128)
 10995  03A9  3199  210E         	fcall	_getPosition
 10996  03AB  0021               	movlb	1	; select bank1
 10997  03AC  0836               	movf	(?_getPosition+1)^(0+128),w
 10998  03AD  0022               	movlb	2	; select bank2
 10999  03AE  00E7               	movwf	(_errorOut+1)^(0+256)
 11000  03AF  0021               	movlb	1	; select bank1
 11001  03B0  0835               	movf	?_getPosition^(0+128),w
 11002  03B1  0022               	movlb	2	; select bank2
 11003  03B2  00E6               	movwf	_errorOut^(0+256)
 11004  03B3  0008               	return
 11005  03B4                     l8383:	
 11006                           ;cmd_parser.c: 79: case CMD_ZERO: errorOut = zeroPosition(); break;
 11007                           
 11008  03B4  3195  252A         	fcall	_zeroPosition
 11009  03B6  0021               	movlb	1	; select bank1
 11010  03B7  0836               	movf	(?_zeroPosition+1)^(0+128),w
 11011  03B8  0022               	movlb	2	; select bank2
 11012  03B9  00E7               	movwf	(_errorOut+1)^(0+256)
 11013  03BA  0021               	movlb	1	; select bank1
 11014  03BB  0835               	movf	?_zeroPosition^(0+128),w
 11015  03BC  0022               	movlb	2	; select bank2
 11016  03BD  00E6               	movwf	_errorOut^(0+256)
 11017  03BE  0008               	return
 11018  03BF                     l8385:	
 11019                           ;cmd_parser.c: 82: case CMD_DRV_PEAK: errorOut = setDrvPeak(s->p1.paramI); break;
 11020                           
 11021  03BF  0021               	movlb	1	; select bank1
 11022  03C0  0A55               	incf	execCmd@s^(0+128),w
 11023  03C1  0086               	movwf	6
 11024  03C2  3001               	movlw	1	; select bank2/3
 11025  03C3  0087               	movwf	7
 11026  03C4  3F40               	moviw [0]fsr1
 11027  03C5  00B5               	movwf	setDrvPeak@pk^(0+128)
 11028  03C6  3F41               	moviw [1]fsr1
 11029  03C7  00B6               	movwf	(setDrvPeak@pk+1)^(0+128)
 11030  03C8  31A3  23C2         	fcall	_setDrvPeak
 11031  03CA  0021               	movlb	1	; select bank1
 11032  03CB  0836               	movf	(?_setDrvPeak+1)^(0+128),w
 11033  03CC  0022               	movlb	2	; select bank2
 11034  03CD  00E7               	movwf	(_errorOut+1)^(0+256)
 11035  03CE  0021               	movlb	1	; select bank1
 11036  03CF  0835               	movf	?_setDrvPeak^(0+128),w
 11037  03D0  0022               	movlb	2	; select bank2
 11038  03D1  00E6               	movwf	_errorOut^(0+256)
 11039  03D2  0008               	return
 11040  03D3                     l8387:	
 11041                           ;cmd_parser.c: 83: case CMD_DRV_GAIN: errorOut = setDrvGain(s->p1.paramI); break;
 11042                           
 11043  03D3  0021               	movlb	1	; select bank1
 11044  03D4  0A55               	incf	execCmd@s^(0+128),w
 11045  03D5  0086               	movwf	6
 11046  03D6  3001               	movlw	1	; select bank2/3
 11047  03D7  0087               	movwf	7
 11048  03D8  3F40               	moviw [0]fsr1
 11049  03D9  00B5               	movwf	setDrvGain@gain^(0+128)
 11050  03DA  3F41               	moviw [1]fsr1
 11051  03DB  00B6               	movwf	(setDrvGain@gain+1)^(0+128)
 11052  03DC  3199  2190         	fcall	_setDrvGain
 11053  03DE  0021               	movlb	1	; select bank1
 11054  03DF  0836               	movf	(?_setDrvGain+1)^(0+128),w
 11055  03E0  0022               	movlb	2	; select bank2
 11056  03E1  00E7               	movwf	(_errorOut+1)^(0+256)
 11057  03E2  0021               	movlb	1	; select bank1
 11058  03E3  0835               	movf	?_setDrvGain^(0+128),w
 11059  03E4  0022               	movlb	2	; select bank2
 11060  03E5  00E6               	movwf	_errorOut^(0+256)
 11061  03E6  0008               	return
 11062  03E7                     l8389:	
 11063                           ;cmd_parser.c: 84: case CMD_DRV_PIEZOONTIME: errorOut = setDrvPiezoOnTime(s->p1.paramI);
      +                           break;
 11064                           
 11065  03E7  0021               	movlb	1	; select bank1
 11066  03E8  0A55               	incf	execCmd@s^(0+128),w
 11067  03E9  0086               	movwf	6
 11068  03EA  3001               	movlw	1	; select bank2/3
 11069  03EB  0087               	movwf	7
 11070  03EC  3F40               	moviw [0]fsr1
 11071  03ED  00BD               	movwf	setDrvPiezoOnTime@t^(0+128)
 11072  03EE  3F41               	moviw [1]fsr1
 11073  03EF  00BE               	movwf	(setDrvPiezoOnTime@t+1)^(0+128)
 11074  03F0  319E  261E         	fcall	_setDrvPiezoOnTime
 11075  03F2  0021               	movlb	1	; select bank1
 11076  03F3  083E               	movf	(?_setDrvPiezoOnTime+1)^(0+128),w
 11077  03F4  0022               	movlb	2	; select bank2
 11078  03F5  00E7               	movwf	(_errorOut+1)^(0+256)
 11079  03F6  0021               	movlb	1	; select bank1
 11080  03F7  083D               	movf	?_setDrvPiezoOnTime^(0+128),w
 11081  03F8  0022               	movlb	2	; select bank2
 11082  03F9  00E6               	movwf	_errorOut^(0+256)
 11083  03FA  0008               	return
 11084  03FB                     l8391:	
 11085                           ;cmd_parser.c: 87: case CMD_HEATER_PRETIME: errorOut = setHeaterPreTime(s->p1.paramI); b
      +                          reak;
 11086                           
 11087  03FB  0021               	movlb	1	; select bank1
 11088  03FC  0A55               	incf	execCmd@s^(0+128),w
 11089  03FD  0086               	movwf	6
 11090  03FE  3001               	movlw	1	; select bank2/3
 11091  03FF  0087               	movwf	7
 11092  0400  3F40               	moviw [0]fsr1
 11093  0401  00BD               	movwf	setHeaterPreTime@t^(0+128)
 11094  0402  3F41               	moviw [1]fsr1
 11095  0403  00BE               	movwf	(setHeaterPreTime@t+1)^(0+128)
 11096  0404  319E  2679         	fcall	_setHeaterPreTime
 11097  0406  0021               	movlb	1	; select bank1
 11098  0407  083E               	movf	(?_setHeaterPreTime+1)^(0+128),w
 11099  0408  0022               	movlb	2	; select bank2
 11100  0409  00E7               	movwf	(_errorOut+1)^(0+256)
 11101  040A  0021               	movlb	1	; select bank1
 11102  040B  083D               	movf	?_setHeaterPreTime^(0+128),w
 11103  040C  0022               	movlb	2	; select bank2
 11104  040D  00E6               	movwf	_errorOut^(0+256)
 11105  040E  0008               	return
 11106  040F                     l8393:	
 11107                           ;cmd_parser.c: 88: case CMD_HEATER_POSTTIME: errorOut = setHeaterPostTime(s->p1.paramI);
      +                           break;
 11108                           
 11109  040F  0021               	movlb	1	; select bank1
 11110  0410  0A55               	incf	execCmd@s^(0+128),w
 11111  0411  0086               	movwf	6
 11112  0412  3001               	movlw	1	; select bank2/3
 11113  0413  0087               	movwf	7
 11114  0414  3F40               	moviw [0]fsr1
 11115  0415  00BD               	movwf	setHeaterPostTime@t^(0+128)
 11116  0416  3F41               	moviw [1]fsr1
 11117  0417  00BE               	movwf	(setHeaterPostTime@t+1)^(0+128)
 11118  0418  319C  24C8         	fcall	_setHeaterPostTime
 11119  041A  0021               	movlb	1	; select bank1
 11120  041B  083E               	movf	(?_setHeaterPostTime+1)^(0+128),w
 11121  041C  0022               	movlb	2	; select bank2
 11122  041D  00E7               	movwf	(_errorOut+1)^(0+256)
 11123  041E  0021               	movlb	1	; select bank1
 11124  041F  083D               	movf	?_setHeaterPostTime^(0+128),w
 11125  0420  0022               	movlb	2	; select bank2
 11126  0421  00E6               	movwf	_errorOut^(0+256)
 11127  0422  0008               	return
 11128  0423                     l8395:	
 11129                           ;cmd_parser.c: 89: case CMD_HEATER_GAIN: errorOut = setLEDBrightnessRange(s->p1.paramI, 
      +                          s->p2.paramI); break;
 11130                           
 11131  0423  0021               	movlb	1	; select bank1
 11132  0424  0A55               	incf	execCmd@s^(0+128),w
 11133  0425  0086               	movwf	6
 11134  0426  3001               	movlw	1	; select bank2/3
 11135  0427  0087               	movwf	7
 11136  0428  3F40               	moviw [0]fsr1
 11137  0429  00B5               	movwf	setLEDBrightnessRange@r^(0+128)
 11138  042A  3F41               	moviw [1]fsr1
 11139  042B  00B6               	movwf	(setLEDBrightnessRange@r+1)^(0+128)
 11140  042C  0855               	movf	execCmd@s^(0+128),w
 11141  042D  3E0B               	addlw	11
 11142  042E  0086               	movwf	6
 11143  042F  3001               	movlw	1	; select bank2/3
 11144  0430  0087               	movwf	7
 11145  0431  3F40               	moviw [0]fsr1
 11146  0432  00B7               	movwf	setLEDBrightnessRange@tOB^(0+128)
 11147  0433  3F41               	moviw [1]fsr1
 11148  0434  00B8               	movwf	(setLEDBrightnessRange@tOB+1)^(0+128)
 11149  0435  31A4  24F0         	fcall	_setLEDBrightnessRange
 11150  0437  0021               	movlb	1	; select bank1
 11151  0438  0836               	movf	(?_setLEDBrightnessRange+1)^(0+128),w
 11152  0439  0022               	movlb	2	; select bank2
 11153  043A  00E7               	movwf	(_errorOut+1)^(0+256)
 11154  043B  0021               	movlb	1	; select bank1
 11155  043C  0835               	movf	?_setLEDBrightnessRange^(0+128),w
 11156  043D  0022               	movlb	2	; select bank2
 11157  043E  00E6               	movwf	_errorOut^(0+256)
 11158  043F  0008               	return
 11159  0440                     l8397:	
 11160                           ;cmd_parser.c: 90: case CMD_HEATER_PWR: errorOut = setLEDPwr(s->p1.paramI, s->p2.paramI)
      +                          ; break;
 11161                           
 11162  0440  0021               	movlb	1	; select bank1
 11163  0441  0A55               	incf	execCmd@s^(0+128),w
 11164  0442  0086               	movwf	6
 11165  0443  3001               	movlw	1	; select bank2/3
 11166  0444  0087               	movwf	7
 11167  0445  3F40               	moviw [0]fsr1
 11168  0446  00B5               	movwf	setLEDPwr@pwr^(0+128)
 11169  0447  3F41               	moviw [1]fsr1
 11170  0448  00B6               	movwf	(setLEDPwr@pwr+1)^(0+128)
 11171  0449  0855               	movf	execCmd@s^(0+128),w
 11172  044A  3E0B               	addlw	11
 11173  044B  0086               	movwf	6
 11174  044C  3001               	movlw	1	; select bank2/3
 11175  044D  0087               	movwf	7
 11176  044E  3F40               	moviw [0]fsr1
 11177  044F  00B7               	movwf	setLEDPwr@topOrBottom^(0+128)
 11178  0450  3F41               	moviw [1]fsr1
 11179  0451  00B8               	movwf	(setLEDPwr@topOrBottom+1)^(0+128)
 11180  0452  31A5  250E         	fcall	_setLEDPwr
 11181  0454  0021               	movlb	1	; select bank1
 11182  0455  0836               	movf	(?_setLEDPwr+1)^(0+128),w
 11183  0456  0022               	movlb	2	; select bank2
 11184  0457  00E7               	movwf	(_errorOut+1)^(0+256)
 11185  0458  0021               	movlb	1	; select bank1
 11186  0459  0835               	movf	?_setLEDPwr^(0+128),w
 11187  045A  0022               	movlb	2	; select bank2
 11188  045B  00E6               	movwf	_errorOut^(0+256)
 11189  045C  0008               	return
 11190  045D                     l8399:	
 11191                           ;cmd_parser.c: 91: case CMD_HEATER_TOGGLE: errorOut = setHeaterToggle(s->p1.paramI, s->p
      +                          2.paramI); break;
 11192                           
 11193  045D  0021               	movlb	1	; select bank1
 11194  045E  0A55               	incf	execCmd@s^(0+128),w
 11195  045F  0086               	movwf	6
 11196  0460  3001               	movlw	1	; select bank2/3
 11197  0461  0087               	movwf	7
 11198  0462  3F40               	moviw [0]fsr1
 11199  0463  00B5               	movwf	setHeaterToggle@num^(0+128)
 11200  0464  3F41               	moviw [1]fsr1
 11201  0465  00B6               	movwf	(setHeaterToggle@num+1)^(0+128)
 11202  0466  0855               	movf	execCmd@s^(0+128),w
 11203  0467  3E0B               	addlw	11
 11204  0468  0086               	movwf	6
 11205  0469  3001               	movlw	1	; select bank2/3
 11206  046A  0087               	movwf	7
 11207  046B  3F40               	moviw [0]fsr1
 11208  046C  00B7               	movwf	setHeaterToggle@topOrB^(0+128)
 11209  046D  3F41               	moviw [1]fsr1
 11210  046E  00B8               	movwf	(setHeaterToggle@topOrB+1)^(0+128)
 11211  046F  3197  2783         	fcall	_setHeaterToggle
 11212  0471  0021               	movlb	1	; select bank1
 11213  0472  0836               	movf	(?_setHeaterToggle+1)^(0+128),w
 11214  0473  0022               	movlb	2	; select bank2
 11215  0474  00E7               	movwf	(_errorOut+1)^(0+256)
 11216  0475  0021               	movlb	1	; select bank1
 11217  0476  0835               	movf	?_setHeaterToggle^(0+128),w
 11218  0477  0022               	movlb	2	; select bank2
 11219  0478  00E6               	movwf	_errorOut^(0+256)
 11220  0479  0008               	return
 11221  047A                     l8401:	
 11222                           ;cmd_parser.c: 92: case CMD_HEATER_TIMED: errorOut = timedActiveHeatOn(s->p1.paramL, s->
      +                          p2.paramI); break;
 11223                           
 11224  047A  0021               	movlb	1	; select bank1
 11225  047B  0A55               	incf	execCmd@s^(0+128),w
 11226  047C  0086               	movwf	6
 11227  047D  3001               	movlw	1	; select bank2/3
 11228  047E  0087               	movwf	7
 11229  047F  3F40               	moviw [0]fsr1
 11230  0480  00B5               	movwf	timedActiveHeatOn@onTime^(0+128)
 11231  0481  3F41               	moviw [1]fsr1
 11232  0482  00B6               	movwf	(timedActiveHeatOn@onTime+1)^(0+128)
 11233  0483  3F42               	moviw [2]fsr1
 11234  0484  00B7               	movwf	(timedActiveHeatOn@onTime+2)^(0+128)
 11235  0485  3F43               	moviw [3]fsr1
 11236  0486  00B8               	movwf	(timedActiveHeatOn@onTime+3)^(0+128)
 11237  0487  0855               	movf	execCmd@s^(0+128),w
 11238  0488  3E0B               	addlw	11
 11239  0489  0086               	movwf	6
 11240  048A  3001               	movlw	1	; select bank2/3
 11241  048B  0087               	movwf	7
 11242  048C  3F40               	moviw [0]fsr1
 11243  048D  00B9               	movwf	timedActiveHeatOn@topOrB^(0+128)
 11244  048E  3F41               	moviw [1]fsr1
 11245  048F  00BA               	movwf	(timedActiveHeatOn@topOrB+1)^(0+128)
 11246  0490  3189  21A2         	fcall	_timedActiveHeatOn
 11247  0492  0021               	movlb	1	; select bank1
 11248  0493  0836               	movf	(?_timedActiveHeatOn+1)^(0+128),w
 11249  0494  0022               	movlb	2	; select bank2
 11250  0495  00E7               	movwf	(_errorOut+1)^(0+256)
 11251  0496  0021               	movlb	1	; select bank1
 11252  0497  0835               	movf	?_timedActiveHeatOn^(0+128),w
 11253  0498  0022               	movlb	2	; select bank2
 11254  0499  00E6               	movwf	_errorOut^(0+256)
 11255  049A  0008               	return
 11256  049B                     l8403:	
 11257                           ;cmd_parser.c: 95: case CMD_SETA: errorOut = setActive(s->p1.paramI, s->p2.paramI); brea
      +                          k;
 11258                           
 11259  049B  0021               	movlb	1	; select bank1
 11260  049C  0A55               	incf	execCmd@s^(0+128),w
 11261  049D  0086               	movwf	6
 11262  049E  3001               	movlw	1	; select bank2/3
 11263  049F  0087               	movwf	7
 11264  04A0  3F40               	moviw [0]fsr1
 11265  04A1  00B5               	movwf	setActive@probeNum^(0+128)
 11266  04A2  3F41               	moviw [1]fsr1
 11267  04A3  00B6               	movwf	(setActive@probeNum+1)^(0+128)
 11268  04A4  0855               	movf	execCmd@s^(0+128),w
 11269  04A5  3E0B               	addlw	11
 11270  04A6  0086               	movwf	6
 11271  04A7  3001               	movlw	1	; select bank2/3
 11272  04A8  0087               	movwf	7
 11273  04A9  3F40               	moviw [0]fsr1
 11274  04AA  00B7               	movwf	setActive@onOff^(0+128)
 11275  04AB  3F41               	moviw [1]fsr1
 11276  04AC  00B8               	movwf	(setActive@onOff+1)^(0+128)
 11277  04AD  3195  259F         	fcall	_setActive
 11278  04AF  0021               	movlb	1	; select bank1
 11279  04B0  0836               	movf	(?_setActive+1)^(0+128),w
 11280  04B1  0022               	movlb	2	; select bank2
 11281  04B2  00E7               	movwf	(_errorOut+1)^(0+256)
 11282  04B3  0021               	movlb	1	; select bank1
 11283  04B4  0835               	movf	?_setActive^(0+128),w
 11284  04B5  0022               	movlb	2	; select bank2
 11285  04B6  00E6               	movwf	_errorOut^(0+256)
 11286  04B7  0008               	return
 11287  04B8                     l8405:	
 11288                           ;cmd_parser.c: 96: case CMD_SETM: errorOut = setMoveMask(s->p1.paramI, s->p2.paramI); br
      +                          eak;
 11289                           
 11290  04B8  0021               	movlb	1	; select bank1
 11291  04B9  0A55               	incf	execCmd@s^(0+128),w
 11292  04BA  0086               	movwf	6
 11293  04BB  3001               	movlw	1	; select bank2/3
 11294  04BC  0087               	movwf	7
 11295  04BD  3F40               	moviw [0]fsr1
 11296  04BE  00B5               	movwf	setMoveMask@probeNum^(0+128)
 11297  04BF  3F41               	moviw [1]fsr1
 11298  04C0  00B6               	movwf	(setMoveMask@probeNum+1)^(0+128)
 11299  04C1  0855               	movf	execCmd@s^(0+128),w
 11300  04C2  3E0B               	addlw	11
 11301  04C3  0086               	movwf	6
 11302  04C4  3001               	movlw	1	; select bank2/3
 11303  04C5  0087               	movwf	7
 11304  04C6  3F40               	moviw [0]fsr1
 11305  04C7  00B7               	movwf	setMoveMask@onOff^(0+128)
 11306  04C8  3F41               	moviw [1]fsr1
 11307  04C9  00B8               	movwf	(setMoveMask@onOff+1)^(0+128)
 11308  04CA  3194  24B7         	fcall	_setMoveMask
 11309  04CC  0021               	movlb	1	; select bank1
 11310  04CD  0836               	movf	(?_setMoveMask+1)^(0+128),w
 11311  04CE  0022               	movlb	2	; select bank2
 11312  04CF  00E7               	movwf	(_errorOut+1)^(0+256)
 11313  04D0  0021               	movlb	1	; select bank1
 11314  04D1  0835               	movf	?_setMoveMask^(0+128),w
 11315  04D2  0022               	movlb	2	; select bank2
 11316  04D3  00E6               	movwf	_errorOut^(0+256)
 11317  04D4  0008               	return
 11318  04D5                     l8407:	
 11319                           ;cmd_parser.c: 97: case CMD_GET_ACTIVE: errorOut = getActive(); break;
 11320                           
 11321  04D5  319B  233E         	fcall	_getActive
 11322  04D7  0021               	movlb	1	; select bank1
 11323  04D8  0836               	movf	(?_getActive+1)^(0+128),w
 11324  04D9  0022               	movlb	2	; select bank2
 11325  04DA  00E7               	movwf	(_errorOut+1)^(0+256)
 11326  04DB  0021               	movlb	1	; select bank1
 11327  04DC  0835               	movf	?_getActive^(0+128),w
 11328  04DD  0022               	movlb	2	; select bank2
 11329  04DE  00E6               	movwf	_errorOut^(0+256)
 11330  04DF  0008               	return
 11331  04E0                     l8409:	
 11332                           ;cmd_parser.c: 98: case CMD_GET_MOVABLE: errorOut = getMoveMask(); break;
 11333                           
 11334  04E0  319B  238B         	fcall	_getMoveMask
 11335  04E2  0021               	movlb	1	; select bank1
 11336  04E3  0836               	movf	(?_getMoveMask+1)^(0+128),w
 11337  04E4  0022               	movlb	2	; select bank2
 11338  04E5  00E7               	movwf	(_errorOut+1)^(0+256)
 11339  04E6  0021               	movlb	1	; select bank1
 11340  04E7  0835               	movf	?_getMoveMask^(0+128),w
 11341  04E8  0022               	movlb	2	; select bank2
 11342  04E9  00E6               	movwf	_errorOut^(0+256)
 11343  04EA  0008               	return
 11344  04EB                     l8411:	
 11345                           ;cmd_parser.c: 99: case CMD_MOTION_STATUS: errorOut = getMotionStatus(); break;
 11346                           
 11347  04EB  31A5  25F0         	fcall	_getMotionStatus
 11348  04ED  0021               	movlb	1	; select bank1
 11349  04EE  0836               	movf	(?_getMotionStatus+1)^(0+128),w
 11350  04EF  0022               	movlb	2	; select bank2
 11351  04F0  00E7               	movwf	(_errorOut+1)^(0+256)
 11352  04F1  0021               	movlb	1	; select bank1
 11353  04F2  0835               	movf	?_getMotionStatus^(0+128),w
 11354  04F3  0022               	movlb	2	; select bank2
 11355  04F4  00E6               	movwf	_errorOut^(0+256)
 11356  04F5  0008               	return
 11357  04F6                     l8413:	
 11358                           ;cmd_parser.c: 100: case CMD_DOMOVE: errorOut = doMove(); break;
 11359                           
 11360  04F6  3189  2119         	fcall	_doMove
 11361  04F8  0021               	movlb	1	; select bank1
 11362  04F9  0840               	movf	(?_doMove+1)^(0+128),w
 11363  04FA  0022               	movlb	2	; select bank2
 11364  04FB  00E7               	movwf	(_errorOut+1)^(0+256)
 11365  04FC  0021               	movlb	1	; select bank1
 11366  04FD  083F               	movf	?_doMove^(0+128),w
 11367  04FE  0022               	movlb	2	; select bank2
 11368  04FF  00E6               	movwf	_errorOut^(0+256)
 11369  0500  0008               	return
 11370  0501                     l8415:	
 11371                           ;cmd_parser.c: 101: case CMD_COMM_CHECK: errorOut = commCheck(); break;
 11372                           
 11373  0501  318A  223A         	fcall	_commCheck
 11374  0503  0021               	movlb	1	; select bank1
 11375  0504  0853               	movf	(?_commCheck+1)^(0+128),w
 11376  0505  0022               	movlb	2	; select bank2
 11377  0506  00E7               	movwf	(_errorOut+1)^(0+256)
 11378  0507  0021               	movlb	1	; select bank1
 11379  0508  0852               	movf	?_commCheck^(0+128),w
 11380  0509  0022               	movlb	2	; select bank2
 11381  050A  00E6               	movwf	_errorOut^(0+256)
 11382  050B  0008               	return
 11383  050C                     l8417:	
 11384                           ;cmd_parser.c: 102: case CMD_PING: printf("!\n"); break;
 11385                           
 11386  050C  30C8               	movlw	low ((STR_82+20)| (0+32768))
 11387  050D  0021               	movlb	1	; select bank1
 11388  050E  00A0               	movwf	printf@f^(0+128)
 11389  050F  30A8               	movlw	high ((STR_82+20)| (0+32768))
 11390  0510  00A1               	movwf	(printf@f^(0+128)+1)
 11391  0511  318E  26CE         	fcall	_printf
 11392  0513  0008               	return
 11393  0514                     l8419:	
 11394                           ;cmd_parser.c: 103: default: printf("UNRECOGNIZED COMMAND!\n");
 11395                           
 11396  0514  30B4               	movlw	low (STR_82| (0+32768))
 11397  0515  0021               	movlb	1	; select bank1
 11398  0516  00A0               	movwf	printf@f^(0+128)
 11399  0517  30A8               	movlw	high (STR_82| (0+32768))
 11400  0518  00A1               	movwf	(printf@f^(0+128)+1)
 11401  0519  318E  26CE         	fcall	_printf
 11402                           
 11403                           ;cmd_parser.c: 110: }
 11404  051B  0008               	return
 11405  051C                     l8421:	
 11406  051C  0021               	movlb	1	; select bank1
 11407  051D  0855               	movf	execCmd@s^(0+128),w
 11408  051E  0086               	movwf	6
 11409  051F  3001               	movlw	1	; select bank2/3
 11410  0520  0087               	movwf	7
 11411  0521  0801               	movf	1,w
 11412                           
 11413                           ; Switch size 1, requested type "space"
 11414                           ; Number of cases is 21, Range of values is 1 to 22
 11415                           ; switch strategies available:
 11416                           ; Name         Instructions Cycles
 11417                           ; direct_byte           53     9 (fixed)
 11418                           ; simple_byte           64    33 (average)
 11419                           ; jumptable            263     9 (fixed)
 11420                           ;	Chosen strategy is direct_byte
 11421  0522  3EFF               	addlw	-1
 11422  0523  1C03               	skipc
 11423  0524  2D14               	goto	l8419
 11424  0525  0084               	movwf	4
 11425  0526  3016               	movlw	22
 11426  0527  0204               	subwf	4,w
 11427  0528  1803               	skipnc
 11428  0529  2D14               	goto	l8419
 11429  052A  31A0               	movlp	high S8761
 11430  052B  3504               	lslf	4,w
 11431  052C  3E00               	addlw	low S8761
 11432  052D  0082               	movwf	2
 11433                           
 11434                           ;cmd_parser.c: 112: return errorOut;
 11435                           ;	Return value of _execCmd is never used
 11436  052E  0008               	return
 11437  052F                     __end_of_execCmd:	
 11438                           
 11439                           	psect	swtext1
 11440  2000                     __pswtext1:	
 11441  2000                     S8761:	
 11442  2000  3183  2B8C         	ljmp	l8379
 11443  2002  3183  2B78         	ljmp	l8377
 11444  2004  3183  2BA0         	ljmp	l8381
 11445  2006  3185  2D14         	ljmp	l8419
 11446  2008  3184  2C9B         	ljmp	l8403
 11447  200A  3184  2CB8         	ljmp	l8405
 11448  200C  3183  2BB4         	ljmp	l8383
 11449  200E  3183  2BBF         	ljmp	l8385
 11450  2010  3183  2BD3         	ljmp	l8387
 11451  2012  3183  2BE7         	ljmp	l8389
 11452  2014  3183  2BFB         	ljmp	l8391
 11453  2016  3184  2C0F         	ljmp	l8393
 11454  2018  3184  2C23         	ljmp	l8395
 11455  201A  3184  2C40         	ljmp	l8397
 11456  201C  3184  2C5D         	ljmp	l8399
 11457  201E  3184  2C7A         	ljmp	l8401
 11458  2020  3184  2CD5         	ljmp	l8407
 11459  2022  3184  2CE0         	ljmp	l8409
 11460  2024  3184  2CEB         	ljmp	l8411
 11461  2026  3184  2CF6         	ljmp	l8413
 11462  2028  3185  2D01         	ljmp	l8415
 11463  202A  3185  2D0C         	ljmp	l8417
 11464                           
 11465                           	psect	text20
 11466  152A                     __ptext20:	
 11467 ;; *************** function _zeroPosition *****************
 11468 ;; Defined at:
 11469 ;;		line 373 in file "main.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;		None
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;  i               2   41[BANK0 ] int 
 11474 ;; Return value:  Size  Location     Type
 11475 ;;                  2   21[BANK1 ] int 
 11476 ;; Registers used:
 11477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11478 ;; Tracked objects:
 11479 ;;		On entry : 0/0
 11480 ;;		On exit  : 0/0
 11481 ;;		Unchanged: 0/0
 11482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11483 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11484 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11485 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11486 ;;      Totals:         0       2      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11487 ;;Total ram usage:       12 bytes
 11488 ;; Hardware stack levels used:    1
 11489 ;; Hardware stack levels required when called:    9
 11490 ;; This function calls:
 11491 ;;		_printf
 11492 ;; This function is called by:
 11493 ;;		_execCmd
 11494 ;; This function uses a non-reentrant model
 11495 ;;
 11496                           
 11497                           
 11498                           ;psect for function _zeroPosition
 11499  152A                     _zeroPosition:	
 11500                           
 11501                           ;main.c: 374: for(int i = 0; i<24; i++){
 11502                           
 11503                           ;incstack = 0
 11504                           ; Regs used in _zeroPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11505  152A  0020               	movlb	0	; select bank0
 11506  152B  01C9               	clrf	zeroPosition@i
 11507  152C  01CA               	clrf	zeroPosition@i+1
 11508  152D  084A               	movf	zeroPosition@i+1,w
 11509  152E  3A80               	xorlw	128
 11510  152F  0021               	movlb	1	; select bank1
 11511  1530  00B7               	movwf	??_zeroPosition^(0+128)
 11512  1531  3080               	movlw	128
 11513  1532  0237               	subwf	??_zeroPosition^(0+128),w
 11514  1533  1D03               	skipz
 11515  1534  2D38               	goto	u8075
 11516  1535  3018               	movlw	24
 11517  1536  0020               	movlb	0	; select bank0
 11518  1537  0249               	subwf	zeroPosition@i,w
 11519  1538                     u8075:	
 11520  1538  1803               	btfsc	3,0
 11521  1539  2D94               	goto	l8001
 11522  153A                     l7993:	
 11523                           
 11524                           ;main.c: 375: if((activeMask & (1UL << i)) > 0)
 11525  153A  0021               	movlb	1	; select bank1
 11526  153B  085D               	movf	_activeMask^(0+128),w
 11527  153C  00B7               	movwf	??_zeroPosition^(0+128)
 11528  153D  085E               	movf	(_activeMask+1)^(0+128),w
 11529  153E  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 11530  153F  085F               	movf	(_activeMask+2)^(0+128),w
 11531  1540  00B9               	movwf	(??_zeroPosition^(0+128)+2)
 11532  1541  0860               	movf	(_activeMask+3)^(0+128),w
 11533  1542  00BA               	movwf	(??_zeroPosition^(0+128)+3)
 11534  1543  3001               	movlw	1
 11535  1544  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 11536  1545  3000               	movlw	0
 11537  1546  00BC               	movwf	((??_zeroPosition+4)^(0+128)+1)
 11538  1547  3000               	movlw	0
 11539  1548  00BD               	movwf	((??_zeroPosition+4)^(0+128)+2)
 11540  1549  3000               	movlw	0
 11541  154A  00BE               	movwf	((??_zeroPosition+4)^(0+128)+3)
 11542  154B  0020               	movlb	0	; select bank0
 11543  154C  0A49               	incf	zeroPosition@i,w
 11544  154D  0021               	movlb	1	; select bank1
 11545  154E  2D53               	goto	u8080
 11546  154F                     u8085:	
 11547  154F  35BB               	lslf	(??_zeroPosition+4)^(0+128),f
 11548  1550  0DBC               	rlf	((??_zeroPosition+4)^(0+128)+1),f
 11549  1551  0DBD               	rlf	((??_zeroPosition+4)^(0+128)+2),f
 11550  1552  0DBE               	rlf	((??_zeroPosition+4)^(0+128)+3),f
 11551  1553                     u8080:	
 11552  1553  0B89               	decfsz	9,f
 11553  1554  2D4F               	goto	u8085
 11554  1555  083B               	movf	(??_zeroPosition+4)^(0+128),w
 11555  1556  05B7               	andwf	??_zeroPosition^(0+128),f
 11556  1557  083C               	movf	(??_zeroPosition+5)^(0+128),w
 11557  1558  05B8               	andwf	(??_zeroPosition^(0+128)+1),f
 11558  1559  083D               	movf	(??_zeroPosition+6)^(0+128),w
 11559  155A  05B9               	andwf	(??_zeroPosition^(0+128)+2),f
 11560  155B  083E               	movf	(??_zeroPosition+7)^(0+128),w
 11561  155C  05BA               	andwf	(??_zeroPosition^(0+128)+3),f
 11562  155D  083A               	movf	(??_zeroPosition+3)^(0+128),w
 11563  155E  0439               	iorwf	(??_zeroPosition+2)^(0+128),w
 11564  155F  0438               	iorwf	(??_zeroPosition+1)^(0+128),w
 11565  1560  0437               	iorwf	??_zeroPosition^(0+128),w
 11566  1561  1903               	skipnz
 11567  1562  2D82               	goto	l7997
 11568                           
 11569                           ;main.c: 376: currentPositions_steps[i]=0;
 11570  1563  0020               	movlb	0	; select bank0
 11571  1564  084A               	movf	zeroPosition@i+1,w
 11572  1565  0021               	movlb	1	; select bank1
 11573  1566  00B8               	movwf	(??_zeroPosition^(0+128)+1)
 11574  1567  0020               	movlb	0	; select bank0
 11575  1568  0849               	movf	zeroPosition@i,w
 11576  1569  0021               	movlb	1	; select bank1
 11577  156A  00B7               	movwf	??_zeroPosition^(0+128)
 11578  156B  35B7               	lslf	??_zeroPosition^(0+128),f
 11579  156C  0DB8               	rlf	(??_zeroPosition^(0+128)+1),f
 11580  156D  35B7               	lslf	??_zeroPosition^(0+128),f
 11581  156E  0DB8               	rlf	(??_zeroPosition^(0+128)+1),f
 11582  156F  3090               	movlw	144
 11583  1570  00B9               	movwf	(??_zeroPosition+2)^(0+128)
 11584  1571  3027               	movlw	39
 11585  1572  00BA               	movwf	((??_zeroPosition+2)^(0+128)+1)
 11586  1573  0837               	movf	??_zeroPosition^(0+128),w
 11587  1574  0739               	addwf	(??_zeroPosition+2)^(0+128),w
 11588  1575  00BB               	movwf	(??_zeroPosition+4)^(0+128)
 11589  1576  0838               	movf	(??_zeroPosition+1)^(0+128),w
 11590  1577  3D3A               	addwfc	(??_zeroPosition+3)^(0+128),w
 11591  1578  00BC               	movwf	(??_zeroPosition+5)^(0+128)
 11592  1579  083B               	movf	(??_zeroPosition+4)^(0+128),w
 11593  157A  0086               	movwf	6
 11594  157B  083C               	movf	(??_zeroPosition+5)^(0+128),w
 11595  157C  0087               	movwf	7
 11596  157D  3000               	movlw	0
 11597  157E  3FC0               	movwi [0]fsr1
 11598  157F  3FC1               	movwi [1]fsr1
 11599  1580  3FC2               	movwi [2]fsr1
 11600  1581  3FC3               	movwi [3]fsr1
 11601  1582                     l7997:	
 11602  1582  3001               	movlw	1
 11603  1583  0020               	movlb	0	; select bank0
 11604  1584  07C9               	addwf	zeroPosition@i,f
 11605  1585  3000               	movlw	0
 11606  1586  3DCA               	addwfc	zeroPosition@i+1,f
 11607  1587  084A               	movf	zeroPosition@i+1,w
 11608  1588  3A80               	xorlw	128
 11609  1589  0021               	movlb	1	; select bank1
 11610  158A  00B7               	movwf	??_zeroPosition^(0+128)
 11611  158B  3080               	movlw	128
 11612  158C  0237               	subwf	??_zeroPosition^(0+128),w
 11613  158D  1D03               	skipz
 11614  158E  2D92               	goto	u8105
 11615  158F  3018               	movlw	24
 11616  1590  0020               	movlb	0	; select bank0
 11617  1591  0249               	subwf	zeroPosition@i,w
 11618  1592                     u8105:	
 11619  1592  1C03               	skipc
 11620  1593  2D3A               	goto	l7993
 11621  1594                     l8001:	
 11622                           
 11623                           ;main.c: 377: }
 11624                           ;main.c: 378: printf("A\n");
 11625  1594  3059               	movlw	low (STR_8| (0+32768))
 11626  1595  0021               	movlb	1	; select bank1
 11627  1596  00A0               	movwf	printf@f^(0+128)
 11628  1597  30AA               	movlw	high (STR_8| (0+32768))
 11629  1598  00A1               	movwf	(printf@f^(0+128)+1)
 11630  1599  318E  26CE         	fcall	_printf
 11631                           
 11632                           ;main.c: 379: return 0;
 11633  159B  0021               	movlb	1	; select bank1
 11634  159C  01B5               	clrf	?_zeroPosition^(0+128)
 11635  159D  01B6               	clrf	(?_zeroPosition+1)^(0+128)
 11636  159E  0008               	return
 11637  159F                     __end_of_zeroPosition:	
 11638                           
 11639                           	psect	text21
 11640  09A2                     __ptext21:	
 11641 ;; *************** function _timedActiveHeatOn *****************
 11642 ;; Defined at:
 11643 ;;		line 477 in file "main.c"
 11644 ;; Parameters:    Size  Location     Type
 11645 ;;  onTime          4   21[BANK1 ] long 
 11646 ;;  topOrB          2   25[BANK1 ] int 
 11647 ;; Auto vars:     Size  Location     Type
 11648 ;;  t               2   32[BANK1 ] int 
 11649 ;; Return value:  Size  Location     Type
 11650 ;;                  2   21[BANK1 ] int 
 11651 ;; Registers used:
 11652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11653 ;; Tracked objects:
 11654 ;;		On entry : 0/0
 11655 ;;		On exit  : 0/0
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11658 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11659 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11660 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11661 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11662 ;;Total ram usage:       13 bytes
 11663 ;; Hardware stack levels used:    1
 11664 ;; Hardware stack levels required when called:    9
 11665 ;; This function calls:
 11666 ;;		_LEDsOn
 11667 ;;		_printf
 11668 ;; This function is called by:
 11669 ;;		_execCmd
 11670 ;; This function uses a non-reentrant model
 11671 ;;
 11672                           
 11673                           
 11674                           ;psect for function _timedActiveHeatOn
 11675  09A2                     _timedActiveHeatOn:	
 11676                           
 11677                           ;main.c: 478: _delay((unsigned long)((2000)*(1000000/4000.0)));
 11678                           
 11679                           ;incstack = 0
 11680                           ; Regs used in _timedActiveHeatOn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11681  09A2  3003               	movlw	3
 11682  09A3  0021               	movlb	1	; select bank1
 11683  09A4  00BC               	movwf	(??_timedActiveHeatOn^(0+128)+1)
 11684  09A5  308A               	movlw	138
 11685  09A6  00BB               	movwf	??_timedActiveHeatOn^(0+128)
 11686  09A7  3055               	movlw	85
 11687  09A8                     u9107:	
 11688  09A8  0B89               	decfsz	9,f
 11689  09A9  29A8               	goto	u9107
 11690  09AA  0BBB               	decfsz	??_timedActiveHeatOn^(0+128),f
 11691  09AB  29A8               	goto	u9107
 11692  09AC  0BBC               	decfsz	(??_timedActiveHeatOn^(0+128)+1),f
 11693  09AD  29A8               	goto	u9107
 11694  09AE  3200               	nop2
 11695                           
 11696                           ;main.c: 479: do { LATCbits.LATC1 = 0; } while(0);
 11697  09AF  0022               	movlb	2	; select bank2
 11698  09B0  108E               	bcf	14,1	;volatile
 11699                           
 11700                           ;main.c: 480: if(topOrB == 1){
 11701  09B1  0021               	movlb	1	; select bank1
 11702  09B2  0339               	decf	timedActiveHeatOn@topOrB^(0+128),w
 11703  09B3  043A               	iorwf	(timedActiveHeatOn@topOrB+1)^(0+128),w
 11704  09B4  1D03               	btfss	3,2
 11705  09B5  29C7               	goto	l8131
 11706                           
 11707                           ;main.c: 481: LEDsOn(activeMask, 1);
 11708  09B6  0860               	movf	(_activeMask+3)^(0+128),w
 11709  09B7  0020               	movlb	0	; select bank0
 11710  09B8  00C7               	movwf	LEDsOn@LEDpins+3
 11711  09B9  0021               	movlb	1	; select bank1
 11712  09BA  085F               	movf	(_activeMask+2)^(0+128),w
 11713  09BB  0020               	movlb	0	; select bank0
 11714  09BC  00C6               	movwf	LEDsOn@LEDpins+2
 11715  09BD  0021               	movlb	1	; select bank1
 11716  09BE  085E               	movf	(_activeMask+1)^(0+128),w
 11717  09BF  0020               	movlb	0	; select bank0
 11718  09C0  00C5               	movwf	LEDsOn@LEDpins+1
 11719  09C1  0021               	movlb	1	; select bank1
 11720  09C2  085D               	movf	_activeMask^(0+128),w
 11721  09C3  0020               	movlb	0	; select bank0
 11722  09C4  00C4               	movwf	LEDsOn@LEDpins
 11723  09C5  3001               	movlw	1
 11724  09C6  29DD               	goto	L22
 11725  09C7                     l8131:	
 11726                           ;main.c: 482: }
 11727                           
 11728                           
 11729                           ;main.c: 483: else if (topOrB == 2){
 11730  09C7  3002               	movlw	2
 11731  09C8  0021               	movlb	1	; select bank1
 11732  09C9  0639               	xorwf	timedActiveHeatOn@topOrB^(0+128),w
 11733  09CA  043A               	iorwf	(timedActiveHeatOn@topOrB+1)^(0+128),w
 11734  09CB  1D03               	btfss	3,2
 11735  09CC  29E3               	goto	l8135
 11736                           
 11737                           ;main.c: 484: LEDsOn(activeMask, 2);
 11738  09CD  0860               	movf	(_activeMask+3)^(0+128),w
 11739  09CE  0020               	movlb	0	; select bank0
 11740  09CF  00C7               	movwf	LEDsOn@LEDpins+3
 11741  09D0  0021               	movlb	1	; select bank1
 11742  09D1  085F               	movf	(_activeMask+2)^(0+128),w
 11743  09D2  0020               	movlb	0	; select bank0
 11744  09D3  00C6               	movwf	LEDsOn@LEDpins+2
 11745  09D4  0021               	movlb	1	; select bank1
 11746  09D5  085E               	movf	(_activeMask+1)^(0+128),w
 11747  09D6  0020               	movlb	0	; select bank0
 11748  09D7  00C5               	movwf	LEDsOn@LEDpins+1
 11749  09D8  0021               	movlb	1	; select bank1
 11750  09D9  085D               	movf	_activeMask^(0+128),w
 11751  09DA  0020               	movlb	0	; select bank0
 11752  09DB  00C4               	movwf	LEDsOn@LEDpins
 11753  09DC  3002               	movlw	2
 11754  09DD                     L22:	
 11755  09DD  00C8               	movwf	LEDsOn@topOrBottom
 11756  09DE  3000               	movlw	0
 11757  09DF  00C9               	movwf	LEDsOn@topOrBottom+1
 11758  09E0  31A5  25AD  3189   	fcall	_LEDsOn
 11759  09E3                     l8135:	
 11760                           
 11761                           ;main.c: 485: }
 11762                           ;main.c: 486: for(int t=0; t<onTime; t++) _delay((unsigned long)((1)*(1000000/4000.0)));
 11763  09E3  0021               	movlb	1	; select bank1
 11764  09E4  01C0               	clrf	timedActiveHeatOn@t^(0+128)
 11765  09E5  01C1               	clrf	(timedActiveHeatOn@t+1)^(0+128)
 11766  09E6                     l1203:	
 11767  09E6  0840               	movf	timedActiveHeatOn@t^(0+128),w
 11768  09E7  00BB               	movwf	??_timedActiveHeatOn^(0+128)
 11769  09E8  0841               	movf	(timedActiveHeatOn@t+1)^(0+128),w
 11770  09E9  00BC               	movwf	(??_timedActiveHeatOn^(0+128)+1)
 11771  09EA  3000               	movlw	0
 11772  09EB  1BBC               	btfsc	(??_timedActiveHeatOn^(0+128)+1),7
 11773  09EC  30FF               	movlw	255
 11774  09ED  00BD               	movwf	(??_timedActiveHeatOn^(0+128)+2)
 11775  09EE  00BE               	movwf	(??_timedActiveHeatOn^(0+128)+3)
 11776  09EF  083E               	movf	(??_timedActiveHeatOn+3)^(0+128),w
 11777  09F0  3A80               	xorlw	128
 11778  09F1  00BF               	movwf	(??_timedActiveHeatOn+4)^(0+128)
 11779  09F2  0838               	movf	(timedActiveHeatOn@onTime+3)^(0+128),w
 11780  09F3  3A80               	xorlw	128
 11781  09F4  023F               	subwf	(??_timedActiveHeatOn+4)^(0+128),w
 11782  09F5  1D03               	skipz
 11783  09F6  2A01               	goto	u8193
 11784  09F7  0837               	movf	(timedActiveHeatOn@onTime+2)^(0+128),w
 11785  09F8  023D               	subwf	(??_timedActiveHeatOn+2)^(0+128),w
 11786  09F9  1D03               	skipz
 11787  09FA  2A01               	goto	u8193
 11788  09FB  0836               	movf	(timedActiveHeatOn@onTime+1)^(0+128),w
 11789  09FC  023C               	subwf	(??_timedActiveHeatOn+1)^(0+128),w
 11790  09FD  1D03               	skipz
 11791  09FE  2A01               	goto	u8193
 11792  09FF  0835               	movf	timedActiveHeatOn@onTime^(0+128),w
 11793  0A00  023B               	subwf	??_timedActiveHeatOn^(0+128),w
 11794  0A01                     u8193:	
 11795  0A01  1803               	btfsc	3,0
 11796  0A02  2A0D               	goto	l1206
 11797  0A03  3053               	movlw	83
 11798  0A04                     u9117:	
 11799  0A04  0B89               	decfsz	9,f
 11800  0A05  2A04               	goto	u9117
 11801  0A06  0000               	nop
 11802  0A07  3001               	movlw	1
 11803  0A08  0021               	movlb	1	; select bank1
 11804  0A09  07C0               	addwf	timedActiveHeatOn@t^(0+128),f
 11805  0A0A  3000               	movlw	0
 11806  0A0B  3DC1               	addwfc	(timedActiveHeatOn@t+1)^(0+128),f
 11807  0A0C  29E6               	goto	l1203
 11808  0A0D                     l1206:	
 11809                           ;main.c: 487: do { LATCbits.LATC1 = 1; } while(0);
 11810                           
 11811  0A0D  0022               	movlb	2	; select bank2
 11812  0A0E  148E               	bsf	14,1	;volatile
 11813                           
 11814                           ;main.c: 488: LEDsOn(0, 1);
 11815  0A0F  3000               	movlw	0
 11816  0A10  0020               	movlb	0	; select bank0
 11817  0A11  00C7               	movwf	LEDsOn@LEDpins+3
 11818  0A12  3000               	movlw	0
 11819  0A13  00C6               	movwf	LEDsOn@LEDpins+2
 11820  0A14  3000               	movlw	0
 11821  0A15  00C5               	movwf	LEDsOn@LEDpins+1
 11822  0A16  3000               	movlw	0
 11823  0A17  00C4               	movwf	LEDsOn@LEDpins
 11824  0A18  3001               	movlw	1
 11825  0A19  00C8               	movwf	LEDsOn@topOrBottom
 11826  0A1A  3000               	movlw	0
 11827  0A1B  00C9               	movwf	LEDsOn@topOrBottom+1
 11828  0A1C  31A5  25AD  3189   	fcall	_LEDsOn
 11829                           
 11830                           ;main.c: 489: LEDsOn(0, 2);
 11831  0A1F  3000               	movlw	0
 11832  0A20  0020               	movlb	0	; select bank0
 11833  0A21  00C7               	movwf	LEDsOn@LEDpins+3
 11834  0A22  3000               	movlw	0
 11835  0A23  00C6               	movwf	LEDsOn@LEDpins+2
 11836  0A24  3000               	movlw	0
 11837  0A25  00C5               	movwf	LEDsOn@LEDpins+1
 11838  0A26  3000               	movlw	0
 11839  0A27  00C4               	movwf	LEDsOn@LEDpins
 11840  0A28  3002               	movlw	2
 11841  0A29  00C8               	movwf	LEDsOn@topOrBottom
 11842  0A2A  3000               	movlw	0
 11843  0A2B  00C9               	movwf	LEDsOn@topOrBottom+1
 11844  0A2C  31A5  25AD  3189   	fcall	_LEDsOn
 11845                           
 11846                           ;main.c: 490: printf("A\n");
 11847  0A2F  3059               	movlw	low (STR_8| (0+32768))
 11848  0A30  0021               	movlb	1	; select bank1
 11849  0A31  00A0               	movwf	printf@f^(0+128)
 11850  0A32  30AA               	movlw	high (STR_8| (0+32768))
 11851  0A33  00A1               	movwf	(printf@f^(0+128)+1)
 11852  0A34  318E  26CE         	fcall	_printf
 11853                           
 11854                           ;main.c: 491: return 0;
 11855  0A36  0021               	movlb	1	; select bank1
 11856  0A37  01B5               	clrf	?_timedActiveHeatOn^(0+128)
 11857  0A38  01B6               	clrf	(?_timedActiveHeatOn+1)^(0+128)
 11858  0A39  0008               	return
 11859  0A3A                     __end_of_timedActiveHeatOn:	
 11860                           
 11861                           	psect	text22
 11862  2462                     __ptext22:	
 11863 ;; *************** function _startRelMove *****************
 11864 ;; Defined at:
 11865 ;;		line 280 in file "main.c"
 11866 ;; Parameters:    Size  Location     Type
 11867 ;;  steps           2   21[BANK1 ] int 
 11868 ;; Auto vars:     Size  Location     Type
 11869 ;;		None
 11870 ;; Return value:  Size  Location     Type
 11871 ;;                  2   21[BANK1 ] int 
 11872 ;; Registers used:
 11873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11874 ;; Tracked objects:
 11875 ;;		On entry : 0/0
 11876 ;;		On exit  : 0/0
 11877 ;;		Unchanged: 0/0
 11878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11879 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11882 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11883 ;;Total ram usage:        2 bytes
 11884 ;; Hardware stack levels used:    1
 11885 ;; Hardware stack levels required when called:    9
 11886 ;; This function calls:
 11887 ;;		_printf
 11888 ;; This function is called by:
 11889 ;;		_execCmd
 11890 ;; This function uses a non-reentrant model
 11891 ;;
 11892                           
 11893                           
 11894                           ;psect for function _startRelMove
 11895  2462                     _startRelMove:	
 11896                           
 11897                           ;main.c: 281: motionType = REL_MOVE;
 11898                           
 11899                           ;incstack = 0
 11900                           ; Regs used in _startRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11901  2462  0020               	movlb	0	; select bank0
 11902  2463  01D5               	clrf	_motionType
 11903  2464  0AD5               	incf	_motionType,f
 11904                           
 11905                           ;main.c: 282: remainingSteps = steps;
 11906  2465  0021               	movlb	1	; select bank1
 11907  2466  0835               	movf	startRelMove@steps^(0+128),w
 11908  2467  0022               	movlb	2	; select bank2
 11909  2468  00BE               	movwf	_remainingSteps^(0+256)
 11910  2469  0021               	movlb	1	; select bank1
 11911  246A  0836               	movf	(startRelMove@steps+1)^(0+128),w
 11912  246B  0022               	movlb	2	; select bank2
 11913  246C  00BF               	movwf	(_remainingSteps+1)^(0+256)
 11914  246D  0D89               	rlf	9,f
 11915  246E  3B89               	subwfb	9,f
 11916  246F  0989               	comf	9,f
 11917  2470  00C0               	movwf	(_remainingSteps+2)^(0+256)
 11918  2471  00C1               	movwf	(_remainingSteps+3)^(0+256)
 11919                           
 11920                           ;main.c: 283: printf("A\n");
 11921  2472  3059               	movlw	low (STR_8| (0+32768))
 11922  2473  0021               	movlb	1	; select bank1
 11923  2474  00A0               	movwf	printf@f^(0+128)
 11924  2475  30AA               	movlw	high (STR_8| (0+32768))
 11925  2476  00A1               	movwf	(printf@f^(0+128)+1)
 11926  2477  318E  26CE         	fcall	_printf
 11927                           
 11928                           ;main.c: 284: return 0;
 11929  2479  0021               	movlb	1	; select bank1
 11930  247A  01B5               	clrf	?_startRelMove^(0+128)
 11931  247B  01B6               	clrf	(?_startRelMove+1)^(0+128)
 11932  247C  0008               	return
 11933  247D                     __end_of_startRelMove:	
 11934                           
 11935                           	psect	text23
 11936  24B5                     __ptext23:	
 11937 ;; *************** function _startAbsMove *****************
 11938 ;; Defined at:
 11939 ;;		line 286 in file "main.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;  steps           2   21[BANK1 ] int 
 11942 ;; Auto vars:     Size  Location     Type
 11943 ;;		None
 11944 ;; Return value:  Size  Location     Type
 11945 ;;                  2   21[BANK1 ] int 
 11946 ;; Registers used:
 11947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11948 ;; Tracked objects:
 11949 ;;		On entry : 0/0
 11950 ;;		On exit  : 0/0
 11951 ;;		Unchanged: 0/0
 11952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11953 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11955 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11956 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11957 ;;Total ram usage:        3 bytes
 11958 ;; Hardware stack levels used:    1
 11959 ;; Hardware stack levels required when called:    9
 11960 ;; This function calls:
 11961 ;;		_printf
 11962 ;; This function is called by:
 11963 ;;		_execCmd
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967                           
 11968                           ;psect for function _startAbsMove
 11969  24B5                     _startAbsMove:	
 11970                           
 11971                           ;main.c: 287: motionType = ABS_MOVE;
 11972                           
 11973                           ;incstack = 0
 11974                           ; Regs used in _startAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11975  24B5  3002               	movlw	2
 11976  24B6  0020               	movlb	0	; select bank0
 11977  24B7  00C9               	movwf	??_startAbsMove
 11978  24B8  0849               	movf	??_startAbsMove,w
 11979  24B9  00D5               	movwf	_motionType
 11980                           
 11981                           ;main.c: 288: absCommand = steps;
 11982  24BA  0021               	movlb	1	; select bank1
 11983  24BB  0835               	movf	startAbsMove@steps^(0+128),w
 11984  24BC  0020               	movlb	0	; select bank0
 11985  24BD  00CE               	movwf	_absCommand
 11986  24BE  0021               	movlb	1	; select bank1
 11987  24BF  0836               	movf	(startAbsMove@steps+1)^(0+128),w
 11988  24C0  0020               	movlb	0	; select bank0
 11989  24C1  00CF               	movwf	_absCommand+1
 11990  24C2  0D89               	rlf	9,f
 11991  24C3  3B89               	subwfb	9,f
 11992  24C4  0989               	comf	9,f
 11993  24C5  00D0               	movwf	_absCommand+2
 11994  24C6  00D1               	movwf	_absCommand+3
 11995                           
 11996                           ;main.c: 289: printf("A\n");
 11997  24C7  3059               	movlw	low (STR_8| (0+32768))
 11998  24C8  0021               	movlb	1	; select bank1
 11999  24C9  00A0               	movwf	printf@f^(0+128)
 12000  24CA  30AA               	movlw	high (STR_8| (0+32768))
 12001  24CB  00A1               	movwf	(printf@f^(0+128)+1)
 12002  24CC  318E  26CE         	fcall	_printf
 12003                           
 12004                           ;main.c: 290: return 0;
 12005  24CE  0021               	movlb	1	; select bank1
 12006  24CF  01B5               	clrf	?_startAbsMove^(0+128)
 12007  24D0  01B6               	clrf	(?_startAbsMove+1)^(0+128)
 12008  24D1  0008               	return
 12009  24D2                     __end_of_startAbsMove:	
 12010                           
 12011                           	psect	text24
 12012  14B7                     __ptext24:	
 12013 ;; *************** function _setMoveMask *****************
 12014 ;; Defined at:
 12015 ;;		line 514 in file "main.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;  probeNum        2   21[BANK1 ] int 
 12018 ;;  onOff           2   23[BANK1 ] int 
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;		None
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  2   21[BANK1 ] int 
 12023 ;; Registers used:
 12024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12030 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12032 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12033 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12034 ;;Total ram usage:        8 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:    9
 12037 ;; This function calls:
 12038 ;;		_printf
 12039 ;; This function is called by:
 12040 ;;		_execCmd
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044                           
 12045                           ;psect for function _setMoveMask
 12046  14B7                     _setMoveMask:	
 12047                           
 12048                           ;main.c: 518: if (probeNum < 24){
 12049                           
 12050                           ;incstack = 0
 12051                           ; Regs used in _setMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12052  14B7  0021               	movlb	1	; select bank1
 12053  14B8  0836               	movf	(setMoveMask@probeNum+1)^(0+128),w
 12054  14B9  3A80               	xorlw	128
 12055  14BA  0020               	movlb	0	; select bank0
 12056  14BB  00C9               	movwf	??_setMoveMask
 12057  14BC  3080               	movlw	128
 12058  14BD  0249               	subwf	??_setMoveMask,w
 12059  14BE  1D03               	skipz
 12060  14BF  2CC3               	goto	u8255
 12061  14C0  3018               	movlw	24
 12062  14C1  0021               	movlb	1	; select bank1
 12063  14C2  0235               	subwf	setMoveMask@probeNum^(0+128),w
 12064  14C3                     u8255:	
 12065  14C3  1803               	skipnc
 12066  14C4  2D1D               	goto	l8181
 12067                           
 12068                           ;main.c: 519: if (onOff)
 12069  14C5  0021               	movlb	1	; select bank1
 12070  14C6  0837               	movf	setMoveMask@onOff^(0+128),w
 12071  14C7  0438               	iorwf	(setMoveMask@onOff+1)^(0+128),w
 12072  14C8  1903               	btfsc	3,2
 12073  14C9  2CED               	goto	l8173
 12074                           
 12075                           ;main.c: 520: moveMask |= (1UL<<probeNum);
 12076  14CA  3001               	movlw	1
 12077  14CB  0020               	movlb	0	; select bank0
 12078  14CC  00C9               	movwf	??_setMoveMask
 12079  14CD  3000               	movlw	0
 12080  14CE  00CA               	movwf	??_setMoveMask+1
 12081  14CF  3000               	movlw	0
 12082  14D0  00CB               	movwf	??_setMoveMask+2
 12083  14D1  3000               	movlw	0
 12084  14D2  00CC               	movwf	??_setMoveMask+3
 12085  14D3  0021               	movlb	1	; select bank1
 12086  14D4  0A35               	incf	setMoveMask@probeNum^(0+128),w
 12087  14D5  0020               	movlb	0	; select bank0
 12088  14D6  2CDB               	goto	u8270
 12089  14D7                     u8275:	
 12090  14D7  35C9               	lslf	??_setMoveMask,f
 12091  14D8  0DCA               	rlf	??_setMoveMask+1,f
 12092  14D9  0DCB               	rlf	??_setMoveMask+2,f
 12093  14DA  0DCC               	rlf	??_setMoveMask+3,f
 12094  14DB                     u8270:	
 12095  14DB  0B89               	decfsz	9,f
 12096  14DC  2CD7               	goto	u8275
 12097  14DD  0849               	movf	??_setMoveMask,w
 12098  14DE  0021               	movlb	1	; select bank1
 12099  14DF  04D9               	iorwf	_moveMask^(0+128),f
 12100  14E0  0020               	movlb	0	; select bank0
 12101  14E1  084A               	movf	??_setMoveMask+1,w
 12102  14E2  0021               	movlb	1	; select bank1
 12103  14E3  04DA               	iorwf	(_moveMask+1)^(0+128),f
 12104  14E4  0020               	movlb	0	; select bank0
 12105  14E5  084B               	movf	??_setMoveMask+2,w
 12106  14E6  0021               	movlb	1	; select bank1
 12107  14E7  04DB               	iorwf	(_moveMask+2)^(0+128),f
 12108  14E8  0020               	movlb	0	; select bank0
 12109  14E9  084C               	movf	??_setMoveMask+3,w
 12110  14EA  0021               	movlb	1	; select bank1
 12111  14EB  04DC               	iorwf	(_moveMask+3)^(0+128),f
 12112  14EC  2D13               	goto	l8175
 12113  14ED                     l8173:	
 12114                           
 12115                           ;main.c: 521: else
 12116                           ;main.c: 522: moveMask &= ~(1UL<< probeNum);
 12117  14ED  3001               	movlw	1
 12118  14EE  0020               	movlb	0	; select bank0
 12119  14EF  00C9               	movwf	??_setMoveMask
 12120  14F0  3000               	movlw	0
 12121  14F1  00CA               	movwf	??_setMoveMask+1
 12122  14F2  3000               	movlw	0
 12123  14F3  00CB               	movwf	??_setMoveMask+2
 12124  14F4  3000               	movlw	0
 12125  14F5  00CC               	movwf	??_setMoveMask+3
 12126  14F6  0021               	movlb	1	; select bank1
 12127  14F7  0A35               	incf	setMoveMask@probeNum^(0+128),w
 12128  14F8  0020               	movlb	0	; select bank0
 12129  14F9  2CFE               	goto	u8280
 12130  14FA                     u8285:	
 12131  14FA  35C9               	lslf	??_setMoveMask,f
 12132  14FB  0DCA               	rlf	??_setMoveMask+1,f
 12133  14FC  0DCB               	rlf	??_setMoveMask+2,f
 12134  14FD  0DCC               	rlf	??_setMoveMask+3,f
 12135  14FE                     u8280:	
 12136  14FE  0B89               	decfsz	9,f
 12137  14FF  2CFA               	goto	u8285
 12138  1500  09C9               	comf	??_setMoveMask,f
 12139  1501  09CA               	comf	??_setMoveMask+1,f
 12140  1502  09CB               	comf	??_setMoveMask+2,f
 12141  1503  09CC               	comf	??_setMoveMask+3,f
 12142  1504  0849               	movf	??_setMoveMask,w
 12143  1505  0021               	movlb	1	; select bank1
 12144  1506  05D9               	andwf	_moveMask^(0+128),f
 12145  1507  0020               	movlb	0	; select bank0
 12146  1508  084A               	movf	??_setMoveMask+1,w
 12147  1509  0021               	movlb	1	; select bank1
 12148  150A  05DA               	andwf	(_moveMask+1)^(0+128),f
 12149  150B  0020               	movlb	0	; select bank0
 12150  150C  084B               	movf	??_setMoveMask+2,w
 12151  150D  0021               	movlb	1	; select bank1
 12152  150E  05DB               	andwf	(_moveMask+2)^(0+128),f
 12153  150F  0020               	movlb	0	; select bank0
 12154  1510  084C               	movf	??_setMoveMask+3,w
 12155  1511  0021               	movlb	1	; select bank1
 12156  1512  05DC               	andwf	(_moveMask+3)^(0+128),f
 12157  1513                     l8175:	
 12158                           
 12159                           ;main.c: 523: printf("A\n");
 12160  1513  3059               	movlw	low (STR_8| (0+32768))
 12161  1514  00A0               	movwf	printf@f^(0+128)
 12162  1515  30AA               	movlw	high (STR_8| (0+32768))
 12163  1516  00A1               	movwf	(printf@f^(0+128)+1)
 12164  1517  318E  26CE         	fcall	_printf
 12165                           
 12166                           ;main.c: 524: return 0;
 12167  1519  0021               	movlb	1	; select bank1
 12168  151A  01B5               	clrf	?_setMoveMask^(0+128)
 12169  151B  01B6               	clrf	(?_setMoveMask+1)^(0+128)
 12170  151C  0008               	return
 12171  151D                     l8181:	
 12172                           
 12173                           ;main.c: 525: }
 12174                           ;main.c: 526: printf("E\n");
 12175  151D  305C               	movlw	low (STR_17| (0+32768))
 12176  151E  0021               	movlb	1	; select bank1
 12177  151F  00A0               	movwf	printf@f^(0+128)
 12178  1520  30AA               	movlw	high (STR_17| (0+32768))
 12179  1521  00A1               	movwf	(printf@f^(0+128)+1)
 12180  1522  318E  26CE         	fcall	_printf
 12181                           
 12182                           ;main.c: 527: return 1;
 12183  1524  3001               	movlw	1
 12184  1525  0021               	movlb	1	; select bank1
 12185  1526  00B5               	movwf	?_setMoveMask^(0+128)
 12186  1527  3000               	movlw	0
 12187  1528  00B6               	movwf	(?_setMoveMask^(0+128)+1)
 12188  1529  0008               	return
 12189  152A                     __end_of_setMoveMask:	
 12190                           
 12191                           	psect	text25
 12192  250E                     __ptext25:	
 12193 ;; *************** function _setLEDPwr *****************
 12194 ;; Defined at:
 12195 ;;		line 450 in file "main.c"
 12196 ;; Parameters:    Size  Location     Type
 12197 ;;  pwr             2   21[BANK1 ] int 
 12198 ;;  topOrBottom     2   23[BANK1 ] int 
 12199 ;; Auto vars:     Size  Location     Type
 12200 ;;		None
 12201 ;; Return value:  Size  Location     Type
 12202 ;;                  2   21[BANK1 ] int 
 12203 ;; Registers used:
 12204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12205 ;; Tracked objects:
 12206 ;;		On entry : 0/0
 12207 ;;		On exit  : 0/0
 12208 ;;		Unchanged: 0/0
 12209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12210 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12213 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12214 ;;Total ram usage:        4 bytes
 12215 ;; Hardware stack levels used:    1
 12216 ;; Hardware stack levels required when called:    9
 12217 ;; This function calls:
 12218 ;;		_LEDsPwr
 12219 ;;		_printf
 12220 ;; This function is called by:
 12221 ;;		_execCmd
 12222 ;; This function uses a non-reentrant model
 12223 ;;
 12224                           
 12225                           
 12226                           ;psect for function _setLEDPwr
 12227  250E                     _setLEDPwr:	
 12228                           
 12229                           ;main.c: 451: LEDsPwr(pwr, topOrBottom);
 12230                           
 12231                           ;incstack = 0
 12232                           ; Regs used in _setLEDPwr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12233  250E  0021               	movlb	1	; select bank1
 12234  250F  0836               	movf	(setLEDPwr@pwr+1)^(0+128),w
 12235  2510  0020               	movlb	0	; select bank0
 12236  2511  00C5               	movwf	LEDsPwr@pwr+1
 12237  2512  0021               	movlb	1	; select bank1
 12238  2513  0835               	movf	setLEDPwr@pwr^(0+128),w
 12239  2514  0020               	movlb	0	; select bank0
 12240  2515  00C4               	movwf	LEDsPwr@pwr
 12241  2516  0021               	movlb	1	; select bank1
 12242  2517  0838               	movf	(setLEDPwr@topOrBottom+1)^(0+128),w
 12243  2518  0020               	movlb	0	; select bank0
 12244  2519  00C7               	movwf	LEDsPwr@topOrBottom+1
 12245  251A  0021               	movlb	1	; select bank1
 12246  251B  0837               	movf	setLEDPwr@topOrBottom^(0+128),w
 12247  251C  0020               	movlb	0	; select bank0
 12248  251D  00C6               	movwf	LEDsPwr@topOrBottom
 12249  251E  319F  2737  31A5   	fcall	_LEDsPwr
 12250                           
 12251                           ;main.c: 452: printf("A\n");
 12252  2521  3059               	movlw	low (STR_8| (0+32768))
 12253  2522  0021               	movlb	1	; select bank1
 12254  2523  00A0               	movwf	printf@f^(0+128)
 12255  2524  30AA               	movlw	high (STR_8| (0+32768))
 12256  2525  00A1               	movwf	(printf@f^(0+128)+1)
 12257  2526  318E  26CE         	fcall	_printf
 12258                           
 12259                           ;main.c: 453: return 0;
 12260  2528  0021               	movlb	1	; select bank1
 12261  2529  01B5               	clrf	?_setLEDPwr^(0+128)
 12262  252A  01B6               	clrf	(?_setLEDPwr+1)^(0+128)
 12263  252B  0008               	return
 12264  252C                     __end_of_setLEDPwr:	
 12265                           
 12266                           	psect	text26
 12267  1F37                     __ptext26:	
 12268 ;; *************** function _LEDsPwr *****************
 12269 ;; Defined at:
 12270 ;;		line 12 in file "LEDcomm.c"
 12271 ;; Parameters:    Size  Location     Type
 12272 ;;  pwr             2   36[BANK0 ] int 
 12273 ;;  topOrBottom     2   38[BANK0 ] int 
 12274 ;; Auto vars:     Size  Location     Type
 12275 ;;  pwrAll          4    0[BANK1 ] unsigned long 
 12276 ;; Return value:  Size  Location     Type
 12277 ;;                  1    wreg      void 
 12278 ;; Registers used:
 12279 ;;		wreg, status,2, status,0, pclath, cstack
 12280 ;; Tracked objects:
 12281 ;;		On entry : 0/0
 12282 ;;		On exit  : 0/0
 12283 ;;		Unchanged: 0/0
 12284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12285 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12286 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12287 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12288 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12289 ;;Total ram usage:       14 bytes
 12290 ;; Hardware stack levels used:    1
 12291 ;; Hardware stack levels required when called:    8
 12292 ;; This function calls:
 12293 ;;		_send_2length_2bytes_IK
 12294 ;; This function is called by:
 12295 ;;		_main_initialize
 12296 ;;		_setLEDPwr
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           
 12301                           ;psect for function _LEDsPwr
 12302  1F37                     _LEDsPwr:	
 12303                           
 12304                           ;LEDcomm.c: 13: pwr = (pwr>63) ? 63 : pwr;
 12305                           
 12306                           ;incstack = 0
 12307                           ; Regs used in _LEDsPwr: [wreg+status,2+status,0+pclath+cstack]
 12308  1F37  0020               	movlb	0	; select bank0
 12309  1F38  0845               	movf	LEDsPwr@pwr+1,w
 12310  1F39  3A80               	xorlw	128
 12311  1F3A  00C8               	movwf	??_LEDsPwr
 12312  1F3B  3080               	movlw	128
 12313  1F3C  0248               	subwf	??_LEDsPwr,w
 12314  1F3D  1D03               	skipz
 12315  1F3E  2F41               	goto	u7525
 12316  1F3F  3040               	movlw	64
 12317  1F40  0244               	subwf	LEDsPwr@pwr,w
 12318  1F41                     u7525:	
 12319  1F41  1C03               	btfss	3,0
 12320  1F42  2F48               	goto	l202
 12321  1F43  303F               	movlw	63
 12322  1F44  0020               	movlb	0	; select bank0
 12323  1F45  00C4               	movwf	LEDsPwr@pwr
 12324  1F46  3000               	movlw	0
 12325  1F47  00C5               	movwf	LEDsPwr@pwr+1
 12326  1F48                     l202:	
 12327                           
 12328                           ;LEDcomm.c: 14: unsigned long pwrAll = pwr | (pwr<<6) | (pwr<<12);
 12329  1F48  0020               	movlb	0	; select bank0
 12330  1F49  0845               	movf	LEDsPwr@pwr+1,w
 12331  1F4A  00C9               	movwf	??_LEDsPwr+1
 12332  1F4B  0844               	movf	LEDsPwr@pwr,w
 12333  1F4C  00C8               	movwf	??_LEDsPwr
 12334  1F4D  0E48               	swapf	??_LEDsPwr,w
 12335  1F4E  39F0               	andlw	240
 12336  1F4F  00C9               	movwf	??_LEDsPwr+1
 12337  1F50  01C8               	clrf	??_LEDsPwr
 12338  1F51  0845               	movf	LEDsPwr@pwr+1,w
 12339  1F52  00CB               	movwf	??_LEDsPwr+3
 12340  1F53  0844               	movf	LEDsPwr@pwr,w
 12341  1F54  00CA               	movwf	??_LEDsPwr+2
 12342  1F55  3006               	movlw	6
 12343  1F56                     u7535:	
 12344  1F56  35CA               	lslf	??_LEDsPwr+2,f
 12345  1F57  0DCB               	rlf	??_LEDsPwr+3,f
 12346  1F58  0B89               	decfsz	9,f
 12347  1F59  2F56               	goto	u7535
 12348  1F5A  0848               	movf	??_LEDsPwr,w
 12349  1F5B  044A               	iorwf	??_LEDsPwr+2,w
 12350  1F5C  00CC               	movwf	??_LEDsPwr+4
 12351  1F5D  0849               	movf	??_LEDsPwr+1,w
 12352  1F5E  044B               	iorwf	??_LEDsPwr+3,w
 12353  1F5F  00CD               	movwf	??_LEDsPwr+5
 12354  1F60  0844               	movf	LEDsPwr@pwr,w
 12355  1F61  044C               	iorwf	??_LEDsPwr+4,w
 12356  1F62  0021               	movlb	1	; select bank1
 12357  1F63  00A0               	movwf	LEDsPwr@pwrAll^(0+128)
 12358  1F64  0020               	movlb	0	; select bank0
 12359  1F65  0845               	movf	LEDsPwr@pwr+1,w
 12360  1F66  044D               	iorwf	??_LEDsPwr+5,w
 12361  1F67  0021               	movlb	1	; select bank1
 12362  1F68  00A1               	movwf	(LEDsPwr@pwrAll+1)^(0+128)
 12363  1F69  01A2               	clrf	(LEDsPwr@pwrAll^(0+128)+2)
 12364  1F6A  1BA1               	btfsc	(LEDsPwr@pwrAll^(0+128)+1),7
 12365  1F6B  03A2               	decf	(LEDsPwr@pwrAll+2)^(0+128),f
 12366  1F6C  0822               	movf	(LEDsPwr@pwrAll^(0+128)+2),w
 12367  1F6D  00A3               	movwf	(LEDsPwr@pwrAll+3)^(0+128)
 12368                           
 12369                           ;LEDcomm.c: 15: send_2length_2bytes_IK((unsigned int)((pwrAll>>16) & 0xFFFF),(unsigned i
      +                          nt)pwrAll, 7, topOrBottom);
 12370  1F6E  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12371  1F6F  0020               	movlb	0	; select bank0
 12372  1F70  00C8               	movwf	??_LEDsPwr
 12373  1F71  0021               	movlb	1	; select bank1
 12374  1F72  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12375  1F73  0020               	movlb	0	; select bank0
 12376  1F74  00C9               	movwf	??_LEDsPwr+1
 12377  1F75  0021               	movlb	1	; select bank1
 12378  1F76  0822               	movf	(LEDsPwr@pwrAll+2)^(0+128),w
 12379  1F77  0020               	movlb	0	; select bank0
 12380  1F78  00CA               	movwf	??_LEDsPwr+2
 12381  1F79  0021               	movlb	1	; select bank1
 12382  1F7A  0823               	movf	(LEDsPwr@pwrAll+3)^(0+128),w
 12383  1F7B  0020               	movlb	0	; select bank0
 12384  1F7C  00CB               	movwf	??_LEDsPwr+3
 12385  1F7D  3010               	movlw	16
 12386  1F7E                     u7545:	
 12387  1F7E  36CB               	lsrf	??_LEDsPwr+3,f
 12388  1F7F  0CCA               	rrf	??_LEDsPwr+2,f
 12389  1F80  0CC9               	rrf	??_LEDsPwr+1,f
 12390  1F81  0CC8               	rrf	??_LEDsPwr,f
 12391  1F82  0B89               	decfsz	9,f
 12392  1F83  2F7E               	goto	u7545
 12393  1F84  0849               	movf	??_LEDsPwr+1,w
 12394  1F85  00BD               	movwf	send_2length_2bytes_IK@data1+1
 12395  1F86  0848               	movf	??_LEDsPwr,w
 12396  1F87  00BC               	movwf	send_2length_2bytes_IK@data1
 12397  1F88  0021               	movlb	1	; select bank1
 12398  1F89  0821               	movf	(LEDsPwr@pwrAll+1)^(0+128),w
 12399  1F8A  0020               	movlb	0	; select bank0
 12400  1F8B  00BF               	movwf	send_2length_2bytes_IK@data2+1
 12401  1F8C  0021               	movlb	1	; select bank1
 12402  1F8D  0820               	movf	LEDsPwr@pwrAll^(0+128),w
 12403  1F8E  0020               	movlb	0	; select bank0
 12404  1F8F  00BE               	movwf	send_2length_2bytes_IK@data2
 12405  1F90  3007               	movlw	7
 12406  1F91  00CC               	movwf	??_LEDsPwr+4
 12407  1F92  084C               	movf	??_LEDsPwr+4,w
 12408  1F93  00C0               	movwf	send_2length_2bytes_IK@latch_start
 12409  1F94  0847               	movf	LEDsPwr@topOrBottom+1,w
 12410  1F95  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 12411  1F96  0846               	movf	LEDsPwr@topOrBottom,w
 12412  1F97  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 12413  1F98  31A4  2416         	fcall	_send_2length_2bytes_IK
 12414  1F9A  0008               	return
 12415  1F9B                     __end_of_LEDsPwr:	
 12416                           
 12417                           	psect	text27
 12418  24F0                     __ptext27:	
 12419 ;; *************** function _setLEDBrightnessRange *****************
 12420 ;; Defined at:
 12421 ;;		line 442 in file "main.c"
 12422 ;; Parameters:    Size  Location     Type
 12423 ;;  r               2   21[BANK1 ] int 
 12424 ;;  tOB             2   23[BANK1 ] int 
 12425 ;; Auto vars:     Size  Location     Type
 12426 ;;		None
 12427 ;; Return value:  Size  Location     Type
 12428 ;;                  2   21[BANK1 ] int 
 12429 ;; Registers used:
 12430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12431 ;; Tracked objects:
 12432 ;;		On entry : 0/0
 12433 ;;		On exit  : 0/0
 12434 ;;		Unchanged: 0/0
 12435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12436 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12439 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12440 ;;Total ram usage:        4 bytes
 12441 ;; Hardware stack levels used:    1
 12442 ;; Hardware stack levels required when called:    9
 12443 ;; This function calls:
 12444 ;;		_LED_setBrightnessRange
 12445 ;;		_printf
 12446 ;; This function is called by:
 12447 ;;		_execCmd
 12448 ;; This function uses a non-reentrant model
 12449 ;;
 12450                           
 12451                           
 12452                           ;psect for function _setLEDBrightnessRange
 12453  24F0                     _setLEDBrightnessRange:	
 12454                           
 12455                           ;main.c: 443: LED_setBrightnessRange(r, tOB);
 12456                           
 12457                           ;incstack = 0
 12458                           ; Regs used in _setLEDBrightnessRange: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12459  24F0  0021               	movlb	1	; select bank1
 12460  24F1  0836               	movf	(setLEDBrightnessRange@r+1)^(0+128),w
 12461  24F2  0020               	movlb	0	; select bank0
 12462  24F3  00C5               	movwf	LED_setBrightnessRange@range+1
 12463  24F4  0021               	movlb	1	; select bank1
 12464  24F5  0835               	movf	setLEDBrightnessRange@r^(0+128),w
 12465  24F6  0020               	movlb	0	; select bank0
 12466  24F7  00C4               	movwf	LED_setBrightnessRange@range
 12467  24F8  0021               	movlb	1	; select bank1
 12468  24F9  0838               	movf	(setLEDBrightnessRange@tOB+1)^(0+128),w
 12469  24FA  0020               	movlb	0	; select bank0
 12470  24FB  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 12471  24FC  0021               	movlb	1	; select bank1
 12472  24FD  0837               	movf	setLEDBrightnessRange@tOB^(0+128),w
 12473  24FE  0020               	movlb	0	; select bank0
 12474  24FF  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 12475  2500  318B  23DE  31A4   	fcall	_LED_setBrightnessRange
 12476                           
 12477                           ;main.c: 444: printf("A\n");
 12478  2503  3059               	movlw	low (STR_8| (0+32768))
 12479  2504  0021               	movlb	1	; select bank1
 12480  2505  00A0               	movwf	printf@f^(0+128)
 12481  2506  30AA               	movlw	high (STR_8| (0+32768))
 12482  2507  00A1               	movwf	(printf@f^(0+128)+1)
 12483  2508  318E  26CE         	fcall	_printf
 12484                           
 12485                           ;main.c: 445: return 0;
 12486  250A  0021               	movlb	1	; select bank1
 12487  250B  01B5               	clrf	?_setLEDBrightnessRange^(0+128)
 12488  250C  01B6               	clrf	(?_setLEDBrightnessRange+1)^(0+128)
 12489  250D  0008               	return
 12490  250E                     __end_of_setLEDBrightnessRange:	
 12491                           
 12492                           	psect	text28
 12493  1783                     __ptext28:	
 12494 ;; *************** function _setHeaterToggle *****************
 12495 ;; Defined at:
 12496 ;;		line 459 in file "main.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;  num             2   21[BANK1 ] int 
 12499 ;;  topOrB          2   23[BANK1 ] int 
 12500 ;; Auto vars:     Size  Location     Type
 12501 ;;		None
 12502 ;; Return value:  Size  Location     Type
 12503 ;;                  2   21[BANK1 ] int 
 12504 ;; Registers used:
 12505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12506 ;; Tracked objects:
 12507 ;;		On entry : 0/0
 12508 ;;		On exit  : 0/0
 12509 ;;		Unchanged: 0/0
 12510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12511 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12513 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12514 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12515 ;;Total ram usage:        8 bytes
 12516 ;; Hardware stack levels used:    1
 12517 ;; Hardware stack levels required when called:    9
 12518 ;; This function calls:
 12519 ;;		_LEDsOn
 12520 ;;		_printf
 12521 ;; This function is called by:
 12522 ;;		_execCmd
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           
 12527                           ;psect for function _setHeaterToggle
 12528  1783                     _setHeaterToggle:	
 12529                           
 12530                           ;incstack = 0
 12531                           ; Regs used in _setHeaterToggle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12532                           ;main.c: 460: do { LATCbits.LATC1 = 0; } while(0);
 12533  1783  0022               	movlb	2	; select bank2
 12534  1784  108E               	bcf	14,1	;volatile
 12535                           
 12536                           ;main.c: 461: if(topOrB == 1){
 12537  1785  0021               	movlb	1	; select bank1
 12538  1786  0337               	decf	setHeaterToggle@topOrB^(0+128),w
 12539  1787  0438               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12540  1788  1D03               	btfss	3,2
 12541  1789  2FBA               	goto	l8111
 12542                           
 12543                           ;main.c: 462: demoHeaterToggle_top ^= 1UL << num;
 12544  178A  3001               	movlw	1
 12545  178B  00B9               	movwf	??_setHeaterToggle^(0+128)
 12546  178C  3000               	movlw	0
 12547  178D  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 12548  178E  3000               	movlw	0
 12549  178F  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 12550  1790  3000               	movlw	0
 12551  1791  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 12552  1792  0A35               	incf	setHeaterToggle@num^(0+128),w
 12553  1793  2F98               	goto	u8140
 12554  1794                     u8145:	
 12555  1794  35B9               	lslf	??_setHeaterToggle^(0+128),f
 12556  1795  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12557  1796  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12558  1797  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12559  1798                     u8140:	
 12560  1798  0B89               	decfsz	9,f
 12561  1799  2F94               	goto	u8145
 12562  179A  0839               	movf	??_setHeaterToggle^(0+128),w
 12563  179B  0022               	movlb	2	; select bank2
 12564  179C  06C6               	xorwf	_demoHeaterToggle_top^(0+256),f
 12565  179D  0021               	movlb	1	; select bank1
 12566  179E  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 12567  179F  0022               	movlb	2	; select bank2
 12568  17A0  06C7               	xorwf	(_demoHeaterToggle_top+1)^(0+256),f
 12569  17A1  0021               	movlb	1	; select bank1
 12570  17A2  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 12571  17A3  0022               	movlb	2	; select bank2
 12572  17A4  06C8               	xorwf	(_demoHeaterToggle_top+2)^(0+256),f
 12573  17A5  0021               	movlb	1	; select bank1
 12574  17A6  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 12575  17A7  0022               	movlb	2	; select bank2
 12576  17A8  06C9               	xorwf	(_demoHeaterToggle_top+3)^(0+256),f
 12577                           
 12578                           ;main.c: 463: LEDsOn(demoHeaterToggle_top, 1);
 12579  17A9  0849               	movf	(_demoHeaterToggle_top+3)^(0+256),w
 12580  17AA  0020               	movlb	0	; select bank0
 12581  17AB  00C7               	movwf	LEDsOn@LEDpins+3
 12582  17AC  0022               	movlb	2	; select bank2
 12583  17AD  0848               	movf	(_demoHeaterToggle_top+2)^(0+256),w
 12584  17AE  0020               	movlb	0	; select bank0
 12585  17AF  00C6               	movwf	LEDsOn@LEDpins+2
 12586  17B0  0022               	movlb	2	; select bank2
 12587  17B1  0847               	movf	(_demoHeaterToggle_top+1)^(0+256),w
 12588  17B2  0020               	movlb	0	; select bank0
 12589  17B3  00C5               	movwf	LEDsOn@LEDpins+1
 12590  17B4  0022               	movlb	2	; select bank2
 12591  17B5  0846               	movf	_demoHeaterToggle_top^(0+256),w
 12592  17B6  0020               	movlb	0	; select bank0
 12593  17B7  00C4               	movwf	LEDsOn@LEDpins
 12594  17B8  3001               	movlw	1
 12595  17B9  2FEF               	goto	L23
 12596  17BA                     l8111:	
 12597                           ;main.c: 464: }
 12598                           
 12599                           
 12600                           ;main.c: 465: else if (topOrB == 2){
 12601  17BA  3002               	movlw	2
 12602  17BB  0021               	movlb	1	; select bank1
 12603  17BC  0637               	xorwf	setHeaterToggle@topOrB^(0+128),w
 12604  17BD  0438               	iorwf	(setHeaterToggle@topOrB+1)^(0+128),w
 12605  17BE  1D03               	btfss	3,2
 12606  17BF  2FF5               	goto	l8117
 12607                           
 12608                           ;main.c: 466: demoHeaterToggle_bot ^= 1UL << num;
 12609  17C0  3001               	movlw	1
 12610  17C1  00B9               	movwf	??_setHeaterToggle^(0+128)
 12611  17C2  3000               	movlw	0
 12612  17C3  00BA               	movwf	(??_setHeaterToggle^(0+128)+1)
 12613  17C4  3000               	movlw	0
 12614  17C5  00BB               	movwf	(??_setHeaterToggle^(0+128)+2)
 12615  17C6  3000               	movlw	0
 12616  17C7  00BC               	movwf	(??_setHeaterToggle^(0+128)+3)
 12617  17C8  0A35               	incf	setHeaterToggle@num^(0+128),w
 12618  17C9  2FCE               	goto	u8160
 12619  17CA                     u8165:	
 12620  17CA  35B9               	lslf	??_setHeaterToggle^(0+128),f
 12621  17CB  0DBA               	rlf	(??_setHeaterToggle^(0+128)+1),f
 12622  17CC  0DBB               	rlf	(??_setHeaterToggle^(0+128)+2),f
 12623  17CD  0DBC               	rlf	(??_setHeaterToggle^(0+128)+3),f
 12624  17CE                     u8160:	
 12625  17CE  0B89               	decfsz	9,f
 12626  17CF  2FCA               	goto	u8165
 12627  17D0  0839               	movf	??_setHeaterToggle^(0+128),w
 12628  17D1  0022               	movlb	2	; select bank2
 12629  17D2  06C2               	xorwf	_demoHeaterToggle_bot^(0+256),f
 12630  17D3  0021               	movlb	1	; select bank1
 12631  17D4  083A               	movf	(??_setHeaterToggle+1)^(0+128),w
 12632  17D5  0022               	movlb	2	; select bank2
 12633  17D6  06C3               	xorwf	(_demoHeaterToggle_bot+1)^(0+256),f
 12634  17D7  0021               	movlb	1	; select bank1
 12635  17D8  083B               	movf	(??_setHeaterToggle+2)^(0+128),w
 12636  17D9  0022               	movlb	2	; select bank2
 12637  17DA  06C4               	xorwf	(_demoHeaterToggle_bot+2)^(0+256),f
 12638  17DB  0021               	movlb	1	; select bank1
 12639  17DC  083C               	movf	(??_setHeaterToggle+3)^(0+128),w
 12640  17DD  0022               	movlb	2	; select bank2
 12641  17DE  06C5               	xorwf	(_demoHeaterToggle_bot+3)^(0+256),f
 12642                           
 12643                           ;main.c: 467: LEDsOn(demoHeaterToggle_bot, 2);
 12644  17DF  0845               	movf	(_demoHeaterToggle_bot+3)^(0+256),w
 12645  17E0  0020               	movlb	0	; select bank0
 12646  17E1  00C7               	movwf	LEDsOn@LEDpins+3
 12647  17E2  0022               	movlb	2	; select bank2
 12648  17E3  0844               	movf	(_demoHeaterToggle_bot+2)^(0+256),w
 12649  17E4  0020               	movlb	0	; select bank0
 12650  17E5  00C6               	movwf	LEDsOn@LEDpins+2
 12651  17E6  0022               	movlb	2	; select bank2
 12652  17E7  0843               	movf	(_demoHeaterToggle_bot+1)^(0+256),w
 12653  17E8  0020               	movlb	0	; select bank0
 12654  17E9  00C5               	movwf	LEDsOn@LEDpins+1
 12655  17EA  0022               	movlb	2	; select bank2
 12656  17EB  0842               	movf	_demoHeaterToggle_bot^(0+256),w
 12657  17EC  0020               	movlb	0	; select bank0
 12658  17ED  00C4               	movwf	LEDsOn@LEDpins
 12659  17EE  3002               	movlw	2
 12660  17EF                     L23:	
 12661  17EF  00C8               	movwf	LEDsOn@topOrBottom
 12662  17F0  3000               	movlw	0
 12663  17F1  00C9               	movwf	LEDsOn@topOrBottom+1
 12664  17F2  31A5  25AD  3197   	fcall	_LEDsOn
 12665  17F5                     l8117:	
 12666                           
 12667                           ;main.c: 468: }
 12668                           ;main.c: 470: printf("A\n");
 12669  17F5  3059               	movlw	low (STR_8| (0+32768))
 12670  17F6  0021               	movlb	1	; select bank1
 12671  17F7  00A0               	movwf	printf@f^(0+128)
 12672  17F8  30AA               	movlw	high (STR_8| (0+32768))
 12673  17F9  00A1               	movwf	(printf@f^(0+128)+1)
 12674  17FA  318E  26CE         	fcall	_printf
 12675                           
 12676                           ;main.c: 471: return 0;
 12677  17FC  0021               	movlb	1	; select bank1
 12678  17FD  01B5               	clrf	?_setHeaterToggle^(0+128)
 12679  17FE  01B6               	clrf	(?_setHeaterToggle+1)^(0+128)
 12680  17FF  0008               	return
 12681  1800                     __end_of_setHeaterToggle:	
 12682                           
 12683                           	psect	text29
 12684  1E79                     __ptext29:	
 12685 ;; *************** function _setHeaterPreTime *****************
 12686 ;; Defined at:
 12687 ;;		line 426 in file "main.c"
 12688 ;; Parameters:    Size  Location     Type
 12689 ;;  t               2   29[BANK1 ] int 
 12690 ;; Auto vars:     Size  Location     Type
 12691 ;;		None
 12692 ;; Return value:  Size  Location     Type
 12693 ;;                  2   29[BANK1 ] int 
 12694 ;; Registers used:
 12695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12696 ;; Tracked objects:
 12697 ;;		On entry : 0/0
 12698 ;;		On exit  : 0/0
 12699 ;;		Unchanged: 0/0
 12700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12701 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12703 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12704 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12705 ;;Total ram usage:        4 bytes
 12706 ;; Hardware stack levels used:    1
 12707 ;; Hardware stack levels required when called:    9
 12708 ;; This function calls:
 12709 ;;		_TMR0_Load8bitPeriod
 12710 ;;		___awtoft
 12711 ;;		___ftadd
 12712 ;;		___ftmul
 12713 ;;		___fttol
 12714 ;;		_printf
 12715 ;; This function is called by:
 12716 ;;		_execCmd
 12717 ;; This function uses a non-reentrant model
 12718 ;;
 12719                           
 12720                           
 12721                           ;psect for function _setHeaterPreTime
 12722  1E79                     _setHeaterPreTime:	
 12723                           
 12724                           ;main.c: 427: heater_pre_time_ms = t;
 12725                           
 12726                           ;incstack = 0
 12727                           ; Regs used in _setHeaterPreTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12728  1E79  0021               	movlb	1	; select bank1
 12729  1E7A  083E               	movf	(setHeaterPreTime@t+1)^(0+128),w
 12730  1E7B  00EE               	movwf	(_heater_pre_time_ms+1)^(0+128)
 12731  1E7C  083D               	movf	setHeaterPreTime@t^(0+128),w
 12732  1E7D  00ED               	movwf	_heater_pre_time_ms^(0+128)
 12733                           
 12734                           ;main.c: 428: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 12735  1E7E  096D               	comf	_heater_pre_time_ms^(0+128),w
 12736  1E7F  00BF               	movwf	??_setHeaterPreTime^(0+128)
 12737  1E80  096E               	comf	(_heater_pre_time_ms+1)^(0+128),w
 12738  1E81  00C0               	movwf	(??_setHeaterPreTime^(0+128)+1)
 12739  1E82  0ABF               	incf	??_setHeaterPreTime^(0+128),f
 12740  1E83  1903               	skipnz
 12741  1E84  0AC0               	incf	(??_setHeaterPreTime^(0+128)+1),f
 12742  1E85  0869               	movf	_piezo_on_time_ms^(0+128),w
 12743  1E86  073F               	addwf	??_setHeaterPreTime^(0+128),w
 12744  1E87  0020               	movlb	0	; select bank0
 12745  1E88  00B9               	movwf	___awtoft@c
 12746  1E89  0021               	movlb	1	; select bank1
 12747  1E8A  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 12748  1E8B  3D40               	addwfc	(??_setHeaterPreTime+1)^(0+128),w
 12749  1E8C  0020               	movlb	0	; select bank0
 12750  1E8D  00BA               	movwf	___awtoft@c+1
 12751  1E8E  31A5  25CE  319E   	fcall	___awtoft
 12752  1E91  0020               	movlb	0	; select bank0
 12753  1E92  0839               	movf	?___awtoft,w
 12754  1E93  00C2               	movwf	___ftmul@f2
 12755  1E94  083A               	movf	?___awtoft+1,w
 12756  1E95  00C3               	movwf	___ftmul@f2+1
 12757  1E96  083B               	movf	?___awtoft+2,w
 12758  1E97  00C4               	movwf	___ftmul@f2+2
 12759  1E98  3056               	movlw	low (_TMR0_RANGE| (0+32768))
 12760  1E99  0084               	movwf	4
 12761  1E9A  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 12762  1E9B  0085               	movwf	5
 12763  1E9C  3F00               	moviw [0]fsr0
 12764  1E9D  00BF               	movwf	___ftmul@f1
 12765  1E9E  3F01               	moviw [1]fsr0
 12766  1E9F  00C0               	movwf	___ftmul@f1+1
 12767  1EA0  3F02               	moviw [2]fsr0
 12768  1EA1  00C1               	movwf	___ftmul@f1+2
 12769  1EA2  318C  24BC  319E   	fcall	___ftmul
 12770  1EA5  0020               	movlb	0	; select bank0
 12771  1EA6  083F               	movf	?___ftmul,w
 12772  1EA7  0021               	movlb	1	; select bank1
 12773  1EA8  00A9               	movwf	___ftadd@f2^(0+128)
 12774  1EA9  0020               	movlb	0	; select bank0
 12775  1EAA  0840               	movf	?___ftmul+1,w
 12776  1EAB  0021               	movlb	1	; select bank1
 12777  1EAC  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 12778  1EAD  0020               	movlb	0	; select bank0
 12779  1EAE  0841               	movf	?___ftmul+2,w
 12780  1EAF  0021               	movlb	1	; select bank1
 12781  1EB0  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 12782  1EB1  3000               	movlw	0
 12783  1EB2  00A6               	movwf	___ftadd@f1^(0+128)
 12784  1EB3  3080               	movlw	128
 12785  1EB4  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 12786  1EB5  30BF               	movlw	191
 12787  1EB6  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 12788  1EB7  3186  26D1  319E   	fcall	___ftadd
 12789  1EBA  0021               	movlb	1	; select bank1
 12790  1EBB  0826               	movf	?___ftadd^(0+128),w
 12791  1EBC  00AF               	movwf	___fttol@f1^(0+128)
 12792  1EBD  0827               	movf	(?___ftadd+1)^(0+128),w
 12793  1EBE  00B0               	movwf	(___fttol@f1+1)^(0+128)
 12794  1EBF  0828               	movf	(?___ftadd+2)^(0+128),w
 12795  1EC0  00B1               	movwf	(___fttol@f1+2)^(0+128)
 12796  1EC1  3188  2092  319E   	fcall	___fttol
 12797  1EC4  0021               	movlb	1	; select bank1
 12798  1EC5  082F               	movf	?___fttol^(0+128),w
 12799  1EC6  31A2  221F  319E   	fcall	_TMR0_Load8bitPeriod
 12800                           
 12801                           ;main.c: 429: printf("A\n");
 12802  1EC9  3059               	movlw	low (STR_8| (0+32768))
 12803  1ECA  0021               	movlb	1	; select bank1
 12804  1ECB  00A0               	movwf	printf@f^(0+128)
 12805  1ECC  30AA               	movlw	high (STR_8| (0+32768))
 12806  1ECD  00A1               	movwf	(printf@f^(0+128)+1)
 12807  1ECE  318E  26CE         	fcall	_printf
 12808                           
 12809                           ;main.c: 430: return 0;
 12810  1ED0  0021               	movlb	1	; select bank1
 12811  1ED1  01BD               	clrf	?_setHeaterPreTime^(0+128)
 12812  1ED2  01BE               	clrf	(?_setHeaterPreTime+1)^(0+128)
 12813  1ED3  0008               	return
 12814  1ED4                     __end_of_setHeaterPreTime:	
 12815                           
 12816                           	psect	text30
 12817  1CC8                     __ptext30:	
 12818 ;; *************** function _setHeaterPostTime *****************
 12819 ;; Defined at:
 12820 ;;		line 432 in file "main.c"
 12821 ;; Parameters:    Size  Location     Type
 12822 ;;  t               2   29[BANK1 ] int 
 12823 ;; Auto vars:     Size  Location     Type
 12824 ;;		None
 12825 ;; Return value:  Size  Location     Type
 12826 ;;                  2   29[BANK1 ] int 
 12827 ;; Registers used:
 12828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12829 ;; Tracked objects:
 12830 ;;		On entry : 0/0
 12831 ;;		On exit  : 0/0
 12832 ;;		Unchanged: 0/0
 12833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12834 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12837 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12838 ;;Total ram usage:        2 bytes
 12839 ;; Hardware stack levels used:    1
 12840 ;; Hardware stack levels required when called:    9
 12841 ;; This function calls:
 12842 ;;		_TMR2_LoadPeriodRegister
 12843 ;;		___awtoft
 12844 ;;		___ftadd
 12845 ;;		___ftmul
 12846 ;;		___fttol
 12847 ;;		_printf
 12848 ;; This function is called by:
 12849 ;;		_execCmd
 12850 ;; This function uses a non-reentrant model
 12851 ;;
 12852                           
 12853                           
 12854                           ;psect for function _setHeaterPostTime
 12855  1CC8                     _setHeaterPostTime:	
 12856                           
 12857                           ;main.c: 433: heater_post_time_ms = t;
 12858                           
 12859                           ;incstack = 0
 12860                           ; Regs used in _setHeaterPostTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12861  1CC8  0021               	movlb	1	; select bank1
 12862  1CC9  083E               	movf	(setHeaterPostTime@t+1)^(0+128),w
 12863  1CCA  00EC               	movwf	(_heater_post_time_ms+1)^(0+128)
 12864  1CCB  083D               	movf	setHeaterPostTime@t^(0+128),w
 12865  1CCC  00EB               	movwf	_heater_post_time_ms^(0+128)
 12866                           
 12867                           ;main.c: 434: TMR2_LoadPeriodRegister((heater_post_time_ms*TMR2_RANGE)-1);
 12868  1CCD  086C               	movf	(_heater_post_time_ms+1)^(0+128),w
 12869  1CCE  0020               	movlb	0	; select bank0
 12870  1CCF  00BA               	movwf	___awtoft@c+1
 12871  1CD0  0021               	movlb	1	; select bank1
 12872  1CD1  086B               	movf	_heater_post_time_ms^(0+128),w
 12873  1CD2  0020               	movlb	0	; select bank0
 12874  1CD3  00B9               	movwf	___awtoft@c
 12875  1CD4  31A5  25CE  319C   	fcall	___awtoft
 12876  1CD7  0020               	movlb	0	; select bank0
 12877  1CD8  0839               	movf	?___awtoft,w
 12878  1CD9  00C2               	movwf	___ftmul@f2
 12879  1CDA  083A               	movf	?___awtoft+1,w
 12880  1CDB  00C3               	movwf	___ftmul@f2+1
 12881  1CDC  083B               	movf	?___awtoft+2,w
 12882  1CDD  00C4               	movwf	___ftmul@f2+2
 12883  1CDE  3053               	movlw	low (_TMR2_RANGE| (0+32768))
 12884  1CDF  0084               	movwf	4
 12885  1CE0  30AA               	movlw	high (_TMR2_RANGE| (0+32768))
 12886  1CE1  0085               	movwf	5
 12887  1CE2  3F00               	moviw [0]fsr0
 12888  1CE3  00BF               	movwf	___ftmul@f1
 12889  1CE4  3F01               	moviw [1]fsr0
 12890  1CE5  00C0               	movwf	___ftmul@f1+1
 12891  1CE6  3F02               	moviw [2]fsr0
 12892  1CE7  00C1               	movwf	___ftmul@f1+2
 12893  1CE8  318C  24BC  319C   	fcall	___ftmul
 12894  1CEB  0020               	movlb	0	; select bank0
 12895  1CEC  083F               	movf	?___ftmul,w
 12896  1CED  0021               	movlb	1	; select bank1
 12897  1CEE  00A9               	movwf	___ftadd@f2^(0+128)
 12898  1CEF  0020               	movlb	0	; select bank0
 12899  1CF0  0840               	movf	?___ftmul+1,w
 12900  1CF1  0021               	movlb	1	; select bank1
 12901  1CF2  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 12902  1CF3  0020               	movlb	0	; select bank0
 12903  1CF4  0841               	movf	?___ftmul+2,w
 12904  1CF5  0021               	movlb	1	; select bank1
 12905  1CF6  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 12906  1CF7  3000               	movlw	0
 12907  1CF8  00A6               	movwf	___ftadd@f1^(0+128)
 12908  1CF9  3080               	movlw	128
 12909  1CFA  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 12910  1CFB  30BF               	movlw	191
 12911  1CFC  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 12912  1CFD  3186  26D1  319C   	fcall	___ftadd
 12913  1D00  0021               	movlb	1	; select bank1
 12914  1D01  0826               	movf	?___ftadd^(0+128),w
 12915  1D02  00AF               	movwf	___fttol@f1^(0+128)
 12916  1D03  0827               	movf	(?___ftadd+1)^(0+128),w
 12917  1D04  00B0               	movwf	(___fttol@f1+1)^(0+128)
 12918  1D05  0828               	movf	(?___ftadd+2)^(0+128),w
 12919  1D06  00B1               	movwf	(___fttol@f1+2)^(0+128)
 12920  1D07  3188  2092  319C   	fcall	___fttol
 12921  1D0A  0021               	movlb	1	; select bank1
 12922  1D0B  082F               	movf	?___fttol^(0+128),w
 12923  1D0C  31A2  2224  319C   	fcall	_TMR2_LoadPeriodRegister
 12924                           
 12925                           ;main.c: 435: printf("A\n");
 12926  1D0F  3059               	movlw	low (STR_8| (0+32768))
 12927  1D10  0021               	movlb	1	; select bank1
 12928  1D11  00A0               	movwf	printf@f^(0+128)
 12929  1D12  30AA               	movlw	high (STR_8| (0+32768))
 12930  1D13  00A1               	movwf	(printf@f^(0+128)+1)
 12931  1D14  318E  26CE         	fcall	_printf
 12932                           
 12933                           ;main.c: 436: return 0;
 12934  1D16  0021               	movlb	1	; select bank1
 12935  1D17  01BD               	clrf	?_setHeaterPostTime^(0+128)
 12936  1D18  01BE               	clrf	(?_setHeaterPostTime+1)^(0+128)
 12937  1D19  0008               	return
 12938  1D1A                     __end_of_setHeaterPostTime:	
 12939                           
 12940                           	psect	text31
 12941  2224                     __ptext31:	
 12942 ;; *************** function _TMR2_LoadPeriodRegister *****************
 12943 ;; Defined at:
 12944 ;;		line 112 in file "mcc_generated_files/tmr2.c"
 12945 ;; Parameters:    Size  Location     Type
 12946 ;;  periodVal       1    wreg     unsigned char 
 12947 ;; Auto vars:     Size  Location     Type
 12948 ;;  periodVal       1   17[BANK0 ] unsigned char 
 12949 ;; Return value:  Size  Location     Type
 12950 ;;                  1    wreg      void 
 12951 ;; Registers used:
 12952 ;;		wreg
 12953 ;; Tracked objects:
 12954 ;;		On entry : 0/0
 12955 ;;		On exit  : 0/0
 12956 ;;		Unchanged: 0/0
 12957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12959 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12961 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12962 ;;Total ram usage:        1 bytes
 12963 ;; Hardware stack levels used:    1
 12964 ;; Hardware stack levels required when called:    6
 12965 ;; This function calls:
 12966 ;;		Nothing
 12967 ;; This function is called by:
 12968 ;;		_main_initialize
 12969 ;;		_setHeaterPostTime
 12970 ;; This function uses a non-reentrant model
 12971 ;;
 12972                           
 12973                           
 12974                           ;psect for function _TMR2_LoadPeriodRegister
 12975  2224                     _TMR2_LoadPeriodRegister:	
 12976                           
 12977                           ;incstack = 0
 12978                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
 12979                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
 12980  2224  0020               	movlb	0	; select bank0
 12981  2225  00B1               	movwf	TMR2_LoadPeriodRegister@periodVal
 12982                           
 12983                           ;tmr2.c: 114: PR2 = periodVal;
 12984  2226  0831               	movf	TMR2_LoadPeriodRegister@periodVal,w
 12985  2227  009E               	movwf	30	;volatile
 12986  2228  0008               	return
 12987  2229                     __end_of_TMR2_LoadPeriodRegister:	
 12988                           
 12989                           	psect	text32
 12990  1E1E                     __ptext32:	
 12991 ;; *************** function _setDrvPiezoOnTime *****************
 12992 ;; Defined at:
 12993 ;;		line 415 in file "main.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;  t               2   29[BANK1 ] int 
 12996 ;; Auto vars:     Size  Location     Type
 12997 ;;		None
 12998 ;; Return value:  Size  Location     Type
 12999 ;;                  2   29[BANK1 ] int 
 13000 ;; Registers used:
 13001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13002 ;; Tracked objects:
 13003 ;;		On entry : 0/0
 13004 ;;		On exit  : 0/0
 13005 ;;		Unchanged: 0/0
 13006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13007 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13009 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13010 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13011 ;;Total ram usage:        4 bytes
 13012 ;; Hardware stack levels used:    1
 13013 ;; Hardware stack levels required when called:    9
 13014 ;; This function calls:
 13015 ;;		_TMR0_Load8bitPeriod
 13016 ;;		___awtoft
 13017 ;;		___ftadd
 13018 ;;		___ftmul
 13019 ;;		___fttol
 13020 ;;		_printf
 13021 ;; This function is called by:
 13022 ;;		_execCmd
 13023 ;; This function uses a non-reentrant model
 13024 ;;
 13025                           
 13026                           
 13027                           ;psect for function _setDrvPiezoOnTime
 13028  1E1E                     _setDrvPiezoOnTime:	
 13029                           
 13030                           ;main.c: 416: piezo_on_time_ms = t;
 13031                           
 13032                           ;incstack = 0
 13033                           ; Regs used in _setDrvPiezoOnTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13034  1E1E  0021               	movlb	1	; select bank1
 13035  1E1F  083E               	movf	(setDrvPiezoOnTime@t+1)^(0+128),w
 13036  1E20  00EA               	movwf	(_piezo_on_time_ms+1)^(0+128)
 13037  1E21  083D               	movf	setDrvPiezoOnTime@t^(0+128),w
 13038  1E22  00E9               	movwf	_piezo_on_time_ms^(0+128)
 13039                           
 13040                           ;main.c: 417: TMR0_Load8bitPeriod(((piezo_on_time_ms-heater_pre_time_ms)*TMR0_RANGE)-1);
 13041  1E23  096D               	comf	_heater_pre_time_ms^(0+128),w
 13042  1E24  00BF               	movwf	??_setDrvPiezoOnTime^(0+128)
 13043  1E25  096E               	comf	(_heater_pre_time_ms+1)^(0+128),w
 13044  1E26  00C0               	movwf	(??_setDrvPiezoOnTime^(0+128)+1)
 13045  1E27  0ABF               	incf	??_setDrvPiezoOnTime^(0+128),f
 13046  1E28  1903               	skipnz
 13047  1E29  0AC0               	incf	(??_setDrvPiezoOnTime^(0+128)+1),f
 13048  1E2A  0869               	movf	_piezo_on_time_ms^(0+128),w
 13049  1E2B  073F               	addwf	??_setDrvPiezoOnTime^(0+128),w
 13050  1E2C  0020               	movlb	0	; select bank0
 13051  1E2D  00B9               	movwf	___awtoft@c
 13052  1E2E  0021               	movlb	1	; select bank1
 13053  1E2F  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 13054  1E30  3D40               	addwfc	(??_setDrvPiezoOnTime+1)^(0+128),w
 13055  1E31  0020               	movlb	0	; select bank0
 13056  1E32  00BA               	movwf	___awtoft@c+1
 13057  1E33  31A5  25CE  319E   	fcall	___awtoft
 13058  1E36  0020               	movlb	0	; select bank0
 13059  1E37  0839               	movf	?___awtoft,w
 13060  1E38  00C2               	movwf	___ftmul@f2
 13061  1E39  083A               	movf	?___awtoft+1,w
 13062  1E3A  00C3               	movwf	___ftmul@f2+1
 13063  1E3B  083B               	movf	?___awtoft+2,w
 13064  1E3C  00C4               	movwf	___ftmul@f2+2
 13065  1E3D  3056               	movlw	low (_TMR0_RANGE| (0+32768))
 13066  1E3E  0084               	movwf	4
 13067  1E3F  30AA               	movlw	high (_TMR0_RANGE| (0+32768))
 13068  1E40  0085               	movwf	5
 13069  1E41  3F00               	moviw [0]fsr0
 13070  1E42  00BF               	movwf	___ftmul@f1
 13071  1E43  3F01               	moviw [1]fsr0
 13072  1E44  00C0               	movwf	___ftmul@f1+1
 13073  1E45  3F02               	moviw [2]fsr0
 13074  1E46  00C1               	movwf	___ftmul@f1+2
 13075  1E47  318C  24BC  319E   	fcall	___ftmul
 13076  1E4A  0020               	movlb	0	; select bank0
 13077  1E4B  083F               	movf	?___ftmul,w
 13078  1E4C  0021               	movlb	1	; select bank1
 13079  1E4D  00A9               	movwf	___ftadd@f2^(0+128)
 13080  1E4E  0020               	movlb	0	; select bank0
 13081  1E4F  0840               	movf	?___ftmul+1,w
 13082  1E50  0021               	movlb	1	; select bank1
 13083  1E51  00AA               	movwf	(___ftadd@f2+1)^(0+128)
 13084  1E52  0020               	movlb	0	; select bank0
 13085  1E53  0841               	movf	?___ftmul+2,w
 13086  1E54  0021               	movlb	1	; select bank1
 13087  1E55  00AB               	movwf	(___ftadd@f2+2)^(0+128)
 13088  1E56  3000               	movlw	0
 13089  1E57  00A6               	movwf	___ftadd@f1^(0+128)
 13090  1E58  3080               	movlw	128
 13091  1E59  00A7               	movwf	(___ftadd@f1+1)^(0+128)
 13092  1E5A  30BF               	movlw	191
 13093  1E5B  00A8               	movwf	(___ftadd@f1+2)^(0+128)
 13094  1E5C  3186  26D1  319E   	fcall	___ftadd
 13095  1E5F  0021               	movlb	1	; select bank1
 13096  1E60  0826               	movf	?___ftadd^(0+128),w
 13097  1E61  00AF               	movwf	___fttol@f1^(0+128)
 13098  1E62  0827               	movf	(?___ftadd+1)^(0+128),w
 13099  1E63  00B0               	movwf	(___fttol@f1+1)^(0+128)
 13100  1E64  0828               	movf	(?___ftadd+2)^(0+128),w
 13101  1E65  00B1               	movwf	(___fttol@f1+2)^(0+128)
 13102  1E66  3188  2092  319E   	fcall	___fttol
 13103  1E69  0021               	movlb	1	; select bank1
 13104  1E6A  082F               	movf	?___fttol^(0+128),w
 13105  1E6B  31A2  221F  319E   	fcall	_TMR0_Load8bitPeriod
 13106                           
 13107                           ;main.c: 418: printf("A\n");
 13108  1E6E  3059               	movlw	low (STR_8| (0+32768))
 13109  1E6F  0021               	movlb	1	; select bank1
 13110  1E70  00A0               	movwf	printf@f^(0+128)
 13111  1E71  30AA               	movlw	high (STR_8| (0+32768))
 13112  1E72  00A1               	movwf	(printf@f^(0+128)+1)
 13113  1E73  318E  26CE         	fcall	_printf
 13114                           
 13115                           ;main.c: 419: return 0;
 13116  1E75  0021               	movlb	1	; select bank1
 13117  1E76  01BD               	clrf	?_setDrvPiezoOnTime^(0+128)
 13118  1E77  01BE               	clrf	(?_setDrvPiezoOnTime+1)^(0+128)
 13119  1E78  0008               	return
 13120  1E79                     __end_of_setDrvPiezoOnTime:	
 13121                           
 13122                           	psect	text33
 13123  0892                     __ptext33:	
 13124 ;; *************** function ___fttol *****************
 13125 ;; Defined at:
 13126 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 13127 ;; Parameters:    Size  Location     Type
 13128 ;;  f1              3   15[BANK1 ] float 
 13129 ;; Auto vars:     Size  Location     Type
 13130 ;;  lval            4   24[BANK1 ] unsigned long 
 13131 ;;  exp1            1   28[BANK1 ] unsigned char 
 13132 ;;  sign1           1   23[BANK1 ] unsigned char 
 13133 ;; Return value:  Size  Location     Type
 13134 ;;                  4   15[BANK1 ] long 
 13135 ;; Registers used:
 13136 ;;		wreg, status,2, status,0
 13137 ;; Tracked objects:
 13138 ;;		On entry : 0/0
 13139 ;;		On exit  : 0/0
 13140 ;;		Unchanged: 0/0
 13141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13142 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13143 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13144 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13145 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13146 ;;Total ram usage:       14 bytes
 13147 ;; Hardware stack levels used:    1
 13148 ;; Hardware stack levels required when called:    6
 13149 ;; This function calls:
 13150 ;;		Nothing
 13151 ;; This function is called by:
 13152 ;;		_main_initialize
 13153 ;;		_setDrvPiezoOnTime
 13154 ;;		_setHeaterPreTime
 13155 ;;		_setHeaterPostTime
 13156 ;;		_drv_outputSine
 13157 ;; This function uses a non-reentrant model
 13158 ;;
 13159                           
 13160                           
 13161                           ;psect for function ___fttol
 13162  0892                     ___fttol:	
 13163                           
 13164                           ;incstack = 0
 13165                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 13166  0892  0021               	movlb	1	; select bank1
 13167  0893  082F               	movf	___fttol@f1^(0+128),w
 13168  0894  00B3               	movwf	??___fttol^(0+128)
 13169  0895  0830               	movf	(___fttol@f1+1)^(0+128),w
 13170  0896  00B4               	movwf	(??___fttol^(0+128)+1)
 13171  0897  0831               	movf	(___fttol@f1+2)^(0+128),w
 13172  0898  00B5               	movwf	(??___fttol^(0+128)+2)
 13173  0899  1003               	clrc
 13174  089A  0D34               	rlf	(??___fttol^(0+128)+1),w
 13175  089B  0D35               	rlf	(??___fttol^(0+128)+2),w
 13176  089C  00B6               	movwf	(??___fttol+3)^(0+128)
 13177  089D  0836               	movf	(??___fttol+3)^(0+128),w
 13178  089E  00BC               	movwf	___fttol@exp1^(0+128)
 13179  089F  083C               	movf	___fttol@exp1^(0+128),w
 13180  08A0  1D03               	btfss	3,2
 13181  08A1  28AB               	goto	l5685
 13182  08A2  3000               	movlw	0
 13183  08A3  00B2               	movwf	(?___fttol+3)^(0+128)
 13184  08A4  3000               	movlw	0
 13185  08A5  00B1               	movwf	(?___fttol+2)^(0+128)
 13186  08A6  3000               	movlw	0
 13187  08A7  00B0               	movwf	(?___fttol+1)^(0+128)
 13188  08A8  3000               	movlw	0
 13189  08A9  00AF               	movwf	?___fttol^(0+128)
 13190  08AA  0008               	return
 13191  08AB                     l5685:	
 13192  08AB  082F               	movf	___fttol@f1^(0+128),w
 13193  08AC  00B3               	movwf	??___fttol^(0+128)
 13194  08AD  0830               	movf	(___fttol@f1+1)^(0+128),w
 13195  08AE  00B4               	movwf	(??___fttol^(0+128)+1)
 13196  08AF  0831               	movf	(___fttol@f1+2)^(0+128),w
 13197  08B0  00B5               	movwf	(??___fttol^(0+128)+2)
 13198  08B1  3017               	movlw	23
 13199  08B2                     u5075:	
 13200  08B2  36B5               	lsrf	(??___fttol^(0+128)+2),f
 13201  08B3  0CB4               	rrf	(??___fttol^(0+128)+1),f
 13202  08B4  0CB3               	rrf	??___fttol^(0+128),f
 13203  08B5  0B89               	decfsz	9,f
 13204  08B6  28B2               	goto	u5075
 13205  08B7  0833               	movf	??___fttol^(0+128),w
 13206  08B8  00B6               	movwf	(??___fttol+3)^(0+128)
 13207  08B9  0836               	movf	(??___fttol+3)^(0+128),w
 13208  08BA  00B7               	movwf	___fttol@sign1^(0+128)
 13209  08BB  17B0               	bsf	(___fttol@f1^(0+128)+1),7
 13210  08BC  30FF               	movlw	255
 13211  08BD  05AF               	andwf	___fttol@f1^(0+128),f
 13212  08BE  30FF               	movlw	255
 13213  08BF  05B0               	andwf	(___fttol@f1+1)^(0+128),f
 13214  08C0  3000               	movlw	0
 13215  08C1  05B1               	andwf	(___fttol@f1+2)^(0+128),f
 13216  08C2  082F               	movf	___fttol@f1^(0+128),w
 13217  08C3  00B8               	movwf	___fttol@lval^(0+128)
 13218  08C4  0830               	movf	(___fttol@f1+1)^(0+128),w
 13219  08C5  00B9               	movwf	(___fttol@lval^(0+128)+1)
 13220  08C6  0831               	movf	(___fttol@f1+2)^(0+128),w
 13221  08C7  00BA               	movwf	(___fttol@lval^(0+128)+2)
 13222  08C8  01BB               	clrf	(___fttol@lval^(0+128)+3)
 13223  08C9  308E               	movlw	142
 13224  08CA  02BC               	subwf	___fttol@exp1^(0+128),f
 13225  08CB  1FBC               	btfss	___fttol@exp1^(0+128),7
 13226  08CC  28E9               	goto	l5705
 13227  08CD  083C               	movf	___fttol@exp1^(0+128),w
 13228  08CE  3A80               	xorlw	128
 13229  08CF  3E8F               	addlw	143
 13230  08D0  1803               	skipnc
 13231  08D1  28DB               	goto	l5703
 13232  08D2  3000               	movlw	0
 13233  08D3  00B2               	movwf	(?___fttol+3)^(0+128)
 13234  08D4  3000               	movlw	0
 13235  08D5  00B1               	movwf	(?___fttol+2)^(0+128)
 13236  08D6  3000               	movlw	0
 13237  08D7  00B0               	movwf	(?___fttol+1)^(0+128)
 13238  08D8  3000               	movlw	0
 13239  08D9  00AF               	movwf	?___fttol^(0+128)
 13240  08DA  0008               	return
 13241  08DB                     l5703:	
 13242  08DB  3001               	movlw	1
 13243  08DC                     u5105:	
 13244  08DC  36BB               	lsrf	(___fttol@lval+3)^(0+128),f
 13245  08DD  0CBA               	rrf	(___fttol@lval+2)^(0+128),f
 13246  08DE  0CB9               	rrf	(___fttol@lval+1)^(0+128),f
 13247  08DF  0CB8               	rrf	___fttol@lval^(0+128),f
 13248  08E0  0B89               	decfsz	9,f
 13249  08E1  28DC               	goto	u5105
 13250  08E2  3001               	movlw	1
 13251  08E3  00B3               	movwf	??___fttol^(0+128)
 13252  08E4  0833               	movf	??___fttol^(0+128),w
 13253  08E5  07BC               	addwf	___fttol@exp1^(0+128),f
 13254  08E6  1903               	btfsc	3,2
 13255  08E7  2902               	goto	l5713
 13256  08E8  28DB               	goto	l5703
 13257  08E9                     l5705:	
 13258  08E9  3018               	movlw	24
 13259  08EA  023C               	subwf	___fttol@exp1^(0+128),w
 13260  08EB  1C03               	skipc
 13261  08EC  28FF               	goto	l1856
 13262  08ED  3000               	movlw	0
 13263  08EE  00B2               	movwf	(?___fttol+3)^(0+128)
 13264  08EF  3000               	movlw	0
 13265  08F0  00B1               	movwf	(?___fttol+2)^(0+128)
 13266  08F1  3000               	movlw	0
 13267  08F2  00B0               	movwf	(?___fttol+1)^(0+128)
 13268  08F3  3000               	movlw	0
 13269  08F4  00AF               	movwf	?___fttol^(0+128)
 13270  08F5  0008               	return
 13271  08F6                     l5711:	
 13272  08F6  3001               	movlw	1
 13273  08F7                     u5135:	
 13274  08F7  35B8               	lslf	___fttol@lval^(0+128),f
 13275  08F8  0DB9               	rlf	(___fttol@lval+1)^(0+128),f
 13276  08F9  0DBA               	rlf	(___fttol@lval+2)^(0+128),f
 13277  08FA  0DBB               	rlf	(___fttol@lval+3)^(0+128),f
 13278  08FB  0B89               	decfsz	9,f
 13279  08FC  28F7               	goto	u5135
 13280  08FD  3001               	movlw	1
 13281  08FE  02BC               	subwf	___fttol@exp1^(0+128),f
 13282  08FF                     l1856:	
 13283  08FF  083C               	movf	___fttol@exp1^(0+128),w
 13284  0900  1D03               	btfss	3,2
 13285  0901  28F6               	goto	l5711
 13286  0902                     l5713:	
 13287  0902  0837               	movf	___fttol@sign1^(0+128),w
 13288  0903  1903               	btfsc	3,2
 13289  0904  2910               	goto	l5717
 13290  0905  09B8               	comf	___fttol@lval^(0+128),f
 13291  0906  09B9               	comf	(___fttol@lval+1)^(0+128),f
 13292  0907  09BA               	comf	(___fttol@lval+2)^(0+128),f
 13293  0908  09BB               	comf	(___fttol@lval+3)^(0+128),f
 13294  0909  0AB8               	incf	___fttol@lval^(0+128),f
 13295  090A  1903               	skipnz
 13296  090B  0AB9               	incf	(___fttol@lval+1)^(0+128),f
 13297  090C  1903               	skipnz
 13298  090D  0ABA               	incf	(___fttol@lval+2)^(0+128),f
 13299  090E  1903               	skipnz
 13300  090F  0ABB               	incf	(___fttol@lval+3)^(0+128),f
 13301  0910                     l5717:	
 13302  0910  083B               	movf	(___fttol@lval+3)^(0+128),w
 13303  0911  00B2               	movwf	(?___fttol+3)^(0+128)
 13304  0912  083A               	movf	(___fttol@lval+2)^(0+128),w
 13305  0913  00B1               	movwf	(?___fttol+2)^(0+128)
 13306  0914  0839               	movf	(___fttol@lval+1)^(0+128),w
 13307  0915  00B0               	movwf	(?___fttol+1)^(0+128)
 13308  0916  0838               	movf	___fttol@lval^(0+128),w
 13309  0917  00AF               	movwf	?___fttol^(0+128)
 13310  0918  0008               	return
 13311  0919                     __end_of___fttol:	
 13312                           
 13313                           	psect	text34
 13314  0CBC                     __ptext34:	
 13315 ;; *************** function ___ftmul *****************
 13316 ;; Defined at:
 13317 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 13318 ;; Parameters:    Size  Location     Type
 13319 ;;  f1              3   31[BANK0 ] float 
 13320 ;;  f2              3   34[BANK0 ] float 
 13321 ;; Auto vars:     Size  Location     Type
 13322 ;;  f3_as_produc    3    1[BANK1 ] unsigned um
 13323 ;;  sign            1    5[BANK1 ] unsigned char 
 13324 ;;  cntr            1    4[BANK1 ] unsigned char 
 13325 ;;  exp             1    0[BANK1 ] unsigned char 
 13326 ;; Return value:  Size  Location     Type
 13327 ;;                  3   31[BANK0 ] float 
 13328 ;; Registers used:
 13329 ;;		wreg, status,2, status,0, pclath, cstack
 13330 ;; Tracked objects:
 13331 ;;		On entry : 0/0
 13332 ;;		On exit  : 0/0
 13333 ;;		Unchanged: 0/0
 13334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13335 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13336 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13337 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13338 ;;      Totals:         0      10       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13339 ;;Total ram usage:       16 bytes
 13340 ;; Hardware stack levels used:    1
 13341 ;; Hardware stack levels required when called:    7
 13342 ;; This function calls:
 13343 ;;		___ftpack
 13344 ;; This function is called by:
 13345 ;;		_main_initialize
 13346 ;;		_setDrvPiezoOnTime
 13347 ;;		_setHeaterPreTime
 13348 ;;		_setHeaterPostTime
 13349 ;;		_drv_outputSine
 13350 ;; This function uses a non-reentrant model
 13351 ;;
 13352                           
 13353                           
 13354                           ;psect for function ___ftmul
 13355  0CBC                     ___ftmul:	
 13356                           
 13357                           ;incstack = 0
 13358                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 13359  0CBC  0020               	movlb	0	; select bank0
 13360  0CBD  083F               	movf	___ftmul@f1,w
 13361  0CBE  00C5               	movwf	??___ftmul
 13362  0CBF  0840               	movf	___ftmul@f1+1,w
 13363  0CC0  00C6               	movwf	??___ftmul+1
 13364  0CC1  0841               	movf	___ftmul@f1+2,w
 13365  0CC2  00C7               	movwf	??___ftmul+2
 13366  0CC3  1003               	clrc
 13367  0CC4  0D46               	rlf	??___ftmul+1,w
 13368  0CC5  0D47               	rlf	??___ftmul+2,w
 13369  0CC6  00C8               	movwf	??___ftmul+3
 13370  0CC7  0848               	movf	??___ftmul+3,w
 13371  0CC8  0021               	movlb	1	; select bank1
 13372  0CC9  00A0               	movwf	___ftmul@exp^(0+128)
 13373  0CCA  0820               	movf	___ftmul@exp^(0+128),w
 13374  0CCB  1D03               	btfss	3,2
 13375  0CCC  2CD5               	goto	l7819
 13376  0CCD  3000               	movlw	0
 13377  0CCE  0020               	movlb	0	; select bank0
 13378  0CCF  00BF               	movwf	?___ftmul
 13379  0CD0  3000               	movlw	0
 13380  0CD1  00C0               	movwf	?___ftmul+1
 13381  0CD2  3000               	movlw	0
 13382  0CD3  00C1               	movwf	?___ftmul+2
 13383  0CD4  0008               	return
 13384  0CD5                     l7819:	
 13385  0CD5  0020               	movlb	0	; select bank0
 13386  0CD6  0842               	movf	___ftmul@f2,w
 13387  0CD7  00C5               	movwf	??___ftmul
 13388  0CD8  0843               	movf	___ftmul@f2+1,w
 13389  0CD9  00C6               	movwf	??___ftmul+1
 13390  0CDA  0844               	movf	___ftmul@f2+2,w
 13391  0CDB  00C7               	movwf	??___ftmul+2
 13392  0CDC  1003               	clrc
 13393  0CDD  0D46               	rlf	??___ftmul+1,w
 13394  0CDE  0D47               	rlf	??___ftmul+2,w
 13395  0CDF  00C8               	movwf	??___ftmul+3
 13396  0CE0  0848               	movf	??___ftmul+3,w
 13397  0CE1  0021               	movlb	1	; select bank1
 13398  0CE2  00A5               	movwf	___ftmul@sign^(0+128)
 13399  0CE3  0825               	movf	___ftmul@sign^(0+128),w
 13400  0CE4  1D03               	btfss	3,2
 13401  0CE5  2CEE               	goto	l7825
 13402  0CE6  3000               	movlw	0
 13403  0CE7  0020               	movlb	0	; select bank0
 13404  0CE8  00BF               	movwf	?___ftmul
 13405  0CE9  3000               	movlw	0
 13406  0CEA  00C0               	movwf	?___ftmul+1
 13407  0CEB  3000               	movlw	0
 13408  0CEC  00C1               	movwf	?___ftmul+2
 13409  0CED  0008               	return
 13410  0CEE                     l7825:	
 13411  0CEE  0021               	movlb	1	; select bank1
 13412  0CEF  0825               	movf	___ftmul@sign^(0+128),w
 13413  0CF0  3E7B               	addlw	123
 13414  0CF1  0020               	movlb	0	; select bank0
 13415  0CF2  00C5               	movwf	??___ftmul
 13416  0CF3  0845               	movf	??___ftmul,w
 13417  0CF4  0021               	movlb	1	; select bank1
 13418  0CF5  07A0               	addwf	___ftmul@exp^(0+128),f
 13419  0CF6  0020               	movlb	0	; select bank0
 13420  0CF7  083F               	movf	___ftmul@f1,w
 13421  0CF8  00C5               	movwf	??___ftmul
 13422  0CF9  0840               	movf	___ftmul@f1+1,w
 13423  0CFA  00C6               	movwf	??___ftmul+1
 13424  0CFB  0841               	movf	___ftmul@f1+2,w
 13425  0CFC  00C7               	movwf	??___ftmul+2
 13426  0CFD  3010               	movlw	16
 13427  0CFE                     u7955:	
 13428  0CFE  36C7               	lsrf	??___ftmul+2,f
 13429  0CFF  0CC6               	rrf	??___ftmul+1,f
 13430  0D00  0CC5               	rrf	??___ftmul,f
 13431  0D01  0B89               	decfsz	9,f
 13432  0D02  2CFE               	goto	u7955
 13433  0D03  0845               	movf	??___ftmul,w
 13434  0D04  00C8               	movwf	??___ftmul+3
 13435  0D05  0848               	movf	??___ftmul+3,w
 13436  0D06  0021               	movlb	1	; select bank1
 13437  0D07  00A5               	movwf	___ftmul@sign^(0+128)
 13438  0D08  0020               	movlb	0	; select bank0
 13439  0D09  0842               	movf	___ftmul@f2,w
 13440  0D0A  00C5               	movwf	??___ftmul
 13441  0D0B  0843               	movf	___ftmul@f2+1,w
 13442  0D0C  00C6               	movwf	??___ftmul+1
 13443  0D0D  0844               	movf	___ftmul@f2+2,w
 13444  0D0E  00C7               	movwf	??___ftmul+2
 13445  0D0F  3010               	movlw	16
 13446  0D10                     u7965:	
 13447  0D10  36C7               	lsrf	??___ftmul+2,f
 13448  0D11  0CC6               	rrf	??___ftmul+1,f
 13449  0D12  0CC5               	rrf	??___ftmul,f
 13450  0D13  0B89               	decfsz	9,f
 13451  0D14  2D10               	goto	u7965
 13452  0D15  0845               	movf	??___ftmul,w
 13453  0D16  00C8               	movwf	??___ftmul+3
 13454  0D17  0848               	movf	??___ftmul+3,w
 13455  0D18  0021               	movlb	1	; select bank1
 13456  0D19  06A5               	xorwf	___ftmul@sign^(0+128),f
 13457  0D1A  3080               	movlw	128
 13458  0D1B  0020               	movlb	0	; select bank0
 13459  0D1C  00C5               	movwf	??___ftmul
 13460  0D1D  0845               	movf	??___ftmul,w
 13461  0D1E  0021               	movlb	1	; select bank1
 13462  0D1F  05A5               	andwf	___ftmul@sign^(0+128),f
 13463  0D20  0020               	movlb	0	; select bank0
 13464  0D21  17C0               	bsf	___ftmul@f1+1,7
 13465  0D22  17C3               	bsf	___ftmul@f2+1,7
 13466  0D23  30FF               	movlw	255
 13467  0D24  05C2               	andwf	___ftmul@f2,f
 13468  0D25  30FF               	movlw	255
 13469  0D26  05C3               	andwf	___ftmul@f2+1,f
 13470  0D27  3000               	movlw	0
 13471  0D28  05C4               	andwf	___ftmul@f2+2,f
 13472  0D29  3000               	movlw	0
 13473  0D2A  0021               	movlb	1	; select bank1
 13474  0D2B  00A1               	movwf	___ftmul@f3_as_product^(0+128)
 13475  0D2C  3000               	movlw	0
 13476  0D2D  00A2               	movwf	(___ftmul@f3_as_product+1)^(0+128)
 13477  0D2E  3000               	movlw	0
 13478  0D2F  00A3               	movwf	(___ftmul@f3_as_product+2)^(0+128)
 13479  0D30  3007               	movlw	7
 13480  0D31  0020               	movlb	0	; select bank0
 13481  0D32  00C5               	movwf	??___ftmul
 13482  0D33  0845               	movf	??___ftmul,w
 13483  0D34  0021               	movlb	1	; select bank1
 13484  0D35  00A4               	movwf	___ftmul@cntr^(0+128)
 13485  0D36                     l7837:	
 13486  0D36  0020               	movlb	0	; select bank0
 13487  0D37  1C3F               	btfss	___ftmul@f1,0
 13488  0D38  2D44               	goto	l7841
 13489  0D39  0842               	movf	___ftmul@f2,w
 13490  0D3A  0021               	movlb	1	; select bank1
 13491  0D3B  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 13492  0D3C  0020               	movlb	0	; select bank0
 13493  0D3D  0843               	movf	___ftmul@f2+1,w
 13494  0D3E  0021               	movlb	1	; select bank1
 13495  0D3F  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13496  0D40  0020               	movlb	0	; select bank0
 13497  0D41  0844               	movf	___ftmul@f2+2,w
 13498  0D42  0021               	movlb	1	; select bank1
 13499  0D43  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13500  0D44                     l7841:	
 13501  0D44  3001               	movlw	1
 13502  0D45                     u7985:	
 13503  0D45  0020               	movlb	0	; select bank0
 13504  0D46  36C1               	lsrf	___ftmul@f1+2,f
 13505  0D47  0CC0               	rrf	___ftmul@f1+1,f
 13506  0D48  0CBF               	rrf	___ftmul@f1,f
 13507  0D49  0B89               	decfsz	9,f
 13508  0D4A  2D45               	goto	u7985
 13509  0D4B  3001               	movlw	1
 13510  0D4C                     u7995:	
 13511  0D4C  35C2               	lslf	___ftmul@f2,f
 13512  0D4D  0DC3               	rlf	___ftmul@f2+1,f
 13513  0D4E  0DC4               	rlf	___ftmul@f2+2,f
 13514  0D4F  0B89               	decfsz	9,f
 13515  0D50  2D4C               	goto	u7995
 13516  0D51  3001               	movlw	1
 13517  0D52  0021               	movlb	1	; select bank1
 13518  0D53  02A4               	subwf	___ftmul@cntr^(0+128),f
 13519  0D54  1D03               	btfss	3,2
 13520  0D55  2D36               	goto	l7837
 13521  0D56  3009               	movlw	9
 13522  0D57  0020               	movlb	0	; select bank0
 13523  0D58  00C5               	movwf	??___ftmul
 13524  0D59  0845               	movf	??___ftmul,w
 13525  0D5A  0021               	movlb	1	; select bank1
 13526  0D5B  00A4               	movwf	___ftmul@cntr^(0+128)
 13527  0D5C                     l7849:	
 13528  0D5C  0020               	movlb	0	; select bank0
 13529  0D5D  1C3F               	btfss	___ftmul@f1,0
 13530  0D5E  2D6A               	goto	l7853
 13531  0D5F  0842               	movf	___ftmul@f2,w
 13532  0D60  0021               	movlb	1	; select bank1
 13533  0D61  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
 13534  0D62  0020               	movlb	0	; select bank0
 13535  0D63  0843               	movf	___ftmul@f2+1,w
 13536  0D64  0021               	movlb	1	; select bank1
 13537  0D65  3DA2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
 13538  0D66  0020               	movlb	0	; select bank0
 13539  0D67  0844               	movf	___ftmul@f2+2,w
 13540  0D68  0021               	movlb	1	; select bank1
 13541  0D69  3DA3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
 13542  0D6A                     l7853:	
 13543  0D6A  3001               	movlw	1
 13544  0D6B                     u8025:	
 13545  0D6B  0020               	movlb	0	; select bank0
 13546  0D6C  36C1               	lsrf	___ftmul@f1+2,f
 13547  0D6D  0CC0               	rrf	___ftmul@f1+1,f
 13548  0D6E  0CBF               	rrf	___ftmul@f1,f
 13549  0D6F  0B89               	decfsz	9,f
 13550  0D70  2D6B               	goto	u8025
 13551  0D71  3001               	movlw	1
 13552  0D72                     u8035:	
 13553  0D72  0021               	movlb	1	; select bank1
 13554  0D73  36A3               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
 13555  0D74  0CA2               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
 13556  0D75  0CA1               	rrf	___ftmul@f3_as_product^(0+128),f
 13557  0D76  0B89               	decfsz	9,f
 13558  0D77  2D72               	goto	u8035
 13559  0D78  3001               	movlw	1
 13560  0D79  02A4               	subwf	___ftmul@cntr^(0+128),f
 13561  0D7A  1D03               	btfss	3,2
 13562  0D7B  2D5C               	goto	l7849
 13563  0D7C  0821               	movf	___ftmul@f3_as_product^(0+128),w
 13564  0D7D  0020               	movlb	0	; select bank0
 13565  0D7E  00B1               	movwf	___ftpack@arg
 13566  0D7F  0021               	movlb	1	; select bank1
 13567  0D80  0822               	movf	(___ftmul@f3_as_product+1)^(0+128),w
 13568  0D81  0020               	movlb	0	; select bank0
 13569  0D82  00B2               	movwf	___ftpack@arg+1
 13570  0D83  0021               	movlb	1	; select bank1
 13571  0D84  0823               	movf	(___ftmul@f3_as_product+2)^(0+128),w
 13572  0D85  0020               	movlb	0	; select bank0
 13573  0D86  00B3               	movwf	___ftpack@arg+2
 13574  0D87  0021               	movlb	1	; select bank1
 13575  0D88  0820               	movf	___ftmul@exp^(0+128),w
 13576  0D89  0020               	movlb	0	; select bank0
 13577  0D8A  00C5               	movwf	??___ftmul
 13578  0D8B  0845               	movf	??___ftmul,w
 13579  0D8C  00B4               	movwf	___ftpack@exp
 13580  0D8D  0021               	movlb	1	; select bank1
 13581  0D8E  0825               	movf	___ftmul@sign^(0+128),w
 13582  0D8F  0020               	movlb	0	; select bank0
 13583  0D90  00C6               	movwf	??___ftmul+1
 13584  0D91  0846               	movf	??___ftmul+1,w
 13585  0D92  00B5               	movwf	___ftpack@sign
 13586  0D93  319F  279B         	fcall	___ftpack
 13587  0D95  0020               	movlb	0	; select bank0
 13588  0D96  0831               	movf	?___ftpack,w
 13589  0D97  00BF               	movwf	?___ftmul
 13590  0D98  0832               	movf	?___ftpack+1,w
 13591  0D99  00C0               	movwf	?___ftmul+1
 13592  0D9A  0833               	movf	?___ftpack+2,w
 13593  0D9B  00C1               	movwf	?___ftmul+2
 13594  0D9C  0008               	return
 13595  0D9D                     __end_of___ftmul:	
 13596                           
 13597                           	psect	text35
 13598  06D1                     __ptext35:	
 13599 ;; *************** function ___ftadd *****************
 13600 ;; Defined at:
 13601 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 13602 ;; Parameters:    Size  Location     Type
 13603 ;;  f1              3    6[BANK1 ] float 
 13604 ;;  f2              3    9[BANK1 ] float 
 13605 ;; Auto vars:     Size  Location     Type
 13606 ;;  exp1            1   14[BANK1 ] unsigned char 
 13607 ;;  exp2            1   13[BANK1 ] unsigned char 
 13608 ;;  sign            1   12[BANK1 ] unsigned char 
 13609 ;; Return value:  Size  Location     Type
 13610 ;;                  3    6[BANK1 ] float 
 13611 ;; Registers used:
 13612 ;;		wreg, status,2, status,0, pclath, cstack
 13613 ;; Tracked objects:
 13614 ;;		On entry : 0/0
 13615 ;;		On exit  : 0/0
 13616 ;;		Unchanged: 0/0
 13617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13618 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13619 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13620 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13621 ;;      Totals:         0       4       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13622 ;;Total ram usage:       13 bytes
 13623 ;; Hardware stack levels used:    1
 13624 ;; Hardware stack levels required when called:    7
 13625 ;; This function calls:
 13626 ;;		___ftpack
 13627 ;; This function is called by:
 13628 ;;		_main_initialize
 13629 ;;		_setDrvPiezoOnTime
 13630 ;;		_setHeaterPreTime
 13631 ;;		_setHeaterPostTime
 13632 ;; This function uses a non-reentrant model
 13633 ;;
 13634                           
 13635                           
 13636                           ;psect for function ___ftadd
 13637  06D1                     ___ftadd:	
 13638                           
 13639                           ;incstack = 0
 13640                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 13641  06D1  0021               	movlb	1	; select bank1
 13642  06D2  0826               	movf	___ftadd@f1^(0+128),w
 13643  06D3  0020               	movlb	0	; select bank0
 13644  06D4  00C9               	movwf	??___ftadd
 13645  06D5  0021               	movlb	1	; select bank1
 13646  06D6  0827               	movf	(___ftadd@f1+1)^(0+128),w
 13647  06D7  0020               	movlb	0	; select bank0
 13648  06D8  00CA               	movwf	??___ftadd+1
 13649  06D9  0021               	movlb	1	; select bank1
 13650  06DA  0828               	movf	(___ftadd@f1+2)^(0+128),w
 13651  06DB  0020               	movlb	0	; select bank0
 13652  06DC  00CB               	movwf	??___ftadd+2
 13653  06DD  1003               	clrc
 13654  06DE  0D4A               	rlf	??___ftadd+1,w
 13655  06DF  0D4B               	rlf	??___ftadd+2,w
 13656  06E0  00CC               	movwf	??___ftadd+3
 13657  06E1  084C               	movf	??___ftadd+3,w
 13658  06E2  0021               	movlb	1	; select bank1
 13659  06E3  00AE               	movwf	___ftadd@exp1^(0+128)
 13660  06E4  0829               	movf	___ftadd@f2^(0+128),w
 13661  06E5  0020               	movlb	0	; select bank0
 13662  06E6  00C9               	movwf	??___ftadd
 13663  06E7  0021               	movlb	1	; select bank1
 13664  06E8  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13665  06E9  0020               	movlb	0	; select bank0
 13666  06EA  00CA               	movwf	??___ftadd+1
 13667  06EB  0021               	movlb	1	; select bank1
 13668  06EC  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13669  06ED  0020               	movlb	0	; select bank0
 13670  06EE  00CB               	movwf	??___ftadd+2
 13671  06EF  1003               	clrc
 13672  06F0  0D4A               	rlf	??___ftadd+1,w
 13673  06F1  0D4B               	rlf	??___ftadd+2,w
 13674  06F2  00CC               	movwf	??___ftadd+3
 13675  06F3  084C               	movf	??___ftadd+3,w
 13676  06F4  0021               	movlb	1	; select bank1
 13677  06F5  00AD               	movwf	___ftadd@exp2^(0+128)
 13678  06F6  082E               	movf	___ftadd@exp1^(0+128),w
 13679  06F7  1903               	btfsc	3,2
 13680  06F8  2F06               	goto	l7749
 13681  06F9  082D               	movf	___ftadd@exp2^(0+128),w
 13682  06FA  022E               	subwf	___ftadd@exp1^(0+128),w
 13683  06FB  1803               	skipnc
 13684  06FC  2F0E               	goto	l7753
 13685  06FD  032E               	decf	___ftadd@exp1^(0+128),w
 13686  06FE  3AFF               	xorlw	255
 13687  06FF  072D               	addwf	___ftadd@exp2^(0+128),w
 13688  0700  0020               	movlb	0	; select bank0
 13689  0701  00C9               	movwf	??___ftadd
 13690  0702  3019               	movlw	25
 13691  0703  0249               	subwf	??___ftadd,w
 13692  0704  1C03               	skipc
 13693  0705  2F0E               	goto	l7753
 13694  0706                     l7749:	
 13695  0706  0021               	movlb	1	; select bank1
 13696  0707  0829               	movf	___ftadd@f2^(0+128),w
 13697  0708  00A6               	movwf	?___ftadd^(0+128)
 13698  0709  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13699  070A  00A7               	movwf	(?___ftadd+1)^(0+128)
 13700  070B  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13701  070C  00A8               	movwf	(?___ftadd+2)^(0+128)
 13702  070D  0008               	return
 13703  070E                     l7753:	
 13704  070E  0021               	movlb	1	; select bank1
 13705  070F  082D               	movf	___ftadd@exp2^(0+128),w
 13706  0710  1903               	btfsc	3,2
 13707  0711  0008               	return
 13708  0712  082E               	movf	___ftadd@exp1^(0+128),w
 13709  0713  022D               	subwf	___ftadd@exp2^(0+128),w
 13710  0714  1803               	skipnc
 13711  0715  2F1F               	goto	l7759
 13712  0716  032D               	decf	___ftadd@exp2^(0+128),w
 13713  0717  3AFF               	xorlw	255
 13714  0718  072E               	addwf	___ftadd@exp1^(0+128),w
 13715  0719  0020               	movlb	0	; select bank0
 13716  071A  00C9               	movwf	??___ftadd
 13717  071B  3019               	movlw	25
 13718  071C  0249               	subwf	??___ftadd,w
 13719  071D  1803               	btfsc	3,0
 13720  071E  0008               	return
 13721  071F                     l7759:	
 13722  071F  3006               	movlw	6
 13723  0720  0020               	movlb	0	; select bank0
 13724  0721  00C9               	movwf	??___ftadd
 13725  0722  0849               	movf	??___ftadd,w
 13726  0723  0021               	movlb	1	; select bank1
 13727  0724  00AC               	movwf	___ftadd@sign^(0+128)
 13728  0725  1BA8               	btfsc	(___ftadd@f1+2)^(0+128),7
 13729  0726  17AC               	bsf	___ftadd@sign^(0+128),7
 13730  0727  1BAB               	btfsc	(___ftadd@f2+2)^(0+128),7
 13731  0728  172C               	bsf	___ftadd@sign^(0+128),6
 13732  0729  17A7               	bsf	(___ftadd@f1^(0+128)+1),7
 13733  072A  30FF               	movlw	255
 13734  072B  05A6               	andwf	___ftadd@f1^(0+128),f
 13735  072C  30FF               	movlw	255
 13736  072D  05A7               	andwf	(___ftadd@f1+1)^(0+128),f
 13737  072E  3000               	movlw	0
 13738  072F  05A8               	andwf	(___ftadd@f1+2)^(0+128),f
 13739  0730  17AA               	bsf	(___ftadd@f2^(0+128)+1),7
 13740  0731  30FF               	movlw	255
 13741  0732  05A9               	andwf	___ftadd@f2^(0+128),f
 13742  0733  30FF               	movlw	255
 13743  0734  05AA               	andwf	(___ftadd@f2+1)^(0+128),f
 13744  0735  3000               	movlw	0
 13745  0736  05AB               	andwf	(___ftadd@f2+2)^(0+128),f
 13746  0737  082D               	movf	___ftadd@exp2^(0+128),w
 13747  0738  022E               	subwf	___ftadd@exp1^(0+128),w
 13748  0739  1803               	skipnc
 13749  073A  2F5F               	goto	l7781
 13750  073B                     l7771:	
 13751  073B  3001               	movlw	1
 13752  073C                     u7795:	
 13753  073C  35A9               	lslf	___ftadd@f2^(0+128),f
 13754  073D  0DAA               	rlf	(___ftadd@f2+1)^(0+128),f
 13755  073E  0DAB               	rlf	(___ftadd@f2+2)^(0+128),f
 13756  073F  0B89               	decfsz	9,f
 13757  0740  2F3C               	goto	u7795
 13758  0741  3001               	movlw	1
 13759  0742  02AD               	subwf	___ftadd@exp2^(0+128),f
 13760  0743  082D               	movf	___ftadd@exp2^(0+128),w
 13761  0744  062E               	xorwf	___ftadd@exp1^(0+128),w
 13762  0745  1903               	skipnz
 13763  0746  2F5A               	goto	l7779
 13764  0747  3001               	movlw	1
 13765  0748  02AC               	subwf	___ftadd@sign^(0+128),f
 13766  0749  082C               	movf	___ftadd@sign^(0+128),w
 13767  074A  3907               	andlw	7
 13768  074B  1903               	btfsc	3,2
 13769  074C  2F5A               	goto	l7779
 13770  074D  2F3B               	goto	l7771
 13771  074E                     l7777:	
 13772  074E  3001               	movlw	1
 13773  074F                     u7825:	
 13774  074F  36A8               	lsrf	(___ftadd@f1+2)^(0+128),f
 13775  0750  0CA7               	rrf	(___ftadd@f1+1)^(0+128),f
 13776  0751  0CA6               	rrf	___ftadd@f1^(0+128),f
 13777  0752  0B89               	decfsz	9,f
 13778  0753  2F4F               	goto	u7825
 13779  0754  3001               	movlw	1
 13780  0755  0020               	movlb	0	; select bank0
 13781  0756  00C9               	movwf	??___ftadd
 13782  0757  0849               	movf	??___ftadd,w
 13783  0758  0021               	movlb	1	; select bank1
 13784  0759  07AE               	addwf	___ftadd@exp1^(0+128),f
 13785  075A                     l7779:	
 13786  075A  082E               	movf	___ftadd@exp1^(0+128),w
 13787  075B  062D               	xorwf	___ftadd@exp2^(0+128),w
 13788  075C  1903               	btfsc	3,2
 13789  075D  2F86               	goto	l1796
 13790  075E  2F4E               	goto	l7777
 13791  075F                     l7781:	
 13792  075F  082E               	movf	___ftadd@exp1^(0+128),w
 13793  0760  022D               	subwf	___ftadd@exp2^(0+128),w
 13794  0761  1803               	skipnc
 13795  0762  2F86               	goto	l1796
 13796  0763                     l7783:	
 13797  0763  3001               	movlw	1
 13798  0764                     u7855:	
 13799  0764  35A6               	lslf	___ftadd@f1^(0+128),f
 13800  0765  0DA7               	rlf	(___ftadd@f1+1)^(0+128),f
 13801  0766  0DA8               	rlf	(___ftadd@f1+2)^(0+128),f
 13802  0767  0B89               	decfsz	9,f
 13803  0768  2F64               	goto	u7855
 13804  0769  3001               	movlw	1
 13805  076A  02AE               	subwf	___ftadd@exp1^(0+128),f
 13806  076B  082D               	movf	___ftadd@exp2^(0+128),w
 13807  076C  062E               	xorwf	___ftadd@exp1^(0+128),w
 13808  076D  1903               	skipnz
 13809  076E  2F82               	goto	l7791
 13810  076F  3001               	movlw	1
 13811  0770  02AC               	subwf	___ftadd@sign^(0+128),f
 13812  0771  082C               	movf	___ftadd@sign^(0+128),w
 13813  0772  3907               	andlw	7
 13814  0773  1903               	btfsc	3,2
 13815  0774  2F82               	goto	l7791
 13816  0775  2F63               	goto	l7783
 13817  0776                     l7789:	
 13818  0776  3001               	movlw	1
 13819  0777                     u7885:	
 13820  0777  36AB               	lsrf	(___ftadd@f2+2)^(0+128),f
 13821  0778  0CAA               	rrf	(___ftadd@f2+1)^(0+128),f
 13822  0779  0CA9               	rrf	___ftadd@f2^(0+128),f
 13823  077A  0B89               	decfsz	9,f
 13824  077B  2F77               	goto	u7885
 13825  077C  3001               	movlw	1
 13826  077D  0020               	movlb	0	; select bank0
 13827  077E  00C9               	movwf	??___ftadd
 13828  077F  0849               	movf	??___ftadd,w
 13829  0780  0021               	movlb	1	; select bank1
 13830  0781  07AD               	addwf	___ftadd@exp2^(0+128),f
 13831  0782                     l7791:	
 13832  0782  082E               	movf	___ftadd@exp1^(0+128),w
 13833  0783  062D               	xorwf	___ftadd@exp2^(0+128),w
 13834  0784  1D03               	skipz
 13835  0785  2F76               	goto	l7789
 13836  0786                     l1796:	
 13837  0786  1FAC               	btfss	___ftadd@sign^(0+128),7
 13838  0787  2F98               	goto	l7795
 13839  0788  30FF               	movlw	255
 13840  0789  06A6               	xorwf	___ftadd@f1^(0+128),f
 13841  078A  30FF               	movlw	255
 13842  078B  06A7               	xorwf	(___ftadd@f1+1)^(0+128),f
 13843  078C  30FF               	movlw	255
 13844  078D  06A8               	xorwf	(___ftadd@f1+2)^(0+128),f
 13845  078E  3001               	movlw	1
 13846  078F  07A6               	addwf	___ftadd@f1^(0+128),f
 13847  0790  3000               	movlw	0
 13848  0791  1803               	skipnc
 13849  0792  3001               	movlw	1
 13850  0793  07A7               	addwf	(___ftadd@f1+1)^(0+128),f
 13851  0794  3000               	movlw	0
 13852  0795  1803               	skipnc
 13853  0796  3001               	movlw	1
 13854  0797  07A8               	addwf	(___ftadd@f1+2)^(0+128),f
 13855  0798                     l7795:	
 13856  0798  1F2C               	btfss	___ftadd@sign^(0+128),6
 13857  0799  2FAA               	goto	l7799
 13858  079A  30FF               	movlw	255
 13859  079B  06A9               	xorwf	___ftadd@f2^(0+128),f
 13860  079C  30FF               	movlw	255
 13861  079D  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 13862  079E  30FF               	movlw	255
 13863  079F  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 13864  07A0  3001               	movlw	1
 13865  07A1  07A9               	addwf	___ftadd@f2^(0+128),f
 13866  07A2  3000               	movlw	0
 13867  07A3  1803               	skipnc
 13868  07A4  3001               	movlw	1
 13869  07A5  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 13870  07A6  3000               	movlw	0
 13871  07A7  1803               	skipnc
 13872  07A8  3001               	movlw	1
 13873  07A9  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 13874  07AA                     l7799:	
 13875  07AA  01AC               	clrf	___ftadd@sign^(0+128)
 13876  07AB  0826               	movf	___ftadd@f1^(0+128),w
 13877  07AC  07A9               	addwf	___ftadd@f2^(0+128),f
 13878  07AD  0827               	movf	(___ftadd@f1+1)^(0+128),w
 13879  07AE  3DAA               	addwfc	(___ftadd@f2+1)^(0+128),f
 13880  07AF  0828               	movf	(___ftadd@f1+2)^(0+128),w
 13881  07B0  3DAB               	addwfc	(___ftadd@f2+2)^(0+128),f
 13882  07B1  1FAB               	btfss	(___ftadd@f2+2)^(0+128),7
 13883  07B2  2FC5               	goto	l7809
 13884  07B3  30FF               	movlw	255
 13885  07B4  06A9               	xorwf	___ftadd@f2^(0+128),f
 13886  07B5  30FF               	movlw	255
 13887  07B6  06AA               	xorwf	(___ftadd@f2+1)^(0+128),f
 13888  07B7  30FF               	movlw	255
 13889  07B8  06AB               	xorwf	(___ftadd@f2+2)^(0+128),f
 13890  07B9  3001               	movlw	1
 13891  07BA  07A9               	addwf	___ftadd@f2^(0+128),f
 13892  07BB  3000               	movlw	0
 13893  07BC  1803               	skipnc
 13894  07BD  3001               	movlw	1
 13895  07BE  07AA               	addwf	(___ftadd@f2+1)^(0+128),f
 13896  07BF  3000               	movlw	0
 13897  07C0  1803               	skipnc
 13898  07C1  3001               	movlw	1
 13899  07C2  07AB               	addwf	(___ftadd@f2+2)^(0+128),f
 13900  07C3  01AC               	clrf	___ftadd@sign^(0+128)
 13901  07C4  0AAC               	incf	___ftadd@sign^(0+128),f
 13902  07C5                     l7809:	
 13903  07C5  0829               	movf	___ftadd@f2^(0+128),w
 13904  07C6  0020               	movlb	0	; select bank0
 13905  07C7  00B1               	movwf	___ftpack@arg
 13906  07C8  0021               	movlb	1	; select bank1
 13907  07C9  082A               	movf	(___ftadd@f2+1)^(0+128),w
 13908  07CA  0020               	movlb	0	; select bank0
 13909  07CB  00B2               	movwf	___ftpack@arg+1
 13910  07CC  0021               	movlb	1	; select bank1
 13911  07CD  082B               	movf	(___ftadd@f2+2)^(0+128),w
 13912  07CE  0020               	movlb	0	; select bank0
 13913  07CF  00B3               	movwf	___ftpack@arg+2
 13914  07D0  0021               	movlb	1	; select bank1
 13915  07D1  082E               	movf	___ftadd@exp1^(0+128),w
 13916  07D2  0020               	movlb	0	; select bank0
 13917  07D3  00C9               	movwf	??___ftadd
 13918  07D4  0849               	movf	??___ftadd,w
 13919  07D5  00B4               	movwf	___ftpack@exp
 13920  07D6  0021               	movlb	1	; select bank1
 13921  07D7  082C               	movf	___ftadd@sign^(0+128),w
 13922  07D8  0020               	movlb	0	; select bank0
 13923  07D9  00CA               	movwf	??___ftadd+1
 13924  07DA  084A               	movf	??___ftadd+1,w
 13925  07DB  00B5               	movwf	___ftpack@sign
 13926  07DC  319F  279B         	fcall	___ftpack
 13927  07DE  0020               	movlb	0	; select bank0
 13928  07DF  0831               	movf	?___ftpack,w
 13929  07E0  0021               	movlb	1	; select bank1
 13930  07E1  00A6               	movwf	?___ftadd^(0+128)
 13931  07E2  0020               	movlb	0	; select bank0
 13932  07E3  0832               	movf	?___ftpack+1,w
 13933  07E4  0021               	movlb	1	; select bank1
 13934  07E5  00A7               	movwf	(?___ftadd+1)^(0+128)
 13935  07E6  0020               	movlb	0	; select bank0
 13936  07E7  0833               	movf	?___ftpack+2,w
 13937  07E8  0021               	movlb	1	; select bank1
 13938  07E9  00A8               	movwf	(?___ftadd+2)^(0+128)
 13939  07EA  0008               	return
 13940  07EB                     __end_of___ftadd:	
 13941                           
 13942                           	psect	text36
 13943  25CE                     __ptext36:	
 13944 ;; *************** function ___awtoft *****************
 13945 ;; Defined at:
 13946 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 13947 ;; Parameters:    Size  Location     Type
 13948 ;;  c               2   25[BANK0 ] int 
 13949 ;; Auto vars:     Size  Location     Type
 13950 ;;  sign            1   30[BANK0 ] unsigned char 
 13951 ;; Return value:  Size  Location     Type
 13952 ;;                  3   25[BANK0 ] float 
 13953 ;; Registers used:
 13954 ;;		wreg, status,2, status,0, pclath, cstack
 13955 ;; Tracked objects:
 13956 ;;		On entry : 0/0
 13957 ;;		On exit  : 0/0
 13958 ;;		Unchanged: 0/0
 13959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13960 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13961 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13962 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13963 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13964 ;;Total ram usage:        6 bytes
 13965 ;; Hardware stack levels used:    1
 13966 ;; Hardware stack levels required when called:    7
 13967 ;; This function calls:
 13968 ;;		___ftpack
 13969 ;; This function is called by:
 13970 ;;		_main_initialize
 13971 ;;		_setDrvPiezoOnTime
 13972 ;;		_setHeaterPreTime
 13973 ;;		_setHeaterPostTime
 13974 ;;		_drv_outputSine
 13975 ;; This function uses a non-reentrant model
 13976 ;;
 13977                           
 13978                           
 13979                           ;psect for function ___awtoft
 13980  25CE                     ___awtoft:	
 13981                           
 13982                           ;incstack = 0
 13983                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 13984  25CE  0020               	movlb	0	; select bank0
 13985  25CF  01BE               	clrf	___awtoft@sign
 13986  25D0  1FBA               	btfss	___awtoft@c+1,7
 13987  25D1  2DD9               	goto	l7739
 13988  25D2  09B9               	comf	___awtoft@c,f
 13989  25D3  09BA               	comf	___awtoft@c+1,f
 13990  25D4  0AB9               	incf	___awtoft@c,f
 13991  25D5  1903               	skipnz
 13992  25D6  0ABA               	incf	___awtoft@c+1,f
 13993  25D7  01BE               	clrf	___awtoft@sign
 13994  25D8  0ABE               	incf	___awtoft@sign,f
 13995  25D9                     l7739:	
 13996  25D9  0839               	movf	___awtoft@c,w
 13997  25DA  00B1               	movwf	___ftpack@arg
 13998  25DB  083A               	movf	___awtoft@c+1,w
 13999  25DC  00B2               	movwf	___ftpack@arg+1
 14000  25DD  01B3               	clrf	___ftpack@arg+2
 14001  25DE  308E               	movlw	142
 14002  25DF  00BC               	movwf	??___awtoft
 14003  25E0  083C               	movf	??___awtoft,w
 14004  25E1  00B4               	movwf	___ftpack@exp
 14005  25E2  083E               	movf	___awtoft@sign,w
 14006  25E3  00BD               	movwf	??___awtoft+1
 14007  25E4  083D               	movf	??___awtoft+1,w
 14008  25E5  00B5               	movwf	___ftpack@sign
 14009  25E6  319F  279B         	fcall	___ftpack
 14010  25E8  0020               	movlb	0	; select bank0
 14011  25E9  0831               	movf	?___ftpack,w
 14012  25EA  00B9               	movwf	?___awtoft
 14013  25EB  0832               	movf	?___ftpack+1,w
 14014  25EC  00BA               	movwf	?___awtoft+1
 14015  25ED  0833               	movf	?___ftpack+2,w
 14016  25EE  00BB               	movwf	?___awtoft+2
 14017  25EF  0008               	return
 14018  25F0                     __end_of___awtoft:	
 14019                           
 14020                           	psect	text37
 14021  1F9B                     __ptext37:	
 14022 ;; *************** function ___ftpack *****************
 14023 ;; Defined at:
 14024 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 14025 ;; Parameters:    Size  Location     Type
 14026 ;;  arg             3   17[BANK0 ] unsigned um
 14027 ;;  exp             1   20[BANK0 ] unsigned char 
 14028 ;;  sign            1   21[BANK0 ] unsigned char 
 14029 ;; Auto vars:     Size  Location     Type
 14030 ;;		None
 14031 ;; Return value:  Size  Location     Type
 14032 ;;                  3   17[BANK0 ] float 
 14033 ;; Registers used:
 14034 ;;		wreg, status,2, status,0
 14035 ;; Tracked objects:
 14036 ;;		On entry : 0/0
 14037 ;;		On exit  : 0/0
 14038 ;;		Unchanged: 0/0
 14039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14040 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14042 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14043 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14044 ;;Total ram usage:        8 bytes
 14045 ;; Hardware stack levels used:    1
 14046 ;; Hardware stack levels required when called:    6
 14047 ;; This function calls:
 14048 ;;		Nothing
 14049 ;; This function is called by:
 14050 ;;		___awtoft
 14051 ;;		___ftadd
 14052 ;;		___ftmul
 14053 ;; This function uses a non-reentrant model
 14054 ;;
 14055                           
 14056                           
 14057                           ;psect for function ___ftpack
 14058  1F9B                     ___ftpack:	
 14059                           
 14060                           ;incstack = 0
 14061                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 14062  1F9B  0020               	movlb	0	; select bank0
 14063  1F9C  0834               	movf	___ftpack@exp,w
 14064  1F9D  1903               	btfsc	3,2
 14065  1F9E  2FA4               	goto	l7591
 14066  1F9F  0833               	movf	___ftpack@arg+2,w
 14067  1FA0  0432               	iorwf	___ftpack@arg+1,w
 14068  1FA1  0431               	iorwf	___ftpack@arg,w
 14069  1FA2  1D03               	skipz
 14070  1FA3  2FB5               	goto	l7597
 14071  1FA4                     l7591:	
 14072  1FA4  3000               	movlw	0
 14073  1FA5  00B1               	movwf	?___ftpack
 14074  1FA6  3000               	movlw	0
 14075  1FA7  00B2               	movwf	?___ftpack+1
 14076  1FA8  3000               	movlw	0
 14077  1FA9  00B3               	movwf	?___ftpack+2
 14078  1FAA  0008               	return
 14079  1FAB                     l7595:	
 14080  1FAB  3001               	movlw	1
 14081  1FAC  00B6               	movwf	??___ftpack
 14082  1FAD  0836               	movf	??___ftpack,w
 14083  1FAE  07B4               	addwf	___ftpack@exp,f
 14084  1FAF  3001               	movlw	1
 14085  1FB0                     u7425:	
 14086  1FB0  36B3               	lsrf	___ftpack@arg+2,f
 14087  1FB1  0CB2               	rrf	___ftpack@arg+1,f
 14088  1FB2  0CB1               	rrf	___ftpack@arg,f
 14089  1FB3  0B89               	decfsz	9,f
 14090  1FB4  2FB0               	goto	u7425
 14091  1FB5                     l7597:	
 14092  1FB5  30FE               	movlw	254
 14093  1FB6  0533               	andwf	___ftpack@arg+2,w
 14094  1FB7  1903               	btfsc	3,2
 14095  1FB8  2FCE               	goto	l1765
 14096  1FB9  2FAB               	goto	l7595
 14097  1FBA                     l7599:	
 14098  1FBA  3001               	movlw	1
 14099  1FBB  00B6               	movwf	??___ftpack
 14100  1FBC  0836               	movf	??___ftpack,w
 14101  1FBD  07B4               	addwf	___ftpack@exp,f
 14102  1FBE  3001               	movlw	1
 14103  1FBF  07B1               	addwf	___ftpack@arg,f
 14104  1FC0  3000               	movlw	0
 14105  1FC1  1803               	skipnc
 14106  1FC2  3001               	movlw	1
 14107  1FC3  07B2               	addwf	___ftpack@arg+1,f
 14108  1FC4  3000               	movlw	0
 14109  1FC5  1803               	skipnc
 14110  1FC6  3001               	movlw	1
 14111  1FC7  07B3               	addwf	___ftpack@arg+2,f
 14112  1FC8  3001               	movlw	1
 14113  1FC9                     u7445:	
 14114  1FC9  36B3               	lsrf	___ftpack@arg+2,f
 14115  1FCA  0CB2               	rrf	___ftpack@arg+1,f
 14116  1FCB  0CB1               	rrf	___ftpack@arg,f
 14117  1FCC  0B89               	decfsz	9,f
 14118  1FCD  2FC9               	goto	u7445
 14119  1FCE                     l1765:	
 14120  1FCE  30FF               	movlw	255
 14121  1FCF  0533               	andwf	___ftpack@arg+2,w
 14122  1FD0  1903               	btfsc	3,2
 14123  1FD1  2FDB               	goto	l7607
 14124  1FD2  2FBA               	goto	l7599
 14125  1FD3                     l7605:	
 14126  1FD3  3001               	movlw	1
 14127  1FD4  02B4               	subwf	___ftpack@exp,f
 14128  1FD5  3001               	movlw	1
 14129  1FD6                     u7465:	
 14130  1FD6  35B1               	lslf	___ftpack@arg,f
 14131  1FD7  0DB2               	rlf	___ftpack@arg+1,f
 14132  1FD8  0DB3               	rlf	___ftpack@arg+2,f
 14133  1FD9  0B89               	decfsz	9,f
 14134  1FDA  2FD6               	goto	u7465
 14135  1FDB                     l7607:	
 14136  1FDB  1BB2               	btfsc	___ftpack@arg+1,7
 14137  1FDC  2FE1               	goto	l1772
 14138  1FDD  3002               	movlw	2
 14139  1FDE  0234               	subwf	___ftpack@exp,w
 14140  1FDF  1803               	skipnc
 14141  1FE0  2FD3               	goto	l7605
 14142  1FE1                     l1772:	
 14143  1FE1  1834               	btfsc	___ftpack@exp,0
 14144  1FE2  2FE9               	goto	l1773
 14145  1FE3  30FF               	movlw	255
 14146  1FE4  05B1               	andwf	___ftpack@arg,f
 14147  1FE5  307F               	movlw	127
 14148  1FE6  05B2               	andwf	___ftpack@arg+1,f
 14149  1FE7  30FF               	movlw	255
 14150  1FE8  05B3               	andwf	___ftpack@arg+2,f
 14151  1FE9                     l1773:	
 14152  1FE9  1003               	clrc
 14153  1FEA  0CB4               	rrf	___ftpack@exp,f
 14154  1FEB  0834               	movf	___ftpack@exp,w
 14155  1FEC  00B6               	movwf	??___ftpack
 14156  1FED  01B7               	clrf	??___ftpack+1
 14157  1FEE  01B8               	clrf	??___ftpack+2
 14158  1FEF  3010               	movlw	16
 14159  1FF0                     u7505:	
 14160  1FF0  35B6               	lslf	??___ftpack,f
 14161  1FF1  0DB7               	rlf	??___ftpack+1,f
 14162  1FF2  0DB8               	rlf	??___ftpack+2,f
 14163  1FF3  0B89               	decfsz	9,f
 14164  1FF4  2FF0               	goto	u7505
 14165  1FF5  0836               	movf	??___ftpack,w
 14166  1FF6  04B1               	iorwf	___ftpack@arg,f
 14167  1FF7  0837               	movf	??___ftpack+1,w
 14168  1FF8  04B2               	iorwf	___ftpack@arg+1,f
 14169  1FF9  0838               	movf	??___ftpack+2,w
 14170  1FFA  04B3               	iorwf	___ftpack@arg+2,f
 14171  1FFB  0835               	movf	___ftpack@sign,w
 14172  1FFC  1903               	btfsc	3,2
 14173  1FFD  0008               	return
 14174  1FFE  17B3               	bsf	___ftpack@arg+2,7
 14175  1FFF  0008               	return
 14176  2000                     __end_of___ftpack:	
 14177                           
 14178                           	psect	text38
 14179  221F                     __ptext38:	
 14180 ;; *************** function _TMR0_Load8bitPeriod *****************
 14181 ;; Defined at:
 14182 ;;		line 113 in file "mcc_generated_files/tmr0.c"
 14183 ;; Parameters:    Size  Location     Type
 14184 ;;  periodVal       1    wreg     unsigned char 
 14185 ;; Auto vars:     Size  Location     Type
 14186 ;;  periodVal       1   17[BANK0 ] unsigned char 
 14187 ;; Return value:  Size  Location     Type
 14188 ;;                  1    wreg      void 
 14189 ;; Registers used:
 14190 ;;		wreg
 14191 ;; Tracked objects:
 14192 ;;		On entry : 0/0
 14193 ;;		On exit  : 0/0
 14194 ;;		Unchanged: 0/0
 14195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14197 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14199 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14200 ;;Total ram usage:        1 bytes
 14201 ;; Hardware stack levels used:    1
 14202 ;; Hardware stack levels required when called:    6
 14203 ;; This function calls:
 14204 ;;		Nothing
 14205 ;; This function is called by:
 14206 ;;		_main_initialize
 14207 ;;		_setDrvPiezoOnTime
 14208 ;;		_setHeaterPreTime
 14209 ;; This function uses a non-reentrant model
 14210 ;;
 14211                           
 14212                           
 14213                           ;psect for function _TMR0_Load8bitPeriod
 14214  221F                     _TMR0_Load8bitPeriod:	
 14215                           
 14216                           ;incstack = 0
 14217                           ; Regs used in _TMR0_Load8bitPeriod: [wreg]
 14218                           ;TMR0_Load8bitPeriod@periodVal stored from wreg
 14219  221F  0020               	movlb	0	; select bank0
 14220  2220  00B1               	movwf	TMR0_Load8bitPeriod@periodVal
 14221                           
 14222                           ;tmr0.c: 116: TMR0H = periodVal;
 14223  2221  0831               	movf	TMR0_Load8bitPeriod@periodVal,w
 14224  2222  0096               	movwf	22	;volatile
 14225  2223  0008               	return
 14226  2224                     __end_of_TMR0_Load8bitPeriod:	
 14227                           
 14228                           	psect	text39
 14229  23C2                     __ptext39:	
 14230 ;; *************** function _setDrvPeak *****************
 14231 ;; Defined at:
 14232 ;;		line 394 in file "main.c"
 14233 ;; Parameters:    Size  Location     Type
 14234 ;;  pk              2   21[BANK1 ] int 
 14235 ;; Auto vars:     Size  Location     Type
 14236 ;;		None
 14237 ;; Return value:  Size  Location     Type
 14238 ;;                  2   21[BANK1 ] int 
 14239 ;; Registers used:
 14240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14241 ;; Tracked objects:
 14242 ;;		On entry : 0/0
 14243 ;;		On exit  : 0/0
 14244 ;;		Unchanged: 0/0
 14245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14246 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14249 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14250 ;;Total ram usage:        2 bytes
 14251 ;; Hardware stack levels used:    1
 14252 ;; Hardware stack levels required when called:    9
 14253 ;; This function calls:
 14254 ;;		_printf
 14255 ;; This function is called by:
 14256 ;;		_execCmd
 14257 ;; This function uses a non-reentrant model
 14258 ;;
 14259                           
 14260                           
 14261                           ;psect for function _setDrvPeak
 14262  23C2                     _setDrvPeak:	
 14263                           
 14264                           ;main.c: 395: drv_peak_val = pk;
 14265                           
 14266                           ;incstack = 0
 14267                           ; Regs used in _setDrvPeak: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14268  23C2  0021               	movlb	1	; select bank1
 14269  23C3  0836               	movf	(setDrvPeak@pk+1)^(0+128),w
 14270  23C4  0022               	movlb	2	; select bank2
 14271  23C5  00EF               	movwf	(_drv_peak_val+1)^(0+256)
 14272  23C6  0021               	movlb	1	; select bank1
 14273  23C7  0835               	movf	setDrvPeak@pk^(0+128),w
 14274  23C8  0022               	movlb	2	; select bank2
 14275  23C9  00EE               	movwf	_drv_peak_val^(0+256)
 14276                           
 14277                           ;main.c: 396: printf("A\n");
 14278  23CA  3059               	movlw	low (STR_8| (0+32768))
 14279  23CB  0021               	movlb	1	; select bank1
 14280  23CC  00A0               	movwf	printf@f^(0+128)
 14281  23CD  30AA               	movlw	high (STR_8| (0+32768))
 14282  23CE  00A1               	movwf	(printf@f^(0+128)+1)
 14283  23CF  318E  26CE         	fcall	_printf
 14284                           
 14285                           ;main.c: 397: return 0;
 14286  23D1  0021               	movlb	1	; select bank1
 14287  23D2  01B5               	clrf	?_setDrvPeak^(0+128)
 14288  23D3  01B6               	clrf	(?_setDrvPeak+1)^(0+128)
 14289  23D4  0008               	return
 14290  23D5                     __end_of_setDrvPeak:	
 14291                           
 14292                           	psect	text40
 14293  1990                     __ptext40:	
 14294 ;; *************** function _setDrvGain *****************
 14295 ;; Defined at:
 14296 ;;		line 401 in file "main.c"
 14297 ;; Parameters:    Size  Location     Type
 14298 ;;  gain            2   21[BANK1 ] int 
 14299 ;; Auto vars:     Size  Location     Type
 14300 ;;  setGain         2   24[BANK1 ] int 
 14301 ;; Return value:  Size  Location     Type
 14302 ;;                  2   21[BANK1 ] int 
 14303 ;; Registers used:
 14304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14305 ;; Tracked objects:
 14306 ;;		On entry : 0/0
 14307 ;;		On exit  : 0/0
 14308 ;;		Unchanged: 0/0
 14309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14310 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14311 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14312 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14313 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14314 ;;Total ram usage:        5 bytes
 14315 ;; Hardware stack levels used:    1
 14316 ;; Hardware stack levels required when called:   13
 14317 ;; This function calls:
 14318 ;;		_drv_write
 14319 ;;		_printf
 14320 ;; This function is called by:
 14321 ;;		_execCmd
 14322 ;; This function uses a non-reentrant model
 14323 ;;
 14324                           
 14325                           
 14326                           ;psect for function _setDrvGain
 14327  1990                     _setDrvGain:	
 14328                           
 14329                           ;main.c: 402: int setGain = 0;
 14330                           
 14331                           ;incstack = 0
 14332                           ; Regs used in _setDrvGain: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14333  1990  0021               	movlb	1	; select bank1
 14334  1991  01B8               	clrf	setDrvGain@setGain^(0+128)
 14335  1992  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 14336                           
 14337                           ;main.c: 403: switch (gain){
 14338  1993  29AC               	goto	l8047
 14339  1994                     l8031:	
 14340                           ;main.c: 404: case 0: setGain = 0x00; break;
 14341                           
 14342  1994  01B8               	clrf	setDrvGain@setGain^(0+128)
 14343  1995  01B9               	clrf	(setDrvGain@setGain+1)^(0+128)
 14344  1996  29BF               	goto	l8049
 14345  1997                     l8033:	
 14346                           ;main.c: 405: case 1: setGain = 0x01; break;
 14347                           
 14348  1997  3001               	movlw	1
 14349  1998  299C               	goto	L25
 14350  1999                     l8035:	
 14351                           ;main.c: 406: case 2: setGain = 0x02; break;
 14352                           
 14353  1999  3002               	movlw	2
 14354  199A  299C               	goto	L25
 14355  199B                     l8037:	
 14356                           ;main.c: 407: case 3: setGain = 0x03; break;
 14357                           
 14358  199B  3003               	movlw	3
 14359  199C                     L25:	
 14360  199C  00B8               	movwf	setDrvGain@setGain^(0+128)
 14361  199D  3000               	movlw	0
 14362  199E  00B9               	movwf	(setDrvGain@setGain^(0+128)+1)
 14363  199F  29BF               	goto	l8049
 14364  19A0                     l8039:	
 14365                           ;main.c: 408: default: printf("E\n"); return 1;
 14366                           
 14367  19A0  305C               	movlw	low (STR_17| (0+32768))
 14368  19A1  00A0               	movwf	printf@f^(0+128)
 14369  19A2  30AA               	movlw	high (STR_17| (0+32768))
 14370  19A3  00A1               	movwf	(printf@f^(0+128)+1)
 14371  19A4  318E  26CE         	fcall	_printf
 14372  19A6  3001               	movlw	1
 14373  19A7  0021               	movlb	1	; select bank1
 14374  19A8  00B5               	movwf	?_setDrvGain^(0+128)
 14375  19A9  3000               	movlw	0
 14376  19AA  00B6               	movwf	(?_setDrvGain^(0+128)+1)
 14377  19AB  0008               	return
 14378  19AC                     l8047:	
 14379                           ;main.c: 409: }
 14380                           
 14381                           
 14382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14383                           ; Switch size 1, requested type "space"
 14384                           ; Number of cases is 1, Range of values is 0 to 0
 14385                           ; switch strategies available:
 14386                           ; Name         Instructions Cycles
 14387                           ; simple_byte            4     3 (average)
 14388                           ; direct_byte            8     6 (fixed)
 14389                           ; jumptable            260     6 (fixed)
 14390                           ;	Chosen strategy is simple_byte
 14391  19AC  0836               	movf	(setDrvGain@gain+1)^(0+128),w
 14392  19AD  3A00               	xorlw	0	; case 0
 14393  19AE  1903               	skipnz
 14394  19AF  29B1               	goto	l8763
 14395  19B0  29A0               	goto	l8039
 14396  19B1                     l8763:	
 14397                           
 14398                           ; Switch size 1, requested type "space"
 14399                           ; Number of cases is 4, Range of values is 0 to 3
 14400                           ; switch strategies available:
 14401                           ; Name         Instructions Cycles
 14402                           ; simple_byte           13     7 (average)
 14403                           ; direct_byte           14     6 (fixed)
 14404                           ; jumptable            260     6 (fixed)
 14405                           ;	Chosen strategy is simple_byte
 14406  19B1  0835               	movf	setDrvGain@gain^(0+128),w
 14407  19B2  3A00               	xorlw	0	; case 0
 14408  19B3  1903               	skipnz
 14409  19B4  2994               	goto	l8031
 14410  19B5  3A01               	xorlw	1	; case 1
 14411  19B6  1903               	skipnz
 14412  19B7  2997               	goto	l8033
 14413  19B8  3A03               	xorlw	3	; case 2
 14414  19B9  1903               	skipnz
 14415  19BA  2999               	goto	l8035
 14416  19BB  3A01               	xorlw	1	; case 3
 14417  19BC  1903               	skipnz
 14418  19BD  299B               	goto	l8037
 14419  19BE  29A0               	goto	l8039
 14420  19BF                     l8049:	
 14421                           
 14422                           ;main.c: 410: drv_write(0x01, setGain);
 14423  19BF  0838               	movf	setDrvGain@setGain^(0+128),w
 14424  19C0  00B7               	movwf	??_setDrvGain^(0+128)
 14425  19C1  0837               	movf	??_setDrvGain^(0+128),w
 14426  19C2  0020               	movlb	0	; select bank0
 14427  19C3  00C9               	movwf	drv_write@data
 14428  19C4  3001               	movlw	1
 14429  19C5  31A6  265B  3199   	fcall	_drv_write
 14430                           
 14431                           ;main.c: 411: printf("A\n");
 14432  19C8  3059               	movlw	low (STR_8| (0+32768))
 14433  19C9  0021               	movlb	1	; select bank1
 14434  19CA  00A0               	movwf	printf@f^(0+128)
 14435  19CB  30AA               	movlw	high (STR_8| (0+32768))
 14436  19CC  00A1               	movwf	(printf@f^(0+128)+1)
 14437  19CD  318E  26CE         	fcall	_printf
 14438                           
 14439                           ;main.c: 412: return 0;
 14440  19CF  0021               	movlb	1	; select bank1
 14441  19D0  01B5               	clrf	?_setDrvGain^(0+128)
 14442  19D1  01B6               	clrf	(?_setDrvGain+1)^(0+128)
 14443  19D2  0008               	return
 14444  19D3                     __end_of_setDrvGain:	
 14445                           
 14446                           	psect	text41
 14447  159F                     __ptext41:	
 14448 ;; *************** function _setActive *****************
 14449 ;; Defined at:
 14450 ;;		line 499 in file "main.c"
 14451 ;; Parameters:    Size  Location     Type
 14452 ;;  probeNum        2   21[BANK1 ] int 
 14453 ;;  onOff           2   23[BANK1 ] int 
 14454 ;; Auto vars:     Size  Location     Type
 14455 ;;		None
 14456 ;; Return value:  Size  Location     Type
 14457 ;;                  2   21[BANK1 ] int 
 14458 ;; Registers used:
 14459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14460 ;; Tracked objects:
 14461 ;;		On entry : 0/0
 14462 ;;		On exit  : 0/0
 14463 ;;		Unchanged: 0/0
 14464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14465 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14467 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14468 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14469 ;;Total ram usage:       12 bytes
 14470 ;; Hardware stack levels used:    1
 14471 ;; Hardware stack levels required when called:    9
 14472 ;; This function calls:
 14473 ;;		_printf
 14474 ;; This function is called by:
 14475 ;;		_execCmd
 14476 ;; This function uses a non-reentrant model
 14477 ;;
 14478                           
 14479                           
 14480                           ;psect for function _setActive
 14481  159F                     _setActive:	
 14482                           
 14483                           ;main.c: 502: if(moveMask & 1UL << probeNum){
 14484                           
 14485                           ;incstack = 0
 14486                           ; Regs used in _setActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14487  159F  0021               	movlb	1	; select bank1
 14488  15A0  0859               	movf	_moveMask^(0+128),w
 14489  15A1  00B9               	movwf	??_setActive^(0+128)
 14490  15A2  085A               	movf	(_moveMask+1)^(0+128),w
 14491  15A3  00BA               	movwf	(??_setActive^(0+128)+1)
 14492  15A4  085B               	movf	(_moveMask+2)^(0+128),w
 14493  15A5  00BB               	movwf	(??_setActive^(0+128)+2)
 14494  15A6  085C               	movf	(_moveMask+3)^(0+128),w
 14495  15A7  00BC               	movwf	(??_setActive^(0+128)+3)
 14496  15A8  3001               	movlw	1
 14497  15A9  00BD               	movwf	(??_setActive+4)^(0+128)
 14498  15AA  3000               	movlw	0
 14499  15AB  00BE               	movwf	((??_setActive+4)^(0+128)+1)
 14500  15AC  3000               	movlw	0
 14501  15AD  00BF               	movwf	((??_setActive+4)^(0+128)+2)
 14502  15AE  3000               	movlw	0
 14503  15AF  00C0               	movwf	((??_setActive+4)^(0+128)+3)
 14504  15B0  0A35               	incf	setActive@probeNum^(0+128),w
 14505  15B1  2DB6               	goto	u8200
 14506  15B2                     u8205:	
 14507  15B2  35BD               	lslf	(??_setActive+4)^(0+128),f
 14508  15B3  0DBE               	rlf	((??_setActive+4)^(0+128)+1),f
 14509  15B4  0DBF               	rlf	((??_setActive+4)^(0+128)+2),f
 14510  15B5  0DC0               	rlf	((??_setActive+4)^(0+128)+3),f
 14511  15B6                     u8200:	
 14512  15B6  0B89               	decfsz	9,f
 14513  15B7  2DB2               	goto	u8205
 14514  15B8  083D               	movf	(??_setActive+4)^(0+128),w
 14515  15B9  05B9               	andwf	??_setActive^(0+128),f
 14516  15BA  083E               	movf	(??_setActive+5)^(0+128),w
 14517  15BB  05BA               	andwf	(??_setActive^(0+128)+1),f
 14518  15BC  083F               	movf	(??_setActive+6)^(0+128),w
 14519  15BD  05BB               	andwf	(??_setActive^(0+128)+2),f
 14520  15BE  0840               	movf	(??_setActive+7)^(0+128),w
 14521  15BF  05BC               	andwf	(??_setActive^(0+128)+3),f
 14522  15C0  083C               	movf	(??_setActive+3)^(0+128),w
 14523  15C1  043B               	iorwf	(??_setActive+2)^(0+128),w
 14524  15C2  043A               	iorwf	(??_setActive+1)^(0+128),w
 14525  15C3  0439               	iorwf	??_setActive^(0+128),w
 14526  15C4  1903               	skipnz
 14527  15C5  2E09               	goto	l8161
 14528                           
 14529                           ;main.c: 503: if (onOff)
 14530  15C6  0837               	movf	setActive@onOff^(0+128),w
 14531  15C7  0438               	iorwf	(setActive@onOff+1)^(0+128),w
 14532  15C8  1903               	btfsc	3,2
 14533  15C9  2DE3               	goto	l8153
 14534                           
 14535                           ;main.c: 504: activeMask |= 1UL << probeNum;
 14536  15CA  3001               	movlw	1
 14537  15CB  00B9               	movwf	??_setActive^(0+128)
 14538  15CC  3000               	movlw	0
 14539  15CD  00BA               	movwf	(??_setActive^(0+128)+1)
 14540  15CE  3000               	movlw	0
 14541  15CF  00BB               	movwf	(??_setActive^(0+128)+2)
 14542  15D0  3000               	movlw	0
 14543  15D1  00BC               	movwf	(??_setActive^(0+128)+3)
 14544  15D2  0A35               	incf	setActive@probeNum^(0+128),w
 14545  15D3  2DD8               	goto	u8230
 14546  15D4                     u8235:	
 14547  15D4  35B9               	lslf	??_setActive^(0+128),f
 14548  15D5  0DBA               	rlf	(??_setActive^(0+128)+1),f
 14549  15D6  0DBB               	rlf	(??_setActive^(0+128)+2),f
 14550  15D7  0DBC               	rlf	(??_setActive^(0+128)+3),f
 14551  15D8                     u8230:	
 14552  15D8  0B89               	decfsz	9,f
 14553  15D9  2DD4               	goto	u8235
 14554  15DA  0839               	movf	??_setActive^(0+128),w
 14555  15DB  04DD               	iorwf	_activeMask^(0+128),f
 14556  15DC  083A               	movf	(??_setActive+1)^(0+128),w
 14557  15DD  04DE               	iorwf	(_activeMask+1)^(0+128),f
 14558  15DE  083B               	movf	(??_setActive+2)^(0+128),w
 14559  15DF  04DF               	iorwf	(_activeMask+2)^(0+128),f
 14560  15E0  083C               	movf	(??_setActive+3)^(0+128),w
 14561  15E1  04E0               	iorwf	(_activeMask+3)^(0+128),f
 14562  15E2  2DFF               	goto	l8155
 14563  15E3                     l8153:	
 14564                           
 14565                           ;main.c: 505: else
 14566                           ;main.c: 506: activeMask &= ~(1UL << probeNum);
 14567  15E3  3001               	movlw	1
 14568  15E4  00B9               	movwf	??_setActive^(0+128)
 14569  15E5  3000               	movlw	0
 14570  15E6  00BA               	movwf	(??_setActive^(0+128)+1)
 14571  15E7  3000               	movlw	0
 14572  15E8  00BB               	movwf	(??_setActive^(0+128)+2)
 14573  15E9  3000               	movlw	0
 14574  15EA  00BC               	movwf	(??_setActive^(0+128)+3)
 14575  15EB  0A35               	incf	setActive@probeNum^(0+128),w
 14576  15EC  2DF1               	goto	u8240
 14577  15ED                     u8245:	
 14578  15ED  35B9               	lslf	??_setActive^(0+128),f
 14579  15EE  0DBA               	rlf	(??_setActive^(0+128)+1),f
 14580  15EF  0DBB               	rlf	(??_setActive^(0+128)+2),f
 14581  15F0  0DBC               	rlf	(??_setActive^(0+128)+3),f
 14582  15F1                     u8240:	
 14583  15F1  0B89               	decfsz	9,f
 14584  15F2  2DED               	goto	u8245
 14585  15F3  09B9               	comf	??_setActive^(0+128),f
 14586  15F4  09BA               	comf	(??_setActive^(0+128)+1),f
 14587  15F5  09BB               	comf	(??_setActive^(0+128)+2),f
 14588  15F6  09BC               	comf	(??_setActive^(0+128)+3),f
 14589  15F7  0839               	movf	??_setActive^(0+128),w
 14590  15F8  05DD               	andwf	_activeMask^(0+128),f
 14591  15F9  083A               	movf	(??_setActive+1)^(0+128),w
 14592  15FA  05DE               	andwf	(_activeMask+1)^(0+128),f
 14593  15FB  083B               	movf	(??_setActive+2)^(0+128),w
 14594  15FC  05DF               	andwf	(_activeMask+2)^(0+128),f
 14595  15FD  083C               	movf	(??_setActive+3)^(0+128),w
 14596  15FE  05E0               	andwf	(_activeMask+3)^(0+128),f
 14597  15FF                     l8155:	
 14598                           
 14599                           ;main.c: 507: printf("A\n");
 14600  15FF  3059               	movlw	low (STR_8| (0+32768))
 14601  1600  00A0               	movwf	printf@f^(0+128)
 14602  1601  30AA               	movlw	high (STR_8| (0+32768))
 14603  1602  00A1               	movwf	(printf@f^(0+128)+1)
 14604  1603  318E  26CE         	fcall	_printf
 14605                           
 14606                           ;main.c: 508: return 0;
 14607  1605  0021               	movlb	1	; select bank1
 14608  1606  01B5               	clrf	?_setActive^(0+128)
 14609  1607  01B6               	clrf	(?_setActive+1)^(0+128)
 14610  1608  0008               	return
 14611  1609                     l8161:	
 14612                           
 14613                           ;main.c: 509: }
 14614                           ;main.c: 510: printf("E\n");
 14615  1609  305C               	movlw	low (STR_17| (0+32768))
 14616  160A  00A0               	movwf	printf@f^(0+128)
 14617  160B  30AA               	movlw	high (STR_17| (0+32768))
 14618  160C  00A1               	movwf	(printf@f^(0+128)+1)
 14619  160D  318E  26CE         	fcall	_printf
 14620                           
 14621                           ;main.c: 511: return 1;
 14622  160F  3001               	movlw	1
 14623  1610  0021               	movlb	1	; select bank1
 14624  1611  00B5               	movwf	?_setActive^(0+128)
 14625  1612  3000               	movlw	0
 14626  1613  00B6               	movwf	(?_setActive^(0+128)+1)
 14627  1614  0008               	return
 14628  1615                     __end_of_setActive:	
 14629                           
 14630                           	psect	text42
 14631  190E                     __ptext42:	
 14632 ;; *************** function _getPosition *****************
 14633 ;; Defined at:
 14634 ;;		line 383 in file "main.c"
 14635 ;; Parameters:    Size  Location     Type
 14636 ;;  a               2   21[BANK1 ] int 
 14637 ;; Auto vars:     Size  Location     Type
 14638 ;;		None
 14639 ;; Return value:  Size  Location     Type
 14640 ;;                  2   21[BANK1 ] int 
 14641 ;; Registers used:
 14642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14643 ;; Tracked objects:
 14644 ;;		On entry : 0/0
 14645 ;;		On exit  : 0/0
 14646 ;;		Unchanged: 0/0
 14647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14648 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14650 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14651 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14652 ;;Total ram usage:        6 bytes
 14653 ;; Hardware stack levels used:    1
 14654 ;; Hardware stack levels required when called:    9
 14655 ;; This function calls:
 14656 ;;		_printf
 14657 ;; This function is called by:
 14658 ;;		_execCmd
 14659 ;; This function uses a non-reentrant model
 14660 ;;
 14661                           
 14662                           
 14663                           ;psect for function _getPosition
 14664  190E                     _getPosition:	
 14665                           
 14666                           ;main.c: 385: if (a>=0 && a < 24){
 14667                           
 14668                           ;incstack = 0
 14669                           ; Regs used in _getPosition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14670  190E  0021               	movlb	1	; select bank1
 14671  190F  1BB6               	btfsc	(getPosition@a+1)^(0+128),7
 14672  1910  2947               	goto	l8017
 14673  1911  0836               	movf	(getPosition@a+1)^(0+128),w
 14674  1912  3A80               	xorlw	128
 14675  1913  0020               	movlb	0	; select bank0
 14676  1914  00C9               	movwf	??_getPosition
 14677  1915  3080               	movlw	128
 14678  1916  0249               	subwf	??_getPosition,w
 14679  1917  1D03               	skipz
 14680  1918  291C               	goto	u8125
 14681  1919  3018               	movlw	24
 14682  191A  0021               	movlb	1	; select bank1
 14683  191B  0235               	subwf	getPosition@a^(0+128),w
 14684  191C                     u8125:	
 14685  191C  1803               	skipnc
 14686  191D  2947               	goto	l8017
 14687                           
 14688                           ;main.c: 386: printf("%d\n", currentPositions_steps[a]);
 14689  191E  304B               	movlw	low (STR_15| (0+32768))
 14690  191F  0021               	movlb	1	; select bank1
 14691  1920  00A0               	movwf	printf@f^(0+128)
 14692  1921  30AA               	movlw	high (STR_15| (0+32768))
 14693  1922  00A1               	movwf	(printf@f^(0+128)+1)
 14694  1923  0836               	movf	(getPosition@a+1)^(0+128),w
 14695  1924  0020               	movlb	0	; select bank0
 14696  1925  00CA               	movwf	??_getPosition+1
 14697  1926  0021               	movlb	1	; select bank1
 14698  1927  0835               	movf	getPosition@a^(0+128),w
 14699  1928  0020               	movlb	0	; select bank0
 14700  1929  00C9               	movwf	??_getPosition
 14701  192A  35C9               	lslf	??_getPosition,f
 14702  192B  0DCA               	rlf	??_getPosition+1,f
 14703  192C  35C9               	lslf	??_getPosition,f
 14704  192D  0DCA               	rlf	??_getPosition+1,f
 14705  192E  3090               	movlw	144
 14706  192F  00CB               	movwf	??_getPosition+2
 14707  1930  3027               	movlw	39
 14708  1931  00CC               	movwf	??_getPosition+3
 14709  1932  0849               	movf	??_getPosition,w
 14710  1933  074B               	addwf	??_getPosition+2,w
 14711  1934  0086               	movwf	6
 14712  1935  084A               	movf	??_getPosition+1,w
 14713  1936  3D4C               	addwfc	??_getPosition+3,w
 14714  1937  0087               	movwf	7
 14715  1938  3F40               	moviw [0]fsr1
 14716  1939  0021               	movlb	1	; select bank1
 14717  193A  00A2               	movwf	(?_printf^(0+128)+2)
 14718  193B  3F41               	moviw [1]fsr1
 14719  193C  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14720  193D  3F42               	moviw [2]fsr1
 14721  193E  00A4               	movwf	((?_printf+2)^(0+128)+2)
 14722  193F  3F43               	moviw [3]fsr1
 14723  1940  00A5               	movwf	((?_printf+3)^(0+128)+2)
 14724  1941  318E  26CE         	fcall	_printf
 14725                           
 14726                           ;main.c: 387: return 0;
 14727  1943  0021               	movlb	1	; select bank1
 14728  1944  01B5               	clrf	?_getPosition^(0+128)
 14729  1945  01B6               	clrf	(?_getPosition+1)^(0+128)
 14730  1946  0008               	return
 14731  1947                     l8017:	
 14732                           
 14733                           ;main.c: 388: }
 14734                           ;main.c: 390: return 1;
 14735  1947  3001               	movlw	1
 14736  1948  0021               	movlb	1	; select bank1
 14737  1949  00B5               	movwf	?_getPosition^(0+128)
 14738  194A  3000               	movlw	0
 14739  194B  00B6               	movwf	(?_getPosition^(0+128)+1)
 14740  194C  0008               	return
 14741  194D                     __end_of_getPosition:	
 14742                           
 14743                           	psect	text43
 14744  1B8B                     __ptext43:	
 14745 ;; *************** function _getMoveMask *****************
 14746 ;; Defined at:
 14747 ;;		line 539 in file "main.c"
 14748 ;; Parameters:    Size  Location     Type
 14749 ;;		None
 14750 ;; Auto vars:     Size  Location     Type
 14751 ;;  i               2   23[BANK1 ] int 
 14752 ;; Return value:  Size  Location     Type
 14753 ;;                  2   21[BANK1 ] int 
 14754 ;; Registers used:
 14755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14756 ;; Tracked objects:
 14757 ;;		On entry : 0/0
 14758 ;;		On exit  : 0/0
 14759 ;;		Unchanged: 0/0
 14760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14761 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14762 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14763 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14764 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14765 ;;Total ram usage:        8 bytes
 14766 ;; Hardware stack levels used:    1
 14767 ;; Hardware stack levels required when called:    9
 14768 ;; This function calls:
 14769 ;;		_printf
 14770 ;; This function is called by:
 14771 ;;		_execCmd
 14772 ;; This function uses a non-reentrant model
 14773 ;;
 14774                           
 14775                           
 14776                           ;psect for function _getMoveMask
 14777  1B8B                     _getMoveMask:	
 14778                           
 14779                           ;main.c: 540: for(int i=24-1; i>=0; i--){
 14780                           
 14781                           ;incstack = 0
 14782                           ; Regs used in _getMoveMask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14783  1B8B  3017               	movlw	23
 14784  1B8C  0021               	movlb	1	; select bank1
 14785  1B8D  00B7               	movwf	getMoveMask@i^(0+128)
 14786  1B8E  3000               	movlw	0
 14787  1B8F  00B8               	movwf	(getMoveMask@i^(0+128)+1)
 14788  1B90  1BB8               	btfsc	(getMoveMask@i+1)^(0+128),7
 14789  1B91  2BCE               	goto	l8217
 14790  1B92                     l8211:	
 14791                           
 14792                           ;main.c: 541: printf("%d ", (moveMask >> i) & 1 );
 14793  1B92  304F               	movlw	low (STR_1| (0+32768))
 14794  1B93  00A0               	movwf	printf@f^(0+128)
 14795  1B94  30AA               	movlw	high (STR_1| (0+32768))
 14796  1B95  00A1               	movwf	(printf@f^(0+128)+1)
 14797  1B96  0859               	movf	_moveMask^(0+128),w
 14798  1B97  0020               	movlb	0	; select bank0
 14799  1B98  00C9               	movwf	??_getMoveMask
 14800  1B99  0021               	movlb	1	; select bank1
 14801  1B9A  085A               	movf	(_moveMask+1)^(0+128),w
 14802  1B9B  0020               	movlb	0	; select bank0
 14803  1B9C  00CA               	movwf	??_getMoveMask+1
 14804  1B9D  0021               	movlb	1	; select bank1
 14805  1B9E  085B               	movf	(_moveMask+2)^(0+128),w
 14806  1B9F  0020               	movlb	0	; select bank0
 14807  1BA0  00CB               	movwf	??_getMoveMask+2
 14808  1BA1  0021               	movlb	1	; select bank1
 14809  1BA2  085C               	movf	(_moveMask+3)^(0+128),w
 14810  1BA3  0020               	movlb	0	; select bank0
 14811  1BA4  00CC               	movwf	??_getMoveMask+3
 14812  1BA5  0021               	movlb	1	; select bank1
 14813  1BA6  0A37               	incf	getMoveMask@i^(0+128),w
 14814  1BA7  0020               	movlb	0	; select bank0
 14815  1BA8  2BAE               	goto	u8330
 14816  1BA9                     u8335:	
 14817  1BA9  1003               	clrc
 14818  1BAA  0CCC               	rrf	??_getMoveMask+3,f
 14819  1BAB  0CCB               	rrf	??_getMoveMask+2,f
 14820  1BAC  0CCA               	rrf	??_getMoveMask+1,f
 14821  1BAD  0CC9               	rrf	??_getMoveMask,f
 14822  1BAE                     u8330:	
 14823  1BAE  3EFF               	addlw	-1
 14824  1BAF  1D03               	skipz
 14825  1BB0  2BA9               	goto	u8335
 14826  1BB1  3001               	movlw	1
 14827  1BB2  0549               	andwf	??_getMoveMask,w
 14828  1BB3  0021               	movlb	1	; select bank1
 14829  1BB4  00A2               	movwf	(?_printf^(0+128)+2)
 14830  1BB5  3000               	movlw	0
 14831  1BB6  0020               	movlb	0	; select bank0
 14832  1BB7  054A               	andwf	??_getMoveMask+1,w
 14833  1BB8  0021               	movlb	1	; select bank1
 14834  1BB9  00A3               	movwf	((?_printf+1)^(0+128)+2)
 14835  1BBA  3000               	movlw	0
 14836  1BBB  0020               	movlb	0	; select bank0
 14837  1BBC  054B               	andwf	??_getMoveMask+2,w
 14838  1BBD  0021               	movlb	1	; select bank1
 14839  1BBE  00A4               	movwf	((?_printf+2)^(0+128)+2)
 14840  1BBF  3000               	movlw	0
 14841  1BC0  0020               	movlb	0	; select bank0
 14842  1BC1  054C               	andwf	??_getMoveMask+3,w
 14843  1BC2  0021               	movlb	1	; select bank1
 14844  1BC3  00A5               	movwf	((?_printf+3)^(0+128)+2)
 14845  1BC4  318E  26CE  319B   	fcall	_printf
 14846  1BC7  30FF               	movlw	255
 14847  1BC8  0021               	movlb	1	; select bank1
 14848  1BC9  07B7               	addwf	getMoveMask@i^(0+128),f
 14849  1BCA  30FF               	movlw	255
 14850  1BCB  3DB8               	addwfc	(getMoveMask@i+1)^(0+128),f
 14851  1BCC  1FB8               	btfss	(getMoveMask@i+1)^(0+128),7
 14852  1BCD  2B92               	goto	l8211
 14853  1BCE                     l8217:	
 14854                           
 14855                           ;main.c: 542: }
 14856                           ;main.c: 543: printf("\n");
 14857  1BCE  3063               	movlw	low ((STR_37+28)| (0+32768))
 14858  1BCF  00A0               	movwf	printf@f^(0+128)
 14859  1BD0  30A8               	movlw	high ((STR_37+28)| (0+32768))
 14860  1BD1  00A1               	movwf	(printf@f^(0+128)+1)
 14861  1BD2  318E  26CE         	fcall	_printf
 14862                           
 14863                           ;main.c: 544: return 0;
 14864  1BD4  0021               	movlb	1	; select bank1
 14865  1BD5  01B5               	clrf	?_getMoveMask^(0+128)
 14866  1BD6  01B6               	clrf	(?_getMoveMask+1)^(0+128)
 14867  1BD7  0008               	return
 14868  1BD8                     __end_of_getMoveMask:	
 14869                           
 14870                           	psect	text44
 14871  25F0                     __ptext44:	
 14872 ;; *************** function _getMotionStatus *****************
 14873 ;; Defined at:
 14874 ;;		line 546 in file "main.c"
 14875 ;; Parameters:    Size  Location     Type
 14876 ;;		None
 14877 ;; Auto vars:     Size  Location     Type
 14878 ;;		None
 14879 ;; Return value:  Size  Location     Type
 14880 ;;                  2   21[BANK1 ] int 
 14881 ;; Registers used:
 14882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14883 ;; Tracked objects:
 14884 ;;		On entry : 0/0
 14885 ;;		On exit  : 0/0
 14886 ;;		Unchanged: 0/0
 14887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14888 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14891 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14892 ;;Total ram usage:        2 bytes
 14893 ;; Hardware stack levels used:    1
 14894 ;; Hardware stack levels required when called:    9
 14895 ;; This function calls:
 14896 ;;		_printf
 14897 ;; This function is called by:
 14898 ;;		_execCmd
 14899 ;; This function uses a non-reentrant model
 14900 ;;
 14901                           
 14902                           
 14903                           ;psect for function _getMotionStatus
 14904  25F0                     _getMotionStatus:	
 14905                           
 14906                           ;main.c: 547: switch(motionType){
 14907                           
 14908                           ;incstack = 0
 14909                           ; Regs used in _getMotionStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14910  25F0  2E09               	goto	l8233
 14911  25F1                     l8225:	
 14912                           ;main.c: 548: case REL_MOVE: printf("R"); break;
 14913                           
 14914  25F1  3065               	movlw	low (STR_34| (0+32768))
 14915  25F2  0021               	movlb	1	; select bank1
 14916  25F3  00A0               	movwf	printf@f^(0+128)
 14917  25F4  30AA               	movlw	high (STR_34| (0+32768))
 14918  25F5  00A1               	movwf	(printf@f^(0+128)+1)
 14919  25F6  318E  26CE         	fcall	_printf
 14920  25F8  0008               	return
 14921  25F9                     l8227:	
 14922                           ;main.c: 549: case ABS_MOVE: printf("A"); break;
 14923                           
 14924  25F9  3024               	movlw	low ((STR_75+3)| (0+32768))
 14925  25FA  0021               	movlb	1	; select bank1
 14926  25FB  00A0               	movwf	printf@f^(0+128)
 14927  25FC  30AA               	movlw	high ((STR_75+3)| (0+32768))
 14928  25FD  00A1               	movwf	(printf@f^(0+128)+1)
 14929  25FE  318E  26CE         	fcall	_printf
 14930  2600  0008               	return
 14931  2601                     l8229:	
 14932                           ;main.c: 550: default: printf("N"); break;
 14933                           
 14934  2601  3063               	movlw	low (STR_36| (0+32768))
 14935  2602  0021               	movlb	1	; select bank1
 14936  2603  00A0               	movwf	printf@f^(0+128)
 14937  2604  30AA               	movlw	high (STR_36| (0+32768))
 14938  2605  00A1               	movwf	(printf@f^(0+128)+1)
 14939  2606  318E  26CE         	fcall	_printf
 14940                           
 14941                           ;main.c: 551: }
 14942  2608  0008               	return
 14943  2609                     l8233:	
 14944  2609  0020               	movlb	0	; select bank0
 14945  260A  0855               	movf	_motionType,w
 14946                           
 14947                           ; Switch size 1, requested type "space"
 14948                           ; Number of cases is 2, Range of values is 1 to 2
 14949                           ; switch strategies available:
 14950                           ; Name         Instructions Cycles
 14951                           ; simple_byte            7     4 (average)
 14952                           ; direct_byte           13     9 (fixed)
 14953                           ; jumptable            263     9 (fixed)
 14954                           ;	Chosen strategy is simple_byte
 14955  260B  3A01               	xorlw	1	; case 1
 14956  260C  1903               	skipnz
 14957  260D  2DF1               	goto	l8225
 14958  260E  3A03               	xorlw	3	; case 2
 14959  260F  1903               	skipnz
 14960  2610  2DF9               	goto	l8227
 14961  2611  2E01               	goto	l8229
 14962  2612  0008               	return
 14963  2613                     __end_of_getMotionStatus:	
 14964                           
 14965                           	psect	text45
 14966  1B3E                     __ptext45:	
 14967 ;; *************** function _getActive *****************
 14968 ;; Defined at:
 14969 ;;		line 531 in file "main.c"
 14970 ;; Parameters:    Size  Location     Type
 14971 ;;		None
 14972 ;; Auto vars:     Size  Location     Type
 14973 ;;  i               2   23[BANK1 ] int 
 14974 ;; Return value:  Size  Location     Type
 14975 ;;                  2   21[BANK1 ] int 
 14976 ;; Registers used:
 14977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14978 ;; Tracked objects:
 14979 ;;		On entry : 0/0
 14980 ;;		On exit  : 0/0
 14981 ;;		Unchanged: 0/0
 14982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14983 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14984 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14985 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14986 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14987 ;;Total ram usage:        8 bytes
 14988 ;; Hardware stack levels used:    1
 14989 ;; Hardware stack levels required when called:    9
 14990 ;; This function calls:
 14991 ;;		_printf
 14992 ;; This function is called by:
 14993 ;;		_execCmd
 14994 ;; This function uses a non-reentrant model
 14995 ;;
 14996                           
 14997                           
 14998                           ;psect for function _getActive
 14999  1B3E                     _getActive:	
 15000                           
 15001                           ;main.c: 532: for(int i=24-1; i>=0; i--){
 15002                           
 15003                           ;incstack = 0
 15004                           ; Regs used in _getActive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15005  1B3E  3017               	movlw	23
 15006  1B3F  0021               	movlb	1	; select bank1
 15007  1B40  00B7               	movwf	getActive@i^(0+128)
 15008  1B41  3000               	movlw	0
 15009  1B42  00B8               	movwf	(getActive@i^(0+128)+1)
 15010  1B43  1BB8               	btfsc	(getActive@i+1)^(0+128),7
 15011  1B44  2B81               	goto	l8199
 15012  1B45                     l8193:	
 15013                           
 15014                           ;main.c: 533: printf("%d ", (activeMask >> i) & 1 );
 15015  1B45  304F               	movlw	low (STR_1| (0+32768))
 15016  1B46  00A0               	movwf	printf@f^(0+128)
 15017  1B47  30AA               	movlw	high (STR_1| (0+32768))
 15018  1B48  00A1               	movwf	(printf@f^(0+128)+1)
 15019  1B49  085D               	movf	_activeMask^(0+128),w
 15020  1B4A  0020               	movlb	0	; select bank0
 15021  1B4B  00C9               	movwf	??_getActive
 15022  1B4C  0021               	movlb	1	; select bank1
 15023  1B4D  085E               	movf	(_activeMask+1)^(0+128),w
 15024  1B4E  0020               	movlb	0	; select bank0
 15025  1B4F  00CA               	movwf	??_getActive+1
 15026  1B50  0021               	movlb	1	; select bank1
 15027  1B51  085F               	movf	(_activeMask+2)^(0+128),w
 15028  1B52  0020               	movlb	0	; select bank0
 15029  1B53  00CB               	movwf	??_getActive+2
 15030  1B54  0021               	movlb	1	; select bank1
 15031  1B55  0860               	movf	(_activeMask+3)^(0+128),w
 15032  1B56  0020               	movlb	0	; select bank0
 15033  1B57  00CC               	movwf	??_getActive+3
 15034  1B58  0021               	movlb	1	; select bank1
 15035  1B59  0A37               	incf	getActive@i^(0+128),w
 15036  1B5A  0020               	movlb	0	; select bank0
 15037  1B5B  2B61               	goto	u8300
 15038  1B5C                     u8305:	
 15039  1B5C  1003               	clrc
 15040  1B5D  0CCC               	rrf	??_getActive+3,f
 15041  1B5E  0CCB               	rrf	??_getActive+2,f
 15042  1B5F  0CCA               	rrf	??_getActive+1,f
 15043  1B60  0CC9               	rrf	??_getActive,f
 15044  1B61                     u8300:	
 15045  1B61  3EFF               	addlw	-1
 15046  1B62  1D03               	skipz
 15047  1B63  2B5C               	goto	u8305
 15048  1B64  3001               	movlw	1
 15049  1B65  0549               	andwf	??_getActive,w
 15050  1B66  0021               	movlb	1	; select bank1
 15051  1B67  00A2               	movwf	(?_printf^(0+128)+2)
 15052  1B68  3000               	movlw	0
 15053  1B69  0020               	movlb	0	; select bank0
 15054  1B6A  054A               	andwf	??_getActive+1,w
 15055  1B6B  0021               	movlb	1	; select bank1
 15056  1B6C  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15057  1B6D  3000               	movlw	0
 15058  1B6E  0020               	movlb	0	; select bank0
 15059  1B6F  054B               	andwf	??_getActive+2,w
 15060  1B70  0021               	movlb	1	; select bank1
 15061  1B71  00A4               	movwf	((?_printf+2)^(0+128)+2)
 15062  1B72  3000               	movlw	0
 15063  1B73  0020               	movlb	0	; select bank0
 15064  1B74  054C               	andwf	??_getActive+3,w
 15065  1B75  0021               	movlb	1	; select bank1
 15066  1B76  00A5               	movwf	((?_printf+3)^(0+128)+2)
 15067  1B77  318E  26CE  319B   	fcall	_printf
 15068  1B7A  30FF               	movlw	255
 15069  1B7B  0021               	movlb	1	; select bank1
 15070  1B7C  07B7               	addwf	getActive@i^(0+128),f
 15071  1B7D  30FF               	movlw	255
 15072  1B7E  3DB8               	addwfc	(getActive@i+1)^(0+128),f
 15073  1B7F  1FB8               	btfss	(getActive@i+1)^(0+128),7
 15074  1B80  2B45               	goto	l8193
 15075  1B81                     l8199:	
 15076                           
 15077                           ;main.c: 534: }
 15078                           ;main.c: 535: printf("\n");
 15079  1B81  3063               	movlw	low ((STR_37+28)| (0+32768))
 15080  1B82  00A0               	movwf	printf@f^(0+128)
 15081  1B83  30A8               	movlw	high ((STR_37+28)| (0+32768))
 15082  1B84  00A1               	movwf	(printf@f^(0+128)+1)
 15083  1B85  318E  26CE         	fcall	_printf
 15084                           
 15085                           ;main.c: 536: return 0;
 15086  1B87  0021               	movlb	1	; select bank1
 15087  1B88  01B5               	clrf	?_getActive^(0+128)
 15088  1B89  01B6               	clrf	(?_getActive+1)^(0+128)
 15089  1B8A  0008               	return
 15090  1B8B                     __end_of_getActive:	
 15091                           
 15092                           	psect	text46
 15093  0A3A                     __ptext46:	
 15094 ;; *************** function _commCheck *****************
 15095 ;; Defined at:
 15096 ;;		line 554 in file "main.c"
 15097 ;; Parameters:    Size  Location     Type
 15098 ;;		None
 15099 ;; Auto vars:     Size  Location     Type
 15100 ;;		None
 15101 ;; Return value:  Size  Location     Type
 15102 ;;                  2   50[BANK1 ] int 
 15103 ;; Registers used:
 15104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15105 ;; Tracked objects:
 15106 ;;		On entry : 0/0
 15107 ;;		On exit  : 0/0
 15108 ;;		Unchanged: 0/0
 15109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15110 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15112 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15113 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15114 ;;Total ram usage:        3 bytes
 15115 ;; Hardware stack levels used:    1
 15116 ;; Hardware stack levels required when called:   13
 15117 ;; This function calls:
 15118 ;;		_LED_testComm
 15119 ;;		_LED_test_openshort
 15120 ;;		_drv_read
 15121 ;;		_printf
 15122 ;; This function is called by:
 15123 ;;		_execCmd
 15124 ;; This function uses a non-reentrant model
 15125 ;;
 15126                           
 15127                           
 15128                           ;psect for function _commCheck
 15129  0A3A                     _commCheck:	
 15130                           
 15131                           ;main.c: 555: printf("\n----starting comm test----\n\n");
 15132                           
 15133                           ;incstack = 0
 15134                           ; Regs used in _commCheck: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15135  0A3A  3047               	movlw	low (STR_37| (0+32768))
 15136  0A3B  0021               	movlb	1	; select bank1
 15137  0A3C  00A0               	movwf	printf@f^(0+128)
 15138  0A3D  30A8               	movlw	high (STR_37| (0+32768))
 15139  0A3E  00A1               	movwf	(printf@f^(0+128)+1)
 15140  0A3F  318E  26CE  318A   	fcall	_printf
 15141                           
 15142                           ;main.c: 558: printf("testing top LED driver...");
 15143  0A42  3081               	movlw	low (STR_38| (0+32768))
 15144  0A43  0021               	movlb	1	; select bank1
 15145  0A44  00A0               	movwf	printf@f^(0+128)
 15146  0A45  30A8               	movlw	high (STR_38| (0+32768))
 15147  0A46  00A1               	movwf	(printf@f^(0+128)+1)
 15148  0A47  318E  26CE  318A   	fcall	_printf
 15149                           
 15150                           ;main.c: 559: if (!LED_testComm(1))
 15151  0A4A  3001               	movlw	1
 15152  0A4B  0021               	movlb	1	; select bank1
 15153  0A4C  00CA               	movwf	LED_testComm@topOrBottom^(0+128)
 15154  0A4D  3000               	movlw	0
 15155  0A4E  00CB               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 15156  0A4F  3196  268E  318A   	fcall	_LED_testComm
 15157  0A52  0021               	movlb	1	; select bank1
 15158  0A53  084A               	movf	?_LED_testComm^(0+128),w
 15159  0A54  044B               	iorwf	(?_LED_testComm+1)^(0+128),w
 15160  0A55  1D03               	btfss	3,2
 15161  0A56  2A5B               	goto	l8239
 15162                           
 15163                           ;main.c: 560: printf("passed\n");
 15164  0A57  30FB               	movlw	low (STR_39| (0+32768))
 15165  0A58  00A0               	movwf	printf@f^(0+128)
 15166  0A59  30A9               	movlw	high (STR_39| (0+32768))
 15167  0A5A  2A5F               	goto	L26
 15168  0A5B                     l8239:	
 15169                           
 15170                           ;main.c: 561: else
 15171                           ;main.c: 562: printf("FAILED\n");
 15172  0A5B  30F3               	movlw	low (STR_40| (0+32768))
 15173  0A5C  0021               	movlb	1	; select bank1
 15174  0A5D  00A0               	movwf	printf@f^(0+128)
 15175  0A5E  30A9               	movlw	high (STR_40| (0+32768))
 15176  0A5F                     L26:	
 15177  0A5F  00A1               	movwf	(printf@f^(0+128)+1)
 15178  0A60  318E  26CE  318A   	fcall	_printf
 15179                           
 15180                           ;main.c: 564: printf("opens: ");
 15181  0A63  300B               	movlw	low (STR_41| (0+32768))
 15182  0A64  0021               	movlb	1	; select bank1
 15183  0A65  00A0               	movwf	printf@f^(0+128)
 15184  0A66  30AA               	movlw	high (STR_41| (0+32768))
 15185  0A67  00A1               	movwf	(printf@f^(0+128)+1)
 15186  0A68  318E  26CE  318A   	fcall	_printf
 15187                           
 15188                           ;main.c: 565: LED_test_openshort(10, 1);
 15189  0A6B  300A               	movlw	10
 15190  0A6C  0021               	movlb	1	; select bank1
 15191  0A6D  00B5               	movwf	LED_test_openshort@type^(0+128)
 15192  0A6E  3000               	movlw	0
 15193  0A6F  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15194  0A70  3001               	movlw	1
 15195  0A71  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15196  0A72  3000               	movlw	0
 15197  0A73  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15198  0A74  3197  2707  318A   	fcall	_LED_test_openshort
 15199                           
 15200                           ;main.c: 566: printf("\n\nshorts: ");
 15201  0A77  30B6               	movlw	low (STR_42| (0+32768))
 15202  0A78  0021               	movlb	1	; select bank1
 15203  0A79  00A0               	movwf	printf@f^(0+128)
 15204  0A7A  30A9               	movlw	high (STR_42| (0+32768))
 15205  0A7B  00A1               	movwf	(printf@f^(0+128)+1)
 15206  0A7C  318E  26CE  318A   	fcall	_printf
 15207                           
 15208                           ;main.c: 567: LED_test_openshort(11, 1);
 15209  0A7F  300B               	movlw	11
 15210  0A80  0021               	movlb	1	; select bank1
 15211  0A81  00B5               	movwf	LED_test_openshort@type^(0+128)
 15212  0A82  3000               	movlw	0
 15213  0A83  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15214  0A84  3001               	movlw	1
 15215  0A85  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15216  0A86  3000               	movlw	0
 15217  0A87  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15218  0A88  3197  2707  318A   	fcall	_LED_test_openshort
 15219                           
 15220                           ;main.c: 570: printf("\ntesting bottom LED driver...\n");
 15221  0A8B  3028               	movlw	low (STR_43| (0+32768))
 15222  0A8C  0021               	movlb	1	; select bank1
 15223  0A8D  00A0               	movwf	printf@f^(0+128)
 15224  0A8E  30A8               	movlw	high (STR_43| (0+32768))
 15225  0A8F  00A1               	movwf	(printf@f^(0+128)+1)
 15226  0A90  318E  26CE  318A   	fcall	_printf
 15227                           
 15228                           ;main.c: 571: if (!LED_testComm(2))
 15229  0A93  3002               	movlw	2
 15230  0A94  0021               	movlb	1	; select bank1
 15231  0A95  00CA               	movwf	LED_testComm@topOrBottom^(0+128)
 15232  0A96  3000               	movlw	0
 15233  0A97  00CB               	movwf	(LED_testComm@topOrBottom^(0+128)+1)
 15234  0A98  3196  268E  318A   	fcall	_LED_testComm
 15235  0A9B  0021               	movlb	1	; select bank1
 15236  0A9C  084A               	movf	?_LED_testComm^(0+128),w
 15237  0A9D  044B               	iorwf	(?_LED_testComm+1)^(0+128),w
 15238  0A9E  1D03               	btfss	3,2
 15239  0A9F  2AA4               	goto	l8243
 15240                           
 15241                           ;main.c: 572: printf("passed\n");
 15242  0AA0  30FB               	movlw	low (STR_39| (0+32768))
 15243  0AA1  00A0               	movwf	printf@f^(0+128)
 15244  0AA2  30A9               	movlw	high (STR_39| (0+32768))
 15245  0AA3  2AA8               	goto	L27
 15246  0AA4                     l8243:	
 15247                           
 15248                           ;main.c: 573: else
 15249                           ;main.c: 574: printf("FAILED\n");
 15250  0AA4  30F3               	movlw	low (STR_40| (0+32768))
 15251  0AA5  0021               	movlb	1	; select bank1
 15252  0AA6  00A0               	movwf	printf@f^(0+128)
 15253  0AA7  30A9               	movlw	high (STR_40| (0+32768))
 15254  0AA8                     L27:	
 15255  0AA8  00A1               	movwf	(printf@f^(0+128)+1)
 15256  0AA9  318E  26CE  318A   	fcall	_printf
 15257                           
 15258                           ;main.c: 576: printf("opens: ");
 15259  0AAC  300B               	movlw	low (STR_41| (0+32768))
 15260  0AAD  0021               	movlb	1	; select bank1
 15261  0AAE  00A0               	movwf	printf@f^(0+128)
 15262  0AAF  30AA               	movlw	high (STR_41| (0+32768))
 15263  0AB0  00A1               	movwf	(printf@f^(0+128)+1)
 15264  0AB1  318E  26CE  318A   	fcall	_printf
 15265                           
 15266                           ;main.c: 577: LED_test_openshort(10, 2);
 15267  0AB4  300A               	movlw	10
 15268  0AB5  0021               	movlb	1	; select bank1
 15269  0AB6  00B5               	movwf	LED_test_openshort@type^(0+128)
 15270  0AB7  3000               	movlw	0
 15271  0AB8  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15272  0AB9  3002               	movlw	2
 15273  0ABA  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15274  0ABB  3000               	movlw	0
 15275  0ABC  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15276  0ABD  3197  2707  318A   	fcall	_LED_test_openshort
 15277                           
 15278                           ;main.c: 578: printf("\n\nshorts: ");
 15279  0AC0  30B6               	movlw	low (STR_42| (0+32768))
 15280  0AC1  0021               	movlb	1	; select bank1
 15281  0AC2  00A0               	movwf	printf@f^(0+128)
 15282  0AC3  30A9               	movlw	high (STR_42| (0+32768))
 15283  0AC4  00A1               	movwf	(printf@f^(0+128)+1)
 15284  0AC5  318E  26CE  318A   	fcall	_printf
 15285                           
 15286                           ;main.c: 579: LED_test_openshort(11, 2);
 15287  0AC8  300B               	movlw	11
 15288  0AC9  0021               	movlb	1	; select bank1
 15289  0ACA  00B5               	movwf	LED_test_openshort@type^(0+128)
 15290  0ACB  3000               	movlw	0
 15291  0ACC  00B6               	movwf	(LED_test_openshort@type^(0+128)+1)
 15292  0ACD  3002               	movlw	2
 15293  0ACE  00B7               	movwf	LED_test_openshort@topOrBottom^(0+128)
 15294  0ACF  3000               	movlw	0
 15295  0AD0  00B8               	movwf	(LED_test_openshort@topOrBottom^(0+128)+1)
 15296  0AD1  3197  2707  318A   	fcall	_LED_test_openshort
 15297                           
 15298                           ;main.c: 581: printf("\ntesting piezo driver...");
 15299  0AD4  309B               	movlw	low (STR_48| (0+32768))
 15300  0AD5  0021               	movlb	1	; select bank1
 15301  0AD6  00A0               	movwf	printf@f^(0+128)
 15302  0AD7  30A8               	movlw	high (STR_48| (0+32768))
 15303  0AD8  00A1               	movwf	(printf@f^(0+128)+1)
 15304  0AD9  318E  26CE  318A   	fcall	_printf
 15305                           
 15306                           ;main.c: 582: if(drv_read(0x01) > 0)
 15307  0ADC  3001               	movlw	1
 15308  0ADD  319A  2217  318A   	fcall	_drv_read
 15309  0AE0  0021               	movlb	1	; select bank1
 15310  0AE1  0836               	movf	(?_drv_read+1)^(0+128),w
 15311  0AE2  3A80               	xorlw	128
 15312  0AE3  00D4               	movwf	??_commCheck^(0+128)
 15313  0AE4  3080               	movlw	128
 15314  0AE5  0254               	subwf	??_commCheck^(0+128),w
 15315  0AE6  1D03               	skipz
 15316  0AE7  2AEA               	goto	u8375
 15317  0AE8  3001               	movlw	1
 15318  0AE9  0235               	subwf	?_drv_read^(0+128),w
 15319  0AEA                     u8375:	
 15320  0AEA  1C03               	skipc
 15321  0AEB  2AF1               	goto	l8247
 15322                           
 15323                           ;main.c: 583: printf("passed\n\n");
 15324  0AEC  30CA               	movlw	low (STR_49| (0+32768))
 15325  0AED  0021               	movlb	1	; select bank1
 15326  0AEE  00A0               	movwf	printf@f^(0+128)
 15327  0AEF  30A9               	movlw	high (STR_49| (0+32768))
 15328  0AF0  2AF5               	goto	L28
 15329  0AF1                     l8247:	
 15330                           
 15331                           ;main.c: 584: else
 15332                           ;main.c: 585: printf("FAILED\n\n");
 15333  0AF1  30C1               	movlw	low (STR_50| (0+32768))
 15334  0AF2  0021               	movlb	1	; select bank1
 15335  0AF3  00A0               	movwf	printf@f^(0+128)
 15336  0AF4  30A9               	movlw	high (STR_50| (0+32768))
 15337  0AF5                     L28:	
 15338  0AF5  00A1               	movwf	(printf@f^(0+128)+1)
 15339  0AF6  318E  26CE  318A   	fcall	_printf
 15340                           
 15341                           ;main.c: 586: printf("----finished comm test----\n");
 15342  0AF9  3065               	movlw	low (STR_51| (0+32768))
 15343  0AFA  0021               	movlb	1	; select bank1
 15344  0AFB  00A0               	movwf	printf@f^(0+128)
 15345  0AFC  30A8               	movlw	high (STR_51| (0+32768))
 15346  0AFD  00A1               	movwf	(printf@f^(0+128)+1)
 15347  0AFE  318E  26CE         	fcall	_printf
 15348  0B00  0008               	return
 15349  0B01                     __end_of_commCheck:	
 15350                           
 15351                           	psect	text47
 15352  1707                     __ptext47:	
 15353 ;; *************** function _LED_test_openshort *****************
 15354 ;; Defined at:
 15355 ;;		line 95 in file "LEDcomm.c"
 15356 ;; Parameters:    Size  Location     Type
 15357 ;;  type            2   21[BANK1 ] int 
 15358 ;;  topOrBottom     2   23[BANK1 ] int 
 15359 ;; Auto vars:     Size  Location     Type
 15360 ;;  j               2   26[BANK1 ] int 
 15361 ;; Return value:  Size  Location     Type
 15362 ;;                  1    wreg      void 
 15363 ;; Registers used:
 15364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15365 ;; Tracked objects:
 15366 ;;		On entry : 0/0
 15367 ;;		On exit  : 0/0
 15368 ;;		Unchanged: 0/0
 15369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15370 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15371 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15372 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15373 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15374 ;;Total ram usage:        7 bytes
 15375 ;; Hardware stack levels used:    1
 15376 ;; Hardware stack levels required when called:    9
 15377 ;; This function calls:
 15378 ;;		_LEDsOn
 15379 ;;		_printf
 15380 ;;		_send_2length_2bytes_IK
 15381 ;; This function is called by:
 15382 ;;		_commCheck
 15383 ;; This function uses a non-reentrant model
 15384 ;;
 15385                           
 15386                           
 15387                           ;psect for function _LED_test_openshort
 15388  1707                     _LED_test_openshort:	
 15389                           
 15390                           ;incstack = 0
 15391                           ; Regs used in _LED_test_openshort: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15392                           ;LEDcomm.c: 97: do { LATCbits.LATC1 = 1; } while(0);
 15393  1707  0022               	movlb	2	; select bank2
 15394  1708  148E               	bsf	14,1	;volatile
 15395                           
 15396                           ;LEDcomm.c: 98: LEDsOn(0xFFFFFFFF, topOrBottom);
 15397  1709  30FF               	movlw	255
 15398  170A  0020               	movlb	0	; select bank0
 15399  170B  00C7               	movwf	LEDsOn@LEDpins+3
 15400  170C  30FF               	movlw	255
 15401  170D  00C6               	movwf	LEDsOn@LEDpins+2
 15402  170E  30FF               	movlw	255
 15403  170F  00C5               	movwf	LEDsOn@LEDpins+1
 15404  1710  30FF               	movlw	255
 15405  1711  00C4               	movwf	LEDsOn@LEDpins
 15406  1712  0021               	movlb	1	; select bank1
 15407  1713  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15408  1714  0020               	movlb	0	; select bank0
 15409  1715  00C9               	movwf	LEDsOn@topOrBottom+1
 15410  1716  0021               	movlb	1	; select bank1
 15411  1717  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15412  1718  0020               	movlb	0	; select bank0
 15413  1719  00C8               	movwf	LEDsOn@topOrBottom
 15414  171A  31A5  25AD  3197   	fcall	_LEDsOn
 15415                           
 15416                           ;LEDcomm.c: 99: send_2length_2bytes_IK(0,0,type,topOrBottom);
 15417  171D  3000               	movlw	0
 15418  171E  0020               	movlb	0	; select bank0
 15419  171F  00BC               	movwf	send_2length_2bytes_IK@data1
 15420  1720  00BD               	movwf	send_2length_2bytes_IK@data1+1
 15421  1721  3000               	movlw	0
 15422  1722  00BE               	movwf	send_2length_2bytes_IK@data2
 15423  1723  00BF               	movwf	send_2length_2bytes_IK@data2+1
 15424  1724  0021               	movlb	1	; select bank1
 15425  1725  0835               	movf	LED_test_openshort@type^(0+128),w
 15426  1726  00B9               	movwf	??_LED_test_openshort^(0+128)
 15427  1727  0839               	movf	??_LED_test_openshort^(0+128),w
 15428  1728  0020               	movlb	0	; select bank0
 15429  1729  00C0               	movwf	send_2length_2bytes_IK@latch_start
 15430  172A  0021               	movlb	1	; select bank1
 15431  172B  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15432  172C  0020               	movlb	0	; select bank0
 15433  172D  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 15434  172E  0021               	movlb	1	; select bank1
 15435  172F  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15436  1730  0020               	movlb	0	; select bank0
 15437  1731  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 15438  1732  31A4  2416  3197   	fcall	_send_2length_2bytes_IK
 15439                           
 15440                           ;LEDcomm.c: 101: do { LATCbits.LATC1 = 0; } while(0);
 15441  1735  0022               	movlb	2	; select bank2
 15442  1736  108E               	bcf	14,1	;volatile
 15443                           
 15444                           ;LEDcomm.c: 103: for(int j = 23; j>=0; j--){
 15445  1737  3017               	movlw	23
 15446  1738  0021               	movlb	1	; select bank1
 15447  1739  00BA               	movwf	LED_test_openshort@j^(0+128)
 15448  173A  3000               	movlw	0
 15449  173B  00BB               	movwf	(LED_test_openshort@j^(0+128)+1)
 15450  173C  1BBB               	btfsc	(LED_test_openshort@j+1)^(0+128),7
 15451  173D  2F7C               	goto	l7659
 15452  173E                     l279:	
 15453                           ;LEDcomm.c: 104: do { LATAbits.LATA2 = 1; } while(0);
 15454                           
 15455  173E  0022               	movlb	2	; select bank2
 15456  173F  150C               	bsf	12,2	;volatile
 15457                           
 15458                           ;LEDcomm.c: 105: _delay((unsigned long)((10)*(1000000/4000000.0)));
 15459  1740  3200               	nop2	;2 cycle nop
 15460                           
 15461                           ;LEDcomm.c: 106: do { LATAbits.LATA2 = 0; } while(0);
 15462  1741  0022               	movlb	2	; select bank2
 15463  1742  110C               	bcf	12,2	;volatile
 15464                           
 15465                           ;LEDcomm.c: 107: if (topOrBottom == 1)
 15466  1743  0021               	movlb	1	; select bank1
 15467  1744  0337               	decf	LED_test_openshort@topOrBottom^(0+128),w
 15468  1745  0438               	iorwf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15469  1746  1D03               	btfss	3,2
 15470  1747  2F59               	goto	l7651
 15471                           
 15472                           ;LEDcomm.c: 108: if (PORTCbits.RC6){ printf("%d ", j);}
 15473  1748  0020               	movlb	0	; select bank0
 15474  1749  1B0E               	btfsc	14,6	;volatile
 15475  174A  2F4D               	goto	l7649
 15476                           
 15477                           ;LEDcomm.c: 109: else
 15478                           ;LEDcomm.c: 110: if (PORTCbits.RC3){ printf("%d ", j);}
 15479  174B  1D8E               	btfss	14,3	;volatile
 15480  174C  2F59               	goto	l7651
 15481  174D                     l7649:	
 15482  174D  304F               	movlw	low (STR_1| (0+32768))
 15483  174E  0021               	movlb	1	; select bank1
 15484  174F  00A0               	movwf	printf@f^(0+128)
 15485  1750  30AA               	movlw	high (STR_1| (0+32768))
 15486  1751  00A1               	movwf	(printf@f^(0+128)+1)
 15487  1752  083B               	movf	(LED_test_openshort@j+1)^(0+128),w
 15488  1753  00A3               	movwf	((?_printf+1)^(0+128)+2)
 15489  1754  083A               	movf	LED_test_openshort@j^(0+128),w
 15490  1755  00A2               	movwf	(?_printf^(0+128)+2)
 15491  1756  318E  26CE  3197   	fcall	_printf
 15492  1759                     l7651:	
 15493                           
 15494                           ;LEDcomm.c: 113: if (j == 23) {do { LATCbits.LATC1 = 1; } while(0); LEDsOn(0, topOrBotto
      +                          m); }
 15495  1759  3017               	movlw	23
 15496  175A  0021               	movlb	1	; select bank1
 15497  175B  063A               	xorwf	LED_test_openshort@j^(0+128),w
 15498  175C  043B               	iorwf	(LED_test_openshort@j+1)^(0+128),w
 15499  175D  1D03               	btfss	3,2
 15500  175E  2F75               	goto	l7655
 15501  175F  0022               	movlb	2	; select bank2
 15502  1760  148E               	bsf	14,1	;volatile
 15503  1761  3000               	movlw	0
 15504  1762  0020               	movlb	0	; select bank0
 15505  1763  00C7               	movwf	LEDsOn@LEDpins+3
 15506  1764  3000               	movlw	0
 15507  1765  00C6               	movwf	LEDsOn@LEDpins+2
 15508  1766  3000               	movlw	0
 15509  1767  00C5               	movwf	LEDsOn@LEDpins+1
 15510  1768  3000               	movlw	0
 15511  1769  00C4               	movwf	LEDsOn@LEDpins
 15512  176A  0021               	movlb	1	; select bank1
 15513  176B  0838               	movf	(LED_test_openshort@topOrBottom+1)^(0+128),w
 15514  176C  0020               	movlb	0	; select bank0
 15515  176D  00C9               	movwf	LEDsOn@topOrBottom+1
 15516  176E  0021               	movlb	1	; select bank1
 15517  176F  0837               	movf	LED_test_openshort@topOrBottom^(0+128),w
 15518  1770  0020               	movlb	0	; select bank0
 15519  1771  00C8               	movwf	LEDsOn@topOrBottom
 15520  1772  31A5  25AD  3197   	fcall	_LEDsOn
 15521  1775                     l7655:	
 15522  1775  30FF               	movlw	255
 15523  1776  0021               	movlb	1	; select bank1
 15524  1777  07BA               	addwf	LED_test_openshort@j^(0+128),f
 15525  1778  30FF               	movlw	255
 15526  1779  3DBB               	addwfc	(LED_test_openshort@j+1)^(0+128),f
 15527  177A  1FBB               	btfss	(LED_test_openshort@j+1)^(0+128),7
 15528  177B  2F3E               	goto	l279
 15529  177C                     l7659:	
 15530                           
 15531                           ;LEDcomm.c: 114: }
 15532                           ;LEDcomm.c: 115: printf("\n");
 15533  177C  3063               	movlw	low ((STR_37+28)| (0+32768))
 15534  177D  00A0               	movwf	printf@f^(0+128)
 15535  177E  30A8               	movlw	high ((STR_37+28)| (0+32768))
 15536  177F  00A1               	movwf	(printf@f^(0+128)+1)
 15537  1780  318E  26CE         	fcall	_printf
 15538  1782  0008               	return
 15539  1783                     __end_of_LED_test_openshort:	
 15540                           
 15541                           	psect	text48
 15542  168E                     __ptext48:	
 15543 ;; *************** function _LED_testComm *****************
 15544 ;; Defined at:
 15545 ;;		line 154 in file "LEDcomm.c"
 15546 ;; Parameters:    Size  Location     Type
 15547 ;;  topOrBottom     2   42[BANK1 ] int 
 15548 ;; Auto vars:     Size  Location     Type
 15549 ;;  oldConfigReg    4   46[BANK1 ] long 
 15550 ;;  readResult      2   44[BANK1 ] int 
 15551 ;; Return value:  Size  Location     Type
 15552 ;;                  2   42[BANK1 ] int 
 15553 ;; Registers used:
 15554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15555 ;; Tracked objects:
 15556 ;;		On entry : 0/0
 15557 ;;		On exit  : 0/0
 15558 ;;		Unchanged: 0/0
 15559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15560 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15561 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15562 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15563 ;;      Totals:         0       2       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15564 ;;Total ram usage:       10 bytes
 15565 ;; Hardware stack levels used:    1
 15566 ;; Hardware stack levels required when called:   11
 15567 ;; This function calls:
 15568 ;;		_LED_readConfig
 15569 ;;		_LED_setBrightnessRange
 15570 ;; This function is called by:
 15571 ;;		_commCheck
 15572 ;; This function uses a non-reentrant model
 15573 ;;
 15574                           
 15575                           
 15576                           ;psect for function _LED_testComm
 15577  168E                     _LED_testComm:	
 15578                           
 15579                           ;LEDcomm.c: 156: long oldConfigReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 15580                           
 15581                           ;incstack = 0
 15582                           ; Regs used in _LED_testComm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15583  168E  0021               	movlb	1	; select bank1
 15584  168F  034A               	decf	LED_testComm@topOrBottom^(0+128),w
 15585  1690  044B               	iorwf	(LED_testComm@topOrBottom+1)^(0+128),w
 15586  1691  1903               	btfsc	3,2
 15587  1692  2EA2               	goto	l7665
 15588  1693  0022               	movlb	2	; select bank2
 15589  1694  084D               	movf	(_LED_configReg_bot+3)^(0+256),w
 15590  1695  0021               	movlb	1	; select bank1
 15591  1696  00D1               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 15592  1697  0022               	movlb	2	; select bank2
 15593  1698  084C               	movf	(_LED_configReg_bot+2)^(0+256),w
 15594  1699  0021               	movlb	1	; select bank1
 15595  169A  00D0               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 15596  169B  0022               	movlb	2	; select bank2
 15597  169C  084B               	movf	(_LED_configReg_bot+1)^(0+256),w
 15598  169D  0021               	movlb	1	; select bank1
 15599  169E  00CF               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 15600  169F  0022               	movlb	2	; select bank2
 15601  16A0  084A               	movf	_LED_configReg_bot^(0+256),w
 15602  16A1  2EB0               	goto	L29
 15603  16A2                     l7665:	
 15604  16A2  0022               	movlb	2	; select bank2
 15605  16A3  0851               	movf	(_LED_configReg_top+3)^(0+256),w
 15606  16A4  0021               	movlb	1	; select bank1
 15607  16A5  00D1               	movwf	(LED_testComm@oldConfigReg+3)^(0+128)
 15608  16A6  0022               	movlb	2	; select bank2
 15609  16A7  0850               	movf	(_LED_configReg_top+2)^(0+256),w
 15610  16A8  0021               	movlb	1	; select bank1
 15611  16A9  00D0               	movwf	(LED_testComm@oldConfigReg+2)^(0+128)
 15612  16AA  0022               	movlb	2	; select bank2
 15613  16AB  084F               	movf	(_LED_configReg_top+1)^(0+256),w
 15614  16AC  0021               	movlb	1	; select bank1
 15615  16AD  00CF               	movwf	(LED_testComm@oldConfigReg+1)^(0+128)
 15616  16AE  0022               	movlb	2	; select bank2
 15617  16AF  084E               	movf	_LED_configReg_top^(0+256),w
 15618  16B0                     L29:	
 15619  16B0  0021               	movlb	1	; select bank1
 15620  16B1  00CE               	movwf	LED_testComm@oldConfigReg^(0+128)
 15621                           
 15622                           ;LEDcomm.c: 157: LED_setBrightnessRange(1, topOrBottom);
 15623  16B2  3001               	movlw	1
 15624  16B3  0020               	movlb	0	; select bank0
 15625  16B4  00C4               	movwf	LED_setBrightnessRange@range
 15626  16B5  3000               	movlw	0
 15627  16B6  00C5               	movwf	LED_setBrightnessRange@range+1
 15628  16B7  0021               	movlb	1	; select bank1
 15629  16B8  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15630  16B9  0020               	movlb	0	; select bank0
 15631  16BA  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 15632  16BB  0021               	movlb	1	; select bank1
 15633  16BC  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 15634  16BD  0020               	movlb	0	; select bank0
 15635  16BE  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 15636  16BF  318B  23DE  3196   	fcall	_LED_setBrightnessRange
 15637                           
 15638                           ;LEDcomm.c: 158: int readResult = LED_readConfig(topOrBottom);
 15639  16C2  0021               	movlb	1	; select bank1
 15640  16C3  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15641  16C4  00C7               	movwf	(LED_readConfig@topOrBottom+1)^(0+128)
 15642  16C5  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 15643  16C6  00C6               	movwf	LED_readConfig@topOrBottom^(0+128)
 15644  16C7  31A6  26F3  3196   	fcall	_LED_readConfig
 15645  16CA  0021               	movlb	1	; select bank1
 15646  16CB  0847               	movf	(?_LED_readConfig+1)^(0+128),w
 15647  16CC  00CD               	movwf	(LED_testComm@readResult+1)^(0+128)
 15648  16CD  0846               	movf	?_LED_readConfig^(0+128),w
 15649  16CE  00CC               	movwf	LED_testComm@readResult^(0+128)
 15650                           
 15651                           ;LEDcomm.c: 160: LED_setBrightnessRange(oldConfigReg > 0, topOrBottom);
 15652  16CF  1BD1               	btfsc	(LED_testComm@oldConfigReg+3)^(0+128),7
 15653  16D0  2EE0               	goto	u7620
 15654  16D1  0851               	movf	(LED_testComm@oldConfigReg+3)^(0+128),w
 15655  16D2  1D03               	btfss	3,2
 15656  16D3  2EDE               	goto	u7621
 15657  16D4  0850               	movf	(LED_testComm@oldConfigReg+2)^(0+128),w
 15658  16D5  1D03               	btfss	3,2
 15659  16D6  2EDE               	goto	u7621
 15660  16D7  084F               	movf	(LED_testComm@oldConfigReg+1)^(0+128),w
 15661  16D8  1D03               	btfss	3,2
 15662  16D9  2EDE               	goto	u7621
 15663  16DA  3001               	movlw	1
 15664  16DB  024E               	subwf	LED_testComm@oldConfigReg^(0+128),w
 15665  16DC  1C03               	btfss	3,0
 15666  16DD  2EE0               	goto	u7620
 15667  16DE                     u7621:	
 15668  16DE  3001               	movlw	1
 15669  16DF  2EE1               	goto	u7630
 15670  16E0                     u7620:	
 15671  16E0  3000               	movlw	0
 15672  16E1                     u7630:	
 15673  16E1  0020               	movlb	0	; select bank0
 15674  16E2  00CC               	movwf	??_LED_testComm
 15675  16E3  01CD               	clrf	??_LED_testComm+1
 15676  16E4  084C               	movf	??_LED_testComm,w
 15677  16E5  00C4               	movwf	LED_setBrightnessRange@range
 15678  16E6  084D               	movf	??_LED_testComm+1,w
 15679  16E7  00C5               	movwf	LED_setBrightnessRange@range+1
 15680  16E8  0021               	movlb	1	; select bank1
 15681  16E9  084B               	movf	(LED_testComm@topOrBottom+1)^(0+128),w
 15682  16EA  0020               	movlb	0	; select bank0
 15683  16EB  00C7               	movwf	LED_setBrightnessRange@topOrBottom+1
 15684  16EC  0021               	movlb	1	; select bank1
 15685  16ED  084A               	movf	LED_testComm@topOrBottom^(0+128),w
 15686  16EE  0020               	movlb	0	; select bank0
 15687  16EF  00C6               	movwf	LED_setBrightnessRange@topOrBottom
 15688  16F0  318B  23DE  3196   	fcall	_LED_setBrightnessRange
 15689                           
 15690                           ;LEDcomm.c: 162: return (readResult != 7);
 15691  16F3  3007               	movlw	7
 15692  16F4  0021               	movlb	1	; select bank1
 15693  16F5  064C               	xorwf	LED_testComm@readResult^(0+128),w
 15694  16F6  044D               	iorwf	(LED_testComm@readResult+1)^(0+128),w
 15695  16F7  1903               	btfsc	3,2
 15696  16F8  2EFB               	goto	u7640
 15697  16F9  3001               	movlw	1
 15698  16FA  2EFC               	goto	u7650
 15699  16FB                     u7640:	
 15700  16FB  3000               	movlw	0
 15701  16FC                     u7650:	
 15702  16FC  0020               	movlb	0	; select bank0
 15703  16FD  00CC               	movwf	??_LED_testComm
 15704  16FE  01CD               	clrf	??_LED_testComm+1
 15705  16FF  084C               	movf	??_LED_testComm,w
 15706  1700  0021               	movlb	1	; select bank1
 15707  1701  00CA               	movwf	?_LED_testComm^(0+128)
 15708  1702  0020               	movlb	0	; select bank0
 15709  1703  084D               	movf	??_LED_testComm+1,w
 15710  1704  0021               	movlb	1	; select bank1
 15711  1705  00CB               	movwf	(?_LED_testComm+1)^(0+128)
 15712  1706  0008               	return
 15713  1707                     __end_of_LED_testComm:	
 15714                           
 15715                           	psect	text49
 15716  0BDE                     __ptext49:	
 15717 ;; *************** function _LED_setBrightnessRange *****************
 15718 ;; Defined at:
 15719 ;;		line 77 in file "LEDcomm.c"
 15720 ;; Parameters:    Size  Location     Type
 15721 ;;  range           2   36[BANK0 ] int 
 15722 ;;  topOrBottom     2   38[BANK0 ] int 
 15723 ;; Auto vars:     Size  Location     Type
 15724 ;;  LED_configRe    4   40[BANK0 ] long 
 15725 ;; Return value:  Size  Location     Type
 15726 ;;                  1    wreg      void 
 15727 ;; Registers used:
 15728 ;;		wreg, status,2, status,0, pclath, cstack
 15729 ;; Tracked objects:
 15730 ;;		On entry : 0/0
 15731 ;;		On exit  : 0/0
 15732 ;;		Unchanged: 0/0
 15733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15734 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15735 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15736 ;;      Temps:          0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15737 ;;      Totals:         0       8      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15738 ;;Total ram usage:       25 bytes
 15739 ;; Hardware stack levels used:    1
 15740 ;; Hardware stack levels required when called:    8
 15741 ;; This function calls:
 15742 ;;		_send_2length_2bytes_IK
 15743 ;; This function is called by:
 15744 ;;		_LED_testComm
 15745 ;;		_main_initialize
 15746 ;;		_setLEDBrightnessRange
 15747 ;; This function uses a non-reentrant model
 15748 ;;
 15749                           
 15750                           
 15751                           ;psect for function _LED_setBrightnessRange
 15752  0BDE                     _LED_setBrightnessRange:	
 15753                           
 15754                           ;LEDcomm.c: 79: long LED_configReg = (topOrBottom == 1) ? LED_configReg_top : LED_config
      +                          Reg_bot;
 15755                           
 15756                           ;incstack = 0
 15757                           ; Regs used in _LED_setBrightnessRange: [wreg+status,2+status,0+pclath+cstack]
 15758  0BDE  0020               	movlb	0	; select bank0
 15759  0BDF  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 15760  0BE0  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 15761  0BE1  1903               	btfsc	3,2
 15762  0BE2  2BF2               	goto	l7551
 15763  0BE3  0022               	movlb	2	; select bank2
 15764  0BE4  084D               	movf	(_LED_configReg_bot+3)^(0+256),w
 15765  0BE5  0020               	movlb	0	; select bank0
 15766  0BE6  00CB               	movwf	LED_setBrightnessRange@LED_configReg+3
 15767  0BE7  0022               	movlb	2	; select bank2
 15768  0BE8  084C               	movf	(_LED_configReg_bot+2)^(0+256),w
 15769  0BE9  0020               	movlb	0	; select bank0
 15770  0BEA  00CA               	movwf	LED_setBrightnessRange@LED_configReg+2
 15771  0BEB  0022               	movlb	2	; select bank2
 15772  0BEC  084B               	movf	(_LED_configReg_bot+1)^(0+256),w
 15773  0BED  0020               	movlb	0	; select bank0
 15774  0BEE  00C9               	movwf	LED_setBrightnessRange@LED_configReg+1
 15775  0BEF  0022               	movlb	2	; select bank2
 15776  0BF0  084A               	movf	_LED_configReg_bot^(0+256),w
 15777  0BF1  2C00               	goto	L30
 15778  0BF2                     l7551:	
 15779  0BF2  0022               	movlb	2	; select bank2
 15780  0BF3  0851               	movf	(_LED_configReg_top+3)^(0+256),w
 15781  0BF4  0020               	movlb	0	; select bank0
 15782  0BF5  00CB               	movwf	LED_setBrightnessRange@LED_configReg+3
 15783  0BF6  0022               	movlb	2	; select bank2
 15784  0BF7  0850               	movf	(_LED_configReg_top+2)^(0+256),w
 15785  0BF8  0020               	movlb	0	; select bank0
 15786  0BF9  00CA               	movwf	LED_setBrightnessRange@LED_configReg+2
 15787  0BFA  0022               	movlb	2	; select bank2
 15788  0BFB  084F               	movf	(_LED_configReg_top+1)^(0+256),w
 15789  0BFC  0020               	movlb	0	; select bank0
 15790  0BFD  00C9               	movwf	LED_setBrightnessRange@LED_configReg+1
 15791  0BFE  0022               	movlb	2	; select bank2
 15792  0BFF  084E               	movf	_LED_configReg_top^(0+256),w
 15793  0C00                     L30:	
 15794  0C00  0020               	movlb	0	; select bank0
 15795  0C01  00C8               	movwf	LED_setBrightnessRange@LED_configReg
 15796                           
 15797                           ;LEDcomm.c: 80: LED_configReg |= ((range>0) | (range>0)<<1 | (range>0) << 2);
 15798  0C02  0845               	movf	LED_setBrightnessRange@range+1,w
 15799  0C03  3A80               	xorlw	128
 15800  0C04  0021               	movlb	1	; select bank1
 15801  0C05  00A0               	movwf	??_LED_setBrightnessRange^(0+128)
 15802  0C06  3080               	movlw	128
 15803  0C07  0220               	subwf	??_LED_setBrightnessRange^(0+128),w
 15804  0C08  1D03               	skipz
 15805  0C09  2C0D               	goto	u7305
 15806  0C0A  3001               	movlw	1
 15807  0C0B  0020               	movlb	0	; select bank0
 15808  0C0C  0244               	subwf	LED_setBrightnessRange@range,w
 15809  0C0D                     u7305:	
 15810  0C0D  1C03               	btfss	3,0
 15811  0C0E  2C11               	goto	u7300
 15812  0C0F  3001               	movlw	1
 15813  0C10  2C12               	goto	u7310
 15814  0C11                     u7300:	
 15815  0C11  3000               	movlw	0
 15816  0C12                     u7310:	
 15817  0C12  0021               	movlb	1	; select bank1
 15818  0C13  00A1               	movwf	(??_LED_setBrightnessRange+1)^(0+128)
 15819  0C14  01A2               	clrf	((??_LED_setBrightnessRange+1)^(0+128)+1)
 15820  0C15  35A1               	lslf	(??_LED_setBrightnessRange+1)^(0+128),f
 15821  0C16  0DA2               	rlf	((??_LED_setBrightnessRange+1)^(0+128)+1),f
 15822  0C17  35A1               	lslf	(??_LED_setBrightnessRange+1)^(0+128),f
 15823  0C18  0DA2               	rlf	((??_LED_setBrightnessRange+1)^(0+128)+1),f
 15824  0C19  0020               	movlb	0	; select bank0
 15825  0C1A  0845               	movf	LED_setBrightnessRange@range+1,w
 15826  0C1B  3A80               	xorlw	128
 15827  0C1C  0021               	movlb	1	; select bank1
 15828  0C1D  00A3               	movwf	(??_LED_setBrightnessRange+3)^(0+128)
 15829  0C1E  3080               	movlw	128
 15830  0C1F  0223               	subwf	(??_LED_setBrightnessRange+3)^(0+128),w
 15831  0C20  1D03               	skipz
 15832  0C21  2C25               	goto	u7325
 15833  0C22  3001               	movlw	1
 15834  0C23  0020               	movlb	0	; select bank0
 15835  0C24  0244               	subwf	LED_setBrightnessRange@range,w
 15836  0C25                     u7325:	
 15837  0C25  1C03               	btfss	3,0
 15838  0C26  2C29               	goto	u7320
 15839  0C27  3001               	movlw	1
 15840  0C28  2C2A               	goto	u7330
 15841  0C29                     u7320:	
 15842  0C29  3000               	movlw	0
 15843  0C2A                     u7330:	
 15844  0C2A  0021               	movlb	1	; select bank1
 15845  0C2B  00A4               	movwf	(??_LED_setBrightnessRange+4)^(0+128)
 15846  0C2C  01A5               	clrf	((??_LED_setBrightnessRange+4)^(0+128)+1)
 15847  0C2D  35A4               	lslf	(??_LED_setBrightnessRange+4)^(0+128),f
 15848  0C2E  0DA5               	rlf	((??_LED_setBrightnessRange+4)^(0+128)+1),f
 15849  0C2F  0020               	movlb	0	; select bank0
 15850  0C30  0845               	movf	LED_setBrightnessRange@range+1,w
 15851  0C31  3A80               	xorlw	128
 15852  0C32  0021               	movlb	1	; select bank1
 15853  0C33  00A6               	movwf	(??_LED_setBrightnessRange+6)^(0+128)
 15854  0C34  3080               	movlw	128
 15855  0C35  0226               	subwf	(??_LED_setBrightnessRange+6)^(0+128),w
 15856  0C36  1D03               	skipz
 15857  0C37  2C3B               	goto	u7345
 15858  0C38  3001               	movlw	1
 15859  0C39  0020               	movlb	0	; select bank0
 15860  0C3A  0244               	subwf	LED_setBrightnessRange@range,w
 15861  0C3B                     u7345:	
 15862  0C3B  1C03               	btfss	3,0
 15863  0C3C  2C3F               	goto	u7340
 15864  0C3D  3001               	movlw	1
 15865  0C3E  2C40               	goto	u7350
 15866  0C3F                     u7340:	
 15867  0C3F  3000               	movlw	0
 15868  0C40                     u7350:	
 15869  0C40  0021               	movlb	1	; select bank1
 15870  0C41  00A7               	movwf	(??_LED_setBrightnessRange+7)^(0+128)
 15871  0C42  01A8               	clrf	((??_LED_setBrightnessRange+7)^(0+128)+1)
 15872  0C43  0824               	movf	(??_LED_setBrightnessRange+4)^(0+128),w
 15873  0C44  0427               	iorwf	(??_LED_setBrightnessRange+7)^(0+128),w
 15874  0C45  00A9               	movwf	(??_LED_setBrightnessRange+9)^(0+128)
 15875  0C46  0825               	movf	(??_LED_setBrightnessRange+5)^(0+128),w
 15876  0C47  0428               	iorwf	(??_LED_setBrightnessRange+8)^(0+128),w
 15877  0C48  00AA               	movwf	(??_LED_setBrightnessRange+10)^(0+128)
 15878  0C49  0821               	movf	(??_LED_setBrightnessRange+1)^(0+128),w
 15879  0C4A  0429               	iorwf	(??_LED_setBrightnessRange+9)^(0+128),w
 15880  0C4B  00AB               	movwf	(??_LED_setBrightnessRange+11)^(0+128)
 15881  0C4C  0822               	movf	(??_LED_setBrightnessRange+2)^(0+128),w
 15882  0C4D  042A               	iorwf	(??_LED_setBrightnessRange+10)^(0+128),w
 15883  0C4E  00AC               	movwf	(??_LED_setBrightnessRange+12)^(0+128)
 15884  0C4F  082B               	movf	(??_LED_setBrightnessRange+11)^(0+128),w
 15885  0C50  00AD               	movwf	(??_LED_setBrightnessRange+13)^(0+128)
 15886  0C51  082C               	movf	(??_LED_setBrightnessRange+12)^(0+128),w
 15887  0C52  00AE               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+1)
 15888  0C53  3000               	movlw	0
 15889  0C54  1BAE               	btfsc	((??_LED_setBrightnessRange+13)^(0+128)+1),7
 15890  0C55  30FF               	movlw	255
 15891  0C56  00AF               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+2)
 15892  0C57  00B0               	movwf	((??_LED_setBrightnessRange+13)^(0+128)+3)
 15893  0C58  082D               	movf	(??_LED_setBrightnessRange+13)^(0+128),w
 15894  0C59  0020               	movlb	0	; select bank0
 15895  0C5A  04C8               	iorwf	LED_setBrightnessRange@LED_configReg,f
 15896  0C5B  0021               	movlb	1	; select bank1
 15897  0C5C  082E               	movf	(??_LED_setBrightnessRange+14)^(0+128),w
 15898  0C5D  0020               	movlb	0	; select bank0
 15899  0C5E  04C9               	iorwf	LED_setBrightnessRange@LED_configReg+1,f
 15900  0C5F  0021               	movlb	1	; select bank1
 15901  0C60  082F               	movf	(??_LED_setBrightnessRange+15)^(0+128),w
 15902  0C61  0020               	movlb	0	; select bank0
 15903  0C62  04CA               	iorwf	LED_setBrightnessRange@LED_configReg+2,f
 15904  0C63  0021               	movlb	1	; select bank1
 15905  0C64  0830               	movf	(??_LED_setBrightnessRange+16)^(0+128),w
 15906  0C65  0020               	movlb	0	; select bank0
 15907  0C66  04CB               	iorwf	LED_setBrightnessRange@LED_configReg+3,f
 15908                           
 15909                           ;LEDcomm.c: 81: send_2length_2bytes_IK((unsigned int)((LED_configReg>>16) & 0xFFFF),(uns
      +                          igned int)LED_configReg, 3, topOrBottom);
 15910  0C67  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15911  0C68  0021               	movlb	1	; select bank1
 15912  0C69  00A0               	movwf	??_LED_setBrightnessRange^(0+128)
 15913  0C6A  0020               	movlb	0	; select bank0
 15914  0C6B  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15915  0C6C  0021               	movlb	1	; select bank1
 15916  0C6D  00A1               	movwf	(??_LED_setBrightnessRange^(0+128)+1)
 15917  0C6E  0020               	movlb	0	; select bank0
 15918  0C6F  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 15919  0C70  0021               	movlb	1	; select bank1
 15920  0C71  00A2               	movwf	(??_LED_setBrightnessRange^(0+128)+2)
 15921  0C72  0020               	movlb	0	; select bank0
 15922  0C73  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 15923  0C74  0021               	movlb	1	; select bank1
 15924  0C75  00A3               	movwf	(??_LED_setBrightnessRange^(0+128)+3)
 15925  0C76  3010               	movlw	16
 15926  0C77  00A4               	movwf	(??_LED_setBrightnessRange+4)^(0+128)
 15927  0C78                     u7365:	
 15928  0C78  37A3               	asrf	(??_LED_setBrightnessRange^(0+128)+3),f
 15929  0C79  0CA2               	rrf	(??_LED_setBrightnessRange^(0+128)+2),f
 15930  0C7A  0CA1               	rrf	(??_LED_setBrightnessRange^(0+128)+1),f
 15931  0C7B  0CA0               	rrf	??_LED_setBrightnessRange^(0+128),f
 15932  0C7C  0BA4               	decfsz	(??_LED_setBrightnessRange+4)^(0+128),f
 15933  0C7D  2C78               	goto	u7365
 15934  0C7E  0821               	movf	(??_LED_setBrightnessRange+1)^(0+128),w
 15935  0C7F  0020               	movlb	0	; select bank0
 15936  0C80  00BD               	movwf	send_2length_2bytes_IK@data1+1
 15937  0C81  0021               	movlb	1	; select bank1
 15938  0C82  0820               	movf	??_LED_setBrightnessRange^(0+128),w
 15939  0C83  0020               	movlb	0	; select bank0
 15940  0C84  00BC               	movwf	send_2length_2bytes_IK@data1
 15941  0C85  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15942  0C86  00BF               	movwf	send_2length_2bytes_IK@data2+1
 15943  0C87  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15944  0C88  00BE               	movwf	send_2length_2bytes_IK@data2
 15945  0C89  3003               	movlw	3
 15946  0C8A  0021               	movlb	1	; select bank1
 15947  0C8B  00A5               	movwf	(??_LED_setBrightnessRange+5)^(0+128)
 15948  0C8C  0825               	movf	(??_LED_setBrightnessRange+5)^(0+128),w
 15949  0C8D  0020               	movlb	0	; select bank0
 15950  0C8E  00C0               	movwf	send_2length_2bytes_IK@latch_start
 15951  0C8F  0847               	movf	LED_setBrightnessRange@topOrBottom+1,w
 15952  0C90  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 15953  0C91  0846               	movf	LED_setBrightnessRange@topOrBottom,w
 15954  0C92  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 15955  0C93  31A4  2416  318B   	fcall	_send_2length_2bytes_IK
 15956                           
 15957                           ;LEDcomm.c: 84: if (topOrBottom == 1)
 15958  0C96  0020               	movlb	0	; select bank0
 15959  0C97  0346               	decf	LED_setBrightnessRange@topOrBottom,w
 15960  0C98  0447               	iorwf	LED_setBrightnessRange@topOrBottom+1,w
 15961  0C99  1D03               	btfss	3,2
 15962  0C9A  2CAB               	goto	l7561
 15963                           
 15964                           ;LEDcomm.c: 85: LED_configReg_top = LED_configReg;
 15965  0C9B  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 15966  0C9C  0022               	movlb	2	; select bank2
 15967  0C9D  00D1               	movwf	(_LED_configReg_top+3)^(0+256)
 15968  0C9E  0020               	movlb	0	; select bank0
 15969  0C9F  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 15970  0CA0  0022               	movlb	2	; select bank2
 15971  0CA1  00D0               	movwf	(_LED_configReg_top+2)^(0+256)
 15972  0CA2  0020               	movlb	0	; select bank0
 15973  0CA3  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15974  0CA4  0022               	movlb	2	; select bank2
 15975  0CA5  00CF               	movwf	(_LED_configReg_top+1)^(0+256)
 15976  0CA6  0020               	movlb	0	; select bank0
 15977  0CA7  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15978  0CA8  0022               	movlb	2	; select bank2
 15979  0CA9  00CE               	movwf	_LED_configReg_top^(0+256)
 15980  0CAA  0008               	return
 15981  0CAB                     l7561:	
 15982                           
 15983                           ;LEDcomm.c: 86: else
 15984                           ;LEDcomm.c: 87: LED_configReg_bot = LED_configReg;
 15985  0CAB  0020               	movlb	0	; select bank0
 15986  0CAC  084B               	movf	LED_setBrightnessRange@LED_configReg+3,w
 15987  0CAD  0022               	movlb	2	; select bank2
 15988  0CAE  00CD               	movwf	(_LED_configReg_bot+3)^(0+256)
 15989  0CAF  0020               	movlb	0	; select bank0
 15990  0CB0  084A               	movf	LED_setBrightnessRange@LED_configReg+2,w
 15991  0CB1  0022               	movlb	2	; select bank2
 15992  0CB2  00CC               	movwf	(_LED_configReg_bot+2)^(0+256)
 15993  0CB3  0020               	movlb	0	; select bank0
 15994  0CB4  0849               	movf	LED_setBrightnessRange@LED_configReg+1,w
 15995  0CB5  0022               	movlb	2	; select bank2
 15996  0CB6  00CB               	movwf	(_LED_configReg_bot+1)^(0+256)
 15997  0CB7  0020               	movlb	0	; select bank0
 15998  0CB8  0848               	movf	LED_setBrightnessRange@LED_configReg,w
 15999  0CB9  0022               	movlb	2	; select bank2
 16000  0CBA  00CA               	movwf	_LED_configReg_bot^(0+256)
 16001  0CBB  0008               	return
 16002  0CBC                     __end_of_LED_setBrightnessRange:	
 16003                           
 16004                           	psect	text50
 16005  26F3                     __ptext50:	
 16006 ;; *************** function _LED_readConfig *****************
 16007 ;; Defined at:
 16008 ;;		line 120 in file "LEDcomm.c"
 16009 ;; Parameters:    Size  Location     Type
 16010 ;;  topOrBottom     2   38[BANK1 ] int 
 16011 ;; Auto vars:     Size  Location     Type
 16012 ;;		None
 16013 ;; Return value:  Size  Location     Type
 16014 ;;                  4   38[BANK1 ] long 
 16015 ;; Registers used:
 16016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16017 ;; Tracked objects:
 16018 ;;		On entry : 0/0
 16019 ;;		On exit  : 0/0
 16020 ;;		Unchanged: 0/0
 16021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16022 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16024 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16025 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16026 ;;Total ram usage:        5 bytes
 16027 ;; Hardware stack levels used:    1
 16028 ;; Hardware stack levels required when called:   10
 16029 ;; This function calls:
 16030 ;;		_LED_getData
 16031 ;;		_send_2length_2bytes_IK
 16032 ;; This function is called by:
 16033 ;;		_LED_testComm
 16034 ;; This function uses a non-reentrant model
 16035 ;;
 16036                           
 16037                           
 16038                           ;psect for function _LED_readConfig
 16039  26F3                     _LED_readConfig:	
 16040                           
 16041                           ;incstack = 0
 16042                           ; Regs used in _LED_readConfig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16043                           ;LEDcomm.c: 121: do { LATCbits.LATC1 = 1; } while(0);
 16044  26F3  0022               	movlb	2	; select bank2
 16045  26F4  148E               	bsf	14,1	;volatile
 16046                           
 16047                           ;LEDcomm.c: 122: send_2length_2bytes_IK(0,0,5,topOrBottom);
 16048  26F5  3000               	movlw	0
 16049  26F6  0020               	movlb	0	; select bank0
 16050  26F7  00BC               	movwf	send_2length_2bytes_IK@data1
 16051  26F8  00BD               	movwf	send_2length_2bytes_IK@data1+1
 16052  26F9  3000               	movlw	0
 16053  26FA  00BE               	movwf	send_2length_2bytes_IK@data2
 16054  26FB  00BF               	movwf	send_2length_2bytes_IK@data2+1
 16055  26FC  3005               	movlw	5
 16056  26FD  00C9               	movwf	??_LED_readConfig
 16057  26FE  0849               	movf	??_LED_readConfig,w
 16058  26FF  00C0               	movwf	send_2length_2bytes_IK@latch_start
 16059  2700  0021               	movlb	1	; select bank1
 16060  2701  0847               	movf	(LED_readConfig@topOrBottom+1)^(0+128),w
 16061  2702  0020               	movlb	0	; select bank0
 16062  2703  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 16063  2704  0021               	movlb	1	; select bank1
 16064  2705  0846               	movf	LED_readConfig@topOrBottom^(0+128),w
 16065  2706  0020               	movlb	0	; select bank0
 16066  2707  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 16067  2708  31A4  2416  31A6   	fcall	_send_2length_2bytes_IK
 16068                           
 16069                           ;LEDcomm.c: 123: return LED_getData(topOrBottom);
 16070  270B  0021               	movlb	1	; select bank1
 16071  270C  0847               	movf	(LED_readConfig@topOrBottom+1)^(0+128),w
 16072  270D  00B6               	movwf	(LED_getData@topOrBottom+1)^(0+128)
 16073  270E  0846               	movf	LED_readConfig@topOrBottom^(0+128),w
 16074  270F  00B5               	movwf	LED_getData@topOrBottom^(0+128)
 16075  2710  3188  200B         	fcall	_LED_getData
 16076  2712  0021               	movlb	1	; select bank1
 16077  2713  0838               	movf	(?_LED_getData+3)^(0+128),w
 16078  2714  00C9               	movwf	(?_LED_readConfig+3)^(0+128)
 16079  2715  0837               	movf	(?_LED_getData+2)^(0+128),w
 16080  2716  00C8               	movwf	(?_LED_readConfig+2)^(0+128)
 16081  2717  0836               	movf	(?_LED_getData+1)^(0+128),w
 16082  2718  00C7               	movwf	(?_LED_readConfig+1)^(0+128)
 16083  2719  0835               	movf	?_LED_getData^(0+128),w
 16084  271A  00C6               	movwf	?_LED_readConfig^(0+128)
 16085  271B  0008               	return
 16086  271C                     __end_of_LED_readConfig:	
 16087                           
 16088                           	psect	text51
 16089  080B                     __ptext51:	
 16090 ;; *************** function _LED_getData *****************
 16091 ;; Defined at:
 16092 ;;		line 126 in file "LEDcomm.c"
 16093 ;; Parameters:    Size  Location     Type
 16094 ;;  topOrBottom     2   21[BANK1 ] int 
 16095 ;; Auto vars:     Size  Location     Type
 16096 ;;  j               2   36[BANK1 ] int 
 16097 ;;  readData        4   32[BANK1 ] long 
 16098 ;; Return value:  Size  Location     Type
 16099 ;;                  4   21[BANK1 ] long 
 16100 ;; Registers used:
 16101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16102 ;; Tracked objects:
 16103 ;;		On entry : 0/0
 16104 ;;		On exit  : 0/0
 16105 ;;		Unchanged: 0/0
 16106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16107 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16108 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16109 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16110 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16111 ;;Total ram usage:       17 bytes
 16112 ;; Hardware stack levels used:    1
 16113 ;; Hardware stack levels required when called:    9
 16114 ;; This function calls:
 16115 ;;		_printf
 16116 ;; This function is called by:
 16117 ;;		_LED_readConfig
 16118 ;; This function uses a non-reentrant model
 16119 ;;
 16120                           
 16121                           
 16122                           ;psect for function _LED_getData
 16123  080B                     _LED_getData:	
 16124                           
 16125                           ;LEDcomm.c: 128: long readData = 0;
 16126                           
 16127                           ;incstack = 0
 16128                           ; Regs used in _LED_getData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16129  080B  3000               	movlw	0
 16130  080C  0021               	movlb	1	; select bank1
 16131  080D  00C3               	movwf	(LED_getData@readData+3)^(0+128)
 16132  080E  3000               	movlw	0
 16133  080F  00C2               	movwf	(LED_getData@readData+2)^(0+128)
 16134  0810  3000               	movlw	0
 16135  0811  00C1               	movwf	(LED_getData@readData+1)^(0+128)
 16136  0812  3000               	movlw	0
 16137  0813  00C0               	movwf	LED_getData@readData^(0+128)
 16138                           
 16139                           ;LEDcomm.c: 130: if (topOrBottom == 1) do { LATBbits.LATB4 = 0; } while(0);
 16140  0814  0335               	decf	LED_getData@topOrBottom^(0+128),w
 16141  0815  0436               	iorwf	(LED_getData@topOrBottom+1)^(0+128),w
 16142  0816  1D03               	btfss	3,2
 16143  0817  281B               	goto	l302
 16144  0818  0022               	movlb	2	; select bank2
 16145  0819  120D               	bcf	13,4	;volatile
 16146  081A  281D               	goto	l7499
 16147  081B                     l302:	
 16148                           ;LEDcomm.c: 131: else do { LATCbits.LATC0 = 0; } while(0);
 16149                           
 16150  081B  0022               	movlb	2	; select bank2
 16151  081C  100E               	bcf	14,0	;volatile
 16152  081D                     l7499:	
 16153                           
 16154                           ;LEDcomm.c: 133: for(int j = 23; j>=0; j--){
 16155  081D  3017               	movlw	23
 16156  081E  0021               	movlb	1	; select bank1
 16157  081F  00C4               	movwf	LED_getData@j^(0+128)
 16158  0820  3000               	movlw	0
 16159  0821  00C5               	movwf	(LED_getData@j^(0+128)+1)
 16160  0822  1BC5               	btfsc	(LED_getData@j+1)^(0+128),7
 16161  0823  2877               	goto	l312
 16162  0824                     l306:	
 16163                           ;LEDcomm.c: 134: do { LATAbits.LATA2 = 1; } while(0);
 16164                           
 16165  0824  0022               	movlb	2	; select bank2
 16166  0825  150C               	bsf	12,2	;volatile
 16167                           
 16168                           ;LEDcomm.c: 136: if (topOrBottom == 1)
 16169  0826  0021               	movlb	1	; select bank1
 16170  0827  0335               	decf	LED_getData@topOrBottom^(0+128),w
 16171  0828  0436               	iorwf	(LED_getData@topOrBottom+1)^(0+128),w
 16172  0829  1D03               	btfss	3,2
 16173  082A  284A               	goto	l7509
 16174                           
 16175                           ;LEDcomm.c: 137: {readData |= (PORTCbits.RC6 << j);}
 16176  082B  0020               	movlb	0	; select bank0
 16177  082C  0E0E               	swapf	14,w	;volatile
 16178  082D  0C89               	rrf	9,f
 16179  082E  0C89               	rrf	9,f
 16180  082F  3901               	andlw	1
 16181  0830  0021               	movlb	1	; select bank1
 16182  0831  00B9               	movwf	??_LED_getData^(0+128)
 16183  0832  01BA               	clrf	(??_LED_getData^(0+128)+1)
 16184  0833  0A44               	incf	LED_getData@j^(0+128),w
 16185  0834  2837               	goto	u7234
 16186  0835                     u7235:	
 16187  0835  35B9               	lslf	??_LED_getData^(0+128),f
 16188  0836  0DBA               	rlf	(??_LED_getData^(0+128)+1),f
 16189  0837                     u7234:	
 16190  0837  0B89               	decfsz	9,f
 16191  0838  2835               	goto	u7235
 16192  0839  0839               	movf	??_LED_getData^(0+128),w
 16193  083A  00BB               	movwf	(??_LED_getData+2)^(0+128)
 16194  083B  083A               	movf	(??_LED_getData+1)^(0+128),w
 16195  083C  00BC               	movwf	((??_LED_getData+2)^(0+128)+1)
 16196  083D  3000               	movlw	0
 16197  083E  1BBC               	btfsc	((??_LED_getData+2)^(0+128)+1),7
 16198  083F  30FF               	movlw	255
 16199  0840  00BD               	movwf	((??_LED_getData+2)^(0+128)+2)
 16200  0841  00BE               	movwf	((??_LED_getData+2)^(0+128)+3)
 16201  0842  083B               	movf	(??_LED_getData+2)^(0+128),w
 16202  0843  04C0               	iorwf	LED_getData@readData^(0+128),f
 16203  0844  083C               	movf	(??_LED_getData+3)^(0+128),w
 16204  0845  04C1               	iorwf	(LED_getData@readData+1)^(0+128),f
 16205  0846  083D               	movf	(??_LED_getData+4)^(0+128),w
 16206  0847  04C2               	iorwf	(LED_getData@readData+2)^(0+128),f
 16207  0848  083E               	movf	(??_LED_getData+5)^(0+128),w
 16208  0849  2869               	goto	L31
 16209  084A                     l7509:	
 16210                           
 16211                           ;LEDcomm.c: 138: else
 16212                           ;LEDcomm.c: 139: {readData |= (PORTCbits.RC3 << j);}
 16213  084A  0020               	movlb	0	; select bank0
 16214  084B  0C0E               	rrf	14,w	;volatile
 16215  084C  0021               	movlb	1	; select bank1
 16216  084D  00B9               	movwf	??_LED_getData^(0+128)
 16217  084E  0CB9               	rrf	??_LED_getData^(0+128),f
 16218  084F  0C39               	rrf	??_LED_getData^(0+128),w
 16219  0850  3901               	andlw	1
 16220  0851  00BA               	movwf	(??_LED_getData+1)^(0+128)
 16221  0852  01BB               	clrf	((??_LED_getData+1)^(0+128)+1)
 16222  0853  0A44               	incf	LED_getData@j^(0+128),w
 16223  0854  2857               	goto	u7244
 16224  0855                     u7245:	
 16225  0855  35BA               	lslf	(??_LED_getData+1)^(0+128),f
 16226  0856  0DBB               	rlf	((??_LED_getData+1)^(0+128)+1),f
 16227  0857                     u7244:	
 16228  0857  0B89               	decfsz	9,f
 16229  0858  2855               	goto	u7245
 16230  0859  083A               	movf	(??_LED_getData+1)^(0+128),w
 16231  085A  00BC               	movwf	(??_LED_getData+3)^(0+128)
 16232  085B  083B               	movf	(??_LED_getData+2)^(0+128),w
 16233  085C  00BD               	movwf	((??_LED_getData+3)^(0+128)+1)
 16234  085D  3000               	movlw	0
 16235  085E  1BBD               	btfsc	((??_LED_getData+3)^(0+128)+1),7
 16236  085F  30FF               	movlw	255
 16237  0860  00BE               	movwf	((??_LED_getData+3)^(0+128)+2)
 16238  0861  00BF               	movwf	((??_LED_getData+3)^(0+128)+3)
 16239  0862  083C               	movf	(??_LED_getData+3)^(0+128),w
 16240  0863  04C0               	iorwf	LED_getData@readData^(0+128),f
 16241  0864  083D               	movf	(??_LED_getData+4)^(0+128),w
 16242  0865  04C1               	iorwf	(LED_getData@readData+1)^(0+128),f
 16243  0866  083E               	movf	(??_LED_getData+5)^(0+128),w
 16244  0867  04C2               	iorwf	(LED_getData@readData+2)^(0+128),f
 16245  0868  083F               	movf	(??_LED_getData+6)^(0+128),w
 16246  0869                     L31:	
 16247  0869  04C3               	iorwf	(LED_getData@readData+3)^(0+128),f
 16248                           
 16249                           ;LEDcomm.c: 141: do { LATAbits.LATA2 = 0; } while(0);
 16250  086A  0022               	movlb	2	; select bank2
 16251  086B  110C               	bcf	12,2	;volatile
 16252                           
 16253                           ;LEDcomm.c: 142: _delay((unsigned long)((100)*(1000000/4000000.0)));
 16254  086C  3008               	movlw	8
 16255  086D                     u9127:	
 16256  086D  0B89               	decfsz	9,f
 16257  086E  286D               	goto	u9127
 16258  086F  0000               	nop
 16259  0870  30FF               	movlw	255
 16260  0871  0021               	movlb	1	; select bank1
 16261  0872  07C4               	addwf	LED_getData@j^(0+128),f
 16262  0873  30FF               	movlw	255
 16263  0874  3DC5               	addwfc	(LED_getData@j+1)^(0+128),f
 16264  0875  1FC5               	btfss	(LED_getData@j+1)^(0+128),7
 16265  0876  2824               	goto	l306
 16266  0877                     l312:	
 16267                           ;LEDcomm.c: 144: }
 16268                           ;LEDcomm.c: 146: do { LATAbits.LATA2 = 0; } while(0);
 16269                           
 16270  0877  0022               	movlb	2	; select bank2
 16271  0878  110C               	bcf	12,2	;volatile
 16272                           
 16273                           ;LEDcomm.c: 147: printf("read data: %lu\n", readData);
 16274  0879  3030               	movlw	low (STR_4| (0+32768))
 16275  087A  0021               	movlb	1	; select bank1
 16276  087B  00A0               	movwf	printf@f^(0+128)
 16277  087C  30A9               	movlw	high (STR_4| (0+32768))
 16278  087D  00A1               	movwf	(printf@f^(0+128)+1)
 16279  087E  0843               	movf	(LED_getData@readData+3)^(0+128),w
 16280  087F  00A5               	movwf	((?_printf+3)^(0+128)+2)
 16281  0880  0842               	movf	(LED_getData@readData+2)^(0+128),w
 16282  0881  00A4               	movwf	((?_printf+2)^(0+128)+2)
 16283  0882  0841               	movf	(LED_getData@readData+1)^(0+128),w
 16284  0883  00A3               	movwf	((?_printf+1)^(0+128)+2)
 16285  0884  0840               	movf	LED_getData@readData^(0+128),w
 16286  0885  00A2               	movwf	(?_printf^(0+128)+2)
 16287  0886  318E  26CE         	fcall	_printf
 16288                           
 16289                           ;LEDcomm.c: 148: return readData;
 16290  0888  0021               	movlb	1	; select bank1
 16291  0889  0843               	movf	(LED_getData@readData+3)^(0+128),w
 16292  088A  00B8               	movwf	(?_LED_getData+3)^(0+128)
 16293  088B  0842               	movf	(LED_getData@readData+2)^(0+128),w
 16294  088C  00B7               	movwf	(?_LED_getData+2)^(0+128)
 16295  088D  0841               	movf	(LED_getData@readData+1)^(0+128),w
 16296  088E  00B6               	movwf	(?_LED_getData+1)^(0+128)
 16297  088F  0840               	movf	LED_getData@readData^(0+128),w
 16298  0890  00B5               	movwf	?_LED_getData^(0+128)
 16299  0891  0008               	return
 16300  0892                     __end_of_LED_getData:	
 16301                           
 16302                           	psect	text52
 16303  0D9D                     __ptext52:	
 16304 ;; *************** function _doRelMove *****************
 16305 ;; Defined at:
 16306 ;;		line 336 in file "main.c"
 16307 ;; Parameters:    Size  Location     Type
 16308 ;;		None
 16309 ;; Auto vars:     Size  Location     Type
 16310 ;;  j               2   54[BANK1 ] int 
 16311 ;; Return value:  Size  Location     Type
 16312 ;;                  1    wreg      void 
 16313 ;; Registers used:
 16314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16315 ;; Tracked objects:
 16316 ;;		On entry : 0/0
 16317 ;;		On exit  : 0/0
 16318 ;;		Unchanged: 0/0
 16319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16321 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16322 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16323 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16324 ;;Total ram usage:       18 bytes
 16325 ;; Hardware stack levels used:    1
 16326 ;; Hardware stack levels required when called:   16
 16327 ;; This function calls:
 16328 ;;		_doMove
 16329 ;;		_printf
 16330 ;; This function is called by:
 16331 ;;		_main
 16332 ;; This function uses a non-reentrant model
 16333 ;;
 16334                           
 16335                           
 16336                           ;psect for function _doRelMove
 16337  0D9D                     _doRelMove:	
 16338                           
 16339                           ;main.c: 337: printf("doRelMove\n");
 16340                           
 16341                           ;incstack = 0
 16342 ;; hardware stack exceeded
 16343                           ; Regs used in _doRelMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16344  0D9D  30AB               	movlw	low (STR_12| (0+32768))
 16345  0D9E  0021               	movlb	1	; select bank1
 16346  0D9F  00A0               	movwf	printf@f^(0+128)
 16347  0DA0  30A9               	movlw	high (STR_12| (0+32768))
 16348  0DA1  00A1               	movwf	(printf@f^(0+128)+1)
 16349  0DA2  318E  26CE  318D   	fcall	_printf
 16350                           
 16351                           ;main.c: 338: if(remainingSteps == 0){
 16352  0DA5  0022               	movlb	2	; select bank2
 16353  0DA6  0841               	movf	(_remainingSteps+3)^(0+256),w
 16354  0DA7  0440               	iorwf	(_remainingSteps+2)^(0+256),w
 16355  0DA8  043F               	iorwf	(_remainingSteps+1)^(0+256),w
 16356  0DA9  043E               	iorwf	_remainingSteps^(0+256),w
 16357  0DAA  1D03               	skipz
 16358  0DAB  2DC7               	goto	l8443
 16359                           
 16360                           ;main.c: 339: printf("rel: all there\n");
 16361  0DAC  3010               	movlw	low (STR_13| (0+32768))
 16362  0DAD  0021               	movlb	1	; select bank1
 16363  0DAE  00A0               	movwf	printf@f^(0+128)
 16364  0DAF  30A9               	movlw	high (STR_13| (0+32768))
 16365  0DB0  00A1               	movwf	(printf@f^(0+128)+1)
 16366  0DB1  318E  26CE         	fcall	_printf
 16367                           
 16368                           ;main.c: 340: motionType = NONE;
 16369  0DB3  0020               	movlb	0	; select bank0
 16370  0DB4  01D5               	clrf	_motionType
 16371                           
 16372                           ;main.c: 341: moveVector_ups = 0;
 16373  0DB5  3000               	movlw	0
 16374  0DB6  0021               	movlb	1	; select bank1
 16375  0DB7  00E8               	movwf	(_moveVector_ups+3)^(0+128)
 16376  0DB8  3000               	movlw	0
 16377  0DB9  00E7               	movwf	(_moveVector_ups+2)^(0+128)
 16378  0DBA  3000               	movlw	0
 16379  0DBB  00E6               	movwf	(_moveVector_ups+1)^(0+128)
 16380  0DBC  3000               	movlw	0
 16381  0DBD  00E5               	movwf	_moveVector_ups^(0+128)
 16382                           
 16383                           ;main.c: 342: moveVector_downs = 0;
 16384  0DBE  3000               	movlw	0
 16385  0DBF  00E4               	movwf	(_moveVector_downs+3)^(0+128)
 16386  0DC0  3000               	movlw	0
 16387  0DC1  00E3               	movwf	(_moveVector_downs+2)^(0+128)
 16388  0DC2  3000               	movlw	0
 16389  0DC3  00E2               	movwf	(_moveVector_downs+1)^(0+128)
 16390  0DC4  3000               	movlw	0
 16391  0DC5  00E1               	movwf	_moveVector_downs^(0+128)
 16392                           
 16393                           ;main.c: 344: }
 16394                           
 16395                           ;main.c: 343: return;
 16396  0DC6  0008               	return
 16397  0DC7                     l8443:	
 16398                           
 16399                           ;main.c: 345: else{
 16400                           ;main.c: 346: int j;
 16401                           ;main.c: 347: if (remainingSteps > 0){
 16402  0DC7  0022               	movlb	2	; select bank2
 16403  0DC8  1BC1               	btfsc	(_remainingSteps+3)^(0+256),7
 16404  0DC9  2E52               	goto	l8463
 16405  0DCA  0841               	movf	(_remainingSteps+3)^(0+256),w
 16406  0DCB  1D03               	btfss	3,2
 16407  0DCC  2DD7               	goto	l8445
 16408  0DCD  0840               	movf	(_remainingSteps+2)^(0+256),w
 16409  0DCE  1D03               	btfss	3,2
 16410  0DCF  2DD7               	goto	l8445
 16411  0DD0  083F               	movf	(_remainingSteps+1)^(0+256),w
 16412  0DD1  1D03               	btfss	3,2
 16413  0DD2  2DD7               	goto	l8445
 16414  0DD3  3001               	movlw	1
 16415  0DD4  023E               	subwf	_remainingSteps^(0+256),w
 16416  0DD5  1C03               	btfss	3,0
 16417  0DD6  2E52               	goto	l8463
 16418  0DD7                     l8445:	
 16419                           
 16420                           ;main.c: 348: moveVector_ups = 0;
 16421  0DD7  3000               	movlw	0
 16422  0DD8  0021               	movlb	1	; select bank1
 16423  0DD9  00E8               	movwf	(_moveVector_ups+3)^(0+128)
 16424  0DDA  3000               	movlw	0
 16425  0DDB  00E7               	movwf	(_moveVector_ups+2)^(0+128)
 16426  0DDC  3000               	movlw	0
 16427  0DDD  00E6               	movwf	(_moveVector_ups+1)^(0+128)
 16428  0DDE  3000               	movlw	0
 16429  0DDF  00E5               	movwf	_moveVector_ups^(0+128)
 16430                           
 16431                           ;main.c: 349: moveVector_downs = activeMask;
 16432  0DE0  0860               	movf	(_activeMask+3)^(0+128),w
 16433  0DE1  00E4               	movwf	(_moveVector_downs+3)^(0+128)
 16434  0DE2  085F               	movf	(_activeMask+2)^(0+128),w
 16435  0DE3  00E3               	movwf	(_moveVector_downs+2)^(0+128)
 16436  0DE4  085E               	movf	(_activeMask+1)^(0+128),w
 16437  0DE5  00E2               	movwf	(_moveVector_downs+1)^(0+128)
 16438  0DE6  085D               	movf	_activeMask^(0+128),w
 16439  0DE7  00E1               	movwf	_moveVector_downs^(0+128)
 16440                           
 16441                           ;main.c: 351: doMove();
 16442  0DE8  3189  2119  318D   	fcall	_doMove
 16443                           
 16444                           ;main.c: 352: remainingSteps--;
 16445  0DEB  30FF               	movlw	255
 16446  0DEC  0022               	movlb	2	; select bank2
 16447  0DED  07BE               	addwf	_remainingSteps^(0+256),f
 16448  0DEE  30FF               	movlw	255
 16449  0DEF  3DBF               	addwfc	(_remainingSteps+1)^(0+256),f
 16450  0DF0  30FF               	movlw	255
 16451  0DF1  3DC0               	addwfc	(_remainingSteps+2)^(0+256),f
 16452  0DF2  30FF               	movlw	255
 16453  0DF3  3DC1               	addwfc	(_remainingSteps+3)^(0+256),f
 16454                           
 16455                           ;main.c: 355: for(j = 0; j<24; j++)
 16456  0DF4  0021               	movlb	1	; select bank1
 16457  0DF5  01D6               	clrf	doRelMove@j^(0+128)
 16458  0DF6  01D7               	clrf	(doRelMove@j+1)^(0+128)
 16459  0DF7                     L32:	
 16460  0DF7  0857               	movf	(doRelMove@j+1)^(0+128),w
 16461  0DF8  3A80               	xorlw	128
 16462  0DF9  00C6               	movwf	??_doRelMove^(0+128)
 16463  0DFA  3080               	movlw	128
 16464  0DFB  0246               	subwf	??_doRelMove^(0+128),w
 16465  0DFC  1D03               	skipz
 16466  0DFD  2E00               	goto	u8435
 16467  0DFE  3018               	movlw	24
 16468  0DFF  0256               	subwf	doRelMove@j^(0+128),w
 16469  0E00                     u8435:	
 16470  0E00  1803               	btfsc	3,0
 16471  0E01  0008               	return
 16472                           
 16473                           ;main.c: 356: currentPositions_steps[j] += (activeMask & (1UL<<j) > 0);
 16474  0E02  0021               	movlb	1	; select bank1
 16475  0E03  085D               	movf	_activeMask^(0+128),w
 16476  0E04  00C6               	movwf	??_doRelMove^(0+128)
 16477  0E05  085E               	movf	(_activeMask+1)^(0+128),w
 16478  0E06  00C7               	movwf	(??_doRelMove^(0+128)+1)
 16479  0E07  085F               	movf	(_activeMask+2)^(0+128),w
 16480  0E08  00C8               	movwf	(??_doRelMove^(0+128)+2)
 16481  0E09  0860               	movf	(_activeMask+3)^(0+128),w
 16482  0E0A  00C9               	movwf	(??_doRelMove^(0+128)+3)
 16483  0E0B  3001               	movlw	1
 16484  0E0C  00CA               	movwf	(??_doRelMove+4)^(0+128)
 16485  0E0D  3000               	movlw	0
 16486  0E0E  00CB               	movwf	((??_doRelMove+4)^(0+128)+1)
 16487  0E0F  3000               	movlw	0
 16488  0E10  00CC               	movwf	((??_doRelMove+4)^(0+128)+2)
 16489  0E11  3000               	movlw	0
 16490  0E12  00CD               	movwf	((??_doRelMove+4)^(0+128)+3)
 16491  0E13  0A56               	incf	doRelMove@j^(0+128),w
 16492  0E14  2E19               	goto	u8440
 16493  0E15                     u8445:	
 16494  0E15  35CA               	lslf	(??_doRelMove+4)^(0+128),f
 16495  0E16  0DCB               	rlf	((??_doRelMove+4)^(0+128)+1),f
 16496  0E17  0DCC               	rlf	((??_doRelMove+4)^(0+128)+2),f
 16497  0E18  0DCD               	rlf	((??_doRelMove+4)^(0+128)+3),f
 16498  0E19                     u8440:	
 16499  0E19  0B89               	decfsz	9,f
 16500  0E1A  2E15               	goto	u8445
 16501  0E1B  084D               	movf	(??_doRelMove+7)^(0+128),w
 16502  0E1C  044C               	iorwf	(??_doRelMove+6)^(0+128),w
 16503  0E1D  044B               	iorwf	(??_doRelMove+5)^(0+128),w
 16504  0E1E  044A               	iorwf	(??_doRelMove+4)^(0+128),w
 16505  0E1F  1903               	btfsc	3,2
 16506  0E20  2E23               	goto	u8450
 16507  0E21  3001               	movlw	1
 16508  0E22  2E24               	goto	u8460
 16509  0E23                     u8450:	
 16510  0E23  3000               	movlw	0
 16511  0E24                     u8460:	
 16512  0E24  00CE               	movwf	(??_doRelMove+8)^(0+128)
 16513  0E25  01CF               	clrf	((??_doRelMove+8)^(0+128)+1)
 16514  0E26  01D0               	clrf	((??_doRelMove+8)^(0+128)+2)
 16515  0E27  01D1               	clrf	((??_doRelMove+8)^(0+128)+3)
 16516  0E28  084E               	movf	(??_doRelMove+8)^(0+128),w
 16517  0E29  05C6               	andwf	??_doRelMove^(0+128),f
 16518  0E2A  084F               	movf	(??_doRelMove+9)^(0+128),w
 16519  0E2B  05C7               	andwf	(??_doRelMove^(0+128)+1),f
 16520  0E2C  0850               	movf	(??_doRelMove+10)^(0+128),w
 16521  0E2D  05C8               	andwf	(??_doRelMove^(0+128)+2),f
 16522  0E2E  0851               	movf	(??_doRelMove+11)^(0+128),w
 16523  0E2F  05C9               	andwf	(??_doRelMove^(0+128)+3),f
 16524  0E30  0857               	movf	(doRelMove@j+1)^(0+128),w
 16525  0E31  00D3               	movwf	((??_doRelMove+12)^(0+128)+1)
 16526  0E32  0856               	movf	doRelMove@j^(0+128),w
 16527  0E33  00D2               	movwf	(??_doRelMove+12)^(0+128)
 16528  0E34  35D2               	lslf	(??_doRelMove+12)^(0+128),f
 16529  0E35  0DD3               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16530  0E36  35D2               	lslf	(??_doRelMove+12)^(0+128),f
 16531  0E37  0DD3               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16532  0E38  3090               	movlw	144
 16533  0E39  00D4               	movwf	(??_doRelMove+14)^(0+128)
 16534  0E3A  3027               	movlw	39
 16535  0E3B  00D5               	movwf	((??_doRelMove+14)^(0+128)+1)
 16536  0E3C  0852               	movf	(??_doRelMove+12)^(0+128),w
 16537  0E3D  0754               	addwf	(??_doRelMove+14)^(0+128),w
 16538  0E3E  0086               	movwf	6
 16539  0E3F  0853               	movf	(??_doRelMove+13)^(0+128),w
 16540  0E40  3D55               	addwfc	(??_doRelMove+15)^(0+128),w
 16541  0E41  0087               	movwf	7
 16542  0E42  0846               	movf	??_doRelMove^(0+128),w
 16543  0E43  0781               	addwf	1,f
 16544  0E44  3141               	addfsr 1,1
 16545  0E45  0847               	movf	(??_doRelMove+1)^(0+128),w
 16546  0E46  3D81               	addwfc	1,f
 16547  0E47  3141               	addfsr 1,1
 16548  0E48  0848               	movf	(??_doRelMove+2)^(0+128),w
 16549  0E49  3D81               	addwfc	1,f
 16550  0E4A  3141               	addfsr 1,1
 16551  0E4B  0849               	movf	(??_doRelMove+3)^(0+128),w
 16552  0E4C  3D81               	addwfc	1,f
 16553  0E4D  3001               	movlw	1
 16554  0E4E  07D6               	addwf	doRelMove@j^(0+128),f
 16555  0E4F  3000               	movlw	0
 16556  0E50  3DD7               	addwfc	(doRelMove@j+1)^(0+128),f
 16557  0E51  2DF7               	goto	L32
 16558  0E52                     l8463:	
 16559                           ;main.c: 358: }
 16560                           
 16561                           
 16562                           ;main.c: 359: else{
 16563                           ;main.c: 360: moveVector_ups = activeMask;
 16564  0E52  0021               	movlb	1	; select bank1
 16565  0E53  0860               	movf	(_activeMask+3)^(0+128),w
 16566  0E54  00E8               	movwf	(_moveVector_ups+3)^(0+128)
 16567  0E55  085F               	movf	(_activeMask+2)^(0+128),w
 16568  0E56  00E7               	movwf	(_moveVector_ups+2)^(0+128)
 16569  0E57  085E               	movf	(_activeMask+1)^(0+128),w
 16570  0E58  00E6               	movwf	(_moveVector_ups+1)^(0+128)
 16571  0E59  085D               	movf	_activeMask^(0+128),w
 16572  0E5A  00E5               	movwf	_moveVector_ups^(0+128)
 16573                           
 16574                           ;main.c: 361: moveVector_downs = 0;
 16575  0E5B  3000               	movlw	0
 16576  0E5C  00E4               	movwf	(_moveVector_downs+3)^(0+128)
 16577  0E5D  3000               	movlw	0
 16578  0E5E  00E3               	movwf	(_moveVector_downs+2)^(0+128)
 16579  0E5F  3000               	movlw	0
 16580  0E60  00E2               	movwf	(_moveVector_downs+1)^(0+128)
 16581  0E61  3000               	movlw	0
 16582  0E62  00E1               	movwf	_moveVector_downs^(0+128)
 16583                           
 16584                           ;main.c: 363: doMove();
 16585  0E63  3189  2119  318D   	fcall	_doMove
 16586                           
 16587                           ;main.c: 364: remainingSteps++;
 16588  0E66  3001               	movlw	1
 16589  0E67  0022               	movlb	2	; select bank2
 16590  0E68  07BE               	addwf	_remainingSteps^(0+256),f
 16591  0E69  3000               	movlw	0
 16592  0E6A  3DBF               	addwfc	(_remainingSteps+1)^(0+256),f
 16593  0E6B  3000               	movlw	0
 16594  0E6C  3DC0               	addwfc	(_remainingSteps+2)^(0+256),f
 16595  0E6D  3000               	movlw	0
 16596  0E6E  3DC1               	addwfc	(_remainingSteps+3)^(0+256),f
 16597                           
 16598                           ;main.c: 365: for(j = 0; j<24; j++)
 16599  0E6F  0021               	movlb	1	; select bank1
 16600  0E70  01D6               	clrf	doRelMove@j^(0+128)
 16601  0E71  01D7               	clrf	(doRelMove@j+1)^(0+128)
 16602  0E72                     L33:	
 16603  0E72  0857               	movf	(doRelMove@j+1)^(0+128),w
 16604  0E73  3A80               	xorlw	128
 16605  0E74  00C6               	movwf	??_doRelMove^(0+128)
 16606  0E75  3080               	movlw	128
 16607  0E76  0246               	subwf	??_doRelMove^(0+128),w
 16608  0E77  1D03               	skipz
 16609  0E78  2E7B               	goto	u8485
 16610  0E79  3018               	movlw	24
 16611  0E7A  0256               	subwf	doRelMove@j^(0+128),w
 16612  0E7B                     u8485:	
 16613  0E7B  1803               	btfsc	3,0
 16614  0E7C  0008               	return
 16615                           
 16616                           ;main.c: 366: currentPositions_steps[j] -= (activeMask & (1UL<<j) > 0);
 16617  0E7D  0021               	movlb	1	; select bank1
 16618  0E7E  085D               	movf	_activeMask^(0+128),w
 16619  0E7F  00C6               	movwf	??_doRelMove^(0+128)
 16620  0E80  085E               	movf	(_activeMask+1)^(0+128),w
 16621  0E81  00C7               	movwf	(??_doRelMove^(0+128)+1)
 16622  0E82  085F               	movf	(_activeMask+2)^(0+128),w
 16623  0E83  00C8               	movwf	(??_doRelMove^(0+128)+2)
 16624  0E84  0860               	movf	(_activeMask+3)^(0+128),w
 16625  0E85  00C9               	movwf	(??_doRelMove^(0+128)+3)
 16626  0E86  3001               	movlw	1
 16627  0E87  00CA               	movwf	(??_doRelMove+4)^(0+128)
 16628  0E88  3000               	movlw	0
 16629  0E89  00CB               	movwf	((??_doRelMove+4)^(0+128)+1)
 16630  0E8A  3000               	movlw	0
 16631  0E8B  00CC               	movwf	((??_doRelMove+4)^(0+128)+2)
 16632  0E8C  3000               	movlw	0
 16633  0E8D  00CD               	movwf	((??_doRelMove+4)^(0+128)+3)
 16634  0E8E  0A56               	incf	doRelMove@j^(0+128),w
 16635  0E8F  2E94               	goto	u8490
 16636  0E90                     u8495:	
 16637  0E90  35CA               	lslf	(??_doRelMove+4)^(0+128),f
 16638  0E91  0DCB               	rlf	((??_doRelMove+4)^(0+128)+1),f
 16639  0E92  0DCC               	rlf	((??_doRelMove+4)^(0+128)+2),f
 16640  0E93  0DCD               	rlf	((??_doRelMove+4)^(0+128)+3),f
 16641  0E94                     u8490:	
 16642  0E94  0B89               	decfsz	9,f
 16643  0E95  2E90               	goto	u8495
 16644  0E96  084D               	movf	(??_doRelMove+7)^(0+128),w
 16645  0E97  044C               	iorwf	(??_doRelMove+6)^(0+128),w
 16646  0E98  044B               	iorwf	(??_doRelMove+5)^(0+128),w
 16647  0E99  044A               	iorwf	(??_doRelMove+4)^(0+128),w
 16648  0E9A  1903               	btfsc	3,2
 16649  0E9B  2E9E               	goto	u8500
 16650  0E9C  3001               	movlw	1
 16651  0E9D  2E9F               	goto	u8510
 16652  0E9E                     u8500:	
 16653  0E9E  3000               	movlw	0
 16654  0E9F                     u8510:	
 16655  0E9F  00CE               	movwf	(??_doRelMove+8)^(0+128)
 16656  0EA0  01CF               	clrf	((??_doRelMove+8)^(0+128)+1)
 16657  0EA1  01D0               	clrf	((??_doRelMove+8)^(0+128)+2)
 16658  0EA2  01D1               	clrf	((??_doRelMove+8)^(0+128)+3)
 16659  0EA3  084E               	movf	(??_doRelMove+8)^(0+128),w
 16660  0EA4  05C6               	andwf	??_doRelMove^(0+128),f
 16661  0EA5  084F               	movf	(??_doRelMove+9)^(0+128),w
 16662  0EA6  05C7               	andwf	(??_doRelMove^(0+128)+1),f
 16663  0EA7  0850               	movf	(??_doRelMove+10)^(0+128),w
 16664  0EA8  05C8               	andwf	(??_doRelMove^(0+128)+2),f
 16665  0EA9  0851               	movf	(??_doRelMove+11)^(0+128),w
 16666  0EAA  05C9               	andwf	(??_doRelMove^(0+128)+3),f
 16667  0EAB  0857               	movf	(doRelMove@j+1)^(0+128),w
 16668  0EAC  00D3               	movwf	((??_doRelMove+12)^(0+128)+1)
 16669  0EAD  0856               	movf	doRelMove@j^(0+128),w
 16670  0EAE  00D2               	movwf	(??_doRelMove+12)^(0+128)
 16671  0EAF  35D2               	lslf	(??_doRelMove+12)^(0+128),f
 16672  0EB0  0DD3               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16673  0EB1  35D2               	lslf	(??_doRelMove+12)^(0+128),f
 16674  0EB2  0DD3               	rlf	((??_doRelMove+12)^(0+128)+1),f
 16675  0EB3  3090               	movlw	144
 16676  0EB4  00D4               	movwf	(??_doRelMove+14)^(0+128)
 16677  0EB5  3027               	movlw	39
 16678  0EB6  00D5               	movwf	((??_doRelMove+14)^(0+128)+1)
 16679  0EB7  0852               	movf	(??_doRelMove+12)^(0+128),w
 16680  0EB8  0754               	addwf	(??_doRelMove+14)^(0+128),w
 16681  0EB9  0086               	movwf	6
 16682  0EBA  0853               	movf	(??_doRelMove+13)^(0+128),w
 16683  0EBB  3D55               	addwfc	(??_doRelMove+15)^(0+128),w
 16684  0EBC  0087               	movwf	7
 16685  0EBD  0846               	movf	??_doRelMove^(0+128),w
 16686  0EBE  0281               	subwf	1,f
 16687  0EBF  3141               	addfsr 1,1
 16688  0EC0  0847               	movf	(??_doRelMove+1)^(0+128),w
 16689  0EC1  3B81               	subwfb	1,f
 16690  0EC2  3141               	addfsr 1,1
 16691  0EC3  0848               	movf	(??_doRelMove+2)^(0+128),w
 16692  0EC4  3B81               	subwfb	1,f
 16693  0EC5  3141               	addfsr 1,1
 16694  0EC6  0849               	movf	(??_doRelMove+3)^(0+128),w
 16695  0EC7  3B81               	subwfb	1,f
 16696  0EC8  317D               	addfsr 1,-3
 16697  0EC9  3001               	movlw	1
 16698  0ECA  07D6               	addwf	doRelMove@j^(0+128),f
 16699  0ECB  3000               	movlw	0
 16700  0ECC  3DD7               	addwfc	(doRelMove@j+1)^(0+128),f
 16701  0ECD  2E72               	goto	L33
 16702  0ECE                     __end_of_doRelMove:	
 16703                           
 16704                           	psect	text53
 16705  00C0                     __ptext53:	
 16706 ;; *************** function _doAbsMove *****************
 16707 ;; Defined at:
 16708 ;;		line 304 in file "main.c"
 16709 ;; Parameters:    Size  Location     Type
 16710 ;;		None
 16711 ;; Auto vars:     Size  Location     Type
 16712 ;;  i               2   42[BANK1 ] int 
 16713 ;;  i               2   44[BANK1 ] int 
 16714 ;;  i               2   40[BANK1 ] int 
 16715 ;;  allThere        2   38[BANK1 ] int 
 16716 ;; Return value:  Size  Location     Type
 16717 ;;                  1    wreg      void 
 16718 ;; Registers used:
 16719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16720 ;; Tracked objects:
 16721 ;;		On entry : 0/0
 16722 ;;		On exit  : 0/0
 16723 ;;		Unchanged: 0/0
 16724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16726 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16727 ;;      Temps:          0       0       0       0       0      28       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16728 ;;      Totals:         0       0       8       0       0      28       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16729 ;;Total ram usage:       36 bytes
 16730 ;; Hardware stack levels used:    1
 16731 ;; Hardware stack levels required when called:   16
 16732 ;; This function calls:
 16733 ;;		_doMove
 16734 ;;		_printf
 16735 ;; This function is called by:
 16736 ;;		_main
 16737 ;; This function uses a non-reentrant model
 16738 ;;
 16739                           
 16740                           
 16741                           ;psect for function _doAbsMove
 16742  00C0                     _doAbsMove:	
 16743                           
 16744                           ;main.c: 307: int allThere=1;
 16745                           
 16746                           ;incstack = 0
 16747 ;; hardware stack exceeded
 16748                           ; Regs used in _doAbsMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16749  00C0  3001               	movlw	1
 16750  00C1  0021               	movlb	1	; select bank1
 16751  00C2  00C6               	movwf	doAbsMove@allThere^(0+128)
 16752  00C3  3000               	movlw	0
 16753  00C4  00C7               	movwf	(doAbsMove@allThere^(0+128)+1)
 16754                           
 16755                           ;main.c: 308: for(int i=0;i<24;i++){
 16756  00C5  01C8               	clrf	doAbsMove@i^(0+128)
 16757  00C6  01C9               	clrf	(doAbsMove@i+1)^(0+128)
 16758  00C7  0849               	movf	(doAbsMove@i+1)^(0+128),w
 16759  00C8  3A80               	xorlw	128
 16760  00C9  0024               	movlb	4	; select bank4
 16761  00CA  00C0               	movwf	??_doAbsMove^(0+512)
 16762  00CB  3080               	movlw	128
 16763  00CC  0240               	subwf	??_doAbsMove^(0+512),w
 16764  00CD  1D03               	skipz
 16765  00CE  28D2               	goto	u8535
 16766  00CF  3018               	movlw	24
 16767  00D0  0021               	movlb	1	; select bank1
 16768  00D1  0248               	subwf	doAbsMove@i^(0+128),w
 16769  00D2                     u8535:	
 16770  00D2  1803               	btfsc	3,0
 16771  00D3  2958               	goto	l8497
 16772  00D4                     l8489:	
 16773                           
 16774                           ;main.c: 309: if((activeMask & (1UL << i)) > 0)
 16775  00D4  0021               	movlb	1	; select bank1
 16776  00D5  085D               	movf	_activeMask^(0+128),w
 16777  00D6  0024               	movlb	4	; select bank4
 16778  00D7  00C0               	movwf	??_doAbsMove^(0+512)
 16779  00D8  0021               	movlb	1	; select bank1
 16780  00D9  085E               	movf	(_activeMask+1)^(0+128),w
 16781  00DA  0024               	movlb	4	; select bank4
 16782  00DB  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 16783  00DC  0021               	movlb	1	; select bank1
 16784  00DD  085F               	movf	(_activeMask+2)^(0+128),w
 16785  00DE  0024               	movlb	4	; select bank4
 16786  00DF  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 16787  00E0  0021               	movlb	1	; select bank1
 16788  00E1  0860               	movf	(_activeMask+3)^(0+128),w
 16789  00E2  0024               	movlb	4	; select bank4
 16790  00E3  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 16791  00E4  3001               	movlw	1
 16792  00E5  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 16793  00E6  3000               	movlw	0
 16794  00E7  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 16795  00E8  3000               	movlw	0
 16796  00E9  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 16797  00EA  3000               	movlw	0
 16798  00EB  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 16799  00EC  0021               	movlb	1	; select bank1
 16800  00ED  0A48               	incf	doAbsMove@i^(0+128),w
 16801  00EE  0024               	movlb	4	; select bank4
 16802  00EF  28F4               	goto	u8540
 16803  00F0                     u8545:	
 16804  00F0  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 16805  00F1  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 16806  00F2  0DC6               	rlf	((??_doAbsMove+4)^(0+512)+2),f
 16807  00F3  0DC7               	rlf	((??_doAbsMove+4)^(0+512)+3),f
 16808  00F4                     u8540:	
 16809  00F4  0B89               	decfsz	9,f
 16810  00F5  28F0               	goto	u8545
 16811  00F6  0844               	movf	(??_doAbsMove+4)^(0+512),w
 16812  00F7  05C0               	andwf	??_doAbsMove^(0+512),f
 16813  00F8  0845               	movf	(??_doAbsMove+5)^(0+512),w
 16814  00F9  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 16815  00FA  0846               	movf	(??_doAbsMove+6)^(0+512),w
 16816  00FB  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 16817  00FC  0847               	movf	(??_doAbsMove+7)^(0+512),w
 16818  00FD  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 16819  00FE  0843               	movf	(??_doAbsMove+3)^(0+512),w
 16820  00FF  0442               	iorwf	(??_doAbsMove+2)^(0+512),w
 16821  0100  0441               	iorwf	(??_doAbsMove+1)^(0+512),w
 16822  0101  0440               	iorwf	??_doAbsMove^(0+512),w
 16823  0102  1903               	skipnz
 16824  0103  2946               	goto	l8493
 16825                           
 16826                           ;main.c: 310: allThere &= (currentPositions_steps[i] == absCommand);
 16827  0104  0021               	movlb	1	; select bank1
 16828  0105  0849               	movf	(doAbsMove@i+1)^(0+128),w
 16829  0106  0024               	movlb	4	; select bank4
 16830  0107  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 16831  0108  0021               	movlb	1	; select bank1
 16832  0109  0848               	movf	doAbsMove@i^(0+128),w
 16833  010A  0024               	movlb	4	; select bank4
 16834  010B  00C0               	movwf	??_doAbsMove^(0+512)
 16835  010C  35C0               	lslf	??_doAbsMove^(0+512),f
 16836  010D  0DC1               	rlf	(??_doAbsMove^(0+512)+1),f
 16837  010E  35C0               	lslf	??_doAbsMove^(0+512),f
 16838  010F  0DC1               	rlf	(??_doAbsMove^(0+512)+1),f
 16839  0110  3090               	movlw	144
 16840  0111  00C2               	movwf	(??_doAbsMove+2)^(0+512)
 16841  0112  3027               	movlw	39
 16842  0113  00C3               	movwf	((??_doAbsMove+2)^(0+512)+1)
 16843  0114  0840               	movf	??_doAbsMove^(0+512),w
 16844  0115  0742               	addwf	(??_doAbsMove+2)^(0+512),w
 16845  0116  0086               	movwf	6
 16846  0117  0841               	movf	(??_doAbsMove+1)^(0+512),w
 16847  0118  3D43               	addwfc	(??_doAbsMove+3)^(0+512),w
 16848  0119  0087               	movwf	7
 16849  011A  3F40               	moviw [0]fsr1
 16850  011B  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 16851  011C  3F41               	moviw [1]fsr1
 16852  011D  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 16853  011E  3F42               	moviw [2]fsr1
 16854  011F  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 16855  0120  3F43               	moviw [3]fsr1
 16856  0121  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 16857  0122  0020               	movlb	0	; select bank0
 16858  0123  0851               	movf	_absCommand+3,w
 16859  0124  0024               	movlb	4	; select bank4
 16860  0125  0647               	xorwf	(??_doAbsMove+7)^(0+512),w
 16861  0126  1D03               	skipz
 16862  0127  2938               	goto	u8565
 16863  0128  0020               	movlb	0	; select bank0
 16864  0129  0850               	movf	_absCommand+2,w
 16865  012A  0024               	movlb	4	; select bank4
 16866  012B  0646               	xorwf	(??_doAbsMove+6)^(0+512),w
 16867  012C  1D03               	skipz
 16868  012D  2938               	goto	u8565
 16869  012E  0020               	movlb	0	; select bank0
 16870  012F  084F               	movf	_absCommand+1,w
 16871  0130  0024               	movlb	4	; select bank4
 16872  0131  0645               	xorwf	(??_doAbsMove+5)^(0+512),w
 16873  0132  1D03               	skipz
 16874  0133  2938               	goto	u8565
 16875  0134  0020               	movlb	0	; select bank0
 16876  0135  084E               	movf	_absCommand,w
 16877  0136  0024               	movlb	4	; select bank4
 16878  0137  0644               	xorwf	(??_doAbsMove+4)^(0+512),w
 16879  0138                     u8565:	
 16880  0138  1D03               	btfss	3,2
 16881  0139  293C               	goto	u8560
 16882  013A  3001               	movlw	1
 16883  013B  293D               	goto	u8570
 16884  013C                     u8560:	
 16885  013C  3000               	movlw	0
 16886  013D                     u8570:	
 16887  013D  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 16888  013E  01C9               	clrf	((??_doAbsMove+8)^(0+512)+1)
 16889  013F  0848               	movf	(??_doAbsMove+8)^(0+512),w
 16890  0140  0021               	movlb	1	; select bank1
 16891  0141  05C6               	andwf	doAbsMove@allThere^(0+128),f
 16892  0142  0024               	movlb	4	; select bank4
 16893  0143  0849               	movf	(??_doAbsMove+9)^(0+512),w
 16894  0144  0021               	movlb	1	; select bank1
 16895  0145  05C7               	andwf	(doAbsMove@allThere+1)^(0+128),f
 16896  0146                     l8493:	
 16897  0146  3001               	movlw	1
 16898  0147  0021               	movlb	1	; select bank1
 16899  0148  07C8               	addwf	doAbsMove@i^(0+128),f
 16900  0149  3000               	movlw	0
 16901  014A  3DC9               	addwfc	(doAbsMove@i+1)^(0+128),f
 16902  014B  0849               	movf	(doAbsMove@i+1)^(0+128),w
 16903  014C  3A80               	xorlw	128
 16904  014D  0024               	movlb	4	; select bank4
 16905  014E  00C0               	movwf	??_doAbsMove^(0+512)
 16906  014F  3080               	movlw	128
 16907  0150  0240               	subwf	??_doAbsMove^(0+512),w
 16908  0151  1D03               	skipz
 16909  0152  2956               	goto	u8585
 16910  0153  3018               	movlw	24
 16911  0154  0021               	movlb	1	; select bank1
 16912  0155  0248               	subwf	doAbsMove@i^(0+128),w
 16913  0156                     u8585:	
 16914  0156  1C03               	skipc
 16915  0157  28D4               	goto	l8489
 16916  0158                     l8497:	
 16917                           
 16918                           ;main.c: 311: }
 16919                           ;main.c: 313: if(allThere){
 16920  0158  0021               	movlb	1	; select bank1
 16921  0159  0846               	movf	doAbsMove@allThere^(0+128),w
 16922  015A  0447               	iorwf	(doAbsMove@allThere+1)^(0+128),w
 16923  015B  1903               	btfsc	3,2
 16924  015C  2977               	goto	l8511
 16925                           
 16926                           ;main.c: 314: printf("abs: all there\n");
 16927  015D  3020               	movlw	low (STR_11| (0+32768))
 16928  015E  00A0               	movwf	printf@f^(0+128)
 16929  015F  30A9               	movlw	high (STR_11| (0+32768))
 16930  0160  00A1               	movwf	(printf@f^(0+128)+1)
 16931  0161  318E  26CE         	fcall	_printf
 16932                           
 16933                           ;main.c: 315: motionType = NONE;
 16934  0163  0020               	movlb	0	; select bank0
 16935  0164  01D5               	clrf	_motionType
 16936                           
 16937                           ;main.c: 316: moveVector_ups = 0;
 16938  0165  3000               	movlw	0
 16939  0166  0021               	movlb	1	; select bank1
 16940  0167  00E8               	movwf	(_moveVector_ups+3)^(0+128)
 16941  0168  3000               	movlw	0
 16942  0169  00E7               	movwf	(_moveVector_ups+2)^(0+128)
 16943  016A  3000               	movlw	0
 16944  016B  00E6               	movwf	(_moveVector_ups+1)^(0+128)
 16945  016C  3000               	movlw	0
 16946  016D  00E5               	movwf	_moveVector_ups^(0+128)
 16947                           
 16948                           ;main.c: 317: moveVector_downs = 0;
 16949  016E  3000               	movlw	0
 16950  016F  00E4               	movwf	(_moveVector_downs+3)^(0+128)
 16951  0170  3000               	movlw	0
 16952  0171  00E3               	movwf	(_moveVector_downs+2)^(0+128)
 16953  0172  3000               	movlw	0
 16954  0173  00E2               	movwf	(_moveVector_downs+1)^(0+128)
 16955  0174  3000               	movlw	0
 16956  0175  00E1               	movwf	_moveVector_downs^(0+128)
 16957                           
 16958                           ;main.c: 319: }
 16959                           
 16960                           ;main.c: 318: return;
 16961  0176  0008               	return
 16962  0177                     l8511:	
 16963                           
 16964                           ;main.c: 320: else{
 16965                           ;main.c: 321: for(int i=0;i<24;i++){
 16966  0177  01CC               	clrf	doAbsMove@i_1580^(0+128)
 16967  0178  01CD               	clrf	(doAbsMove@i_1580+1)^(0+128)
 16968  0179  084D               	movf	(doAbsMove@i_1580+1)^(0+128),w
 16969  017A  3A80               	xorlw	128
 16970  017B  0024               	movlb	4	; select bank4
 16971  017C  00C0               	movwf	??_doAbsMove^(0+512)
 16972  017D  3080               	movlw	128
 16973  017E  0240               	subwf	??_doAbsMove^(0+512),w
 16974  017F  1D03               	skipz
 16975  0180  2984               	goto	u8605
 16976  0181  3018               	movlw	24
 16977  0182  0021               	movlb	1	; select bank1
 16978  0183  024C               	subwf	doAbsMove@i_1580^(0+128),w
 16979  0184                     u8605:	
 16980  0184  1803               	btfsc	3,0
 16981  0185  2ABA               	goto	l8523
 16982  0186                     l8517:	
 16983                           
 16984                           ;main.c: 323: moveVector_ups |= (activeMask & (1UL << i)) & ((currentPositions_steps[i] 
      +                          > absCommand)<<i);
 16985  0186  0021               	movlb	1	; select bank1
 16986  0187  085D               	movf	_activeMask^(0+128),w
 16987  0188  0024               	movlb	4	; select bank4
 16988  0189  00C0               	movwf	??_doAbsMove^(0+512)
 16989  018A  0021               	movlb	1	; select bank1
 16990  018B  085E               	movf	(_activeMask+1)^(0+128),w
 16991  018C  0024               	movlb	4	; select bank4
 16992  018D  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 16993  018E  0021               	movlb	1	; select bank1
 16994  018F  085F               	movf	(_activeMask+2)^(0+128),w
 16995  0190  0024               	movlb	4	; select bank4
 16996  0191  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 16997  0192  0021               	movlb	1	; select bank1
 16998  0193  0860               	movf	(_activeMask+3)^(0+128),w
 16999  0194  0024               	movlb	4	; select bank4
 17000  0195  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 17001  0196  0021               	movlb	1	; select bank1
 17002  0197  084D               	movf	(doAbsMove@i_1580+1)^(0+128),w
 17003  0198  0024               	movlb	4	; select bank4
 17004  0199  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17005  019A  0021               	movlb	1	; select bank1
 17006  019B  084C               	movf	doAbsMove@i_1580^(0+128),w
 17007  019C  0024               	movlb	4	; select bank4
 17008  019D  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17009  019E  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17010  019F  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17011  01A0  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17012  01A1  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17013  01A2  3090               	movlw	144
 17014  01A3  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 17015  01A4  3027               	movlw	39
 17016  01A5  00C7               	movwf	((??_doAbsMove+6)^(0+512)+1)
 17017  01A6  0844               	movf	(??_doAbsMove+4)^(0+512),w
 17018  01A7  0746               	addwf	(??_doAbsMove+6)^(0+512),w
 17019  01A8  0086               	movwf	6
 17020  01A9  0845               	movf	(??_doAbsMove+5)^(0+512),w
 17021  01AA  3D47               	addwfc	(??_doAbsMove+7)^(0+512),w
 17022  01AB  0087               	movwf	7
 17023  01AC  3F40               	moviw [0]fsr1
 17024  01AD  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 17025  01AE  3F41               	moviw [1]fsr1
 17026  01AF  00C9               	movwf	((??_doAbsMove+8)^(0+512)+1)
 17027  01B0  3F42               	moviw [2]fsr1
 17028  01B1  00CA               	movwf	((??_doAbsMove+8)^(0+512)+2)
 17029  01B2  3F43               	moviw [3]fsr1
 17030  01B3  00CB               	movwf	((??_doAbsMove+8)^(0+512)+3)
 17031  01B4  0020               	movlb	0	; select bank0
 17032  01B5  0851               	movf	_absCommand+3,w
 17033  01B6  3A80               	xorlw	128
 17034  01B7  0024               	movlb	4	; select bank4
 17035  01B8  00CC               	movwf	(??_doAbsMove+12)^(0+512)
 17036  01B9  084B               	movf	(??_doAbsMove+11)^(0+512),w
 17037  01BA  3A80               	xorlw	128
 17038  01BB  024C               	subwf	(??_doAbsMove+12)^(0+512),w
 17039  01BC  0020               	movlb	0	; select bank0
 17040  01BD  1D03               	skipz
 17041  01BE  29CF               	goto	u8613
 17042  01BF  0024               	movlb	4	; select bank4
 17043  01C0  084A               	movf	(??_doAbsMove+10)^(0+512),w
 17044  01C1  0020               	movlb	0	; select bank0
 17045  01C2  0250               	subwf	_absCommand+2,w
 17046  01C3  1D03               	skipz
 17047  01C4  29CF               	goto	u8613
 17048  01C5  0024               	movlb	4	; select bank4
 17049  01C6  0849               	movf	(??_doAbsMove+9)^(0+512),w
 17050  01C7  0020               	movlb	0	; select bank0
 17051  01C8  024F               	subwf	_absCommand+1,w
 17052  01C9  1D03               	skipz
 17053  01CA  29CF               	goto	u8613
 17054  01CB  0024               	movlb	4	; select bank4
 17055  01CC  0848               	movf	(??_doAbsMove+8)^(0+512),w
 17056  01CD  0020               	movlb	0	; select bank0
 17057  01CE  024E               	subwf	_absCommand,w
 17058  01CF                     u8613:	
 17059  01CF  1803               	btfsc	3,0
 17060  01D0  29D3               	goto	u8610
 17061  01D1  3001               	movlw	1
 17062  01D2  29D4               	goto	u8620
 17063  01D3                     u8610:	
 17064  01D3  3000               	movlw	0
 17065  01D4                     u8620:	
 17066  01D4  0024               	movlb	4	; select bank4
 17067  01D5  00CD               	movwf	(??_doAbsMove+13)^(0+512)
 17068  01D6  01CE               	clrf	((??_doAbsMove+13)^(0+512)+1)
 17069  01D7  0021               	movlb	1	; select bank1
 17070  01D8  0A4C               	incf	doAbsMove@i_1580^(0+128),w
 17071  01D9  0024               	movlb	4	; select bank4
 17072  01DA  29DD               	goto	u8634
 17073  01DB                     u8635:	
 17074  01DB  35CD               	lslf	(??_doAbsMove+13)^(0+512),f
 17075  01DC  0DCE               	rlf	((??_doAbsMove+13)^(0+512)+1),f
 17076  01DD                     u8634:	
 17077  01DD  0B89               	decfsz	9,f
 17078  01DE  29DB               	goto	u8635
 17079  01DF  084D               	movf	(??_doAbsMove+13)^(0+512),w
 17080  01E0  00CF               	movwf	(??_doAbsMove+15)^(0+512)
 17081  01E1  084E               	movf	(??_doAbsMove+14)^(0+512),w
 17082  01E2  00D0               	movwf	((??_doAbsMove+15)^(0+512)+1)
 17083  01E3  3000               	movlw	0
 17084  01E4  1BD0               	btfsc	((??_doAbsMove+15)^(0+512)+1),7
 17085  01E5  30FF               	movlw	255
 17086  01E6  00D1               	movwf	((??_doAbsMove+15)^(0+512)+2)
 17087  01E7  00D2               	movwf	((??_doAbsMove+15)^(0+512)+3)
 17088  01E8  3001               	movlw	1
 17089  01E9  00D3               	movwf	(??_doAbsMove+19)^(0+512)
 17090  01EA  3000               	movlw	0
 17091  01EB  00D4               	movwf	((??_doAbsMove+19)^(0+512)+1)
 17092  01EC  3000               	movlw	0
 17093  01ED  00D5               	movwf	((??_doAbsMove+19)^(0+512)+2)
 17094  01EE  3000               	movlw	0
 17095  01EF  00D6               	movwf	((??_doAbsMove+19)^(0+512)+3)
 17096  01F0  0021               	movlb	1	; select bank1
 17097  01F1  0A4C               	incf	doAbsMove@i_1580^(0+128),w
 17098  01F2  0024               	movlb	4	; select bank4
 17099  01F3  29F8               	goto	u8640
 17100  01F4                     u8645:	
 17101  01F4  35D3               	lslf	(??_doAbsMove+19)^(0+512),f
 17102  01F5  0DD4               	rlf	((??_doAbsMove+19)^(0+512)+1),f
 17103  01F6  0DD5               	rlf	((??_doAbsMove+19)^(0+512)+2),f
 17104  01F7  0DD6               	rlf	((??_doAbsMove+19)^(0+512)+3),f
 17105  01F8                     u8640:	
 17106  01F8  0B89               	decfsz	9,f
 17107  01F9  29F4               	goto	u8645
 17108  01FA  0853               	movf	(??_doAbsMove+19)^(0+512),w
 17109  01FB  05CF               	andwf	(??_doAbsMove+15)^(0+512),f
 17110  01FC  0854               	movf	(??_doAbsMove+20)^(0+512),w
 17111  01FD  05D0               	andwf	((??_doAbsMove+15)^(0+512)+1),f
 17112  01FE  0855               	movf	(??_doAbsMove+21)^(0+512),w
 17113  01FF  05D1               	andwf	((??_doAbsMove+15)^(0+512)+2),f
 17114  0200  0856               	movf	(??_doAbsMove+22)^(0+512),w
 17115  0201  05D2               	andwf	((??_doAbsMove+15)^(0+512)+3),f
 17116  0202  084F               	movf	(??_doAbsMove+15)^(0+512),w
 17117  0203  05C0               	andwf	??_doAbsMove^(0+512),f
 17118  0204  0850               	movf	(??_doAbsMove+16)^(0+512),w
 17119  0205  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17120  0206  0851               	movf	(??_doAbsMove+17)^(0+512),w
 17121  0207  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17122  0208  0852               	movf	(??_doAbsMove+18)^(0+512),w
 17123  0209  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17124  020A  0840               	movf	??_doAbsMove^(0+512),w
 17125  020B  0021               	movlb	1	; select bank1
 17126  020C  04E5               	iorwf	_moveVector_ups^(0+128),f
 17127  020D  0024               	movlb	4	; select bank4
 17128  020E  0841               	movf	(??_doAbsMove+1)^(0+512),w
 17129  020F  0021               	movlb	1	; select bank1
 17130  0210  04E6               	iorwf	(_moveVector_ups+1)^(0+128),f
 17131  0211  0024               	movlb	4	; select bank4
 17132  0212  0842               	movf	(??_doAbsMove+2)^(0+512),w
 17133  0213  0021               	movlb	1	; select bank1
 17134  0214  04E7               	iorwf	(_moveVector_ups+2)^(0+128),f
 17135  0215  0024               	movlb	4	; select bank4
 17136  0216  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17137  0217  0021               	movlb	1	; select bank1
 17138  0218  04E8               	iorwf	(_moveVector_ups+3)^(0+128),f
 17139                           
 17140                           ;main.c: 324: moveVector_downs |= (activeMask & (1UL << i)) & ((currentPositions_steps[i
      +                          ] < absCommand)<<i);
 17141  0219  085D               	movf	_activeMask^(0+128),w
 17142  021A  0024               	movlb	4	; select bank4
 17143  021B  00C0               	movwf	??_doAbsMove^(0+512)
 17144  021C  0021               	movlb	1	; select bank1
 17145  021D  085E               	movf	(_activeMask+1)^(0+128),w
 17146  021E  0024               	movlb	4	; select bank4
 17147  021F  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 17148  0220  0021               	movlb	1	; select bank1
 17149  0221  085F               	movf	(_activeMask+2)^(0+128),w
 17150  0222  0024               	movlb	4	; select bank4
 17151  0223  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 17152  0224  0021               	movlb	1	; select bank1
 17153  0225  0860               	movf	(_activeMask+3)^(0+128),w
 17154  0226  0024               	movlb	4	; select bank4
 17155  0227  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 17156  0228  0021               	movlb	1	; select bank1
 17157  0229  084D               	movf	(doAbsMove@i_1580+1)^(0+128),w
 17158  022A  0024               	movlb	4	; select bank4
 17159  022B  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17160  022C  0021               	movlb	1	; select bank1
 17161  022D  084C               	movf	doAbsMove@i_1580^(0+128),w
 17162  022E  0024               	movlb	4	; select bank4
 17163  022F  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17164  0230  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17165  0231  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17166  0232  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17167  0233  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17168  0234  3090               	movlw	144
 17169  0235  00C6               	movwf	(??_doAbsMove+6)^(0+512)
 17170  0236  3027               	movlw	39
 17171  0237  00C7               	movwf	((??_doAbsMove+6)^(0+512)+1)
 17172  0238  0844               	movf	(??_doAbsMove+4)^(0+512),w
 17173  0239  0746               	addwf	(??_doAbsMove+6)^(0+512),w
 17174  023A  0086               	movwf	6
 17175  023B  0845               	movf	(??_doAbsMove+5)^(0+512),w
 17176  023C  3D47               	addwfc	(??_doAbsMove+7)^(0+512),w
 17177  023D  0087               	movwf	7
 17178  023E  3F40               	moviw [0]fsr1
 17179  023F  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 17180  0240  3F41               	moviw [1]fsr1
 17181  0241  00C9               	movwf	((??_doAbsMove+8)^(0+512)+1)
 17182  0242  3F42               	moviw [2]fsr1
 17183  0243  00CA               	movwf	((??_doAbsMove+8)^(0+512)+2)
 17184  0244  3F43               	moviw [3]fsr1
 17185  0245  00CB               	movwf	((??_doAbsMove+8)^(0+512)+3)
 17186  0246  084B               	movf	(??_doAbsMove+11)^(0+512),w
 17187  0247  3A80               	xorlw	128
 17188  0248  00CC               	movwf	(??_doAbsMove+12)^(0+512)
 17189  0249  0020               	movlb	0	; select bank0
 17190  024A  0851               	movf	_absCommand+3,w
 17191  024B  3A80               	xorlw	128
 17192  024C  0024               	movlb	4	; select bank4
 17193  024D  024C               	subwf	(??_doAbsMove+12)^(0+512),w
 17194  024E  1D03               	skipz
 17195  024F  2A60               	goto	u8653
 17196  0250  0020               	movlb	0	; select bank0
 17197  0251  0850               	movf	_absCommand+2,w
 17198  0252  0024               	movlb	4	; select bank4
 17199  0253  024A               	subwf	(??_doAbsMove+10)^(0+512),w
 17200  0254  1D03               	skipz
 17201  0255  2A60               	goto	u8653
 17202  0256  0020               	movlb	0	; select bank0
 17203  0257  084F               	movf	_absCommand+1,w
 17204  0258  0024               	movlb	4	; select bank4
 17205  0259  0249               	subwf	(??_doAbsMove+9)^(0+512),w
 17206  025A  1D03               	skipz
 17207  025B  2A60               	goto	u8653
 17208  025C  0020               	movlb	0	; select bank0
 17209  025D  084E               	movf	_absCommand,w
 17210  025E  0024               	movlb	4	; select bank4
 17211  025F  0248               	subwf	(??_doAbsMove+8)^(0+512),w
 17212  0260                     u8653:	
 17213  0260  1803               	btfsc	3,0
 17214  0261  2A64               	goto	u8650
 17215  0262  3001               	movlw	1
 17216  0263  2A65               	goto	u8660
 17217  0264                     u8650:	
 17218  0264  3000               	movlw	0
 17219  0265                     u8660:	
 17220  0265  00CD               	movwf	(??_doAbsMove+13)^(0+512)
 17221  0266  01CE               	clrf	((??_doAbsMove+13)^(0+512)+1)
 17222  0267  0021               	movlb	1	; select bank1
 17223  0268  0A4C               	incf	doAbsMove@i_1580^(0+128),w
 17224  0269  0024               	movlb	4	; select bank4
 17225  026A  2A6D               	goto	u8674
 17226  026B                     u8675:	
 17227  026B  35CD               	lslf	(??_doAbsMove+13)^(0+512),f
 17228  026C  0DCE               	rlf	((??_doAbsMove+13)^(0+512)+1),f
 17229  026D                     u8674:	
 17230  026D  0B89               	decfsz	9,f
 17231  026E  2A6B               	goto	u8675
 17232  026F  084D               	movf	(??_doAbsMove+13)^(0+512),w
 17233  0270  00CF               	movwf	(??_doAbsMove+15)^(0+512)
 17234  0271  084E               	movf	(??_doAbsMove+14)^(0+512),w
 17235  0272  00D0               	movwf	((??_doAbsMove+15)^(0+512)+1)
 17236  0273  3000               	movlw	0
 17237  0274  1BD0               	btfsc	((??_doAbsMove+15)^(0+512)+1),7
 17238  0275  30FF               	movlw	255
 17239  0276  00D1               	movwf	((??_doAbsMove+15)^(0+512)+2)
 17240  0277  00D2               	movwf	((??_doAbsMove+15)^(0+512)+3)
 17241  0278  3001               	movlw	1
 17242  0279  00D3               	movwf	(??_doAbsMove+19)^(0+512)
 17243  027A  3000               	movlw	0
 17244  027B  00D4               	movwf	((??_doAbsMove+19)^(0+512)+1)
 17245  027C  3000               	movlw	0
 17246  027D  00D5               	movwf	((??_doAbsMove+19)^(0+512)+2)
 17247  027E  3000               	movlw	0
 17248  027F  00D6               	movwf	((??_doAbsMove+19)^(0+512)+3)
 17249  0280  0021               	movlb	1	; select bank1
 17250  0281  0A4C               	incf	doAbsMove@i_1580^(0+128),w
 17251  0282  0024               	movlb	4	; select bank4
 17252  0283  2A88               	goto	u8680
 17253  0284                     u8685:	
 17254  0284  35D3               	lslf	(??_doAbsMove+19)^(0+512),f
 17255  0285  0DD4               	rlf	((??_doAbsMove+19)^(0+512)+1),f
 17256  0286  0DD5               	rlf	((??_doAbsMove+19)^(0+512)+2),f
 17257  0287  0DD6               	rlf	((??_doAbsMove+19)^(0+512)+3),f
 17258  0288                     u8680:	
 17259  0288  0B89               	decfsz	9,f
 17260  0289  2A84               	goto	u8685
 17261  028A  0853               	movf	(??_doAbsMove+19)^(0+512),w
 17262  028B  05CF               	andwf	(??_doAbsMove+15)^(0+512),f
 17263  028C  0854               	movf	(??_doAbsMove+20)^(0+512),w
 17264  028D  05D0               	andwf	((??_doAbsMove+15)^(0+512)+1),f
 17265  028E  0855               	movf	(??_doAbsMove+21)^(0+512),w
 17266  028F  05D1               	andwf	((??_doAbsMove+15)^(0+512)+2),f
 17267  0290  0856               	movf	(??_doAbsMove+22)^(0+512),w
 17268  0291  05D2               	andwf	((??_doAbsMove+15)^(0+512)+3),f
 17269  0292  084F               	movf	(??_doAbsMove+15)^(0+512),w
 17270  0293  05C0               	andwf	??_doAbsMove^(0+512),f
 17271  0294  0850               	movf	(??_doAbsMove+16)^(0+512),w
 17272  0295  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17273  0296  0851               	movf	(??_doAbsMove+17)^(0+512),w
 17274  0297  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17275  0298  0852               	movf	(??_doAbsMove+18)^(0+512),w
 17276  0299  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17277  029A  0840               	movf	??_doAbsMove^(0+512),w
 17278  029B  0021               	movlb	1	; select bank1
 17279  029C  04E1               	iorwf	_moveVector_downs^(0+128),f
 17280  029D  0024               	movlb	4	; select bank4
 17281  029E  0841               	movf	(??_doAbsMove+1)^(0+512),w
 17282  029F  0021               	movlb	1	; select bank1
 17283  02A0  04E2               	iorwf	(_moveVector_downs+1)^(0+128),f
 17284  02A1  0024               	movlb	4	; select bank4
 17285  02A2  0842               	movf	(??_doAbsMove+2)^(0+512),w
 17286  02A3  0021               	movlb	1	; select bank1
 17287  02A4  04E3               	iorwf	(_moveVector_downs+2)^(0+128),f
 17288  02A5  0024               	movlb	4	; select bank4
 17289  02A6  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17290  02A7  0021               	movlb	1	; select bank1
 17291  02A8  04E4               	iorwf	(_moveVector_downs+3)^(0+128),f
 17292  02A9  3001               	movlw	1
 17293  02AA  07CC               	addwf	doAbsMove@i_1580^(0+128),f
 17294  02AB  3000               	movlw	0
 17295  02AC  3DCD               	addwfc	(doAbsMove@i_1580+1)^(0+128),f
 17296  02AD  084D               	movf	(doAbsMove@i_1580+1)^(0+128),w
 17297  02AE  3A80               	xorlw	128
 17298  02AF  0024               	movlb	4	; select bank4
 17299  02B0  00C0               	movwf	??_doAbsMove^(0+512)
 17300  02B1  3080               	movlw	128
 17301  02B2  0240               	subwf	??_doAbsMove^(0+512),w
 17302  02B3  1D03               	skipz
 17303  02B4  2AB8               	goto	u8695
 17304  02B5  3018               	movlw	24
 17305  02B6  0021               	movlb	1	; select bank1
 17306  02B7  024C               	subwf	doAbsMove@i_1580^(0+128),w
 17307  02B8                     u8695:	
 17308  02B8  1C03               	skipc
 17309  02B9  2986               	goto	l8517
 17310  02BA                     l8523:	
 17311                           
 17312                           ;main.c: 326: }
 17313                           ;main.c: 327: doMove();
 17314  02BA  3189  2119  3180   	fcall	_doMove
 17315                           
 17316                           ;main.c: 329: for(int i=0;i<24;i++)
 17317  02BD  0021               	movlb	1	; select bank1
 17318  02BE  01CA               	clrf	doAbsMove@i_1582^(0+128)
 17319  02BF  01CB               	clrf	(doAbsMove@i_1582+1)^(0+128)
 17320  02C0                     L34:	
 17321  02C0  084B               	movf	(doAbsMove@i_1582+1)^(0+128),w
 17322  02C1  3A80               	xorlw	128
 17323  02C2  0024               	movlb	4	; select bank4
 17324  02C3  00C0               	movwf	??_doAbsMove^(0+512)
 17325  02C4  3080               	movlw	128
 17326  02C5  0240               	subwf	??_doAbsMove^(0+512),w
 17327  02C6  1D03               	skipz
 17328  02C7  2ACB               	goto	u8705
 17329  02C8  3018               	movlw	24
 17330  02C9  0021               	movlb	1	; select bank1
 17331  02CA  024A               	subwf	doAbsMove@i_1582^(0+128),w
 17332  02CB                     u8705:	
 17333  02CB  1803               	btfsc	3,0
 17334  02CC  0008               	return
 17335                           
 17336                           ;main.c: 330: currentPositions_steps[i] += ((moveVector_downs & (1UL << i)) > 0) - ((mov
      +                          eVector_ups & (1UL << i)) > 0);
 17337  02CD  0021               	movlb	1	; select bank1
 17338  02CE  0865               	movf	_moveVector_ups^(0+128),w
 17339  02CF  0024               	movlb	4	; select bank4
 17340  02D0  00C0               	movwf	??_doAbsMove^(0+512)
 17341  02D1  0021               	movlb	1	; select bank1
 17342  02D2  0866               	movf	(_moveVector_ups+1)^(0+128),w
 17343  02D3  0024               	movlb	4	; select bank4
 17344  02D4  00C1               	movwf	(??_doAbsMove^(0+512)+1)
 17345  02D5  0021               	movlb	1	; select bank1
 17346  02D6  0867               	movf	(_moveVector_ups+2)^(0+128),w
 17347  02D7  0024               	movlb	4	; select bank4
 17348  02D8  00C2               	movwf	(??_doAbsMove^(0+512)+2)
 17349  02D9  0021               	movlb	1	; select bank1
 17350  02DA  0868               	movf	(_moveVector_ups+3)^(0+128),w
 17351  02DB  0024               	movlb	4	; select bank4
 17352  02DC  00C3               	movwf	(??_doAbsMove^(0+512)+3)
 17353  02DD  3001               	movlw	1
 17354  02DE  00C4               	movwf	(??_doAbsMove+4)^(0+512)
 17355  02DF  3000               	movlw	0
 17356  02E0  00C5               	movwf	((??_doAbsMove+4)^(0+512)+1)
 17357  02E1  3000               	movlw	0
 17358  02E2  00C6               	movwf	((??_doAbsMove+4)^(0+512)+2)
 17359  02E3  3000               	movlw	0
 17360  02E4  00C7               	movwf	((??_doAbsMove+4)^(0+512)+3)
 17361  02E5  0021               	movlb	1	; select bank1
 17362  02E6  0A4A               	incf	doAbsMove@i_1582^(0+128),w
 17363  02E7  0024               	movlb	4	; select bank4
 17364  02E8  2AED               	goto	u8710
 17365  02E9                     u8715:	
 17366  02E9  35C4               	lslf	(??_doAbsMove+4)^(0+512),f
 17367  02EA  0DC5               	rlf	((??_doAbsMove+4)^(0+512)+1),f
 17368  02EB  0DC6               	rlf	((??_doAbsMove+4)^(0+512)+2),f
 17369  02EC  0DC7               	rlf	((??_doAbsMove+4)^(0+512)+3),f
 17370  02ED                     u8710:	
 17371  02ED  0B89               	decfsz	9,f
 17372  02EE  2AE9               	goto	u8715
 17373  02EF  0844               	movf	(??_doAbsMove+4)^(0+512),w
 17374  02F0  05C0               	andwf	??_doAbsMove^(0+512),f
 17375  02F1  0845               	movf	(??_doAbsMove+5)^(0+512),w
 17376  02F2  05C1               	andwf	(??_doAbsMove^(0+512)+1),f
 17377  02F3  0846               	movf	(??_doAbsMove+6)^(0+512),w
 17378  02F4  05C2               	andwf	(??_doAbsMove^(0+512)+2),f
 17379  02F5  0847               	movf	(??_doAbsMove+7)^(0+512),w
 17380  02F6  05C3               	andwf	(??_doAbsMove^(0+512)+3),f
 17381  02F7  0843               	movf	(??_doAbsMove+3)^(0+512),w
 17382  02F8  0442               	iorwf	(??_doAbsMove+2)^(0+512),w
 17383  02F9  0441               	iorwf	(??_doAbsMove+1)^(0+512),w
 17384  02FA  0440               	iorwf	??_doAbsMove^(0+512),w
 17385  02FB  1903               	btfsc	3,2
 17386  02FC  2AFF               	goto	u8720
 17387  02FD  3001               	movlw	1
 17388  02FE  2B00               	goto	u8730
 17389  02FF                     u8720:	
 17390  02FF  3000               	movlw	0
 17391  0300                     u8730:	
 17392  0300  00C8               	movwf	(??_doAbsMove+8)^(0+512)
 17393  0301  01C9               	clrf	((??_doAbsMove+8)^(0+512)+1)
 17394  0302  09C8               	comf	(??_doAbsMove+8)^(0+512),f
 17395  0303  09C9               	comf	((??_doAbsMove+8)^(0+512)+1),f
 17396  0304  0AC8               	incf	(??_doAbsMove+8)^(0+512),f
 17397  0305  1903               	skipnz
 17398  0306  0AC9               	incf	((??_doAbsMove+8)^(0+512)+1),f
 17399  0307  0021               	movlb	1	; select bank1
 17400  0308  0861               	movf	_moveVector_downs^(0+128),w
 17401  0309  0024               	movlb	4	; select bank4
 17402  030A  00CA               	movwf	(??_doAbsMove+10)^(0+512)
 17403  030B  0021               	movlb	1	; select bank1
 17404  030C  0862               	movf	(_moveVector_downs+1)^(0+128),w
 17405  030D  0024               	movlb	4	; select bank4
 17406  030E  00CB               	movwf	((??_doAbsMove+10)^(0+512)+1)
 17407  030F  0021               	movlb	1	; select bank1
 17408  0310  0863               	movf	(_moveVector_downs+2)^(0+128),w
 17409  0311  0024               	movlb	4	; select bank4
 17410  0312  00CC               	movwf	((??_doAbsMove+10)^(0+512)+2)
 17411  0313  0021               	movlb	1	; select bank1
 17412  0314  0864               	movf	(_moveVector_downs+3)^(0+128),w
 17413  0315  0024               	movlb	4	; select bank4
 17414  0316  00CD               	movwf	((??_doAbsMove+10)^(0+512)+3)
 17415  0317  3001               	movlw	1
 17416  0318  00CE               	movwf	(??_doAbsMove+14)^(0+512)
 17417  0319  3000               	movlw	0
 17418  031A  00CF               	movwf	((??_doAbsMove+14)^(0+512)+1)
 17419  031B  3000               	movlw	0
 17420  031C  00D0               	movwf	((??_doAbsMove+14)^(0+512)+2)
 17421  031D  3000               	movlw	0
 17422  031E  00D1               	movwf	((??_doAbsMove+14)^(0+512)+3)
 17423  031F  0021               	movlb	1	; select bank1
 17424  0320  0A4A               	incf	doAbsMove@i_1582^(0+128),w
 17425  0321  0024               	movlb	4	; select bank4
 17426  0322  2B27               	goto	u8740
 17427  0323                     u8745:	
 17428  0323  35CE               	lslf	(??_doAbsMove+14)^(0+512),f
 17429  0324  0DCF               	rlf	((??_doAbsMove+14)^(0+512)+1),f
 17430  0325  0DD0               	rlf	((??_doAbsMove+14)^(0+512)+2),f
 17431  0326  0DD1               	rlf	((??_doAbsMove+14)^(0+512)+3),f
 17432  0327                     u8740:	
 17433  0327  0B89               	decfsz	9,f
 17434  0328  2B23               	goto	u8745
 17435  0329  084E               	movf	(??_doAbsMove+14)^(0+512),w
 17436  032A  05CA               	andwf	(??_doAbsMove+10)^(0+512),f
 17437  032B  084F               	movf	(??_doAbsMove+15)^(0+512),w
 17438  032C  05CB               	andwf	((??_doAbsMove+10)^(0+512)+1),f
 17439  032D  0850               	movf	(??_doAbsMove+16)^(0+512),w
 17440  032E  05CC               	andwf	((??_doAbsMove+10)^(0+512)+2),f
 17441  032F  0851               	movf	(??_doAbsMove+17)^(0+512),w
 17442  0330  05CD               	andwf	((??_doAbsMove+10)^(0+512)+3),f
 17443  0331  084D               	movf	(??_doAbsMove+13)^(0+512),w
 17444  0332  044C               	iorwf	(??_doAbsMove+12)^(0+512),w
 17445  0333  044B               	iorwf	(??_doAbsMove+11)^(0+512),w
 17446  0334  044A               	iorwf	(??_doAbsMove+10)^(0+512),w
 17447  0335  1903               	btfsc	3,2
 17448  0336  2B39               	goto	u8750
 17449  0337  3001               	movlw	1
 17450  0338  2B3A               	goto	u8760
 17451  0339                     u8750:	
 17452  0339  3000               	movlw	0
 17453  033A                     u8760:	
 17454  033A  0748               	addwf	(??_doAbsMove+8)^(0+512),w
 17455  033B  00D2               	movwf	(??_doAbsMove+18)^(0+512)
 17456  033C  0849               	movf	(??_doAbsMove+9)^(0+512),w
 17457  033D  1803               	skipnc
 17458  033E  0A49               	incf	(??_doAbsMove+9)^(0+512),w
 17459  033F  00D3               	movwf	((??_doAbsMove+18)^(0+512)+1)
 17460  0340  0852               	movf	(??_doAbsMove+18)^(0+512),w
 17461  0341  00D4               	movwf	(??_doAbsMove+20)^(0+512)
 17462  0342  0853               	movf	(??_doAbsMove+19)^(0+512),w
 17463  0343  00D5               	movwf	((??_doAbsMove+20)^(0+512)+1)
 17464  0344  3000               	movlw	0
 17465  0345  1BD5               	btfsc	((??_doAbsMove+20)^(0+512)+1),7
 17466  0346  30FF               	movlw	255
 17467  0347  00D6               	movwf	((??_doAbsMove+20)^(0+512)+2)
 17468  0348  00D7               	movwf	((??_doAbsMove+20)^(0+512)+3)
 17469  0349  0021               	movlb	1	; select bank1
 17470  034A  084B               	movf	(doAbsMove@i_1582+1)^(0+128),w
 17471  034B  0024               	movlb	4	; select bank4
 17472  034C  00D9               	movwf	((??_doAbsMove+24)^(0+512)+1)
 17473  034D  0021               	movlb	1	; select bank1
 17474  034E  084A               	movf	doAbsMove@i_1582^(0+128),w
 17475  034F  0024               	movlb	4	; select bank4
 17476  0350  00D8               	movwf	(??_doAbsMove+24)^(0+512)
 17477  0351  35D8               	lslf	(??_doAbsMove+24)^(0+512),f
 17478  0352  0DD9               	rlf	((??_doAbsMove+24)^(0+512)+1),f
 17479  0353  35D8               	lslf	(??_doAbsMove+24)^(0+512),f
 17480  0354  0DD9               	rlf	((??_doAbsMove+24)^(0+512)+1),f
 17481  0355  3090               	movlw	144
 17482  0356  00DA               	movwf	(??_doAbsMove+26)^(0+512)
 17483  0357  3027               	movlw	39
 17484  0358  00DB               	movwf	((??_doAbsMove+26)^(0+512)+1)
 17485  0359  0858               	movf	(??_doAbsMove+24)^(0+512),w
 17486  035A  075A               	addwf	(??_doAbsMove+26)^(0+512),w
 17487  035B  0086               	movwf	6
 17488  035C  0859               	movf	(??_doAbsMove+25)^(0+512),w
 17489  035D  3D5B               	addwfc	(??_doAbsMove+27)^(0+512),w
 17490  035E  0087               	movwf	7
 17491  035F  0854               	movf	(??_doAbsMove+20)^(0+512),w
 17492  0360  0781               	addwf	1,f
 17493  0361  3141               	addfsr 1,1
 17494  0362  0855               	movf	(??_doAbsMove+21)^(0+512),w
 17495  0363  3D81               	addwfc	1,f
 17496  0364  3141               	addfsr 1,1
 17497  0365  0856               	movf	(??_doAbsMove+22)^(0+512),w
 17498  0366  3D81               	addwfc	1,f
 17499  0367  3141               	addfsr 1,1
 17500  0368  0857               	movf	(??_doAbsMove+23)^(0+512),w
 17501  0369  3D81               	addwfc	1,f
 17502  036A  3001               	movlw	1
 17503  036B  0021               	movlb	1	; select bank1
 17504  036C  07CA               	addwf	doAbsMove@i_1582^(0+128),f
 17505  036D  3000               	movlw	0
 17506  036E  3DCB               	addwfc	(doAbsMove@i_1582+1)^(0+128),f
 17507  036F  2AC0               	goto	L34
 17508  0370                     __end_of_doAbsMove:	
 17509                           
 17510                           	psect	text54
 17511  0919                     __ptext54:	
 17512 ;; *************** function _doMove *****************
 17513 ;; Defined at:
 17514 ;;		line 234 in file "main.c"
 17515 ;; Parameters:    Size  Location     Type
 17516 ;;		None
 17517 ;; Auto vars:     Size  Location     Type
 17518 ;;  t               2   36[BANK1 ] int 
 17519 ;;  t               2   34[BANK1 ] int 
 17520 ;; Return value:  Size  Location     Type
 17521 ;;                  2   31[BANK1 ] int 
 17522 ;; Registers used:
 17523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17524 ;; Tracked objects:
 17525 ;;		On entry : 0/0
 17526 ;;		On exit  : 0/0
 17527 ;;		Unchanged: 0/0
 17528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17529 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17530 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17531 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17532 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17533 ;;Total ram usage:        7 bytes
 17534 ;; Hardware stack levels used:    1
 17535 ;; Hardware stack levels required when called:   15
 17536 ;; This function calls:
 17537 ;;		_LEDsOn
 17538 ;;		_TMR0_StartTimer
 17539 ;;		_TMR2_StartTimer
 17540 ;;		_calcHeaterPins
 17541 ;;		_drv_write_DC
 17542 ;;		_printf
 17543 ;; This function is called by:
 17544 ;;		_doAbsMove
 17545 ;;		_doRelMove
 17546 ;;		_execCmd
 17547 ;; This function uses a non-reentrant model
 17548 ;;
 17549                           
 17550                           
 17551                           ;psect for function _doMove
 17552  0919                     _doMove:	
 17553                           
 17554                           ;main.c: 235: printf("doMove\n");
 17555                           
 17556                           ;incstack = 0
 17557 ;; hardware stack exceeded
 17558                           ; Regs used in _doMove: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17559  0919  3003               	movlw	low (STR_7| (0+32768))
 17560  091A  0021               	movlb	1	; select bank1
 17561  091B  00A0               	movwf	printf@f^(0+128)
 17562  091C  30AA               	movlw	high (STR_7| (0+32768))
 17563  091D  00A1               	movwf	(printf@f^(0+128)+1)
 17564  091E  318E  26CE  3189   	fcall	_printf
 17565                           
 17566                           ;main.c: 237: calcHeaterPins();
 17567  0921  3196  2615  3189   	fcall	_calcHeaterPins
 17568                           
 17569                           ;main.c: 238: do { LATCbits.LATC1 = 1; } while(0);
 17570  0924  0022               	movlb	2	; select bank2
 17571  0925  148E               	bsf	14,1	;volatile
 17572                           
 17573                           ;main.c: 239: LEDsOn(first_top, 1);
 17574  0926  0859               	movf	(_first_top+3)^(0+256),w
 17575  0927  0020               	movlb	0	; select bank0
 17576  0928  00C7               	movwf	LEDsOn@LEDpins+3
 17577  0929  0022               	movlb	2	; select bank2
 17578  092A  0858               	movf	(_first_top+2)^(0+256),w
 17579  092B  0020               	movlb	0	; select bank0
 17580  092C  00C6               	movwf	LEDsOn@LEDpins+2
 17581  092D  0022               	movlb	2	; select bank2
 17582  092E  0857               	movf	(_first_top+1)^(0+256),w
 17583  092F  0020               	movlb	0	; select bank0
 17584  0930  00C5               	movwf	LEDsOn@LEDpins+1
 17585  0931  0022               	movlb	2	; select bank2
 17586  0932  0856               	movf	_first_top^(0+256),w
 17587  0933  0020               	movlb	0	; select bank0
 17588  0934  00C4               	movwf	LEDsOn@LEDpins
 17589  0935  3001               	movlw	1
 17590  0936  00C8               	movwf	LEDsOn@topOrBottom
 17591  0937  3000               	movlw	0
 17592  0938  00C9               	movwf	LEDsOn@topOrBottom+1
 17593  0939  31A5  25AD  3189   	fcall	_LEDsOn
 17594                           
 17595                           ;main.c: 240: LEDsOn(first_bottom,2);
 17596  093C  0022               	movlb	2	; select bank2
 17597  093D  085D               	movf	(_first_bottom+3)^(0+256),w
 17598  093E  0020               	movlb	0	; select bank0
 17599  093F  00C7               	movwf	LEDsOn@LEDpins+3
 17600  0940  0022               	movlb	2	; select bank2
 17601  0941  085C               	movf	(_first_bottom+2)^(0+256),w
 17602  0942  0020               	movlb	0	; select bank0
 17603  0943  00C6               	movwf	LEDsOn@LEDpins+2
 17604  0944  0022               	movlb	2	; select bank2
 17605  0945  085B               	movf	(_first_bottom+1)^(0+256),w
 17606  0946  0020               	movlb	0	; select bank0
 17607  0947  00C5               	movwf	LEDsOn@LEDpins+1
 17608  0948  0022               	movlb	2	; select bank2
 17609  0949  085A               	movf	_first_bottom^(0+256),w
 17610  094A  0020               	movlb	0	; select bank0
 17611  094B  00C4               	movwf	LEDsOn@LEDpins
 17612  094C  3002               	movlw	2
 17613  094D  00C8               	movwf	LEDsOn@topOrBottom
 17614  094E  3000               	movlw	0
 17615  094F  00C9               	movwf	LEDsOn@topOrBottom+1
 17616  0950  31A5  25AD  3189   	fcall	_LEDsOn
 17617                           
 17618                           ;main.c: 241: do { LATCbits.LATC1 = 0; } while(0);
 17619  0953  0022               	movlb	2	; select bank2
 17620  0954  108E               	bcf	14,1	;volatile
 17621                           
 17622                           ;main.c: 242: for(int t=0; t<heater_pre_time_ms; t++) _delay((unsigned long)((1)*(100000
      +                          0/4000.0)));
 17623  0955  0021               	movlb	1	; select bank1
 17624  0956  01C2               	clrf	doMove@t^(0+128)
 17625  0957  01C3               	clrf	(doMove@t+1)^(0+128)
 17626  0958                     l1097:	
 17627  0958  0843               	movf	(doMove@t+1)^(0+128),w
 17628  0959  3A80               	xorlw	128
 17629  095A  00C1               	movwf	??_doMove^(0+128)
 17630  095B  086E               	movf	(_heater_pre_time_ms+1)^(0+128),w
 17631  095C  3A80               	xorlw	128
 17632  095D  0241               	subwf	??_doMove^(0+128),w
 17633  095E  1D03               	skipz
 17634  095F  2962               	goto	u8055
 17635  0960  086D               	movf	_heater_pre_time_ms^(0+128),w
 17636  0961  0242               	subwf	doMove@t^(0+128),w
 17637  0962                     u8055:	
 17638  0962  1803               	btfsc	3,0
 17639  0963  296E               	goto	l7957
 17640  0964  3053               	movlw	83
 17641  0965                     u9137:	
 17642  0965  0B89               	decfsz	9,f
 17643  0966  2965               	goto	u9137
 17644  0967  0000               	nop
 17645  0968  3001               	movlw	1
 17646  0969  0021               	movlb	1	; select bank1
 17647  096A  07C2               	addwf	doMove@t^(0+128),f
 17648  096B  3000               	movlw	0
 17649  096C  3DC3               	addwfc	(doMove@t+1)^(0+128),f
 17650  096D  2958               	goto	l1097
 17651  096E                     l7957:	
 17652                           
 17653                           ;main.c: 243: TMR2_StartTimer();
 17654  096E  31A1  21BF  3189   	fcall	_TMR2_StartTimer
 17655                           
 17656                           ;main.c: 244: TMR0_StartTimer();
 17657  0971  31A1  21BC  3189   	fcall	_TMR0_StartTimer
 17658                           
 17659                           ;main.c: 246: drv_write_DC(drv_peak_val, piezo_on_time_ms);
 17660  0974  0022               	movlb	2	; select bank2
 17661  0975  086F               	movf	(_drv_peak_val+1)^(0+256),w
 17662  0976  0021               	movlb	1	; select bank1
 17663  0977  00B9               	movwf	(drv_write_DC@val+1)^(0+128)
 17664  0978  0022               	movlb	2	; select bank2
 17665  0979  086E               	movf	_drv_peak_val^(0+256),w
 17666  097A  0021               	movlb	1	; select bank1
 17667  097B  00B8               	movwf	drv_write_DC@val^(0+128)
 17668  097C  086A               	movf	(_piezo_on_time_ms+1)^(0+128),w
 17669  097D  00BB               	movwf	(drv_write_DC@duration_ms+1)^(0+128)
 17670  097E  0869               	movf	_piezo_on_time_ms^(0+128),w
 17671  097F  00BA               	movwf	drv_write_DC@duration_ms^(0+128)
 17672  0980  319C  2426  3189   	fcall	_drv_write_DC
 17673                           
 17674                           ;main.c: 248: for(int t=0; t<heater_post_time_ms; t++) _delay((unsigned long)((1)*(10000
      +                          00/4000.0)));
 17675  0983  0021               	movlb	1	; select bank1
 17676  0984  01C4               	clrf	doMove@t_1565^(0+128)
 17677  0985  01C5               	clrf	(doMove@t_1565+1)^(0+128)
 17678  0986                     l1100:	
 17679  0986  0845               	movf	(doMove@t_1565+1)^(0+128),w
 17680  0987  3A80               	xorlw	128
 17681  0988  00C1               	movwf	??_doMove^(0+128)
 17682  0989  086C               	movf	(_heater_post_time_ms+1)^(0+128),w
 17683  098A  3A80               	xorlw	128
 17684  098B  0241               	subwf	??_doMove^(0+128),w
 17685  098C  1D03               	skipz
 17686  098D  2990               	goto	u8065
 17687  098E  086B               	movf	_heater_post_time_ms^(0+128),w
 17688  098F  0244               	subwf	doMove@t_1565^(0+128),w
 17689  0990                     u8065:	
 17690  0990  1803               	btfsc	3,0
 17691  0991  299C               	goto	l1103
 17692  0992  3053               	movlw	83
 17693  0993                     u9147:	
 17694  0993  0B89               	decfsz	9,f
 17695  0994  2993               	goto	u9147
 17696  0995  0000               	nop
 17697  0996  3001               	movlw	1
 17698  0997  0021               	movlb	1	; select bank1
 17699  0998  07C4               	addwf	doMove@t_1565^(0+128),f
 17700  0999  3000               	movlw	0
 17701  099A  3DC5               	addwfc	(doMove@t_1565+1)^(0+128),f
 17702  099B  2986               	goto	l1100
 17703  099C                     l1103:	
 17704                           ;main.c: 250: do { LATCbits.LATC1 = 1; } while(0);
 17705                           
 17706  099C  0022               	movlb	2	; select bank2
 17707  099D  148E               	bsf	14,1	;volatile
 17708                           
 17709                           ;main.c: 252: return 0;
 17710  099E  0021               	movlb	1	; select bank1
 17711  099F  01BF               	clrf	?_doMove^(0+128)
 17712  09A0  01C0               	clrf	(?_doMove+1)^(0+128)
 17713  09A1  0008               	return
 17714  09A2                     __end_of_doMove:	
 17715                           
 17716                           	psect	text55
 17717  1C26                     __ptext55:	
 17718 ;; *************** function _drv_write_DC *****************
 17719 ;; Defined at:
 17720 ;;		line 106 in file "drv2665.c"
 17721 ;; Parameters:    Size  Location     Type
 17722 ;;  val             2   24[BANK1 ] int 
 17723 ;;  duration_ms     2   26[BANK1 ] int 
 17724 ;; Auto vars:     Size  Location     Type
 17725 ;;  i               2   29[BANK1 ] int 
 17726 ;; Return value:  Size  Location     Type
 17727 ;;                  1    wreg      void 
 17728 ;; Registers used:
 17729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17730 ;; Tracked objects:
 17731 ;;		On entry : 0/0
 17732 ;;		On exit  : 0/0
 17733 ;;		Unchanged: 0/0
 17734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17735 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17736 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17737 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17738 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17739 ;;Total ram usage:        7 bytes
 17740 ;; Hardware stack levels used:    1
 17741 ;; Hardware stack levels required when called:   14
 17742 ;; This function calls:
 17743 ;;		___awdiv
 17744 ;;		_drv_write
 17745 ;;		_fifo_check
 17746 ;;		_printf
 17747 ;; This function is called by:
 17748 ;;		_doMove
 17749 ;; This function uses a non-reentrant model
 17750 ;;
 17751                           
 17752                           
 17753                           ;psect for function _drv_write_DC
 17754  1C26                     _drv_write_DC:	
 17755                           
 17756                           ;drv2665.c: 108: drv_write(0x0b, 0x00);
 17757                           
 17758                           ;incstack = 0
 17759 ;; hardware stack exceeded
 17760                           ; Regs used in _drv_write_DC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17761  1C26  0020               	movlb	0	; select bank0
 17762  1C27  01C9               	clrf	drv_write@data
 17763  1C28  300B               	movlw	11
 17764  1C29  31A6  265B  319C   	fcall	_drv_write
 17765                           
 17766                           ;drv2665.c: 109: for(int i=0;i<duration_ms/5; i++){
 17767  1C2C  0021               	movlb	1	; select bank1
 17768  1C2D  01BD               	clrf	drv_write_DC@i^(0+128)
 17769  1C2E  01BE               	clrf	(drv_write_DC@i+1)^(0+128)
 17770  1C2F                     l7723:	
 17771  1C2F  3005               	movlw	5
 17772  1C30  0020               	movlb	0	; select bank0
 17773  1C31  00B1               	movwf	___awdiv@divisor
 17774  1C32  3000               	movlw	0
 17775  1C33  00B2               	movwf	___awdiv@divisor+1
 17776  1C34  0021               	movlb	1	; select bank1
 17777  1C35  083B               	movf	(drv_write_DC@duration_ms+1)^(0+128),w
 17778  1C36  0020               	movlb	0	; select bank0
 17779  1C37  00B4               	movwf	___awdiv@dividend+1
 17780  1C38  0021               	movlb	1	; select bank1
 17781  1C39  083A               	movf	drv_write_DC@duration_ms^(0+128),w
 17782  1C3A  0020               	movlb	0	; select bank0
 17783  1C3B  00B3               	movwf	___awdiv@dividend
 17784  1C3C  319C  2476  319C   	fcall	___awdiv
 17785  1C3F  0021               	movlb	1	; select bank1
 17786  1C40  083E               	movf	(drv_write_DC@i+1)^(0+128),w
 17787  1C41  3A80               	xorlw	128
 17788  1C42  00BC               	movwf	??_drv_write_DC^(0+128)
 17789  1C43  0020               	movlb	0	; select bank0
 17790  1C44  0832               	movf	?___awdiv+1,w
 17791  1C45  3A80               	xorlw	128
 17792  1C46  0021               	movlb	1	; select bank1
 17793  1C47  023C               	subwf	??_drv_write_DC^(0+128),w
 17794  1C48  1D03               	skipz
 17795  1C49  2C4E               	goto	u7675
 17796  1C4A  0020               	movlb	0	; select bank0
 17797  1C4B  0831               	movf	?___awdiv,w
 17798  1C4C  0021               	movlb	1	; select bank1
 17799  1C4D  023D               	subwf	drv_write_DC@i^(0+128),w
 17800  1C4E                     u7675:	
 17801  1C4E  1803               	btfsc	3,0
 17802  1C4F  2C63               	goto	l7725
 17803                           
 17804                           ;drv2665.c: 110: drv_write(0x0b, val);
 17805  1C50  0021               	movlb	1	; select bank1
 17806  1C51  0838               	movf	drv_write_DC@val^(0+128),w
 17807  1C52  00BC               	movwf	??_drv_write_DC^(0+128)
 17808  1C53  083C               	movf	??_drv_write_DC^(0+128),w
 17809  1C54  0020               	movlb	0	; select bank0
 17810  1C55  00C9               	movwf	drv_write@data
 17811  1C56  300B               	movlw	11
 17812  1C57  31A6  265B  319C   	fcall	_drv_write
 17813                           
 17814                           ;drv2665.c: 111: _delay((unsigned long)((20)*(1000000/4000000.0)));
 17815  1C5A  3200               	nop2	;2 cycle nop
 17816  1C5B  3200               	nop2	;2 cycle nop
 17817  1C5C  0000               	nop
 17818  1C5D  3001               	movlw	1
 17819  1C5E  0021               	movlb	1	; select bank1
 17820  1C5F  07BD               	addwf	drv_write_DC@i^(0+128),f
 17821  1C60  3000               	movlw	0
 17822  1C61  3DBE               	addwfc	(drv_write_DC@i+1)^(0+128),f
 17823  1C62  2C2F               	goto	l7723
 17824  1C63                     l7725:	
 17825                           
 17826                           ;drv2665.c: 113: }
 17827                           ;drv2665.c: 116: if(!fifo_check()) printf("fifo not ready!\n");
 17828  1C63  31A3  239F  319C   	fcall	_fifo_check
 17829  1C66  1803               	btfsc	3,0
 17830  1C67  2C70               	goto	l1333
 17831  1C68  30EE               	movlw	low (STR_56| (0+32768))
 17832  1C69  0021               	movlb	1	; select bank1
 17833  1C6A  00A0               	movwf	printf@f^(0+128)
 17834  1C6B  30A8               	movlw	high (STR_56| (0+32768))
 17835  1C6C  00A1               	movwf	(printf@f^(0+128)+1)
 17836  1C6D  318E  26CE  319C   	fcall	_printf
 17837  1C70                     l1333:	
 17838                           
 17839                           ;drv2665.c: 118: drv_write(0x0b, 0x00);
 17840  1C70  0020               	movlb	0	; select bank0
 17841  1C71  01C9               	clrf	drv_write@data
 17842  1C72  300B               	movlw	11
 17843  1C73  31A6  265B         	fcall	_drv_write
 17844  1C75  0008               	return
 17845  1C76                     __end_of_drv_write_DC:	
 17846                           
 17847                           	psect	text56
 17848  239F                     __ptext56:	
 17849 ;; *************** function _fifo_check *****************
 17850 ;; Defined at:
 17851 ;;		line 124 in file "drv2665.c"
 17852 ;; Parameters:    Size  Location     Type
 17853 ;;		None
 17854 ;; Auto vars:     Size  Location     Type
 17855 ;;  reply           1   23[BANK1 ] unsigned char 
 17856 ;; Return value:  Size  Location     Type
 17857 ;;		None               void
 17858 ;; Registers used:
 17859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17860 ;; Tracked objects:
 17861 ;;		On entry : 0/0
 17862 ;;		On exit  : 0/0
 17863 ;;		Unchanged: 0/0
 17864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17866 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17867 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17868 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17869 ;;Total ram usage:        2 bytes
 17870 ;; Hardware stack levels used:    1
 17871 ;; Hardware stack levels required when called:   13
 17872 ;; This function calls:
 17873 ;;		_drv_read
 17874 ;; This function is called by:
 17875 ;;		_drv_write_DC
 17876 ;; This function uses a non-reentrant model
 17877 ;;
 17878                           
 17879                           
 17880                           ;psect for function _fifo_check
 17881  239F                     _fifo_check:	
 17882                           
 17883                           ;drv2665.c: 126: uint8_t reply;
 17884                           ;drv2665.c: 127: reply = drv_read(0x00);
 17885                           
 17886                           ;incstack = 0
 17887 ;; hardware stack exceeded
 17888                           ; Regs used in _fifo_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17889  239F  3000               	movlw	0
 17890  23A0  319A  2217  31A3   	fcall	_drv_read
 17891  23A3  0021               	movlb	1	; select bank1
 17892  23A4  0835               	movf	?_drv_read^(0+128),w
 17893  23A5  0020               	movlb	0	; select bank0
 17894  23A6  00CD               	movwf	??_fifo_check
 17895  23A7  084D               	movf	??_fifo_check,w
 17896  23A8  0021               	movlb	1	; select bank1
 17897  23A9  00B7               	movwf	fifo_check@reply^(0+128)
 17898                           
 17899                           ;drv2665.c: 129: return !(reply & 0x01);
 17900  23AA  1C37               	btfss	fifo_check@reply^(0+128),0
 17901  23AB  2BAE               	goto	l7583
 17902  23AC  1003               	clrc
 17903  23AD  0008               	return
 17904  23AE                     l7583:	
 17905  23AE  1403               	setc
 17906  23AF  0008               	return
 17907  23B0                     __end_of_fifo_check:	
 17908                           
 17909                           	psect	text57
 17910  1A17                     __ptext57:	
 17911 ;; *************** function _drv_read *****************
 17912 ;; Defined at:
 17913 ;;		line 84 in file "drv2665.c"
 17914 ;; Parameters:    Size  Location     Type
 17915 ;;  reg             1    wreg     unsigned char 
 17916 ;; Auto vars:     Size  Location     Type
 17917 ;;  reg             1   43[BANK0 ] unsigned char 
 17918 ;;  buff            1   44[BANK0 ] unsigned char 
 17919 ;; Return value:  Size  Location     Type
 17920 ;;                  2   21[BANK1 ] int 
 17921 ;; Registers used:
 17922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17923 ;; Tracked objects:
 17924 ;;		On entry : 0/0
 17925 ;;		On exit  : 0/0
 17926 ;;		Unchanged: 0/0
 17927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17928 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17929 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17930 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17931 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17932 ;;Total ram usage:        6 bytes
 17933 ;; Hardware stack levels used:    1
 17934 ;; Hardware stack levels required when called:   12
 17935 ;; This function calls:
 17936 ;;		_i2c_masterOperation
 17937 ;;		_i2c_setBuffer
 17938 ;;		_printf
 17939 ;; This function is called by:
 17940 ;;		_commCheck
 17941 ;;		_fifo_check
 17942 ;; This function uses a non-reentrant model
 17943 ;;
 17944                           
 17945                           
 17946                           ;psect for function _drv_read
 17947  1A17                     _drv_read:	
 17948                           
 17949                           ;incstack = 0
 17950 ;; hardware stack exceeded
 17951                           ; Regs used in _drv_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17952                           ;drv_read@reg stored from wreg
 17953  1A17  0020               	movlb	0	; select bank0
 17954  1A18  00CB               	movwf	drv_read@reg
 17955                           
 17956                           ;drv2665.c: 86: char buff=0;
 17957  1A19  01CC               	clrf	drv_read@buff
 17958                           
 17959                           ;drv2665.c: 89: i2c_setBuffer(&reg, 1);
 17960  1A1A  304B               	movlw	low drv_read@reg
 17961  1A1B  00B1               	movwf	i2c_setBuffer@buffer
 17962  1A1C  3000               	movlw	high drv_read@reg
 17963  1A1D  00B2               	movwf	i2c_setBuffer@buffer+1
 17964  1A1E  3001               	movlw	1
 17965  1A1F  00B3               	movwf	i2c_setBuffer@bufferSize
 17966  1A20  3000               	movlw	0
 17967  1A21  00B4               	movwf	i2c_setBuffer@bufferSize+1
 17968  1A22  3187  27EB  319A   	fcall	_i2c_setBuffer
 17969                           
 17970                           ;drv2665.c: 90: if(i2c_masterOperation(0) != I2C_NOERR)
 17971  1A25  3000               	movlw	0
 17972  1A26  31A6  2637  319A   	fcall	_i2c_masterOperation
 17973  1A29  3A00               	xorlw	0
 17974  1A2A  1903               	skipnz
 17975  1A2B  2A34               	goto	l7533
 17976                           
 17977                           ;drv2665.c: 91: printf("drv_write error!\n");
 17978  1A2C  30CB               	movlw	low (STR_53| (0+32768))
 17979  1A2D  0021               	movlb	1	; select bank1
 17980  1A2E  00A0               	movwf	printf@f^(0+128)
 17981  1A2F  30A8               	movlw	high (STR_53| (0+32768))
 17982  1A30  00A1               	movwf	(printf@f^(0+128)+1)
 17983  1A31  318E  26CE  319A   	fcall	_printf
 17984  1A34                     l7533:	
 17985                           
 17986                           ;drv2665.c: 94: _delay((unsigned long)((100)*(1000000/4000000.0)));
 17987  1A34  3008               	movlw	8
 17988  1A35                     u9157:	
 17989  1A35  0B89               	decfsz	9,f
 17990  1A36  2A35               	goto	u9157
 17991  1A37  0000               	nop
 17992                           
 17993                           ;drv2665.c: 97: i2c_setBuffer(&buff, 1);
 17994  1A38  304C               	movlw	low drv_read@buff
 17995  1A39  0020               	movlb	0	; select bank0
 17996  1A3A  00B1               	movwf	i2c_setBuffer@buffer
 17997  1A3B  3000               	movlw	high drv_read@buff
 17998  1A3C  00B2               	movwf	i2c_setBuffer@buffer+1
 17999  1A3D  3001               	movlw	1
 18000  1A3E  00B3               	movwf	i2c_setBuffer@bufferSize
 18001  1A3F  3000               	movlw	0
 18002  1A40  00B4               	movwf	i2c_setBuffer@bufferSize+1
 18003  1A41  3187  27EB  319A   	fcall	_i2c_setBuffer
 18004                           
 18005                           ;drv2665.c: 99: if(i2c_masterOperation(1) != I2C_NOERR)
 18006  1A44  3001               	movlw	1
 18007  1A45  31A6  2637  319A   	fcall	_i2c_masterOperation
 18008  1A48  3A00               	xorlw	0
 18009  1A49  1903               	skipnz
 18010  1A4A  2A52               	goto	l7541
 18011                           
 18012                           ;drv2665.c: 100: printf("drv_read error!\n");
 18013  1A4B  30DD               	movlw	low (STR_55| (0+32768))
 18014  1A4C  0021               	movlb	1	; select bank1
 18015  1A4D  00A0               	movwf	printf@f^(0+128)
 18016  1A4E  30A8               	movlw	high (STR_55| (0+32768))
 18017  1A4F  00A1               	movwf	(printf@f^(0+128)+1)
 18018  1A50  318E  26CE         	fcall	_printf
 18019  1A52                     l7541:	
 18020                           
 18021                           ;drv2665.c: 102: return buff;
 18022  1A52  0020               	movlb	0	; select bank0
 18023  1A53  084C               	movf	drv_read@buff,w
 18024  1A54  00C9               	movwf	??_drv_read
 18025  1A55  01CA               	clrf	??_drv_read+1
 18026  1A56  0849               	movf	??_drv_read,w
 18027  1A57  0021               	movlb	1	; select bank1
 18028  1A58  00B5               	movwf	?_drv_read^(0+128)
 18029  1A59  0020               	movlb	0	; select bank0
 18030  1A5A  084A               	movf	??_drv_read+1,w
 18031  1A5B  0021               	movlb	1	; select bank1
 18032  1A5C  00B6               	movwf	(?_drv_read+1)^(0+128)
 18033  1A5D  0008               	return
 18034  1A5E                     __end_of_drv_read:	
 18035                           
 18036                           	psect	text58
 18037  265B                     __ptext58:	
 18038 ;; *************** function _drv_write *****************
 18039 ;; Defined at:
 18040 ;;		line 57 in file "drv2665.c"
 18041 ;; Parameters:    Size  Location     Type
 18042 ;;  reg             1    wreg     unsigned char 
 18043 ;;  data            1   41[BANK0 ] unsigned char 
 18044 ;; Auto vars:     Size  Location     Type
 18045 ;;  reg             1   43[BANK0 ] unsigned char 
 18046 ;;  buff            2   44[BANK0 ] unsigned char [2]
 18047 ;; Return value:  Size  Location     Type
 18048 ;;                  1    wreg      void 
 18049 ;; Registers used:
 18050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18051 ;; Tracked objects:
 18052 ;;		On entry : 0/0
 18053 ;;		On exit  : 0/0
 18054 ;;		Unchanged: 0/0
 18055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18056 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18057 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18058 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18059 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18060 ;;Total ram usage:        5 bytes
 18061 ;; Hardware stack levels used:    1
 18062 ;; Hardware stack levels required when called:   12
 18063 ;; This function calls:
 18064 ;;		_i2c_masterOperation
 18065 ;;		_i2c_setBuffer
 18066 ;;		_printf
 18067 ;; This function is called by:
 18068 ;;		_setDrvGain
 18069 ;;		_drv_init
 18070 ;;		_drv_reset
 18071 ;;		_drv_write_DC
 18072 ;;		_drv_outputSine
 18073 ;;		_drv_outputWave
 18074 ;; This function uses a non-reentrant model
 18075 ;;
 18076                           
 18077                           
 18078                           ;psect for function _drv_write
 18079  265B                     _drv_write:	
 18080                           
 18081                           ;incstack = 0
 18082                           ; Regs used in _drv_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18083                           ;drv_write@reg stored from wreg
 18084  265B  0020               	movlb	0	; select bank0
 18085  265C  00CB               	movwf	drv_write@reg
 18086                           
 18087                           ;drv2665.c: 62: uint8_t buff[2];
 18088                           ;drv2665.c: 64: buff[0] = reg;
 18089  265D  084B               	movf	drv_write@reg,w
 18090  265E  00CA               	movwf	??_drv_write
 18091  265F  084A               	movf	??_drv_write,w
 18092  2660  00CC               	movwf	drv_write@buff
 18093                           
 18094                           ;drv2665.c: 65: buff[1] = data;
 18095  2661  0849               	movf	drv_write@data,w
 18096  2662  00CA               	movwf	??_drv_write
 18097  2663  084A               	movf	??_drv_write,w
 18098  2664  00CD               	movwf	drv_write@buff+1
 18099                           
 18100                           ;drv2665.c: 68: i2c_setBuffer(buff, 2);
 18101  2665  304C               	movlw	low drv_write@buff
 18102  2666  00B1               	movwf	i2c_setBuffer@buffer
 18103  2667  3000               	movlw	high drv_write@buff
 18104  2668  00B2               	movwf	i2c_setBuffer@buffer+1
 18105  2669  3002               	movlw	2
 18106  266A  00B3               	movwf	i2c_setBuffer@bufferSize
 18107  266B  3000               	movlw	0
 18108  266C  00B4               	movwf	i2c_setBuffer@bufferSize+1
 18109  266D  3187  27EB  31A6   	fcall	_i2c_setBuffer
 18110                           
 18111                           ;drv2665.c: 69: if(i2c_masterOperation(0) != I2C_NOERR)
 18112  2670  3000               	movlw	0
 18113  2671  31A6  2637  31A6   	fcall	_i2c_masterOperation
 18114  2674  3A00               	xorlw	0
 18115  2675  1903               	skipnz
 18116  2676  0008               	return
 18117                           
 18118                           ;drv2665.c: 70: printf("drv_write error!\n");
 18119  2677  30CB               	movlw	low (STR_53| (0+32768))
 18120  2678  0021               	movlb	1	; select bank1
 18121  2679  00A0               	movwf	printf@f^(0+128)
 18122  267A  30A8               	movlw	high (STR_53| (0+32768))
 18123  267B  00A1               	movwf	(printf@f^(0+128)+1)
 18124  267C  318E  26CE         	fcall	_printf
 18125  267E  0008               	return
 18126  267F                     __end_of_drv_write:	
 18127                           
 18128                           	psect	text59
 18129  0ECE                     __ptext59:	
 18130 ;; *************** function _printf *****************
 18131 ;; Defined at:
 18132 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 18133 ;; Parameters:    Size  Location     Type
 18134 ;;  f               2    0[BANK1 ] PTR const unsigned char 
 18135 ;;		 -> STR_82(23), STR_81(3), STR_56(17), STR_55(17), 
 18136 ;;		 -> STR_54(18), STR_53(18), STR_52(17), STR_51(28), 
 18137 ;;		 -> STR_50(9), STR_49(9), STR_48(25), STR_47(11), 
 18138 ;;		 -> STR_46(8), STR_45(8), STR_44(8), STR_43(31), 
 18139 ;;		 -> STR_42(11), STR_41(8), STR_40(8), STR_39(8), 
 18140 ;;		 -> STR_38(26), STR_37(30), STR_36(2), STR_35(2), 
 18141 ;;		 -> STR_34(2), STR_33(2), STR_32(4), STR_31(2), 
 18142 ;;		 -> STR_30(4), STR_29(3), STR_28(3), STR_27(3), 
 18143 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 18144 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(3), 
 18145 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(4), 
 18146 ;;		 -> STR_14(3), STR_13(16), STR_12(11), STR_11(16), 
 18147 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(8), 
 18148 ;;		 -> STR_6(13), STR_5(15), STR_4(16), STR_3(2), 
 18149 ;;		 -> STR_2(4), STR_1(4), 
 18150 ;; Auto vars:     Size  Location     Type
 18151 ;;  val             4   14[BANK1 ] unsigned long 
 18152 ;;  tmpval          4    0        struct .
 18153 ;;  prec            2   12[BANK1 ] int 
 18154 ;;  cp              2    0        PTR const unsigned char 
 18155 ;;  len             2    0        unsigned int 
 18156 ;;  c               1   20[BANK1 ] char 
 18157 ;;  ap              1   19[BANK1 ] PTR void [1]
 18158 ;;		 -> ?_printf(2), 
 18159 ;;  flag            1   18[BANK1 ] unsigned char 
 18160 ;; Return value:  Size  Location     Type
 18161 ;;                  2    0[BANK1 ] int 
 18162 ;; Registers used:
 18163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18164 ;; Tracked objects:
 18165 ;;		On entry : 0/0
 18166 ;;		On exit  : 0/0
 18167 ;;		Unchanged: 0/0
 18168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18169 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18170 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18171 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18172 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18173 ;;Total ram usage:       21 bytes
 18174 ;; Hardware stack levels used:    1
 18175 ;; Hardware stack levels required when called:    8
 18176 ;; This function calls:
 18177 ;;		___lldiv
 18178 ;;		___llmod
 18179 ;;		_putch
 18180 ;; This function is called by:
 18181 ;;		_LED_test_openshort
 18182 ;;		_LED_getData
 18183 ;;		_main
 18184 ;;		_main_initialize
 18185 ;;		_doMove
 18186 ;;		_startRelMove
 18187 ;;		_startAbsMove
 18188 ;;		_doAbsMove
 18189 ;;		_doRelMove
 18190 ;;		_zeroPosition
 18191 ;;		_getPosition
 18192 ;;		_setDrvPeak
 18193 ;;		_setDrvGain
 18194 ;;		_setDrvPiezoOnTime
 18195 ;;		_setHeaterPreTime
 18196 ;;		_setHeaterPostTime
 18197 ;;		_setLEDBrightnessRange
 18198 ;;		_setLEDPwr
 18199 ;;		_setHeaterToggle
 18200 ;;		_timedActiveHeatOn
 18201 ;;		_setActive
 18202 ;;		_setMoveMask
 18203 ;;		_getActive
 18204 ;;		_getMoveMask
 18205 ;;		_getMotionStatus
 18206 ;;		_commCheck
 18207 ;;		_drv_init
 18208 ;;		_drv_write
 18209 ;;		_drv_read
 18210 ;;		_drv_write_DC
 18211 ;;		_execCmd
 18212 ;;		_stop
 18213 ;; This function uses a non-reentrant model
 18214 ;;
 18215                           
 18216                           
 18217                           ;psect for function _printf
 18218  0ECE                     _printf:	
 18219                           
 18220                           ;doprnt.c: 466: va_list ap;
 18221                           ;doprnt.c: 499: signed char c;
 18222                           ;doprnt.c: 504: int prec;
 18223                           ;doprnt.c: 508: unsigned char flag;
 18224                           ;doprnt.c: 523: union {
 18225                           ;doprnt.c: 524: unsigned long vd;
 18226                           ;doprnt.c: 525: double integ;
 18227                           ;doprnt.c: 526: } tmpval;
 18228                           ;doprnt.c: 528: unsigned long val;
 18229                           ;doprnt.c: 529: unsigned len;
 18230                           ;doprnt.c: 530: const char * cp;
 18231                           ;doprnt.c: 533: *ap = __va_start();
 18232                           
 18233                           ;incstack = 0
 18234                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18235  0ECE  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 18236  0ECF  0021               	movlb	1	; select bank1
 18237  0ED0  00A6               	movwf	??_printf^(0+128)
 18238  0ED1  0826               	movf	??_printf^(0+128),w
 18239  0ED2  00B3               	movwf	printf@ap^(0+128)
 18240  0ED3                     l7465:	
 18241                           ;doprnt.c: 536: while(c = *f++) {
 18242                           
 18243  0ED3  0021               	movlb	1	; select bank1
 18244  0ED4  0821               	movf	(printf@f+1)^(0+128),w
 18245  0ED5  00A7               	movwf	(??_printf^(0+128)+1)
 18246  0ED6  0820               	movf	printf@f^(0+128),w
 18247  0ED7  00A6               	movwf	??_printf^(0+128)
 18248  0ED8  0AA0               	incf	printf@f^(0+128),f
 18249  0ED9  1903               	skipnz
 18250  0EDA  0AA1               	incf	(printf@f+1)^(0+128),f
 18251  0EDB  0826               	movf	??_printf^(0+128),w
 18252  0EDC  0084               	movwf	4
 18253  0EDD  0827               	movf	(??_printf+1)^(0+128),w
 18254  0EDE  0085               	movwf	5
 18255  0EDF  0800               	movf	0,w	;code access
 18256  0EE0  00A8               	movwf	(??_printf+2)^(0+128)
 18257  0EE1  0828               	movf	(??_printf+2)^(0+128),w
 18258  0EE2  00B4               	movwf	printf@c^(0+128)
 18259  0EE3  0834               	movf	printf@c^(0+128),w
 18260  0EE4  1903               	btfsc	3,2
 18261  0EE5  0008               	return
 18262                           
 18263                           ;doprnt.c: 538: if(c != '%')
 18264  0EE6  3025               	movlw	37
 18265  0EE7  0634               	xorwf	printf@c^(0+128),w
 18266  0EE8  1903               	btfsc	3,2
 18267  0EE9  2EEF               	goto	l7411
 18268                           
 18269                           ;doprnt.c: 540: {
 18270                           ;doprnt.c: 541: (putch(c) );
 18271  0EEA  0834               	movf	printf@c^(0+128),w
 18272  0EEB  31A2  2241  318E   	fcall	_putch
 18273                           
 18274                           ;doprnt.c: 542: continue;
 18275  0EEE  2ED3               	goto	l7465
 18276  0EEF                     l7411:	
 18277                           
 18278                           ;doprnt.c: 543: }
 18279                           ;doprnt.c: 548: flag = 0;
 18280  0EEF  0021               	movlb	1	; select bank1
 18281  0EF0  01B2               	clrf	printf@flag^(0+128)
 18282                           
 18283                           ;doprnt.c: 635: switch(c = *f++) {
 18284                           
 18285                           ;doprnt.c: 633: loop:
 18286  0EF1  2EF6               	goto	l7415
 18287  0EF2                     l1486:	
 18288                           ;doprnt.c: 641: case 'l':
 18289                           
 18290                           ;doprnt.c: 638: goto alldone;
 18291                           
 18292                           ;doprnt.c: 637: case 0:
 18293                           
 18294                           
 18295                           ;doprnt.c: 643: flag |= 0x10;
 18296  0EF2  1632               	bsf	printf@flag^(0+128),4
 18297                           
 18298                           ;doprnt.c: 644: goto loop;
 18299  0EF3  2EF6               	goto	l7415
 18300  0EF4                     l1491:	
 18301                           ;doprnt.c: 817: case 'u':
 18302                           
 18303                           ;doprnt.c: 813: continue;
 18304                           
 18305                           ;doprnt.c: 802: default:
 18306                           
 18307                           ;doprnt.c: 698: case 'i':
 18308                           ;doprnt.c: 699: break;
 18309                           
 18310                           ;doprnt.c: 697: case 'd':
 18311                           
 18312                           
 18313                           ;doprnt.c: 818: flag |= 0x40;
 18314  0EF4  1732               	bsf	printf@flag^(0+128),6
 18315                           
 18316                           ;doprnt.c: 822: }
 18317                           
 18318                           ;doprnt.c: 819: break;
 18319  0EF5  2F13               	goto	l1489
 18320  0EF6                     l7415:	
 18321  0EF6  0821               	movf	(printf@f+1)^(0+128),w
 18322  0EF7  00A7               	movwf	(??_printf^(0+128)+1)
 18323  0EF8  0820               	movf	printf@f^(0+128),w
 18324  0EF9  00A6               	movwf	??_printf^(0+128)
 18325  0EFA  0AA0               	incf	printf@f^(0+128),f
 18326  0EFB  1903               	skipnz
 18327  0EFC  0AA1               	incf	(printf@f+1)^(0+128),f
 18328  0EFD  0826               	movf	??_printf^(0+128),w
 18329  0EFE  0084               	movwf	4
 18330  0EFF  0827               	movf	(??_printf+1)^(0+128),w
 18331  0F00  0085               	movwf	5
 18332  0F01  0800               	movf	0,w	;code access
 18333  0F02  00B4               	movwf	printf@c^(0+128)
 18334                           
 18335                           ; Switch size 1, requested type "space"
 18336                           ; Number of cases is 5, Range of values is 0 to 117
 18337                           ; switch strategies available:
 18338                           ; Name         Instructions Cycles
 18339                           ; simple_byte           16     9 (average)
 18340                           ; direct_byte          242     6 (fixed)
 18341                           ; jumptable            260     6 (fixed)
 18342                           ;	Chosen strategy is simple_byte
 18343  0F03  3A00               	xorlw	0	; case 0
 18344  0F04  1903               	skipnz
 18345  0F05  2FFF               	goto	l1507
 18346  0F06  3A64               	xorlw	100	; case 100
 18347  0F07  1903               	skipnz
 18348  0F08  2F13               	goto	l1489
 18349  0F09  3A0D               	xorlw	13	; case 105
 18350  0F0A  1903               	skipnz
 18351  0F0B  2F13               	goto	l1489
 18352  0F0C  3A05               	xorlw	5	; case 108
 18353  0F0D  1903               	skipnz
 18354  0F0E  2EF2               	goto	l1486
 18355  0F0F  3A19               	xorlw	25	; case 117
 18356  0F10  1903               	skipnz
 18357  0F11  2EF4               	goto	l1491
 18358  0F12  2ED3               	goto	l7465
 18359  0F13                     l1489:	
 18360                           
 18361                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 18362  0F13  1B32               	btfsc	printf@flag^(0+128),6
 18363  0F14  2F4A               	goto	l1492
 18364                           
 18365                           ;doprnt.c: 1253: {
 18366                           ;doprnt.c: 1255: if(flag & 0x10)
 18367  0F15  1E32               	btfss	printf@flag^(0+128),4
 18368  0F16  2F24               	goto	l7423
 18369                           
 18370                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 18371  0F17  0833               	movf	printf@ap^(0+128),w
 18372  0F18  0086               	movwf	6
 18373  0F19  0187               	clrf	7
 18374  0F1A  3F40               	moviw [0]fsr1
 18375  0F1B  00AE               	movwf	printf@val^(0+128)
 18376  0F1C  3F41               	moviw [1]fsr1
 18377  0F1D  00AF               	movwf	(printf@val+1)^(0+128)
 18378  0F1E  3F42               	moviw [2]fsr1
 18379  0F1F  00B0               	movwf	(printf@val+2)^(0+128)
 18380  0F20  3F43               	moviw [3]fsr1
 18381  0F21  00B1               	movwf	(printf@val+3)^(0+128)
 18382  0F22  3004               	movlw	4
 18383  0F23  2F35               	goto	L35
 18384  0F24                     l7423:	
 18385                           
 18386                           ;doprnt.c: 1257: else
 18387                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 18388  0F24  0833               	movf	printf@ap^(0+128),w
 18389  0F25  0086               	movwf	6
 18390  0F26  0187               	clrf	7
 18391  0F27  3F40               	moviw [0]fsr1
 18392  0F28  00A6               	movwf	??_printf^(0+128)
 18393  0F29  3F41               	moviw [1]fsr1
 18394  0F2A  00A7               	movwf	(??_printf^(0+128)+1)
 18395  0F2B  0826               	movf	??_printf^(0+128),w
 18396  0F2C  00AE               	movwf	printf@val^(0+128)
 18397  0F2D  0827               	movf	(??_printf+1)^(0+128),w
 18398  0F2E  00AF               	movwf	(printf@val+1)^(0+128)
 18399  0F2F  0D89               	rlf	9,f
 18400  0F30  3B89               	subwfb	9,f
 18401  0F31  0989               	comf	9,f
 18402  0F32  00B0               	movwf	(printf@val+2)^(0+128)
 18403  0F33  00B1               	movwf	(printf@val+3)^(0+128)
 18404  0F34  3002               	movlw	2
 18405  0F35                     L35:	
 18406  0F35  00A6               	movwf	??_printf^(0+128)
 18407  0F36  0826               	movf	??_printf^(0+128),w
 18408  0F37  07B3               	addwf	printf@ap^(0+128),f
 18409                           
 18410                           ;doprnt.c: 1261: if((long)val < 0) {
 18411  0F38  1FB1               	btfss	(printf@val+3)^(0+128),7
 18412  0F39  2F6A               	goto	l7441
 18413                           
 18414                           ;doprnt.c: 1262: flag |= 0x03;
 18415  0F3A  3003               	movlw	3
 18416  0F3B  00A6               	movwf	??_printf^(0+128)
 18417  0F3C  0826               	movf	??_printf^(0+128),w
 18418  0F3D  04B2               	iorwf	printf@flag^(0+128),f
 18419                           
 18420                           ;doprnt.c: 1263: val = -val;
 18421  0F3E  09AE               	comf	printf@val^(0+128),f
 18422  0F3F  09AF               	comf	(printf@val+1)^(0+128),f
 18423  0F40  09B0               	comf	(printf@val+2)^(0+128),f
 18424  0F41  09B1               	comf	(printf@val+3)^(0+128),f
 18425  0F42  0AAE               	incf	printf@val^(0+128),f
 18426  0F43  1903               	skipnz
 18427  0F44  0AAF               	incf	(printf@val+1)^(0+128),f
 18428  0F45  1903               	skipnz
 18429  0F46  0AB0               	incf	(printf@val+2)^(0+128),f
 18430  0F47  1903               	skipnz
 18431  0F48  0AB1               	incf	(printf@val+3)^(0+128),f
 18432                           
 18433                           ;doprnt.c: 1264: }
 18434                           ;doprnt.c: 1266: }
 18435  0F49  2F6A               	goto	l7441
 18436  0F4A                     l1492:	
 18437                           
 18438                           ;doprnt.c: 1268: else
 18439                           ;doprnt.c: 1273: {
 18440                           ;doprnt.c: 1281: if(flag & 0x10)
 18441  0F4A  1E32               	btfss	printf@flag^(0+128),4
 18442  0F4B  2F59               	goto	l7437
 18443                           
 18444                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 18445  0F4C  0833               	movf	printf@ap^(0+128),w
 18446  0F4D  0086               	movwf	6
 18447  0F4E  0187               	clrf	7
 18448  0F4F  3F40               	moviw [0]fsr1
 18449  0F50  00AE               	movwf	printf@val^(0+128)
 18450  0F51  3F41               	moviw [1]fsr1
 18451  0F52  00AF               	movwf	(printf@val+1)^(0+128)
 18452  0F53  3F42               	moviw [2]fsr1
 18453  0F54  00B0               	movwf	(printf@val+2)^(0+128)
 18454  0F55  3F43               	moviw [3]fsr1
 18455  0F56  00B1               	movwf	(printf@val+3)^(0+128)
 18456  0F57  3004               	movlw	4
 18457  0F58  2F67               	goto	L36
 18458  0F59                     l7437:	
 18459                           
 18460                           ;doprnt.c: 1283: else
 18461                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 18462  0F59  0833               	movf	printf@ap^(0+128),w
 18463  0F5A  0086               	movwf	6
 18464  0F5B  0187               	clrf	7
 18465  0F5C  3F40               	moviw [0]fsr1
 18466  0F5D  00A6               	movwf	??_printf^(0+128)
 18467  0F5E  3F41               	moviw [1]fsr1
 18468  0F5F  00A7               	movwf	(??_printf^(0+128)+1)
 18469  0F60  0826               	movf	??_printf^(0+128),w
 18470  0F61  00AE               	movwf	printf@val^(0+128)
 18471  0F62  0827               	movf	(??_printf+1)^(0+128),w
 18472  0F63  00AF               	movwf	(printf@val^(0+128)+1)
 18473  0F64  01B0               	clrf	(printf@val^(0+128)+2)
 18474  0F65  01B1               	clrf	(printf@val^(0+128)+3)
 18475  0F66  3002               	movlw	2
 18476  0F67                     L36:	
 18477  0F67  00A6               	movwf	??_printf^(0+128)
 18478  0F68  0826               	movf	??_printf^(0+128),w
 18479  0F69  07B3               	addwf	printf@ap^(0+128),f
 18480  0F6A                     l7441:	
 18481                           
 18482                           ;doprnt.c: 1287: }
 18483                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 18484  0F6A  01B4               	clrf	printf@c^(0+128)
 18485  0F6B  0AB4               	incf	printf@c^(0+128),f
 18486  0F6C  300A               	movlw	10
 18487  0F6D  0634               	xorwf	printf@c^(0+128),w
 18488  0F6E  1903               	btfsc	3,2
 18489  0F6F  2F9D               	goto	l7453
 18490  0F70                     l7447:	
 18491                           
 18492                           ;doprnt.c: 1306: if(val < dpowers[c])
 18493  0F70  0834               	movf	printf@c^(0+128),w
 18494  0F71  00A6               	movwf	??_printf^(0+128)
 18495  0F72  01A7               	clrf	(??_printf^(0+128)+1)
 18496  0F73  35A6               	lslf	??_printf^(0+128),f
 18497  0F74  0DA7               	rlf	(??_printf^(0+128)+1),f
 18498  0F75  35A6               	lslf	??_printf^(0+128),f
 18499  0F76  0DA7               	rlf	(??_printf^(0+128)+1),f
 18500  0F77  3000               	movlw	low (_dpowers| (0+32768))
 18501  0F78  0726               	addwf	??_printf^(0+128),w
 18502  0F79  0084               	movwf	4
 18503  0F7A  30A8               	movlw	high (_dpowers| (0+32768))
 18504  0F7B  3D27               	addwfc	(??_printf+1)^(0+128),w
 18505  0F7C  0085               	movwf	5
 18506  0F7D  3F00               	moviw [0]fsr0
 18507  0F7E  00A8               	movwf	(??_printf+2)^(0+128)
 18508  0F7F  3F01               	moviw [1]fsr0
 18509  0F80  00A9               	movwf	((??_printf+2)^(0+128)+1)
 18510  0F81  3F02               	moviw [2]fsr0
 18511  0F82  00AA               	movwf	((??_printf+2)^(0+128)+2)
 18512  0F83  3F03               	moviw [3]fsr0
 18513  0F84  00AB               	movwf	((??_printf+2)^(0+128)+3)
 18514  0F85  082B               	movf	(??_printf+5)^(0+128),w
 18515  0F86  0231               	subwf	(printf@val+3)^(0+128),w
 18516  0F87  1D03               	skipz
 18517  0F88  2F93               	goto	u7115
 18518  0F89  082A               	movf	(??_printf+4)^(0+128),w
 18519  0F8A  0230               	subwf	(printf@val+2)^(0+128),w
 18520  0F8B  1D03               	skipz
 18521  0F8C  2F93               	goto	u7115
 18522  0F8D  0829               	movf	(??_printf+3)^(0+128),w
 18523  0F8E  022F               	subwf	(printf@val+1)^(0+128),w
 18524  0F8F  1D03               	skipz
 18525  0F90  2F93               	goto	u7115
 18526  0F91  0828               	movf	(??_printf+2)^(0+128),w
 18527  0F92  022E               	subwf	printf@val^(0+128),w
 18528  0F93                     u7115:	
 18529  0F93  1C03               	btfss	3,0
 18530  0F94  2F9D               	goto	l7453
 18531                           
 18532                           ;doprnt.c: 1307: break;
 18533  0F95  3001               	movlw	1
 18534  0F96  00A6               	movwf	??_printf^(0+128)
 18535  0F97  0826               	movf	??_printf^(0+128),w
 18536  0F98  07B4               	addwf	printf@c^(0+128),f
 18537  0F99  300A               	movlw	10
 18538  0F9A  0634               	xorwf	printf@c^(0+128),w
 18539  0F9B  1D03               	btfss	3,2
 18540  0F9C  2F70               	goto	l7447
 18541  0F9D                     l7453:	
 18542                           
 18543                           ;doprnt.c: 1422: {
 18544                           ;doprnt.c: 1438: if(flag & 0x03)
 18545  0F9D  0832               	movf	printf@flag^(0+128),w
 18546  0F9E  3903               	andlw	3
 18547  0F9F  1903               	btfsc	3,2
 18548  0FA0  2FA5               	goto	l7457
 18549                           
 18550                           ;doprnt.c: 1439: (putch('-') );
 18551  0FA1  302D               	movlw	45
 18552  0FA2  31A2  2241  318E   	fcall	_putch
 18553  0FA5                     l7457:	
 18554                           
 18555                           ;doprnt.c: 1469: }
 18556                           ;doprnt.c: 1472: prec = c;
 18557  0FA5  0021               	movlb	1	; select bank1
 18558  0FA6  0834               	movf	printf@c^(0+128),w
 18559  0FA7  00AC               	movwf	printf@prec^(0+128)
 18560  0FA8  01AD               	clrf	(printf@prec+1)^(0+128)
 18561  0FA9  1BAC               	btfsc	printf@prec^(0+128),7
 18562  0FAA  03AD               	decf	(printf@prec+1)^(0+128),f
 18563  0FAB                     l7463:	
 18564                           ;doprnt.c: 1474: while(prec--) {
 18565                           
 18566  0FAB  30FF               	movlw	255
 18567  0FAC  0021               	movlb	1	; select bank1
 18568  0FAD  07AC               	addwf	printf@prec^(0+128),f
 18569  0FAE  30FF               	movlw	255
 18570  0FAF  3DAD               	addwfc	(printf@prec+1)^(0+128),f
 18571  0FB0  0A2C               	incf	printf@prec^(0+128),w
 18572  0FB1  1903               	btfsc	3,2
 18573  0FB2  0A2D               	incf	(printf@prec+1)^(0+128),w
 18574  0FB3  1903               	btfsc	3,2
 18575  0FB4  2ED3               	goto	l7465
 18576                           
 18577                           ;doprnt.c: 1478: {
 18578                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 18579  0FB5  3000               	movlw	0
 18580  0FB6  0020               	movlb	0	; select bank0
 18581  0FB7  00C2               	movwf	___llmod@divisor+3
 18582  0FB8  3000               	movlw	0
 18583  0FB9  00C1               	movwf	___llmod@divisor+2
 18584  0FBA  3000               	movlw	0
 18585  0FBB  00C0               	movwf	___llmod@divisor+1
 18586  0FBC  300A               	movlw	10
 18587  0FBD  00BF               	movwf	___llmod@divisor
 18588  0FBE  0021               	movlb	1	; select bank1
 18589  0FBF  082D               	movf	(printf@prec+1)^(0+128),w
 18590  0FC0  0085               	movwf	5
 18591  0FC1  082C               	movf	printf@prec^(0+128),w
 18592  0FC2  0084               	movwf	4
 18593  0FC3  3584               	lslf	4,f
 18594  0FC4  0D85               	rlf	5,f
 18595  0FC5  3584               	lslf	4,f
 18596  0FC6  0D85               	rlf	5,f
 18597  0FC7  3000               	movlw	low (_dpowers| (0+32768))
 18598  0FC8  0784               	addwf	4,f
 18599  0FC9  30A8               	movlw	high (_dpowers| (0+32768))
 18600  0FCA  3D85               	addwfc	5,f
 18601  0FCB  3F00               	moviw [0]fsr0
 18602  0FCC  0020               	movlb	0	; select bank0
 18603  0FCD  00B1               	movwf	___lldiv@divisor
 18604  0FCE  3F01               	moviw [1]fsr0
 18605  0FCF  00B2               	movwf	___lldiv@divisor+1
 18606  0FD0  3F02               	moviw [2]fsr0
 18607  0FD1  00B3               	movwf	___lldiv@divisor+2
 18608  0FD2  3F03               	moviw [3]fsr0
 18609  0FD3  00B4               	movwf	___lldiv@divisor+3
 18610  0FD4  0021               	movlb	1	; select bank1
 18611  0FD5  0831               	movf	(printf@val+3)^(0+128),w
 18612  0FD6  0020               	movlb	0	; select bank0
 18613  0FD7  00B8               	movwf	___lldiv@dividend+3
 18614  0FD8  0021               	movlb	1	; select bank1
 18615  0FD9  0830               	movf	(printf@val+2)^(0+128),w
 18616  0FDA  0020               	movlb	0	; select bank0
 18617  0FDB  00B7               	movwf	___lldiv@dividend+2
 18618  0FDC  0021               	movlb	1	; select bank1
 18619  0FDD  082F               	movf	(printf@val+1)^(0+128),w
 18620  0FDE  0020               	movlb	0	; select bank0
 18621  0FDF  00B6               	movwf	___lldiv@dividend+1
 18622  0FE0  0021               	movlb	1	; select bank1
 18623  0FE1  082E               	movf	printf@val^(0+128),w
 18624  0FE2  0020               	movlb	0	; select bank0
 18625  0FE3  00B5               	movwf	___lldiv@dividend
 18626  0FE4  319D  251A  318E   	fcall	___lldiv
 18627  0FE7  0020               	movlb	0	; select bank0
 18628  0FE8  0834               	movf	?___lldiv+3,w
 18629  0FE9  00C6               	movwf	___llmod@dividend+3
 18630  0FEA  0833               	movf	?___lldiv+2,w
 18631  0FEB  00C5               	movwf	___llmod@dividend+2
 18632  0FEC  0832               	movf	?___lldiv+1,w
 18633  0FED  00C4               	movwf	___llmod@dividend+1
 18634  0FEE  0831               	movf	?___lldiv,w
 18635  0FEF  00C3               	movwf	___llmod@dividend
 18636  0FF0  3199  214D  318E   	fcall	___llmod
 18637  0FF3  0020               	movlb	0	; select bank0
 18638  0FF4  083F               	movf	?___llmod,w
 18639  0FF5  3E30               	addlw	48
 18640  0FF6  0021               	movlb	1	; select bank1
 18641  0FF7  00A6               	movwf	??_printf^(0+128)
 18642  0FF8  0826               	movf	??_printf^(0+128),w
 18643  0FF9  00B4               	movwf	printf@c^(0+128)
 18644                           
 18645                           ;doprnt.c: 1523: }
 18646                           ;doprnt.c: 1524: (putch(c) );
 18647  0FFA  0834               	movf	printf@c^(0+128),w
 18648  0FFB  31A2  2241  318E   	fcall	_putch
 18649  0FFE  2FAB               	goto	l7463
 18650  0FFF                     l1507:	
 18651                           ;doprnt.c: 1540: return 0;
 18652                           ;	Return value of _printf is never used
 18653                           
 18654                           ;doprnt.c: 1525: }
 18655                           ;doprnt.c: 1533: }
 18656                           ;doprnt.c: 1535: alldone:
 18657                           
 18658  0FFF  0008               	return
 18659  1000                     __end_of_printf:	
 18660                           
 18661                           	psect	text60
 18662  2241                     __ptext60:	
 18663 ;; *************** function _putch *****************
 18664 ;; Defined at:
 18665 ;;		line 156 in file "mcc_generated_files/eusart.c"
 18666 ;; Parameters:    Size  Location     Type
 18667 ;;  txData          1    wreg     unsigned char 
 18668 ;; Auto vars:     Size  Location     Type
 18669 ;;  txData          1   19[BANK0 ] unsigned char 
 18670 ;; Return value:  Size  Location     Type
 18671 ;;                  1    wreg      void 
 18672 ;; Registers used:
 18673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18674 ;; Tracked objects:
 18675 ;;		On entry : 0/0
 18676 ;;		On exit  : 0/0
 18677 ;;		Unchanged: 0/0
 18678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18680 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18682 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18683 ;;Total ram usage:        1 bytes
 18684 ;; Hardware stack levels used:    1
 18685 ;; Hardware stack levels required when called:    7
 18686 ;; This function calls:
 18687 ;;		_EUSART_Write
 18688 ;; This function is called by:
 18689 ;;		_printf
 18690 ;; This function uses a non-reentrant model
 18691 ;;
 18692                           
 18693                           
 18694                           ;psect for function _putch
 18695  2241                     _putch:	
 18696                           
 18697                           ;incstack = 0
 18698                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18699                           ;putch@txData stored from wreg
 18700  2241  0020               	movlb	0	; select bank0
 18701  2242  00B3               	movwf	putch@txData
 18702                           
 18703                           ;eusart.c: 158: EUSART_Write(txData);
 18704  2243  0833               	movf	putch@txData,w
 18705  2244  31A6  267F         	fcall	_EUSART_Write
 18706  2246  0008               	return
 18707  2247                     __end_of_putch:	
 18708                           
 18709                           	psect	text61
 18710  267F                     __ptext61:	
 18711 ;; *************** function _EUSART_Write *****************
 18712 ;; Defined at:
 18713 ;;		line 128 in file "mcc_generated_files/eusart.c"
 18714 ;; Parameters:    Size  Location     Type
 18715 ;;  txData          1    wreg     unsigned char 
 18716 ;; Auto vars:     Size  Location     Type
 18717 ;;  txData          1   18[BANK0 ] unsigned char 
 18718 ;; Return value:  Size  Location     Type
 18719 ;;                  1    wreg      void 
 18720 ;; Registers used:
 18721 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18722 ;; Tracked objects:
 18723 ;;		On entry : 0/0
 18724 ;;		On exit  : 0/0
 18725 ;;		Unchanged: 0/0
 18726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18728 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18729 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18730 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18731 ;;Total ram usage:        2 bytes
 18732 ;; Hardware stack levels used:    1
 18733 ;; Hardware stack levels required when called:    6
 18734 ;; This function calls:
 18735 ;;		Nothing
 18736 ;; This function is called by:
 18737 ;;		_putch
 18738 ;; This function uses a non-reentrant model
 18739 ;;
 18740                           
 18741                           
 18742                           ;psect for function _EUSART_Write
 18743  267F                     _EUSART_Write:	
 18744                           
 18745                           ;incstack = 0
 18746                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 18747                           ;EUSART_Write@txData stored from wreg
 18748  267F  0020               	movlb	0	; select bank0
 18749  2680  00B2               	movwf	EUSART_Write@txData
 18750  2681                     l7281:	
 18751                           ;eusart.c: 131: {
 18752                           
 18753                           ;eusart.c: 130: while(0 == eusartTxBufferRemaining)
 18754                           
 18755  2681  085E               	movf	_eusartTxBufferRemaining,w	;volatile
 18756  2682  1903               	btfsc	3,2
 18757  2683  2E81               	goto	l7281
 18758                           
 18759                           ;eusart.c: 132: }
 18760                           ;eusart.c: 134: if(0 == PIE1bits.TXIE)
 18761  2684  0021               	movlb	1	; select bank1
 18762  2685  1A11               	btfsc	17,4	;volatile
 18763  2686  2E8C               	goto	l424
 18764                           
 18765                           ;eusart.c: 135: {
 18766                           ;eusart.c: 136: TX1REG = txData;
 18767  2687  0020               	movlb	0	; select bank0
 18768  2688  0832               	movf	EUSART_Write@txData,w
 18769  2689  0023               	movlb	3	; select bank3
 18770  268A  009A               	movwf	26	;volatile
 18771                           
 18772                           ;eusart.c: 137: }
 18773  268B  2EA1               	goto	l7295
 18774  268C                     l424:	
 18775                           
 18776                           ;eusart.c: 138: else
 18777                           ;eusart.c: 139: {
 18778                           ;eusart.c: 140: PIE1bits.TXIE = 0;
 18779  268C  1211               	bcf	17,4	;volatile
 18780                           
 18781                           ;eusart.c: 141: eusartTxBuffer[eusartTxHead++] = txData;
 18782  268D  0020               	movlb	0	; select bank0
 18783  268E  0832               	movf	EUSART_Write@txData,w
 18784  268F  00B1               	movwf	??_EUSART_Write
 18785  2690  087D               	movf	_eusartTxHead,w
 18786  2691  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 18787  2692  0086               	movwf	6
 18788  2693  3001               	movlw	1	; select bank3/4
 18789  2694  0087               	movwf	7
 18790  2695  0831               	movf	??_EUSART_Write,w
 18791  2696  0081               	movwf	1
 18792  2697  3001               	movlw	1
 18793  2698  00B1               	movwf	??_EUSART_Write
 18794  2699  0831               	movf	??_EUSART_Write,w
 18795  269A  07FD               	addwf	_eusartTxHead,f	;volatile
 18796                           
 18797                           ;eusart.c: 142: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 18798  269B  3008               	movlw	8
 18799  269C  027D               	subwf	_eusartTxHead,w	;volatile
 18800  269D  1803               	btfsc	3,0
 18801                           
 18802                           ;eusart.c: 143: {
 18803                           ;eusart.c: 144: eusartTxHead = 0;
 18804  269E  01FD               	clrf	_eusartTxHead	;volatile
 18805                           
 18806                           ;eusart.c: 145: }
 18807                           ;eusart.c: 146: eusartTxBufferRemaining--;
 18808  269F  3001               	movlw	1
 18809  26A0  02DE               	subwf	_eusartTxBufferRemaining,f	;volatile
 18810  26A1                     l7295:	
 18811                           
 18812                           ;eusart.c: 147: }
 18813                           ;eusart.c: 148: PIE1bits.TXIE = 1;
 18814  26A1  0021               	movlb	1	; select bank1
 18815  26A2  1611               	bsf	17,4	;volatile
 18816  26A3  0008               	return
 18817  26A4                     __end_of_EUSART_Write:	
 18818                           
 18819                           	psect	text62
 18820  194D                     __ptext62:	
 18821 ;; *************** function ___llmod *****************
 18822 ;; Defined at:
 18823 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 18824 ;; Parameters:    Size  Location     Type
 18825 ;;  divisor         4   31[BANK0 ] unsigned long 
 18826 ;;  dividend        4   35[BANK0 ] unsigned long 
 18827 ;; Auto vars:     Size  Location     Type
 18828 ;;  counter         1   40[BANK0 ] unsigned char 
 18829 ;; Return value:  Size  Location     Type
 18830 ;;                  4   31[BANK0 ] unsigned long 
 18831 ;; Registers used:
 18832 ;;		wreg, status,2, status,0
 18833 ;; Tracked objects:
 18834 ;;		On entry : 0/0
 18835 ;;		On exit  : 0/0
 18836 ;;		Unchanged: 0/0
 18837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18838 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18839 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18840 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18841 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18842 ;;Total ram usage:       10 bytes
 18843 ;; Hardware stack levels used:    1
 18844 ;; Hardware stack levels required when called:    6
 18845 ;; This function calls:
 18846 ;;		Nothing
 18847 ;; This function is called by:
 18848 ;;		_printf
 18849 ;; This function uses a non-reentrant model
 18850 ;;
 18851                           
 18852                           
 18853                           ;psect for function ___llmod
 18854  194D                     ___llmod:	
 18855                           
 18856                           ;incstack = 0
 18857                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 18858  194D  0020               	movlb	0	; select bank0
 18859  194E  0842               	movf	___llmod@divisor+3,w
 18860  194F  0441               	iorwf	___llmod@divisor+2,w
 18861  1950  0440               	iorwf	___llmod@divisor+1,w
 18862  1951  043F               	iorwf	___llmod@divisor,w
 18863  1952  1903               	skipnz
 18864  1953  2987               	goto	l7369
 18865  1954  01C8               	clrf	___llmod@counter
 18866  1955  0AC8               	incf	___llmod@counter,f
 18867  1956                     l7359:	
 18868  1956  1BC2               	btfsc	___llmod@divisor+3,7
 18869  1957  2964               	goto	l7361
 18870  1958  3001               	movlw	1
 18871  1959                     u6885:	
 18872  1959  35BF               	lslf	___llmod@divisor,f
 18873  195A  0DC0               	rlf	___llmod@divisor+1,f
 18874  195B  0DC1               	rlf	___llmod@divisor+2,f
 18875  195C  0DC2               	rlf	___llmod@divisor+3,f
 18876  195D  0B89               	decfsz	9,f
 18877  195E  2959               	goto	u6885
 18878  195F  3001               	movlw	1
 18879  1960  00C7               	movwf	??___llmod
 18880  1961  0847               	movf	??___llmod,w
 18881  1962  07C8               	addwf	___llmod@counter,f
 18882  1963  2956               	goto	l7359
 18883  1964                     l7361:	
 18884  1964  0842               	movf	___llmod@divisor+3,w
 18885  1965  0246               	subwf	___llmod@dividend+3,w
 18886  1966  1D03               	skipz
 18887  1967  2972               	goto	u6905
 18888  1968  0841               	movf	___llmod@divisor+2,w
 18889  1969  0245               	subwf	___llmod@dividend+2,w
 18890  196A  1D03               	skipz
 18891  196B  2972               	goto	u6905
 18892  196C  0840               	movf	___llmod@divisor+1,w
 18893  196D  0244               	subwf	___llmod@dividend+1,w
 18894  196E  1D03               	skipz
 18895  196F  2972               	goto	u6905
 18896  1970  083F               	movf	___llmod@divisor,w
 18897  1971  0243               	subwf	___llmod@dividend,w
 18898  1972                     u6905:	
 18899  1972  1C03               	skipc
 18900  1973  297C               	goto	l7365
 18901  1974  083F               	movf	___llmod@divisor,w
 18902  1975  02C3               	subwf	___llmod@dividend,f
 18903  1976  0840               	movf	___llmod@divisor+1,w
 18904  1977  3BC4               	subwfb	___llmod@dividend+1,f
 18905  1978  0841               	movf	___llmod@divisor+2,w
 18906  1979  3BC5               	subwfb	___llmod@dividend+2,f
 18907  197A  0842               	movf	___llmod@divisor+3,w
 18908  197B  3BC6               	subwfb	___llmod@dividend+3,f
 18909  197C                     l7365:	
 18910  197C  3001               	movlw	1
 18911  197D                     u6915:	
 18912  197D  36C2               	lsrf	___llmod@divisor+3,f
 18913  197E  0CC1               	rrf	___llmod@divisor+2,f
 18914  197F  0CC0               	rrf	___llmod@divisor+1,f
 18915  1980  0CBF               	rrf	___llmod@divisor,f
 18916  1981  0B89               	decfsz	9,f
 18917  1982  297D               	goto	u6915
 18918  1983  3001               	movlw	1
 18919  1984  02C8               	subwf	___llmod@counter,f
 18920  1985  1D03               	btfss	3,2
 18921  1986  2964               	goto	l7361
 18922  1987                     l7369:	
 18923  1987  0846               	movf	___llmod@dividend+3,w
 18924  1988  00C2               	movwf	?___llmod+3
 18925  1989  0845               	movf	___llmod@dividend+2,w
 18926  198A  00C1               	movwf	?___llmod+2
 18927  198B  0844               	movf	___llmod@dividend+1,w
 18928  198C  00C0               	movwf	?___llmod+1
 18929  198D  0843               	movf	___llmod@dividend,w
 18930  198E  00BF               	movwf	?___llmod
 18931  198F  0008               	return
 18932  1990                     __end_of___llmod:	
 18933                           
 18934                           	psect	text63
 18935  1D1A                     __ptext63:	
 18936 ;; *************** function ___lldiv *****************
 18937 ;; Defined at:
 18938 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 18939 ;; Parameters:    Size  Location     Type
 18940 ;;  divisor         4   17[BANK0 ] unsigned long 
 18941 ;;  dividend        4   21[BANK0 ] unsigned long 
 18942 ;; Auto vars:     Size  Location     Type
 18943 ;;  quotient        4   26[BANK0 ] unsigned long 
 18944 ;;  counter         1   30[BANK0 ] unsigned char 
 18945 ;; Return value:  Size  Location     Type
 18946 ;;                  4   17[BANK0 ] unsigned long 
 18947 ;; Registers used:
 18948 ;;		wreg, status,2, status,0
 18949 ;; Tracked objects:
 18950 ;;		On entry : 0/0
 18951 ;;		On exit  : 0/0
 18952 ;;		Unchanged: 0/0
 18953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18954 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18955 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18956 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18957 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18958 ;;Total ram usage:       14 bytes
 18959 ;; Hardware stack levels used:    1
 18960 ;; Hardware stack levels required when called:    6
 18961 ;; This function calls:
 18962 ;;		Nothing
 18963 ;; This function is called by:
 18964 ;;		_printf
 18965 ;; This function uses a non-reentrant model
 18966 ;;
 18967                           
 18968                           
 18969                           ;psect for function ___lldiv
 18970  1D1A                     ___lldiv:	
 18971                           
 18972                           ;incstack = 0
 18973                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 18974  1D1A  3000               	movlw	0
 18975  1D1B  0020               	movlb	0	; select bank0
 18976  1D1C  00BD               	movwf	___lldiv@quotient+3
 18977  1D1D  3000               	movlw	0
 18978  1D1E  00BC               	movwf	___lldiv@quotient+2
 18979  1D1F  3000               	movlw	0
 18980  1D20  00BB               	movwf	___lldiv@quotient+1
 18981  1D21  3000               	movlw	0
 18982  1D22  00BA               	movwf	___lldiv@quotient
 18983  1D23  0834               	movf	___lldiv@divisor+3,w
 18984  1D24  0433               	iorwf	___lldiv@divisor+2,w
 18985  1D25  0432               	iorwf	___lldiv@divisor+1,w
 18986  1D26  0431               	iorwf	___lldiv@divisor,w
 18987  1D27  1903               	skipnz
 18988  1D28  2D64               	goto	l7349
 18989  1D29  01BE               	clrf	___lldiv@counter
 18990  1D2A  0ABE               	incf	___lldiv@counter,f
 18991  1D2B                     l7335:	
 18992  1D2B  1BB4               	btfsc	___lldiv@divisor+3,7
 18993  1D2C  2D39               	goto	l7337
 18994  1D2D  3001               	movlw	1
 18995  1D2E                     u6815:	
 18996  1D2E  35B1               	lslf	___lldiv@divisor,f
 18997  1D2F  0DB2               	rlf	___lldiv@divisor+1,f
 18998  1D30  0DB3               	rlf	___lldiv@divisor+2,f
 18999  1D31  0DB4               	rlf	___lldiv@divisor+3,f
 19000  1D32  0B89               	decfsz	9,f
 19001  1D33  2D2E               	goto	u6815
 19002  1D34  3001               	movlw	1
 19003  1D35  00B9               	movwf	??___lldiv
 19004  1D36  0839               	movf	??___lldiv,w
 19005  1D37  07BE               	addwf	___lldiv@counter,f
 19006  1D38  2D2B               	goto	l7335
 19007  1D39                     l7337:	
 19008  1D39  3001               	movlw	1
 19009  1D3A                     u6835:	
 19010  1D3A  35BA               	lslf	___lldiv@quotient,f
 19011  1D3B  0DBB               	rlf	___lldiv@quotient+1,f
 19012  1D3C  0DBC               	rlf	___lldiv@quotient+2,f
 19013  1D3D  0DBD               	rlf	___lldiv@quotient+3,f
 19014  1D3E  0B89               	decfsz	9,f
 19015  1D3F  2D3A               	goto	u6835
 19016  1D40  0834               	movf	___lldiv@divisor+3,w
 19017  1D41  0238               	subwf	___lldiv@dividend+3,w
 19018  1D42  1D03               	skipz
 19019  1D43  2D4E               	goto	u6845
 19020  1D44  0833               	movf	___lldiv@divisor+2,w
 19021  1D45  0237               	subwf	___lldiv@dividend+2,w
 19022  1D46  1D03               	skipz
 19023  1D47  2D4E               	goto	u6845
 19024  1D48  0832               	movf	___lldiv@divisor+1,w
 19025  1D49  0236               	subwf	___lldiv@dividend+1,w
 19026  1D4A  1D03               	skipz
 19027  1D4B  2D4E               	goto	u6845
 19028  1D4C  0831               	movf	___lldiv@divisor,w
 19029  1D4D  0235               	subwf	___lldiv@dividend,w
 19030  1D4E                     u6845:	
 19031  1D4E  1C03               	skipc
 19032  1D4F  2D59               	goto	l7345
 19033  1D50  0831               	movf	___lldiv@divisor,w
 19034  1D51  02B5               	subwf	___lldiv@dividend,f
 19035  1D52  0832               	movf	___lldiv@divisor+1,w
 19036  1D53  3BB6               	subwfb	___lldiv@dividend+1,f
 19037  1D54  0833               	movf	___lldiv@divisor+2,w
 19038  1D55  3BB7               	subwfb	___lldiv@dividend+2,f
 19039  1D56  0834               	movf	___lldiv@divisor+3,w
 19040  1D57  3BB8               	subwfb	___lldiv@dividend+3,f
 19041  1D58  143A               	bsf	___lldiv@quotient,0
 19042  1D59                     l7345:	
 19043  1D59  3001               	movlw	1
 19044  1D5A                     u6855:	
 19045  1D5A  36B4               	lsrf	___lldiv@divisor+3,f
 19046  1D5B  0CB3               	rrf	___lldiv@divisor+2,f
 19047  1D5C  0CB2               	rrf	___lldiv@divisor+1,f
 19048  1D5D  0CB1               	rrf	___lldiv@divisor,f
 19049  1D5E  0B89               	decfsz	9,f
 19050  1D5F  2D5A               	goto	u6855
 19051  1D60  3001               	movlw	1
 19052  1D61  02BE               	subwf	___lldiv@counter,f
 19053  1D62  1D03               	btfss	3,2
 19054  1D63  2D39               	goto	l7337
 19055  1D64                     l7349:	
 19056  1D64  083D               	movf	___lldiv@quotient+3,w
 19057  1D65  00B4               	movwf	?___lldiv+3
 19058  1D66  083C               	movf	___lldiv@quotient+2,w
 19059  1D67  00B3               	movwf	?___lldiv+2
 19060  1D68  083B               	movf	___lldiv@quotient+1,w
 19061  1D69  00B2               	movwf	?___lldiv+1
 19062  1D6A  083A               	movf	___lldiv@quotient,w
 19063  1D6B  00B1               	movwf	?___lldiv
 19064  1D6C  0008               	return
 19065  1D6D                     __end_of___lldiv:	
 19066                           
 19067                           	psect	text64
 19068  07EB                     __ptext64:	
 19069 ;; *************** function _i2c_setBuffer *****************
 19070 ;; Defined at:
 19071 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 19072 ;; Parameters:    Size  Location     Type
 19073 ;;  buffer          2   17[BANK0 ] PTR void 
 19074 ;;		 -> drv_read@reg(1), drv_read@buff(1), drv2665@drv_fifo_sine(244), drv_write@buff(2), 
 19075 ;;  bufferSize      2   19[BANK0 ] unsigned int 
 19076 ;; Auto vars:     Size  Location     Type
 19077 ;;		None
 19078 ;; Return value:  Size  Location     Type
 19079 ;;                  1    wreg      void 
 19080 ;; Registers used:
 19081 ;;		wreg
 19082 ;; Tracked objects:
 19083 ;;		On entry : 0/0
 19084 ;;		On exit  : 0/0
 19085 ;;		Unchanged: 0/0
 19086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19087 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19090 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19091 ;;Total ram usage:        4 bytes
 19092 ;; Hardware stack levels used:    1
 19093 ;; Hardware stack levels required when called:    6
 19094 ;; This function calls:
 19095 ;;		Nothing
 19096 ;; This function is called by:
 19097 ;;		_drv_write
 19098 ;;		_drv_read
 19099 ;;		_drv_write_wvfrm
 19100 ;; This function uses a non-reentrant model
 19101 ;;
 19102                           
 19103                           
 19104                           ;psect for function _i2c_setBuffer
 19105  07EB                     _i2c_setBuffer:	
 19106                           
 19107                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 19108                           
 19109                           ;incstack = 0
 19110                           ; Regs used in _i2c_setBuffer: [wreg]
 19111  07EB  0022               	movlb	2	; select bank2
 19112  07EC  1D20               	btfss	_i2c_status^(0+256),2
 19113  07ED  0008               	return
 19114                           
 19115                           ;i2c_master.c: 187: {
 19116                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 19117  07EE  0020               	movlb	0	; select bank0
 19118  07EF  0832               	movf	i2c_setBuffer@buffer+1,w
 19119  07F0  0022               	movlb	2	; select bank2
 19120  07F1  00A3               	movwf	((low ((_i2c_status| (0+256)+2))+1))^0
 19121  07F2  0020               	movlb	0	; select bank0
 19122  07F3  0831               	movf	i2c_setBuffer@buffer,w
 19123  07F4  0022               	movlb	2	; select bank2
 19124  07F5  00A2               	movwf	(low ((_i2c_status| (0+256)+2)))^0
 19125                           
 19126                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 19127  07F6  0020               	movlb	0	; select bank0
 19128  07F7  0834               	movf	i2c_setBuffer@bufferSize+1,w
 19129  07F8  0022               	movlb	2	; select bank2
 19130  07F9  00A5               	movwf	((_i2c_status+1)^(0+256)+4)
 19131  07FA  0020               	movlb	0	; select bank0
 19132  07FB  0833               	movf	i2c_setBuffer@bufferSize,w
 19133  07FC  0022               	movlb	2	; select bank2
 19134  07FD  00A4               	movwf	(_i2c_status^(0+256)+4)
 19135                           
 19136                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 19137  07FE  1120               	bcf	_i2c_status^(0+256),2
 19138  07FF  0008               	return
 19139  0800                     __end_of_i2c_setBuffer:	
 19140                           
 19141                           	psect	text65
 19142  2637                     __ptext65:	
 19143 ;; *************** function _i2c_masterOperation *****************
 19144 ;; Defined at:
 19145 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 19146 ;; Parameters:    Size  Location     Type
 19147 ;;  read            1    wreg     unsigned char 
 19148 ;; Auto vars:     Size  Location     Type
 19149 ;;  read            1   24[BANK0 ] unsigned char 
 19150 ;;  ret             1   25[BANK0 ] enum E8193
 19151 ;; Return value:  Size  Location     Type
 19152 ;;                  1    wreg      enum E8193
 19153 ;; Registers used:
 19154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19155 ;; Tracked objects:
 19156 ;;		On entry : 0/0
 19157 ;;		On exit  : 0/0
 19158 ;;		Unchanged: 0/0
 19159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19161 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19163 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19164 ;;Total ram usage:        3 bytes
 19165 ;; Hardware stack levels used:    1
 19166 ;; Hardware stack levels required when called:   11
 19167 ;; This function calls:
 19168 ;;		_i2c1_driver_start
 19169 ;;		_i2c_poller
 19170 ;;		_mssp1_IRQisEnabled
 19171 ;; This function is called by:
 19172 ;;		_drv_write
 19173 ;;		_drv_read
 19174 ;;		_i2c_masterRead
 19175 ;;		_i2c_masterWrite
 19176 ;;		_drv_write_wvfrm
 19177 ;; This function uses a non-reentrant model
 19178 ;;
 19179                           
 19180                           
 19181                           ;psect for function _i2c_masterOperation
 19182  2637                     _i2c_masterOperation:	
 19183                           
 19184                           ;incstack = 0
 19185                           ; Regs used in _i2c_masterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19186                           ;i2c_masterOperation@read stored from wreg
 19187  2637  0020               	movlb	0	; select bank0
 19188  2638  00B8               	movwf	i2c_masterOperation@read
 19189                           
 19190                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 19191  2639  01B9               	clrf	i2c_masterOperation@ret
 19192  263A  0AB9               	incf	i2c_masterOperation@ret,f
 19193                           
 19194                           ;i2c_master.c: 196: if(!i2c_status.busy)
 19195  263B  0022               	movlb	2	; select bank2
 19196  263C  1820               	btfsc	_i2c_status^(0+256),0
 19197  263D  2E58               	goto	l7489
 19198                           
 19199                           ;i2c_master.c: 197: {
 19200                           ;i2c_master.c: 198: i2c_status.busy = 1;
 19201  263E  1420               	bsf	_i2c_status^(0+256),0
 19202                           
 19203                           ;i2c_master.c: 199: ret = I2C_NOERR;
 19204  263F  0020               	movlb	0	; select bank0
 19205  2640  01B9               	clrf	i2c_masterOperation@ret
 19206                           
 19207                           ;i2c_master.c: 201: if(read)
 19208  2641  0838               	movf	i2c_masterOperation@read,w
 19209  2642  1903               	btfsc	3,2
 19210  2643  2E48               	goto	l7483
 19211                           
 19212                           ;i2c_master.c: 202: {
 19213                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 19214  2644  0022               	movlb	2	; select bank2
 19215  2645  01AA               	clrf	(_i2c_status^(0+256)+10)
 19216  2646  0AAA               	incf	(_i2c_status^(0+256)+10),f
 19217                           
 19218                           ;i2c_master.c: 204: }
 19219  2647  2E4E               	goto	l7485
 19220  2648                     l7483:	
 19221                           
 19222                           ;i2c_master.c: 205: else
 19223                           ;i2c_master.c: 206: {
 19224                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 19225  2648  3002               	movlw	2
 19226  2649  0020               	movlb	0	; select bank0
 19227  264A  00B7               	movwf	??_i2c_masterOperation
 19228  264B  0837               	movf	??_i2c_masterOperation,w
 19229  264C  0022               	movlb	2	; select bank2
 19230  264D  00AA               	movwf	(_i2c_status^(0+256)+10)
 19231  264E                     l7485:	
 19232                           
 19233                           ;i2c_master.c: 208: }
 19234                           ;i2c_master.c: 209: i2c1_driver_start();
 19235  264E  31A1  21C2  31A6   	fcall	_i2c1_driver_start
 19236                           
 19237                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 19238  2651  31A2  22F5  31A6   	fcall	_mssp1_IRQisEnabled
 19239  2654  1803               	btfsc	3,0
 19240  2655  2E58               	goto	l7489
 19241                           
 19242                           ;i2c_master.c: 212: i2c_poller();
 19243  2656  3188  2000         	fcall	_i2c_poller
 19244  2658                     l7489:	
 19245                           
 19246                           ;i2c_master.c: 213: }
 19247                           ;i2c_master.c: 214: return ret;
 19248  2658  0020               	movlb	0	; select bank0
 19249  2659  0839               	movf	i2c_masterOperation@ret,w
 19250  265A  0008               	return
 19251  265B                     __end_of_i2c_masterOperation:	
 19252                           
 19253                           	psect	text66
 19254  22F5                     __ptext66:	
 19255 ;; *************** function _mssp1_IRQisEnabled *****************
 19256 ;; Defined at:
 19257 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
 19258 ;; Parameters:    Size  Location     Type
 19259 ;;		None
 19260 ;; Auto vars:     Size  Location     Type
 19261 ;;		None
 19262 ;; Return value:  Size  Location     Type
 19263 ;;		None               void
 19264 ;; Registers used:
 19265 ;;		wreg, status,2, status,0
 19266 ;; Tracked objects:
 19267 ;;		On entry : 0/0
 19268 ;;		On exit  : 0/0
 19269 ;;		Unchanged: 0/0
 19270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19273 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19274 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19275 ;;Total ram usage:        2 bytes
 19276 ;; Hardware stack levels used:    1
 19277 ;; Hardware stack levels required when called:    6
 19278 ;; This function calls:
 19279 ;;		Nothing
 19280 ;; This function is called by:
 19281 ;;		_i2c_masterOperation
 19282 ;; This function uses a non-reentrant model
 19283 ;;
 19284                           
 19285                           
 19286                           ;psect for function _mssp1_IRQisEnabled
 19287  22F5                     _mssp1_IRQisEnabled:	
 19288                           
 19289                           ;i2c1_driver.c: 45: return PIE1bits.SSP1IE;
 19290                           
 19291                           ;incstack = 0
 19292                           ; Regs used in _mssp1_IRQisEnabled: [wreg+status,2+status,0]
 19293  22F5  0021               	movlb	1	; select bank1
 19294  22F6  0C11               	rrf	17,w	;volatile
 19295  22F7  0020               	movlb	0	; select bank0
 19296  22F8  00B1               	movwf	??_mssp1_IRQisEnabled
 19297  22F9  0CB1               	rrf	??_mssp1_IRQisEnabled,f
 19298  22FA  0C31               	rrf	??_mssp1_IRQisEnabled,w
 19299  22FB  3901               	andlw	1
 19300  22FC  00B2               	movwf	??_mssp1_IRQisEnabled+1
 19301  22FD  0C32               	rrf	??_mssp1_IRQisEnabled+1,w
 19302  22FE  0008               	return
 19303  22FF                     __end_of_mssp1_IRQisEnabled:	
 19304                           
 19305                           	psect	text67
 19306  0800                     __ptext67:	
 19307 ;; *************** function _i2c_poller *****************
 19308 ;; Defined at:
 19309 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 19310 ;; Parameters:    Size  Location     Type
 19311 ;;		None
 19312 ;; Auto vars:     Size  Location     Type
 19313 ;;		None
 19314 ;; Return value:  Size  Location     Type
 19315 ;;                  1    wreg      void 
 19316 ;; Registers used:
 19317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19318 ;; Tracked objects:
 19319 ;;		On entry : 0/0
 19320 ;;		On exit  : 0/0
 19321 ;;		Unchanged: 0/0
 19322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19327 ;;Total ram usage:        0 bytes
 19328 ;; Hardware stack levels used:    1
 19329 ;; Hardware stack levels required when called:   10
 19330 ;; This function calls:
 19331 ;;		_i2c_ISR
 19332 ;;		_mssp1_waitForEvent
 19333 ;; This function is called by:
 19334 ;;		_i2c_masterOperation
 19335 ;; This function uses a non-reentrant model
 19336 ;;
 19337                           
 19338                           
 19339                           ;psect for function _i2c_poller
 19340  0800                     _i2c_poller:	
 19341  0800                     l7327:	
 19342                           ;i2c_master.c: 232: while(i2c_status.busy)
 19343                           
 19344                           ;incstack = 0
 19345                           ; Regs used in _i2c_poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19346                           
 19347  0800  0022               	movlb	2	; select bank2
 19348  0801  1C20               	btfss	_i2c_status^(0+256),0
 19349  0802  0008               	return
 19350                           
 19351                           ;i2c_master.c: 233: {
 19352                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 19353  0803  3000               	movlw	0
 19354  0804  3193  23CC  3188   	fcall	_mssp1_waitForEvent
 19355                           
 19356                           ;i2c_master.c: 235: i2c_ISR();
 19357  0807  31A6  26A4  3188   	fcall	_i2c_ISR
 19358  080A  2800               	goto	l7327
 19359  080B                     __end_of_i2c_poller:	
 19360                           
 19361                           	psect	text68
 19362  13CC                     __ptext68:	
 19363 ;; *************** function _mssp1_waitForEvent *****************
 19364 ;; Defined at:
 19365 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
 19366 ;; Parameters:    Size  Location     Type
 19367 ;;  timeout         1    wreg     PTR unsigned int 
 19368 ;;		 -> NULL(0), 
 19369 ;; Auto vars:     Size  Location     Type
 19370 ;;  timeout         1   17[BANK0 ] PTR unsigned int 
 19371 ;;		 -> NULL(0), 
 19372 ;; Return value:  Size  Location     Type
 19373 ;;                  1    wreg      void 
 19374 ;; Registers used:
 19375 ;;		wreg
 19376 ;; Tracked objects:
 19377 ;;		On entry : 0/0
 19378 ;;		On exit  : 0/0
 19379 ;;		Unchanged: 0/0
 19380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19382 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19384 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19385 ;;Total ram usage:        1 bytes
 19386 ;; Hardware stack levels used:    1
 19387 ;; Hardware stack levels required when called:    6
 19388 ;; This function calls:
 19389 ;;		Nothing
 19390 ;; This function is called by:
 19391 ;;		_i2c_poller
 19392 ;; This function uses a non-reentrant model
 19393 ;;
 19394                           
 19395                           
 19396                           ;psect for function _mssp1_waitForEvent
 19397  13CC                     _mssp1_waitForEvent:	
 19398                           
 19399                           ;i2c1_driver.c: 73: if(PIR1bits.SSP1IF == 0)
 19400                           
 19401                           ;incstack = 0
 19402                           ; Regs used in _mssp1_waitForEvent: [wreg]
 19403  13CC  0020               	movlb	0	; select bank0
 19404  13CD  1991               	btfsc	17,3	;volatile
 19405  13CE  0008               	return
 19406  13CF                     l509:	
 19407                           ;i2c1_driver.c: 74: {
 19408                           ;i2c1_driver.c: 75: while(1)
 19409                           
 19410                           
 19411                           ;i2c1_driver.c: 76: {
 19412                           ;i2c1_driver.c: 77: if(PIR1bits.SSP1IF) break;
 19413  13CF  0020               	movlb	0	; select bank0
 19414  13D0  1991               	btfsc	17,3	;volatile
 19415  13D1  0008               	return
 19416                           
 19417                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(1000000/4000000.0)));
 19418  13D2  3008               	movlw	8
 19419  13D3                     u9167:	
 19420  13D3  0B89               	decfsz	9,f
 19421  13D4  2BD3               	goto	u9167
 19422  13D5  0000               	nop
 19423  13D6  2BCF               	goto	l509
 19424  13D7                     __end_of_mssp1_waitForEvent:	
 19425                           
 19426                           	psect	text69
 19427  26A4                     __ptext69:	
 19428 ;; *************** function _i2c_ISR *****************
 19429 ;; Defined at:
 19430 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 19431 ;; Parameters:    Size  Location     Type
 19432 ;;		None
 19433 ;; Auto vars:     Size  Location     Type
 19434 ;;		None
 19435 ;; Return value:  Size  Location     Type
 19436 ;;                  1    wreg      void 
 19437 ;; Registers used:
 19438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19439 ;; Tracked objects:
 19440 ;;		On entry : 0/0
 19441 ;;		On exit  : 0/0
 19442 ;;		Unchanged: 0/0
 19443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19446 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19448 ;;Total ram usage:        1 bytes
 19449 ;; Hardware stack levels used:    1
 19450 ;; Hardware stack levels required when called:    9
 19451 ;; This function calls:
 19452 ;;		_do_I2C_DO_ACK
 19453 ;;		_do_I2C_DO_ADDRESS_NACK
 19454 ;;		_do_I2C_DO_NACK_RESTART
 19455 ;;		_do_I2C_DO_NACK_STOP
 19456 ;;		_do_I2C_IDLE
 19457 ;;		_do_I2C_RCEN
 19458 ;;		_do_I2C_RESET
 19459 ;;		_do_I2C_RX
 19460 ;;		_do_I2C_SEND_ADR_READ
 19461 ;;		_do_I2C_SEND_ADR_WRITE
 19462 ;;		_do_I2C_SEND_RESTART
 19463 ;;		_do_I2C_SEND_RESTART_READ
 19464 ;;		_do_I2C_SEND_RESTART_WRITE
 19465 ;;		_do_I2C_SEND_STOP
 19466 ;;		_do_I2C_TX
 19467 ;;		_do_I2C_TX_EMPTY
 19468 ;;		_i2c1_driver_isNACK
 19469 ;;		_mssp1_clearIRQ
 19470 ;; This function is called by:
 19471 ;;		_i2c_open
 19472 ;;		_i2c_poller
 19473 ;;		_INTERRUPT_InterruptManager
 19474 ;; This function uses a non-reentrant model
 19475 ;;
 19476                           
 19477                           
 19478                           ;psect for function _i2c_ISR
 19479  26A4                     _i2c_ISR:	
 19480                           
 19481                           ;Skip over the trampoline to the duplicate function for level 1
 19482  26A4  1C7E               	btfss	126,0
 19483  26A5  2EA8               	goto	l7303
 19484  26A6  31A5  2D2C         	ljmp	i1l8537
 19485  26A8                     _i2c_ISR$intlevel0:	
 19486  26A8                     l7303:	
 19487                           ;incstack = 0
 19488                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19489                           
 19490                           
 19491                           ;i2c_master.c: 421: mssp1_clearIRQ();
 19492  26A8  31A1  21D4  31A6   	fcall	_mssp1_clearIRQ
 19493                           
 19494                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 19495  26AB  0022               	movlb	2	; select bank2
 19496  26AC  1DA0               	btfss	_i2c_status^(0+256),3
 19497  26AD  2EB9               	goto	l7311
 19498  26AE  31A3  2373  31A6   	fcall	_i2c1_driver_isNACK
 19499  26B1  1C03               	btfss	3,0
 19500  26B2  2EB9               	goto	l7311
 19501                           
 19502                           ;i2c_master.c: 428: {
 19503                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 19504  26B3  300F               	movlw	15
 19505  26B4  0020               	movlb	0	; select bank0
 19506  26B5  00B6               	movwf	??_i2c_ISR
 19507  26B6  0836               	movf	??_i2c_ISR,w
 19508  26B7  0022               	movlb	2	; select bank2
 19509  26B8  00AA               	movwf	(_i2c_status^(0+256)+10)
 19510  26B9                     l7311:	
 19511                           
 19512                           ;i2c_master.c: 430: }
 19513                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 19514  26B9  0022               	movlb	2	; select bank2
 19515  26BA  352A               	lslf	(_i2c_status^(0+256)+10),w
 19516  26BB  3E20               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 19517  26BC  0086               	movwf	6
 19518  26BD  3002               	movlw	2	; select bank4/5
 19519  26BE  0087               	movwf	7
 19520  26BF  3F41               	moviw [1]fsr1
 19521  26C0  008A               	movwf	10
 19522  26C1  3F40               	moviw [0]fsr1
 19523  26C2  000A               	callw
 19524  26C3  31A6               	pagesel	$
 19525  26C4  0020               	movlb	0	; select bank0
 19526  26C5  00B6               	movwf	??_i2c_ISR
 19527  26C6  0836               	movf	??_i2c_ISR,w
 19528  26C7  0022               	movlb	2	; select bank2
 19529  26C8  00AA               	movwf	(_i2c_status^(0+256)+10)
 19530  26C9  0008               	return
 19531  26CA                     __end_of_i2c_ISR:	
 19532                           
 19533                           	psect	text70
 19534  21D4                     __ptext70:	
 19535 ;; *************** function _mssp1_clearIRQ *****************
 19536 ;; Defined at:
 19537 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 19538 ;; Parameters:    Size  Location     Type
 19539 ;;		None
 19540 ;; Auto vars:     Size  Location     Type
 19541 ;;		None
 19542 ;; Return value:  Size  Location     Type
 19543 ;;                  1    wreg      void 
 19544 ;; Registers used:
 19545 ;;		None
 19546 ;; Tracked objects:
 19547 ;;		On entry : 0/0
 19548 ;;		On exit  : 0/0
 19549 ;;		Unchanged: 0/0
 19550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19555 ;;Total ram usage:        0 bytes
 19556 ;; Hardware stack levels used:    1
 19557 ;; Hardware stack levels required when called:    6
 19558 ;; This function calls:
 19559 ;;		Nothing
 19560 ;; This function is called by:
 19561 ;;		_i2c_open
 19562 ;;		_i2c_ISR
 19563 ;;		_i2c_close
 19564 ;; This function uses a non-reentrant model
 19565 ;;
 19566                           
 19567                           
 19568                           ;psect for function _mssp1_clearIRQ
 19569  21D4                     _mssp1_clearIRQ:	
 19570                           
 19571                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 19572                           
 19573                           ;incstack = 0
 19574                           ; Regs used in _mssp1_clearIRQ: []
 19575  21D4  0020               	movlb	0	; select bank0
 19576  21D5  1191               	bcf	17,3	;volatile
 19577  21D6  0008               	return
 19578  21D7                     __end_of_mssp1_clearIRQ:	
 19579                           
 19580                           	psect	text71
 19581  19D3                     __ptext71:	
 19582 ;; *************** function _do_I2C_RX *****************
 19583 ;; Defined at:
 19584 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 19585 ;; Parameters:    Size  Location     Type
 19586 ;;		None
 19587 ;; Auto vars:     Size  Location     Type
 19588 ;;		None
 19589 ;; Return value:  Size  Location     Type
 19590 ;;                  1    wreg      enum E8364
 19591 ;; Registers used:
 19592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19593 ;; Tracked objects:
 19594 ;;		On entry : 0/0
 19595 ;;		On exit  : 0/0
 19596 ;;		Unchanged: 0/0
 19597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19600 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19601 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19602 ;;Total ram usage:        1 bytes
 19603 ;; Hardware stack levels used:    1
 19604 ;; Hardware stack levels required when called:    8
 19605 ;; This function calls:
 19606 ;;		_do_I2C_DO_NACK_RESTART
 19607 ;;		_do_I2C_DO_NACK_STOP
 19608 ;;		_i2c1_driver_getRXData
 19609 ;;		_i2c1_driver_sendACK
 19610 ;;		_returnReset
 19611 ;;		_returnStop
 19612 ;; This function is called by:
 19613 ;;		_i2c_ISR
 19614 ;;		i1_i2c_ISR
 19615 ;; This function uses a non-reentrant model
 19616 ;;
 19617                           
 19618                           
 19619                           ;psect for function _do_I2C_RX
 19620  19D3                     _do_I2C_RX:	
 19621                           
 19622                           ;Skip over the trampoline to the duplicate function for level 1
 19623  19D3  1C7E               	btfss	126,0
 19624  19D4  29D7               	goto	l7233
 19625  19D5  3198  28CF         	ljmp	i1l8317
 19626  19D7                     _do_I2C_RX$intlevel0:	
 19627  19D7                     l7233:	
 19628                           ;incstack = 0
 19629                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19630                           
 19631                           
 19632                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 19633  19D7  0022               	movlb	2	; select bank2
 19634  19D8  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 19635  19D9  0086               	movwf	6
 19636  19DA  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 19637  19DB  0087               	movwf	7
 19638  19DC  31A1  21CE  3199   	fcall	_i2c1_driver_getRXData
 19639  19DF  0081               	movwf	1
 19640  19E0  3001               	movlw	1
 19641  19E1  0022               	movlb	2	; select bank2
 19642  19E2  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 19643  19E3  3000               	movlw	0
 19644  19E4  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 19645                           
 19646                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 19647  19E5  3001               	movlw	1
 19648  19E6  02A4               	subwf	(_i2c_status^(0+256)+4),f
 19649  19E7  3000               	movlw	0
 19650  19E8  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 19651  19E9  0824               	movf	(_i2c_status^(0+256)+4),w
 19652  19EA  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 19653  19EB  1903               	btfsc	3,2
 19654  19EC  29F1               	goto	l770
 19655                           
 19656                           ;i2c_master.c: 361: {
 19657                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 19658  19ED  31A1  21FF         	fcall	_i2c1_driver_sendACK
 19659                           
 19660                           ;i2c_master.c: 363: return I2C_RCEN;
 19661  19EF  3005               	movlw	5
 19662                           
 19663                           ;i2c_master.c: 364: }
 19664  19F0  0008               	return
 19665  19F1                     l770:	
 19666                           
 19667                           ;i2c_master.c: 365: else
 19668                           ;i2c_master.c: 366: {
 19669                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 19670  19F1  1520               	bsf	_i2c_status^(0+256),2
 19671                           
 19672                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 19673  19F2  29F9               	goto	l7257
 19674  19F3                     l7247:	
 19675                           ;i2c_master.c: 369: {
 19676                           ;i2c_master.c: 370: case i2c_restart_write:
 19677                           
 19678                           
 19679                           ;i2c_master.c: 371: case i2c_restart_read:
 19680                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 19681  19F3  31A2  229B         	fcall	_do_I2C_DO_NACK_RESTART
 19682  19F5  0008               	return
 19683  19F6                     l7251:	
 19684                           ;i2c_master.c: 374: case i2c_continue:
 19685                           
 19686                           ;i2c_master.c: 373: default:
 19687                           
 19688                           
 19689                           ;i2c_master.c: 375: case i2c_stop:
 19690                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 19691  19F6  31A2  2293         	fcall	_do_I2C_DO_NACK_STOP
 19692                           
 19693                           ;i2c_master.c: 377: }
 19694  19F8  0008               	return
 19695  19F9                     l7257:	
 19696  19F9  0022               	movlb	2	; select bank2
 19697  19FA  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 19698  19FB  0020               	movlb	0	; select bank0
 19699  19FC  00B1               	movwf	??_do_I2C_RX
 19700  19FD  0831               	movf	??_do_I2C_RX,w
 19701  19FE  00B1               	movwf	returnReset@p
 19702  19FF  300C               	movlw	12
 19703  1A00  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 19704  1A01  0086               	movwf	6
 19705  1A02  3001               	movlw	1	; select bank2/3
 19706  1A03  0087               	movwf	7
 19707  1A04  3F41               	moviw [1]fsr1
 19708  1A05  008A               	movwf	10
 19709  1A06  3F40               	moviw [0]fsr1
 19710  1A07  000A               	callw
 19711  1A08  3199               	pagesel	$
 19712                           
 19713                           ; Switch size 1, requested type "space"
 19714                           ; Number of cases is 4, Range of values is 1 to 4
 19715                           ; switch strategies available:
 19716                           ; Name         Instructions Cycles
 19717                           ; simple_byte           13     7 (average)
 19718                           ; direct_byte           17     9 (fixed)
 19719                           ; jumptable            263     9 (fixed)
 19720                           ;	Chosen strategy is simple_byte
 19721  1A09  3A01               	xorlw	1	; case 1
 19722  1A0A  1903               	skipnz
 19723  1A0B  29F6               	goto	l7251
 19724  1A0C  3A03               	xorlw	3	; case 2
 19725  1A0D  1903               	skipnz
 19726  1A0E  29F3               	goto	l7247
 19727  1A0F  3A01               	xorlw	1	; case 3
 19728  1A10  1903               	skipnz
 19729  1A11  29F3               	goto	l7247
 19730  1A12  3A07               	xorlw	7	; case 4
 19731  1A13  1903               	skipnz
 19732  1A14  29F6               	goto	l7251
 19733  1A15  29F6               	goto	l7251
 19734  1A16  0008               	return
 19735  1A17                     __end_of_do_I2C_RX:	
 19736                           
 19737                           	psect	text72
 19738  1DC5                     __ptext72:	
 19739 ;; *************** function _do_I2C_TX *****************
 19740 ;; Defined at:
 19741 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 19742 ;; Parameters:    Size  Location     Type
 19743 ;;		None
 19744 ;; Auto vars:     Size  Location     Type
 19745 ;;		None
 19746 ;; Return value:  Size  Location     Type
 19747 ;;                  1    wreg      enum E8364
 19748 ;; Registers used:
 19749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19750 ;; Tracked objects:
 19751 ;;		On entry : 0/0
 19752 ;;		On exit  : 0/0
 19753 ;;		Unchanged: 0/0
 19754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19756 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19757 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19758 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19759 ;;Total ram usage:        4 bytes
 19760 ;; Hardware stack levels used:    1
 19761 ;; Hardware stack levels required when called:    8
 19762 ;; This function calls:
 19763 ;;		_do_I2C_SEND_RESTART_READ
 19764 ;;		_do_I2C_SEND_RESTART_WRITE
 19765 ;;		_do_I2C_SEND_STOP
 19766 ;;		_i2c1_driver_TXData
 19767 ;;		_i2c1_driver_isNACK
 19768 ;;		_returnReset
 19769 ;;		_returnStop
 19770 ;; This function is called by:
 19771 ;;		_i2c_ISR
 19772 ;;		i1_i2c_ISR
 19773 ;; This function uses a non-reentrant model
 19774 ;;
 19775                           
 19776                           
 19777                           ;psect for function _do_I2C_TX
 19778  1DC5                     _do_I2C_TX:	
 19779                           
 19780                           ;Skip over the trampoline to the duplicate function for level 1
 19781  1DC5  1C7E               	btfss	126,0
 19782  1DC6  2DC9               	goto	l7203
 19783  1DC7  319B  2BD8         	ljmp	i1l8287
 19784  1DC9                     _do_I2C_TX$intlevel0:	
 19785  1DC9                     l7203:	
 19786                           ;incstack = 0
 19787                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19788                           
 19789                           
 19790                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 19791  1DC9  31A3  2373  319D   	fcall	_i2c1_driver_isNACK
 19792  1DCC  1803               	btfsc	3,0
 19793  1DCD  2DD8               	goto	l7221
 19794  1DCE  2DF6               	goto	l754
 19795  1DCF                     l7207:	
 19796                           ;i2c_master.c: 338: {
 19797                           ;i2c_master.c: 339: case i2c_restart_read:
 19798                           
 19799                           ;i2c_master.c: 336: {
 19800                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 19801                           
 19802                           
 19803                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 19804  1DCF  31A2  226B         	fcall	_do_I2C_SEND_RESTART_READ
 19805  1DD1  0008               	return
 19806  1DD2                     l7211:	
 19807                           ;i2c_master.c: 341: case i2c_restart_write:
 19808                           
 19809                           
 19810                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 19811  1DD2  31A2  2273         	fcall	_do_I2C_SEND_RESTART_WRITE
 19812  1DD4  0008               	return
 19813  1DD5                     l7215:	
 19814                           ;i2c_master.c: 344: case i2c_continue:
 19815                           
 19816                           ;i2c_master.c: 343: default:
 19817                           
 19818                           
 19819                           ;i2c_master.c: 345: case i2c_stop:
 19820                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 19821  1DD5  31A2  2283         	fcall	_do_I2C_SEND_STOP
 19822                           
 19823                           ;i2c_master.c: 347: }
 19824  1DD7  0008               	return
 19825  1DD8                     l7221:	
 19826  1DD8  0022               	movlb	2	; select bank2
 19827  1DD9  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 19828  1DDA  0020               	movlb	0	; select bank0
 19829  1DDB  00B2               	movwf	??_do_I2C_TX
 19830  1DDC  0832               	movf	??_do_I2C_TX,w
 19831  1DDD  00B1               	movwf	returnReset@p
 19832  1DDE  3012               	movlw	18
 19833  1DDF  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 19834  1DE0  0086               	movwf	6
 19835  1DE1  3001               	movlw	1	; select bank2/3
 19836  1DE2  0087               	movwf	7
 19837  1DE3  3F41               	moviw [1]fsr1
 19838  1DE4  008A               	movwf	10
 19839  1DE5  3F40               	moviw [0]fsr1
 19840  1DE6  000A               	callw
 19841  1DE7  319D               	pagesel	$
 19842                           
 19843                           ; Switch size 1, requested type "space"
 19844                           ; Number of cases is 4, Range of values is 1 to 4
 19845                           ; switch strategies available:
 19846                           ; Name         Instructions Cycles
 19847                           ; simple_byte           13     7 (average)
 19848                           ; direct_byte           17     9 (fixed)
 19849                           ; jumptable            263     9 (fixed)
 19850                           ;	Chosen strategy is simple_byte
 19851  1DE8  3A01               	xorlw	1	; case 1
 19852  1DE9  1903               	skipnz
 19853  1DEA  2DD5               	goto	l7215
 19854  1DEB  3A03               	xorlw	3	; case 2
 19855  1DEC  1903               	skipnz
 19856  1DED  2DCF               	goto	l7207
 19857  1DEE  3A01               	xorlw	1	; case 3
 19858  1DEF  1903               	skipnz
 19859  1DF0  2DD2               	goto	l7211
 19860  1DF1  3A07               	xorlw	7	; case 4
 19861  1DF2  1903               	skipnz
 19862  1DF3  2DD5               	goto	l7215
 19863  1DF4  2DD5               	goto	l7215
 19864                           
 19865                           ;i2c_master.c: 348: }
 19866  1DF5  0008               	return
 19867  1DF6                     l754:	
 19868                           
 19869                           ;i2c_master.c: 349: else
 19870                           ;i2c_master.c: 350: {
 19871                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 19872  1DF6  0022               	movlb	2	; select bank2
 19873  1DF7  11A0               	bcf	_i2c_status^(0+256),3
 19874                           
 19875                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 19876  1DF8  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 19877  1DF9  0020               	movlb	0	; select bank0
 19878  1DFA  00B3               	movwf	??_do_I2C_TX+1
 19879  1DFB  0022               	movlb	2	; select bank2
 19880  1DFC  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 19881  1DFD  0020               	movlb	0	; select bank0
 19882  1DFE  00B2               	movwf	??_do_I2C_TX
 19883  1DFF  0022               	movlb	2	; select bank2
 19884  1E00  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 19885  1E01  1903               	skipnz
 19886  1E02  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 19887  1E03  0020               	movlb	0	; select bank0
 19888  1E04  0832               	movf	??_do_I2C_TX,w
 19889  1E05  0084               	movwf	4
 19890  1E06  0833               	movf	??_do_I2C_TX+1,w
 19891  1E07  0085               	movwf	5
 19892  1E08  0800               	movf	0,w	;code access
 19893  1E09  31A2  223B  319D   	fcall	_i2c1_driver_TXData
 19894                           
 19895                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 19896  1E0C  3001               	movlw	1
 19897  1E0D  0022               	movlb	2	; select bank2
 19898  1E0E  02A4               	subwf	(_i2c_status^(0+256)+4),f
 19899  1E0F  3000               	movlw	0
 19900  1E10  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 19901  1E11  0824               	movf	(_i2c_status^(0+256)+4),w
 19902  1E12  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 19903  1E13  1D03               	btfss	3,2
 19904  1E14  2E17               	goto	l7229
 19905  1E15  3006               	movlw	6
 19906  1E16  2E18               	goto	L37
 19907  1E17                     l7229:	
 19908  1E17  3003               	movlw	3
 19909  1E18                     L37:	
 19910  1E18  0020               	movlb	0	; select bank0
 19911  1E19  00B4               	movwf	_do_I2C_TX$1134
 19912  1E1A  3000               	movlw	0
 19913  1E1B  00B5               	movwf	_do_I2C_TX$1134+1
 19914  1E1C  0834               	movf	_do_I2C_TX$1134,w
 19915  1E1D  0008               	return
 19916  1E1E                     __end_of_do_I2C_TX:	
 19917                           
 19918                           	psect	text73
 19919  2746                     __ptext73:	
 19920 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 19921 ;; Defined at:
 19922 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 19923 ;; Parameters:    Size  Location     Type
 19924 ;;		None
 19925 ;; Auto vars:     Size  Location     Type
 19926 ;;		None
 19927 ;; Return value:  Size  Location     Type
 19928 ;;                  1    wreg      enum E8364
 19929 ;; Registers used:
 19930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19931 ;; Tracked objects:
 19932 ;;		On entry : 0/0
 19933 ;;		On exit  : 0/0
 19934 ;;		Unchanged: 0/0
 19935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19938 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19939 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19940 ;;Total ram usage:        1 bytes
 19941 ;; Hardware stack levels used:    1
 19942 ;; Hardware stack levels required when called:    8
 19943 ;; This function calls:
 19944 ;;		_do_I2C_SEND_RESTART
 19945 ;;		_do_I2C_SEND_STOP
 19946 ;;		_returnReset
 19947 ;;		_returnStop
 19948 ;; This function is called by:
 19949 ;;		_i2c_ISR
 19950 ;;		i1_i2c_ISR
 19951 ;; This function uses a non-reentrant model
 19952 ;;
 19953                           
 19954                           
 19955                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 19956  2746                     _do_I2C_DO_ADDRESS_NACK:	
 19957                           
 19958                           ;Skip over the trampoline to the duplicate function for level 1
 19959  2746  1C7E               	btfss	126,0
 19960  2747  2F4A               	goto	l7187
 19961  2748  31A6  2E13         	ljmp	i1l8271
 19962  274A                     _do_I2C_DO_ADDRESS_NACK$intlevel0:	
 19963  274A                     l7187:	
 19964                           ;incstack = 0
 19965                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19966                           
 19967                           
 19968                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 19969  274A  0022               	movlb	2	; select bank2
 19970  274B  11A0               	bcf	_i2c_status^(0+256),3
 19971                           
 19972                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 19973  274C  3002               	movlw	2
 19974  274D  0020               	movlb	0	; select bank0
 19975  274E  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 19976  274F  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 19977  2750  0022               	movlb	2	; select bank2
 19978  2751  00AB               	movwf	(_i2c_status^(0+256)+11)
 19979                           
 19980                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 19981  2752  2F59               	goto	l7201
 19982  2753                     l7191:	
 19983                           ;i2c_master.c: 324: {
 19984                           ;i2c_master.c: 325: case i2c_restart_read:
 19985                           
 19986                           
 19987                           ;i2c_master.c: 326: case i2c_restart_write:
 19988                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 19989  2753  31A2  227B         	fcall	_do_I2C_SEND_RESTART
 19990  2755  0008               	return
 19991  2756                     l7195:	
 19992                           ;i2c_master.c: 328: default:
 19993                           
 19994                           
 19995                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 19996  2756  31A2  2283         	fcall	_do_I2C_SEND_STOP
 19997                           
 19998                           ;i2c_master.c: 330: }
 19999  2758  0008               	return
 20000  2759                     l7201:	
 20001  2759  0022               	movlb	2	; select bank2
 20002  275A  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 20003  275B  0020               	movlb	0	; select bank0
 20004  275C  00B1               	movwf	??_do_I2C_DO_ADDRESS_NACK
 20005  275D  0831               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 20006  275E  00B1               	movwf	returnReset@p
 20007  275F  3010               	movlw	16
 20008  2760  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 20009  2761  0086               	movwf	6
 20010  2762  3001               	movlw	1	; select bank2/3
 20011  2763  0087               	movwf	7
 20012  2764  3F41               	moviw [1]fsr1
 20013  2765  008A               	movwf	10
 20014  2766  3F40               	moviw [0]fsr1
 20015  2767  000A               	callw
 20016  2768  31A7               	pagesel	$
 20017                           
 20018                           ; Switch size 1, requested type "space"
 20019                           ; Number of cases is 2, Range of values is 2 to 3
 20020                           ; switch strategies available:
 20021                           ; Name         Instructions Cycles
 20022                           ; simple_byte            7     4 (average)
 20023                           ; direct_byte           13     9 (fixed)
 20024                           ; jumptable            263     9 (fixed)
 20025                           ;	Chosen strategy is simple_byte
 20026  2769  3A02               	xorlw	2	; case 2
 20027  276A  1903               	skipnz
 20028  276B  2F53               	goto	l7191
 20029  276C  3A01               	xorlw	1	; case 3
 20030  276D  1903               	skipnz
 20031  276E  2F53               	goto	l7191
 20032  276F  2F56               	goto	l7195
 20033  2770  0008               	return
 20034  2771                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 20035                           
 20036                           	psect	text74
 20037  229B                     __ptext74:	
 20038 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 20039 ;; Defined at:
 20040 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 20041 ;; Parameters:    Size  Location     Type
 20042 ;;		None
 20043 ;; Auto vars:     Size  Location     Type
 20044 ;;		None
 20045 ;; Return value:  Size  Location     Type
 20046 ;;                  1    wreg      enum E8364
 20047 ;; Registers used:
 20048 ;;		wreg, status,2, status,0, pclath, cstack
 20049 ;; Tracked objects:
 20050 ;;		On entry : 0/0
 20051 ;;		On exit  : 0/0
 20052 ;;		Unchanged: 0/0
 20053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20058 ;;Total ram usage:        0 bytes
 20059 ;; Hardware stack levels used:    1
 20060 ;; Hardware stack levels required when called:    7
 20061 ;; This function calls:
 20062 ;;		_i2c1_driver_sendNACK
 20063 ;; This function is called by:
 20064 ;;		_do_I2C_RX
 20065 ;;		_i2c_ISR
 20066 ;;		i1_i2c_ISR
 20067 ;; This function uses a non-reentrant model
 20068 ;;
 20069                           
 20070                           
 20071                           ;psect for function _do_I2C_DO_NACK_RESTART
 20072  229B                     _do_I2C_DO_NACK_RESTART:	
 20073                           
 20074                           ;Skip over the trampoline to the duplicate function for level 1
 20075  229B  1C7E               	btfss	126,0
 20076  229C  2A9F               	goto	l7123
 20077  229D  31A1  29F7         	ljmp	i1l7905
 20078  229F                     _do_I2C_DO_NACK_RESTART$intlevel0:	
 20079  229F                     l7123:	
 20080                           ;incstack = 0
 20081                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20082                           
 20083                           
 20084                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 20085  229F  31A2  2203         	fcall	_i2c1_driver_sendNACK
 20086                           
 20087                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 20088  22A1  3009               	movlw	9
 20089  22A2  0008               	return
 20090  22A3                     __end_of_do_I2C_DO_NACK_RESTART:	
 20091                           
 20092                           	psect	text75
 20093  2293                     __ptext75:	
 20094 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 20095 ;; Defined at:
 20096 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 20097 ;; Parameters:    Size  Location     Type
 20098 ;;		None
 20099 ;; Auto vars:     Size  Location     Type
 20100 ;;		None
 20101 ;; Return value:  Size  Location     Type
 20102 ;;                  1    wreg      enum E8364
 20103 ;; Registers used:
 20104 ;;		wreg, status,2, status,0, pclath, cstack
 20105 ;; Tracked objects:
 20106 ;;		On entry : 0/0
 20107 ;;		On exit  : 0/0
 20108 ;;		Unchanged: 0/0
 20109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20114 ;;Total ram usage:        0 bytes
 20115 ;; Hardware stack levels used:    1
 20116 ;; Hardware stack levels required when called:    7
 20117 ;; This function calls:
 20118 ;;		_i2c1_driver_sendNACK
 20119 ;; This function is called by:
 20120 ;;		_do_I2C_RX
 20121 ;;		_i2c_ISR
 20122 ;;		i1_i2c_ISR
 20123 ;; This function uses a non-reentrant model
 20124 ;;
 20125                           
 20126                           
 20127                           ;psect for function _do_I2C_DO_NACK_STOP
 20128  2293                     _do_I2C_DO_NACK_STOP:	
 20129                           
 20130                           ;Skip over the trampoline to the duplicate function for level 1
 20131  2293  1C7E               	btfss	126,0
 20132  2294  2A97               	goto	l7117
 20133  2295  31A1  29F3         	ljmp	i1l7899
 20134  2297                     _do_I2C_DO_NACK_STOP$intlevel0:	
 20135  2297                     l7117:	
 20136                           ;incstack = 0
 20137                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 20138                           
 20139                           
 20140                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 20141  2297  31A2  2203         	fcall	_i2c1_driver_sendNACK
 20142                           
 20143                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 20144  2299  300A               	movlw	10
 20145  229A  0008               	return
 20146  229B                     __end_of_do_I2C_DO_NACK_STOP:	
 20147                           
 20148                           	psect	text76
 20149  228B                     __ptext76:	
 20150 ;; *************** function _do_I2C_DO_ACK *****************
 20151 ;; Defined at:
 20152 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 20153 ;; Parameters:    Size  Location     Type
 20154 ;;		None
 20155 ;; Auto vars:     Size  Location     Type
 20156 ;;		None
 20157 ;; Return value:  Size  Location     Type
 20158 ;;                  1    wreg      enum E8364
 20159 ;; Registers used:
 20160 ;;		wreg, status,2, status,0, pclath, cstack
 20161 ;; Tracked objects:
 20162 ;;		On entry : 0/0
 20163 ;;		On exit  : 0/0
 20164 ;;		Unchanged: 0/0
 20165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20170 ;;Total ram usage:        0 bytes
 20171 ;; Hardware stack levels used:    1
 20172 ;; Hardware stack levels required when called:    7
 20173 ;; This function calls:
 20174 ;;		_i2c1_driver_sendACK
 20175 ;; This function is called by:
 20176 ;;		_i2c_ISR
 20177 ;;		i1_i2c_ISR
 20178 ;; This function uses a non-reentrant model
 20179 ;;
 20180                           
 20181                           
 20182                           ;psect for function _do_I2C_DO_ACK
 20183  228B                     _do_I2C_DO_ACK:	
 20184                           
 20185                           ;Skip over the trampoline to the duplicate function for level 1
 20186  228B  1C7E               	btfss	126,0
 20187  228C  2A8F               	goto	l7181
 20188  228D  31A1  29EF         	ljmp	i1l8265
 20189  228F                     _do_I2C_DO_ACK$intlevel0:	
 20190  228F                     l7181:	
 20191                           ;incstack = 0
 20192                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 20193                           
 20194                           
 20195                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 20196  228F  31A1  21FF         	fcall	_i2c1_driver_sendACK
 20197                           
 20198                           ;i2c_master.c: 302: return I2C_RCEN;
 20199  2291  3005               	movlw	5
 20200  2292  0008               	return
 20201  2293                     __end_of_do_I2C_DO_ACK:	
 20202                           
 20203                           	psect	text77
 20204  22EB                     __ptext77:	
 20205 ;; *************** function _do_I2C_RCEN *****************
 20206 ;; Defined at:
 20207 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 20208 ;; Parameters:    Size  Location     Type
 20209 ;;		None
 20210 ;; Auto vars:     Size  Location     Type
 20211 ;;		None
 20212 ;; Return value:  Size  Location     Type
 20213 ;;                  1    wreg      enum E8364
 20214 ;; Registers used:
 20215 ;;		wreg, status,2, status,0, pclath, cstack
 20216 ;; Tracked objects:
 20217 ;;		On entry : 0/0
 20218 ;;		On exit  : 0/0
 20219 ;;		Unchanged: 0/0
 20220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20225 ;;Total ram usage:        0 bytes
 20226 ;; Hardware stack levels used:    1
 20227 ;; Hardware stack levels required when called:    7
 20228 ;; This function calls:
 20229 ;;		_i2c1_driver_startRX
 20230 ;; This function is called by:
 20231 ;;		_i2c_ISR
 20232 ;;		i1_i2c_ISR
 20233 ;; This function uses a non-reentrant model
 20234 ;;
 20235                           
 20236                           
 20237                           ;psect for function _do_I2C_RCEN
 20238  22EB                     _do_I2C_RCEN:	
 20239                           
 20240                           ;Skip over the trampoline to the duplicate function for level 1
 20241  22EB  1C7E               	btfss	126,0
 20242  22EC  2AEF               	goto	l7173
 20243  22ED  31A2  2A29         	ljmp	i1l6359
 20244  22EF                     _do_I2C_RCEN$intlevel0:	
 20245  22EF                     l7173:	
 20246                           ;incstack = 0
 20247                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 20248                           
 20249                           
 20250                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 20251  22EF  0022               	movlb	2	; select bank2
 20252  22F0  11A0               	bcf	_i2c_status^(0+256),3
 20253                           
 20254                           ;i2c_master.c: 295: i2c1_driver_startRX();
 20255  22F1  31A1  21CB         	fcall	_i2c1_driver_startRX
 20256                           
 20257                           ;i2c_master.c: 296: return I2C_RX;
 20258  22F3  3004               	movlw	4
 20259  22F4  0008               	return
 20260  22F5                     __end_of_do_I2C_RCEN:	
 20261                           
 20262                           	psect	text78
 20263  231E                     __ptext78:	
 20264 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 20265 ;; Defined at:
 20266 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 20267 ;; Parameters:    Size  Location     Type
 20268 ;;		None
 20269 ;; Auto vars:     Size  Location     Type
 20270 ;;		None
 20271 ;; Return value:  Size  Location     Type
 20272 ;;                  1    wreg      enum E8364
 20273 ;; Registers used:
 20274 ;;		wreg, status,2, status,0, pclath, cstack
 20275 ;; Tracked objects:
 20276 ;;		On entry : 0/0
 20277 ;;		On exit  : 0/0
 20278 ;;		Unchanged: 0/0
 20279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20284 ;;Total ram usage:        0 bytes
 20285 ;; Hardware stack levels used:    1
 20286 ;; Hardware stack levels required when called:    7
 20287 ;; This function calls:
 20288 ;;		_i2c1_driver_TXData
 20289 ;; This function is called by:
 20290 ;;		_i2c_ISR
 20291 ;;		i1_i2c_ISR
 20292 ;; This function uses a non-reentrant model
 20293 ;;
 20294                           
 20295                           
 20296                           ;psect for function _do_I2C_SEND_ADR_WRITE
 20297  231E                     _do_I2C_SEND_ADR_WRITE:	
 20298                           
 20299                           ;Skip over the trampoline to the duplicate function for level 1
 20300  231E  1C7E               	btfss	126,0
 20301  231F  2B22               	goto	l7165
 20302  2320  31A2  2A54         	ljmp	i1l8257
 20303  2322                     _do_I2C_SEND_ADR_WRITE$intlevel0:	
 20304  2322                     l7165:	
 20305                           ;incstack = 0
 20306                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20307                           
 20308                           
 20309                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 20310  2322  0022               	movlb	2	; select bank2
 20311  2323  15A0               	bsf	_i2c_status^(0+256),3
 20312                           
 20313                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 20314  2324  3521               	lslf	(_i2c_status^(0+256)+1),w
 20315  2325  31A2  223B         	fcall	_i2c1_driver_TXData
 20316                           
 20317                           ;i2c_master.c: 289: return I2C_TX;
 20318  2327  3003               	movlw	3
 20319  2328  0008               	return
 20320  2329                     __end_of_do_I2C_SEND_ADR_WRITE:	
 20321                           
 20322                           	psect	text79
 20323  2335                     __ptext79:	
 20324 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 20325 ;; Defined at:
 20326 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 20327 ;; Parameters:    Size  Location     Type
 20328 ;;		None
 20329 ;; Auto vars:     Size  Location     Type
 20330 ;;		None
 20331 ;; Return value:  Size  Location     Type
 20332 ;;                  1    wreg      enum E8364
 20333 ;; Registers used:
 20334 ;;		wreg, status,2, status,0, pclath, cstack
 20335 ;; Tracked objects:
 20336 ;;		On entry : 0/0
 20337 ;;		On exit  : 0/0
 20338 ;;		Unchanged: 0/0
 20339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20344 ;;Total ram usage:        0 bytes
 20345 ;; Hardware stack levels used:    1
 20346 ;; Hardware stack levels required when called:    7
 20347 ;; This function calls:
 20348 ;;		_i2c1_driver_TXData
 20349 ;; This function is called by:
 20350 ;;		_i2c_ISR
 20351 ;;		i1_i2c_ISR
 20352 ;; This function uses a non-reentrant model
 20353 ;;
 20354                           
 20355                           
 20356                           ;psect for function _do_I2C_SEND_ADR_READ
 20357  2335                     _do_I2C_SEND_ADR_READ:	
 20358                           
 20359                           ;Skip over the trampoline to the duplicate function for level 1
 20360  2335  1C7E               	btfss	126,0
 20361  2336  2B39               	goto	l7157
 20362  2337  31A2  2A5B         	ljmp	i1l8249
 20363  2339                     _do_I2C_SEND_ADR_READ$intlevel0:	
 20364  2339                     l7157:	
 20365                           ;incstack = 0
 20366                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 20367                           
 20368                           
 20369                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 20370  2339  0022               	movlb	2	; select bank2
 20371  233A  15A0               	bsf	_i2c_status^(0+256),3
 20372                           
 20373                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 20374  233B  1403               	setc
 20375  233C  0D21               	rlf	(_i2c_status^(0+256)+1),w
 20376  233D  31A2  223B         	fcall	_i2c1_driver_TXData
 20377                           
 20378                           ;i2c_master.c: 282: return I2C_RCEN;
 20379  233F  3005               	movlw	5
 20380  2340  0008               	return
 20381  2341                     __end_of_do_I2C_SEND_ADR_READ:	
 20382                           
 20383                           	psect	text80
 20384  2283                     __ptext80:	
 20385 ;; *************** function _do_I2C_SEND_STOP *****************
 20386 ;; Defined at:
 20387 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 20388 ;; Parameters:    Size  Location     Type
 20389 ;;		None
 20390 ;; Auto vars:     Size  Location     Type
 20391 ;;		None
 20392 ;; Return value:  Size  Location     Type
 20393 ;;                  1    wreg      enum E8364
 20394 ;; Registers used:
 20395 ;;		wreg, status,2, status,0, pclath, cstack
 20396 ;; Tracked objects:
 20397 ;;		On entry : 0/0
 20398 ;;		On exit  : 0/0
 20399 ;;		Unchanged: 0/0
 20400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20405 ;;Total ram usage:        0 bytes
 20406 ;; Hardware stack levels used:    1
 20407 ;; Hardware stack levels required when called:    7
 20408 ;; This function calls:
 20409 ;;		_i2c1_driver_stop
 20410 ;; This function is called by:
 20411 ;;		_do_I2C_DO_ADDRESS_NACK
 20412 ;;		_do_I2C_TX
 20413 ;;		_do_I2C_TX_EMPTY
 20414 ;;		_i2c_ISR
 20415 ;;		i1_i2c_ISR
 20416 ;; This function uses a non-reentrant model
 20417 ;;
 20418                           
 20419                           
 20420                           ;psect for function _do_I2C_SEND_STOP
 20421  2283                     _do_I2C_SEND_STOP:	
 20422                           
 20423                           ;Skip over the trampoline to the duplicate function for level 1
 20424  2283  1C7E               	btfss	126,0
 20425  2284  2A87               	goto	l7111
 20426  2285  31A1  29EB         	ljmp	i1l7893
 20427  2287                     _do_I2C_SEND_STOP$intlevel0:	
 20428  2287                     l7111:	
 20429                           ;incstack = 0
 20430                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 20431                           
 20432                           
 20433                           ;i2c_master.c: 274: i2c1_driver_stop();
 20434  2287  31A1  21C8         	fcall	_i2c1_driver_stop
 20435                           
 20436                           ;i2c_master.c: 275: return I2C_IDLE;
 20437  2289  3000               	movlw	0
 20438  228A  0008               	return
 20439  228B                     __end_of_do_I2C_SEND_STOP:	
 20440                           
 20441                           	psect	text81
 20442  227B                     __ptext81:	
 20443 ;; *************** function _do_I2C_SEND_RESTART *****************
 20444 ;; Defined at:
 20445 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 20446 ;; Parameters:    Size  Location     Type
 20447 ;;		None
 20448 ;; Auto vars:     Size  Location     Type
 20449 ;;		None
 20450 ;; Return value:  Size  Location     Type
 20451 ;;                  1    wreg      enum E8364
 20452 ;; Registers used:
 20453 ;;		wreg, status,2, status,0, pclath, cstack
 20454 ;; Tracked objects:
 20455 ;;		On entry : 0/0
 20456 ;;		On exit  : 0/0
 20457 ;;		Unchanged: 0/0
 20458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20463 ;;Total ram usage:        0 bytes
 20464 ;; Hardware stack levels used:    1
 20465 ;; Hardware stack levels required when called:    7
 20466 ;; This function calls:
 20467 ;;		_i2c1_driver_restart
 20468 ;; This function is called by:
 20469 ;;		_do_I2C_DO_ADDRESS_NACK
 20470 ;;		_do_I2C_TX_EMPTY
 20471 ;;		_i2c_ISR
 20472 ;;		i1_i2c_ISR
 20473 ;; This function uses a non-reentrant model
 20474 ;;
 20475                           
 20476                           
 20477                           ;psect for function _do_I2C_SEND_RESTART
 20478  227B                     _do_I2C_SEND_RESTART:	
 20479                           
 20480                           ;Skip over the trampoline to the duplicate function for level 1
 20481  227B  1C7E               	btfss	126,0
 20482  227C  2A7F               	goto	l7105
 20483  227D  31A1  29E7         	ljmp	i1l7887
 20484  227F                     _do_I2C_SEND_RESTART$intlevel0:	
 20485  227F                     l7105:	
 20486                           ;incstack = 0
 20487                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20488                           
 20489                           
 20490                           ;i2c_master.c: 268: i2c1_driver_restart();
 20491  227F  31A1  21C5         	fcall	_i2c1_driver_restart
 20492                           
 20493                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 20494  2281  3001               	movlw	1
 20495  2282  0008               	return
 20496  2283                     __end_of_do_I2C_SEND_RESTART:	
 20497                           
 20498                           	psect	text82
 20499  2273                     __ptext82:	
 20500 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 20501 ;; Defined at:
 20502 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 20503 ;; Parameters:    Size  Location     Type
 20504 ;;		None
 20505 ;; Auto vars:     Size  Location     Type
 20506 ;;		None
 20507 ;; Return value:  Size  Location     Type
 20508 ;;                  1    wreg      enum E8364
 20509 ;; Registers used:
 20510 ;;		wreg, status,2, status,0, pclath, cstack
 20511 ;; Tracked objects:
 20512 ;;		On entry : 0/0
 20513 ;;		On exit  : 0/0
 20514 ;;		Unchanged: 0/0
 20515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20520 ;;Total ram usage:        0 bytes
 20521 ;; Hardware stack levels used:    1
 20522 ;; Hardware stack levels required when called:    7
 20523 ;; This function calls:
 20524 ;;		_i2c1_driver_restart
 20525 ;; This function is called by:
 20526 ;;		_do_I2C_TX
 20527 ;;		_i2c_ISR
 20528 ;;		i1_i2c_ISR
 20529 ;; This function uses a non-reentrant model
 20530 ;;
 20531                           
 20532                           
 20533                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 20534  2273                     _do_I2C_SEND_RESTART_WRITE:	
 20535                           
 20536                           ;Skip over the trampoline to the duplicate function for level 1
 20537  2273  1C7E               	btfss	126,0
 20538  2274  2A77               	goto	l7099
 20539  2275  31A1  29E3         	ljmp	i1l7881
 20540  2277                     _do_I2C_SEND_RESTART_WRITE$intlevel0:	
 20541  2277                     l7099:	
 20542                           ;incstack = 0
 20543                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20544                           
 20545                           
 20546                           ;i2c_master.c: 262: i2c1_driver_restart();
 20547  2277  31A1  21C5         	fcall	_i2c1_driver_restart
 20548                           
 20549                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 20550  2279  3002               	movlw	2
 20551  227A  0008               	return
 20552  227B                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 20553                           
 20554                           	psect	text83
 20555  226B                     __ptext83:	
 20556 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 20557 ;; Defined at:
 20558 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 20559 ;; Parameters:    Size  Location     Type
 20560 ;;		None
 20561 ;; Auto vars:     Size  Location     Type
 20562 ;;		None
 20563 ;; Return value:  Size  Location     Type
 20564 ;;                  1    wreg      enum E8364
 20565 ;; Registers used:
 20566 ;;		wreg, status,2, status,0, pclath, cstack
 20567 ;; Tracked objects:
 20568 ;;		On entry : 0/0
 20569 ;;		On exit  : 0/0
 20570 ;;		Unchanged: 0/0
 20571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20576 ;;Total ram usage:        0 bytes
 20577 ;; Hardware stack levels used:    1
 20578 ;; Hardware stack levels required when called:    7
 20579 ;; This function calls:
 20580 ;;		_i2c1_driver_restart
 20581 ;; This function is called by:
 20582 ;;		_do_I2C_TX
 20583 ;;		_i2c_ISR
 20584 ;;		i1_i2c_ISR
 20585 ;; This function uses a non-reentrant model
 20586 ;;
 20587                           
 20588                           
 20589                           ;psect for function _do_I2C_SEND_RESTART_READ
 20590  226B                     _do_I2C_SEND_RESTART_READ:	
 20591                           
 20592                           ;Skip over the trampoline to the duplicate function for level 1
 20593  226B  1C7E               	btfss	126,0
 20594  226C  2A6F               	goto	l7093
 20595  226D  31A1  29DF         	ljmp	i1l7875
 20596  226F                     _do_I2C_SEND_RESTART_READ$intlevel0:	
 20597  226F                     l7093:	
 20598                           ;incstack = 0
 20599                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 20600                           
 20601                           
 20602                           ;i2c_master.c: 256: i2c1_driver_restart();
 20603  226F  31A1  21C5         	fcall	_i2c1_driver_restart
 20604                           
 20605                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 20606  2271  3001               	movlw	1
 20607  2272  0008               	return
 20608  2273                     __end_of_do_I2C_SEND_RESTART_READ:	
 20609                           
 20610                           	psect	text84
 20611  22C6                     __ptext84:	
 20612 ;; *************** function _do_I2C_IDLE *****************
 20613 ;; Defined at:
 20614 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 20615 ;; Parameters:    Size  Location     Type
 20616 ;;		None
 20617 ;; Auto vars:     Size  Location     Type
 20618 ;;		None
 20619 ;; Return value:  Size  Location     Type
 20620 ;;                  1    wreg      enum E8364
 20621 ;; Registers used:
 20622 ;;		wreg, status,2
 20623 ;; Tracked objects:
 20624 ;;		On entry : 0/0
 20625 ;;		On exit  : 0/0
 20626 ;;		Unchanged: 0/0
 20627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20632 ;;Total ram usage:        0 bytes
 20633 ;; Hardware stack levels used:    1
 20634 ;; Hardware stack levels required when called:    6
 20635 ;; This function calls:
 20636 ;;		Nothing
 20637 ;; This function is called by:
 20638 ;;		_i2c_ISR
 20639 ;;		i1_i2c_ISR
 20640 ;; This function uses a non-reentrant model
 20641 ;;
 20642                           
 20643                           
 20644                           ;psect for function _do_I2C_IDLE
 20645  22C6                     _do_I2C_IDLE:	
 20646                           
 20647                           ;Skip over the trampoline to the duplicate function for level 1
 20648  22C6  1C7E               	btfss	126,0
 20649  22C7  2ACA               	goto	l7149
 20650  22C8  31A2  2A1A         	ljmp	i1l6335
 20651  22CA                     _do_I2C_IDLE$intlevel0:	
 20652  22CA                     l7149:	
 20653                           ;incstack = 0
 20654                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 20655                           
 20656                           
 20657                           ;i2c_master.c: 249: i2c_status.busy = 0;
 20658  22CA  0022               	movlb	2	; select bank2
 20659  22CB  1020               	bcf	_i2c_status^(0+256),0
 20660                           
 20661                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 20662  22CC  01AB               	clrf	(_i2c_status^(0+256)+11)
 20663                           
 20664                           ;i2c_master.c: 251: return I2C_RESET;
 20665  22CD  300E               	movlw	14
 20666  22CE  0008               	return
 20667  22CF                     __end_of_do_I2C_IDLE:	
 20668                           
 20669                           	psect	text85
 20670  2313                     __ptext85:	
 20671 ;; *************** function _do_I2C_RESET *****************
 20672 ;; Defined at:
 20673 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 20674 ;; Parameters:    Size  Location     Type
 20675 ;;		None
 20676 ;; Auto vars:     Size  Location     Type
 20677 ;;		None
 20678 ;; Return value:  Size  Location     Type
 20679 ;;                  1    wreg      enum E8364
 20680 ;; Registers used:
 20681 ;;		wreg, status,2, status,0, pclath, cstack
 20682 ;; Tracked objects:
 20683 ;;		On entry : 0/0
 20684 ;;		On exit  : 0/0
 20685 ;;		Unchanged: 0/0
 20686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20691 ;;Total ram usage:        0 bytes
 20692 ;; Hardware stack levels used:    1
 20693 ;; Hardware stack levels required when called:    7
 20694 ;; This function calls:
 20695 ;;		_i2c1_driver_resetBus
 20696 ;; This function is called by:
 20697 ;;		_i2c_ISR
 20698 ;;		i1_i2c_ISR
 20699 ;; This function uses a non-reentrant model
 20700 ;;
 20701                           
 20702                           
 20703                           ;psect for function _do_I2C_RESET
 20704  2313                     _do_I2C_RESET:	
 20705                           
 20706                           ;Skip over the trampoline to the duplicate function for level 1
 20707  2313  1C7E               	btfss	126,0
 20708  2314  2B17               	goto	l7139
 20709  2315  31A2  2A4D         	ljmp	i1l6325
 20710  2317                     _do_I2C_RESET$intlevel0:	
 20711  2317                     l7139:	
 20712                           ;incstack = 0
 20713                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 20714                           
 20715                           
 20716                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 20717  2317  3198  2000         	fcall	_i2c1_driver_resetBus
 20718                           
 20719                           ;i2c_master.c: 242: i2c_status.busy = 0;
 20720  2319  0022               	movlb	2	; select bank2
 20721  231A  1020               	bcf	_i2c_status^(0+256),0
 20722                           
 20723                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 20724  231B  01AB               	clrf	(_i2c_status^(0+256)+11)
 20725                           
 20726                           ;i2c_master.c: 244: return I2C_RESET;
 20727  231C  300E               	movlw	14
 20728  231D  0008               	return
 20729  231E                     __end_of_do_I2C_RESET:	
 20730                           
 20731                           	psect	text86
 20732  2771                     __ptext86:	
 20733 ;; *************** function _do_I2C_TX_EMPTY *****************
 20734 ;; Defined at:
 20735 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 20736 ;; Parameters:    Size  Location     Type
 20737 ;;		None
 20738 ;; Auto vars:     Size  Location     Type
 20739 ;;		None
 20740 ;; Return value:  Size  Location     Type
 20741 ;;                  1    wreg      enum E8364
 20742 ;; Registers used:
 20743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20744 ;; Tracked objects:
 20745 ;;		On entry : 0/0
 20746 ;;		On exit  : 0/0
 20747 ;;		Unchanged: 0/0
 20748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20751 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20752 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20753 ;;Total ram usage:        1 bytes
 20754 ;; Hardware stack levels used:    1
 20755 ;; Hardware stack levels required when called:    8
 20756 ;; This function calls:
 20757 ;;		_do_I2C_SEND_RESTART
 20758 ;;		_do_I2C_SEND_STOP
 20759 ;;		_mssp1_setIRQ
 20760 ;;		_returnReset
 20761 ;;		_returnStop
 20762 ;; This function is called by:
 20763 ;;		_i2c_ISR
 20764 ;;		i1_i2c_ISR
 20765 ;; This function uses a non-reentrant model
 20766 ;;
 20767                           
 20768                           
 20769                           ;psect for function _do_I2C_TX_EMPTY
 20770  2771                     _do_I2C_TX_EMPTY:	
 20771                           
 20772                           ;Skip over the trampoline to the duplicate function for level 1
 20773  2771  1C7E               	btfss	126,0
 20774  2772  2F75               	goto	l7259
 20775  2773  31A7  2F1C         	ljmp	i1l8343
 20776  2775                     _do_I2C_TX_EMPTY$intlevel0:	
 20777  2775                     l7259:	
 20778                           ;incstack = 0
 20779                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20780                           
 20781                           
 20782                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 20783  2775  0022               	movlb	2	; select bank2
 20784  2776  1520               	bsf	_i2c_status^(0+256),2
 20785                           
 20786                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 20787  2777  2F82               	goto	l7277
 20788  2778                     l7261:	
 20789                           ;i2c_master.c: 386: {
 20790                           ;i2c_master.c: 387: case i2c_restart_read:
 20791                           
 20792                           
 20793                           ;i2c_master.c: 388: case i2c_restart_write:
 20794                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 20795  2778  31A2  227B         	fcall	_do_I2C_SEND_RESTART
 20796  277A  0008               	return
 20797  277B                     l7265:	
 20798                           ;i2c_master.c: 390: case i2c_continue:
 20799                           
 20800                           
 20801                           ;i2c_master.c: 391: mssp1_setIRQ();
 20802  277B  31A1  21D1         	fcall	_mssp1_setIRQ
 20803                           
 20804                           ;i2c_master.c: 392: return I2C_TX;
 20805  277D  3003               	movlw	3
 20806  277E  0008               	return
 20807  277F                     l7271:	
 20808                           ;i2c_master.c: 394: case i2c_stop:
 20809                           
 20810                           ;i2c_master.c: 393: default:
 20811                           
 20812                           
 20813                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 20814  277F  31A2  2283         	fcall	_do_I2C_SEND_STOP
 20815                           
 20816                           ;i2c_master.c: 396: }
 20817  2781  0008               	return
 20818  2782                     l7277:	
 20819  2782  0022               	movlb	2	; select bank2
 20820  2783  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 20821  2784  0020               	movlb	0	; select bank0
 20822  2785  00B1               	movwf	??_do_I2C_TX_EMPTY
 20823  2786  0831               	movf	??_do_I2C_TX_EMPTY,w
 20824  2787  00B1               	movwf	returnReset@p
 20825  2788  300C               	movlw	12
 20826  2789  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 20827  278A  0086               	movwf	6
 20828  278B  3001               	movlw	1	; select bank2/3
 20829  278C  0087               	movwf	7
 20830  278D  3F41               	moviw [1]fsr1
 20831  278E  008A               	movwf	10
 20832  278F  3F40               	moviw [0]fsr1
 20833  2790  000A               	callw
 20834  2791  31A7               	pagesel	$
 20835                           
 20836                           ; Switch size 1, requested type "space"
 20837                           ; Number of cases is 4, Range of values is 1 to 4
 20838                           ; switch strategies available:
 20839                           ; Name         Instructions Cycles
 20840                           ; simple_byte           13     7 (average)
 20841                           ; direct_byte           17     9 (fixed)
 20842                           ; jumptable            263     9 (fixed)
 20843                           ;	Chosen strategy is simple_byte
 20844  2792  3A01               	xorlw	1	; case 1
 20845  2793  1903               	skipnz
 20846  2794  2F7F               	goto	l7271
 20847  2795  3A03               	xorlw	3	; case 2
 20848  2796  1903               	skipnz
 20849  2797  2F78               	goto	l7261
 20850  2798  3A01               	xorlw	1	; case 3
 20851  2799  1903               	skipnz
 20852  279A  2F78               	goto	l7261
 20853  279B  3A07               	xorlw	7	; case 4
 20854  279C  1903               	skipnz
 20855  279D  2F7B               	goto	l7265
 20856  279E  2F7F               	goto	l7271
 20857  279F  0008               	return
 20858  27A0                     __end_of_do_I2C_TX_EMPTY:	
 20859                           
 20860                           	psect	text87
 20861  21D1                     __ptext87:	
 20862 ;; *************** function _mssp1_setIRQ *****************
 20863 ;; Defined at:
 20864 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 20865 ;; Parameters:    Size  Location     Type
 20866 ;;		None
 20867 ;; Auto vars:     Size  Location     Type
 20868 ;;		None
 20869 ;; Return value:  Size  Location     Type
 20870 ;;                  1    wreg      void 
 20871 ;; Registers used:
 20872 ;;		None
 20873 ;; Tracked objects:
 20874 ;;		On entry : 0/0
 20875 ;;		On exit  : 0/0
 20876 ;;		Unchanged: 0/0
 20877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20882 ;;Total ram usage:        0 bytes
 20883 ;; Hardware stack levels used:    1
 20884 ;; Hardware stack levels required when called:    6
 20885 ;; This function calls:
 20886 ;;		Nothing
 20887 ;; This function is called by:
 20888 ;;		_do_I2C_TX_EMPTY
 20889 ;; This function uses a non-reentrant model
 20890 ;;
 20891                           
 20892                           
 20893                           ;psect for function _mssp1_setIRQ
 20894  21D1                     _mssp1_setIRQ:	
 20895                           
 20896                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 20897                           
 20898                           ;incstack = 0
 20899                           ; Regs used in _mssp1_setIRQ: []
 20900  21D1  0020               	movlb	0	; select bank0
 20901  21D2  1591               	bsf	17,3	;volatile
 20902  21D3  0008               	return
 20903  21D4                     __end_of_mssp1_setIRQ:	
 20904                           
 20905                           	psect	text88
 20906  2373                     __ptext88:	
 20907 ;; *************** function _i2c1_driver_isNACK *****************
 20908 ;; Defined at:
 20909 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 20910 ;; Parameters:    Size  Location     Type
 20911 ;;		None
 20912 ;; Auto vars:     Size  Location     Type
 20913 ;;		None
 20914 ;; Return value:  Size  Location     Type
 20915 ;;		None               void
 20916 ;; Registers used:
 20917 ;;		wreg, status,2, status,0
 20918 ;; Tracked objects:
 20919 ;;		On entry : 0/0
 20920 ;;		On exit  : 0/0
 20921 ;;		Unchanged: 0/0
 20922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20925 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20926 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20927 ;;Total ram usage:        1 bytes
 20928 ;; Hardware stack levels used:    1
 20929 ;; Hardware stack levels required when called:    6
 20930 ;; This function calls:
 20931 ;;		Nothing
 20932 ;; This function is called by:
 20933 ;;		_do_I2C_TX
 20934 ;;		_i2c_ISR
 20935 ;; This function uses a non-reentrant model
 20936 ;;
 20937                           
 20938                           
 20939                           ;psect for function _i2c1_driver_isNACK
 20940  2373                     _i2c1_driver_isNACK:	
 20941                           
 20942                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 20943                           
 20944                           ;incstack = 0
 20945                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 20946  2373  0024               	movlb	4	; select bank4
 20947  2374  0816               	movf	22,w	;volatile
 20948  2375  39BF               	andlw	-65
 20949  2376  3840               	iorlw	64
 20950  2377  0096               	movwf	22	;volatile
 20951  2378  0E16               	swapf	22,w	;volatile
 20952  2379  0C89               	rrf	9,f
 20953  237A  0C89               	rrf	9,f
 20954  237B  3901               	andlw	1
 20955  237C  0020               	movlb	0	; select bank0
 20956  237D  00B1               	movwf	??_i2c1_driver_isNACK
 20957  237E  0C31               	rrf	??_i2c1_driver_isNACK,w
 20958  237F  0008               	return
 20959  2380                     __end_of_i2c1_driver_isNACK:	
 20960                           
 20961                           	psect	text89
 20962  223B                     __ptext89:	
 20963 ;; *************** function _i2c1_driver_TXData *****************
 20964 ;; Defined at:
 20965 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 20966 ;; Parameters:    Size  Location     Type
 20967 ;;  d               1    wreg     unsigned char 
 20968 ;; Auto vars:     Size  Location     Type
 20969 ;;  d               1   17[BANK0 ] unsigned char 
 20970 ;; Return value:  Size  Location     Type
 20971 ;;                  1    wreg      void 
 20972 ;; Registers used:
 20973 ;;		wreg
 20974 ;; Tracked objects:
 20975 ;;		On entry : 0/0
 20976 ;;		On exit  : 0/0
 20977 ;;		Unchanged: 0/0
 20978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20982 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20983 ;;Total ram usage:        1 bytes
 20984 ;; Hardware stack levels used:    1
 20985 ;; Hardware stack levels required when called:    6
 20986 ;; This function calls:
 20987 ;;		Nothing
 20988 ;; This function is called by:
 20989 ;;		_do_I2C_SEND_ADR_READ
 20990 ;;		_do_I2C_SEND_ADR_WRITE
 20991 ;;		_do_I2C_TX
 20992 ;; This function uses a non-reentrant model
 20993 ;;
 20994                           
 20995                           
 20996                           ;psect for function _i2c1_driver_TXData
 20997  223B                     _i2c1_driver_TXData:	
 20998                           
 20999                           ;incstack = 0
 21000                           ; Regs used in _i2c1_driver_TXData: [wreg]
 21001                           ;i2c1_driver_TXData@d stored from wreg
 21002  223B  0020               	movlb	0	; select bank0
 21003  223C  00B1               	movwf	i2c1_driver_TXData@d
 21004                           
 21005                           ;i2c1_driver.c: 188: SSP1BUF = d;
 21006  223D  0831               	movf	i2c1_driver_TXData@d,w
 21007  223E  0024               	movlb	4	; select bank4
 21008  223F  0091               	movwf	17	;volatile
 21009  2240  0008               	return
 21010  2241                     __end_of_i2c1_driver_TXData:	
 21011                           
 21012                           	psect	text90
 21013  21CE                     __ptext90:	
 21014 ;; *************** function _i2c1_driver_getRXData *****************
 21015 ;; Defined at:
 21016 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 21017 ;; Parameters:    Size  Location     Type
 21018 ;;		None
 21019 ;; Auto vars:     Size  Location     Type
 21020 ;;		None
 21021 ;; Return value:  Size  Location     Type
 21022 ;;                  1    wreg      unsigned char 
 21023 ;; Registers used:
 21024 ;;		wreg
 21025 ;; Tracked objects:
 21026 ;;		On entry : 0/0
 21027 ;;		On exit  : 0/0
 21028 ;;		Unchanged: 0/0
 21029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21034 ;;Total ram usage:        0 bytes
 21035 ;; Hardware stack levels used:    1
 21036 ;; Hardware stack levels required when called:    6
 21037 ;; This function calls:
 21038 ;;		Nothing
 21039 ;; This function is called by:
 21040 ;;		_do_I2C_RX
 21041 ;; This function uses a non-reentrant model
 21042 ;;
 21043                           
 21044                           
 21045                           ;psect for function _i2c1_driver_getRXData
 21046  21CE                     _i2c1_driver_getRXData:	
 21047                           
 21048                           ;i2c1_driver.c: 173: return SSP1BUF;
 21049                           
 21050                           ;incstack = 0
 21051                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 21052  21CE  0024               	movlb	4	; select bank4
 21053  21CF  0811               	movf	17,w	;volatile
 21054  21D0  0008               	return
 21055  21D1                     __end_of_i2c1_driver_getRXData:	
 21056                           
 21057                           	psect	text91
 21058  2203                     __ptext91:	
 21059 ;; *************** function _i2c1_driver_sendNACK *****************
 21060 ;; Defined at:
 21061 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 21062 ;; Parameters:    Size  Location     Type
 21063 ;;		None
 21064 ;; Auto vars:     Size  Location     Type
 21065 ;;		None
 21066 ;; Return value:  Size  Location     Type
 21067 ;;                  1    wreg      void 
 21068 ;; Registers used:
 21069 ;;		None
 21070 ;; Tracked objects:
 21071 ;;		On entry : 0/0
 21072 ;;		On exit  : 0/0
 21073 ;;		Unchanged: 0/0
 21074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21079 ;;Total ram usage:        0 bytes
 21080 ;; Hardware stack levels used:    1
 21081 ;; Hardware stack levels required when called:    6
 21082 ;; This function calls:
 21083 ;;		Nothing
 21084 ;; This function is called by:
 21085 ;;		_do_I2C_DO_NACK_STOP
 21086 ;;		_do_I2C_DO_NACK_RESTART
 21087 ;; This function uses a non-reentrant model
 21088 ;;
 21089                           
 21090                           
 21091                           ;psect for function _i2c1_driver_sendNACK
 21092  2203                     _i2c1_driver_sendNACK:	
 21093                           
 21094                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 21095                           
 21096                           ;incstack = 0
 21097                           ; Regs used in _i2c1_driver_sendNACK: []
 21098  2203  0024               	movlb	4	; select bank4
 21099  2204  1696               	bsf	22,5	;volatile
 21100                           
 21101                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 21102  2205  1616               	bsf	22,4	;volatile
 21103  2206  0008               	return
 21104  2207                     __end_of_i2c1_driver_sendNACK:	
 21105                           
 21106                           	psect	text92
 21107  1800                     __ptext92:	
 21108 ;; *************** function _i2c1_driver_resetBus *****************
 21109 ;; Defined at:
 21110 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 21111 ;; Parameters:    Size  Location     Type
 21112 ;;		None
 21113 ;; Auto vars:     Size  Location     Type
 21114 ;;		None
 21115 ;; Return value:  Size  Location     Type
 21116 ;;                  1    wreg      void 
 21117 ;; Registers used:
 21118 ;;		None
 21119 ;; Tracked objects:
 21120 ;;		On entry : 0/0
 21121 ;;		On exit  : 0/0
 21122 ;;		Unchanged: 0/0
 21123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21128 ;;Total ram usage:        0 bytes
 21129 ;; Hardware stack levels used:    1
 21130 ;; Hardware stack levels required when called:    6
 21131 ;; This function calls:
 21132 ;;		Nothing
 21133 ;; This function is called by:
 21134 ;;		_do_I2C_RESET
 21135 ;; This function uses a non-reentrant model
 21136 ;;
 21137                           
 21138                           
 21139                           ;psect for function _i2c1_driver_resetBus
 21140  1800                     _i2c1_driver_resetBus:	
 21141                           
 21142                           ;incstack = 0
 21143                           ; Regs used in _i2c1_driver_resetBus: []
 21144  1800  0008               	return
 21145  1801                     __end_of_i2c1_driver_resetBus:	
 21146                           
 21147                           	psect	text93
 21148  21CB                     __ptext93:	
 21149 ;; *************** function _i2c1_driver_startRX *****************
 21150 ;; Defined at:
 21151 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 21152 ;; Parameters:    Size  Location     Type
 21153 ;;		None
 21154 ;; Auto vars:     Size  Location     Type
 21155 ;;		None
 21156 ;; Return value:  Size  Location     Type
 21157 ;;                  1    wreg      void 
 21158 ;; Registers used:
 21159 ;;		None
 21160 ;; Tracked objects:
 21161 ;;		On entry : 0/0
 21162 ;;		On exit  : 0/0
 21163 ;;		Unchanged: 0/0
 21164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21169 ;;Total ram usage:        0 bytes
 21170 ;; Hardware stack levels used:    1
 21171 ;; Hardware stack levels required when called:    6
 21172 ;; This function calls:
 21173 ;;		Nothing
 21174 ;; This function is called by:
 21175 ;;		_do_I2C_RCEN
 21176 ;; This function uses a non-reentrant model
 21177 ;;
 21178                           
 21179                           
 21180                           ;psect for function _i2c1_driver_startRX
 21181  21CB                     _i2c1_driver_startRX:	
 21182                           
 21183                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 21184                           
 21185                           ;incstack = 0
 21186                           ; Regs used in _i2c1_driver_startRX: []
 21187  21CB  0024               	movlb	4	; select bank4
 21188  21CC  1596               	bsf	22,3	;volatile
 21189  21CD  0008               	return
 21190  21CE                     __end_of_i2c1_driver_startRX:	
 21191                           
 21192                           	psect	text94
 21193  2235                     __ptext94:	
 21194 ;; *************** function _returnReset *****************
 21195 ;; Defined at:
 21196 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 21197 ;; Parameters:    Size  Location     Type
 21198 ;;  p               1   17[BANK0 ] PTR void 
 21199 ;;		 -> NULL(0), 
 21200 ;; Auto vars:     Size  Location     Type
 21201 ;;		None
 21202 ;; Return value:  Size  Location     Type
 21203 ;;                  1    wreg      enum E8198
 21204 ;; Registers used:
 21205 ;;		wreg
 21206 ;; Tracked objects:
 21207 ;;		On entry : 0/0
 21208 ;;		On exit  : 0/0
 21209 ;;		Unchanged: 0/0
 21210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21211 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21214 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21215 ;;Total ram usage:        1 bytes
 21216 ;; Hardware stack levels used:    1
 21217 ;; Hardware stack levels required when called:    6
 21218 ;; This function calls:
 21219 ;;		Nothing
 21220 ;; This function is called by:
 21221 ;;		_i2c_open
 21222 ;;		_do_I2C_DO_ADDRESS_NACK
 21223 ;;		_do_I2C_TX
 21224 ;;		_do_I2C_RX
 21225 ;;		_do_I2C_TX_EMPTY
 21226 ;;		i1_do_I2C_DO_ADDRESS_NACK
 21227 ;;		i1_do_I2C_TX
 21228 ;;		i1_do_I2C_RX
 21229 ;;		i1_do_I2C_TX_EMPTY
 21230 ;; This function uses a non-reentrant model
 21231 ;;
 21232                           
 21233                           
 21234                           ;psect for function _returnReset
 21235  2235                     _returnReset:	
 21236                           
 21237                           ;Skip over the trampoline to the duplicate function for level 1
 21238  2235  1C7E               	btfss	126,0
 21239  2236  2A39               	goto	l7133
 21240  2237  31A1  299C         	ljmp	i1l7915
 21241  2239                     _returnReset$intlevel0:	
 21242  2239                     l7133:	
 21243                           ;incstack = 0
 21244                           ; Regs used in _returnReset: [wreg]
 21245                           
 21246                           
 21247                           ;i2c_master.c: 450: return i2c_reset_link;
 21248  2239  3005               	movlw	5
 21249  223A  0008               	return
 21250  223B                     __end_of_returnReset:	
 21251                           
 21252                           	psect	text95
 21253  222F                     __ptext95:	
 21254 ;; *************** function _returnStop *****************
 21255 ;; Defined at:
 21256 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 21257 ;; Parameters:    Size  Location     Type
 21258 ;;  p               1   17[BANK0 ] PTR void 
 21259 ;;		 -> NULL(0), 
 21260 ;; Auto vars:     Size  Location     Type
 21261 ;;		None
 21262 ;; Return value:  Size  Location     Type
 21263 ;;                  1    wreg      enum E8198
 21264 ;; Registers used:
 21265 ;;		wreg
 21266 ;; Tracked objects:
 21267 ;;		On entry : 0/0
 21268 ;;		On exit  : 0/0
 21269 ;;		Unchanged: 0/0
 21270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21271 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21274 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21275 ;;Total ram usage:        1 bytes
 21276 ;; Hardware stack levels used:    1
 21277 ;; Hardware stack levels required when called:    6
 21278 ;; This function calls:
 21279 ;;		Nothing
 21280 ;; This function is called by:
 21281 ;;		_i2c_open
 21282 ;;		_setCallBack
 21283 ;;		_do_I2C_DO_ADDRESS_NACK
 21284 ;;		_do_I2C_TX
 21285 ;;		_do_I2C_RX
 21286 ;;		_do_I2C_TX_EMPTY
 21287 ;;		i1_do_I2C_DO_ADDRESS_NACK
 21288 ;;		i1_do_I2C_TX
 21289 ;;		i1_do_I2C_RX
 21290 ;;		i1_do_I2C_TX_EMPTY
 21291 ;; This function uses a non-reentrant model
 21292 ;;
 21293                           
 21294                           
 21295                           ;psect for function _returnStop
 21296  222F                     _returnStop:	
 21297                           
 21298                           ;Skip over the trampoline to the duplicate function for level 1
 21299  222F  1C7E               	btfss	126,0
 21300  2230  2A33               	goto	l7129
 21301  2231  31A1  299A         	ljmp	i1l7911
 21302  2233                     _returnStop$intlevel0:	
 21303  2233                     l7129:	
 21304                           ;incstack = 0
 21305                           ; Regs used in _returnStop: [wreg]
 21306                           
 21307                           
 21308                           ;i2c_master.c: 445: return i2c_stop;
 21309  2233  3001               	movlw	1
 21310  2234  0008               	return
 21311  2235                     __end_of_returnStop:	
 21312                           
 21313                           	psect	text96
 21314  21C8                     __ptext96:	
 21315 ;; *************** function _i2c1_driver_stop *****************
 21316 ;; Defined at:
 21317 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 21318 ;; Parameters:    Size  Location     Type
 21319 ;;		None
 21320 ;; Auto vars:     Size  Location     Type
 21321 ;;		None
 21322 ;; Return value:  Size  Location     Type
 21323 ;;                  1    wreg      void 
 21324 ;; Registers used:
 21325 ;;		None
 21326 ;; Tracked objects:
 21327 ;;		On entry : 0/0
 21328 ;;		On exit  : 0/0
 21329 ;;		Unchanged: 0/0
 21330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21335 ;;Total ram usage:        0 bytes
 21336 ;; Hardware stack levels used:    1
 21337 ;; Hardware stack levels required when called:    6
 21338 ;; This function calls:
 21339 ;;		Nothing
 21340 ;; This function is called by:
 21341 ;;		_do_I2C_SEND_STOP
 21342 ;; This function uses a non-reentrant model
 21343 ;;
 21344                           
 21345                           
 21346                           ;psect for function _i2c1_driver_stop
 21347  21C8                     _i2c1_driver_stop:	
 21348                           
 21349                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 21350                           
 21351                           ;incstack = 0
 21352                           ; Regs used in _i2c1_driver_stop: []
 21353  21C8  0024               	movlb	4	; select bank4
 21354  21C9  1516               	bsf	22,2	;volatile
 21355  21CA  0008               	return
 21356  21CB                     __end_of_i2c1_driver_stop:	
 21357                           
 21358                           	psect	text97
 21359  21C5                     __ptext97:	
 21360 ;; *************** function _i2c1_driver_restart *****************
 21361 ;; Defined at:
 21362 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 21363 ;; Parameters:    Size  Location     Type
 21364 ;;		None
 21365 ;; Auto vars:     Size  Location     Type
 21366 ;;		None
 21367 ;; Return value:  Size  Location     Type
 21368 ;;                  1    wreg      void 
 21369 ;; Registers used:
 21370 ;;		None
 21371 ;; Tracked objects:
 21372 ;;		On entry : 0/0
 21373 ;;		On exit  : 0/0
 21374 ;;		Unchanged: 0/0
 21375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21380 ;;Total ram usage:        0 bytes
 21381 ;; Hardware stack levels used:    1
 21382 ;; Hardware stack levels required when called:    6
 21383 ;; This function calls:
 21384 ;;		Nothing
 21385 ;; This function is called by:
 21386 ;;		_do_I2C_SEND_RESTART_READ
 21387 ;;		_do_I2C_SEND_RESTART_WRITE
 21388 ;;		_do_I2C_SEND_RESTART
 21389 ;; This function uses a non-reentrant model
 21390 ;;
 21391                           
 21392                           
 21393                           ;psect for function _i2c1_driver_restart
 21394  21C5                     _i2c1_driver_restart:	
 21395                           
 21396                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 21397                           
 21398                           ;incstack = 0
 21399                           ; Regs used in _i2c1_driver_restart: []
 21400  21C5  0024               	movlb	4	; select bank4
 21401  21C6  1496               	bsf	22,1	;volatile
 21402  21C7  0008               	return
 21403  21C8                     __end_of_i2c1_driver_restart:	
 21404                           
 21405                           	psect	text98
 21406  21FF                     __ptext98:	
 21407 ;; *************** function _i2c1_driver_sendACK *****************
 21408 ;; Defined at:
 21409 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 21410 ;; Parameters:    Size  Location     Type
 21411 ;;		None
 21412 ;; Auto vars:     Size  Location     Type
 21413 ;;		None
 21414 ;; Return value:  Size  Location     Type
 21415 ;;                  1    wreg      void 
 21416 ;; Registers used:
 21417 ;;		None
 21418 ;; Tracked objects:
 21419 ;;		On entry : 0/0
 21420 ;;		On exit  : 0/0
 21421 ;;		Unchanged: 0/0
 21422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21427 ;;Total ram usage:        0 bytes
 21428 ;; Hardware stack levels used:    1
 21429 ;; Hardware stack levels required when called:    6
 21430 ;; This function calls:
 21431 ;;		Nothing
 21432 ;; This function is called by:
 21433 ;;		_do_I2C_DO_ACK
 21434 ;;		_do_I2C_RX
 21435 ;; This function uses a non-reentrant model
 21436 ;;
 21437                           
 21438                           
 21439                           ;psect for function _i2c1_driver_sendACK
 21440  21FF                     _i2c1_driver_sendACK:	
 21441                           
 21442                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 21443                           
 21444                           ;incstack = 0
 21445                           ; Regs used in _i2c1_driver_sendACK: []
 21446  21FF  0024               	movlb	4	; select bank4
 21447  2200  1296               	bcf	22,5	;volatile
 21448                           
 21449                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 21450  2201  1616               	bsf	22,4	;volatile
 21451  2202  0008               	return
 21452  2203                     __end_of_i2c1_driver_sendACK:	
 21453                           
 21454                           	psect	text99
 21455  21C2                     __ptext99:	
 21456 ;; *************** function _i2c1_driver_start *****************
 21457 ;; Defined at:
 21458 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
 21459 ;; Parameters:    Size  Location     Type
 21460 ;;		None
 21461 ;; Auto vars:     Size  Location     Type
 21462 ;;		None
 21463 ;; Return value:  Size  Location     Type
 21464 ;;                  1    wreg      void 
 21465 ;; Registers used:
 21466 ;;		None
 21467 ;; Tracked objects:
 21468 ;;		On entry : 0/0
 21469 ;;		On exit  : 0/0
 21470 ;;		Unchanged: 0/0
 21471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21476 ;;Total ram usage:        0 bytes
 21477 ;; Hardware stack levels used:    1
 21478 ;; Hardware stack levels required when called:    6
 21479 ;; This function calls:
 21480 ;;		Nothing
 21481 ;; This function is called by:
 21482 ;;		_i2c_masterOperation
 21483 ;; This function uses a non-reentrant model
 21484 ;;
 21485                           
 21486                           
 21487                           ;psect for function _i2c1_driver_start
 21488  21C2                     _i2c1_driver_start:	
 21489                           
 21490                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
 21491                           
 21492                           ;incstack = 0
 21493                           ; Regs used in _i2c1_driver_start: []
 21494  21C2  0024               	movlb	4	; select bank4
 21495  21C3  1416               	bsf	22,0	;volatile
 21496  21C4  0008               	return
 21497  21C5                     __end_of_i2c1_driver_start:	
 21498                           
 21499                           	psect	text100
 21500  1C76                     __ptext100:	
 21501 ;; *************** function ___awdiv *****************
 21502 ;; Defined at:
 21503 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 21504 ;; Parameters:    Size  Location     Type
 21505 ;;  divisor         2   17[BANK0 ] int 
 21506 ;;  dividend        2   19[BANK0 ] int 
 21507 ;; Auto vars:     Size  Location     Type
 21508 ;;  quotient        2   24[BANK0 ] int 
 21509 ;;  sign            1   23[BANK0 ] unsigned char 
 21510 ;;  counter         1   22[BANK0 ] unsigned char 
 21511 ;; Return value:  Size  Location     Type
 21512 ;;                  2   17[BANK0 ] int 
 21513 ;; Registers used:
 21514 ;;		wreg, status,2, status,0
 21515 ;; Tracked objects:
 21516 ;;		On entry : 0/0
 21517 ;;		On exit  : 0/0
 21518 ;;		Unchanged: 0/0
 21519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21520 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21521 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21522 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21523 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21524 ;;Total ram usage:        9 bytes
 21525 ;; Hardware stack levels used:    1
 21526 ;; Hardware stack levels required when called:    6
 21527 ;; This function calls:
 21528 ;;		Nothing
 21529 ;; This function is called by:
 21530 ;;		_drv_write_DC
 21531 ;;		_drv_outputSine
 21532 ;; This function uses a non-reentrant model
 21533 ;;
 21534                           
 21535                           
 21536                           ;psect for function ___awdiv
 21537  1C76                     ___awdiv:	
 21538                           
 21539                           ;incstack = 0
 21540                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 21541  1C76  0020               	movlb	0	; select bank0
 21542  1C77  01B7               	clrf	___awdiv@sign
 21543  1C78  1FB2               	btfss	___awdiv@divisor+1,7
 21544  1C79  2C81               	goto	l5333
 21545  1C7A  09B1               	comf	___awdiv@divisor,f
 21546  1C7B  09B2               	comf	___awdiv@divisor+1,f
 21547  1C7C  0AB1               	incf	___awdiv@divisor,f
 21548  1C7D  1903               	skipnz
 21549  1C7E  0AB2               	incf	___awdiv@divisor+1,f
 21550  1C7F  01B7               	clrf	___awdiv@sign
 21551  1C80  0AB7               	incf	___awdiv@sign,f
 21552  1C81                     l5333:	
 21553  1C81  1FB4               	btfss	___awdiv@dividend+1,7
 21554  1C82  2C8C               	goto	l5339
 21555  1C83  09B3               	comf	___awdiv@dividend,f
 21556  1C84  09B4               	comf	___awdiv@dividend+1,f
 21557  1C85  0AB3               	incf	___awdiv@dividend,f
 21558  1C86  1903               	skipnz
 21559  1C87  0AB4               	incf	___awdiv@dividend+1,f
 21560  1C88  3001               	movlw	1
 21561  1C89  00B5               	movwf	??___awdiv
 21562  1C8A  0835               	movf	??___awdiv,w
 21563  1C8B  06B7               	xorwf	___awdiv@sign,f
 21564  1C8C                     l5339:	
 21565  1C8C  01B8               	clrf	___awdiv@quotient
 21566  1C8D  01B9               	clrf	___awdiv@quotient+1
 21567  1C8E  0831               	movf	___awdiv@divisor,w
 21568  1C8F  0432               	iorwf	___awdiv@divisor+1,w
 21569  1C90  1903               	btfsc	3,2
 21570  1C91  2CBB               	goto	l5361
 21571  1C92  01B6               	clrf	___awdiv@counter
 21572  1C93  0AB6               	incf	___awdiv@counter,f
 21573  1C94                     l5349:	
 21574  1C94  1BB2               	btfsc	___awdiv@divisor+1,7
 21575  1C95  2CA0               	goto	l5351
 21576  1C96  3001               	movlw	1
 21577  1C97                     u4385:	
 21578  1C97  35B1               	lslf	___awdiv@divisor,f
 21579  1C98  0DB2               	rlf	___awdiv@divisor+1,f
 21580  1C99  0B89               	decfsz	9,f
 21581  1C9A  2C97               	goto	u4385
 21582  1C9B  3001               	movlw	1
 21583  1C9C  00B5               	movwf	??___awdiv
 21584  1C9D  0835               	movf	??___awdiv,w
 21585  1C9E  07B6               	addwf	___awdiv@counter,f
 21586  1C9F  2C94               	goto	l5349
 21587  1CA0                     l5351:	
 21588  1CA0  3001               	movlw	1
 21589  1CA1                     u4405:	
 21590  1CA1  35B8               	lslf	___awdiv@quotient,f
 21591  1CA2  0DB9               	rlf	___awdiv@quotient+1,f
 21592  1CA3  0B89               	decfsz	9,f
 21593  1CA4  2CA1               	goto	u4405
 21594  1CA5  0832               	movf	___awdiv@divisor+1,w
 21595  1CA6  0234               	subwf	___awdiv@dividend+1,w
 21596  1CA7  1D03               	skipz
 21597  1CA8  2CAB               	goto	u4415
 21598  1CA9  0831               	movf	___awdiv@divisor,w
 21599  1CAA  0233               	subwf	___awdiv@dividend,w
 21600  1CAB                     u4415:	
 21601  1CAB  1C03               	skipc
 21602  1CAC  2CB2               	goto	l5357
 21603  1CAD  0831               	movf	___awdiv@divisor,w
 21604  1CAE  02B3               	subwf	___awdiv@dividend,f
 21605  1CAF  0832               	movf	___awdiv@divisor+1,w
 21606  1CB0  3BB4               	subwfb	___awdiv@dividend+1,f
 21607  1CB1  1438               	bsf	___awdiv@quotient,0
 21608  1CB2                     l5357:	
 21609  1CB2  3001               	movlw	1
 21610  1CB3                     u4425:	
 21611  1CB3  36B2               	lsrf	___awdiv@divisor+1,f
 21612  1CB4  0CB1               	rrf	___awdiv@divisor,f
 21613  1CB5  0B89               	decfsz	9,f
 21614  1CB6  2CB3               	goto	u4425
 21615  1CB7  3001               	movlw	1
 21616  1CB8  02B6               	subwf	___awdiv@counter,f
 21617  1CB9  1D03               	btfss	3,2
 21618  1CBA  2CA0               	goto	l5351
 21619  1CBB                     l5361:	
 21620  1CBB  0837               	movf	___awdiv@sign,w
 21621  1CBC  1903               	btfsc	3,2
 21622  1CBD  2CC3               	goto	l5365
 21623  1CBE  09B8               	comf	___awdiv@quotient,f
 21624  1CBF  09B9               	comf	___awdiv@quotient+1,f
 21625  1CC0  0AB8               	incf	___awdiv@quotient,f
 21626  1CC1  1903               	skipnz
 21627  1CC2  0AB9               	incf	___awdiv@quotient+1,f
 21628  1CC3                     l5365:	
 21629  1CC3  0839               	movf	___awdiv@quotient+1,w
 21630  1CC4  00B2               	movwf	?___awdiv+1
 21631  1CC5  0838               	movf	___awdiv@quotient,w
 21632  1CC6  00B1               	movwf	?___awdiv
 21633  1CC7  0008               	return
 21634  1CC8                     __end_of___awdiv:	
 21635                           
 21636                           	psect	text101
 21637  1615                     __ptext101:	
 21638 ;; *************** function _calcHeaterPins *****************
 21639 ;; Defined at:
 21640 ;;		line 258 in file "main.c"
 21641 ;; Parameters:    Size  Location     Type
 21642 ;;		None
 21643 ;; Auto vars:     Size  Location     Type
 21644 ;;		None
 21645 ;; Return value:  Size  Location     Type
 21646 ;;                  1    wreg      void 
 21647 ;; Registers used:
 21648 ;;		wreg, status,2, status,0
 21649 ;; Tracked objects:
 21650 ;;		On entry : 0/0
 21651 ;;		On exit  : 0/0
 21652 ;;		Unchanged: 0/0
 21653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21656 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21657 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21658 ;;Total ram usage:        4 bytes
 21659 ;; Hardware stack levels used:    1
 21660 ;; Hardware stack levels required when called:    6
 21661 ;; This function calls:
 21662 ;;		Nothing
 21663 ;; This function is called by:
 21664 ;;		_doMove
 21665 ;; This function uses a non-reentrant model
 21666 ;;
 21667                           
 21668                           
 21669                           ;psect for function _calcHeaterPins
 21670  1615                     _calcHeaterPins:	
 21671                           
 21672                           ;main.c: 259: first_top = moveVector_downs & moveMask;
 21673                           
 21674                           ;incstack = 0
 21675                           ; Regs used in _calcHeaterPins: [wreg+status,2+status,0]
 21676  1615  0021               	movlb	1	; select bank1
 21677  1616  0859               	movf	_moveMask^(0+128),w
 21678  1617  0561               	andwf	_moveVector_downs^(0+128),w
 21679  1618  0022               	movlb	2	; select bank2
 21680  1619  00D6               	movwf	_first_top^(0+256)
 21681  161A  0021               	movlb	1	; select bank1
 21682  161B  085A               	movf	(_moveMask+1)^(0+128),w
 21683  161C  0562               	andwf	(_moveVector_downs+1)^(0+128),w
 21684  161D  0022               	movlb	2	; select bank2
 21685  161E  00D7               	movwf	(_first_top+1)^(0+256)
 21686  161F  0021               	movlb	1	; select bank1
 21687  1620  085B               	movf	(_moveMask+2)^(0+128),w
 21688  1621  0563               	andwf	(_moveVector_downs+2)^(0+128),w
 21689  1622  0022               	movlb	2	; select bank2
 21690  1623  00D8               	movwf	(_first_top+2)^(0+256)
 21691  1624  0021               	movlb	1	; select bank1
 21692  1625  085C               	movf	(_moveMask+3)^(0+128),w
 21693  1626  0564               	andwf	(_moveVector_downs+3)^(0+128),w
 21694  1627  0022               	movlb	2	; select bank2
 21695  1628  00D9               	movwf	(_first_top+3)^(0+256)
 21696                           
 21697                           ;main.c: 260: first_bottom = (~moveVector_downs) & moveMask;
 21698  1629  0021               	movlb	1	; select bank1
 21699  162A  0961               	comf	_moveVector_downs^(0+128),w
 21700  162B  0020               	movlb	0	; select bank0
 21701  162C  00B1               	movwf	??_calcHeaterPins
 21702  162D  0021               	movlb	1	; select bank1
 21703  162E  0962               	comf	(_moveVector_downs+1)^(0+128),w
 21704  162F  0020               	movlb	0	; select bank0
 21705  1630  00B2               	movwf	??_calcHeaterPins+1
 21706  1631  0021               	movlb	1	; select bank1
 21707  1632  0963               	comf	(_moveVector_downs+2)^(0+128),w
 21708  1633  0020               	movlb	0	; select bank0
 21709  1634  00B3               	movwf	??_calcHeaterPins+2
 21710  1635  0021               	movlb	1	; select bank1
 21711  1636  0964               	comf	(_moveVector_downs+3)^(0+128),w
 21712  1637  0020               	movlb	0	; select bank0
 21713  1638  00B4               	movwf	??_calcHeaterPins+3
 21714  1639  0021               	movlb	1	; select bank1
 21715  163A  0859               	movf	_moveMask^(0+128),w
 21716  163B  0020               	movlb	0	; select bank0
 21717  163C  0531               	andwf	??_calcHeaterPins,w
 21718  163D  0022               	movlb	2	; select bank2
 21719  163E  00DA               	movwf	_first_bottom^(0+256)
 21720  163F  0021               	movlb	1	; select bank1
 21721  1640  085A               	movf	(_moveMask+1)^(0+128),w
 21722  1641  0020               	movlb	0	; select bank0
 21723  1642  0532               	andwf	??_calcHeaterPins+1,w
 21724  1643  0022               	movlb	2	; select bank2
 21725  1644  00DB               	movwf	(_first_bottom+1)^(0+256)
 21726  1645  0021               	movlb	1	; select bank1
 21727  1646  085B               	movf	(_moveMask+2)^(0+128),w
 21728  1647  0020               	movlb	0	; select bank0
 21729  1648  0533               	andwf	??_calcHeaterPins+2,w
 21730  1649  0022               	movlb	2	; select bank2
 21731  164A  00DC               	movwf	(_first_bottom+2)^(0+256)
 21732  164B  0021               	movlb	1	; select bank1
 21733  164C  085C               	movf	(_moveMask+3)^(0+128),w
 21734  164D  0020               	movlb	0	; select bank0
 21735  164E  0534               	andwf	??_calcHeaterPins+3,w
 21736  164F  0022               	movlb	2	; select bank2
 21737  1650  00DD               	movwf	(_first_bottom+3)^(0+256)
 21738                           
 21739                           ;main.c: 261: second_top = moveVector_ups & moveMask;
 21740  1651  0021               	movlb	1	; select bank1
 21741  1652  0859               	movf	_moveMask^(0+128),w
 21742  1653  0565               	andwf	_moveVector_ups^(0+128),w
 21743  1654  0022               	movlb	2	; select bank2
 21744  1655  00DE               	movwf	_second_top^(0+256)
 21745  1656  0021               	movlb	1	; select bank1
 21746  1657  085A               	movf	(_moveMask+1)^(0+128),w
 21747  1658  0566               	andwf	(_moveVector_ups+1)^(0+128),w
 21748  1659  0022               	movlb	2	; select bank2
 21749  165A  00DF               	movwf	(_second_top+1)^(0+256)
 21750  165B  0021               	movlb	1	; select bank1
 21751  165C  085B               	movf	(_moveMask+2)^(0+128),w
 21752  165D  0567               	andwf	(_moveVector_ups+2)^(0+128),w
 21753  165E  0022               	movlb	2	; select bank2
 21754  165F  00E0               	movwf	(_second_top+2)^(0+256)
 21755  1660  0021               	movlb	1	; select bank1
 21756  1661  085C               	movf	(_moveMask+3)^(0+128),w
 21757  1662  0568               	andwf	(_moveVector_ups+3)^(0+128),w
 21758  1663  0022               	movlb	2	; select bank2
 21759  1664  00E1               	movwf	(_second_top+3)^(0+256)
 21760                           
 21761                           ;main.c: 262: second_bottom = (~moveVector_ups) & moveMask;
 21762  1665  0021               	movlb	1	; select bank1
 21763  1666  0965               	comf	_moveVector_ups^(0+128),w
 21764  1667  0020               	movlb	0	; select bank0
 21765  1668  00B1               	movwf	??_calcHeaterPins
 21766  1669  0021               	movlb	1	; select bank1
 21767  166A  0966               	comf	(_moveVector_ups+1)^(0+128),w
 21768  166B  0020               	movlb	0	; select bank0
 21769  166C  00B2               	movwf	??_calcHeaterPins+1
 21770  166D  0021               	movlb	1	; select bank1
 21771  166E  0967               	comf	(_moveVector_ups+2)^(0+128),w
 21772  166F  0020               	movlb	0	; select bank0
 21773  1670  00B3               	movwf	??_calcHeaterPins+2
 21774  1671  0021               	movlb	1	; select bank1
 21775  1672  0968               	comf	(_moveVector_ups+3)^(0+128),w
 21776  1673  0020               	movlb	0	; select bank0
 21777  1674  00B4               	movwf	??_calcHeaterPins+3
 21778  1675  0021               	movlb	1	; select bank1
 21779  1676  0859               	movf	_moveMask^(0+128),w
 21780  1677  0020               	movlb	0	; select bank0
 21781  1678  0531               	andwf	??_calcHeaterPins,w
 21782  1679  0022               	movlb	2	; select bank2
 21783  167A  00D2               	movwf	_second_bottom^(0+256)
 21784  167B  0021               	movlb	1	; select bank1
 21785  167C  085A               	movf	(_moveMask+1)^(0+128),w
 21786  167D  0020               	movlb	0	; select bank0
 21787  167E  0532               	andwf	??_calcHeaterPins+1,w
 21788  167F  0022               	movlb	2	; select bank2
 21789  1680  00D3               	movwf	(_second_bottom+1)^(0+256)
 21790  1681  0021               	movlb	1	; select bank1
 21791  1682  085B               	movf	(_moveMask+2)^(0+128),w
 21792  1683  0020               	movlb	0	; select bank0
 21793  1684  0533               	andwf	??_calcHeaterPins+2,w
 21794  1685  0022               	movlb	2	; select bank2
 21795  1686  00D4               	movwf	(_second_bottom+2)^(0+256)
 21796  1687  0021               	movlb	1	; select bank1
 21797  1688  085C               	movf	(_moveMask+3)^(0+128),w
 21798  1689  0020               	movlb	0	; select bank0
 21799  168A  0534               	andwf	??_calcHeaterPins+3,w
 21800  168B  0022               	movlb	2	; select bank2
 21801  168C  00D5               	movwf	(_second_bottom+3)^(0+256)
 21802  168D  0008               	return
 21803  168E                     __end_of_calcHeaterPins:	
 21804                           
 21805                           	psect	text102
 21806  21BF                     __ptext102:	
 21807 ;; *************** function _TMR2_StartTimer *****************
 21808 ;; Defined at:
 21809 ;;		line 85 in file "mcc_generated_files/tmr2.c"
 21810 ;; Parameters:    Size  Location     Type
 21811 ;;		None
 21812 ;; Auto vars:     Size  Location     Type
 21813 ;;		None
 21814 ;; Return value:  Size  Location     Type
 21815 ;;                  1    wreg      void 
 21816 ;; Registers used:
 21817 ;;		None
 21818 ;; Tracked objects:
 21819 ;;		On entry : 0/0
 21820 ;;		On exit  : 0/0
 21821 ;;		Unchanged: 0/0
 21822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21827 ;;Total ram usage:        0 bytes
 21828 ;; Hardware stack levels used:    1
 21829 ;; Hardware stack levels required when called:    6
 21830 ;; This function calls:
 21831 ;;		Nothing
 21832 ;; This function is called by:
 21833 ;;		_doMove
 21834 ;; This function uses a non-reentrant model
 21835 ;;
 21836                           
 21837                           
 21838                           ;psect for function _TMR2_StartTimer
 21839  21BF                     _TMR2_StartTimer:	
 21840                           
 21841                           ;tmr2.c: 88: T2CONbits.TMR2ON = 1;
 21842                           
 21843                           ;incstack = 0
 21844                           ; Regs used in _TMR2_StartTimer: []
 21845  21BF  0020               	movlb	0	; select bank0
 21846  21C0  151F               	bsf	31,2	;volatile
 21847  21C1  0008               	return
 21848  21C2                     __end_of_TMR2_StartTimer:	
 21849                           
 21850                           	psect	text103
 21851  21BC                     __ptext103:	
 21852 ;; *************** function _TMR0_StartTimer *****************
 21853 ;; Defined at:
 21854 ;;		line 85 in file "mcc_generated_files/tmr0.c"
 21855 ;; Parameters:    Size  Location     Type
 21856 ;;		None
 21857 ;; Auto vars:     Size  Location     Type
 21858 ;;		None
 21859 ;; Return value:  Size  Location     Type
 21860 ;;                  1    wreg      void 
 21861 ;; Registers used:
 21862 ;;		None
 21863 ;; Tracked objects:
 21864 ;;		On entry : 0/0
 21865 ;;		On exit  : 0/0
 21866 ;;		Unchanged: 0/0
 21867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21872 ;;Total ram usage:        0 bytes
 21873 ;; Hardware stack levels used:    1
 21874 ;; Hardware stack levels required when called:    6
 21875 ;; This function calls:
 21876 ;;		Nothing
 21877 ;; This function is called by:
 21878 ;;		_doMove
 21879 ;; This function uses a non-reentrant model
 21880 ;;
 21881                           
 21882                           
 21883                           ;psect for function _TMR0_StartTimer
 21884  21BC                     _TMR0_StartTimer:	
 21885                           
 21886                           ;tmr0.c: 88: T0CON0bits.T0EN = 1;
 21887                           
 21888                           ;incstack = 0
 21889                           ; Regs used in _TMR0_StartTimer: []
 21890  21BC  0020               	movlb	0	; select bank0
 21891  21BD  1797               	bsf	23,7	;volatile
 21892  21BE  0008               	return
 21893  21BF                     __end_of_TMR0_StartTimer:	
 21894                           
 21895                           	psect	text104
 21896  25AD                     __ptext104:	
 21897 ;; *************** function _LEDsOn *****************
 21898 ;; Defined at:
 21899 ;;		line 6 in file "LEDcomm.c"
 21900 ;; Parameters:    Size  Location     Type
 21901 ;;  LEDpins         4   36[BANK0 ] unsigned long 
 21902 ;;  topOrBottom     2   40[BANK0 ] int 
 21903 ;; Auto vars:     Size  Location     Type
 21904 ;;		None
 21905 ;; Return value:  Size  Location     Type
 21906 ;;                  1    wreg      void 
 21907 ;; Registers used:
 21908 ;;		wreg, status,2, status,0, pclath, cstack
 21909 ;; Tracked objects:
 21910 ;;		On entry : 0/0
 21911 ;;		On exit  : 0/0
 21912 ;;		Unchanged: 0/0
 21913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21914 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21916 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21917 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21918 ;;Total ram usage:       10 bytes
 21919 ;; Hardware stack levels used:    1
 21920 ;; Hardware stack levels required when called:    8
 21921 ;; This function calls:
 21922 ;;		_send_2length_2bytes_IK
 21923 ;; This function is called by:
 21924 ;;		_LED_test_openshort
 21925 ;;		_doMove
 21926 ;;		_setHeaterToggle
 21927 ;;		_timedActiveHeatOn
 21928 ;;		_demoSequence
 21929 ;; This function uses a non-reentrant model
 21930 ;;
 21931                           
 21932                           
 21933                           ;psect for function _LEDsOn
 21934  25AD                     _LEDsOn:	
 21935                           
 21936                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 21937                           
 21938                           ;incstack = 0
 21939                           ; Regs used in _LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 21940  25AD  0020               	movlb	0	; select bank0
 21941  25AE  0844               	movf	LEDsOn@LEDpins,w
 21942  25AF  00CA               	movwf	??_LEDsOn
 21943  25B0  0845               	movf	LEDsOn@LEDpins+1,w
 21944  25B1  00CB               	movwf	??_LEDsOn+1
 21945  25B2  0846               	movf	LEDsOn@LEDpins+2,w
 21946  25B3  00CC               	movwf	??_LEDsOn+2
 21947  25B4  0847               	movf	LEDsOn@LEDpins+3,w
 21948  25B5  00CD               	movwf	??_LEDsOn+3
 21949  25B6  3010               	movlw	16
 21950  25B7                     u7285:	
 21951  25B7  36CD               	lsrf	??_LEDsOn+3,f
 21952  25B8  0CCC               	rrf	??_LEDsOn+2,f
 21953  25B9  0CCB               	rrf	??_LEDsOn+1,f
 21954  25BA  0CCA               	rrf	??_LEDsOn,f
 21955  25BB  0B89               	decfsz	9,f
 21956  25BC  2DB7               	goto	u7285
 21957  25BD  084B               	movf	??_LEDsOn+1,w
 21958  25BE  00BD               	movwf	send_2length_2bytes_IK@data1+1
 21959  25BF  084A               	movf	??_LEDsOn,w
 21960  25C0  00BC               	movwf	send_2length_2bytes_IK@data1
 21961  25C1  0845               	movf	LEDsOn@LEDpins+1,w
 21962  25C2  00BF               	movwf	send_2length_2bytes_IK@data2+1
 21963  25C3  0844               	movf	LEDsOn@LEDpins,w
 21964  25C4  00BE               	movwf	send_2length_2bytes_IK@data2
 21965  25C5  01C0               	clrf	send_2length_2bytes_IK@latch_start
 21966  25C6  0AC0               	incf	send_2length_2bytes_IK@latch_start,f
 21967  25C7  0849               	movf	LEDsOn@topOrBottom+1,w
 21968  25C8  00C2               	movwf	send_2length_2bytes_IK@topOrBottom+1
 21969  25C9  0848               	movf	LEDsOn@topOrBottom,w
 21970  25CA  00C1               	movwf	send_2length_2bytes_IK@topOrBottom
 21971  25CB  31A4  2416         	fcall	_send_2length_2bytes_IK
 21972  25CD  0008               	return
 21973  25CE                     __end_of_LEDsOn:	
 21974                           
 21975                           	psect	text105
 21976  2416                     __ptext105:	
 21977 ;; *************** function _send_2length_2bytes_IK *****************
 21978 ;; Defined at:
 21979 ;;		line 70 in file "LEDcomm.c"
 21980 ;; Parameters:    Size  Location     Type
 21981 ;;  data1           2   28[BANK0 ] unsigned int 
 21982 ;;  data2           2   30[BANK0 ] unsigned int 
 21983 ;;  latch_start     1   32[BANK0 ] unsigned char 
 21984 ;;  topOrBottom     2   33[BANK0 ] int 
 21985 ;; Auto vars:     Size  Location     Type
 21986 ;;		None
 21987 ;; Return value:  Size  Location     Type
 21988 ;;                  1    wreg      void 
 21989 ;; Registers used:
 21990 ;;		wreg, status,2, status,0, pclath, cstack
 21991 ;; Tracked objects:
 21992 ;;		On entry : 0/0
 21993 ;;		On exit  : 0/0
 21994 ;;		Unchanged: 0/0
 21995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21996 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21998 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21999 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22000 ;;Total ram usage:        8 bytes
 22001 ;; Hardware stack levels used:    1
 22002 ;; Hardware stack levels required when called:    7
 22003 ;; This function calls:
 22004 ;;		_send_2bytes_latchless_IK
 22005 ;;		_send_last_2bytes_IK
 22006 ;; This function is called by:
 22007 ;;		_LEDsOn
 22008 ;;		_LEDsPwr
 22009 ;;		_LED_setBrightnessRange
 22010 ;;		_LED_test_openshort
 22011 ;;		_LED_readConfig
 22012 ;; This function uses a non-reentrant model
 22013 ;;
 22014                           
 22015                           
 22016                           ;psect for function _send_2length_2bytes_IK
 22017  2416                     _send_2length_2bytes_IK:	
 22018                           
 22019                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 22020                           
 22021                           ;incstack = 0
 22022                           ; Regs used in _send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 22023  2416  0020               	movlb	0	; select bank0
 22024  2417  083D               	movf	send_2length_2bytes_IK@data1+1,w
 22025  2418  00B2               	movwf	send_2bytes_latchless_IK@data+1
 22026  2419  083C               	movf	send_2length_2bytes_IK@data1,w
 22027  241A  00B1               	movwf	send_2bytes_latchless_IK@data
 22028  241B  31A7  27A0  31A4   	fcall	_send_2bytes_latchless_IK
 22029                           
 22030                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 22031  241E  0020               	movlb	0	; select bank0
 22032  241F  083F               	movf	send_2length_2bytes_IK@data2+1,w
 22033  2420  00B2               	movwf	send_last_2bytes_IK@data+1
 22034  2421  083E               	movf	send_2length_2bytes_IK@data2,w
 22035  2422  00B1               	movwf	send_last_2bytes_IK@data
 22036  2423  0840               	movf	send_2length_2bytes_IK@latch_start,w
 22037  2424  00C3               	movwf	??_send_2length_2bytes_IK
 22038  2425  0843               	movf	??_send_2length_2bytes_IK,w
 22039  2426  00B3               	movwf	send_last_2bytes_IK@latch_start
 22040  2427  0842               	movf	send_2length_2bytes_IK@topOrBottom+1,w
 22041  2428  00B5               	movwf	send_last_2bytes_IK@topOrBottom+1
 22042  2429  0841               	movf	send_2length_2bytes_IK@topOrBottom,w
 22043  242A  00B4               	movwf	send_last_2bytes_IK@topOrBottom
 22044  242B  319D  256D         	fcall	_send_last_2bytes_IK
 22045  242D  0008               	return
 22046  242E                     __end_of_send_2length_2bytes_IK:	
 22047                           
 22048                           	psect	text106
 22049  1D6D                     __ptext106:	
 22050 ;; *************** function _send_last_2bytes_IK *****************
 22051 ;; Defined at:
 22052 ;;		line 19 in file "LEDcomm.c"
 22053 ;; Parameters:    Size  Location     Type
 22054 ;;  data            2   17[BANK0 ] unsigned int 
 22055 ;;  latch_start     1   19[BANK0 ] unsigned char 
 22056 ;;  topOrBottom     2   20[BANK0 ] int 
 22057 ;; Auto vars:     Size  Location     Type
 22058 ;;  j               2   26[BANK0 ] int 
 22059 ;; Return value:  Size  Location     Type
 22060 ;;                  1    wreg      void 
 22061 ;; Registers used:
 22062 ;;		wreg, status,2, status,0
 22063 ;; Tracked objects:
 22064 ;;		On entry : 0/0
 22065 ;;		On exit  : 0/0
 22066 ;;		Unchanged: 0/0
 22067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22068 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22069 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22070 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22071 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22072 ;;Total ram usage:       11 bytes
 22073 ;; Hardware stack levels used:    1
 22074 ;; Hardware stack levels required when called:    6
 22075 ;; This function calls:
 22076 ;;		Nothing
 22077 ;; This function is called by:
 22078 ;;		_send_2length_2bytes_IK
 22079 ;; This function uses a non-reentrant model
 22080 ;;
 22081                           
 22082                           
 22083                           ;psect for function _send_last_2bytes_IK
 22084  1D6D                     _send_last_2bytes_IK:	
 22085                           
 22086                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 22087                           
 22088                           ;incstack = 0
 22089                           ; Regs used in _send_last_2bytes_IK: [wreg+status,2+status,0]
 22090  1D6D  0020               	movlb	0	; select bank0
 22091  1D6E  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 22092  1D6F  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 22093  1D70  1D03               	btfss	3,2
 22094  1D71  2D75               	goto	l210
 22095  1D72  0022               	movlb	2	; select bank2
 22096  1D73  120D               	bcf	13,4	;volatile
 22097  1D74  2D77               	goto	l7375
 22098  1D75                     l210:	
 22099  1D75  0022               	movlb	2	; select bank2
 22100  1D76  100E               	bcf	14,0	;volatile
 22101  1D77                     l7375:	
 22102                           
 22103                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 22104  1D77  300F               	movlw	15
 22105  1D78  0020               	movlb	0	; select bank0
 22106  1D79  00BA               	movwf	send_last_2bytes_IK@j
 22107  1D7A  3000               	movlw	0
 22108  1D7B  00BB               	movwf	send_last_2bytes_IK@j+1
 22109  1D7C  1BBB               	btfsc	send_last_2bytes_IK@j+1,7
 22110  1D7D  2DB8               	goto	l231
 22111  1D7E                     l214:	
 22112                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 22113                           
 22114  1D7E  0022               	movlb	2	; select bank2
 22115  1D7F  110C               	bcf	12,2	;volatile
 22116                           
 22117                           ;LEDcomm.c: 28: if (data & 1 << j){
 22118  1D80  3001               	movlw	1
 22119  1D81  0020               	movlb	0	; select bank0
 22120  1D82  00B6               	movwf	??_send_last_2bytes_IK
 22121  1D83  3000               	movlw	0
 22122  1D84  00B7               	movwf	??_send_last_2bytes_IK+1
 22123  1D85  0A3A               	incf	send_last_2bytes_IK@j,w
 22124  1D86  2D89               	goto	u6954
 22125  1D87                     u6955:	
 22126  1D87  35B6               	lslf	??_send_last_2bytes_IK,f
 22127  1D88  0DB7               	rlf	??_send_last_2bytes_IK+1,f
 22128  1D89                     u6954:	
 22129  1D89  0B89               	decfsz	9,f
 22130  1D8A  2D87               	goto	u6955
 22131  1D8B  0831               	movf	send_last_2bytes_IK@data,w
 22132  1D8C  0536               	andwf	??_send_last_2bytes_IK,w
 22133  1D8D  00B8               	movwf	??_send_last_2bytes_IK+2
 22134  1D8E  0832               	movf	send_last_2bytes_IK@data+1,w
 22135  1D8F  0537               	andwf	??_send_last_2bytes_IK+1,w
 22136  1D90  00B9               	movwf	??_send_last_2bytes_IK+3
 22137  1D91  0838               	movf	??_send_last_2bytes_IK+2,w
 22138  1D92  0439               	iorwf	??_send_last_2bytes_IK+3,w
 22139  1D93  1903               	btfsc	3,2
 22140  1D94  2D98               	goto	l220
 22141                           
 22142                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 22143  1D95  0022               	movlb	2	; select bank2
 22144  1D96  150E               	bsf	14,2	;volatile
 22145                           
 22146                           ;LEDcomm.c: 30: }
 22147  1D97  2D9A               	goto	l7383
 22148  1D98                     l220:	
 22149                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 22150                           
 22151  1D98  0022               	movlb	2	; select bank2
 22152  1D99  110E               	bcf	14,2	;volatile
 22153  1D9A                     l7383:	
 22154                           
 22155                           ;LEDcomm.c: 33: if( j == latch_start) {
 22156  1D9A  0020               	movlb	0	; select bank0
 22157  1D9B  0833               	movf	send_last_2bytes_IK@latch_start,w
 22158  1D9C  00B6               	movwf	??_send_last_2bytes_IK
 22159  1D9D  01B7               	clrf	??_send_last_2bytes_IK+1
 22160  1D9E  083B               	movf	send_last_2bytes_IK@j+1,w
 22161  1D9F  0637               	xorwf	??_send_last_2bytes_IK+1,w
 22162  1DA0  1D03               	skipz
 22163  1DA1  2DA4               	goto	u6975
 22164  1DA2  083A               	movf	send_last_2bytes_IK@j,w
 22165  1DA3  0636               	xorwf	??_send_last_2bytes_IK,w
 22166  1DA4                     u6975:	
 22167  1DA4  1D03               	skipz
 22168  1DA5  2DAF               	goto	l229
 22169                           
 22170                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 22171  1DA6  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 22172  1DA7  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 22173  1DA8  1D03               	btfss	3,2
 22174  1DA9  2DAD               	goto	l227
 22175  1DAA  0022               	movlb	2	; select bank2
 22176  1DAB  160D               	bsf	13,4	;volatile
 22177  1DAC  2DAF               	goto	l229
 22178  1DAD                     l227:	
 22179  1DAD  0022               	movlb	2	; select bank2
 22180  1DAE  140E               	bsf	14,0	;volatile
 22181  1DAF                     l229:	
 22182                           ;LEDcomm.c: 37: }
 22183                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 22184                           
 22185  1DAF  0022               	movlb	2	; select bank2
 22186  1DB0  150C               	bsf	12,2	;volatile
 22187  1DB1  30FF               	movlw	255
 22188  1DB2  0020               	movlb	0	; select bank0
 22189  1DB3  07BA               	addwf	send_last_2bytes_IK@j,f
 22190  1DB4  30FF               	movlw	255
 22191  1DB5  3DBB               	addwfc	send_last_2bytes_IK@j+1,f
 22192  1DB6  1FBB               	btfss	send_last_2bytes_IK@j+1,7
 22193  1DB7  2D7E               	goto	l214
 22194  1DB8                     l231:	
 22195                           ;LEDcomm.c: 41: }
 22196                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 22197                           
 22198  1DB8  0022               	movlb	2	; select bank2
 22199  1DB9  110C               	bcf	12,2	;volatile
 22200                           
 22201                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 22202  1DBA  0020               	movlb	0	; select bank0
 22203  1DBB  0334               	decf	send_last_2bytes_IK@topOrBottom,w
 22204  1DBC  0435               	iorwf	send_last_2bytes_IK@topOrBottom+1,w
 22205  1DBD  1D03               	btfss	3,2
 22206  1DBE  2DC2               	goto	l237
 22207  1DBF  0022               	movlb	2	; select bank2
 22208  1DC0  120D               	bcf	13,4	;volatile
 22209  1DC1  0008               	return
 22210  1DC2                     l237:	
 22211  1DC2  0022               	movlb	2	; select bank2
 22212  1DC3  100E               	bcf	14,0	;volatile
 22213  1DC4  0008               	return
 22214  1DC5                     __end_of_send_last_2bytes_IK:	
 22215                           
 22216                           	psect	text107
 22217  27A0                     __ptext107:	
 22218 ;; *************** function _send_2bytes_latchless_IK *****************
 22219 ;; Defined at:
 22220 ;;		line 49 in file "LEDcomm.c"
 22221 ;; Parameters:    Size  Location     Type
 22222 ;;  data            2   17[BANK0 ] unsigned int 
 22223 ;; Auto vars:     Size  Location     Type
 22224 ;;  j               2   23[BANK0 ] int 
 22225 ;; Return value:  Size  Location     Type
 22226 ;;                  1    wreg      void 
 22227 ;; Registers used:
 22228 ;;		wreg, status,2, status,0
 22229 ;; Tracked objects:
 22230 ;;		On entry : 0/0
 22231 ;;		On exit  : 0/0
 22232 ;;		Unchanged: 0/0
 22233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22234 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22236 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22237 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22238 ;;Total ram usage:        8 bytes
 22239 ;; Hardware stack levels used:    1
 22240 ;; Hardware stack levels required when called:    6
 22241 ;; This function calls:
 22242 ;;		Nothing
 22243 ;; This function is called by:
 22244 ;;		_send_2length_2bytes_IK
 22245 ;; This function uses a non-reentrant model
 22246 ;;
 22247                           
 22248                           
 22249                           ;psect for function _send_2bytes_latchless_IK
 22250  27A0                     _send_2bytes_latchless_IK:	
 22251                           
 22252                           ;incstack = 0
 22253                           ; Regs used in _send_2bytes_latchless_IK: [wreg+status,2+status,0]
 22254                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 22255  27A0  0022               	movlb	2	; select bank2
 22256  27A1  120D               	bcf	13,4	;volatile
 22257                           
 22258                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 22259  27A2  300F               	movlw	15
 22260  27A3  0020               	movlb	0	; select bank0
 22261  27A4  00B7               	movwf	send_2bytes_latchless_IK@j
 22262  27A5  3000               	movlw	0
 22263  27A6  00B8               	movwf	send_2bytes_latchless_IK@j+1
 22264  27A7  1BB8               	btfsc	send_2bytes_latchless_IK@j+1,7
 22265  27A8  2FCD               	goto	l256
 22266  27A9                     l246:	
 22267                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 22268                           
 22269  27A9  0022               	movlb	2	; select bank2
 22270  27AA  110C               	bcf	12,2	;volatile
 22271                           
 22272                           ;LEDcomm.c: 56: if (data & 1 << j){
 22273  27AB  3001               	movlw	1
 22274  27AC  0020               	movlb	0	; select bank0
 22275  27AD  00B3               	movwf	??_send_2bytes_latchless_IK
 22276  27AE  3000               	movlw	0
 22277  27AF  00B4               	movwf	??_send_2bytes_latchless_IK+1
 22278  27B0  0A37               	incf	send_2bytes_latchless_IK@j,w
 22279  27B1  2FB4               	goto	u7024
 22280  27B2                     u7025:	
 22281  27B2  35B3               	lslf	??_send_2bytes_latchless_IK,f
 22282  27B3  0DB4               	rlf	??_send_2bytes_latchless_IK+1,f
 22283  27B4                     u7024:	
 22284  27B4  0B89               	decfsz	9,f
 22285  27B5  2FB2               	goto	u7025
 22286  27B6  0831               	movf	send_2bytes_latchless_IK@data,w
 22287  27B7  0533               	andwf	??_send_2bytes_latchless_IK,w
 22288  27B8  00B5               	movwf	??_send_2bytes_latchless_IK+2
 22289  27B9  0832               	movf	send_2bytes_latchless_IK@data+1,w
 22290  27BA  0534               	andwf	??_send_2bytes_latchless_IK+1,w
 22291  27BB  00B6               	movwf	??_send_2bytes_latchless_IK+3
 22292  27BC  0835               	movf	??_send_2bytes_latchless_IK+2,w
 22293  27BD  0436               	iorwf	??_send_2bytes_latchless_IK+3,w
 22294  27BE  1903               	btfsc	3,2
 22295  27BF  2FC3               	goto	l252
 22296                           
 22297                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 22298  27C0  0022               	movlb	2	; select bank2
 22299  27C1  150E               	bsf	14,2	;volatile
 22300                           
 22301                           ;LEDcomm.c: 58: }
 22302  27C2  2FC5               	goto	l254
 22303  27C3                     l252:	
 22304                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 22305                           
 22306  27C3  0022               	movlb	2	; select bank2
 22307  27C4  110E               	bcf	14,2	;volatile
 22308  27C5                     l254:	
 22309                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 22310                           
 22311  27C5  150C               	bsf	12,2	;volatile
 22312  27C6  30FF               	movlw	255
 22313  27C7  0020               	movlb	0	; select bank0
 22314  27C8  07B7               	addwf	send_2bytes_latchless_IK@j,f
 22315  27C9  30FF               	movlw	255
 22316  27CA  3DB8               	addwfc	send_2bytes_latchless_IK@j+1,f
 22317  27CB  1FB8               	btfss	send_2bytes_latchless_IK@j+1,7
 22318  27CC  2FA9               	goto	l246
 22319  27CD                     l256:	
 22320                           ;LEDcomm.c: 64: }
 22321                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 22322                           
 22323  27CD  0022               	movlb	2	; select bank2
 22324  27CE  110C               	bcf	12,2	;volatile
 22325  27CF  0008               	return
 22326  27D0                     __end_of_send_2bytes_latchless_IK:	
 22327                           
 22328                           	psect	text108
 22329  23E9                     __ptext108:	
 22330 ;; *************** function _SYSTEM_Initialize *****************
 22331 ;; Defined at:
 22332 ;;		line 77 in file "mcc_generated_files/mcc.c"
 22333 ;; Parameters:    Size  Location     Type
 22334 ;;		None
 22335 ;; Auto vars:     Size  Location     Type
 22336 ;;		None
 22337 ;; Return value:  Size  Location     Type
 22338 ;;                  1    wreg      void 
 22339 ;; Registers used:
 22340 ;;		wreg, status,2, status,0, pclath, cstack
 22341 ;; Tracked objects:
 22342 ;;		On entry : 0/0
 22343 ;;		On exit  : 0/0
 22344 ;;		Unchanged: 0/0
 22345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22350 ;;Total ram usage:        0 bytes
 22351 ;; Hardware stack levels used:    1
 22352 ;; Hardware stack levels required when called:    8
 22353 ;; This function calls:
 22354 ;;		_EUSART_Initialize
 22355 ;;		_OSCILLATOR_Initialize
 22356 ;;		_PIN_MANAGER_Initialize
 22357 ;;		_PMD_Initialize
 22358 ;;		_TMR0_Initialize
 22359 ;;		_TMR2_Initialize
 22360 ;;		_WDT_Initialize
 22361 ;; This function is called by:
 22362 ;;		_main
 22363 ;; This function uses a non-reentrant model
 22364 ;;
 22365                           
 22366                           
 22367                           ;psect for function _SYSTEM_Initialize
 22368  23E9                     _SYSTEM_Initialize:	
 22369                           
 22370                           ;mcc.c: 80: PMD_Initialize();
 22371                           
 22372                           ;incstack = 0
 22373                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22374  23E9  31A2  2263  31A3   	fcall	_PMD_Initialize
 22375                           
 22376                           ;mcc.c: 81: PIN_MANAGER_Initialize();
 22377  23EC  3198  2031  31A3   	fcall	_PIN_MANAGER_Initialize
 22378                           
 22379                           ;mcc.c: 82: OSCILLATOR_Initialize();
 22380  23EF  31A2  22E1  31A3   	fcall	_OSCILLATOR_Initialize
 22381                           
 22382                           ;mcc.c: 83: WDT_Initialize();
 22383  23F2  31A1  21FB  31A3   	fcall	_WDT_Initialize
 22384                           
 22385                           ;mcc.c: 84: TMR2_Initialize();
 22386  23F5  31A3  23B0  31A3   	fcall	_TMR2_Initialize
 22387                           
 22388                           ;mcc.c: 85: TMR0_Initialize();
 22389  23F8  31A3  23D5  31A3   	fcall	_TMR0_Initialize
 22390                           
 22391                           ;mcc.c: 86: EUSART_Initialize();
 22392  23FB  31A4  242E         	fcall	_EUSART_Initialize
 22393  23FD  0008               	return
 22394  23FE                     __end_of_SYSTEM_Initialize:	
 22395                           
 22396                           	psect	text109
 22397  21FB                     __ptext109:	
 22398 ;; *************** function _WDT_Initialize *****************
 22399 ;; Defined at:
 22400 ;;		line 103 in file "mcc_generated_files/mcc.c"
 22401 ;; Parameters:    Size  Location     Type
 22402 ;;		None
 22403 ;; Auto vars:     Size  Location     Type
 22404 ;;		None
 22405 ;; Return value:  Size  Location     Type
 22406 ;;                  1    wreg      void 
 22407 ;; Registers used:
 22408 ;;		wreg
 22409 ;; Tracked objects:
 22410 ;;		On entry : 0/0
 22411 ;;		On exit  : 0/0
 22412 ;;		Unchanged: 0/0
 22413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22418 ;;Total ram usage:        0 bytes
 22419 ;; Hardware stack levels used:    1
 22420 ;; Hardware stack levels required when called:    6
 22421 ;; This function calls:
 22422 ;;		Nothing
 22423 ;; This function is called by:
 22424 ;;		_SYSTEM_Initialize
 22425 ;; This function uses a non-reentrant model
 22426 ;;
 22427                           
 22428                           
 22429                           ;psect for function _WDT_Initialize
 22430  21FB                     _WDT_Initialize:	
 22431                           
 22432                           ;mcc.c: 106: WDTCON = 0x16;
 22433                           
 22434                           ;incstack = 0
 22435                           ; Regs used in _WDT_Initialize: [wreg]
 22436  21FB  3016               	movlw	22
 22437  21FC  0021               	movlb	1	; select bank1
 22438  21FD  0097               	movwf	23	;volatile
 22439  21FE  0008               	return
 22440  21FF                     __end_of_WDT_Initialize:	
 22441                           
 22442                           	psect	text110
 22443  23B0                     __ptext110:	
 22444 ;; *************** function _TMR2_Initialize *****************
 22445 ;; Defined at:
 22446 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22447 ;; Parameters:    Size  Location     Type
 22448 ;;		None
 22449 ;; Auto vars:     Size  Location     Type
 22450 ;;		None
 22451 ;; Return value:  Size  Location     Type
 22452 ;;                  1    wreg      void 
 22453 ;; Registers used:
 22454 ;;		wreg, status,2, status,0, pclath, cstack
 22455 ;; Tracked objects:
 22456 ;;		On entry : 0/0
 22457 ;;		On exit  : 0/0
 22458 ;;		Unchanged: 0/0
 22459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22464 ;;Total ram usage:        0 bytes
 22465 ;; Hardware stack levels used:    1
 22466 ;; Hardware stack levels required when called:    7
 22467 ;; This function calls:
 22468 ;;		_TMR2_SetInterruptHandler
 22469 ;; This function is called by:
 22470 ;;		_SYSTEM_Initialize
 22471 ;; This function uses a non-reentrant model
 22472 ;;
 22473                           
 22474                           
 22475                           ;psect for function _TMR2_Initialize
 22476  23B0                     _TMR2_Initialize:	
 22477                           
 22478                           ;tmr2.c: 67: PR2 = 0x0F;
 22479                           
 22480                           ;incstack = 0
 22481                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22482  23B0  300F               	movlw	15
 22483  23B1  0020               	movlb	0	; select bank0
 22484  23B2  009E               	movwf	30	;volatile
 22485                           
 22486                           ;tmr2.c: 70: TMR2 = 0x00;
 22487  23B3  019D               	clrf	29	;volatile
 22488                           
 22489                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 22490  23B4  1091               	bcf	17,1	;volatile
 22491                           
 22492                           ;tmr2.c: 76: PIE1bits.TMR2IE = 1;
 22493  23B5  0021               	movlb	1	; select bank1
 22494  23B6  1491               	bsf	17,1	;volatile
 22495                           
 22496                           ;tmr2.c: 79: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 22497  23B7  30AB               	movlw	low _TMR2_DefaultInterruptHandler
 22498  23B8  0020               	movlb	0	; select bank0
 22499  23B9  00B1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 22500  23BA  3022               	movlw	high _TMR2_DefaultInterruptHandler
 22501  23BB  00B2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 22502  23BC  31A2  22BD         	fcall	_TMR2_SetInterruptHandler
 22503                           
 22504                           ;tmr2.c: 82: T2CON = 0x4E;
 22505  23BE  304E               	movlw	78
 22506  23BF  0020               	movlb	0	; select bank0
 22507  23C0  009F               	movwf	31	;volatile
 22508  23C1  0008               	return
 22509  23C2                     __end_of_TMR2_Initialize:	
 22510                           
 22511                           	psect	text111
 22512  22BD                     __ptext111:	
 22513 ;; *************** function _TMR2_SetInterruptHandler *****************
 22514 ;; Defined at:
 22515 ;;		line 130 in file "mcc_generated_files/tmr2.c"
 22516 ;; Parameters:    Size  Location     Type
 22517 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 22518 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 22519 ;; Auto vars:     Size  Location     Type
 22520 ;;		None
 22521 ;; Return value:  Size  Location     Type
 22522 ;;                  1    wreg      void 
 22523 ;; Registers used:
 22524 ;;		wreg
 22525 ;; Tracked objects:
 22526 ;;		On entry : 0/0
 22527 ;;		On exit  : 0/0
 22528 ;;		Unchanged: 0/0
 22529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22533 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22534 ;;Total ram usage:        2 bytes
 22535 ;; Hardware stack levels used:    1
 22536 ;; Hardware stack levels required when called:    6
 22537 ;; This function calls:
 22538 ;;		Nothing
 22539 ;; This function is called by:
 22540 ;;		_TMR2_Initialize
 22541 ;; This function uses a non-reentrant model
 22542 ;;
 22543                           
 22544                           
 22545                           ;psect for function _TMR2_SetInterruptHandler
 22546  22BD                     _TMR2_SetInterruptHandler:	
 22547                           
 22548                           ;tmr2.c: 131: TMR2_InterruptHandler = InterruptHandler;
 22549                           
 22550                           ;incstack = 0
 22551                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 22552  22BD  0020               	movlb	0	; select bank0
 22553  22BE  0832               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 22554  22BF  0023               	movlb	3	; select bank3
 22555  22C0  00DA               	movwf	(_TMR2_InterruptHandler+1)^(0+384)
 22556  22C1  0020               	movlb	0	; select bank0
 22557  22C2  0831               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 22558  22C3  0023               	movlb	3	; select bank3
 22559  22C4  00D9               	movwf	_TMR2_InterruptHandler^(0+384)
 22560  22C5  0008               	return
 22561  22C6                     __end_of_TMR2_SetInterruptHandler:	
 22562                           
 22563                           	psect	text112
 22564  23D5                     __ptext112:	
 22565 ;; *************** function _TMR0_Initialize *****************
 22566 ;; Defined at:
 22567 ;;		line 59 in file "mcc_generated_files/tmr0.c"
 22568 ;; Parameters:    Size  Location     Type
 22569 ;;		None
 22570 ;; Auto vars:     Size  Location     Type
 22571 ;;		None
 22572 ;; Return value:  Size  Location     Type
 22573 ;;                  1    wreg      void 
 22574 ;; Registers used:
 22575 ;;		wreg, status,2, status,0, pclath, cstack
 22576 ;; Tracked objects:
 22577 ;;		On entry : 0/0
 22578 ;;		On exit  : 0/0
 22579 ;;		Unchanged: 0/0
 22580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22585 ;;Total ram usage:        0 bytes
 22586 ;; Hardware stack levels used:    1
 22587 ;; Hardware stack levels required when called:    7
 22588 ;; This function calls:
 22589 ;;		_TMR0_SetInterruptHandler
 22590 ;; This function is called by:
 22591 ;;		_SYSTEM_Initialize
 22592 ;; This function uses a non-reentrant model
 22593 ;;
 22594                           
 22595                           
 22596                           ;psect for function _TMR0_Initialize
 22597  23D5                     _TMR0_Initialize:	
 22598                           
 22599                           ;tmr0.c: 64: T0CON1 = 0x58;
 22600                           
 22601                           ;incstack = 0
 22602                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 22603  23D5  3058               	movlw	88
 22604  23D6  0020               	movlb	0	; select bank0
 22605  23D7  0098               	movwf	24	;volatile
 22606                           
 22607                           ;tmr0.c: 67: TMR0H = 0x61;
 22608  23D8  3061               	movlw	97
 22609  23D9  0096               	movwf	22	;volatile
 22610                           
 22611                           ;tmr0.c: 70: TMR0L = 0x00;
 22612  23DA  0195               	clrf	21	;volatile
 22613                           
 22614                           ;tmr0.c: 73: PIR0bits.TMR0IF = 0;
 22615  23DB  1290               	bcf	16,5	;volatile
 22616                           
 22617                           ;tmr0.c: 76: PIE0bits.TMR0IE = 1;
 22618  23DC  0021               	movlb	1	; select bank1
 22619  23DD  1690               	bsf	16,5	;volatile
 22620                           
 22621                           ;tmr0.c: 79: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 22622  23DE  3098               	movlw	low _TMR0_DefaultInterruptHandler
 22623  23DF  0020               	movlb	0	; select bank0
 22624  23E0  00B1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 22625  23E1  3018               	movlw	high _TMR0_DefaultInterruptHandler
 22626  23E2  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 22627  23E3  31A2  22B4         	fcall	_TMR0_SetInterruptHandler
 22628                           
 22629                           ;tmr0.c: 82: T0CON0 = 0x89;
 22630  23E5  3089               	movlw	137
 22631  23E6  0020               	movlb	0	; select bank0
 22632  23E7  0097               	movwf	23	;volatile
 22633  23E8  0008               	return
 22634  23E9                     __end_of_TMR0_Initialize:	
 22635                           
 22636                           	psect	text113
 22637  22B4                     __ptext113:	
 22638 ;; *************** function _TMR0_SetInterruptHandler *****************
 22639 ;; Defined at:
 22640 ;;		line 132 in file "mcc_generated_files/tmr0.c"
 22641 ;; Parameters:    Size  Location     Type
 22642 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 22643 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 22644 ;; Auto vars:     Size  Location     Type
 22645 ;;		None
 22646 ;; Return value:  Size  Location     Type
 22647 ;;                  1    wreg      void 
 22648 ;; Registers used:
 22649 ;;		wreg
 22650 ;; Tracked objects:
 22651 ;;		On entry : 0/0
 22652 ;;		On exit  : 0/0
 22653 ;;		Unchanged: 0/0
 22654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22655 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22658 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22659 ;;Total ram usage:        2 bytes
 22660 ;; Hardware stack levels used:    1
 22661 ;; Hardware stack levels required when called:    6
 22662 ;; This function calls:
 22663 ;;		Nothing
 22664 ;; This function is called by:
 22665 ;;		_TMR0_Initialize
 22666 ;; This function uses a non-reentrant model
 22667 ;;
 22668                           
 22669                           
 22670                           ;psect for function _TMR0_SetInterruptHandler
 22671  22B4                     _TMR0_SetInterruptHandler:	
 22672                           
 22673                           ;tmr0.c: 133: TMR0_InterruptHandler = InterruptHandler;
 22674                           
 22675                           ;incstack = 0
 22676                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 22677  22B4  0020               	movlb	0	; select bank0
 22678  22B5  0832               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 22679  22B6  0022               	movlb	2	; select bank2
 22680  22B7  00ED               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 22681  22B8  0020               	movlb	0	; select bank0
 22682  22B9  0831               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 22683  22BA  0022               	movlb	2	; select bank2
 22684  22BB  00EC               	movwf	_TMR0_InterruptHandler^(0+256)
 22685  22BC  0008               	return
 22686  22BD                     __end_of_TMR0_SetInterruptHandler:	
 22687                           
 22688                           	psect	text114
 22689  2263                     __ptext114:	
 22690 ;; *************** function _PMD_Initialize *****************
 22691 ;; Defined at:
 22692 ;;		line 109 in file "mcc_generated_files/mcc.c"
 22693 ;; Parameters:    Size  Location     Type
 22694 ;;		None
 22695 ;; Auto vars:     Size  Location     Type
 22696 ;;		None
 22697 ;; Return value:  Size  Location     Type
 22698 ;;                  1    wreg      void 
 22699 ;; Registers used:
 22700 ;;		status,2
 22701 ;; Tracked objects:
 22702 ;;		On entry : 0/0
 22703 ;;		On exit  : 0/0
 22704 ;;		Unchanged: 0/0
 22705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22710 ;;Total ram usage:        0 bytes
 22711 ;; Hardware stack levels used:    1
 22712 ;; Hardware stack levels required when called:    6
 22713 ;; This function calls:
 22714 ;;		Nothing
 22715 ;; This function is called by:
 22716 ;;		_SYSTEM_Initialize
 22717 ;; This function uses a non-reentrant model
 22718 ;;
 22719                           
 22720                           
 22721                           ;psect for function _PMD_Initialize
 22722  2263                     _PMD_Initialize:	
 22723                           
 22724                           ;mcc.c: 112: PMD0 = 0x00;
 22725                           
 22726                           ;incstack = 0
 22727                           ; Regs used in _PMD_Initialize: [status,2]
 22728  2263  0032               	movlb	18	; select bank18
 22729  2264  0191               	clrf	17	;volatile
 22730                           
 22731                           ;mcc.c: 114: PMD1 = 0x00;
 22732  2265  0192               	clrf	18	;volatile
 22733                           
 22734                           ;mcc.c: 116: PMD2 = 0x00;
 22735  2266  0193               	clrf	19	;volatile
 22736                           
 22737                           ;mcc.c: 118: PMD3 = 0x00;
 22738  2267  0194               	clrf	20	;volatile
 22739                           
 22740                           ;mcc.c: 120: PMD4 = 0x00;
 22741  2268  0195               	clrf	21	;volatile
 22742                           
 22743                           ;mcc.c: 122: PMD5 = 0x00;
 22744  2269  0196               	clrf	22	;volatile
 22745  226A  0008               	return
 22746  226B                     __end_of_PMD_Initialize:	
 22747                           
 22748                           	psect	text115
 22749  1831                     __ptext115:	
 22750 ;; *************** function _PIN_MANAGER_Initialize *****************
 22751 ;; Defined at:
 22752 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 22753 ;; Parameters:    Size  Location     Type
 22754 ;;		None
 22755 ;; Auto vars:     Size  Location     Type
 22756 ;;		None
 22757 ;; Return value:  Size  Location     Type
 22758 ;;                  1    wreg      void 
 22759 ;; Registers used:
 22760 ;;		wreg, status,2, status,0
 22761 ;; Tracked objects:
 22762 ;;		On entry : 0/0
 22763 ;;		On exit  : 0/0
 22764 ;;		Unchanged: 0/0
 22765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22770 ;;Total ram usage:        0 bytes
 22771 ;; Hardware stack levels used:    1
 22772 ;; Hardware stack levels required when called:    6
 22773 ;; This function calls:
 22774 ;;		Nothing
 22775 ;; This function is called by:
 22776 ;;		_SYSTEM_Initialize
 22777 ;; This function uses a non-reentrant model
 22778 ;;
 22779                           
 22780                           
 22781                           ;psect for function _PIN_MANAGER_Initialize
 22782  1831                     _PIN_MANAGER_Initialize:	
 22783                           
 22784                           ;pin_manager.c: 57: LATA = 0x00;
 22785                           
 22786                           ;incstack = 0
 22787                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 22788  1831  0022               	movlb	2	; select bank2
 22789  1832  018C               	clrf	12	;volatile
 22790                           
 22791                           ;pin_manager.c: 58: LATB = 0x00;
 22792  1833  018D               	clrf	13	;volatile
 22793                           
 22794                           ;pin_manager.c: 59: LATC = 0x00;
 22795  1834  018E               	clrf	14	;volatile
 22796                           
 22797                           ;pin_manager.c: 64: TRISA = 0x33;
 22798  1835  3033               	movlw	51
 22799  1836  0021               	movlb	1	; select bank1
 22800  1837  008C               	movwf	12	;volatile
 22801                           
 22802                           ;pin_manager.c: 65: TRISB = 0x60;
 22803  1838  3060               	movlw	96
 22804  1839  008D               	movwf	13	;volatile
 22805                           
 22806                           ;pin_manager.c: 66: TRISC = 0xF8;
 22807  183A  30F8               	movlw	248
 22808  183B  008E               	movwf	14	;volatile
 22809                           
 22810                           ;pin_manager.c: 71: ANSELC = 0x00;
 22811  183C  0023               	movlb	3	; select bank3
 22812  183D  018E               	clrf	14	;volatile
 22813                           
 22814                           ;pin_manager.c: 72: ANSELB = 0x00;
 22815  183E  018D               	clrf	13	;volatile
 22816                           
 22817                           ;pin_manager.c: 73: ANSELA = 0x00;
 22818  183F  018C               	clrf	12	;volatile
 22819                           
 22820                           ;pin_manager.c: 78: WPUB = 0x00;
 22821  1840  0024               	movlb	4	; select bank4
 22822  1841  018D               	clrf	13	;volatile
 22823                           
 22824                           ;pin_manager.c: 79: WPUA = 0x00;
 22825  1842  018C               	clrf	12	;volatile
 22826                           
 22827                           ;pin_manager.c: 80: WPUC = 0xC8;
 22828  1843  30C8               	movlw	200
 22829  1844  008E               	movwf	14	;volatile
 22830                           
 22831                           ;pin_manager.c: 85: ODCONA = 0x00;
 22832  1845  0025               	movlb	5	; select bank5
 22833  1846  018C               	clrf	12	;volatile
 22834                           
 22835                           ;pin_manager.c: 86: ODCONB = 0x00;
 22836  1847  018D               	clrf	13	;volatile
 22837                           
 22838                           ;pin_manager.c: 87: ODCONC = 0x00;
 22839  1848  018E               	clrf	14	;volatile
 22840                           
 22841                           ;pin_manager.c: 94: SSP1DATPPSbits.SSP1DATPPS = 0x0D;
 22842  1849  003C               	movlb	28	; select bank28
 22843  184A  0821               	movf	33,w	;volatile
 22844  184B  39E0               	andlw	-32
 22845  184C  380D               	iorlw	13
 22846  184D  00A1               	movwf	33	;volatile
 22847                           
 22848                           ;pin_manager.c: 95: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 22849  184E  0820               	movf	32,w	;volatile
 22850  184F  39E0               	andlw	-32
 22851  1850  380E               	iorlw	14
 22852  1851  00A0               	movwf	32	;volatile
 22853                           
 22854                           ;pin_manager.c: 96: RXPPSbits.RXPPS = 0x17;
 22855  1852  0824               	movf	36,w	;volatile
 22856  1853  39E0               	andlw	-32
 22857  1854  3817               	iorlw	23
 22858  1855  00A4               	movwf	36	;volatile
 22859                           
 22860                           ;pin_manager.c: 97: RB7PPSbits.RB7PPS = 0x14;
 22861  1856  003D               	movlb	29	; select bank29
 22862  1857  081F               	movf	31,w	;volatile
 22863  1858  39E0               	andlw	-32
 22864  1859  3814               	iorlw	20
 22865  185A  009F               	movwf	31	;volatile
 22866                           
 22867                           ;pin_manager.c: 98: RB6PPSbits.RB6PPS = 0x18;
 22868  185B  081E               	movf	30,w	;volatile
 22869  185C  39E0               	andlw	-32
 22870  185D  3818               	iorlw	24
 22871  185E  009E               	movwf	30	;volatile
 22872                           
 22873                           ;pin_manager.c: 99: RB5PPSbits.RB5PPS = 0x19;
 22874  185F  081D               	movf	29,w	;volatile
 22875  1860  39E0               	andlw	-32
 22876  1861  3819               	iorlw	25
 22877  1862  009D               	movwf	29	;volatile
 22878  1863  0008               	return
 22879  1864                     __end_of_PIN_MANAGER_Initialize:	
 22880                           
 22881                           	psect	text116
 22882  22E1                     __ptext116:	
 22883 ;; *************** function _OSCILLATOR_Initialize *****************
 22884 ;; Defined at:
 22885 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22886 ;; Parameters:    Size  Location     Type
 22887 ;;		None
 22888 ;; Auto vars:     Size  Location     Type
 22889 ;;		None
 22890 ;; Return value:  Size  Location     Type
 22891 ;;                  1    wreg      void 
 22892 ;; Registers used:
 22893 ;;		wreg, status,2
 22894 ;; Tracked objects:
 22895 ;;		On entry : 0/0
 22896 ;;		On exit  : 0/0
 22897 ;;		Unchanged: 0/0
 22898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22903 ;;Total ram usage:        0 bytes
 22904 ;; Hardware stack levels used:    1
 22905 ;; Hardware stack levels required when called:    6
 22906 ;; This function calls:
 22907 ;;		Nothing
 22908 ;; This function is called by:
 22909 ;;		_SYSTEM_Initialize
 22910 ;; This function uses a non-reentrant model
 22911 ;;
 22912                           
 22913                           
 22914                           ;psect for function _OSCILLATOR_Initialize
 22915  22E1                     _OSCILLATOR_Initialize:	
 22916                           
 22917                           ;mcc.c: 92: OSCCON1 = 0x62;
 22918                           
 22919                           ;incstack = 0
 22920                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 22921  22E1  3062               	movlw	98
 22922  22E2  0032               	movlb	18	; select bank18
 22923  22E3  0099               	movwf	25	;volatile
 22924                           
 22925                           ;mcc.c: 94: OSCCON3 = 0x00;
 22926  22E4  019B               	clrf	27	;volatile
 22927                           
 22928                           ;mcc.c: 96: OSCEN = 0x00;
 22929  22E5  019D               	clrf	29	;volatile
 22930                           
 22931                           ;mcc.c: 98: OSCFRQ = 0x03;
 22932  22E6  3003               	movlw	3
 22933  22E7  009F               	movwf	31	;volatile
 22934                           
 22935                           ;mcc.c: 100: OSCTUNE = 0x20;
 22936  22E8  3020               	movlw	32
 22937  22E9  009E               	movwf	30	;volatile
 22938  22EA  0008               	return
 22939  22EB                     __end_of_OSCILLATOR_Initialize:	
 22940                           
 22941                           	psect	text117
 22942  242E                     __ptext117:	
 22943 ;; *************** function _EUSART_Initialize *****************
 22944 ;; Defined at:
 22945 ;;		line 72 in file "mcc_generated_files/eusart.c"
 22946 ;; Parameters:    Size  Location     Type
 22947 ;;		None
 22948 ;; Auto vars:     Size  Location     Type
 22949 ;;		None
 22950 ;; Return value:  Size  Location     Type
 22951 ;;                  1    wreg      void 
 22952 ;; Registers used:
 22953 ;;		wreg, status,2
 22954 ;; Tracked objects:
 22955 ;;		On entry : 0/0
 22956 ;;		On exit  : 0/0
 22957 ;;		Unchanged: 0/0
 22958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22961 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22962 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22963 ;;Total ram usage:        1 bytes
 22964 ;; Hardware stack levels used:    1
 22965 ;; Hardware stack levels required when called:    6
 22966 ;; This function calls:
 22967 ;;		Nothing
 22968 ;; This function is called by:
 22969 ;;		_SYSTEM_Initialize
 22970 ;; This function uses a non-reentrant model
 22971 ;;
 22972                           
 22973                           
 22974                           ;psect for function _EUSART_Initialize
 22975  242E                     _EUSART_Initialize:	
 22976                           
 22977                           ;eusart.c: 75: PIE1bits.RCIE = 0;
 22978                           
 22979                           ;incstack = 0
 22980                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 22981  242E  0021               	movlb	1	; select bank1
 22982  242F  1291               	bcf	17,5	;volatile
 22983                           
 22984                           ;eusart.c: 76: PIE1bits.TXIE = 0;
 22985  2430  1211               	bcf	17,4	;volatile
 22986                           
 22987                           ;eusart.c: 80: BAUD1CON = 0x08;
 22988  2431  3008               	movlw	8
 22989  2432  0023               	movlb	3	; select bank3
 22990  2433  009F               	movwf	31	;volatile
 22991                           
 22992                           ;eusart.c: 83: RC1STA = 0x90;
 22993  2434  3090               	movlw	144
 22994  2435  009D               	movwf	29	;volatile
 22995                           
 22996                           ;eusart.c: 86: TX1STA = 0x24;
 22997  2436  3024               	movlw	36
 22998  2437  009E               	movwf	30	;volatile
 22999                           
 23000                           ;eusart.c: 89: SP1BRGL = 0x19;
 23001  2438  3019               	movlw	25
 23002  2439  009B               	movwf	27	;volatile
 23003                           
 23004                           ;eusart.c: 92: SP1BRGH = 0x00;
 23005  243A  019C               	clrf	28	;volatile
 23006                           
 23007                           ;eusart.c: 96: eusartTxHead = 0;
 23008  243B  01FD               	clrf	_eusartTxHead	;volatile
 23009                           
 23010                           ;eusart.c: 97: eusartTxTail = 0;
 23011  243C  0020               	movlb	0	; select bank0
 23012  243D  01D9               	clrf	_eusartTxTail	;volatile
 23013                           
 23014                           ;eusart.c: 98: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 23015  243E  3008               	movlw	8
 23016  243F  00B1               	movwf	??_EUSART_Initialize
 23017  2440  0831               	movf	??_EUSART_Initialize,w
 23018  2441  00DE               	movwf	_eusartTxBufferRemaining	;volatile
 23019                           
 23020                           ;eusart.c: 100: eusartRxHead = 0;
 23021  2442  01D8               	clrf	_eusartRxHead	;volatile
 23022                           
 23023                           ;eusart.c: 101: eusartRxTail = 0;
 23024  2443  01D7               	clrf	_eusartRxTail	;volatile
 23025                           
 23026                           ;eusart.c: 102: eusartRxCount = 0;
 23027  2444  01D6               	clrf	_eusartRxCount	;volatile
 23028                           
 23029                           ;eusart.c: 105: PIE1bits.RCIE = 1;
 23030  2445  0021               	movlb	1	; select bank1
 23031  2446  1691               	bsf	17,5	;volatile
 23032  2447  0008               	return
 23033  2448                     __end_of_EUSART_Initialize:	
 23034                           
 23035                           	psect	text118
 23036  254C                     __ptext118:	
 23037 ;; *************** function _EUSART_Read *****************
 23038 ;; Defined at:
 23039 ;;		line 108 in file "mcc_generated_files/eusart.c"
 23040 ;; Parameters:    Size  Location     Type
 23041 ;;		None
 23042 ;; Auto vars:     Size  Location     Type
 23043 ;;  readValue       1   18[BANK0 ] unsigned char 
 23044 ;; Return value:  Size  Location     Type
 23045 ;;                  1    wreg      unsigned char 
 23046 ;; Registers used:
 23047 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23048 ;; Tracked objects:
 23049 ;;		On entry : 0/0
 23050 ;;		On exit  : 0/0
 23051 ;;		Unchanged: 0/0
 23052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23056 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23057 ;;Total ram usage:        2 bytes
 23058 ;; Hardware stack levels used:    1
 23059 ;; Hardware stack levels required when called:    6
 23060 ;; This function calls:
 23061 ;;		Nothing
 23062 ;; This function is called by:
 23063 ;;		_main
 23064 ;;		_getch
 23065 ;; This function uses a non-reentrant model
 23066 ;;
 23067                           
 23068                           
 23069                           ;psect for function _EUSART_Read
 23070  254C                     _EUSART_Read:	
 23071                           
 23072                           ;eusart.c: 110: uint8_t readValue = 0;
 23073                           
 23074                           ;incstack = 0
 23075                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 23076  254C  0020               	movlb	0	; select bank0
 23077  254D  01B2               	clrf	EUSART_Read@readValue
 23078  254E                     l6519:	
 23079                           ;eusart.c: 113: {
 23080                           
 23081                           ;eusart.c: 112: while(0 == eusartRxCount)
 23082                           
 23083  254E  0856               	movf	_eusartRxCount,w	;volatile
 23084  254F  1903               	btfsc	3,2
 23085  2550  2D4E               	goto	l6519
 23086                           
 23087                           ;eusart.c: 114: }
 23088                           ;eusart.c: 116: readValue = eusartRxBuffer[eusartRxTail++];
 23089  2551  0857               	movf	_eusartRxTail,w
 23090  2552  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 23091  2553  0086               	movwf	6
 23092  2554  3001               	movlw	1	; select bank3/4
 23093  2555  0087               	movwf	7
 23094  2556  0801               	movf	1,w
 23095  2557  00B1               	movwf	??_EUSART_Read
 23096  2558  0831               	movf	??_EUSART_Read,w
 23097  2559  00B2               	movwf	EUSART_Read@readValue
 23098  255A  3001               	movlw	1
 23099  255B  00B1               	movwf	??_EUSART_Read
 23100  255C  0831               	movf	??_EUSART_Read,w
 23101  255D  07D7               	addwf	_eusartRxTail,f	;volatile
 23102                           
 23103                           ;eusart.c: 117: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 23104  255E  3008               	movlw	8
 23105  255F  0257               	subwf	_eusartRxTail,w	;volatile
 23106  2560  1803               	btfsc	3,0
 23107                           
 23108                           ;eusart.c: 118: {
 23109                           ;eusart.c: 119: eusartRxTail = 0;
 23110  2561  01D7               	clrf	_eusartRxTail	;volatile
 23111                           
 23112                           ;eusart.c: 120: }
 23113                           ;eusart.c: 121: PIE1bits.RCIE = 0;
 23114  2562  0021               	movlb	1	; select bank1
 23115  2563  1291               	bcf	17,5	;volatile
 23116                           
 23117                           ;eusart.c: 122: eusartRxCount--;
 23118  2564  3001               	movlw	1
 23119  2565  0020               	movlb	0	; select bank0
 23120  2566  02D6               	subwf	_eusartRxCount,f	;volatile
 23121                           
 23122                           ;eusart.c: 123: PIE1bits.RCIE = 1;
 23123  2567  0021               	movlb	1	; select bank1
 23124  2568  1691               	bsf	17,5	;volatile
 23125                           
 23126                           ;eusart.c: 125: return readValue;
 23127  2569  0020               	movlb	0	; select bank0
 23128  256A  0832               	movf	EUSART_Read@readValue,w
 23129  256B  0008               	return
 23130  256C                     __end_of_EUSART_Read:	
 23131                           
 23132                           	psect	intentry
 23133  0004                     __pintentry:	
 23134 ;; *************** function _INTERRUPT_InterruptManager *****************
 23135 ;; Defined at:
 23136 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 23137 ;; Parameters:    Size  Location     Type
 23138 ;;		None
 23139 ;; Auto vars:     Size  Location     Type
 23140 ;;		None
 23141 ;; Return value:  Size  Location     Type
 23142 ;;                  1    wreg      void 
 23143 ;; Registers used:
 23144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23145 ;; Tracked objects:
 23146 ;;		On entry : 0/0
 23147 ;;		On exit  : 0/0
 23148 ;;		Unchanged: 0/0
 23149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23152 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23153 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23154 ;;Total ram usage:        1 bytes
 23155 ;; Hardware stack levels used:    1
 23156 ;; Hardware stack levels required when called:    5
 23157 ;; This function calls:
 23158 ;;		Absolute function
 23159 ;;		_EUSART_Receive_ISR
 23160 ;;		_EUSART_Transmit_ISR
 23161 ;;		_TMR0_ISR
 23162 ;;		_TMR2_ISR
 23163 ;;		_i2c_busCollisionISR
 23164 ;;		i1_i2c_ISR
 23165 ;; This function is called by:
 23166 ;;		Interrupt level 1
 23167 ;; This function uses a non-reentrant model
 23168 ;;
 23169                           
 23170  0004                     _INTERRUPT_InterruptManager:	
 23171                           
 23172                           ;incstack = 0
 23173 ;; hardware stack exceeded
 23174  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 23175                           
 23176                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23177  0005  3180               	pagesel	$
 23178  0006  0020               	movlb	0	; select bank0
 23179  0007  087F               	movf	127,w
 23180  0008  00FC               	movwf	??_INTERRUPT_InterruptManager
 23181                           
 23182                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 23183  0009  0021               	movlb	1	; select bank1
 23184  000A  1E90               	btfss	16,5	;volatile
 23185  000B  2813               	goto	i1l360
 23186  000C  0020               	movlb	0	; select bank0
 23187  000D  1E90               	btfss	16,5	;volatile
 23188  000E  2813               	goto	i1l360
 23189                           
 23190                           ;interrupt_manager.c: 55: {
 23191                           ;interrupt_manager.c: 56: TMR0_ISR();
 23192  000F  31A3  2359  3180   	fcall	_TMR0_ISR
 23193                           
 23194                           ;interrupt_manager.c: 57: }
 23195  0012  284B               	goto	i1l374
 23196  0013                     i1l360:	
 23197                           
 23198                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1)
 23199  0013  1F0B               	btfss	11,6	;volatile
 23200  0014  284B               	goto	i1l374
 23201                           
 23202                           ;interrupt_manager.c: 59: {
 23203                           ;interrupt_manager.c: 60: if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
 23204  0015  0021               	movlb	1	; select bank1
 23205  0016  1D11               	btfss	17,2	;volatile
 23206  0017  2822               	goto	i1l363
 23207  0018  0020               	movlb	0	; select bank0
 23208  0019  1D11               	btfss	17,2	;volatile
 23209  001A  2822               	goto	i1l363
 23210                           
 23211                           ;interrupt_manager.c: 61: {
 23212                           ;interrupt_manager.c: 62: i2c1_driver_busCollisionISR();
 23213  001B  0022               	movlb	2	; select bank2
 23214  001C  086B               	movf	(_i2c1_driver_busCollisionISR+1)^(0+256),w
 23215  001D  008A               	movwf	10
 23216  001E  086A               	movf	_i2c1_driver_busCollisionISR^(0+256),w
 23217  001F  000A               	callw
 23218  0020  3180               	pagesel	$
 23219                           
 23220                           ;interrupt_manager.c: 63: }
 23221  0021  284B               	goto	i1l374
 23222  0022                     i1l363:	
 23223                           
 23224                           ;interrupt_manager.c: 64: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 23225  0022  0021               	movlb	1	; select bank1
 23226  0023  1D91               	btfss	17,3	;volatile
 23227  0024  282F               	goto	i1l365
 23228  0025  0020               	movlb	0	; select bank0
 23229  0026  1D91               	btfss	17,3	;volatile
 23230  0027  282F               	goto	i1l365
 23231                           
 23232                           ;interrupt_manager.c: 65: {
 23233                           ;interrupt_manager.c: 66: i2c1_driver_i2cISR();
 23234  0028  0022               	movlb	2	; select bank2
 23235  0029  0869               	movf	(_i2c1_driver_i2cISR+1)^(0+256),w
 23236  002A  008A               	movwf	10
 23237  002B  0868               	movf	_i2c1_driver_i2cISR^(0+256),w
 23238  002C  000A               	callw
 23239  002D  3180               	pagesel	$
 23240                           
 23241                           ;interrupt_manager.c: 67: }
 23242  002E  284B               	goto	i1l374
 23243  002F                     i1l365:	
 23244                           
 23245                           ;interrupt_manager.c: 68: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 23246  002F  0021               	movlb	1	; select bank1
 23247  0030  1C91               	btfss	17,1	;volatile
 23248  0031  2839               	goto	i1l367
 23249  0032  0020               	movlb	0	; select bank0
 23250  0033  1C91               	btfss	17,1	;volatile
 23251  0034  2839               	goto	i1l367
 23252                           
 23253                           ;interrupt_manager.c: 69: {
 23254                           ;interrupt_manager.c: 70: TMR2_ISR();
 23255  0035  31A3  2366  3180   	fcall	_TMR2_ISR
 23256                           
 23257                           ;interrupt_manager.c: 71: }
 23258  0038  284B               	goto	i1l374
 23259  0039                     i1l367:	
 23260                           
 23261                           ;interrupt_manager.c: 72: else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 23262  0039  0021               	movlb	1	; select bank1
 23263  003A  1E91               	btfss	17,5	;volatile
 23264  003B  2843               	goto	i1l369
 23265  003C  0020               	movlb	0	; select bank0
 23266  003D  1E91               	btfss	17,5	;volatile
 23267  003E  2843               	goto	i1l369
 23268                           
 23269                           ;interrupt_manager.c: 73: {
 23270                           ;interrupt_manager.c: 74: EUSART_Receive_ISR();
 23271  003F  31A4  247D  3180   	fcall	_EUSART_Receive_ISR
 23272                           
 23273                           ;interrupt_manager.c: 75: }
 23274  0042  284B               	goto	i1l374
 23275  0043                     i1l369:	
 23276                           
 23277                           ;interrupt_manager.c: 76: else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 23278  0043  0021               	movlb	1	; select bank1
 23279  0044  1E11               	btfss	17,4	;volatile
 23280  0045  284B               	goto	i1l374
 23281  0046  0020               	movlb	0	; select bank0
 23282  0047  1E11               	btfss	17,4	;volatile
 23283  0048  284B               	goto	i1l374
 23284                           
 23285                           ;interrupt_manager.c: 77: {
 23286                           ;interrupt_manager.c: 78: EUSART_Transmit_ISR();
 23287  0049  31A4  24D2         	fcall	_EUSART_Transmit_ISR
 23288  004B                     i1l374:	
 23289                           ;interrupt_manager.c: 85: else
 23290                           ;interrupt_manager.c: 86: {
 23291                           
 23292                           ;interrupt_manager.c: 83: }
 23293                           ;interrupt_manager.c: 84: }
 23294                           
 23295                           ;interrupt_manager.c: 80: else
 23296                           ;interrupt_manager.c: 81: {
 23297                           
 23298                           ;interrupt_manager.c: 79: }
 23299                           
 23300  004B  087C               	movf	??_INTERRUPT_InterruptManager,w
 23301  004C  0020               	movlb	0	; select bank0
 23302  004D  00FF               	movwf	127
 23303  004E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 23304  004F  0009               	retfie
 23305  0050                     __end_of_INTERRUPT_InterruptManager:	
 23306                           
 23307                           	psect	text120
 23308  252C                     __ptext120:	
 23309 ;; *************** function i1_i2c_ISR *****************
 23310 ;; Defined at:
 23311 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 23312 ;; Parameters:    Size  Location     Type
 23313 ;;		None
 23314 ;; Auto vars:     Size  Location     Type
 23315 ;;		None
 23316 ;; Return value:  Size  Location     Type
 23317 ;;                  1    wreg      void 
 23318 ;; Registers used:
 23319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23320 ;; Tracked objects:
 23321 ;;		On entry : 0/0
 23322 ;;		On exit  : 0/0
 23323 ;;		Unchanged: 0/0
 23324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23327 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23329 ;;Total ram usage:        1 bytes
 23330 ;; Hardware stack levels used:    1
 23331 ;; Hardware stack levels required when called:    3
 23332 ;; This function calls:
 23333 ;;		i1_do_I2C_DO_ACK
 23334 ;;		i1_do_I2C_DO_ADDRESS_NACK
 23335 ;;		i1_do_I2C_DO_NACK_RESTART
 23336 ;;		i1_do_I2C_DO_NACK_STOP
 23337 ;;		i1_do_I2C_IDLE
 23338 ;;		i1_do_I2C_RCEN
 23339 ;;		i1_do_I2C_RESET
 23340 ;;		i1_do_I2C_RX
 23341 ;;		i1_do_I2C_SEND_ADR_READ
 23342 ;;		i1_do_I2C_SEND_ADR_WRITE
 23343 ;;		i1_do_I2C_SEND_RESTART
 23344 ;;		i1_do_I2C_SEND_RESTART_READ
 23345 ;;		i1_do_I2C_SEND_RESTART_WRITE
 23346 ;;		i1_do_I2C_SEND_STOP
 23347 ;;		i1_do_I2C_TX
 23348 ;;		i1_do_I2C_TX_EMPTY
 23349 ;;		i1_i2c1_driver_isNACK
 23350 ;;		i1_mssp1_clearIRQ
 23351 ;; This function is called by:
 23352 ;; This function uses a non-reentrant model
 23353 ;;
 23354                           
 23355                           
 23356                           ;psect for function i1_i2c_ISR
 23357  252C                     i1_i2c_ISR:	
 23358  252C                     i1l8537:	
 23359                           ;incstack = 0
 23360                           ; Regs used in i1_i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23361                           
 23362                           
 23363                           ;i2c_master.c: 421: mssp1_clearIRQ();
 23364  252C  31A1  21B9  31A5   	fcall	i1_mssp1_clearIRQ
 23365                           
 23366                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 23367  252F  0022               	movlb	2	; select bank2
 23368  2530  1DA0               	btfss	_i2c_status^(0+256),3
 23369  2531  2D3C               	goto	i1l8545
 23370  2532  31A3  2329  31A5   	fcall	i1_i2c1_driver_isNACK
 23371  2535  1C03               	btfss	3,0
 23372  2536  2D3C               	goto	i1l8545
 23373                           
 23374                           ;i2c_master.c: 428: {
 23375                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 23376  2537  300F               	movlw	15
 23377  2538  00F5               	movwf	??i1_i2c_ISR
 23378  2539  0875               	movf	??i1_i2c_ISR,w
 23379  253A  0022               	movlb	2	; select bank2
 23380  253B  00AA               	movwf	(_i2c_status^(0+256)+10)
 23381  253C                     i1l8545:	
 23382                           
 23383                           ;i2c_master.c: 430: }
 23384                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 23385  253C  0022               	movlb	2	; select bank2
 23386  253D  352A               	lslf	(_i2c_status^(0+256)+10),w
 23387  253E  3E20               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 23388  253F  0086               	movwf	6
 23389  2540  3002               	movlw	2	; select bank4/5
 23390  2541  0087               	movwf	7
 23391  2542  3F41               	moviw [1]fsr1
 23392  2543  008A               	movwf	10
 23393  2544  3F40               	moviw [0]fsr1
 23394  2545  000A               	callw
 23395  2546  31A5               	pagesel	$
 23396  2547  00F5               	movwf	??i1_i2c_ISR
 23397  2548  0875               	movf	??i1_i2c_ISR,w
 23398  2549  0022               	movlb	2	; select bank2
 23399  254A  00AA               	movwf	(_i2c_status^(0+256)+10)
 23400  254B  0008               	return
 23401  254C                     __end_ofi1_i2c_ISR:	
 23402                           
 23403                           	psect	text121
 23404  21B9                     __ptext121:	
 23405 ;; *************** function i1_mssp1_clearIRQ *****************
 23406 ;; Defined at:
 23407 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
 23408 ;; Parameters:    Size  Location     Type
 23409 ;;		None
 23410 ;; Auto vars:     Size  Location     Type
 23411 ;;		None
 23412 ;; Return value:  Size  Location     Type
 23413 ;;                  1    wreg      void 
 23414 ;; Registers used:
 23415 ;;		None
 23416 ;; Tracked objects:
 23417 ;;		On entry : 0/0
 23418 ;;		On exit  : 0/0
 23419 ;;		Unchanged: 0/0
 23420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23425 ;;Total ram usage:        0 bytes
 23426 ;; Hardware stack levels used:    1
 23427 ;; This function calls:
 23428 ;;		Nothing
 23429 ;; This function is called by:
 23430 ;;		i1_i2c_ISR
 23431 ;; This function uses a non-reentrant model
 23432 ;;
 23433                           
 23434                           
 23435                           ;psect for function i1_mssp1_clearIRQ
 23436  21B9                     i1_mssp1_clearIRQ:	
 23437                           
 23438                           ;i2c1_driver.c: 55: PIR1bits.SSP1IF = 0;
 23439                           
 23440                           ;incstack = 0
 23441                           ; Regs used in i1_mssp1_clearIRQ: []
 23442  21B9  0020               	movlb	0	; select bank0
 23443  21BA  1191               	bcf	17,3	;volatile
 23444  21BB  0008               	return
 23445  21BC                     __end_ofi1_mssp1_clearIRQ:	
 23446                           
 23447                           	psect	text122
 23448  18CF                     __ptext122:	
 23449 ;; *************** function i1_do_I2C_RX *****************
 23450 ;; Defined at:
 23451 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 23452 ;; Parameters:    Size  Location     Type
 23453 ;;		None
 23454 ;; Auto vars:     Size  Location     Type
 23455 ;;		None
 23456 ;; Return value:  Size  Location     Type
 23457 ;;                  1    wreg      enum E8364
 23458 ;; Registers used:
 23459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23460 ;; Tracked objects:
 23461 ;;		On entry : 0/0
 23462 ;;		On exit  : 0/0
 23463 ;;		Unchanged: 0/0
 23464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23469 ;;Total ram usage:        1 bytes
 23470 ;; Hardware stack levels used:    1
 23471 ;; Hardware stack levels required when called:    2
 23472 ;; This function calls:
 23473 ;;		i1_do_I2C_DO_NACK_RESTART
 23474 ;;		i1_do_I2C_DO_NACK_STOP
 23475 ;;		i1_i2c1_driver_getRXData
 23476 ;;		i1_i2c1_driver_sendACK
 23477 ;;		i1_returnReset
 23478 ;;		i1_returnStop
 23479 ;; This function is called by:
 23480 ;; This function uses a non-reentrant model
 23481 ;;
 23482                           
 23483                           
 23484                           ;psect for function i1_do_I2C_RX
 23485  18CF                     i1_do_I2C_RX:	
 23486  18CF                     i1l8317:	
 23487                           ;incstack = 0
 23488                           ; Regs used in i1_do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23489                           
 23490                           
 23491                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 23492  18CF  0022               	movlb	2	; select bank2
 23493  18D0  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 23494  18D1  0086               	movwf	6
 23495  18D2  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 23496  18D3  0087               	movwf	7
 23497  18D4  31A1  21B3  3198   	fcall	i1_i2c1_driver_getRXData
 23498  18D7  0081               	movwf	1
 23499  18D8  3001               	movlw	1
 23500  18D9  0022               	movlb	2	; select bank2
 23501  18DA  07A2               	addwf	(low ((_i2c_status| (0+256)+2)))^0,f
 23502  18DB  3000               	movlw	0
 23503  18DC  3DA3               	addwfc	((low ((_i2c_status| (0+256)+2))+1))^0,f
 23504                           
 23505                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 23506  18DD  3001               	movlw	1
 23507  18DE  02A4               	subwf	(_i2c_status^(0+256)+4),f
 23508  18DF  3000               	movlw	0
 23509  18E0  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 23510  18E1  0824               	movf	(_i2c_status^(0+256)+4),w
 23511  18E2  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 23512  18E3  1903               	btfsc	3,2
 23513  18E4  28E9               	goto	i1l770
 23514                           
 23515                           ;i2c_master.c: 361: {
 23516                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 23517  18E5  31A1  21D7         	fcall	i1_i2c1_driver_sendACK
 23518                           
 23519                           ;i2c_master.c: 363: return I2C_RCEN;
 23520  18E7  3005               	movlw	5
 23521                           
 23522                           ;i2c_master.c: 364: }
 23523  18E8  0008               	return
 23524  18E9                     i1l770:	
 23525                           
 23526                           ;i2c_master.c: 365: else
 23527                           ;i2c_master.c: 366: {
 23528                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 23529  18E9  1520               	bsf	_i2c_status^(0+256),2
 23530                           
 23531                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 23532  18EA  28F1               	goto	i1l8341
 23533  18EB                     i1l8331:	
 23534                           ;i2c_master.c: 369: {
 23535                           ;i2c_master.c: 370: case i2c_restart_write:
 23536                           
 23537                           
 23538                           ;i2c_master.c: 371: case i2c_restart_read:
 23539                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 23540  18EB  31A1  21F7         	fcall	i1_do_I2C_DO_NACK_RESTART
 23541  18ED  0008               	return
 23542  18EE                     i1l8335:	
 23543                           ;i2c_master.c: 374: case i2c_continue:
 23544                           
 23545                           ;i2c_master.c: 373: default:
 23546                           
 23547                           
 23548                           ;i2c_master.c: 375: case i2c_stop:
 23549                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 23550  18EE  31A1  21F3         	fcall	i1_do_I2C_DO_NACK_STOP
 23551                           
 23552                           ;i2c_master.c: 377: }
 23553  18F0  0008               	return
 23554  18F1                     i1l8341:	
 23555  18F1  0022               	movlb	2	; select bank2
 23556  18F2  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 23557  18F3  00F0               	movwf	??i1_do_I2C_RX
 23558  18F4  0870               	movf	??i1_do_I2C_RX,w
 23559  18F5  00F0               	movwf	i1returnReset@p
 23560  18F6  300C               	movlw	12
 23561  18F7  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23562  18F8  0086               	movwf	6
 23563  18F9  3001               	movlw	1	; select bank2/3
 23564  18FA  0087               	movwf	7
 23565  18FB  3F41               	moviw [1]fsr1
 23566  18FC  008A               	movwf	10
 23567  18FD  3F40               	moviw [0]fsr1
 23568  18FE  000A               	callw
 23569  18FF  3198               	pagesel	$
 23570                           
 23571                           ; Switch size 1, requested type "space"
 23572                           ; Number of cases is 4, Range of values is 1 to 4
 23573                           ; switch strategies available:
 23574                           ; Name         Instructions Cycles
 23575                           ; simple_byte           13     7 (average)
 23576                           ; direct_byte           17     9 (fixed)
 23577                           ; jumptable            263     9 (fixed)
 23578                           ;	Chosen strategy is simple_byte
 23579  1900  3A01               	xorlw	1	; case 1
 23580  1901  1903               	skipnz
 23581  1902  28EE               	goto	i1l8335
 23582  1903  3A03               	xorlw	3	; case 2
 23583  1904  1903               	skipnz
 23584  1905  28EB               	goto	i1l8331
 23585  1906  3A01               	xorlw	1	; case 3
 23586  1907  1903               	skipnz
 23587  1908  28EB               	goto	i1l8331
 23588  1909  3A07               	xorlw	7	; case 4
 23589  190A  1903               	skipnz
 23590  190B  28EE               	goto	i1l8335
 23591  190C  28EE               	goto	i1l8335
 23592  190D  0008               	return
 23593  190E                     __end_ofi1_do_I2C_RX:	
 23594                           
 23595                           	psect	text123
 23596  1BD8                     __ptext123:	
 23597 ;; *************** function i1_do_I2C_TX *****************
 23598 ;; Defined at:
 23599 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 23600 ;; Parameters:    Size  Location     Type
 23601 ;;		None
 23602 ;; Auto vars:     Size  Location     Type
 23603 ;;		None
 23604 ;; Return value:  Size  Location     Type
 23605 ;;                  1    wreg      enum E8364
 23606 ;; Registers used:
 23607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23608 ;; Tracked objects:
 23609 ;;		On entry : 0/0
 23610 ;;		On exit  : 0/0
 23611 ;;		Unchanged: 0/0
 23612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23616 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23617 ;;Total ram usage:        4 bytes
 23618 ;; Hardware stack levels used:    1
 23619 ;; Hardware stack levels required when called:    2
 23620 ;; This function calls:
 23621 ;;		i1_do_I2C_SEND_RESTART_READ
 23622 ;;		i1_do_I2C_SEND_RESTART_WRITE
 23623 ;;		i1_do_I2C_SEND_STOP
 23624 ;;		i1_i2c1_driver_TXData
 23625 ;;		i1_i2c1_driver_isNACK
 23626 ;;		i1_returnReset
 23627 ;;		i1_returnStop
 23628 ;; This function is called by:
 23629 ;; This function uses a non-reentrant model
 23630 ;;
 23631                           
 23632                           
 23633                           ;psect for function i1_do_I2C_TX
 23634  1BD8                     i1_do_I2C_TX:	
 23635  1BD8                     i1l8287:	
 23636                           ;incstack = 0
 23637                           ; Regs used in i1_do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23638                           
 23639                           
 23640                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 23641  1BD8  31A3  2329  319B   	fcall	i1_i2c1_driver_isNACK
 23642  1BDB  1803               	btfsc	3,0
 23643  1BDC  2BE7               	goto	i1l8305
 23644  1BDD  2C04               	goto	i1l754
 23645  1BDE                     i1l8291:	
 23646                           ;i2c_master.c: 338: {
 23647                           ;i2c_master.c: 339: case i2c_restart_read:
 23648                           
 23649                           ;i2c_master.c: 336: {
 23650                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 23651                           
 23652                           
 23653                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 23654  1BDE  31A1  21DF         	fcall	i1_do_I2C_SEND_RESTART_READ
 23655  1BE0  0008               	return
 23656  1BE1                     i1l8295:	
 23657                           ;i2c_master.c: 341: case i2c_restart_write:
 23658                           
 23659                           
 23660                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 23661  1BE1  31A1  21E3         	fcall	i1_do_I2C_SEND_RESTART_WRITE
 23662  1BE3  0008               	return
 23663  1BE4                     i1l8299:	
 23664                           ;i2c_master.c: 344: case i2c_continue:
 23665                           
 23666                           ;i2c_master.c: 343: default:
 23667                           
 23668                           
 23669                           ;i2c_master.c: 345: case i2c_stop:
 23670                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 23671  1BE4  31A1  21EB         	fcall	i1_do_I2C_SEND_STOP
 23672                           
 23673                           ;i2c_master.c: 347: }
 23674  1BE6  0008               	return
 23675  1BE7                     i1l8305:	
 23676  1BE7  0022               	movlb	2	; select bank2
 23677  1BE8  083B               	movf	(low ((_i2c_status| (0+256)+27)))^0,w
 23678  1BE9  00F1               	movwf	??i1_do_I2C_TX
 23679  1BEA  0871               	movf	??i1_do_I2C_TX,w
 23680  1BEB  00F0               	movwf	i1returnReset@p
 23681  1BEC  3012               	movlw	18
 23682  1BED  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23683  1BEE  0086               	movwf	6
 23684  1BEF  3001               	movlw	1	; select bank2/3
 23685  1BF0  0087               	movwf	7
 23686  1BF1  3F41               	moviw [1]fsr1
 23687  1BF2  008A               	movwf	10
 23688  1BF3  3F40               	moviw [0]fsr1
 23689  1BF4  000A               	callw
 23690  1BF5  319B               	pagesel	$
 23691                           
 23692                           ; Switch size 1, requested type "space"
 23693                           ; Number of cases is 4, Range of values is 1 to 4
 23694                           ; switch strategies available:
 23695                           ; Name         Instructions Cycles
 23696                           ; simple_byte           13     7 (average)
 23697                           ; direct_byte           17     9 (fixed)
 23698                           ; jumptable            263     9 (fixed)
 23699                           ;	Chosen strategy is simple_byte
 23700  1BF6  3A01               	xorlw	1	; case 1
 23701  1BF7  1903               	skipnz
 23702  1BF8  2BE4               	goto	i1l8299
 23703  1BF9  3A03               	xorlw	3	; case 2
 23704  1BFA  1903               	skipnz
 23705  1BFB  2BDE               	goto	i1l8291
 23706  1BFC  3A01               	xorlw	1	; case 3
 23707  1BFD  1903               	skipnz
 23708  1BFE  2BE1               	goto	i1l8295
 23709  1BFF  3A07               	xorlw	7	; case 4
 23710  1C00  1903               	skipnz
 23711  1C01  2BE4               	goto	i1l8299
 23712  1C02  2BE4               	goto	i1l8299
 23713                           
 23714                           ;i2c_master.c: 348: }
 23715  1C03  0008               	return
 23716  1C04                     i1l754:	
 23717                           
 23718                           ;i2c_master.c: 349: else
 23719                           ;i2c_master.c: 350: {
 23720                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 23721  1C04  0022               	movlb	2	; select bank2
 23722  1C05  11A0               	bcf	_i2c_status^(0+256),3
 23723                           
 23724                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 23725  1C06  0823               	movf	((low ((_i2c_status| (0+256)+2))+1))^0,w
 23726  1C07  00F2               	movwf	??i1_do_I2C_TX+1
 23727  1C08  0822               	movf	(low ((_i2c_status| (0+256)+2)))^0,w
 23728  1C09  00F1               	movwf	??i1_do_I2C_TX
 23729  1C0A  0AA2               	incf	(low ((_i2c_status| (0+256)+2)))^0,f
 23730  1C0B  1903               	skipnz
 23731  1C0C  0AA3               	incf	((low ((_i2c_status| (0+256)+2))+1))^0,f
 23732  1C0D  0871               	movf	??i1_do_I2C_TX,w
 23733  1C0E  0084               	movwf	4
 23734  1C0F  0872               	movf	??i1_do_I2C_TX+1,w
 23735  1C10  0085               	movwf	5
 23736  1C11  0800               	movf	0,w	;code access
 23737  1C12  31A2  2215  319B   	fcall	i1_i2c1_driver_TXData
 23738                           
 23739                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 23740  1C15  3001               	movlw	1
 23741  1C16  0022               	movlb	2	; select bank2
 23742  1C17  02A4               	subwf	(_i2c_status^(0+256)+4),f
 23743  1C18  3000               	movlw	0
 23744  1C19  3BA5               	subwfb	((_i2c_status+1)^(0+256)+4),f
 23745  1C1A  0824               	movf	(_i2c_status^(0+256)+4),w
 23746  1C1B  0425               	iorwf	((_i2c_status+1)^(0+256)+4),w
 23747  1C1C  1D03               	btfss	3,2
 23748  1C1D  2C20               	goto	i1l8313
 23749  1C1E  3006               	movlw	6
 23750  1C1F  2C21               	goto	L38
 23751  1C20                     i1l8313:	
 23752  1C20  3003               	movlw	3
 23753  1C21                     L38:	
 23754  1C21  00F3               	movwf	i1_do_I2C_TX$1134
 23755  1C22  3000               	movlw	0
 23756  1C23  00F4               	movwf	i1_do_I2C_TX$1134+1
 23757  1C24  0873               	movf	i1_do_I2C_TX$1134,w
 23758  1C25  0008               	return
 23759  1C26                     __end_ofi1_do_I2C_TX:	
 23760                           
 23761                           	psect	text124
 23762  2613                     __ptext124:	
 23763 ;; *************** function i1_do_I2C_DO_ADDRESS_NACK *****************
 23764 ;; Defined at:
 23765 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 23766 ;; Parameters:    Size  Location     Type
 23767 ;;		None
 23768 ;; Auto vars:     Size  Location     Type
 23769 ;;		None
 23770 ;; Return value:  Size  Location     Type
 23771 ;;                  1    wreg      enum E8364
 23772 ;; Registers used:
 23773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23774 ;; Tracked objects:
 23775 ;;		On entry : 0/0
 23776 ;;		On exit  : 0/0
 23777 ;;		Unchanged: 0/0
 23778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23783 ;;Total ram usage:        1 bytes
 23784 ;; Hardware stack levels used:    1
 23785 ;; Hardware stack levels required when called:    2
 23786 ;; This function calls:
 23787 ;;		i1_do_I2C_SEND_RESTART
 23788 ;;		i1_do_I2C_SEND_STOP
 23789 ;;		i1_returnReset
 23790 ;;		i1_returnStop
 23791 ;; This function is called by:
 23792 ;; This function uses a non-reentrant model
 23793 ;;
 23794                           
 23795                           
 23796                           ;psect for function i1_do_I2C_DO_ADDRESS_NACK
 23797  2613                     i1_do_I2C_DO_ADDRESS_NACK:	
 23798  2613                     i1l8271:	
 23799                           ;incstack = 0
 23800                           ; Regs used in i1_do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23801                           
 23802                           
 23803                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 23804  2613  0022               	movlb	2	; select bank2
 23805  2614  11A0               	bcf	_i2c_status^(0+256),3
 23806                           
 23807                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 23808  2615  3002               	movlw	2
 23809  2616  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 23810  2617  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 23811  2618  00AB               	movwf	(_i2c_status^(0+256)+11)
 23812                           
 23813                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 23814  2619  2E20               	goto	i1l8285
 23815  261A                     i1l8275:	
 23816                           ;i2c_master.c: 324: {
 23817                           ;i2c_master.c: 325: case i2c_restart_read:
 23818                           
 23819                           
 23820                           ;i2c_master.c: 326: case i2c_restart_write:
 23821                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 23822  261A  31A1  21E7         	fcall	i1_do_I2C_SEND_RESTART
 23823  261C  0008               	return
 23824  261D                     i1l8279:	
 23825                           ;i2c_master.c: 328: default:
 23826                           
 23827                           
 23828                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 23829  261D  31A1  21EB         	fcall	i1_do_I2C_SEND_STOP
 23830                           
 23831                           ;i2c_master.c: 330: }
 23832  261F  0008               	return
 23833  2620                     i1l8285:	
 23834  2620  0022               	movlb	2	; select bank2
 23835  2621  083A               	movf	(low ((_i2c_status| (0+256)+26)))^0,w
 23836  2622  00F0               	movwf	??i1_do_I2C_DO_ADDRESS_NACK
 23837  2623  0870               	movf	??i1_do_I2C_DO_ADDRESS_NACK,w
 23838  2624  00F0               	movwf	i1returnReset@p
 23839  2625  3010               	movlw	16
 23840  2626  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 23841  2627  0086               	movwf	6
 23842  2628  3001               	movlw	1	; select bank2/3
 23843  2629  0087               	movwf	7
 23844  262A  3F41               	moviw [1]fsr1
 23845  262B  008A               	movwf	10
 23846  262C  3F40               	moviw [0]fsr1
 23847  262D  000A               	callw
 23848  262E  31A6               	pagesel	$
 23849                           
 23850                           ; Switch size 1, requested type "space"
 23851                           ; Number of cases is 2, Range of values is 2 to 3
 23852                           ; switch strategies available:
 23853                           ; Name         Instructions Cycles
 23854                           ; simple_byte            7     4 (average)
 23855                           ; direct_byte           13     9 (fixed)
 23856                           ; jumptable            263     9 (fixed)
 23857                           ;	Chosen strategy is simple_byte
 23858  262F  3A02               	xorlw	2	; case 2
 23859  2630  1903               	skipnz
 23860  2631  2E1A               	goto	i1l8275
 23861  2632  3A01               	xorlw	1	; case 3
 23862  2633  1903               	skipnz
 23863  2634  2E1A               	goto	i1l8275
 23864  2635  2E1D               	goto	i1l8279
 23865  2636  0008               	return
 23866  2637                     __end_ofi1_do_I2C_DO_ADDRESS_NACK:	
 23867                           
 23868                           	psect	text125
 23869  21F7                     __ptext125:	
 23870 ;; *************** function i1_do_I2C_DO_NACK_RESTART *****************
 23871 ;; Defined at:
 23872 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 23873 ;; Parameters:    Size  Location     Type
 23874 ;;		None
 23875 ;; Auto vars:     Size  Location     Type
 23876 ;;		None
 23877 ;; Return value:  Size  Location     Type
 23878 ;;                  1    wreg      enum E8364
 23879 ;; Registers used:
 23880 ;;		wreg, status,2, status,0, pclath, cstack
 23881 ;; Tracked objects:
 23882 ;;		On entry : 0/0
 23883 ;;		On exit  : 0/0
 23884 ;;		Unchanged: 0/0
 23885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23890 ;;Total ram usage:        0 bytes
 23891 ;; Hardware stack levels used:    1
 23892 ;; Hardware stack levels required when called:    1
 23893 ;; This function calls:
 23894 ;;		i1_i2c1_driver_sendNACK
 23895 ;; This function is called by:
 23896 ;;		i1_do_I2C_RX
 23897 ;; This function uses a non-reentrant model
 23898 ;;
 23899                           
 23900                           
 23901                           ;psect for function i1_do_I2C_DO_NACK_RESTART
 23902  21F7                     i1_do_I2C_DO_NACK_RESTART:	
 23903  21F7                     i1l7905:	
 23904                           ;incstack = 0
 23905                           ; Regs used in i1_do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 23906                           
 23907                           
 23908                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 23909  21F7  31A1  21DB         	fcall	i1_i2c1_driver_sendNACK
 23910                           
 23911                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 23912  21F9  3009               	movlw	9
 23913  21FA  0008               	return
 23914  21FB                     __end_ofi1_do_I2C_DO_NACK_RESTART:	
 23915                           
 23916                           	psect	text126
 23917  21F3                     __ptext126:	
 23918 ;; *************** function i1_do_I2C_DO_NACK_STOP *****************
 23919 ;; Defined at:
 23920 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 23921 ;; Parameters:    Size  Location     Type
 23922 ;;		None
 23923 ;; Auto vars:     Size  Location     Type
 23924 ;;		None
 23925 ;; Return value:  Size  Location     Type
 23926 ;;                  1    wreg      enum E8364
 23927 ;; Registers used:
 23928 ;;		wreg, status,2, status,0, pclath, cstack
 23929 ;; Tracked objects:
 23930 ;;		On entry : 0/0
 23931 ;;		On exit  : 0/0
 23932 ;;		Unchanged: 0/0
 23933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23938 ;;Total ram usage:        0 bytes
 23939 ;; Hardware stack levels used:    1
 23940 ;; Hardware stack levels required when called:    1
 23941 ;; This function calls:
 23942 ;;		i1_i2c1_driver_sendNACK
 23943 ;; This function is called by:
 23944 ;;		i1_do_I2C_RX
 23945 ;; This function uses a non-reentrant model
 23946 ;;
 23947                           
 23948                           
 23949                           ;psect for function i1_do_I2C_DO_NACK_STOP
 23950  21F3                     i1_do_I2C_DO_NACK_STOP:	
 23951  21F3                     i1l7899:	
 23952                           ;incstack = 0
 23953                           ; Regs used in i1_do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 23954                           
 23955                           
 23956                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 23957  21F3  31A1  21DB         	fcall	i1_i2c1_driver_sendNACK
 23958                           
 23959                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 23960  21F5  300A               	movlw	10
 23961  21F6  0008               	return
 23962  21F7                     __end_ofi1_do_I2C_DO_NACK_STOP:	
 23963                           
 23964                           	psect	text127
 23965  21EF                     __ptext127:	
 23966 ;; *************** function i1_do_I2C_DO_ACK *****************
 23967 ;; Defined at:
 23968 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 23969 ;; Parameters:    Size  Location     Type
 23970 ;;		None
 23971 ;; Auto vars:     Size  Location     Type
 23972 ;;		None
 23973 ;; Return value:  Size  Location     Type
 23974 ;;                  1    wreg      enum E8364
 23975 ;; Registers used:
 23976 ;;		wreg, status,2, status,0, pclath, cstack
 23977 ;; Tracked objects:
 23978 ;;		On entry : 0/0
 23979 ;;		On exit  : 0/0
 23980 ;;		Unchanged: 0/0
 23981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23986 ;;Total ram usage:        0 bytes
 23987 ;; Hardware stack levels used:    1
 23988 ;; Hardware stack levels required when called:    1
 23989 ;; This function calls:
 23990 ;;		i1_i2c1_driver_sendACK
 23991 ;; This function is called by:
 23992 ;; This function uses a non-reentrant model
 23993 ;;
 23994                           
 23995                           
 23996                           ;psect for function i1_do_I2C_DO_ACK
 23997  21EF                     i1_do_I2C_DO_ACK:	
 23998  21EF                     i1l8265:	
 23999                           ;incstack = 0
 24000                           ; Regs used in i1_do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 24001                           
 24002                           
 24003                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 24004  21EF  31A1  21D7         	fcall	i1_i2c1_driver_sendACK
 24005                           
 24006                           ;i2c_master.c: 302: return I2C_RCEN;
 24007  21F1  3005               	movlw	5
 24008  21F2  0008               	return
 24009  21F3                     __end_ofi1_do_I2C_DO_ACK:	
 24010                           
 24011                           	psect	text128
 24012  2229                     __ptext128:	
 24013 ;; *************** function i1_do_I2C_RCEN *****************
 24014 ;; Defined at:
 24015 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 24016 ;; Parameters:    Size  Location     Type
 24017 ;;		None
 24018 ;; Auto vars:     Size  Location     Type
 24019 ;;		None
 24020 ;; Return value:  Size  Location     Type
 24021 ;;                  1    wreg      enum E8364
 24022 ;; Registers used:
 24023 ;;		wreg, status,2, status,0, pclath, cstack
 24024 ;; Tracked objects:
 24025 ;;		On entry : 0/0
 24026 ;;		On exit  : 0/0
 24027 ;;		Unchanged: 0/0
 24028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24033 ;;Total ram usage:        0 bytes
 24034 ;; Hardware stack levels used:    1
 24035 ;; Hardware stack levels required when called:    1
 24036 ;; This function calls:
 24037 ;;		i1_i2c1_driver_startRX
 24038 ;; This function is called by:
 24039 ;; This function uses a non-reentrant model
 24040 ;;
 24041                           
 24042                           
 24043                           ;psect for function i1_do_I2C_RCEN
 24044  2229                     i1_do_I2C_RCEN:	
 24045  2229                     i1l6359:	
 24046                           ;incstack = 0
 24047                           ; Regs used in i1_do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 24048                           
 24049                           
 24050                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 24051  2229  0022               	movlb	2	; select bank2
 24052  222A  11A0               	bcf	_i2c_status^(0+256),3
 24053                           
 24054                           ;i2c_master.c: 295: i2c1_driver_startRX();
 24055  222B  31A1  21B0         	fcall	i1_i2c1_driver_startRX
 24056                           
 24057                           ;i2c_master.c: 296: return I2C_RX;
 24058  222D  3004               	movlw	4
 24059  222E  0008               	return
 24060  222F                     __end_ofi1_do_I2C_RCEN:	
 24061                           
 24062                           	psect	text129
 24063  2254                     __ptext129:	
 24064 ;; *************** function i1_do_I2C_SEND_ADR_WRITE *****************
 24065 ;; Defined at:
 24066 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 24067 ;; Parameters:    Size  Location     Type
 24068 ;;		None
 24069 ;; Auto vars:     Size  Location     Type
 24070 ;;		None
 24071 ;; Return value:  Size  Location     Type
 24072 ;;                  1    wreg      enum E8364
 24073 ;; Registers used:
 24074 ;;		wreg, status,2, status,0, pclath, cstack
 24075 ;; Tracked objects:
 24076 ;;		On entry : 0/0
 24077 ;;		On exit  : 0/0
 24078 ;;		Unchanged: 0/0
 24079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24084 ;;Total ram usage:        0 bytes
 24085 ;; Hardware stack levels used:    1
 24086 ;; Hardware stack levels required when called:    1
 24087 ;; This function calls:
 24088 ;;		i1_i2c1_driver_TXData
 24089 ;; This function is called by:
 24090 ;; This function uses a non-reentrant model
 24091 ;;
 24092                           
 24093                           
 24094                           ;psect for function i1_do_I2C_SEND_ADR_WRITE
 24095  2254                     i1_do_I2C_SEND_ADR_WRITE:	
 24096  2254                     i1l8257:	
 24097                           ;incstack = 0
 24098                           ; Regs used in i1_do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 24099                           
 24100                           
 24101                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 24102  2254  0022               	movlb	2	; select bank2
 24103  2255  15A0               	bsf	_i2c_status^(0+256),3
 24104                           
 24105                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 24106  2256  3521               	lslf	(_i2c_status^(0+256)+1),w
 24107  2257  31A2  2215         	fcall	i1_i2c1_driver_TXData
 24108                           
 24109                           ;i2c_master.c: 289: return I2C_TX;
 24110  2259  3003               	movlw	3
 24111  225A  0008               	return
 24112  225B                     __end_ofi1_do_I2C_SEND_ADR_WRITE:	
 24113                           
 24114                           	psect	text130
 24115  225B                     __ptext130:	
 24116 ;; *************** function i1_do_I2C_SEND_ADR_READ *****************
 24117 ;; Defined at:
 24118 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 24119 ;; Parameters:    Size  Location     Type
 24120 ;;		None
 24121 ;; Auto vars:     Size  Location     Type
 24122 ;;		None
 24123 ;; Return value:  Size  Location     Type
 24124 ;;                  1    wreg      enum E8364
 24125 ;; Registers used:
 24126 ;;		wreg, status,2, status,0, pclath, cstack
 24127 ;; Tracked objects:
 24128 ;;		On entry : 0/0
 24129 ;;		On exit  : 0/0
 24130 ;;		Unchanged: 0/0
 24131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24136 ;;Total ram usage:        0 bytes
 24137 ;; Hardware stack levels used:    1
 24138 ;; Hardware stack levels required when called:    1
 24139 ;; This function calls:
 24140 ;;		i1_i2c1_driver_TXData
 24141 ;; This function is called by:
 24142 ;; This function uses a non-reentrant model
 24143 ;;
 24144                           
 24145                           
 24146                           ;psect for function i1_do_I2C_SEND_ADR_READ
 24147  225B                     i1_do_I2C_SEND_ADR_READ:	
 24148  225B                     i1l8249:	
 24149                           ;incstack = 0
 24150                           ; Regs used in i1_do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 24151                           
 24152                           
 24153                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 24154  225B  0022               	movlb	2	; select bank2
 24155  225C  15A0               	bsf	_i2c_status^(0+256),3
 24156                           
 24157                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 24158  225D  1403               	setc
 24159  225E  0D21               	rlf	(_i2c_status^(0+256)+1),w
 24160  225F  31A2  2215         	fcall	i1_i2c1_driver_TXData
 24161                           
 24162                           ;i2c_master.c: 282: return I2C_RCEN;
 24163  2261  3005               	movlw	5
 24164  2262  0008               	return
 24165  2263                     __end_ofi1_do_I2C_SEND_ADR_READ:	
 24166                           
 24167                           	psect	text131
 24168  21EB                     __ptext131:	
 24169 ;; *************** function i1_do_I2C_SEND_STOP *****************
 24170 ;; Defined at:
 24171 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 24172 ;; Parameters:    Size  Location     Type
 24173 ;;		None
 24174 ;; Auto vars:     Size  Location     Type
 24175 ;;		None
 24176 ;; Return value:  Size  Location     Type
 24177 ;;                  1    wreg      enum E8364
 24178 ;; Registers used:
 24179 ;;		wreg, status,2, status,0, pclath, cstack
 24180 ;; Tracked objects:
 24181 ;;		On entry : 0/0
 24182 ;;		On exit  : 0/0
 24183 ;;		Unchanged: 0/0
 24184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24189 ;;Total ram usage:        0 bytes
 24190 ;; Hardware stack levels used:    1
 24191 ;; Hardware stack levels required when called:    1
 24192 ;; This function calls:
 24193 ;;		i1_i2c1_driver_stop
 24194 ;; This function is called by:
 24195 ;;		i1_do_I2C_DO_ADDRESS_NACK
 24196 ;;		i1_do_I2C_TX
 24197 ;;		i1_do_I2C_TX_EMPTY
 24198 ;; This function uses a non-reentrant model
 24199 ;;
 24200                           
 24201                           
 24202                           ;psect for function i1_do_I2C_SEND_STOP
 24203  21EB                     i1_do_I2C_SEND_STOP:	
 24204  21EB                     i1l7893:	
 24205                           ;incstack = 0
 24206                           ; Regs used in i1_do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 24207                           
 24208                           
 24209                           ;i2c_master.c: 274: i2c1_driver_stop();
 24210  21EB  31A1  21AD         	fcall	i1_i2c1_driver_stop
 24211                           
 24212                           ;i2c_master.c: 275: return I2C_IDLE;
 24213  21ED  3000               	movlw	0
 24214  21EE  0008               	return
 24215  21EF                     __end_ofi1_do_I2C_SEND_STOP:	
 24216                           
 24217                           	psect	text132
 24218  21E7                     __ptext132:	
 24219 ;; *************** function i1_do_I2C_SEND_RESTART *****************
 24220 ;; Defined at:
 24221 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 24222 ;; Parameters:    Size  Location     Type
 24223 ;;		None
 24224 ;; Auto vars:     Size  Location     Type
 24225 ;;		None
 24226 ;; Return value:  Size  Location     Type
 24227 ;;                  1    wreg      enum E8364
 24228 ;; Registers used:
 24229 ;;		wreg, status,2, status,0, pclath, cstack
 24230 ;; Tracked objects:
 24231 ;;		On entry : 0/0
 24232 ;;		On exit  : 0/0
 24233 ;;		Unchanged: 0/0
 24234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24239 ;;Total ram usage:        0 bytes
 24240 ;; Hardware stack levels used:    1
 24241 ;; Hardware stack levels required when called:    1
 24242 ;; This function calls:
 24243 ;;		i1_i2c1_driver_restart
 24244 ;; This function is called by:
 24245 ;;		i1_do_I2C_DO_ADDRESS_NACK
 24246 ;;		i1_do_I2C_TX_EMPTY
 24247 ;; This function uses a non-reentrant model
 24248 ;;
 24249                           
 24250                           
 24251                           ;psect for function i1_do_I2C_SEND_RESTART
 24252  21E7                     i1_do_I2C_SEND_RESTART:	
 24253  21E7                     i1l7887:	
 24254                           ;incstack = 0
 24255                           ; Regs used in i1_do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 24256                           
 24257                           
 24258                           ;i2c_master.c: 268: i2c1_driver_restart();
 24259  21E7  31A1  21AA         	fcall	i1_i2c1_driver_restart
 24260                           
 24261                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 24262  21E9  3001               	movlw	1
 24263  21EA  0008               	return
 24264  21EB                     __end_ofi1_do_I2C_SEND_RESTART:	
 24265                           
 24266                           	psect	text133
 24267  21E3                     __ptext133:	
 24268 ;; *************** function i1_do_I2C_SEND_RESTART_WRITE *****************
 24269 ;; Defined at:
 24270 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 24271 ;; Parameters:    Size  Location     Type
 24272 ;;		None
 24273 ;; Auto vars:     Size  Location     Type
 24274 ;;		None
 24275 ;; Return value:  Size  Location     Type
 24276 ;;                  1    wreg      enum E8364
 24277 ;; Registers used:
 24278 ;;		wreg, status,2, status,0, pclath, cstack
 24279 ;; Tracked objects:
 24280 ;;		On entry : 0/0
 24281 ;;		On exit  : 0/0
 24282 ;;		Unchanged: 0/0
 24283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24288 ;;Total ram usage:        0 bytes
 24289 ;; Hardware stack levels used:    1
 24290 ;; Hardware stack levels required when called:    1
 24291 ;; This function calls:
 24292 ;;		i1_i2c1_driver_restart
 24293 ;; This function is called by:
 24294 ;;		i1_do_I2C_TX
 24295 ;; This function uses a non-reentrant model
 24296 ;;
 24297                           
 24298                           
 24299                           ;psect for function i1_do_I2C_SEND_RESTART_WRITE
 24300  21E3                     i1_do_I2C_SEND_RESTART_WRITE:	
 24301  21E3                     i1l7881:	
 24302                           ;incstack = 0
 24303                           ; Regs used in i1_do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 24304                           
 24305                           
 24306                           ;i2c_master.c: 262: i2c1_driver_restart();
 24307  21E3  31A1  21AA         	fcall	i1_i2c1_driver_restart
 24308                           
 24309                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 24310  21E5  3002               	movlw	2
 24311  21E6  0008               	return
 24312  21E7                     __end_ofi1_do_I2C_SEND_RESTART_WRITE:	
 24313                           
 24314                           	psect	text134
 24315  21DF                     __ptext134:	
 24316 ;; *************** function i1_do_I2C_SEND_RESTART_READ *****************
 24317 ;; Defined at:
 24318 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 24319 ;; Parameters:    Size  Location     Type
 24320 ;;		None
 24321 ;; Auto vars:     Size  Location     Type
 24322 ;;		None
 24323 ;; Return value:  Size  Location     Type
 24324 ;;                  1    wreg      enum E8364
 24325 ;; Registers used:
 24326 ;;		wreg, status,2, status,0, pclath, cstack
 24327 ;; Tracked objects:
 24328 ;;		On entry : 0/0
 24329 ;;		On exit  : 0/0
 24330 ;;		Unchanged: 0/0
 24331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24336 ;;Total ram usage:        0 bytes
 24337 ;; Hardware stack levels used:    1
 24338 ;; Hardware stack levels required when called:    1
 24339 ;; This function calls:
 24340 ;;		i1_i2c1_driver_restart
 24341 ;; This function is called by:
 24342 ;;		i1_do_I2C_TX
 24343 ;; This function uses a non-reentrant model
 24344 ;;
 24345                           
 24346                           
 24347                           ;psect for function i1_do_I2C_SEND_RESTART_READ
 24348  21DF                     i1_do_I2C_SEND_RESTART_READ:	
 24349  21DF                     i1l7875:	
 24350                           ;incstack = 0
 24351                           ; Regs used in i1_do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 24352                           
 24353                           
 24354                           ;i2c_master.c: 256: i2c1_driver_restart();
 24355  21DF  31A1  21AA         	fcall	i1_i2c1_driver_restart
 24356                           
 24357                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 24358  21E1  3001               	movlw	1
 24359  21E2  0008               	return
 24360  21E3                     __end_ofi1_do_I2C_SEND_RESTART_READ:	
 24361                           
 24362                           	psect	text135
 24363  221A                     __ptext135:	
 24364 ;; *************** function i1_do_I2C_IDLE *****************
 24365 ;; Defined at:
 24366 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 24367 ;; Parameters:    Size  Location     Type
 24368 ;;		None
 24369 ;; Auto vars:     Size  Location     Type
 24370 ;;		None
 24371 ;; Return value:  Size  Location     Type
 24372 ;;                  1    wreg      enum E8364
 24373 ;; Registers used:
 24374 ;;		wreg, status,2
 24375 ;; Tracked objects:
 24376 ;;		On entry : 0/0
 24377 ;;		On exit  : 0/0
 24378 ;;		Unchanged: 0/0
 24379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24384 ;;Total ram usage:        0 bytes
 24385 ;; Hardware stack levels used:    1
 24386 ;; This function calls:
 24387 ;;		Nothing
 24388 ;; This function is called by:
 24389 ;; This function uses a non-reentrant model
 24390 ;;
 24391                           
 24392                           
 24393                           ;psect for function i1_do_I2C_IDLE
 24394  221A                     i1_do_I2C_IDLE:	
 24395  221A                     i1l6335:	
 24396                           ;incstack = 0
 24397                           ; Regs used in i1_do_I2C_IDLE: [wreg+status,2]
 24398                           
 24399                           
 24400                           ;i2c_master.c: 249: i2c_status.busy = 0;
 24401  221A  0022               	movlb	2	; select bank2
 24402  221B  1020               	bcf	_i2c_status^(0+256),0
 24403                           
 24404                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 24405  221C  01AB               	clrf	(_i2c_status^(0+256)+11)
 24406                           
 24407                           ;i2c_master.c: 251: return I2C_RESET;
 24408  221D  300E               	movlw	14
 24409  221E  0008               	return
 24410  221F                     __end_ofi1_do_I2C_IDLE:	
 24411                           
 24412                           	psect	text136
 24413  224D                     __ptext136:	
 24414 ;; *************** function i1_do_I2C_RESET *****************
 24415 ;; Defined at:
 24416 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 24417 ;; Parameters:    Size  Location     Type
 24418 ;;		None
 24419 ;; Auto vars:     Size  Location     Type
 24420 ;;		None
 24421 ;; Return value:  Size  Location     Type
 24422 ;;                  1    wreg      enum E8364
 24423 ;; Registers used:
 24424 ;;		wreg, status,2, status,0, pclath, cstack
 24425 ;; Tracked objects:
 24426 ;;		On entry : 0/0
 24427 ;;		On exit  : 0/0
 24428 ;;		Unchanged: 0/0
 24429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24434 ;;Total ram usage:        0 bytes
 24435 ;; Hardware stack levels used:    1
 24436 ;; Hardware stack levels required when called:    1
 24437 ;; This function calls:
 24438 ;;		i1_i2c1_driver_resetBus
 24439 ;; This function is called by:
 24440 ;; This function uses a non-reentrant model
 24441 ;;
 24442                           
 24443                           
 24444                           ;psect for function i1_do_I2C_RESET
 24445  224D                     i1_do_I2C_RESET:	
 24446  224D                     i1l6325:	
 24447                           ;incstack = 0
 24448                           ; Regs used in i1_do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 24449                           
 24450                           
 24451                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 24452  224D  31A1  2199         	fcall	i1_i2c1_driver_resetBus
 24453                           
 24454                           ;i2c_master.c: 242: i2c_status.busy = 0;
 24455  224F  0022               	movlb	2	; select bank2
 24456  2250  1020               	bcf	_i2c_status^(0+256),0
 24457                           
 24458                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 24459  2251  01AB               	clrf	(_i2c_status^(0+256)+11)
 24460                           
 24461                           ;i2c_master.c: 244: return I2C_RESET;
 24462  2252  300E               	movlw	14
 24463  2253  0008               	return
 24464  2254                     __end_ofi1_do_I2C_RESET:	
 24465                           
 24466                           	psect	text137
 24467  271C                     __ptext137:	
 24468 ;; *************** function i1_do_I2C_TX_EMPTY *****************
 24469 ;; Defined at:
 24470 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 24471 ;; Parameters:    Size  Location     Type
 24472 ;;		None
 24473 ;; Auto vars:     Size  Location     Type
 24474 ;;		None
 24475 ;; Return value:  Size  Location     Type
 24476 ;;                  1    wreg      enum E8364
 24477 ;; Registers used:
 24478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24479 ;; Tracked objects:
 24480 ;;		On entry : 0/0
 24481 ;;		On exit  : 0/0
 24482 ;;		Unchanged: 0/0
 24483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24488 ;;Total ram usage:        1 bytes
 24489 ;; Hardware stack levels used:    1
 24490 ;; Hardware stack levels required when called:    2
 24491 ;; This function calls:
 24492 ;;		i1_do_I2C_SEND_RESTART
 24493 ;;		i1_do_I2C_SEND_STOP
 24494 ;;		i1_mssp1_setIRQ
 24495 ;;		i1_returnReset
 24496 ;;		i1_returnStop
 24497 ;; This function is called by:
 24498 ;; This function uses a non-reentrant model
 24499 ;;
 24500                           
 24501                           
 24502                           ;psect for function i1_do_I2C_TX_EMPTY
 24503  271C                     i1_do_I2C_TX_EMPTY:	
 24504  271C                     i1l8343:	
 24505                           ;incstack = 0
 24506                           ; Regs used in i1_do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 24507                           
 24508                           
 24509                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 24510  271C  0022               	movlb	2	; select bank2
 24511  271D  1520               	bsf	_i2c_status^(0+256),2
 24512                           
 24513                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 24514  271E  2F29               	goto	i1l8361
 24515  271F                     i1l8345:	
 24516                           ;i2c_master.c: 386: {
 24517                           ;i2c_master.c: 387: case i2c_restart_read:
 24518                           
 24519                           
 24520                           ;i2c_master.c: 388: case i2c_restart_write:
 24521                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 24522  271F  31A1  21E7         	fcall	i1_do_I2C_SEND_RESTART
 24523  2721  0008               	return
 24524  2722                     i1l8349:	
 24525                           ;i2c_master.c: 390: case i2c_continue:
 24526                           
 24527                           
 24528                           ;i2c_master.c: 391: mssp1_setIRQ();
 24529  2722  31A1  21B6         	fcall	i1_mssp1_setIRQ
 24530                           
 24531                           ;i2c_master.c: 392: return I2C_TX;
 24532  2724  3003               	movlw	3
 24533  2725  0008               	return
 24534  2726                     i1l8355:	
 24535                           ;i2c_master.c: 394: case i2c_stop:
 24536                           
 24537                           ;i2c_master.c: 393: default:
 24538                           
 24539                           
 24540                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 24541  2726  31A1  21EB         	fcall	i1_do_I2C_SEND_STOP
 24542                           
 24543                           ;i2c_master.c: 396: }
 24544  2728  0008               	return
 24545  2729                     i1l8361:	
 24546  2729  0022               	movlb	2	; select bank2
 24547  272A  0838               	movf	(low ((_i2c_status| (0+256)+24)))^0,w
 24548  272B  00F0               	movwf	??i1_do_I2C_TX_EMPTY
 24549  272C  0870               	movf	??i1_do_I2C_TX_EMPTY,w
 24550  272D  00F0               	movwf	i1returnReset@p
 24551  272E  300C               	movlw	12
 24552  272F  3E20               	addlw	(low (_i2c_status| (0+256)))& (0+255)
 24553  2730  0086               	movwf	6
 24554  2731  3001               	movlw	1	; select bank2/3
 24555  2732  0087               	movwf	7
 24556  2733  3F41               	moviw [1]fsr1
 24557  2734  008A               	movwf	10
 24558  2735  3F40               	moviw [0]fsr1
 24559  2736  000A               	callw
 24560  2737  31A7               	pagesel	$
 24561                           
 24562                           ; Switch size 1, requested type "space"
 24563                           ; Number of cases is 4, Range of values is 1 to 4
 24564                           ; switch strategies available:
 24565                           ; Name         Instructions Cycles
 24566                           ; simple_byte           13     7 (average)
 24567                           ; direct_byte           17     9 (fixed)
 24568                           ; jumptable            263     9 (fixed)
 24569                           ;	Chosen strategy is simple_byte
 24570  2738  3A01               	xorlw	1	; case 1
 24571  2739  1903               	skipnz
 24572  273A  2F26               	goto	i1l8355
 24573  273B  3A03               	xorlw	3	; case 2
 24574  273C  1903               	skipnz
 24575  273D  2F1F               	goto	i1l8345
 24576  273E  3A01               	xorlw	1	; case 3
 24577  273F  1903               	skipnz
 24578  2740  2F1F               	goto	i1l8345
 24579  2741  3A07               	xorlw	7	; case 4
 24580  2742  1903               	skipnz
 24581  2743  2F22               	goto	i1l8349
 24582  2744  2F26               	goto	i1l8355
 24583  2745  0008               	return
 24584  2746                     __end_ofi1_do_I2C_TX_EMPTY:	
 24585                           
 24586                           	psect	text138
 24587  21B6                     __ptext138:	
 24588 ;; *************** function i1_mssp1_setIRQ *****************
 24589 ;; Defined at:
 24590 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 24591 ;; Parameters:    Size  Location     Type
 24592 ;;		None
 24593 ;; Auto vars:     Size  Location     Type
 24594 ;;		None
 24595 ;; Return value:  Size  Location     Type
 24596 ;;                  1    wreg      void 
 24597 ;; Registers used:
 24598 ;;		None
 24599 ;; Tracked objects:
 24600 ;;		On entry : 0/0
 24601 ;;		On exit  : 0/0
 24602 ;;		Unchanged: 0/0
 24603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24608 ;;Total ram usage:        0 bytes
 24609 ;; Hardware stack levels used:    1
 24610 ;; This function calls:
 24611 ;;		Nothing
 24612 ;; This function is called by:
 24613 ;;		i1_do_I2C_TX_EMPTY
 24614 ;; This function uses a non-reentrant model
 24615 ;;
 24616                           
 24617                           
 24618                           ;psect for function i1_mssp1_setIRQ
 24619  21B6                     i1_mssp1_setIRQ:	
 24620                           
 24621                           ;i2c1_driver.c: 60: PIR1bits.SSP1IF = 1;
 24622                           
 24623                           ;incstack = 0
 24624                           ; Regs used in i1_mssp1_setIRQ: []
 24625  21B6  0020               	movlb	0	; select bank0
 24626  21B7  1591               	bsf	17,3	;volatile
 24627  21B8  0008               	return
 24628  21B9                     __end_ofi1_mssp1_setIRQ:	
 24629                           
 24630                           	psect	text139
 24631  2329                     __ptext139:	
 24632 ;; *************** function i1_i2c1_driver_isNACK *****************
 24633 ;; Defined at:
 24634 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 24635 ;; Parameters:    Size  Location     Type
 24636 ;;		None
 24637 ;; Auto vars:     Size  Location     Type
 24638 ;;		None
 24639 ;; Return value:  Size  Location     Type
 24640 ;;		None               void
 24641 ;; Registers used:
 24642 ;;		wreg, status,2, status,0
 24643 ;; Tracked objects:
 24644 ;;		On entry : 0/0
 24645 ;;		On exit  : 0/0
 24646 ;;		Unchanged: 0/0
 24647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24650 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24651 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24652 ;;Total ram usage:        1 bytes
 24653 ;; Hardware stack levels used:    1
 24654 ;; This function calls:
 24655 ;;		Nothing
 24656 ;; This function is called by:
 24657 ;;		i1_do_I2C_TX
 24658 ;;		i1_i2c_ISR
 24659 ;; This function uses a non-reentrant model
 24660 ;;
 24661                           
 24662                           
 24663                           ;psect for function i1_i2c1_driver_isNACK
 24664  2329                     i1_i2c1_driver_isNACK:	
 24665                           
 24666                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 24667                           
 24668                           ;incstack = 0
 24669                           ; Regs used in i1_i2c1_driver_isNACK: [wreg+status,2+status,0]
 24670  2329  0024               	movlb	4	; select bank4
 24671  232A  0816               	movf	22,w	;volatile
 24672  232B  39BF               	andlw	-65
 24673  232C  3840               	iorlw	64
 24674  232D  0096               	movwf	22	;volatile
 24675  232E  0E16               	swapf	22,w	;volatile
 24676  232F  0C89               	rrf	9,f
 24677  2330  0C89               	rrf	9,f
 24678  2331  3901               	andlw	1
 24679  2332  00F0               	movwf	??i1_i2c1_driver_isNACK
 24680  2333  0C70               	rrf	??i1_i2c1_driver_isNACK,w
 24681  2334  0008               	return
 24682  2335                     __end_ofi1_i2c1_driver_isNACK:	
 24683                           
 24684                           	psect	text140
 24685  2215                     __ptext140:	
 24686 ;; *************** function i1_i2c1_driver_TXData *****************
 24687 ;; Defined at:
 24688 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 24689 ;; Parameters:    Size  Location     Type
 24690 ;;  d               1    wreg     unsigned char 
 24691 ;; Auto vars:     Size  Location     Type
 24692 ;;  d               1    0[COMMON] unsigned char 
 24693 ;; Return value:  Size  Location     Type
 24694 ;;                  1    wreg      void 
 24695 ;; Registers used:
 24696 ;;		wreg
 24697 ;; Tracked objects:
 24698 ;;		On entry : 0/0
 24699 ;;		On exit  : 0/0
 24700 ;;		Unchanged: 0/0
 24701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24706 ;;Total ram usage:        1 bytes
 24707 ;; Hardware stack levels used:    1
 24708 ;; This function calls:
 24709 ;;		Nothing
 24710 ;; This function is called by:
 24711 ;;		i1_do_I2C_SEND_ADR_READ
 24712 ;;		i1_do_I2C_SEND_ADR_WRITE
 24713 ;;		i1_do_I2C_TX
 24714 ;; This function uses a non-reentrant model
 24715 ;;
 24716                           
 24717                           
 24718                           ;psect for function i1_i2c1_driver_TXData
 24719  2215                     i1_i2c1_driver_TXData:	
 24720                           
 24721                           ;incstack = 0
 24722                           ; Regs used in i1_i2c1_driver_TXData: [wreg]
 24723                           ;i1i2c1_driver_TXData@d stored from wreg
 24724  2215  00F0               	movwf	i1i2c1_driver_TXData@d
 24725                           
 24726                           ;i2c1_driver.c: 188: SSP1BUF = d;
 24727  2216  0870               	movf	i1i2c1_driver_TXData@d,w
 24728  2217  0024               	movlb	4	; select bank4
 24729  2218  0091               	movwf	17	;volatile
 24730  2219  0008               	return
 24731  221A                     __end_ofi1_i2c1_driver_TXData:	
 24732                           
 24733                           	psect	text141
 24734  21B3                     __ptext141:	
 24735 ;; *************** function i1_i2c1_driver_getRXData *****************
 24736 ;; Defined at:
 24737 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 24738 ;; Parameters:    Size  Location     Type
 24739 ;;		None
 24740 ;; Auto vars:     Size  Location     Type
 24741 ;;		None
 24742 ;; Return value:  Size  Location     Type
 24743 ;;                  1    wreg      unsigned char 
 24744 ;; Registers used:
 24745 ;;		wreg
 24746 ;; Tracked objects:
 24747 ;;		On entry : 0/0
 24748 ;;		On exit  : 0/0
 24749 ;;		Unchanged: 0/0
 24750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24755 ;;Total ram usage:        0 bytes
 24756 ;; Hardware stack levels used:    1
 24757 ;; This function calls:
 24758 ;;		Nothing
 24759 ;; This function is called by:
 24760 ;;		i1_do_I2C_RX
 24761 ;; This function uses a non-reentrant model
 24762 ;;
 24763                           
 24764                           
 24765                           ;psect for function i1_i2c1_driver_getRXData
 24766  21B3                     i1_i2c1_driver_getRXData:	
 24767                           
 24768                           ;i2c1_driver.c: 173: return SSP1BUF;
 24769                           
 24770                           ;incstack = 0
 24771                           ; Regs used in i1_i2c1_driver_getRXData: [wreg]
 24772  21B3  0024               	movlb	4	; select bank4
 24773  21B4  0811               	movf	17,w	;volatile
 24774  21B5  0008               	return
 24775  21B6                     __end_ofi1_i2c1_driver_getRXData:	
 24776                           
 24777                           	psect	text142
 24778  21DB                     __ptext142:	
 24779 ;; *************** function i1_i2c1_driver_sendNACK *****************
 24780 ;; Defined at:
 24781 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 24782 ;; Parameters:    Size  Location     Type
 24783 ;;		None
 24784 ;; Auto vars:     Size  Location     Type
 24785 ;;		None
 24786 ;; Return value:  Size  Location     Type
 24787 ;;                  1    wreg      void 
 24788 ;; Registers used:
 24789 ;;		None
 24790 ;; Tracked objects:
 24791 ;;		On entry : 0/0
 24792 ;;		On exit  : 0/0
 24793 ;;		Unchanged: 0/0
 24794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24799 ;;Total ram usage:        0 bytes
 24800 ;; Hardware stack levels used:    1
 24801 ;; This function calls:
 24802 ;;		Nothing
 24803 ;; This function is called by:
 24804 ;;		i1_do_I2C_DO_NACK_STOP
 24805 ;;		i1_do_I2C_DO_NACK_RESTART
 24806 ;; This function uses a non-reentrant model
 24807 ;;
 24808                           
 24809                           
 24810                           ;psect for function i1_i2c1_driver_sendNACK
 24811  21DB                     i1_i2c1_driver_sendNACK:	
 24812                           
 24813                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 24814                           
 24815                           ;incstack = 0
 24816                           ; Regs used in i1_i2c1_driver_sendNACK: []
 24817  21DB  0024               	movlb	4	; select bank4
 24818  21DC  1696               	bsf	22,5	;volatile
 24819                           
 24820                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 24821  21DD  1616               	bsf	22,4	;volatile
 24822  21DE  0008               	return
 24823  21DF                     __end_ofi1_i2c1_driver_sendNACK:	
 24824                           
 24825                           	psect	text143
 24826  2199                     __ptext143:	
 24827 ;; *************** function i1_i2c1_driver_resetBus *****************
 24828 ;; Defined at:
 24829 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 24830 ;; Parameters:    Size  Location     Type
 24831 ;;		None
 24832 ;; Auto vars:     Size  Location     Type
 24833 ;;		None
 24834 ;; Return value:  Size  Location     Type
 24835 ;;                  1    wreg      void 
 24836 ;; Registers used:
 24837 ;;		None
 24838 ;; Tracked objects:
 24839 ;;		On entry : 0/0
 24840 ;;		On exit  : 0/0
 24841 ;;		Unchanged: 0/0
 24842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24847 ;;Total ram usage:        0 bytes
 24848 ;; Hardware stack levels used:    1
 24849 ;; This function calls:
 24850 ;;		Nothing
 24851 ;; This function is called by:
 24852 ;;		i1_do_I2C_RESET
 24853 ;; This function uses a non-reentrant model
 24854 ;;
 24855                           
 24856                           
 24857                           ;psect for function i1_i2c1_driver_resetBus
 24858  2199                     i1_i2c1_driver_resetBus:	
 24859                           
 24860                           ;incstack = 0
 24861                           ; Regs used in i1_i2c1_driver_resetBus: []
 24862  2199  0008               	return
 24863  219A                     __end_ofi1_i2c1_driver_resetBus:	
 24864                           
 24865                           	psect	text144
 24866  21B0                     __ptext144:	
 24867 ;; *************** function i1_i2c1_driver_startRX *****************
 24868 ;; Defined at:
 24869 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 24870 ;; Parameters:    Size  Location     Type
 24871 ;;		None
 24872 ;; Auto vars:     Size  Location     Type
 24873 ;;		None
 24874 ;; Return value:  Size  Location     Type
 24875 ;;                  1    wreg      void 
 24876 ;; Registers used:
 24877 ;;		None
 24878 ;; Tracked objects:
 24879 ;;		On entry : 0/0
 24880 ;;		On exit  : 0/0
 24881 ;;		Unchanged: 0/0
 24882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24887 ;;Total ram usage:        0 bytes
 24888 ;; Hardware stack levels used:    1
 24889 ;; This function calls:
 24890 ;;		Nothing
 24891 ;; This function is called by:
 24892 ;;		i1_do_I2C_RCEN
 24893 ;; This function uses a non-reentrant model
 24894 ;;
 24895                           
 24896                           
 24897                           ;psect for function i1_i2c1_driver_startRX
 24898  21B0                     i1_i2c1_driver_startRX:	
 24899                           
 24900                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 24901                           
 24902                           ;incstack = 0
 24903                           ; Regs used in i1_i2c1_driver_startRX: []
 24904  21B0  0024               	movlb	4	; select bank4
 24905  21B1  1596               	bsf	22,3	;volatile
 24906  21B2  0008               	return
 24907  21B3                     __end_ofi1_i2c1_driver_startRX:	
 24908                           
 24909                           	psect	text145
 24910  219C                     __ptext145:	
 24911 ;; *************** function i1_returnReset *****************
 24912 ;; Defined at:
 24913 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 24914 ;; Parameters:    Size  Location     Type
 24915 ;;  p               1    0[COMMON] PTR void 
 24916 ;;		 -> NULL(0), 
 24917 ;; Auto vars:     Size  Location     Type
 24918 ;;		None
 24919 ;; Return value:  Size  Location     Type
 24920 ;;                  1    wreg      enum E8198
 24921 ;; Registers used:
 24922 ;;		wreg
 24923 ;; Tracked objects:
 24924 ;;		On entry : 0/0
 24925 ;;		On exit  : 0/0
 24926 ;;		Unchanged: 0/0
 24927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24928 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24932 ;;Total ram usage:        1 bytes
 24933 ;; Hardware stack levels used:    1
 24934 ;; This function calls:
 24935 ;;		Nothing
 24936 ;; This function is called by:
 24937 ;; This function uses a non-reentrant model
 24938 ;;
 24939                           
 24940                           
 24941                           ;psect for function i1_returnReset
 24942  219C                     i1_returnReset:	
 24943  219C                     i1l7915:	
 24944                           ;incstack = 0
 24945                           ; Regs used in i1_returnReset: [wreg]
 24946                           
 24947                           
 24948                           ;i2c_master.c: 450: return i2c_reset_link;
 24949  219C  3005               	movlw	5
 24950  219D  0008               	return
 24951  219E                     __end_ofi1_returnReset:	
 24952                           
 24953                           	psect	text146
 24954  219A                     __ptext146:	
 24955 ;; *************** function i1_returnStop *****************
 24956 ;; Defined at:
 24957 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 24958 ;; Parameters:    Size  Location     Type
 24959 ;;  p               1    0[COMMON] PTR void 
 24960 ;;		 -> NULL(0), 
 24961 ;; Auto vars:     Size  Location     Type
 24962 ;;		None
 24963 ;; Return value:  Size  Location     Type
 24964 ;;                  1    wreg      enum E8198
 24965 ;; Registers used:
 24966 ;;		wreg
 24967 ;; Tracked objects:
 24968 ;;		On entry : 0/0
 24969 ;;		On exit  : 0/0
 24970 ;;		Unchanged: 0/0
 24971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24972 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24976 ;;Total ram usage:        1 bytes
 24977 ;; Hardware stack levels used:    1
 24978 ;; This function calls:
 24979 ;;		Nothing
 24980 ;; This function is called by:
 24981 ;; This function uses a non-reentrant model
 24982 ;;
 24983                           
 24984                           
 24985                           ;psect for function i1_returnStop
 24986  219A                     i1_returnStop:	
 24987  219A                     i1l7911:	
 24988                           ;incstack = 0
 24989                           ; Regs used in i1_returnStop: [wreg]
 24990                           
 24991                           
 24992                           ;i2c_master.c: 445: return i2c_stop;
 24993  219A  3001               	movlw	1
 24994  219B  0008               	return
 24995  219C                     __end_ofi1_returnStop:	
 24996                           
 24997                           	psect	text147
 24998  21AD                     __ptext147:	
 24999 ;; *************** function i1_i2c1_driver_stop *****************
 25000 ;; Defined at:
 25001 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 25002 ;; Parameters:    Size  Location     Type
 25003 ;;		None
 25004 ;; Auto vars:     Size  Location     Type
 25005 ;;		None
 25006 ;; Return value:  Size  Location     Type
 25007 ;;                  1    wreg      void 
 25008 ;; Registers used:
 25009 ;;		None
 25010 ;; Tracked objects:
 25011 ;;		On entry : 0/0
 25012 ;;		On exit  : 0/0
 25013 ;;		Unchanged: 0/0
 25014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25019 ;;Total ram usage:        0 bytes
 25020 ;; Hardware stack levels used:    1
 25021 ;; This function calls:
 25022 ;;		Nothing
 25023 ;; This function is called by:
 25024 ;;		i1_do_I2C_SEND_STOP
 25025 ;; This function uses a non-reentrant model
 25026 ;;
 25027                           
 25028                           
 25029                           ;psect for function i1_i2c1_driver_stop
 25030  21AD                     i1_i2c1_driver_stop:	
 25031                           
 25032                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 25033                           
 25034                           ;incstack = 0
 25035                           ; Regs used in i1_i2c1_driver_stop: []
 25036  21AD  0024               	movlb	4	; select bank4
 25037  21AE  1516               	bsf	22,2	;volatile
 25038  21AF  0008               	return
 25039  21B0                     __end_ofi1_i2c1_driver_stop:	
 25040                           
 25041                           	psect	text148
 25042  21AA                     __ptext148:	
 25043 ;; *************** function i1_i2c1_driver_restart *****************
 25044 ;; Defined at:
 25045 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 25046 ;; Parameters:    Size  Location     Type
 25047 ;;		None
 25048 ;; Auto vars:     Size  Location     Type
 25049 ;;		None
 25050 ;; Return value:  Size  Location     Type
 25051 ;;                  1    wreg      void 
 25052 ;; Registers used:
 25053 ;;		None
 25054 ;; Tracked objects:
 25055 ;;		On entry : 0/0
 25056 ;;		On exit  : 0/0
 25057 ;;		Unchanged: 0/0
 25058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25063 ;;Total ram usage:        0 bytes
 25064 ;; Hardware stack levels used:    1
 25065 ;; This function calls:
 25066 ;;		Nothing
 25067 ;; This function is called by:
 25068 ;;		i1_do_I2C_SEND_RESTART_READ
 25069 ;;		i1_do_I2C_SEND_RESTART_WRITE
 25070 ;;		i1_do_I2C_SEND_RESTART
 25071 ;; This function uses a non-reentrant model
 25072 ;;
 25073                           
 25074                           
 25075                           ;psect for function i1_i2c1_driver_restart
 25076  21AA                     i1_i2c1_driver_restart:	
 25077                           
 25078                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 25079                           
 25080                           ;incstack = 0
 25081                           ; Regs used in i1_i2c1_driver_restart: []
 25082  21AA  0024               	movlb	4	; select bank4
 25083  21AB  1496               	bsf	22,1	;volatile
 25084  21AC  0008               	return
 25085  21AD                     __end_ofi1_i2c1_driver_restart:	
 25086                           
 25087                           	psect	text149
 25088  21D7                     __ptext149:	
 25089 ;; *************** function i1_i2c1_driver_sendACK *****************
 25090 ;; Defined at:
 25091 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 25092 ;; Parameters:    Size  Location     Type
 25093 ;;		None
 25094 ;; Auto vars:     Size  Location     Type
 25095 ;;		None
 25096 ;; Return value:  Size  Location     Type
 25097 ;;                  1    wreg      void 
 25098 ;; Registers used:
 25099 ;;		None
 25100 ;; Tracked objects:
 25101 ;;		On entry : 0/0
 25102 ;;		On exit  : 0/0
 25103 ;;		Unchanged: 0/0
 25104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25109 ;;Total ram usage:        0 bytes
 25110 ;; Hardware stack levels used:    1
 25111 ;; This function calls:
 25112 ;;		Nothing
 25113 ;; This function is called by:
 25114 ;;		i1_do_I2C_DO_ACK
 25115 ;;		i1_do_I2C_RX
 25116 ;; This function uses a non-reentrant model
 25117 ;;
 25118                           
 25119                           
 25120                           ;psect for function i1_i2c1_driver_sendACK
 25121  21D7                     i1_i2c1_driver_sendACK:	
 25122                           
 25123                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 25124                           
 25125                           ;incstack = 0
 25126                           ; Regs used in i1_i2c1_driver_sendACK: []
 25127  21D7  0024               	movlb	4	; select bank4
 25128  21D8  1296               	bcf	22,5	;volatile
 25129                           
 25130                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 25131  21D9  1616               	bsf	22,4	;volatile
 25132  21DA  0008               	return
 25133  21DB                     __end_ofi1_i2c1_driver_sendACK:	
 25134                           
 25135                           	psect	text150
 25136  21A7                     __ptext150:	
 25137 ;; *************** function _i2c_busCollisionISR *****************
 25138 ;; Defined at:
 25139 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 25140 ;; Parameters:    Size  Location     Type
 25141 ;;		None
 25142 ;; Auto vars:     Size  Location     Type
 25143 ;;		None
 25144 ;; Return value:  Size  Location     Type
 25145 ;;                  1    wreg      void 
 25146 ;; Registers used:
 25147 ;;		status,2, status,0, pclath, cstack
 25148 ;; Tracked objects:
 25149 ;;		On entry : 0/0
 25150 ;;		On exit  : 0/0
 25151 ;;		Unchanged: 0/0
 25152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25157 ;;Total ram usage:        0 bytes
 25158 ;; Hardware stack levels used:    1
 25159 ;; Hardware stack levels required when called:    1
 25160 ;; This function calls:
 25161 ;;		_i2c1_driver_clearBusCollision
 25162 ;; This function is called by:
 25163 ;;		_i2c_open
 25164 ;;		_INTERRUPT_InterruptManager
 25165 ;; This function uses a non-reentrant model
 25166 ;;
 25167                           
 25168                           
 25169                           ;psect for function _i2c_busCollisionISR
 25170  21A7                     _i2c_busCollisionISR:	
 25171                           
 25172                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 25173                           
 25174                           ;incstack = 0
 25175                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 25176  21A7  31A1  21A4         	fcall	_i2c1_driver_clearBusCollision
 25177  21A9  0008               	return
 25178  21AA                     __end_of_i2c_busCollisionISR:	
 25179                           
 25180                           	psect	text151
 25181  21A4                     __ptext151:	
 25182 ;; *************** function _i2c1_driver_clearBusCollision *****************
 25183 ;; Defined at:
 25184 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 25185 ;; Parameters:    Size  Location     Type
 25186 ;;		None
 25187 ;; Auto vars:     Size  Location     Type
 25188 ;;		None
 25189 ;; Return value:  Size  Location     Type
 25190 ;;                  1    wreg      void 
 25191 ;; Registers used:
 25192 ;;		None
 25193 ;; Tracked objects:
 25194 ;;		On entry : 0/0
 25195 ;;		On exit  : 0/0
 25196 ;;		Unchanged: 0/0
 25197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25202 ;;Total ram usage:        0 bytes
 25203 ;; Hardware stack levels used:    1
 25204 ;; This function calls:
 25205 ;;		Nothing
 25206 ;; This function is called by:
 25207 ;;		_i2c_busCollisionISR
 25208 ;; This function uses a non-reentrant model
 25209 ;;
 25210                           
 25211                           
 25212                           ;psect for function _i2c1_driver_clearBusCollision
 25213  21A4                     _i2c1_driver_clearBusCollision:	
 25214                           
 25215                           ;i2c1_driver.c: 255: PIR1bits.BCL1IF = 0;
 25216                           
 25217                           ;incstack = 0
 25218                           ; Regs used in _i2c1_driver_clearBusCollision: []
 25219  21A4  0020               	movlb	0	; select bank0
 25220  21A5  1111               	bcf	17,2	;volatile
 25221  21A6  0008               	return
 25222  21A7                     __end_of_i2c1_driver_clearBusCollision:	
 25223                           
 25224                           	psect	text152
 25225  2366                     __ptext152:	
 25226 ;; *************** function _TMR2_ISR *****************
 25227 ;; Defined at:
 25228 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 25229 ;; Parameters:    Size  Location     Type
 25230 ;;		None
 25231 ;; Auto vars:     Size  Location     Type
 25232 ;;		None
 25233 ;; Return value:  Size  Location     Type
 25234 ;;                  1    wreg      void 
 25235 ;; Registers used:
 25236 ;;		wreg, status,2, status,0, pclath, cstack
 25237 ;; Tracked objects:
 25238 ;;		On entry : 0/0
 25239 ;;		On exit  : 0/0
 25240 ;;		Unchanged: 0/0
 25241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25246 ;;Total ram usage:        0 bytes
 25247 ;; Hardware stack levels used:    1
 25248 ;; Hardware stack levels required when called:    2
 25249 ;; This function calls:
 25250 ;;		Absolute function
 25251 ;;		_TMR2_DefaultInterruptHandler
 25252 ;; This function is called by:
 25253 ;;		_INTERRUPT_InterruptManager
 25254 ;; This function uses a non-reentrant model
 25255 ;;
 25256                           
 25257                           
 25258                           ;psect for function _TMR2_ISR
 25259  2366                     _TMR2_ISR:	
 25260                           
 25261                           ;tmr2.c: 121: PIR1bits.TMR2IF = 0;
 25262                           
 25263                           ;incstack = 0
 25264                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 25265  2366  0020               	movlb	0	; select bank0
 25266  2367  1091               	bcf	17,1	;volatile
 25267                           
 25268                           ;tmr2.c: 123: if(TMR2_InterruptHandler)
 25269  2368  0023               	movlb	3	; select bank3
 25270  2369  0859               	movf	_TMR2_InterruptHandler^(0+384),w
 25271  236A  045A               	iorwf	(_TMR2_InterruptHandler+1)^(0+384),w
 25272  236B  1903               	btfsc	3,2
 25273  236C  0008               	return
 25274                           
 25275                           ;tmr2.c: 124: {
 25276                           ;tmr2.c: 125: TMR2_InterruptHandler();
 25277  236D  085A               	movf	(_TMR2_InterruptHandler+1)^(0+384),w
 25278  236E  008A               	movwf	10
 25279  236F  0859               	movf	_TMR2_InterruptHandler^(0+384),w
 25280  2370  000A               	callw
 25281  2371  31A3               	pagesel	$
 25282  2372  0008               	return
 25283  2373                     __end_of_TMR2_ISR:	
 25284                           
 25285                           	psect	text153
 25286  22AB                     __ptext153:	
 25287 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 25288 ;; Defined at:
 25289 ;;		line 134 in file "mcc_generated_files/tmr2.c"
 25290 ;; Parameters:    Size  Location     Type
 25291 ;;		None
 25292 ;; Auto vars:     Size  Location     Type
 25293 ;;		None
 25294 ;; Return value:  Size  Location     Type
 25295 ;;                  1    wreg      void 
 25296 ;; Registers used:
 25297 ;;		wreg, status,2, status,0, pclath, cstack
 25298 ;; Tracked objects:
 25299 ;;		On entry : 0/0
 25300 ;;		On exit  : 0/0
 25301 ;;		Unchanged: 0/0
 25302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25307 ;;Total ram usage:        0 bytes
 25308 ;; Hardware stack levels used:    1
 25309 ;; Hardware stack levels required when called:    1
 25310 ;; This function calls:
 25311 ;;		_TMR2_StopTimer
 25312 ;;		_TMR2_WriteTimer
 25313 ;; This function is called by:
 25314 ;;		_TMR2_Initialize
 25315 ;;		_TMR2_ISR
 25316 ;; This function uses a non-reentrant model
 25317 ;;
 25318                           
 25319                           
 25320                           ;psect for function _TMR2_DefaultInterruptHandler
 25321  22AB                     _TMR2_DefaultInterruptHandler:	
 25322                           
 25323                           ;incstack = 0
 25324                           ; Regs used in _TMR2_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 25325                           ;tmr2.c: 138: do { LATCbits.LATC1 = 1; } while(0);
 25326  22AB  0022               	movlb	2	; select bank2
 25327  22AC  148E               	bsf	14,1	;volatile
 25328                           
 25329                           ;tmr2.c: 141: TMR2_StopTimer();
 25330  22AD  31A1  21A1  31A2   	fcall	_TMR2_StopTimer
 25331                           
 25332                           ;tmr2.c: 142: TMR2_WriteTimer(0);
 25333  22B0  3000               	movlw	0
 25334  22B1  31A2  2210         	fcall	_TMR2_WriteTimer
 25335  22B3  0008               	return
 25336  22B4                     __end_of_TMR2_DefaultInterruptHandler:	
 25337                           
 25338                           	psect	text154
 25339  2210                     __ptext154:	
 25340 ;; *************** function _TMR2_WriteTimer *****************
 25341 ;; Defined at:
 25342 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 25343 ;; Parameters:    Size  Location     Type
 25344 ;;  timerVal        1    wreg     unsigned char 
 25345 ;; Auto vars:     Size  Location     Type
 25346 ;;  timerVal        1    0[COMMON] unsigned char 
 25347 ;; Return value:  Size  Location     Type
 25348 ;;                  1    wreg      void 
 25349 ;; Registers used:
 25350 ;;		wreg
 25351 ;; Tracked objects:
 25352 ;;		On entry : 0/0
 25353 ;;		On exit  : 0/0
 25354 ;;		Unchanged: 0/0
 25355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25360 ;;Total ram usage:        1 bytes
 25361 ;; Hardware stack levels used:    1
 25362 ;; This function calls:
 25363 ;;		Nothing
 25364 ;; This function is called by:
 25365 ;;		_TMR2_DefaultInterruptHandler
 25366 ;; This function uses a non-reentrant model
 25367 ;;
 25368                           
 25369                           
 25370                           ;psect for function _TMR2_WriteTimer
 25371  2210                     _TMR2_WriteTimer:	
 25372                           
 25373                           ;incstack = 0
 25374                           ; Regs used in _TMR2_WriteTimer: [wreg]
 25375                           ;TMR2_WriteTimer@timerVal stored from wreg
 25376  2210  00F0               	movwf	TMR2_WriteTimer@timerVal
 25377                           
 25378                           ;tmr2.c: 109: TMR2 = timerVal;
 25379  2211  0870               	movf	TMR2_WriteTimer@timerVal,w
 25380  2212  0020               	movlb	0	; select bank0
 25381  2213  009D               	movwf	29	;volatile
 25382  2214  0008               	return
 25383  2215                     __end_of_TMR2_WriteTimer:	
 25384                           
 25385                           	psect	text155
 25386  21A1                     __ptext155:	
 25387 ;; *************** function _TMR2_StopTimer *****************
 25388 ;; Defined at:
 25389 ;;		line 91 in file "mcc_generated_files/tmr2.c"
 25390 ;; Parameters:    Size  Location     Type
 25391 ;;		None
 25392 ;; Auto vars:     Size  Location     Type
 25393 ;;		None
 25394 ;; Return value:  Size  Location     Type
 25395 ;;                  1    wreg      void 
 25396 ;; Registers used:
 25397 ;;		None
 25398 ;; Tracked objects:
 25399 ;;		On entry : 0/0
 25400 ;;		On exit  : 0/0
 25401 ;;		Unchanged: 0/0
 25402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25407 ;;Total ram usage:        0 bytes
 25408 ;; Hardware stack levels used:    1
 25409 ;; This function calls:
 25410 ;;		Nothing
 25411 ;; This function is called by:
 25412 ;;		_TMR2_DefaultInterruptHandler
 25413 ;; This function uses a non-reentrant model
 25414 ;;
 25415                           
 25416                           
 25417                           ;psect for function _TMR2_StopTimer
 25418  21A1                     _TMR2_StopTimer:	
 25419                           
 25420                           ;tmr2.c: 94: T2CONbits.TMR2ON = 0;
 25421                           
 25422                           ;incstack = 0
 25423                           ; Regs used in _TMR2_StopTimer: []
 25424  21A1  0020               	movlb	0	; select bank0
 25425  21A2  111F               	bcf	31,2	;volatile
 25426  21A3  0008               	return
 25427  21A4                     __end_of_TMR2_StopTimer:	
 25428                           
 25429                           	psect	text156
 25430  2359                     __ptext156:	
 25431 ;; *************** function _TMR0_ISR *****************
 25432 ;; Defined at:
 25433 ;;		line 119 in file "mcc_generated_files/tmr0.c"
 25434 ;; Parameters:    Size  Location     Type
 25435 ;;		None
 25436 ;; Auto vars:     Size  Location     Type
 25437 ;;		None
 25438 ;; Return value:  Size  Location     Type
 25439 ;;                  1    wreg      void 
 25440 ;; Registers used:
 25441 ;;		wreg, status,2, status,0, pclath, cstack
 25442 ;; Tracked objects:
 25443 ;;		On entry : 0/0
 25444 ;;		On exit  : 0/0
 25445 ;;		Unchanged: 0/0
 25446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25451 ;;Total ram usage:        0 bytes
 25452 ;; Hardware stack levels used:    1
 25453 ;; Hardware stack levels required when called:    4
 25454 ;; This function calls:
 25455 ;;		Absolute function
 25456 ;;		_TMR0_DefaultInterruptHandler
 25457 ;; This function is called by:
 25458 ;;		_INTERRUPT_InterruptManager
 25459 ;; This function uses a non-reentrant model
 25460 ;;
 25461                           
 25462                           
 25463                           ;psect for function _TMR0_ISR
 25464  2359                     _TMR0_ISR:	
 25465                           
 25466                           ;tmr0.c: 122: PIR0bits.TMR0IF = 0;
 25467                           
 25468                           ;incstack = 0
 25469 ;; hardware stack exceeded
 25470                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 25471  2359  0020               	movlb	0	; select bank0
 25472  235A  1290               	bcf	16,5	;volatile
 25473                           
 25474                           ;tmr0.c: 123: if(TMR0_InterruptHandler)
 25475  235B  0022               	movlb	2	; select bank2
 25476  235C  086C               	movf	_TMR0_InterruptHandler^(0+256),w
 25477  235D  046D               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 25478  235E  1903               	btfsc	3,2
 25479  235F  0008               	return
 25480                           
 25481                           ;tmr0.c: 124: {
 25482                           ;tmr0.c: 125: TMR0_InterruptHandler();
 25483  2360  086D               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 25484  2361  008A               	movwf	10
 25485  2362  086C               	movf	_TMR0_InterruptHandler^(0+256),w
 25486  2363  000A               	callw
 25487  2364  31A3               	pagesel	$
 25488  2365  0008               	return
 25489  2366                     __end_of_TMR0_ISR:	
 25490                           
 25491                           	psect	text157
 25492  1898                     __ptext157:	
 25493 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 25494 ;; Defined at:
 25495 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 25496 ;; Parameters:    Size  Location     Type
 25497 ;;		None
 25498 ;; Auto vars:     Size  Location     Type
 25499 ;;		None
 25500 ;; Return value:  Size  Location     Type
 25501 ;;                  1    wreg      void 
 25502 ;; Registers used:
 25503 ;;		wreg, status,2, status,0, pclath, cstack
 25504 ;; Tracked objects:
 25505 ;;		On entry : 0/0
 25506 ;;		On exit  : 0/0
 25507 ;;		Unchanged: 0/0
 25508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25513 ;;Total ram usage:        0 bytes
 25514 ;; Hardware stack levels used:    1
 25515 ;; Hardware stack levels required when called:    3
 25516 ;; This function calls:
 25517 ;;		_TMR0_StopTimer
 25518 ;;		_TMR0_Write8bitTimer
 25519 ;;		i1_LEDsOn
 25520 ;; This function is called by:
 25521 ;;		_TMR0_Initialize
 25522 ;;		_TMR0_ISR
 25523 ;; This function uses a non-reentrant model
 25524 ;;
 25525                           
 25526                           
 25527                           ;psect for function _TMR0_DefaultInterruptHandler
 25528  1898                     _TMR0_DefaultInterruptHandler:	
 25529                           
 25530                           ;tmr0.c: 141: LEDsOn(second_top, 1);
 25531                           
 25532                           ;incstack = 0
 25533 ;; hardware stack exceeded
 25534                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 25535  1898  0022               	movlb	2	; select bank2
 25536  1899  0861               	movf	(_second_top+3)^(0+256),w
 25537  189A  0020               	movlb	0	; select bank0
 25538  189B  00AA               	movwf	i1LEDsOn@LEDpins+3
 25539  189C  0022               	movlb	2	; select bank2
 25540  189D  0860               	movf	(_second_top+2)^(0+256),w
 25541  189E  0020               	movlb	0	; select bank0
 25542  189F  00A9               	movwf	i1LEDsOn@LEDpins+2
 25543  18A0  0022               	movlb	2	; select bank2
 25544  18A1  085F               	movf	(_second_top+1)^(0+256),w
 25545  18A2  0020               	movlb	0	; select bank0
 25546  18A3  00A8               	movwf	i1LEDsOn@LEDpins+1
 25547  18A4  0022               	movlb	2	; select bank2
 25548  18A5  085E               	movf	_second_top^(0+256),w
 25549  18A6  0020               	movlb	0	; select bank0
 25550  18A7  00A7               	movwf	i1LEDsOn@LEDpins
 25551  18A8  3001               	movlw	1
 25552  18A9  00AB               	movwf	i1LEDsOn@topOrBottom
 25553  18AA  3000               	movlw	0
 25554  18AB  00AC               	movwf	i1LEDsOn@topOrBottom+1
 25555  18AC  31A5  258C  3198   	fcall	i1_LEDsOn
 25556                           
 25557                           ;tmr0.c: 142: LEDsOn(second_bottom,2);
 25558  18AF  0022               	movlb	2	; select bank2
 25559  18B0  0855               	movf	(_second_bottom+3)^(0+256),w
 25560  18B1  0020               	movlb	0	; select bank0
 25561  18B2  00AA               	movwf	i1LEDsOn@LEDpins+3
 25562  18B3  0022               	movlb	2	; select bank2
 25563  18B4  0854               	movf	(_second_bottom+2)^(0+256),w
 25564  18B5  0020               	movlb	0	; select bank0
 25565  18B6  00A9               	movwf	i1LEDsOn@LEDpins+2
 25566  18B7  0022               	movlb	2	; select bank2
 25567  18B8  0853               	movf	(_second_bottom+1)^(0+256),w
 25568  18B9  0020               	movlb	0	; select bank0
 25569  18BA  00A8               	movwf	i1LEDsOn@LEDpins+1
 25570  18BB  0022               	movlb	2	; select bank2
 25571  18BC  0852               	movf	_second_bottom^(0+256),w
 25572  18BD  0020               	movlb	0	; select bank0
 25573  18BE  00A7               	movwf	i1LEDsOn@LEDpins
 25574  18BF  3002               	movlw	2
 25575  18C0  00AB               	movwf	i1LEDsOn@topOrBottom
 25576  18C1  3000               	movlw	0
 25577  18C2  00AC               	movwf	i1LEDsOn@topOrBottom+1
 25578  18C3  31A5  258C  3198   	fcall	i1_LEDsOn
 25579                           
 25580                           ;tmr0.c: 144: do { LATCbits.LATC1 = 0; } while(0);
 25581  18C6  0022               	movlb	2	; select bank2
 25582  18C7  108E               	bcf	14,1	;volatile
 25583                           
 25584                           ;tmr0.c: 145: TMR0_StopTimer();
 25585  18C8  31A1  219E  3198   	fcall	_TMR0_StopTimer
 25586                           
 25587                           ;tmr0.c: 146: TMR0_Write8bitTimer(0);
 25588  18CB  3000               	movlw	0
 25589  18CC  31A2  220B         	fcall	_TMR0_Write8bitTimer
 25590  18CE  0008               	return
 25591  18CF                     __end_of_TMR0_DefaultInterruptHandler:	
 25592                           
 25593                           	psect	text158
 25594  258C                     __ptext158:	
 25595 ;; *************** function i1_LEDsOn *****************
 25596 ;; Defined at:
 25597 ;;		line 6 in file "LEDcomm.c"
 25598 ;; Parameters:    Size  Location     Type
 25599 ;;  LEDpins         4    7[BANK0 ] unsigned long 
 25600 ;;  topOrBottom     2   11[BANK0 ] int 
 25601 ;; Auto vars:     Size  Location     Type
 25602 ;;		None
 25603 ;; Return value:  Size  Location     Type
 25604 ;;                  1    wreg      void 
 25605 ;; Registers used:
 25606 ;;		wreg, status,2, status,0, pclath, cstack
 25607 ;; Tracked objects:
 25608 ;;		On entry : 0/0
 25609 ;;		On exit  : 0/0
 25610 ;;		Unchanged: 0/0
 25611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25612 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25614 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25615 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25616 ;;Total ram usage:       10 bytes
 25617 ;; Hardware stack levels used:    1
 25618 ;; Hardware stack levels required when called:    2
 25619 ;; This function calls:
 25620 ;;		i1_send_2length_2bytes_IK
 25621 ;; This function is called by:
 25622 ;;		_TMR0_DefaultInterruptHandler
 25623 ;; This function uses a non-reentrant model
 25624 ;;
 25625                           
 25626                           
 25627                           ;psect for function i1_LEDsOn
 25628  258C                     i1_LEDsOn:	
 25629                           
 25630                           ;LEDcomm.c: 7: send_2length_2bytes_IK((unsigned int)((LEDpins>>16) & 0xFFFF),(unsigned i
      +                          nt)LEDpins, 1, topOrBottom);
 25631                           
 25632                           ;incstack = 0
 25633 ;; hardware stack exceeded
 25634                           ; Regs used in i1_LEDsOn: [wreg+status,2+status,0+pclath+cstack]
 25635  258C  0020               	movlb	0	; select bank0
 25636  258D  0827               	movf	i1LEDsOn@LEDpins,w
 25637  258E  00AD               	movwf	??i1_LEDsOn
 25638  258F  0828               	movf	i1LEDsOn@LEDpins+1,w
 25639  2590  00AE               	movwf	??i1_LEDsOn+1
 25640  2591  0829               	movf	i1LEDsOn@LEDpins+2,w
 25641  2592  00AF               	movwf	??i1_LEDsOn+2
 25642  2593  082A               	movf	i1LEDsOn@LEDpins+3,w
 25643  2594  00B0               	movwf	??i1_LEDsOn+3
 25644  2595  3010               	movlw	16
 25645  2596                     u522_25:	
 25646  2596  36B0               	lsrf	??i1_LEDsOn+3,f
 25647  2597  0CAF               	rrf	??i1_LEDsOn+2,f
 25648  2598  0CAE               	rrf	??i1_LEDsOn+1,f
 25649  2599  0CAD               	rrf	??i1_LEDsOn,f
 25650  259A  0B89               	decfsz	9,f
 25651  259B  2D96               	goto	u522_25
 25652  259C  082E               	movf	??i1_LEDsOn+1,w
 25653  259D  00A1               	movwf	i1send_2length_2bytes_IK@data1+1
 25654  259E  082D               	movf	??i1_LEDsOn,w
 25655  259F  00A0               	movwf	i1send_2length_2bytes_IK@data1
 25656  25A0  0828               	movf	i1LEDsOn@LEDpins+1,w
 25657  25A1  00A3               	movwf	i1send_2length_2bytes_IK@data2+1
 25658  25A2  0827               	movf	i1LEDsOn@LEDpins,w
 25659  25A3  00A2               	movwf	i1send_2length_2bytes_IK@data2
 25660  25A4  01A4               	clrf	i1send_2length_2bytes_IK@latch_start
 25661  25A5  0AA4               	incf	i1send_2length_2bytes_IK@latch_start,f
 25662  25A6  082C               	movf	i1LEDsOn@topOrBottom+1,w
 25663  25A7  00A6               	movwf	i1send_2length_2bytes_IK@topOrBottom+1
 25664  25A8  082B               	movf	i1LEDsOn@topOrBottom,w
 25665  25A9  00A5               	movwf	i1send_2length_2bytes_IK@topOrBottom
 25666  25AA  31A3  23FE         	fcall	i1_send_2length_2bytes_IK
 25667  25AC  0008               	return
 25668  25AD                     __end_ofi1_LEDsOn:	
 25669                           
 25670                           	psect	text159
 25671  23FE                     __ptext159:	
 25672 ;; *************** function i1_send_2length_2bytes_IK *****************
 25673 ;; Defined at:
 25674 ;;		line 70 in file "LEDcomm.c"
 25675 ;; Parameters:    Size  Location     Type
 25676 ;;  data1           2    0[BANK0 ] unsigned int 
 25677 ;;  data2           2    2[BANK0 ] unsigned int 
 25678 ;;  latch_start     1    4[BANK0 ] unsigned char 
 25679 ;;  topOrBottom     2    5[BANK0 ] int 
 25680 ;; Auto vars:     Size  Location     Type
 25681 ;;		None
 25682 ;; Return value:  Size  Location     Type
 25683 ;;                  1    wreg      void 
 25684 ;; Registers used:
 25685 ;;		wreg, status,2, status,0, pclath, cstack
 25686 ;; Tracked objects:
 25687 ;;		On entry : 0/0
 25688 ;;		On exit  : 0/0
 25689 ;;		Unchanged: 0/0
 25690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25691 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25694 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25695 ;;Total ram usage:        8 bytes
 25696 ;; Hardware stack levels used:    1
 25697 ;; Hardware stack levels required when called:    1
 25698 ;; This function calls:
 25699 ;;		i1_send_2bytes_latchless_IK
 25700 ;;		i1_send_last_2bytes_IK
 25701 ;; This function is called by:
 25702 ;;		i1_LEDsOn
 25703 ;; This function uses a non-reentrant model
 25704 ;;
 25705                           
 25706                           
 25707                           ;psect for function i1_send_2length_2bytes_IK
 25708  23FE                     i1_send_2length_2bytes_IK:	
 25709                           
 25710                           ;LEDcomm.c: 71: send_2bytes_latchless_IK( data1);
 25711                           
 25712                           ;incstack = 0
 25713 ;; hardware stack exceeded
 25714                           ; Regs used in i1_send_2length_2bytes_IK: [wreg+status,2+status,0+pclath+cstack]
 25715  23FE  0020               	movlb	0	; select bank0
 25716  23FF  0821               	movf	i1send_2length_2bytes_IK@data1+1,w
 25717  2400  00F1               	movwf	i1send_2bytes_latchless_IK@data+1
 25718  2401  0820               	movf	i1send_2length_2bytes_IK@data1,w
 25719  2402  00F0               	movwf	i1send_2bytes_latchless_IK@data
 25720  2403  31A6  26CA  31A3   	fcall	i1_send_2bytes_latchless_IK
 25721                           
 25722                           ;LEDcomm.c: 72: send_last_2bytes_IK( data2, latch_start, topOrBottom);
 25723  2406  0020               	movlb	0	; select bank0
 25724  2407  0823               	movf	i1send_2length_2bytes_IK@data2+1,w
 25725  2408  00F1               	movwf	i1send_last_2bytes_IK@data+1
 25726  2409  0822               	movf	i1send_2length_2bytes_IK@data2,w
 25727  240A  00F0               	movwf	i1send_last_2bytes_IK@data
 25728  240B  0824               	movf	i1send_2length_2bytes_IK@latch_start,w
 25729  240C  00FB               	movwf	??i1_send_2length_2bytes_IK
 25730  240D  087B               	movf	??i1_send_2length_2bytes_IK,w
 25731  240E  00F2               	movwf	i1send_last_2bytes_IK@latch_start
 25732  240F  0826               	movf	i1send_2length_2bytes_IK@topOrBottom+1,w
 25733  2410  00F4               	movwf	i1send_last_2bytes_IK@topOrBottom+1
 25734  2411  0825               	movf	i1send_2length_2bytes_IK@topOrBottom,w
 25735  2412  00F3               	movwf	i1send_last_2bytes_IK@topOrBottom
 25736  2413  319A  225E         	fcall	i1_send_last_2bytes_IK
 25737  2415  0008               	return
 25738  2416                     __end_ofi1_send_2length_2bytes_IK:	
 25739                           
 25740                           	psect	text160
 25741  1A5E                     __ptext160:	
 25742 ;; *************** function i1_send_last_2bytes_IK *****************
 25743 ;; Defined at:
 25744 ;;		line 19 in file "LEDcomm.c"
 25745 ;; Parameters:    Size  Location     Type
 25746 ;;  data            2    0[COMMON] unsigned int 
 25747 ;;  latch_start     1    2[COMMON] unsigned char 
 25748 ;;  topOrBottom     2    3[COMMON] int 
 25749 ;; Auto vars:     Size  Location     Type
 25750 ;;  send_last_2b    2    9[COMMON] int 
 25751 ;; Return value:  Size  Location     Type
 25752 ;;                  1    wreg      void 
 25753 ;; Registers used:
 25754 ;;		wreg, status,2, status,0
 25755 ;; Tracked objects:
 25756 ;;		On entry : 0/0
 25757 ;;		On exit  : 0/0
 25758 ;;		Unchanged: 0/0
 25759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25760 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25762 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25763 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25764 ;;Total ram usage:       11 bytes
 25765 ;; Hardware stack levels used:    1
 25766 ;; This function calls:
 25767 ;;		Nothing
 25768 ;; This function is called by:
 25769 ;;		i1_send_2length_2bytes_IK
 25770 ;; This function uses a non-reentrant model
 25771 ;;
 25772                           
 25773                           
 25774                           ;psect for function i1_send_last_2bytes_IK
 25775  1A5E                     i1_send_last_2bytes_IK:	
 25776                           
 25777                           ;LEDcomm.c: 22: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 25778                           
 25779                           ;incstack = 0
 25780 ;; hardware stack exceeded
 25781                           ; Regs used in i1_send_last_2bytes_IK: [wreg+status,2+status,0]
 25782  1A5E  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25783  1A5F  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25784  1A60  1D03               	btfss	3,2
 25785  1A61  2A65               	goto	i1l210
 25786  1A62  0022               	movlb	2	; select bank2
 25787  1A63  120D               	bcf	13,4	;volatile
 25788  1A64  2A67               	goto	i1l5205
 25789  1A65                     i1l210:	
 25790  1A65  0022               	movlb	2	; select bank2
 25791  1A66  100E               	bcf	14,0	;volatile
 25792  1A67                     i1l5205:	
 25793                           
 25794                           ;LEDcomm.c: 24: for(int j = 15; j>=0; j--){
 25795  1A67  300F               	movlw	15
 25796  1A68  00F9               	movwf	i1send_last_2bytes_IK@j
 25797  1A69  3000               	movlw	0
 25798  1A6A  00FA               	movwf	i1send_last_2bytes_IK@j+1
 25799  1A6B  1BFA               	btfsc	i1send_last_2bytes_IK@j+1,7
 25800  1A6C  2A9E               	goto	i1l231
 25801  1A6D                     i1l214:	
 25802                           ;LEDcomm.c: 26: do { LATAbits.LATA2 = 0; } while(0);
 25803                           
 25804  1A6D  110C               	bcf	12,2	;volatile
 25805                           
 25806                           ;LEDcomm.c: 28: if (data & 1 << j){
 25807  1A6E  3001               	movlw	1
 25808  1A6F  00F5               	movwf	??i1_send_last_2bytes_IK
 25809  1A70  3000               	movlw	0
 25810  1A71  00F6               	movwf	??i1_send_last_2bytes_IK+1
 25811  1A72  0A79               	incf	i1send_last_2bytes_IK@j,w
 25812  1A73  2A76               	goto	u400_24
 25813  1A74                     u400_25:	
 25814  1A74  35F5               	lslf	??i1_send_last_2bytes_IK,f
 25815  1A75  0DF6               	rlf	??i1_send_last_2bytes_IK+1,f
 25816  1A76                     u400_24:	
 25817  1A76  0B89               	decfsz	9,f
 25818  1A77  2A74               	goto	u400_25
 25819  1A78  0870               	movf	i1send_last_2bytes_IK@data,w
 25820  1A79  0575               	andwf	??i1_send_last_2bytes_IK,w
 25821  1A7A  00F7               	movwf	??i1_send_last_2bytes_IK+2
 25822  1A7B  0871               	movf	i1send_last_2bytes_IK@data+1,w
 25823  1A7C  0576               	andwf	??i1_send_last_2bytes_IK+1,w
 25824  1A7D  00F8               	movwf	??i1_send_last_2bytes_IK+3
 25825  1A7E  0877               	movf	??i1_send_last_2bytes_IK+2,w
 25826  1A7F  0478               	iorwf	??i1_send_last_2bytes_IK+3,w
 25827  1A80  1903               	btfsc	3,2
 25828  1A81  2A84               	goto	i1l220
 25829                           
 25830                           ;LEDcomm.c: 29: do { LATCbits.LATC2 = 1; } while(0);
 25831  1A82  150E               	bsf	14,2	;volatile
 25832                           
 25833                           ;LEDcomm.c: 30: }
 25834  1A83  2A85               	goto	i1l5213
 25835  1A84                     i1l220:	
 25836                           ;LEDcomm.c: 31: else do { LATCbits.LATC2 = 0; } while(0);
 25837                           
 25838  1A84  110E               	bcf	14,2	;volatile
 25839  1A85                     i1l5213:	
 25840                           
 25841                           ;LEDcomm.c: 33: if( j == latch_start) {
 25842  1A85  0872               	movf	i1send_last_2bytes_IK@latch_start,w
 25843  1A86  00F5               	movwf	??i1_send_last_2bytes_IK
 25844  1A87  01F6               	clrf	??i1_send_last_2bytes_IK+1
 25845  1A88  087A               	movf	i1send_last_2bytes_IK@j+1,w
 25846  1A89  0676               	xorwf	??i1_send_last_2bytes_IK+1,w
 25847  1A8A  1D03               	skipz
 25848  1A8B  2A8E               	goto	u402_25
 25849  1A8C  0879               	movf	i1send_last_2bytes_IK@j,w
 25850  1A8D  0675               	xorwf	??i1_send_last_2bytes_IK,w
 25851  1A8E                     u402_25:	
 25852  1A8E  1D03               	skipz
 25853  1A8F  2A97               	goto	i1l229
 25854                           
 25855                           ;LEDcomm.c: 35: if (topOrBottom == 1){do { LATBbits.LATB4 = 1; } while(0);} else do { LA
      +                          TCbits.LATC0 = 1; } while(0);
 25856  1A90  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25857  1A91  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25858  1A92  1D03               	btfss	3,2
 25859  1A93  2A96               	goto	i1l227
 25860  1A94  160D               	bsf	13,4	;volatile
 25861  1A95  2A97               	goto	i1l229
 25862  1A96                     i1l227:	
 25863  1A96  140E               	bsf	14,0	;volatile
 25864  1A97                     i1l229:	
 25865                           ;LEDcomm.c: 37: }
 25866                           ;LEDcomm.c: 39: do { LATAbits.LATA2 = 1; } while(0);
 25867                           
 25868  1A97  150C               	bsf	12,2	;volatile
 25869  1A98  30FF               	movlw	255
 25870  1A99  07F9               	addwf	i1send_last_2bytes_IK@j,f
 25871  1A9A  30FF               	movlw	255
 25872  1A9B  3DFA               	addwfc	i1send_last_2bytes_IK@j+1,f
 25873  1A9C  1FFA               	btfss	i1send_last_2bytes_IK@j+1,7
 25874  1A9D  2A6D               	goto	i1l214
 25875  1A9E                     i1l231:	
 25876                           ;LEDcomm.c: 41: }
 25877                           ;LEDcomm.c: 43: do { LATAbits.LATA2 = 0; } while(0);
 25878                           
 25879  1A9E  110C               	bcf	12,2	;volatile
 25880                           
 25881                           ;LEDcomm.c: 44: if (topOrBottom == 1){do { LATBbits.LATB4 = 0; } while(0);} else do { LA
      +                          TCbits.LATC0 = 0; } while(0);
 25882  1A9F  0373               	decf	i1send_last_2bytes_IK@topOrBottom,w
 25883  1AA0  0474               	iorwf	i1send_last_2bytes_IK@topOrBottom+1,w
 25884  1AA1  1D03               	btfss	3,2
 25885  1AA2  2AA5               	goto	i1l237
 25886  1AA3  120D               	bcf	13,4	;volatile
 25887  1AA4  0008               	return
 25888  1AA5                     i1l237:	
 25889  1AA5  100E               	bcf	14,0	;volatile
 25890  1AA6  0008               	return
 25891  1AA7                     __end_ofi1_send_last_2bytes_IK:	
 25892                           
 25893                           	psect	text161
 25894  26CA                     __ptext161:	
 25895 ;; *************** function i1_send_2bytes_latchless_IK *****************
 25896 ;; Defined at:
 25897 ;;		line 49 in file "LEDcomm.c"
 25898 ;; Parameters:    Size  Location     Type
 25899 ;;  data            2    0[COMMON] unsigned int 
 25900 ;; Auto vars:     Size  Location     Type
 25901 ;;  send_2bytes_    2    6[COMMON] int 
 25902 ;; Return value:  Size  Location     Type
 25903 ;;                  1    wreg      void 
 25904 ;; Registers used:
 25905 ;;		wreg, status,2, status,0
 25906 ;; Tracked objects:
 25907 ;;		On entry : 0/0
 25908 ;;		On exit  : 0/0
 25909 ;;		Unchanged: 0/0
 25910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25912 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25913 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25914 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25915 ;;Total ram usage:        8 bytes
 25916 ;; Hardware stack levels used:    1
 25917 ;; This function calls:
 25918 ;;		Nothing
 25919 ;; This function is called by:
 25920 ;;		i1_send_2length_2bytes_IK
 25921 ;; This function uses a non-reentrant model
 25922 ;;
 25923                           
 25924                           
 25925                           ;psect for function i1_send_2bytes_latchless_IK
 25926  26CA                     i1_send_2bytes_latchless_IK:	
 25927                           
 25928                           ;incstack = 0
 25929 ;; hardware stack exceeded
 25930                           ; Regs used in i1_send_2bytes_latchless_IK: [wreg+status,2+status,0]
 25931                           ;LEDcomm.c: 51: do { LATBbits.LATB4 = 0; } while(0);
 25932  26CA  0022               	movlb	2	; select bank2
 25933  26CB  120D               	bcf	13,4	;volatile
 25934                           
 25935                           ;LEDcomm.c: 53: for(int j = 15; j>=0; j--){
 25936  26CC  300F               	movlw	15
 25937  26CD  00F6               	movwf	i1send_2bytes_latchless_IK@j
 25938  26CE  3000               	movlw	0
 25939  26CF  00F7               	movwf	i1send_2bytes_latchless_IK@j+1
 25940  26D0  1BF7               	btfsc	i1send_2bytes_latchless_IK@j+1,7
 25941  26D1  2EF1               	goto	i1l256
 25942  26D2                     i1l246:	
 25943                           ;LEDcomm.c: 54: do { LATAbits.LATA2 = 0; } while(0);
 25944                           
 25945  26D2  110C               	bcf	12,2	;volatile
 25946                           
 25947                           ;LEDcomm.c: 56: if (data & 1 << j){
 25948  26D3  3001               	movlw	1
 25949  26D4  00F2               	movwf	??i1_send_2bytes_latchless_IK
 25950  26D5  3000               	movlw	0
 25951  26D6  00F3               	movwf	??i1_send_2bytes_latchless_IK+1
 25952  26D7  0A76               	incf	i1send_2bytes_latchless_IK@j,w
 25953  26D8  2EDB               	goto	u407_24
 25954  26D9                     u407_25:	
 25955  26D9  35F2               	lslf	??i1_send_2bytes_latchless_IK,f
 25956  26DA  0DF3               	rlf	??i1_send_2bytes_latchless_IK+1,f
 25957  26DB                     u407_24:	
 25958  26DB  0B89               	decfsz	9,f
 25959  26DC  2ED9               	goto	u407_25
 25960  26DD  0870               	movf	i1send_2bytes_latchless_IK@data,w
 25961  26DE  0572               	andwf	??i1_send_2bytes_latchless_IK,w
 25962  26DF  00F4               	movwf	??i1_send_2bytes_latchless_IK+2
 25963  26E0  0871               	movf	i1send_2bytes_latchless_IK@data+1,w
 25964  26E1  0573               	andwf	??i1_send_2bytes_latchless_IK+1,w
 25965  26E2  00F5               	movwf	??i1_send_2bytes_latchless_IK+3
 25966  26E3  0874               	movf	??i1_send_2bytes_latchless_IK+2,w
 25967  26E4  0475               	iorwf	??i1_send_2bytes_latchless_IK+3,w
 25968  26E5  1903               	btfsc	3,2
 25969  26E6  2EE9               	goto	i1l252
 25970                           
 25971                           ;LEDcomm.c: 57: do { LATCbits.LATC2 = 1; } while(0);
 25972  26E7  150E               	bsf	14,2	;volatile
 25973                           
 25974                           ;LEDcomm.c: 58: }
 25975  26E8  2EEA               	goto	i1l254
 25976  26E9                     i1l252:	
 25977                           ;LEDcomm.c: 59: else do { LATCbits.LATC2 = 0; } while(0);
 25978                           
 25979  26E9  110E               	bcf	14,2	;volatile
 25980  26EA                     i1l254:	
 25981                           ;LEDcomm.c: 62: do { LATAbits.LATA2 = 1; } while(0);
 25982                           
 25983  26EA  150C               	bsf	12,2	;volatile
 25984  26EB  30FF               	movlw	255
 25985  26EC  07F6               	addwf	i1send_2bytes_latchless_IK@j,f
 25986  26ED  30FF               	movlw	255
 25987  26EE  3DF7               	addwfc	i1send_2bytes_latchless_IK@j+1,f
 25988  26EF  1FF7               	btfss	i1send_2bytes_latchless_IK@j+1,7
 25989  26F0  2ED2               	goto	i1l246
 25990  26F1                     i1l256:	
 25991                           ;LEDcomm.c: 64: }
 25992                           ;LEDcomm.c: 66: do { LATAbits.LATA2 = 0; } while(0);
 25993                           
 25994  26F1  110C               	bcf	12,2	;volatile
 25995  26F2  0008               	return
 25996  26F3                     __end_ofi1_send_2bytes_latchless_IK:	
 25997                           
 25998                           	psect	text162
 25999  220B                     __ptext162:	
 26000 ;; *************** function _TMR0_Write8bitTimer *****************
 26001 ;; Defined at:
 26002 ;;		line 107 in file "mcc_generated_files/tmr0.c"
 26003 ;; Parameters:    Size  Location     Type
 26004 ;;  timerVal        1    wreg     unsigned char 
 26005 ;; Auto vars:     Size  Location     Type
 26006 ;;  timerVal        1    0[COMMON] unsigned char 
 26007 ;; Return value:  Size  Location     Type
 26008 ;;                  1    wreg      void 
 26009 ;; Registers used:
 26010 ;;		wreg
 26011 ;; Tracked objects:
 26012 ;;		On entry : 0/0
 26013 ;;		On exit  : 0/0
 26014 ;;		Unchanged: 0/0
 26015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26020 ;;Total ram usage:        1 bytes
 26021 ;; Hardware stack levels used:    1
 26022 ;; This function calls:
 26023 ;;		Nothing
 26024 ;; This function is called by:
 26025 ;;		_TMR0_DefaultInterruptHandler
 26026 ;; This function uses a non-reentrant model
 26027 ;;
 26028                           
 26029                           
 26030                           ;psect for function _TMR0_Write8bitTimer
 26031  220B                     _TMR0_Write8bitTimer:	
 26032                           
 26033                           ;incstack = 0
 26034                           ; Regs used in _TMR0_Write8bitTimer: [wreg]
 26035                           ;TMR0_Write8bitTimer@timerVal stored from wreg
 26036  220B  00F0               	movwf	TMR0_Write8bitTimer@timerVal
 26037                           
 26038                           ;tmr0.c: 110: TMR0L = timerVal;
 26039  220C  0870               	movf	TMR0_Write8bitTimer@timerVal,w
 26040  220D  0020               	movlb	0	; select bank0
 26041  220E  0095               	movwf	21	;volatile
 26042  220F  0008               	return
 26043  2210                     __end_of_TMR0_Write8bitTimer:	
 26044                           
 26045                           	psect	text163
 26046  219E                     __ptext163:	
 26047 ;; *************** function _TMR0_StopTimer *****************
 26048 ;; Defined at:
 26049 ;;		line 91 in file "mcc_generated_files/tmr0.c"
 26050 ;; Parameters:    Size  Location     Type
 26051 ;;		None
 26052 ;; Auto vars:     Size  Location     Type
 26053 ;;		None
 26054 ;; Return value:  Size  Location     Type
 26055 ;;                  1    wreg      void 
 26056 ;; Registers used:
 26057 ;;		None
 26058 ;; Tracked objects:
 26059 ;;		On entry : 0/0
 26060 ;;		On exit  : 0/0
 26061 ;;		Unchanged: 0/0
 26062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26067 ;;Total ram usage:        0 bytes
 26068 ;; Hardware stack levels used:    1
 26069 ;; This function calls:
 26070 ;;		Nothing
 26071 ;; This function is called by:
 26072 ;;		_TMR0_DefaultInterruptHandler
 26073 ;; This function uses a non-reentrant model
 26074 ;;
 26075                           
 26076                           
 26077                           ;psect for function _TMR0_StopTimer
 26078  219E                     _TMR0_StopTimer:	
 26079                           
 26080                           ;tmr0.c: 94: T0CON0bits.T0EN = 0;
 26081                           
 26082                           ;incstack = 0
 26083                           ; Regs used in _TMR0_StopTimer: []
 26084  219E  0020               	movlb	0	; select bank0
 26085  219F  1397               	bcf	23,7	;volatile
 26086  21A0  0008               	return
 26087  21A1                     __end_of_TMR0_StopTimer:	
 26088                           
 26089                           	psect	text164
 26090  24D2                     __ptext164:	
 26091 ;; *************** function _EUSART_Transmit_ISR *****************
 26092 ;; Defined at:
 26093 ;;		line 161 in file "mcc_generated_files/eusart.c"
 26094 ;; Parameters:    Size  Location     Type
 26095 ;;		None
 26096 ;; Auto vars:     Size  Location     Type
 26097 ;;		None
 26098 ;; Return value:  Size  Location     Type
 26099 ;;                  1    wreg      void 
 26100 ;; Registers used:
 26101 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26102 ;; Tracked objects:
 26103 ;;		On entry : 0/0
 26104 ;;		On exit  : 0/0
 26105 ;;		Unchanged: 0/0
 26106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26110 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26111 ;;Total ram usage:        1 bytes
 26112 ;; Hardware stack levels used:    1
 26113 ;; This function calls:
 26114 ;;		Nothing
 26115 ;; This function is called by:
 26116 ;;		_INTERRUPT_InterruptManager
 26117 ;; This function uses a non-reentrant model
 26118 ;;
 26119                           
 26120                           
 26121                           ;psect for function _EUSART_Transmit_ISR
 26122  24D2                     _EUSART_Transmit_ISR:	
 26123                           
 26124                           ;eusart.c: 165: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 26125                           
 26126                           ;incstack = 0
 26127                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 26128  24D2  3008               	movlw	8
 26129  24D3  0020               	movlb	0	; select bank0
 26130  24D4  025E               	subwf	_eusartTxBufferRemaining,w	;volatile
 26131  24D5  1803               	skipnc
 26132  24D6  2CED               	goto	i1l436
 26133                           
 26134                           ;eusart.c: 166: {
 26135                           ;eusart.c: 167: TX1REG = eusartTxBuffer[eusartTxTail++];
 26136  24D7  0859               	movf	_eusartTxTail,w
 26137  24D8  3EA8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 26138  24D9  0086               	movwf	6
 26139  24DA  3001               	movlw	1	; select bank3/4
 26140  24DB  0087               	movwf	7
 26141  24DC  0801               	movf	1,w
 26142  24DD  0023               	movlb	3	; select bank3
 26143  24DE  009A               	movwf	26	;volatile
 26144  24DF  3001               	movlw	1
 26145  24E0  00F0               	movwf	??_EUSART_Transmit_ISR
 26146  24E1  0870               	movf	??_EUSART_Transmit_ISR,w
 26147  24E2  0020               	movlb	0	; select bank0
 26148  24E3  07D9               	addwf	_eusartTxTail,f	;volatile
 26149                           
 26150                           ;eusart.c: 168: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 26151  24E4  3008               	movlw	8
 26152  24E5  0259               	subwf	_eusartTxTail,w	;volatile
 26153  24E6  1803               	btfsc	3,0
 26154                           
 26155                           ;eusart.c: 169: {
 26156                           ;eusart.c: 170: eusartTxTail = 0;
 26157  24E7  01D9               	clrf	_eusartTxTail	;volatile
 26158                           
 26159                           ;eusart.c: 171: }
 26160                           ;eusart.c: 172: eusartTxBufferRemaining++;
 26161  24E8  3001               	movlw	1
 26162  24E9  00F0               	movwf	??_EUSART_Transmit_ISR
 26163  24EA  0870               	movf	??_EUSART_Transmit_ISR,w
 26164  24EB  07DE               	addwf	_eusartTxBufferRemaining,f	;volatile
 26165                           
 26166                           ;eusart.c: 173: }
 26167  24EC  0008               	return
 26168  24ED                     i1l436:	
 26169                           
 26170                           ;eusart.c: 174: else
 26171                           ;eusart.c: 175: {
 26172                           ;eusart.c: 176: PIE1bits.TXIE = 0;
 26173  24ED  0021               	movlb	1	; select bank1
 26174  24EE  1211               	bcf	17,4	;volatile
 26175  24EF  0008               	return
 26176  24F0                     __end_of_EUSART_Transmit_ISR:	
 26177                           
 26178                           	psect	text165
 26179  247D                     __ptext165:	
 26180 ;; *************** function _EUSART_Receive_ISR *****************
 26181 ;; Defined at:
 26182 ;;		line 180 in file "mcc_generated_files/eusart.c"
 26183 ;; Parameters:    Size  Location     Type
 26184 ;;		None
 26185 ;; Auto vars:     Size  Location     Type
 26186 ;;		None
 26187 ;; Return value:  Size  Location     Type
 26188 ;;                  1    wreg      void 
 26189 ;; Registers used:
 26190 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26191 ;; Tracked objects:
 26192 ;;		On entry : 0/0
 26193 ;;		On exit  : 0/0
 26194 ;;		Unchanged: 0/0
 26195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26200 ;;Total ram usage:        1 bytes
 26201 ;; Hardware stack levels used:    1
 26202 ;; This function calls:
 26203 ;;		Nothing
 26204 ;; This function is called by:
 26205 ;;		_INTERRUPT_InterruptManager
 26206 ;; This function uses a non-reentrant model
 26207 ;;
 26208                           
 26209                           
 26210                           ;psect for function _EUSART_Receive_ISR
 26211  247D                     _EUSART_Receive_ISR:	
 26212                           
 26213                           ;eusart.c: 183: if(1 == RC1STAbits.OERR)
 26214                           
 26215                           ;incstack = 0
 26216                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 26217  247D  0023               	movlb	3	; select bank3
 26218  247E  1C9D               	btfss	29,1	;volatile
 26219  247F  2C82               	goto	i1l6495
 26220                           
 26221                           ;eusart.c: 184: {
 26222                           ;eusart.c: 187: RC1STAbits.CREN = 0;
 26223  2480  121D               	bcf	29,4	;volatile
 26224                           
 26225                           ;eusart.c: 188: RC1STAbits.CREN = 1;
 26226  2481  161D               	bsf	29,4	;volatile
 26227  2482                     i1l6495:	
 26228                           
 26229                           ;eusart.c: 189: }
 26230                           ;eusart.c: 192: eusartRxBuffer[eusartRxHead++] = RC1REG;
 26231  2482  0819               	movf	25,w	;volatile
 26232  2483  00F0               	movwf	??_EUSART_Receive_ISR
 26233  2484  0020               	movlb	0	; select bank0
 26234  2485  0858               	movf	_eusartRxHead,w
 26235  2486  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 26236  2487  0086               	movwf	6
 26237  2488  3001               	movlw	1	; select bank3/4
 26238  2489  0087               	movwf	7
 26239  248A  0870               	movf	??_EUSART_Receive_ISR,w
 26240  248B  0081               	movwf	1
 26241  248C  3001               	movlw	1
 26242  248D  00F0               	movwf	??_EUSART_Receive_ISR
 26243  248E  0870               	movf	??_EUSART_Receive_ISR,w
 26244  248F  07D8               	addwf	_eusartRxHead,f	;volatile
 26245                           
 26246                           ;eusart.c: 193: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 26247  2490  3008               	movlw	8
 26248  2491  0258               	subwf	_eusartRxHead,w	;volatile
 26249  2492  1803               	btfsc	3,0
 26250                           
 26251                           ;eusart.c: 194: {
 26252                           ;eusart.c: 195: eusartRxHead = 0;
 26253  2493  01D8               	clrf	_eusartRxHead	;volatile
 26254                           
 26255                           ;eusart.c: 196: }
 26256                           ;eusart.c: 197: eusartRxCount++;
 26257  2494  3001               	movlw	1
 26258  2495  00F0               	movwf	??_EUSART_Receive_ISR
 26259  2496  0870               	movf	??_EUSART_Receive_ISR,w
 26260  2497  07D6               	addwf	_eusartRxCount,f	;volatile
 26261  2498  0008               	return
 26262  2499                     __end_of_EUSART_Receive_ISR:	
 26263  007E                     btemp	set	126	;btemp
 26264  007E                     int$flags	set	126
 26265  007E                     wtemp0	set	126


Data Sizes:
    Strings     540
    Constant    1048
    Data        44
    BSS         162
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     46      63
    BANK1            80     57      79
    BANK2            80      0      80
    BANK3            80      0      59
    BANK4            80     28      60
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           16      0       0
    BANK25            0      0       0

Pointer List with Targets:

    i2c_ISR$2758	PTR const FTN()enum E8364 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    returnStop@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S931$11$0	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_80(CODE[5]), STR_79(CODE[5]), STR_78(CODE[7]), STR_77(CODE[8]), 
		 -> STR_76(CODE[5]), STR_75(CODE[5]), STR_74(CODE[11]), STR_73(CODE[13]), 
		 -> STR_72(CODE[7]), STR_71(CODE[8]), STR_70(CODE[15]), STR_69(CODE[14]), 
		 -> STR_68(CODE[12]), STR_67(CODE[8]), STR_66(CODE[8]), STR_65(CODE[2]), 
		 -> STR_64(CODE[5]), STR_63(CODE[5]), STR_62(CODE[2]), STR_61(CODE[4]), 
		 -> STR_60(CODE[4]), STR_59(CODE[4]), 

    stricmp@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_82(CODE[23]), STR_81(CODE[3]), STR_56(CODE[17]), STR_55(CODE[17]), 
		 -> STR_54(CODE[18]), STR_53(CODE[18]), STR_52(CODE[17]), STR_51(CODE[28]), 
		 -> STR_50(CODE[9]), STR_49(CODE[9]), STR_48(CODE[25]), STR_47(CODE[11]), 
		 -> STR_46(CODE[8]), STR_45(CODE[8]), STR_44(CODE[8]), STR_43(CODE[31]), 
		 -> STR_42(CODE[11]), STR_41(CODE[8]), STR_40(CODE[8]), STR_39(CODE[8]), 
		 -> STR_38(CODE[26]), STR_37(CODE[30]), STR_36(CODE[2]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[4]), STR_31(CODE[2]), 
		 -> STR_30(CODE[4]), STR_29(CODE[3]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[4]), 
		 -> STR_14(CODE[3]), STR_13(CODE[16]), STR_12(CODE[11]), STR_11(CODE[16]), 
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[8]), 
		 -> STR_6(CODE[13]), STR_5(CODE[15]), STR_4(CODE[16]), STR_3(CODE[2]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    execCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    parseCmd@s	PTR struct CMD_STRUCT size(1) Largest target is 21
		 -> cmd_struct(BANK3[21]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    parseCmd@cmdString	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), 

    parseCmd@p	PTR unsigned char  size(1) Largest target is 20
		 -> readdata(BANK3[20]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E8364[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    S931$callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S931$callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E8198[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S931$data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 244
		 -> drv_read@reg(BANK0[1]), drv_read@buff(BANK0[1]), drv2665@drv_fifo_sine(CODE[244]), drv_write@buff(BANK0[2]), 

    i2c1_driver_setI2cISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_i2c_ISR->i1_do_I2C_TX
    i1_do_I2C_TX->i1_i2c1_driver_TXData
    i1_do_I2C_TX->i1_i2c1_driver_isNACK
    i1_do_I2C_TX->i1_returnReset
    i1_do_I2C_TX->i1_returnStop
    i1_do_I2C_SEND_ADR_WRITE->i1_i2c1_driver_TXData
    i1_do_I2C_SEND_ADR_READ->i1_i2c1_driver_TXData
    _TMR2_DefaultInterruptHandler->_TMR2_WriteTimer
    i1_LEDsOn->i1_send_2length_2bytes_IK
    i1_send_2length_2bytes_IK->i1_send_last_2bytes_IK

Critical Paths under _main in BANK0

    _parseCmd->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _stricmp->_toupper
    _atoi->___wmul
    _main_initialize->_LEDsPwr
    _drv_init->_drv_write
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _drv_reset->_drv_write
    _timedActiveHeatOn->_LEDsOn
    _setLEDPwr->_LEDsPwr
    _LEDsPwr->_send_2length_2bytes_IK
    _setLEDBrightnessRange->_LED_setBrightnessRange
    _setHeaterToggle->_LEDsOn
    _setHeaterPreTime->___ftadd
    _setHeaterPostTime->___ftadd
    _setDrvPiezoOnTime->___ftadd
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _setDrvGain->_drv_write
    _commCheck->_LED_testComm
    _LED_test_openshort->_LEDsOn
    _LED_testComm->_LED_setBrightnessRange
    _LED_setBrightnessRange->_send_2length_2bytes_IK
    _doMove->_LEDsOn
    _drv_write_DC->_drv_write
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _printf->___llmod
    _putch->_EUSART_Write
    ___llmod->___lldiv
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _LEDsOn->_send_2length_2bytes_IK
    _send_2length_2bytes_IK->_send_last_2bytes_IK
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_DefaultInterruptHandler->i1_LEDsOn
    i1_LEDsOn->i1_send_2length_2bytes_IK

Critical Paths under _main in BANK1

    _main->_doRelMove
    _main_initialize->___fttol
    _drv_init->_drv_reset
    _execCmd->_commCheck
    _zeroPosition->_printf
    _timedActiveHeatOn->_printf
    _startRelMove->_printf
    _startAbsMove->_printf
    _setMoveMask->_printf
    _setLEDPwr->_printf
    _setLEDBrightnessRange->_printf
    _setHeaterToggle->_printf
    _setHeaterPreTime->___fttol
    _setHeaterPostTime->___fttol
    _setDrvPiezoOnTime->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul
    _setDrvPeak->_printf
    _setDrvGain->_printf
    _setActive->_printf
    _getPosition->_printf
    _getMoveMask->_printf
    _getMotionStatus->_printf
    _getActive->_printf
    _commCheck->_LED_testComm
    _LED_test_openshort->_printf
    _LED_testComm->_LED_readConfig
    _LED_readConfig->_LED_getData
    _LED_getData->_printf
    _doRelMove->_doMove
    _doAbsMove->_doMove
    _doMove->_drv_write_DC
    _drv_write_DC->_fifo_check
    _fifo_check->_drv_read
    _drv_read->_printf
    _drv_write->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_doAbsMove

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  405466
                                             56 BANK1      1     1      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                          _doAbsMove
                          _doRelMove
                            _execCmd
                    _main_initialize
                           _parseCmd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _parseCmd                                             6     5      1    6900
                                             37 BANK0      6     5      1
                               _atoi
                            _stricmp
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               6     4      2    1446
                                             31 BANK0      6     4      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              7     5      2     529
                                             24 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               7     3      4     344
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _stricmp                                              6     4      2    2226
                                             19 BANK0      6     4      2
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    1920
                                             23 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1564
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _main_initialize                                      2     2      0   50293
                                             29 BANK1      2     2      0
             _LED_setBrightnessRange
                            _LEDsPwr
                _TMR0_Load8bitPeriod
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                           _drv_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drv_init                                             5     1      4   24507
                                             22 BANK1      5     1      4
                          _drv_reset
                          _drv_write
                           _i2c_open
                     _i2c_setAddress
                             _printf
 ---------------------------------------------------------------------------------
 (3) _i2c_setAddress                                       2     2      0      22
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _i2c_open                                             3     3      0     216
                                             19 BANK0      3     3      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setI2cISR                                2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_setBusCollisionISR                       2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _drv_reset                                            1     1      0    8970
                                             21 BANK1      1     1      0
                          _drv_write
 ---------------------------------------------------------------------------------
 (1) _execCmd                                              1     1      0  259316
                                             53 BANK1      1     1      0
                          _commCheck
                             _doMove
                          _getActive
                    _getMotionStatus
                        _getMoveMask
                        _getPosition
                             _printf
                          _setActive
                         _setDrvGain
                         _setDrvPeak
                  _setDrvPiezoOnTime
                  _setHeaterPostTime
                   _setHeaterPreTime
                    _setHeaterToggle
              _setLEDBrightnessRange
                          _setLEDPwr
                        _setMoveMask
                       _startAbsMove
                       _startRelMove
                  _timedActiveHeatOn
                       _zeroPosition
 ---------------------------------------------------------------------------------
 (2) _zeroPosition                                        12    10      2    6243
                                             41 BANK0      2     2      0
                                             21 BANK1     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _timedActiveHeatOn                                   13     7      6   10893
                                             21 BANK1     13     7      6
                             _LEDsOn
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startRelMove                                         2     0      2    6221
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _startAbsMove                                         3     1      2    6221
                                             41 BANK0      1     1      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setMoveMask                                          8     4      4    6391
                                             41 BANK0      4     4      0
                                             21 BANK1      4     0      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setLEDPwr                                            4     0      4    9401
                                             21 BANK1      4     0      4
                            _LEDsPwr
                             _printf
 ---------------------------------------------------------------------------------
 (2) _LEDsPwr                                             14    10      4    3072
                                             36 BANK0     10     6      4
                                              0 BANK1      4     4      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (2) _setLEDBrightnessRange                                4     0      4    9805
                                             21 BANK1      4     0      4
             _LED_setBrightnessRange
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterToggle                                      8     4      4   10887
                                             21 BANK1      8     4      4
                             _LEDsOn
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPreTime                                     4     2      2   19324
                                             29 BANK1      4     2      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setHeaterPostTime                                    2     0      2   19324
                                             29 BANK1      2     0      2
            _TMR2_LoadPeriodRegister
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TMR2_LoadPeriodRegister                              1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPiezoOnTime                                    4     2      2   19324
                                             29 BANK1      4     2      2
                _TMR0_Load8bitPeriod
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     687
                                             15 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    4540
                                             31 BANK0     10     4      6
                                              0 BANK1      6     6      0
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4855
                                             41 BANK0      4     4      0
                                              6 BANK1      9     3      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2999
                                             25 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2404
                                             17 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _TMR0_Load8bitPeriod                                  1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setDrvPeak                                           2     0      2    6221
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setDrvGain                                           5     3      2   15237
                                             21 BANK1      5     3      2
                          _drv_write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _setActive                                           12     8      4    6391
                                             21 BANK1     12     8      4
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getPosition                                          6     4      2    6283
                                             41 BANK0      4     4      0
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMoveMask                                          8     6      2    6212
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getMotionStatus                                      2     0      2    6113
                                             21 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getActive                                            8     6      2    6212
                                             41 BANK0      4     4      0
                                             21 BANK1      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _commCheck                                            3     1      2   41026
                                             50 BANK1      3     1      2
                       _LED_testComm
                 _LED_test_openshort
                           _drv_read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _LED_test_openshort                                   7     3      4   13928
                                             21 BANK1      7     3      4
                             _LEDsOn
                             _printf
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _LED_testComm                                        10     8      2   12804
                                             44 BANK0      2     2      0
                                             42 BANK1      8     6      2
                     _LED_readConfig
             _LED_setBrightnessRange
 ---------------------------------------------------------------------------------
 (2) _LED_setBrightnessRange                              25    21      4    3476
                                             36 BANK0      8     4      4
                                              0 BANK1     17    17      0
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _LED_readConfig                                       5     1      4    8979
                                             41 BANK0      1     1      0
                                             38 BANK1      4     0      4
                        _LED_getData
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (5) _LED_getData                                         17    13      4    6453
                                             21 BANK1     17    13      4
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doRelMove                                           18    18      0   41163
                                             38 BANK1     18    18      0
                             _doMove
                             _printf
 ---------------------------------------------------------------------------------
 (1) _doAbsMove                                           36    36      0   41485
                                             38 BANK1      8     8      0
                                              0 BANK4     28    28      0
                             _doMove
                             _printf
 ---------------------------------------------------------------------------------
 (2) _doMove                                               7     5      2   34790
                                             31 BANK1      7     5      2
                             _LEDsOn
                    _TMR0_StartTimer
                    _TMR2_StartTimer
                     _calcHeaterPins
                       _drv_write_DC
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drv_write_DC                                         7     3      4   24107
                                             24 BANK1      7     3      4
                            ___awdiv
                          _drv_write
                         _fifo_check
                             _printf
 ---------------------------------------------------------------------------------
 (4) _fifo_check                                           2     2      0    8215
                                             45 BANK0      1     1      0
                                             23 BANK1      1     1      0
                           _drv_read
 ---------------------------------------------------------------------------------
 (5) _drv_read                                             6     4      2    8181
                                             41 BANK0      4     4      0
                                             21 BANK1      2     0      2
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drv_write                                            5     4      1    8970
                                             41 BANK0      5     4      1
                _i2c_masterOperation
                      _i2c_setBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              29    23      6    6113
                                              0 BANK1     21    15      6
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                             19 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                             31 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     395
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) _i2c_setBuffer                                        4     0      4     832
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _i2c_masterOperation                                  3     3      0    1104
                                             23 BANK0      3     3      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (5) _mssp1_IRQisEnabled                                   2     2      0       0
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _i2c_poller                                           0     0      0    1036
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (6) _mssp1_waitForEvent                                   1     1      0      42
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              1     1      0     994
                                             22 BANK0      1     1      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (4) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                       _mssp1_setIRQ
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            4     4      0     284
                                             18 BANK0      4     4      0
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            1     1      0     216
                                             17 BANK0      1     1      0
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               1     1      0     216
                                             17 BANK0      1     1      0
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                        _returnReset *
                         _returnStop *
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1     216
                                             17 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     556
                                             17 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _calcHeaterPins                                       4     4      0       0
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LEDsOn                                              10     4      6    4496
                                             36 BANK0     10     4      6
             _send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (3) _send_2length_2bytes_IK                               8     1      7    2387
                                             28 BANK0      8     1      7
           _send_2bytes_latchless_IK
                _send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (4) _send_last_2bytes_IK                                 11     6      5     516
                                             17 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (4) _send_2bytes_latchless_IK                             8     6      2     207
                                             17 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      86
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          1     1      0    1490
                                             12 COMMON     1     1      0
                   Absolute function *
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
                           _TMR2_ISR
                _i2c_busCollisionISR *
                          i1_i2c_ISR *
 ---------------------------------------------------------------------------------
 (13) i1_i2c_ISR                                           1     1      0     690
                                              5 COMMON     1     1      0
                    i1_do_I2C_DO_ACK *
           i1_do_I2C_DO_ADDRESS_NACK *
           i1_do_I2C_DO_NACK_RESTART *
              i1_do_I2C_DO_NACK_STOP *
                      i1_do_I2C_IDLE *
                      i1_do_I2C_RCEN *
                     i1_do_I2C_RESET *
                        i1_do_I2C_RX *
             i1_do_I2C_SEND_ADR_READ *
            i1_do_I2C_SEND_ADR_WRITE *
              i1_do_I2C_SEND_RESTART *
         i1_do_I2C_SEND_RESTART_READ *
        i1_do_I2C_SEND_RESTART_WRITE *
                 i1_do_I2C_SEND_STOP *
                        i1_do_I2C_TX *
                  i1_do_I2C_TX_EMPTY *
               i1_i2c1_driver_isNACK
                   i1_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (14) i1_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX_EMPTY                                   1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                     i1_mssp1_setIRQ
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_TX                                         4     4      0     208
                                              1 COMMON     4     4      0
         i1_do_I2C_SEND_RESTART_READ
        i1_do_I2C_SEND_RESTART_WRITE
                 i1_do_I2C_SEND_STOP
               i1_i2c1_driver_TXData
               i1_i2c1_driver_isNACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (14) i1_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_WRITE                             0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_SEND_ADR_READ                              0     0      0      31
               i1_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_TXData                                1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RX                                         1     1      0     140
                                              0 COMMON     1     1      0
           i1_do_I2C_DO_NACK_RESTART
              i1_do_I2C_DO_NACK_STOP
            i1_i2c1_driver_getRXData
              i1_i2c1_driver_sendACK
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_STOP                               0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i1_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RESET                                      0     0      0       0
             i1_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_RCEN                                       0     0      0       0
              i1_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ADDRESS_NACK                            1     1      0     140
                                              0 COMMON     1     1      0
              i1_do_I2C_SEND_RESTART
                 i1_do_I2C_SEND_STOP
                      i1_returnReset *
                       i1_returnStop *
 ---------------------------------------------------------------------------------
 (15) i1_returnStop                                        1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_returnReset                                       1     0      1     140
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_STOP                                  0     0      0       0
                 i1_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_do_I2C_SEND_RESTART                               0     0      0       0
              i1_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (16) i1_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_do_I2C_DO_ACK                                     0     0      0       0
              i1_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (15) i1_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (14) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0      22
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultInterruptHandler                        0     0      0      22
                     _TMR2_StopTimer
                    _TMR2_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR2_WriteTimer                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR2_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0     778
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultInterruptHandler                        0     0      0     778
                     _TMR0_StopTimer
                _TMR0_Write8bitTimer
                           i1_LEDsOn
 ---------------------------------------------------------------------------------
 (15) i1_LEDsOn                                           10     4      6     756
                                              7 BANK0     10     4      6
           i1_send_2length_2bytes_IK
 ---------------------------------------------------------------------------------
 (16) i1_send_2length_2bytes_IK                            8     1      7     586
                                             11 COMMON     1     1      0
                                              0 BANK0      7     0      7
         i1_send_2bytes_latchless_IK
              i1_send_last_2bytes_IK
 ---------------------------------------------------------------------------------
 (17) i1_send_last_2bytes_IK                              11     6      5     278
                                              0 COMMON    11     6      5
 ---------------------------------------------------------------------------------
 (17) i1_send_2bytes_latchless_IK                          8     6      2     116
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (15) _TMR0_Write8bitTimer                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _doAbsMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _doRelMove
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _execCmd
     _commCheck
       _LED_testComm
         _LED_readConfig
           _LED_getData
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _LED_setBrightnessRange
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
       _LED_test_openshort
         _LEDsOn
           _send_2length_2bytes_IK
             _send_2bytes_latchless_IK
             _send_last_2bytes_IK
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _drv_read
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _doMove
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _TMR0_StartTimer
       _TMR2_StartTimer
       _calcHeaterPins
       _drv_write_DC
         ___awdiv
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
         _fifo_check
           _drv_read
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _returnReset *
                     _returnStop *
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     _do_I2C_DO_NACK_RESTART
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData
                     _i2c1_driver_sendACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     _do_I2C_SEND_RESTART_READ
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _i2c1_driver_TXData
                     _i2c1_driver_isNACK
                     _returnReset *
                     _returnStop *
                   _do_I2C_TX_EMPTY *
                     _do_I2C_SEND_RESTART
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP
                       _i2c1_driver_stop
                     _mssp1_setIRQ
                     _returnReset *
                     _returnStop *
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
             _i2c_setBuffer
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               _putch
                 _EUSART_Write
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMotionStatus
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _getPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
     _setActive
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvGain
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPeak
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setDrvPiezoOnTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPostTime
       _TMR2_LoadPeriodRegister
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterPreTime
       _TMR0_Load8bitPeriod
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setHeaterToggle
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDBrightnessRange
       _LED_setBrightnessRange
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setLEDPwr
       _LEDsPwr
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _setMoveMask
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startAbsMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _startRelMove
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _timedActiveHeatOn
       _LEDsOn
         _send_2length_2bytes_IK
           _send_2bytes_latchless_IK
           _send_last_2bytes_IK
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _zeroPosition
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
   _main_initialize
     _LED_setBrightnessRange
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _LEDsPwr
       _send_2length_2bytes_IK
         _send_2bytes_latchless_IK
         _send_last_2bytes_IK
     _TMR0_Load8bitPeriod
     _TMR2_LoadPeriodRegister
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _drv_init
       _drv_reset
         _drv_write
           _i2c_masterOperation
             _i2c1_driver_start
             _i2c_poller
               _i2c_ISR
                 _do_I2C_DO_ACK *
                   _i2c1_driver_sendACK
                 _do_I2C_DO_ADDRESS_NACK *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _returnReset *
                   _returnStop *
                 _do_I2C_DO_NACK_RESTART *
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP *
                   _i2c1_driver_sendNACK
                 _do_I2C_IDLE *
                 _do_I2C_RCEN *
                   _i2c1_driver_startRX
                 _do_I2C_RESET *
                   _i2c1_driver_resetBus
                 _do_I2C_RX *
                   _do_I2C_DO_NACK_RESTART
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP
                     _i2c1_driver_sendNACK
                   _i2c1_driver_getRXData
                   _i2c1_driver_sendACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_SEND_ADR_READ *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_ADR_WRITE *
                   _i2c1_driver_TXData
                 _do_I2C_SEND_RESTART *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_READ *
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE *
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP *
                   _i2c1_driver_stop
                 _do_I2C_TX *
                   _do_I2C_SEND_RESTART_READ
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _i2c1_driver_TXData
                   _i2c1_driver_isNACK
                   _returnReset *
                   _returnStop *
                 _do_I2C_TX_EMPTY *
                   _do_I2C_SEND_RESTART
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP
                     _i2c1_driver_stop
                   _mssp1_setIRQ
                   _returnReset *
                   _returnStop *
                 _i2c1_driver_isNACK *
                 _mssp1_clearIRQ *
               _mssp1_waitForEvent
             _mssp1_IRQisEnabled
           _i2c_setBuffer
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             _putch
               _EUSART_Write
       _drv_write
         _i2c_masterOperation
           _i2c1_driver_start
           _i2c_poller
             _i2c_ISR
               _do_I2C_DO_ACK *
                 _i2c1_driver_sendACK
               _do_I2C_DO_ADDRESS_NACK *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _returnReset *
                 _returnStop *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _do_I2C_IDLE *
               _do_I2C_RCEN *
                 _i2c1_driver_startRX
               _do_I2C_RESET *
                 _i2c1_driver_resetBus
               _do_I2C_RX *
                 _do_I2C_DO_NACK_RESTART
                   _i2c1_driver_sendNACK
                 _do_I2C_DO_NACK_STOP
                   _i2c1_driver_sendNACK
                 _i2c1_driver_getRXData
                 _i2c1_driver_sendACK
                 _returnReset *
                 _returnStop *
               _do_I2C_SEND_ADR_READ *
                 _i2c1_driver_TXData
               _do_I2C_SEND_ADR_WRITE *
                 _i2c1_driver_TXData
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _do_I2C_TX *
                 _do_I2C_SEND_RESTART_READ
                   _i2c1_driver_restart
                 _do_I2C_SEND_RESTART_WRITE
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                 _returnReset *
                 _returnStop *
               _do_I2C_TX_EMPTY *
                 _do_I2C_SEND_RESTART
                   _i2c1_driver_restart
                 _do_I2C_SEND_STOP
                   _i2c1_driver_stop
                 _mssp1_setIRQ
                 _returnReset *
                 _returnStop *
               _i2c1_driver_isNACK *
               _mssp1_clearIRQ *
             _mssp1_waitForEvent
           _mssp1_IRQisEnabled
         _i2c_setBuffer
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _putch
             _EUSART_Write
       _i2c_open
         _i2c1_driver_open
         _i2c1_driver_setBusCollisionISR
         _i2c1_driver_setI2cISR
         _mssp1_clearIRQ
       _i2c_setAddress
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch
         _EUSART_Write
   _parseCmd
     _atoi
       ___wmul
       _isdigit
     _stricmp
       _toupper
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _TMR0_StopTimer
       _TMR0_Write8bitTimer
       i1_LEDsOn
         i1_send_2length_2bytes_IK
           i1_send_2bytes_latchless_IK
           i1_send_last_2bytes_IK
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
       _TMR2_StopTimer
       _TMR2_WriteTimer
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i1_i2c_ISR *
     i1_do_I2C_DO_ACK *
       i1_i2c1_driver_sendACK
     i1_do_I2C_DO_ADDRESS_NACK *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_DO_NACK_RESTART *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_DO_NACK_STOP *
       i1_i2c1_driver_sendNACK
     i1_do_I2C_IDLE *
     i1_do_I2C_RCEN *
       i1_i2c1_driver_startRX
     i1_do_I2C_RESET *
       i1_i2c1_driver_resetBus
     i1_do_I2C_RX *
       i1_do_I2C_DO_NACK_RESTART
         i1_i2c1_driver_sendNACK
       i1_do_I2C_DO_NACK_STOP
         i1_i2c1_driver_sendNACK
       i1_i2c1_driver_getRXData
       i1_i2c1_driver_sendACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_SEND_ADR_READ *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_ADR_WRITE *
       i1_i2c1_driver_TXData
     i1_do_I2C_SEND_RESTART *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_READ *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_RESTART_WRITE *
       i1_i2c1_driver_restart
     i1_do_I2C_SEND_STOP *
       i1_i2c1_driver_stop
     i1_do_I2C_TX *
       i1_do_I2C_SEND_RESTART_READ
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_RESTART_WRITE
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_i2c1_driver_TXData
       i1_i2c1_driver_isNACK
       i1_returnReset *
       i1_returnStop *
     i1_do_I2C_TX_EMPTY *
       i1_do_I2C_SEND_RESTART
         i1_i2c1_driver_restart
       i1_do_I2C_SEND_STOP
         i1_i2c1_driver_stop
       i1_mssp1_setIRQ
       i1_returnReset *
       i1_returnStop *
     i1_i2c1_driver_isNACK *
     i1_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     39      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3B      11       73.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     1C      3C      13       75.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     163      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     163      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              10      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jul 05 11:09:40 2018

        i1send_last_2bytes_IK@topOrBottom 0073                              returnReset@p 0031  
        __end_of_TMR2_SetInterruptHandler 22C6                                         pc 0002  
            __end_ofdrv2665@drv_fifo_sine 11E8                    setLEDBrightnessRange@r 00B5  
           _do_I2C_SEND_RESTART$intlevel0 227F                         ??_getMotionStatus 0049  
                             __CFG_CP$OFF 0000                              ___awdiv@sign 0037  
                    __size_of_do_I2C_IDLE 0009                       _do_I2C_SEND_RESTART 227B  
                            _startAbsMove 24B5                      __size_of_do_I2C_RCEN 000A  
                     ___wmul@multiplicand 0033                    i1send_last_2bytes_IK@j 0079  
                    __end_ofi1_returnStop 219C                              ___ftadd@exp1 00AE  
                            ___ftadd@exp2 00AD                               i1_do_I2C_RX 18CF  
                             i1_do_I2C_TX 1BD8                               __CFG_LVP$ON 0000  
                            ___ftadd@sign 00AC                                       l210 1D75  
                                     l202 1F48                                       l220 1D98  
                                     l214 1D7E                                       l302 081B  
                                     l231 1DB8                                       l312 0877  
                                     l306 0824                                       l227 1DAD  
                                     l252 27C3                                       l237 1DC2  
                                     l229 1DAF                                       l254 27C5  
                                     l246 27A9                                       l256 27CD  
                                     l424 268C                                       l509 13CF  
                                     l279 173E                                       l754 1DF6  
                                     l770 19F1                                       _PR2 001E  
                            __CFG_CPD$OFF 0000                  i1_do_I2C_DO_NACK_RESTART 21F7  
            __size_of_i2c_masterOperation 0024                      _returnStop$intlevel0 2233  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 23B0  
                   __size_of_do_I2C_RESET 000B                                       wreg 0009  
                            _startRelMove 2462                           _setHeaterToggle 1783  
                   __end_ofi1_returnReset 219E                           ?i1_mssp1_setIRQ 0070  
                      i1_i2c1_driver_stop 21AD           i2c1_driver_setBusCollisionISR@f 0031  
                                    S8761 2000                  setLEDBrightnessRange@tOB 00B7  
                       setDrvGain@setGain 00B8                              ?_EUSART_Read 0070  
                                    l1100 0986                                      l1103 099C  
                                    l1203 09E6                                      l1206 0A0D  
                                    l1333 1C70                                      l2062 2448  
                                    l1097 0958                                      l1507 0FFF  
                                    l1491 0EF4                                      l1492 0F4A  
                                    l1486 0EF2                                      l1489 0F13  
                           i1returnStop@p 0070                                      l1772 1FE1  
                                    l1773 1FE9                                      l1765 1FCE  
                                    l1589 24A2                                      l1856 08FF  
                                    l1796 0786                                      l5333 1C81  
                                    l5351 1CA0                                      l7111 2287  
                                    l6311 1479                                      l6303 146D  
                                    l5361 1CBB                                      l7105 227F  
                                    l7201 2759                                      l8001 1594  
                                    l6313 14A2                                      l5339 1C8C  
                                    l7123 229F                                      l7211 1DD2  
                                    l7203 1DC9                                      l5523 249C  
                                    l5365 1CC3                                      l5357 1CB2  
                                    l5349 1C94                                      l7133 2239  
                                    l7117 2297                                      l7221 1DD8  
                                    l6309 1475                                      l7215 1DD5  
                                    l7207 1DCF                                      l7311 26B9  
                                    l7303 26A8                                      l8031 1994  
                                    l5711 08F6                                      l5703 08DB  
                                    l8111 17BA                                      l5543 238D  
                                    l6319 14B2                                      l6271 1AEF  
                                    l6263 1ACC                                      l6255 1AB5  
                                    l7129 2233                                      l7233 19D7  
                                    l8017 1947                                      l8033 1997  
                                    l5713 0902                                      l5705 08E9  
                                    l6281 186F                                      l6273 1AF0  
                                    l6249 1AB0                                      l7139 2317  
                                    l7251 19F6                                      l7411 0EEF  
                                    l8211 1B92                                      l8035 1999  
                                    l8131 09C7                                      l6291 1450  
                                    l6611 05F0                                      l6603 05D2  
                                    l7261 2778                                      l7149 22CA  
                                    l7093 226F                                      l7157 2339  
                                    l7165 2322                                      l7173 22EF  
                                    l7181 228F                                      l7229 1E17  
                                    l8037 199B                                      l5717 0910  
                                    l8117 17F5                                      l6293 1448  
                                    l6285 1892                                      l5733 1806  
                                    l6519 254E                                      l7271 277F  
                                    l7191 2753                                      l7247 19F3  
                                    l7327 0800                                      l7335 1D2B  
                                    l7423 0F24                                      l7415 0EF6  
                                    l8039 19A0                                      l8047 19AC  
                                    l8135 09E3                                      l6295 1455  
                                    l5727 239D                                      l6279 1867  
                                    l5751 27FB                                      l5735 180E  
                                    l6631 063B                                      l6623 061D  
                                    l6615 05FF                                      l6607 05E1  
                                    l7265 277B                                      l7257 19F9  
                                    l7345 1D59                                      l7337 1D39  
                                    l7361 1964                                      l7281 2681  
                                    l7441 0F6A                                      l8225 25F1  
                                    l8233 2609                                      l8217 1BCE  
                                    l8153 15E3                                      l8161 1609  
                                    l8049 19BF                                      l8401 047A  
                                    l5745 27D5                                      l7259 2775  
                                    l7099 2277                                      l7195 2756  
                                    l7187 274A                                      l8243 0AA4  
                                    l8227 25F9                                      l8155 15FF  
                                    l8411 04EB                                      l8403 049B  
                                    l5747 27DD                                      l5739 182C  
                                    l6651 0686                                      l6643 0668  
                                    l6635 064A                                      l6627 062C  
                                    l6619 060E                                      l6571 0555  
                                    l7277 2782                                      l7349 1D64  
                                    l7365 197C                                      l7453 0F9D  
                                    l7437 0F59                                      l7541 1A52  
                                    l7533 1A34                                      l7509 084A  
                                    l8229 2601                                      l7605 1FD3  
                                    l5685 08AB                                      l8173 14ED  
                                    l8181 151D                                      l8413 04F6  
                                    l8405 04B8                                      l8421 051C  
                                    l6661 06B4                                      l7383 1D9A  
                                    l7375 1D77                                      l7359 1956  
                                    l7295 26A1                                      l7463 0FAB  
                                    l7447 0F70                                      l8511 0177  
                                    l7551 0BF2                                      l8247 0AF1  
                                    l8239 0A5B                                      l7607 1FDB  
                                    l8175 1513                                      l8415 0501  
                                    l8407 04D5                                      l6655 069C  
                                    l6647 0677                                      l6639 0659  
                                    l6591 05A5                                      l6583 0587  
                                    l6575 0569                                      l7369 1987  
                                    l7457 0FA5                                      l7465 0ED3  
                                    l7561 0CAB                                      l8193 1B45  
                                    l8417 050C                                      l8409 04E0  
                                    l6665 06C7                                      l6657 06A2  
                                    l7483 2648                                      l7723 1C2F  
                                    l8523 02BA                                      l8443 0DC7  
                                    l7651 1759                                      l8419 0514  
                                    l6595 05B4                                      l6587 0596  
                                    l6579 0578                                      l7485 264E  
                                    l7725 1C63                                      l8517 0186  
                                    l8445 0DD7                                      l8381 03A0  
                                    l7583 23AE                                      l8463 0E52  
                                    l7655 1775                                      l8199 1B81  
                                    l7591 1FA4                                      l8391 03FB  
                                    l8383 03B4                                      l6599 05C3  
                                    l8623 13F7                                      l7489 2658  
                                    l7665 16A2                                      l7649 174D  
                                    l7809 07C5                                      l7753 070E  
                                    l7841 0D44                                      l7825 0CEE  
                                    l8393 040F                                      l8385 03BF  
                                    l8377 0378                                      l8633 141E  
                                    l7499 081D                                      l7659 177C  
                                    l7595 1FAB                                      l7739 25D9  
                                    l7771 073B                                      l7819 0CD5  
                                    l8395 0423                                      l8387 03D3  
                                    l8379 038C                                      l8643 13F0  
                                    l8635 1423                                      l8493 0146  
                                    l7597 1FB5                                      l7781 075F  
                                    l7749 0706                                      l7853 0D6A  
                                    l7837 0D36                                      l8397 0440  
                                    l8389 03E7                                      l8645 13F4  
                                    l7599 1FBA                                      l7791 0782  
                                    l7783 0763                                      l7759 071F  
                                    l8399 045D              TMR0_Load8bitPeriod@periodVal 0031  
                                    l8497 0158                                      l8489 00D4  
                                    l7777 074E                                      l7849 0D5C  
                                    l8649 143C                                      l8763 19B1  
                                    l7795 0798                                      l7779 075A  
                                    l7957 096E                                      l7789 0776  
                                    l7799 07AA                                      l7993 153A  
                         __end_of_LEDsPwr 1F9B                                      l7997 1582  
                                    STR_1 2A4F                                      STR_2 2A4F  
                                    STR_3 2863                       drv_init@output_gain 00B6  
                                    STR_4 2930                                      STR_5 295E  
                                    STR_6 2903                                      STR_7 2A03  
                                    STR_8 2A59                                      STR_9 2A59  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      u5105 08DC  
                                    u4405 1CA1                                      u4415 1CAB  
                                    u5135 08F7                                      u4425 1CB3  
                                    u5075 08B2                                      _PMD0 0911  
                                    _PMD1 0912                                      _PMD2 0913  
                                    _PMD3 0914                                      u7024 27B4  
                                    _PMD4 0915                                      u7025 27B2  
                                    u4385 1C97                                      _PMD5 0916  
                                    u7115 0F93                                      u7300 0C11  
                                    u7310 0C12                                      u4655 24A3  
                                    u7320 0C29                                      u8200 15B6  
                                    u7305 0C0D                                      u8025 0D6B  
                                    u8105 1592                                      u4665 24A8  
                                    u7234 0837                                      u7330 0C2A  
                                    u7235 0835                                      u8035 0D72  
                                    u7244 0857                                      u7340 0C3F  
                                    u8300 1B61                                      u8140 1798  
                                    u7245 0855                                      u7325 0C25  
                                    u8125 191C                                      u8205 15B2  
                                    u7350 0C40                                      u8230 15D8  
                                    u8055 0962                                      u8240 15F1  
                                    u8160 17CE                                      u8080 1553  
                                    u8065 0990                                      u7345 0C3B  
                                    u8305 1B5C                                      u7505 1FF0  
                                    u7425 1FB0                                      u8145 1794  
                                    u8330 1BAE                                      u8235 15D4  
                                    u9107 09A8                                      u8075 1538  
                                    u8500 0E9E                                      u7620 16E0  
                                    u7285 25B7                                      u7365 0C78  
                                    u7621 16DE                                      u8245 15ED  
                                    u7445 1FC9                                      u8165 17CA  
                                    u7525 1F41                                      u9117 0A04  
                                    u8085 154F                                      u8510 0E9F  
                                    u7630 16E1                                      u8270 14DB  
                    ?_do_I2C_SEND_RESTART 0070                                      u6815 1D2E  
                                    u9127 086D                                      u8335 1BA9  
                                    u7535 1F56                                      u8255 14C3  
                                    u9047 13DE                                      u8440 0E19  
                                    u7640 16FB                                      u8280 14FE  
                                    u6905 1972                                      u9137 0965  
                                    u7465 1FD6                                      u7545 1F7E  
                                    u8193 0A01                                      u9057 1EE8  
                                    u8610 01D3                                      u8450 0E23  
                                    u7650 16FC                                      u6835 1D3A  
                                    u6915 197D                                      u9147 0993  
                                    u8435 0E00                                      u8275 14D7  
                                    u9067 1EF4                                      u8620 01D4  
                                    u8540 00F4                                      u8460 0E24  
                                    u6845 1D4E                                      u9157 1A35  
                                    u8613 01CF                                      u8605 0184  
                                    u8445 0E15                                      u8285 14FA  
                                    u9077 1F03                                      u8710 02ED  
                                    u9167 13D3                                      u6855 1D5A  
                                    u8535 00D2                                      u8375 0AEA  
                                    u9087 1F17                                      u8720 02FF  
                                    u8640 01F8                                      u8560 013C  
                                    u8705 02CB                                      u8545 00F0  
                                    u7825 074F                                      u9097 1F2A  
                                    u6954 1D89                                      u8730 0300  
                                    u8650 0264                                      u8634 01DD  
                                    u8570 013D                                      u8490 0E94  
                                    u6955 1D87                                      u7675 1C4E  
                                    u8715 02E9                                      u8635 01DB  
                                    u8740 0327                                      u8660 0265  
                                    u6885 1959                                      u8653 0260  
                                    u8645 01F4                                      u8565 0138  
                                    u8485 0E7B                                      u8750 0339  
                                    u6975 1DA4                                      u8495 0E90  
                                    u7855 0764                                      u8760 033A  
                                    u8680 0288                                      u8745 0323  
                                    u8585 0156                                      u8674 026D  
                                    u8675 026B                                      u7795 073C  
                                    u7955 0CFE                                      u8685 0284  
                                    u7885 0777                                      u7965 0D10  
                                    u8695 02B8                                      u7985 0D45  
                                    u7995 0D4C                                      _TMR2 001D  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000         __size_of_do_I2C_SEND_RESTART_READ 0008  
                     ?i1_i2c1_driver_stop 0070                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _atoi 1446                                      _main 13D7  
                            ___ftpack@arg 0031                 __size_of_do_I2C_SEND_STOP 0008  
                  __size_of_do_I2C_DO_ACK 0008                              ___ftpack@exp 0034  
                         _TMR0_StartTimer 21BC                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                       ??i1_do_I2C_DO_ACK 0070                             __CFG_BOREN$ON 0000  
                            ?_LED_getData 00B5                   i1_i2c1_driver_getRXData 21B3  
                   ?_do_I2C_SEND_ADR_READ 0070                             __CFG_BORV$LOW 0000  
         ??_i2c1_driver_clearBusCollision 0070                                      start 0050  
                        _setHeaterPreTime 1E79                     __size_of_zeroPosition 0075  
                           _i2c_setBuffer 07EB                    LED_test_openshort@type 00B5  
                 ??_setLEDBrightnessRange 004C                             __CFG_CSWEN$ON 0000  
                           __CFG_MCLRE$ON 0000                              ___ftmul@cntr 00A4  
                _send_2bytes_latchless_IK 27A0                           __end_of_i2c_ISR 26CA  
                            ___ftmul@sign 00A5                        timedActiveHeatOn@t 00C0  
                ??_do_I2C_DO_NACK_RESTART 0031                             i1_do_I2C_IDLE 221A  
                            ___fttol@exp1 00BC                             i1_do_I2C_RCEN 2229  
                            ___fttol@lval 00B8                   __end_of_TMR0_Initialize 23E9  
                            _do_I2C_RESET 2313                            i1returnReset@p 0070  
            __size_of_TMR0_Write8bitTimer 0005            ??_TMR0_DefaultInterruptHandler 007C  
                           ?_EUSART_Write 0070            __size_of_OSCILLATOR_Initialize 000A  
           __end_of_OSCILLATOR_Initialize 22EB                      ??i1_i2c1_driver_stop 0070  
                                   ?_atoi 0037                  __end_of_i2c1_driver_open 2313  
                                   ?_main 0070                           __end_of___awdiv 1CC8  
                __end_of_i2c1_driver_stop 21CB                           __end_of___ftadd 07EB  
                                   STR_11 2920                                     STR_20 2A59  
                                   STR_12 29AB                                     STR_21 2A59  
                                   STR_13 2910                                     STR_22 2A59  
                                   STR_14 2A59                                     STR_30 2A4F  
                                   STR_31 2863                                     STR_23 2A59  
                                   STR_15 2A4B                                     STR_24 2A59  
                                   STR_16 2A59                                     STR_32 2A4F  
                                   STR_40 29F3                                     STR_33 2863  
                                   STR_25 2A59                                     STR_17 2A5C  
                                   STR_41 2A0B                             __CFG_WDTE$OFF 0000  
                                   STR_26 2A59                                     STR_18 2A59  
                                   STR_34 2A65                                     STR_50 29C1  
                                   STR_42 29B6                      send_last_2bytes_IK@j 003A  
                                   STR_19 2A59                                     STR_27 2A5C  
                                   STR_35 2A24                                     STR_51 2865  
                                   STR_43 2828                                     STR_28 2A59  
                                   STR_44 29FB                                     STR_36 2A63  
                                   STR_60 2A43                                     STR_52 28FF  
                                   STR_45 29F3                                     STR_29 2A5C  
                                   STR_61 2A47                                     STR_53 28CB  
                                   STR_37 2847                                     STR_54 28CB  
                                   STR_46 2A0B                                     STR_62 2A45  
                                   STR_70 294F                                     STR_38 2881  
                                   STR_47 29B6                                     STR_63 2A26  
                                   STR_39 29FB                                     STR_71 29E3  
                                   STR_55 28DD                                     STR_80 2A35  
                                   STR_64 2A30                                     STR_72 2A1A  
                                   STR_56 28EE                                     STR_48 289B  
                                   STR_81 28C8                                     STR_57 2A11  
                                   STR_65 2A61                                     STR_49 29CA  
                                   STR_73 297B                                     STR_58 2A11  
                                   STR_66 29D3                                     STR_74 29A0  
                                   STR_82 28B4                                     STR_59 2A3F  
                                   STR_75 2A21                                     STR_67 29DB  
                                   STR_76 2A2B                                     STR_68 2994  
                                   STR_77 29EB                                     STR_69 296D  
                                   STR_78 2A13                                     STR_79 2A3A  
                         __end_of___lldiv 1D6D                           __end_of___ftmul 0D9D  
                         ___awdiv@divisor 0031                           __end_of___llmod 1990  
                         __end_of___fttol 0919                                     _T2CON 001F  
              __end_of_i2c1_driver_TXData 2241                            __CFG_DEBUG$OFF 0000  
                        __end_ofi1_LEDsOn 25AD                                     i1l210 1A65  
                                   i1l220 1A84                                     i1l214 1A6D  
                                   i1l231 1A9E                                     i1l227 1A96  
                                   i1l252 26E9                                     i1l237 1AA5  
                                   i1l229 1A97                                     i1l254 26EA  
                                   i1l246 26D2                                     i1l256 26F1  
                                   i1l360 0013                                     i1l363 0022  
                                   i1l436 24ED                                     i1l365 002F  
                                   i1l374 004B                                     i1l367 0039  
                                   i1l369 0043                                     i1l754 1C04  
                                   i1l770 18E9                           ___awdiv@counter 0036  
                        __end_of_LEDpower 2A61                                     _OSCEN 091D  
                                   _TMR0H 0016                                     _TMR0L 0015  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                        __end_ofsin@coeff_a 294F  
                      __end_ofsin@coeff_b 2994         __size_of_TMR0_SetInterruptHandler 0009  
           i1send_2length_2bytes_IK@data1 0020             i1send_2length_2bytes_IK@data2 0022  
               ?_TMR0_SetInterruptHandler 0031                               i2c_open@ret 0034  
                        __end_of_TMR0_ISR 2366                          __end_of_TMR2_ISR 2373  
                         __end_of_execCmd 052F                        __size_ofi1_i2c_ISR 0020  
                           ___awtoft@sign 003E                __end_of_i2c1_driver_isNACK 2380  
                         __end_of_dpowers 2828                            _WDT_Initialize 21FB  
                                   _errno 0162                         _timedActiveHeatOn 09A2  
                         __end_of_isdigit 238F              ?i1_do_I2C_SEND_RESTART_WRITE 0070  
              ?_do_I2C_SEND_RESTART_WRITE 0070                             ___ftpack@sign 0035  
                                   atoi@a 003C                                     atoi@s 003E  
                                   _putch 2241                     ??_do_I2C_SEND_RESTART 0031  
               send_2bytes_latchless_IK@j 0037                         ?i1_mssp1_clearIRQ 0070  
  __end_of_i2c1_driver_setBusCollisionISR 22D8   __size_of_i2c1_driver_setBusCollisionISR 0009  
          _i2c1_driver_setBusCollisionISR 22CF                              _zeroPosition 152A  
                                   pclath 000A                        setDrvPiezoOnTime@t 00BD  
                 __size_of_mssp1_clearIRQ 0003                      i1_i2c1_driver_TXData 2215  
                      ?_timedActiveHeatOn 00B5        __end_ofi1_send_2bytes_latchless_IK 26F3  
              i1_send_2bytes_latchless_IK 26CA                      setLEDPwr@topOrBottom 00B7  
                          _i2c_setAddress 22A3                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                        ??i1_mssp1_clearIRQ 0070  
                                   wtemp0 007E                           _TMR2_StartTimer 21BF  
                         __end_of_stricmp 1898          __size_of_TMR2_LoadPeriodRegister 0005  
                         __end_of_strcspn 2800                           __end_of_toupper 239F  
                       ??_main_initialize 00BD                            ?_i2c_setBuffer 0031  
                     _send_last_2bytes_IK 1D6D                      i1_i2c1_driver_isNACK 2329  
                       _setHeaterPostTime 1CC8                       ??_timedActiveHeatOn 00BB  
                           _fsmStateTable 0220                           __initialization 0052  
          __size_ofi1_do_I2C_SEND_RESTART 0004                                _i2c_poller 0800  
           __end_ofi1_do_I2C_SEND_RESTART 21EB                            _remainingSteps 013E  
                            __end_of_atoi 14B7                                _i2c_status 0120  
                          ?i1_do_I2C_IDLE 0070                              __end_of_main 1446  
                      ?_setHeaterPostTime 00BD                            ?i1_do_I2C_RCEN 0070  
               LED_readConfig@topOrBottom 00C6                __end_ofi1_do_I2C_SEND_STOP 21EF  
                        __end_of_i2c_open 1B3E                            ??_EUSART_Write 0031  
                 __end_of_TMR2_Initialize 23C2               ?_INTERRUPT_InterruptManager 0070  
                           ?_LED_testComm 00CA                   __end_of_setHeaterToggle 1800  
                          i1_do_I2C_RESET 224D                             _do_I2C_DO_ACK 228B  
                                  ??_atoi 0039                  _TMR2_SetInterruptHandler 22BD  
                                  ??_main 00D8                             ___fttol@sign1 00B7  
                     ??_setHeaterPostTime 004D             __size_of_i2c1_driver_sendNACK 0004  
                         _TMR2_WriteTimer 2210                      ?_send_last_2bytes_IK 0031  
                           ?_drv_write_DC 00B8                                 ??_LEDsPwr 0048  
                  __end_of_WDT_Initialize 21FF             __size_of_i2c1_driver_resetBus 0001  
                             drv_read@reg 004B                        setHeaterPostTime@t 00BD  
               __end_of_timedActiveHeatOn 0A3A                   ?_do_I2C_DO_ADDRESS_NACK 0070  
                            ?_setMoveMask 00B5                        setHeaterToggle@num 00B5  
                        _piezo_on_time_ms 00E9                   __end_of_TMR0_StartTimer 21BF  
                           _drv_fifo_sine 1000                          ___llmod@dividend 0043  
                    __size_of_getMoveMask 004D                          ___awdiv@dividend 0033  
                        __end_of___awtoft 25F0                                    _ANSELA 018C  
                                  ?_putch 0070                                    _ANSELB 018D  
                                  _ANSELC 018E                    __end_of_i2c_setAddress 22AB  
                        __end_of___ftpack 2000                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 0017                                    _T0CON1 0018  
                 ?i1_do_I2C_SEND_ADR_READ 0070                      drv2665@drv_fifo_sine 10F4  
                   ?i1_i2c1_driver_TXData 0070                                    _RC1REG 0199  
                                  _RC1STA 019D                                    _ODCONA 028C  
                                  _ODCONB 028D                                    _ODCONC 028E  
                                  i1l5213 1A85                                    i1l5205 1A67  
                                  i1l6325 224D                                    i1l6335 221A  
               ??i1_i2c1_driver_getRXData 0070                                    i1l6359 2229  
                                  i1l8313 1C20                                    i1l8305 1BE7  
                                  i1l8331 18EB                                    i1l8341 18F1  
                                  i1l8317 18CF                                    i1l6495 2482  
                                  i1l8343 271C                                    i1l8271 2613  
                                  i1l8335 18EE                                    i1l8345 271F  
                                  i1l8361 2729                                    i1l8249 225B  
                                  i1l8257 2254                                    i1l8265 21EF  
                                  i1l8355 2726                                    i1l8275 261A  
                                  i1l8291 1BDE                                    i1l8349 2722  
                                  i1l8285 2620                                    i1l7911 219A  
                                  i1l8279 261D                                    i1l8295 1BE1  
                                  i1l8287 1BD8                                    i1l7905 21F7  
                                  i1l8545 253C                                    i1l8537 252C  
                                  i1l7915 219C                                    i1l8299 1BE4  
                                  u400_24 1A76                                    u400_25 1A74  
                                  i1l7881 21E3                                    i1l7875 21DF  
                                  i1l7893 21EB                                    i1l7887 21E7  
                                  i1l7899 21F3                                    u402_25 1A8E  
                                  _LEDsOn 25AD                                    u407_24 26DB  
                                  u407_25 26D9             ??i1_do_I2C_SEND_RESTART_WRITE 0070  
                                  u522_25 2596                                    _OSCFRQ 091F  
                  ??_do_I2C_SEND_ADR_READ 0032                           drv_write_DC@val 00B8  
                                  _TX1REG 019A                      __size_of_getPosition 003F  
                                  _WDTCON 0097                                    _TX1STA 019E  
                               ??_i2c_ISR 0036               __size_of_LED_test_openshort 007C  
               __end_of_setHeaterPostTime 1D1A                     ?i1_i2c1_driver_isNACK 0070  
                          __CFG_PWRTE$OFF 0000             LED_test_openshort@topOrBottom 00B7  
                   _i2c1_driver_getRXData 21CE                       LED_getData@readData 00C0  
                 __size_of_LED_readConfig 0029                       _do_I2C_RX$intlevel0 19D7  
                   __size_ofi1_returnStop 0002               __end_of_do_I2C_DO_NACK_STOP 229B  
                       __end_ofi1_i2c_ISR 254C                                    ___wmul 2499  
                               ??___awdiv 0035     __end_of_i2c1_driver_clearBusCollision 21A7  
  __size_of_i2c1_driver_clearBusCollision 0003             _i2c1_driver_clearBusCollision 21A4  
                               ??___ftadd 0049                            __CFG_STVREN$ON 0000  
                                  _doMove 0919                                 ??___lldiv 0039  
                               ??___ftmul 0045                                 ??___llmod 0047  
                               ??___fttol 00B3               i1send_2bytes_latchless_IK@j 0076  
         __size_of_do_I2C_DO_NACK_RESTART 0008                         startAbsMove@steps 00B5  
                        __end_of_drv_init 1F37                          __end_of_drv_read 1A5E  
                  __end_ofi1_do_I2C_RESET 2254                          __end_of_drv_sine 13CC  
                 ?_send_2length_2bytes_IK 003C                       _EUSART_Transmit_ISR 24D2  
                          ??_LED_testComm 004C                          ?_TMR0_Initialize 0070  
                        ___awdiv@quotient 0038                            ?_do_I2C_DO_ACK 0070  
                        __end_of_parseCmd 06D1                                    _printf 0ECE  
                                  _strchr 2448                                    _strtok 1AA7  
                                  _strspn 1801                                 ??_execCmd 004E  
                   ___ftmul@f3_as_product 00A1                    i2c1_driver_setI2cISR@f 0031  
                   i2c_setAddress@address 0032                     ??_send_last_2bytes_IK 0036  
             __end_of_i2c1_driver_sendACK 2203                            _PMD_Initialize 2263  
          __end_of_do_I2C_DO_ADDRESS_NACK 2771                            ??_drv_write_DC 00BC  
                               ??_isdigit 0031                           ?_WDT_Initialize 0070  
             __end_of_i2c1_driver_restart 21C8                              ?_returnReset 0031  
                 timedActiveHeatOn@onTime 00B5             _do_I2C_DO_NACK_STOP$intlevel0 2297  
                   _i2c1_driver_setI2cISR 22D8               __end_of_i2c1_driver_startRX 21CE  
                      LEDsPwr@topOrBottom 0046         __size_ofi1_do_I2C_DO_ADDRESS_NACK 0024  
          __end_ofi1_do_I2C_SEND_ADR_READ 2263                   __end_of_TMR2_StartTimer 21C2  
                 timedActiveHeatOn@topOrB 00B9  TMR2_SetInterruptHandler@InterruptHandler 0031  
TMR0_SetInterruptHandler@InterruptHandler 0031                 ?i1_do_I2C_DO_ADDRESS_NACK 0070  
                               ??_stricmp 0035                                 ??_strcspn 003A  
                               ??_toupper 0031                      ?_EUSART_Transmit_ISR 0070  
                         ?_i2c_setAddress 0070                         i1_do_I2C_TX_EMPTY 271C  
                    __size_of_EUSART_Read 0020                         _SYSTEM_Initialize 23E9  
          __size_ofi1_send_last_2bytes_IK 0049                   __end_of__initialization 00BC  
           __end_ofi1_send_last_2bytes_IK 1AA7                           ??_i2c_setBuffer 0035  
          _do_I2C_SEND_ADR_READ$intlevel0 2339                          _do_I2C_SEND_STOP 2283  
                            i1_returnStop 219A                                ___ftadd@f1 00A6  
                              ___ftadd@f2 00A9                           _getMotionStatus 25F0  
                   i1_do_I2C_DO_NACK_STOP 21F3                        __size_of_do_I2C_RX 0044  
                      __size_of_do_I2C_TX 0059                        ?i1_do_I2C_TX_EMPTY 0070  
                      ?_SYSTEM_Initialize 0070                        __size_of_doAbsMove 02B0  
                        _moveVector_downs 00E1                __end_of_mssp1_IRQisEnabled 22FF  
                     _i2c_masterOperation 2637                  __size_of_do_I2C_TX_EMPTY 002F  
                              ___awtoft@c 0039                                 ?i1_LEDsOn 0027  
                         ??i1_do_I2C_IDLE 0070                           ??i1_do_I2C_RCEN 0070  
                              ___ftmul@f1 003F                                ___ftmul@f2 0042  
              __end_of_mssp1_waitForEvent 13D7                      __size_of_LED_getData 0087  
                              ___fttol@f1 00AF                               ?_i2c_poller 0070  
                          __pcstackCOMMON 0070                ??i1_do_I2C_DO_NACK_RESTART 0070  
                     _do_I2C_TX$intlevel0 1DC9                       ??i1_do_I2C_TX_EMPTY 0070  
          __end_of_send_2length_2bytes_IK 242E                              __pidataBANK0 2207  
                            __pidataBANK1 2247                              __pidataBANK2 0002  
                            __pidataBANK4 256C                       ??_SYSTEM_Initialize 0033  
                              _absCommand 004E                                 ?_TMR0_ISR 0070  
                               ?_TMR2_ISR 0070                        __size_of_doRelMove 0131  
                 __end_of_TMR2_WriteTimer 2215                     i1_i2c1_driver_sendACK 21D7  
                   i1i2c1_driver_TXData@d 0070                           ?i1_do_I2C_RESET 0070  
                           __end_of_putch 2247                          ?_TMR2_Initialize 0070  
                   i1_i2c1_driver_restart 21AA         __size_ofi1_send_2length_2bytes_IK 0018  
                  __end_of_PMD_Initialize 226B                          ?_setHeaterToggle 00B5  
               ?i1_send_2length_2bytes_IK 0020                        __size_of_getActive 004D  
                            ?i1_do_I2C_RX 0070                              ?i1_do_I2C_TX 0070  
                   i1_i2c1_driver_startRX 21B0                          ??i1_mssp1_setIRQ 0070  
                    ?_i2c_masterOperation 0070              ??i1_do_I2C_SEND_RESTART_READ 0070  
                      __size_of_commCheck 00C7                  __end_of_setHeaterPreTime 1ED4  
                            LED_getData@j 00C4                __size_of_timedActiveHeatOn 0098  
                         i1_do_I2C_DO_ACK 21EF               __end_of_TMR0_Load8bitPeriod 2224  
               __end_ofi1_do_I2C_TX_EMPTY 2746                          ?_TMR0_StartTimer 0070  
                  _do_I2C_DO_NACK_RESTART 229B                    ??i1_i2c1_driver_TXData 0070  
                          _do_I2C_TX$1134 0034                 __end_of_SYSTEM_Initialize 23FE  
                   ??_EUSART_Transmit_ISR 0070                                   ??_putch 0033  
                          _mssp1_clearIRQ 21D4                                __pbssBANK0 004E  
                              __pbssBANK1 00D9                                __pbssBANK2 0120  
                              __pbssBANK3 01A0                   __size_of_calcHeaterPins 0079  
                     _TMR0_Write8bitTimer 220B                ??_send_2bytes_latchless_IK 0033  
                    __end_of_EUSART_Write 26A4                                   ?_LEDsOn 0044  
                          _moveVector_ups 00E5                   _TMR2_LoadPeriodRegister 2224  
                               ?_i2c_open 0070                   drv_write_DC@duration_ms 00BA  
                              _activeMask 00DD                  ??i1_i2c1_driver_sendNACK 0070  
                         drv2665@drv_sine 11E8                        __size_of_drv_reset 000A  
                  ??i1_i2c1_driver_isNACK 0070                __size_of_setHeaterPostTime 0052  
                      __size_of_drv_write 0024               __size_of_EUSART_Receive_ISR 001C  
                      __size_of_setLEDPwr 001E                    ?_i2c1_driver_getRXData 0070  
                ??i1_i2c1_driver_resetBus 0070                              drv_read@buff 004C  
                              ??i1_LEDsOn 002D                     _do_I2C_IDLE$intlevel0 22CA  
                          _SSP1DATPPSbits 0E21              __size_of_i2c_busCollisionISR 0003  
                              __pmaintext 13D7                                doAbsMove@i 00C8  
                           ??_do_I2C_IDLE 0031                        __size_of_setActive 0076  
                           ??_do_I2C_RCEN 0031          __end_of_TMR0_SetInterruptHandler 22BD  
                 __size_of_TMR0_StopTimer 0003            __size_of_setLEDBrightnessRange 001E  
                                 ?___wmul 0031             __end_of_setLEDBrightnessRange 250E  
                              ??_TMR0_ISR 007C                           __CFG_PPS1WAY$ON 0000  
                              _cmd_struct 01B0                                ??_TMR2_ISR 0071  
                                 ?_doMove 00BF                           ??_do_I2C_DO_ACK 0031  
                              __pintentry 0004                         startRelMove@steps 00B5  
                   setHeaterToggle@topOrB 00B7                      ?_TMR0_Write8bitTimer 0070  
                     i2c_setBuffer@buffer 0031                                 ?___awtoft 0039  
                               ?___ftpack 0031                            _SSP1CLKPPSbits 0E20  
                                 ?_printf 00A0                           ?_PMD_Initialize 0070  
                              _fifo_check 239F                                   ?_strchr 0031  
          ?_i2c1_driver_clearBusCollision 0070                                   ?_strtok 003F  
                                 ?_strspn 0038                     ??_i2c_masterOperation 0037  
                       ?_i2c1_driver_open 0070                         __end_of_do_I2C_RX 1A17  
                       __end_of_do_I2C_TX 1E1E                         ?_i2c1_driver_stop 0070  
                           _eusartRxCount 0056                         __end_of_doAbsMove 0370  
                ?i1_do_I2C_SEND_ADR_WRITE 0070                                   _SP1BRGH 019C  
                                 _SP1BRGL 019B                    ?_i2c1_driver_setI2cISR 0031  
                                 _LEDsPwr 1F37                        ??_i2c1_driver_open 0031  
                      ??_i2c1_driver_stop 0031                                   _OSCCON1 0919  
                                 _OSCCON3 091B                             ?_mssp1_setIRQ 0070  
                         _main_initialize 0B01                                   _NVMADRH 0892  
                                 _NVMADRL 0891                                   _NVMDATH 0894  
                                 _OSCTUNE 091E                                   _NVMDATL 0893  
                                 _NVMCON2 0896                                   _SSP1ADD 0212  
                                 _SSP1BUF 0211                    __end_of_mssp1_clearIRQ 21D7  
                                 _SSP1MSK 0213                   __end_of_getMotionStatus 2613  
                 __size_of_TMR2_StopTimer 0003                       __size_of_i2c_poller 000B  
                        ?_TMR2_StartTimer 0070                   ??_do_I2C_SEND_ADR_WRITE 0032  
     _do_I2C_SEND_RESTART_WRITE$intlevel0 2277                         __end_of_doRelMove 0ECE  
             ??_do_I2C_SEND_RESTART_WRITE 0031                      __size_of_setMoveMask 0073  
                  ?i1_do_I2C_DO_NACK_STOP 0070                        _i2c1_driver_TXData 223B  
                    __end_of_LED_testComm 1707                                ??_i2c_open 0033  
                               ?_drv_init 00B6                                 ?_drv_read 00B5  
                         __size_of_LEDsOn 0021                        _i2c1_driver_i2cISR 0168  
             ?i1_send_2bytes_latchless_IK 0070         LED_setBrightnessRange@topOrBottom 0046  
                       __end_of_getActive 1B8B                                   _i2c_ISR 26A4  
                               ?_parseCmd 0045                         __end_of_commCheck 0B01  
                    __end_of_drv_write_DC 1C76                     _returnReset$intlevel0 2239  
                   _do_I2C_RCEN$intlevel0 22EF                        _i2c1_driver_isNACK 2373  
                     ?_i2c1_driver_TXData 0070                              drv_write@reg 004B  
              ??_TMR2_SetInterruptHandler 0033                            _LED_readConfig 26F3  
        _do_I2C_DO_ADDRESS_NACK$intlevel0 274A                        __end_of_TMR0_RANGE 2A59  
                      __end_of_TMR2_RANGE 2A56                    ?i1_i2c1_driver_sendACK 0070  
                              doRelMove@j 00D6                    __size_ofi1_returnReset 0002  
                                 ___awdiv 1C76                                   ___ftadd 06D1  
                                 ___lldiv 1D1A                 __size_ofi1_mssp1_clearIRQ 0003  
                         __size_of___wmul 001C                                   ___ftmul 0CBC  
                                 ___llmod 194D                                   ___fttol 0892  
                   ??_TMR0_Write8bitTimer 0070                           __size_of_doMove 0089  
                  ?i1_i2c1_driver_restart 0070                          ?_TMR2_WriteTimer 0070  
                       ??_do_I2C_TX_EMPTY 0031                       ?_i2c1_driver_isNACK 0070  
                                 _cmdRead 0164                    ?i1_i2c1_driver_startRX 0070  
                              ??___awtoft 003C                                ??___ftpack 0036  
                 __end_ofi1_do_I2C_DO_ACK 21F3                                   __ptext1 052F  
                                 __ptext2 1AA7                                   __ptext3 1801  
                                 __ptext4 27D0                                   __ptext5 2448  
                                 __ptext6 1864                                   __ptext7 238F  
                                 __ptext8 1446                                   __ptext9 2380  
             __size_ofi1_i2c1_driver_stop 0003                       __end_of_do_I2C_IDLE 22CF  
                         __size_of_printf 0132                       __end_of_do_I2C_RCEN 22F5  
                       __end_of_drv_reset 2309                                   _execCmd 0370  
                         __size_of_strchr 001A                           __size_of_strtok 004B  
                         __size_of_strspn 0030                         __end_of_drv_write 267F  
                                 _dpowers 2800                  ??_LED_setBrightnessRange 00A0  
                   _OSCILLATOR_Initialize 22E1                                   _readIdx 0052  
                               _T2CONbits 001F                                   doMove@t 00C2  
                                 _isdigit 2380                            setActive@onOff 00B7  
                       __end_of_setLEDPwr 252C               __end_of_do_I2C_SEND_RESTART 2283  
                          ??_mssp1_setIRQ 0031                      ??_i2c1_driver_TXData 0031  
                ??_PIN_MANAGER_Initialize 0031                    i2c_masterOperation@ret 0039  
                      i1_do_I2C_SEND_STOP 21EB                   __end_ofdrv2665@drv_sine 12DA  
                       __end_of_setActive 1615                           ?_mssp1_clearIRQ 0070  
              _do_I2C_SEND_STOP$intlevel0 2287                __size_ofi1_do_I2C_TX_EMPTY 002A  
               ??_TMR2_LoadPeriodRegister 0031                  _do_I2C_SEND_RESTART_READ 226B  
              __size_of_SYSTEM_Initialize 0015                                _setDrvGain 1990  
                       setActive@probeNum 00B5                                   clrloop0 2342  
                              _setDrvPeak 23C2                                   _stricmp 1864  
                                 _strcspn 27D0                                   _toupper 238F  
                    __size_of_returnReset 0006                      end_of_initialization 00BC  
                    drv_init@idle_timeout 00B8                      ??_i2c1_driver_isNACK 0031  
                              _second_top 015E                                getActive@i 00B7  
             TMR0_Write8bitTimer@timerVal 0070                                ??_drv_init 00BA  
                              ??_drv_read 0049                              setLEDPwr@pwr 00B5  
                                 init_ram 234D              __end_of_i2c1_driver_sendNACK 2207  
                     ?i1_do_I2C_SEND_STOP 0070                                   initloop 234E  
         __size_ofi1_i2c1_driver_sendNACK 0004                                ??_parseCmd 0046  
                  __end_of_LED_readConfig 271C                         _EUSART_Initialize 242E  
            __end_of_i2c1_driver_resetBus 1801                           ___lldiv@divisor 0031  
         __size_ofi1_i2c1_driver_resetBus 0001                           ___lldiv@counter 003E  
                      ?_EUSART_Initialize 0070                                   printf@c 00B4  
                                 printf@f 00A0                                _motionType 0055  
               _do_I2C_SEND_RESTART_WRITE 2273                         LEDsOn@topOrBottom 0048  
                   i1_do_I2C_SEND_RESTART 21E7          __end_ofi1_do_I2C_DO_ADDRESS_NACK 2637  
         __end_ofi1_do_I2C_SEND_ADR_WRITE 225B                       ??_EUSART_Initialize 0031  
                        ??_WDT_Initialize 0031                                 i1_i2c_ISR 252C  
                    ??i1_do_I2C_SEND_STOP 0070                                   strspn@i 003C  
                              _returnStop 222F                   __end_of_main_initialize 0BDE  
                _TMR0_SetInterruptHandler 22B4                               ?_fifo_check 0070  
                               _PORTCbits 000E                  __end_of_do_I2C_SEND_STOP 228B  
      __end_ofi1_do_I2C_SEND_RESTART_READ 21E3                i1_do_I2C_SEND_RESTART_READ 21DF  
                    __size_ofi1_do_I2C_RX 003F                      __size_ofi1_do_I2C_TX 004E  
                        ??_i2c_setAddress 0031                             ??_getMoveMask 0049  
                   __size_of_EUSART_Write 0025                             i1_returnReset 219C  
                             returnStop@p 0031                          ?_getMotionStatus 00B5  
                           ??_getPosition 0049                       LED_test_openshort@j 00BA  
                        __CFG_FEXTOSC$OFF 0000                            _calcHeaterPins 1615  
        __end_of_send_2bytes_latchless_IK 27D0                __end_of_LED_test_openshort 1783  
                 TMR2_WriteTimer@timerVal 0070                                 _RXPPSbits 0E24  
               __end_of_EUSART_Initialize 2448            send_last_2bytes_IK@latch_start 0033  
             LED_setBrightnessRange@range 0044                            __end_of_LEDsOn 25CE  
        __end_ofi1_send_2length_2bytes_IK 2416                           ?_LED_readConfig 00C6  
           __size_of_do_I2C_SEND_ADR_READ 000C                          ??i1_do_I2C_RESET 0070  
                             ___ftmul@exp 00A0                              ??_i2c_poller 0037  
                          _TMR0_StopTimer 219E                               _do_I2C_IDLE 22C6  
                             _do_I2C_RCEN 22EB                         __size_ofi1_LEDsOn 0021  
                 LED_testComm@topOrBottom 00CA      __end_of_TMR2_DefaultInterruptHandler 22B4  
   __size_of_TMR2_DefaultInterruptHandler 0009              _TMR2_DefaultInterruptHandler 22AB  
             __end_of_send_last_2bytes_IK 1DC5                             ?_startAbsMove 00B5  
                          __end_of___wmul 24B5                            __end_of_doMove 09A2  
                            _EUSART_Write 267F                         __size_of_TMR0_ISR 000D  
                              ?i1_i2c_ISR 0070                         __size_of_TMR2_ISR 000D  
                      _mssp1_IRQisEnabled 22F5                    i1_i2c1_driver_sendNACK 21DB  
                        ?i1_do_I2C_DO_ACK 0070                    ?_OSCILLATOR_Initialize 0070  
            __size_of_do_I2C_DO_NACK_STOP 0008          TMR2_LoadPeriodRegister@periodVal 0031  
                          __end_of_printf 1000                        _mssp1_waitForEvent 13CC  
     __size_ofi1_send_2bytes_latchless_IK 0029                    i1_i2c1_driver_resetBus 2199  
                          __end_of_strchr 2462           __size_of_LED_setBrightnessRange 00DE  
                 ?_do_I2C_DO_NACK_RESTART 0070                            __end_of_strtok 1AF2  
                          __end_of_strspn 1831                         setHeaterPreTime@t 00BD  
                     start_initialization 0052                             ?_startRelMove 00B5  
                       ?_setHeaterPreTime 00BD                       _i2c_busCollisionISR 21A7  
                __size_of_TMR0_Initialize 0014           __size_of_PIN_MANAGER_Initialize 0033  
                     ?_mssp1_IRQisEnabled 0070                            ?i1_returnReset 0070  
                ?i1_i2c1_driver_getRXData 0070                    __end_of_calcHeaterPins 168E  
                   __size_of_LED_testComm 0079                            _TMR2_StopTimer 21A1  
                           ??_EUSART_Read 0031       __end_ofi1_do_I2C_SEND_RESTART_WRITE 21E7  
             i1_do_I2C_SEND_RESTART_WRITE 21E3                              _first_bottom 015A  
                      ??_setHeaterPreTime 00BF                               ?_setDrvGain 00B5  
                             ?_setDrvPeak 00B5                       ?_mssp1_waitForEvent 0070  
                           _second_bottom 0152                               putch@txData 0033  
                      __end_of_i2c_poller 080B              __size_of_i2c1_driver_sendACK 0004  
                         i2c_open@address 0035                       __end_of_getMoveMask 1BD8  
                 i2c_setBuffer@bufferSize 0033                                  ??_LEDsOn 004A  
                 ??_i2c1_driver_getRXData 0031                     __size_of_drv_write_DC 0050  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                         ___llmod@divisor 003F                             ??_LED_getData 00B9  
                     __size_of_fifo_check 0011                           ___llmod@counter 0048  
                   __end_of_i2c_setBuffer 0800                       __end_of_getPosition 194D  
                       __size_of_i2c_open 004C                    __end_of_TMR0_StopTimer 21A1  
                     _heater_post_time_ms 00EB                     i1_send_last_2bytes_IK 1A5E  
     LED_setBrightnessRange@LED_configReg 0048                      ?_i2c_busCollisionISR 0070  
                        __CFG_LPBOREN$OFF 0000                      __end_of_mssp1_setIRQ 21D4  
                            _drv_peak_val 016E                      ??_mssp1_IRQisEnabled 0031  
                        i1_do_I2C_TX$1134 0073                                LEDsPwr@pwr 0044  
                        ??_PMD_Initialize 0031                     __end_ofi1_do_I2C_IDLE 221F  
                   __end_ofi1_do_I2C_RCEN 222F                                  ??___wmul 0035  
                  ?i1_do_I2C_SEND_RESTART 0070                      ??_mssp1_waitForEvent 0031  
                                ??_doMove 00C1                          i1_mssp1_clearIRQ 21B9  
                          ??_startAbsMove 0049                             ?_do_I2C_RESET 0070  
                             __pdataBANK0 005A                               __pdataBANK1 00E9  
                             __pdataBANK2 016E                               __pdataBANK4 0220  
               _do_I2C_TX_EMPTY$intlevel0 2775             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0031                         _setDrvPiezoOnTime 1E1E  
                            _LED_testComm 168E                                  ??_printf 00A6  
                 ??_i2c1_driver_setI2cISR 0033                          ?_main_initialize 0070  
                                ??_strchr 0035            i1send_2bytes_latchless_IK@data 0070  
          __end_of_do_I2C_DO_NACK_RESTART 22A3                                  ??_strtok 0041  
                                ??_strspn 003A                      _i2c1_driver_sendNACK 2203  
                       __size_of___awtoft 0022                         __size_of___ftpack 0065  
                      ?_setDrvPiezoOnTime 00BD                               __pbssBIGRAM 2790  
             __end_of_EUSART_Transmit_ISR 24F0                            ??_startRelMove 0049  
                i1_do_I2C_DO_ADDRESS_NACK 2613                    __end_of_TMR2_StopTimer 21A4  
                          setDrvGain@gain 00B5                               __pbssCOMMON 007D  
                                ?_LEDsPwr 0044                                 ___latbits 0003  
                    _i2c1_driver_resetBus 1800                              _drv_write_DC 1C26  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK4 0240                           fifo_check@reply 00B7  
       __size_ofi1_do_I2C_DO_NACK_RESTART 0004                  __size_of_TMR2_Initialize 0012  
                               _do_I2C_RX 19D3                 ?i1_do_I2C_DO_NACK_RESTART 0070  
                               _do_I2C_TX 1DC5                           ?_calcHeaterPins 0070  
                 ??i1_do_I2C_DO_NACK_STOP 0070                                 _doAbsMove 00C0  
                __size_of_setHeaterToggle 007D                              _isdigit$2153 0031  
                     ??_setDrvPiezoOnTime 00BF                             ?_zeroPosition 00B5  
                           LEDsOn@LEDpins 0044            __size_of_do_I2C_SEND_ADR_WRITE 000B  
           __size_ofi1_i2c1_driver_TXData 0005                __end_of_EUSART_Receive_ISR 2499  
           __end_of_do_I2C_SEND_ADR_WRITE 2329                __size_of_EUSART_Initialize 001A  
               __size_of_i2c1_driver_open 000A                                sin@coeff_a 2940  
                              sin@coeff_b 2988                              doMove@t_1565 00C4  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
         _do_I2C_SEND_ADR_WRITE$intlevel0 2322          __size_ofi1_do_I2C_SEND_ADR_WRITE 0007  
                     __end_of_EUSART_Read 256C              __size_of_TMR0_Load8bitPeriod 0005  
                               _doRelMove 0D9D                           _do_I2C_TX_EMPTY 2771  
                       parseCmd@cmdString 0047                     _TMR0_InterruptHandler 016C  
                               __pnvBANK0 005E                                 __pnvBANK2 016C  
                               __pnvBANK3 01D9                    _LED_setBrightnessRange 0BDE  
                 ??i1_i2c1_driver_sendACK 0070                  __size_of_TMR0_StartTimer 0003  
                       __size_of_drv_init 0063                         __size_of_drv_read 0047  
                         ?_TMR0_StopTimer 0070                     ??_i2c_busCollisionISR 0070  
           __size_ofi1_i2c1_driver_isNACK 000C                    _PIN_MANAGER_Initialize 1831  
                 ??i1_i2c1_driver_restart 0070                                 _getActive 1B3E  
                       __size_of_parseCmd 01A2                              setDrvPeak@pk 00B5  
                     __end_of_drv_address 2A68                      EUSART_Read@readValue 0032  
                 ??i1_i2c1_driver_startRX 0070                            ??_do_I2C_RESET 0031  
                i1_send_2length_2bytes_IK 23FE                       __end_of_LED_getData 0892  
                                ?___awdiv 0031                                 __ptext100 1C76  
                               __ptext101 1615                                 __ptext110 23B0  
                               __ptext102 21BF                                 __ptext111 22BD  
                               __ptext103 21BC                                 __ptext120 252C  
                               __ptext112 23D5                                 __ptext104 25AD  
                               __ptext121 21B9                                 __ptext113 22B4  
                               __ptext105 2416                                 __ptext130 225B  
                               __ptext122 18CF                                 __ptext114 2263  
                               __ptext106 1D6D                                 __ptext131 21EB  
                               __ptext123 1BD8                                 __ptext115 1831  
                               __ptext107 27A0                                 __ptext140 2215  
                               __ptext132 21E7                                 __ptext124 2613  
                               __ptext116 22E1                                 __ptext108 23E9  
                               __ptext141 21B3                                 __ptext133 21E3  
                               __ptext125 21F7                                 __ptext117 242E  
                               __ptext109 21FB                                  ?___ftadd 00A6  
                               __ptext150 21A7                                 __ptext142 21DB  
                               __ptext134 21DF                                 __ptext126 21F3  
                               __ptext118 254C                                 __ptext151 21A4  
                               __ptext143 2199                                 __ptext135 221A  
                               __ptext127 21EF                                 __ptext160 1A5E  
                               __ptext152 2366                                 __ptext144 21B0  
                               __ptext136 224D                                 __ptext128 2229  
                               __ptext161 26CA                                 __ptext153 22AB  
                               __ptext145 219C                                 __ptext137 271C  
                               __ptext129 2254                                 __ptext162 220B  
                               __ptext154 2210                                 __ptext146 219A  
                               __ptext138 21B6                                 __ptext163 219E  
                               __ptext155 21A1                                 __ptext147 21AD  
                               __ptext139 2329                                 __ptext164 24D2  
                               __ptext156 2359                                 __ptext148 21AA  
                               __ptext165 247D                                 __ptext157 1898  
                               __ptext149 21D7                                 __ptext158 258C  
                               __ptext159 23FE               __end_of_i2c_masterOperation 265B  
                                ?___lldiv 0031                                  ?___ftmul 003F  
                                ?___llmod 003F                                  ?___fttol 00AF  
                               _commCheck 0A3A                 __end_of_setDrvPiezoOnTime 1E79  
                ??_do_I2C_DO_ADDRESS_NACK 0031               _i2c1_driver_busCollisionISR 016A  
                            _eusartRxHead 0058                       __size_of_setDrvGain 0043  
       __size_of_send_2bytes_latchless_IK 0030                              _eusartTxHead 007D  
                     __size_of_setDrvPeak 0013                              _eusartRxTail 0057  
               ?_send_2bytes_latchless_IK 0031                              _eusartTxTail 0059  
                         doAbsMove@i_1580 00CC                           doAbsMove@i_1582 00CA  
                   __end_of_do_I2C_DO_ACK 2293                     _setLEDBrightnessRange 24F0  
                             ??i1_i2c_ISR 0075              ??_INTERRUPT_InterruptManager 007C  
                               __pswtext1 2000                ??_do_I2C_SEND_RESTART_READ 0031  
                   ?_i2c1_driver_sendNACK 0070           __end_ofi1_i2c1_driver_getRXData 21B6  
                 _eusartTxBufferRemaining 005E                                  ?_execCmd 0070  
                ??i1_do_I2C_SEND_ADR_READ 0071                          ??_mssp1_clearIRQ 0031  
                                _BAUD1CON 019F                           ??i1_returnReset 0071  
                                ?_isdigit 0070                    LED_testComm@readResult 00CC  
                         ?_TMR2_StopTimer 0070                     ?_i2c1_driver_resetBus 0070  
      __size_of_do_I2C_SEND_RESTART_WRITE 0008                                 _first_top 0156  
                             _getMoveMask 1B8B                   send_last_2bytes_IK@data 0031  
                           ??_setMoveMask 0049                     __end_of_drv_fifo_sine 10F4  
                               _drv_reset 22FF                         parseCmd@paramIter 0048  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                               _drv_write 265B                                ?_doAbsMove 0070  
                       _i2c1_driver_start 21C2                            ??_zeroPosition 00B7  
             send_2length_2bytes_IK@data1 003C               send_2length_2bytes_IK@data2 003E  
                               _setLEDPwr 250E            send_last_2bytes_IK@topOrBottom 0034  
                                ?_stricmp 0033                                  ?_strcspn 0038  
                                ?_toupper 0070                               _getPosition 190E  
                 __size_ofi1_mssp1_setIRQ 0003                            __size_of_putch 0006  
                       _i2c_ISR$intlevel0 26A8                        ?_i2c1_driver_start 0070  
                          _eusartRxBuffer 01A0                             zeroPosition@i 0049  
                               _setActive 159F                         ??_TMR0_Initialize 0033  
                          _eusartTxBuffer 01A8                            ___wmul@product 0035  
                                _LATAbits 010C                                  _LATBbits 010D  
                                _LATCbits 010E                    ?i1_send_last_2bytes_IK 0070  
                              ?_doRelMove 0070                  ??_send_2length_2bytes_IK 0043  
                     __size_of_returnStop 0006                 i1send_last_2bytes_IK@data 0070  
                               clear_ram0 2341                                  _PIE0bits 0090  
                                _PIE1bits 0091                  __size_of_TMR2_StartTimer 0003  
             __end_of_TMR0_Write8bitTimer 2210                       ??_i2c1_driver_start 0031  
                                i1_LEDsOn 258C       __size_of_INTERRUPT_InterruptManager 004C  
                                _LEDpower 2A5F                ??_TMR0_SetInterruptHandler 0033  
                                _PIR0bits 0010                                  _PIR1bits 0011  
                              ?_getActive 00B5                    _currentPositions_steps 2790  
                      _heater_pre_time_ms 00ED                  LED_testComm@oldConfigReg 00CE  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
                                _TMR0_ISR 2359                                  _TMR2_ISR 2366  
                              ?_commCheck 00D2                                  _SSP1STAT 0214  
              __end_ofi1_i2c1_driver_stop 21B0                              ??_fifo_check 004D  
                       ___wmul@multiplier 0031                         ?_do_I2C_SEND_STOP 0070  
             ?i1_do_I2C_SEND_RESTART_READ 0070                                printf@flag 00B2  
                              printf@prec 00AC            ??_TMR2_DefaultInterruptHandler 0071  
       __size_of_TMR2_SetInterruptHandler 0009                  __size_of_TMR2_WriteTimer 0005  
               __end_of_i2c1_driver_start 21C5                             ??_returnReset 0032  
                      ??_do_I2C_SEND_STOP 0031                 ?_TMR2_SetInterruptHandler 0031  
             __size_of_i2c1_driver_TXData 0006                                ?_drv_reset 0070  
                        __size_of_LEDsPwr 0064         __end_of_do_I2C_SEND_RESTART_WRITE 227B  
                              ?_drv_write 0049                               _EUSART_Read 254C  
                 __end_of_do_I2C_TX_EMPTY 27A0                         doAbsMove@allThere 00C6  
       send_2length_2bytes_IK@latch_start 0040       i1send_2length_2bytes_IK@latch_start 0024  
                              ?_setLEDPwr 00B5                          ??_LED_readConfig 0049  
                    __end_of_startAbsMove 24D2              __size_of_do_I2C_SEND_RESTART 0008  
             __size_of_i2c1_driver_isNACK 000D                    LED_getData@topOrBottom 00B5  
                 _do_I2C_DO_ACK$intlevel0 228F                                  _i2c_open 1AF2  
                              ?_setActive 00B5                       __end_of_setMoveMask 152A  
                           ?i1_returnStop 0070                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0033                               _drv_address 2A67  
                       ??_setHeaterToggle 00B9                       _do_I2C_DO_NACK_STOP 2293  
                             _LED_getData 080B                          __size_of_i2c_ISR 0026  
                      __end_of_fifo_check 23B0                           i1LEDsOn@LEDpins 0027  
                           drv_write@data 0049                             drv_write_DC@i 00BD  
                           drv_write@buff 004C                      __end_of_startRelMove 247D  
                            ?_do_I2C_IDLE 0070                              ?_do_I2C_RCEN 0070  
                      _LED_test_openshort 1707                   ?i1_i2c1_driver_sendNACK 0070  
                 ??_OSCILLATOR_Initialize 0031                __size_of_setDrvPiezoOnTime 005B  
                  ?_setLEDBrightnessRange 00B5                         ??_TMR0_StartTimer 0031  
                     _i2c1_driver_sendACK 21FF                          __size_of___awdiv 0052  
                        __size_of___ftadd 011A           __size_of_do_I2C_DO_ADDRESS_NACK 002B  
        i1send_last_2bytes_IK@latch_start 0072                          __size_of___lldiv 0053  
                        __size_of___ftmul 00E1                       i2c1_driver_TXData@d 0031  
                        __size_of___llmod 0043                          __size_of___fttol 0087  
                  ??_i2c1_driver_sendNACK 0031                                  ___awtoft 25CE  
                 ?i1_i2c1_driver_resetBus 0070                                  ___ftpack 1F9B  
        ??_i2c1_driver_setBusCollisionISR 0033           ?_i2c1_driver_setBusCollisionISR 0031  
                           ??i1_do_I2C_RX 0070                             ??i1_do_I2C_TX 0071  
      _do_I2C_SEND_RESTART_READ$intlevel0 226F                       _i2c1_driver_restart 21C5  
                               parseCmd@p 004A                                 parseCmd@s 0045  
             __size_ofi1_do_I2C_SEND_STOP 0004                             LEDsPwr@pwrAll 00A0  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 21CB  
                     ?_LED_test_openshort 00B5              __end_of_do_I2C_SEND_ADR_READ 2341  
                  ??_i2c1_driver_resetBus 0031           __size_ofi1_do_I2C_SEND_ADR_READ 0008  
                    _demoHeaterToggle_bot 0142                          __size_of_execCmd 01BF  
                ?_TMR2_LoadPeriodRegister 0070                      _demoHeaterToggle_top 0146  
                              _T0CON0bits 0017                          __size_of_isdigit 000F  
                                _demoLong 005A                              _mssp1_setIRQ 21D1  
                             ??_do_I2C_RX 0031                               ??_do_I2C_TX 0032  
                             ??_doAbsMove 0240                                  __ptext10 2499  
                                __ptext11 0B01                                  __ptext20 152A  
                                __ptext12 1ED4                                  __ptext21 09A2  
                                __ptext13 22A3                                  __ptext30 1CC8  
                                __ptext22 2462                                  __ptext14 1AF2  
                                __ptext31 2224                                  __ptext23 24B5  
                                __ptext15 22D8                                  __ptext40 1990  
                                __ptext32 1E1E                                  __ptext24 14B7  
                                __ptext16 22CF                                  __ptext41 159F  
                                __ptext33 0892                                  __ptext25 250E  
                                __ptext17 2309                                  __ptext50 26F3  
                                __ptext42 190E                                  __ptext34 0CBC  
                                __ptext26 1F37                                  __ptext18 22FF  
                                __ptext51 080B                                  __ptext43 1B8B  
                                __ptext35 06D1                                  __ptext27 24F0  
                                __ptext19 0370                                  __ptext60 2241  
                                __ptext52 0D9D                                  __ptext44 25F0  
                                __ptext36 25CE                                  __ptext28 1783  
                                __ptext61 267F                                  __ptext53 00C0  
                                __ptext45 1B3E                                  __ptext37 1F9B  
                                __ptext29 1E79                                  __ptext70 21D4  
                                __ptext62 194D                                  __ptext54 0919  
                                __ptext46 0A3A                                  __ptext38 221F  
                                __ptext71 19D3                                  __ptext63 1D1A  
                                __ptext55 1C26                                  __ptext47 1707  
                                __ptext39 23C2                                  __ptext80 2283  
                                __ptext72 1DC5                                  __ptext64 07EB  
                                __ptext56 239F                                  __ptext48 168E  
                                __ptext81 227B                                  __ptext73 2746  
                                __ptext65 2637                                  __ptext57 1A17  
                                __ptext49 0BDE                                  __ptext90 21CE  
                                __ptext82 2273                                  __ptext74 229B  
                                __ptext66 22F5                                  __ptext58 265B  
                                __ptext91 2203                                  __ptext83 226B  
                                __ptext75 2293                                  __ptext67 0800  
                                __ptext59 0ECE                                  __ptext92 1800  
                                __ptext84 22C6                                  __ptext76 228B  
                                __ptext68 13CC                                  __ptext93 21CB  
                                __ptext85 2313                                  __ptext77 22EB  
                                __ptext69 26A4                                  __ptext94 2235  
                                __ptext86 2771                                  __ptext78 231E  
                                __ptext95 222F                                  __ptext87 21D1  
                                __ptext79 2335                                  __ptext96 21C8  
                                __ptext88 2373                                  __ptext97 21C5  
                                __ptext89 223B                                  __ptext98 21FF  
                                __ptext99 21C2                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                              ??_setDrvGain 00B7  
                            ??_setDrvPeak 0049                  __end_ofi1_mssp1_clearIRQ 21BC  
            send_2bytes_latchless_IK@data 0031                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 231E                       i1LEDsOn@topOrBottom 002B  
                        __size_of_stricmp 0034                          __size_of_strcspn 0030  
                        __size_of_toupper 0010                            ??i1_returnStop 0071  
                 i1_do_I2C_SEND_ADR_WRITE 2254                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 223B                                  _drv_init 1ED4  
                                _drv_read 1A17                                  _drv_sine 12DA  
                        _i2c1_driver_open 2309                          _i2c1_driver_stop 21C8  
                           __size_of_atoi 0071                             __size_of_main 006F  
                    ?_i2c1_driver_startRX 0070                                  _errorOut 0166  
                    ??_LED_test_openshort 00B9                                  _readdata 01C5  
          __size_of_i2c1_driver_getRXData 0003                               ??_doRelMove 00C6  
           __end_of_i2c1_driver_getRXData 21D1                                  _parseCmd 052F  
         __size_of_send_2length_2bytes_IK 0018      __end_of_TMR0_DefaultInterruptHandler 18CF  
   __size_of_TMR0_DefaultInterruptHandler 0037              _TMR0_DefaultInterruptHandler 1898  
                __size_of_getMotionStatus 0023                 __size_of_setHeaterPreTime 005B  
                 ??i1_do_I2C_SEND_RESTART 0070          __size_ofi1_i2c1_driver_getRXData 0003  
                                _moveMask 00D9                   i2c_masterOperation@read 0038  
                             ??_getActive 0049                                _RC1STAbits 019D  
    __size_ofi1_do_I2C_SEND_RESTART_WRITE 0004            __end_ofi1_i2c1_driver_sendNACK 21DF  
                              _RB5PPSbits 0E9D                          setMoveMask@onOff 00B7  
                              _RB6PPSbits 0E9E                                  int$flags 007E  
              ??i1_do_I2C_DO_ADDRESS_NACK 0070                                _RB7PPSbits 0E9F  
                                atoi@sign 003B                               ??_commCheck 00D4  
        __end_ofi1_do_I2C_DO_NACK_RESTART 21FB                         _LED_configReg_bot 014A  
          __end_ofi1_i2c1_driver_resetBus 219A                      __end_of_zeroPosition 159F  
                       _LED_configReg_top 014E                         ??_TMR2_StartTimer 0031  
      __end_of_INTERRUPT_InterruptManager 0050                _INTERRUPT_InterruptManager 0004  
                               printf@val 00AE                              _SSP1STATbits 0214  
                      __end_of_setDrvGain 19D3          __end_of_do_I2C_SEND_RESTART_READ 2273  
                      __end_of_setDrvPeak 23D5                              ??_returnStop 0032  
                                execCmd@s 00D5                     ??_do_I2C_DO_NACK_STOP 0031  
                        ??_calcHeaterPins 0031                       _TMR0_Load8bitPeriod 221F  
               mssp1_waitForEvent@timeout 0031            __size_of_i2c1_driver_setI2cISR 0009  
           __end_of_i2c1_driver_setI2cISR 22E1                                _INTCONbits 000B  
            __size_of_send_last_2bytes_IK 0058                               _NVMCON1bits 0895  
              __size_of_i2c1_driver_start 0003                               ??_drv_reset 00B5  
                             _setMoveMask 14B7                       __end_ofi1_do_I2C_RX 190E  
                          __pstringtext10 2940                            __pstringtext11 2988  
                          __pstringtext20 28EE                            __pstringtext12 2828  
                     __end_ofi1_do_I2C_TX 1C26                            __pstringtext21 28FF  
                          __pstringtext13 2847                            __pstringtext30 29A0  
                          __pstringtext22 2910                            __pstringtext14 2865  
                          __pstringtext31 29AB                            __pstringtext23 2920  
                          __pstringtext15 2881                            __pstringtext40 29FB  
                          __pstringtext32 29B6                            __pstringtext24 2930  
                          __pstringtext16 289B                            __pstringtext41 2A03  
                          __pstringtext33 29C1                            __pstringtext25 294F  
                          __pstringtext17 28B4                            __pstringtext50 2A3A  
                          __pstringtext42 2A0B                            __pstringtext34 29CA  
                          __pstringtext26 295E                            __pstringtext18 28CB  
                          __pstringtext51 2A3F                            __pstringtext43 2A13  
                          __pstringtext35 29D3                            __pstringtext27 296D  
                          __pstringtext19 28DD                            __pstringtext60 2A65  
                          __pstringtext52 2A43                            __pstringtext44 2A1A  
                          __pstringtext36 29DB                            __pstringtext28 297B  
                          __pstringtext61 0000                            __pstringtext53 2A47  
                          __pstringtext45 2A21                            __pstringtext37 29E3  
                          __pstringtext29 2994                            __pstringtext54 2A4B  
                          __pstringtext46 2A26                            __pstringtext38 29EB  
                          __pstringtext55 2A4F                            __pstringtext47 2A2B  
                          __pstringtext39 29F3                            __pstringtext56 2A59  
                          __pstringtext48 2A30                            __pstringtext57 2A5C  
                          __pstringtext49 2A35                            __pstringtext58 2A61  
                          __pstringtext59 2A63                                  isdigit@c 0032  
                             ??_drv_write 004A                  __size_ofi1_do_I2C_DO_ACK 0004  
                             ??_setLEDPwr 004E                     ??_i2c1_driver_sendACK 0031  
                        ?_do_I2C_TX_EMPTY 0070                            i1_mssp1_setIRQ 21B6  
                 __size_of_WDT_Initialize 0004                    _do_I2C_DO_ADDRESS_NACK 2746  
          __size_ofi1_do_I2C_DO_NACK_STOP 0004                                  intlevel1 0000  
           __end_ofi1_do_I2C_DO_NACK_STOP 21F7                    _do_I2C_RESET$intlevel0 2317  
                        ??_TMR0_StopTimer 0070                     ??_i2c1_driver_restart 0031  
                       ??_TMR2_WriteTimer 0070                   ?_LED_setBrightnessRange 0044  
                             ??_setActive 00B9                                 strchr@chr 0033  
                   ??_i2c1_driver_startRX 0031                                 strchr@ptr 0031  
              ??i1_send_2length_2bytes_IK 007B                          ___lldiv@dividend 0035  
                 ?_PIN_MANAGER_Initialize 0070                   __size_of_i2c_setAddress 0008  
                    ?_TMR0_Load8bitPeriod 0070              ??i1_send_2bytes_latchless_IK 0072  
                  i1_do_I2C_SEND_ADR_READ 225B                         __CFG_CLKOUTEN$OFF 0000  
                               stricmp@s1 0038                                 stricmp@s2 0033  
                               strcspn@s1 003E                                 strcspn@s2 0038  
                      __end_of_returnStop 2235                              getMoveMask@i 00B7  
     __size_ofi1_do_I2C_SEND_RESTART_READ 0004            __size_ofi1_i2c1_driver_sendACK 0004  
           ?_TMR0_DefaultInterruptHandler 0070             __end_ofi1_i2c1_driver_sendACK 21DB  
             __size_of_mssp1_IRQisEnabled 000A            __size_ofi1_i2c1_driver_restart 0003  
                                printf@ap 00B3             __end_ofi1_i2c1_driver_restart 21AD  
                      _EUSART_Receive_ISR 247D               __size_of_mssp1_waitForEvent 000B  
          __size_ofi1_i2c1_driver_startRX 0003              __end_ofi1_i2c1_driver_TXData 221A  
           __end_ofi1_i2c1_driver_startRX 21B3                          ??_TMR2_StopTimer 0070  
         __end_of_TMR2_LoadPeriodRegister 2229                             __pstringtext1 1000  
                           __pstringtext2 11E8                             __pstringtext3 12DA  
                           __pstringtext4 2800                             __pstringtext5 2A53  
                           __pstringtext6 2A56                             __pstringtext7 2A5F  
                           __pstringtext8 2A67                             __pstringtext9 10F4  
                 __size_ofi1_do_I2C_RESET 0007                    _send_2length_2bytes_IK 2416  
                     ?_EUSART_Receive_ISR 0070              __end_ofi1_i2c1_driver_isNACK 2335  
                              _TMR0_RANGE 2A56                          ___lldiv@quotient 003A  
                         _TMR0_Initialize 23D5                                  stricmp@r 0037  
                              _TMR2_RANGE 2A53                                  strcspn@i 003C  
       send_2length_2bytes_IK@topOrBottom 0041       i1send_2length_2bytes_IK@topOrBottom 0025  
                  __size_of_i2c_setBuffer 0015                              ?_getMoveMask 00B5  
                   __size_of_startAbsMove 001D                                  toupper@c 0032  
                  __end_ofi1_mssp1_setIRQ 21B9                               _returnReset 2235  
                                strtok@s1 0044                                  strtok@s2 003F  
                                strspn@s1 003E                                  strspn@s2 0038  
        _do_I2C_DO_NACK_RESTART$intlevel0 229F                                  strtok@sp 0054  
               ??i1_do_I2C_SEND_ADR_WRITE 0071                  __size_of_main_initialize 00DD  
          __end_of_LED_setBrightnessRange 0CBC                              getPosition@a 00B5  
                            ?_getPosition 00B5                    __size_ofi1_do_I2C_IDLE 0005  
                  __size_ofi1_do_I2C_RCEN 0006                   ??i1_send_last_2bytes_IK 0075  
                      EUSART_Write@txData 0032              __size_of_EUSART_Transmit_ISR 001E  
          __end_of_PIN_MANAGER_Initialize 1864               __end_of_i2c_busCollisionISR 21AA  
                   __size_of_startRelMove 001B                     ??_TMR0_Load8bitPeriod 0031  
                     setMoveMask@probeNum 00B5                      ??_EUSART_Receive_ISR 0070  
                   _TMR2_InterruptHandler 01D9                     _do_I2C_SEND_ADR_WRITE 231E  
                    _do_I2C_SEND_ADR_READ 2335  
